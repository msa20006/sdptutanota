{"version":3,"file":"GroupUtils-0ZkLIAeC.js","names":["groupInfo: GroupInfo","user: User","groupType: GroupType"],"sources":["../../src/common/api/common/utils/GroupUtils.ts"],"sourcesContent":["import type { GroupInfo, GroupMembership, User } from \"../../entities/sys/TypeRefs.js\"\nimport { GroupType } from \"../TutanotaConstants\"\nimport { lang, Translation } from \"../../../misc/LanguageViewModel.js\"\n\nexport function getEnabledMailAddressesForGroupInfo(groupInfo: GroupInfo): string[] {\n\tlet aliases = groupInfo.mailAddressAliases.filter((alias) => alias.enabled).map((alias) => alias.mailAddress)\n\tif (groupInfo.mailAddress) aliases.unshift(groupInfo.mailAddress)\n\treturn aliases\n}\n\n/**\n * Provides the memberships of the user with the given type. In case of area groups all groups are returned.\n */\nexport function getUserGroupMemberships(user: User, groupType: GroupType): GroupMembership[] {\n\tif (groupType === GroupType.User) {\n\t\treturn [user.userGroup]\n\t} else {\n\t\treturn user.memberships.filter((m) => m.groupType === groupType)\n\t}\n}\n\n/**\n * Provides the name if available, otherwise the email address if available, otherwise an empty string.\n */\nexport function getGroupInfoDisplayName(groupInfo: GroupInfo): string {\n\tif (groupInfo.name) {\n\t\treturn groupInfo.name\n\t} else if (groupInfo.mailAddress) {\n\t\treturn groupInfo.mailAddress\n\t} else {\n\t\treturn \"\"\n\t}\n}\n\nexport function compareGroupInfos(a: GroupInfo, b: GroupInfo): number {\n\treturn getGroupInfoDisplayName(a).localeCompare(getGroupInfoDisplayName(b))\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIO,SAAS,oCAAoCA,WAAgC;CACnF,IAAI,UAAU,UAAU,mBAAmB,OAAO,CAAC,UAAU,MAAM,QAAQ,CAAC,IAAI,CAAC,UAAU,MAAM,YAAY;AAC7G,KAAI,UAAU,YAAa,SAAQ,QAAQ,UAAU,YAAY;AACjE,QAAO;AACP;AAKM,SAAS,wBAAwBC,MAAYC,WAAyC;AAC5F,KAAI,cAAc,UAAU,KAC3B,QAAO,CAAC,KAAK,SAAU;IAEvB,QAAO,KAAK,YAAY,OAAO,CAAC,MAAM,EAAE,cAAc,UAAU;AAEjE;AAKM,SAAS,wBAAwBF,WAA8B;AACrE,KAAI,UAAU,KACb,QAAO,UAAU;SACP,UAAU,YACpB,QAAO,UAAU;IAEjB,QAAO;AAER"}