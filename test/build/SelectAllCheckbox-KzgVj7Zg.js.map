{"version":3,"file":"SelectAllCheckbox-KzgVj7Zg.js","names":["attrs: SelectAllCheckboxAttrs","selectAll: boolean"],"sources":["../../src/common/gui/SelectAllCheckbox.ts"],"sourcesContent":["import { pureComponent } from \"./base/PureComponent.js\"\nimport m from \"mithril\"\nimport { lang } from \"../misc/LanguageViewModel.js\"\n\nexport interface SelectAllCheckboxAttrs {\n\tstyle?: Record<string, any>\n\tselectAll: () => unknown\n\tselectNone: () => unknown\n\tselected: boolean\n}\n\nexport const SelectAllCheckbox = pureComponent((attrs: SelectAllCheckboxAttrs) => {\n\treturn m(\n\t\t\".flex.items-center.pl-s.mlr.button-height\",\n\t\t{ style: attrs.style },\n\t\tm(\"input.checkbox\", {\n\t\t\ttype: \"checkbox\",\n\t\t\t\"data-testid\": \"cb:selectAllLoaded_action\",\n\t\t\ttitle: lang.get(\"selectAllLoaded_action\"),\n\t\t\t// I'm not sure this is the best condition but it will do for now\n\t\t\tchecked: attrs.selected,\n\t\t\tonchange: ({ target }: Event) => toggleSelectAll(attrs, (target as HTMLInputElement).checked),\n\t\t}),\n\t)\n})\n\nfunction toggleSelectAll(attrs: SelectAllCheckboxAttrs, selectAll: boolean): void {\n\tif (selectAll) {\n\t\tattrs.selectAll()\n\t} else {\n\t\tattrs.selectNone()\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAWa,oBAAoB,cAAc,CAACA,UAAkC;AACjF,QAAO,gBACN,6CACA,EAAE,OAAO,MAAM,MAAO,GACtB,gBAAE,kBAAkB;EACnB,MAAM;EACN,eAAe;EACf,OAAO,KAAK,IAAI,yBAAyB;EAEzC,SAAS,MAAM;EACf,UAAU,CAAC,EAAE,QAAe,KAAK,gBAAgB,OAAQ,OAA4B,QAAQ;CAC7F,EAAC,CACF;AACD,EAAC;AAEF,SAAS,gBAAgBA,OAA+BC,WAA0B;AACjF,KAAI,UACH,OAAM,WAAW;IAEjB,OAAM,YAAY;AAEnB"}