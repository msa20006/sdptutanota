{"version":3,"file":"HtmlEditor-DkqWVGt0.js","names":["size","_: ClipboardEvent","minHeight: number | null","sanitizer: SanitizerFn","staticLineAmount: number | null","callback: (...args: Array<any>) => any","minHeight: number","show: boolean","numberOfLines: number","createsLists: boolean","domElement: HTMLElement","SquireEditor","html: string","e: TextPasteEvent","_: CustomEvent<void>","enabled: boolean","readOnly: boolean","html: string | null","state: boolean","style: Style","pathSegments: string[]","srcAttr: string","attrs?: Record<string, string>","type: string","handler: (arg0: Event) => void","range: Range","vnode: VnodeDOM<any>","attrs: RichTextToolbarAttrs","style: Style","title: string","icon: Icons","editor: Editor","listing: Listing","title: MaybeTranslation","click: () => void","isSelected: () => boolean","attrs","alignment: Alignment","title: TranslationKey","dom: HTMLElement","appear: boolean","current: number","previous: number","HTML_EDITOR_LINE_HEIGHT: number","label?: MaybeTranslation","injections?: () => Children","mode: HtmlEditorMode","label: MaybeTranslation","height: number","height","numberOfLines: number","placeholderId: TranslationKey","html: string","show: boolean","enabled: boolean","readOnly: boolean","monospace: boolean","attrs: Omit<RichTextToolbarAttrs, \"editor\">"],"sources":["../../libs/squire-raw.mjs","../../src/common/gui/editor/Editor.ts","../../src/common/gui/base/RichTextToolbar.ts","../../src/common/gui/editor/HtmlEditor.ts"],"sourcesContent":["// source/node/TreeIterator.ts\nvar SHOW_ELEMENT = 1;\nvar SHOW_TEXT = 4;\nvar SHOW_ELEMENT_OR_TEXT = 5;\nvar always = () => true;\nvar TreeIterator = class {\n\tconstructor(root, nodeType, filter) {\n\t\tthis.root = root;\n\t\tthis.currentNode = root;\n\t\tthis.nodeType = nodeType;\n\t\tthis.filter = filter || always;\n\t}\n\n\tisAcceptableNode(node) {\n\t\tconst nodeType = node.nodeType;\n\t\tconst nodeFilterType = nodeType === Node.ELEMENT_NODE ? SHOW_ELEMENT : nodeType === Node.TEXT_NODE ? SHOW_TEXT : 0;\n\t\treturn !!(nodeFilterType & this.nodeType) && this.filter(node);\n\t}\n\n\tnextNode() {\n\t\tconst root = this.root;\n\t\tlet current = this.currentNode;\n\t\tlet node;\n\t\twhile (true) {\n\t\t\tnode = current.firstChild;\n\t\t\twhile (!node && current) {\n\t\t\t\tif (current === root) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tnode = current.nextSibling;\n\t\t\t\tif (!node) {\n\t\t\t\t\tcurrent = current.parentNode;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!node) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (this.isAcceptableNode(node)) {\n\t\t\t\tthis.currentNode = node;\n\t\t\t\treturn node;\n\t\t\t}\n\t\t\tcurrent = node;\n\t\t}\n\t}\n\n\tpreviousNode() {\n\t\tconst root = this.root;\n\t\tlet current = this.currentNode;\n\t\tlet node;\n\t\twhile (true) {\n\t\t\tif (current === root) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tnode = current.previousSibling;\n\t\t\tif (node) {\n\t\t\t\twhile (current = node.lastChild) {\n\t\t\t\t\tnode = current;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode = current.parentNode;\n\t\t\t}\n\t\t\tif (!node) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (this.isAcceptableNode(node)) {\n\t\t\t\tthis.currentNode = node;\n\t\t\t\treturn node;\n\t\t\t}\n\t\t\tcurrent = node;\n\t\t}\n\t}\n\n\t// Previous node in post-order.\n\tpreviousPONode() {\n\t\tconst root = this.root;\n\t\tlet current = this.currentNode;\n\t\tlet node;\n\t\twhile (true) {\n\t\t\tnode = current.lastChild;\n\t\t\twhile (!node && current) {\n\t\t\t\tif (current === root) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tnode = current.previousSibling;\n\t\t\t\tif (!node) {\n\t\t\t\t\tcurrent = current.parentNode;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!node) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (this.isAcceptableNode(node)) {\n\t\t\t\tthis.currentNode = node;\n\t\t\t\treturn node;\n\t\t\t}\n\t\t\tcurrent = node;\n\t\t}\n\t}\n};\n\n// source/Constants.ts\nvar ELEMENT_NODE = 1;\nvar TEXT_NODE = 3;\nvar DOCUMENT_FRAGMENT_NODE = 11;\nvar ZWS = \"\\u200B\";\nvar ua = navigator.userAgent;\nvar isMac = /Mac OS X/.test(ua);\nvar isWin = /Windows NT/.test(ua);\nvar isIOS = /iP(?:ad|hone|od)/.test(ua) || isMac && !!navigator.maxTouchPoints;\nvar isAndroid = /Android/.test(ua);\nvar isGecko = /Gecko\\//.test(ua);\nvar isLegacyEdge = /Edge\\//.test(ua);\nvar isWebKit = !isLegacyEdge && /WebKit\\//.test(ua);\nvar ctrlKey = isMac || isIOS ? \"Meta-\" : \"Ctrl-\";\nvar cantFocusEmptyTextNodes = isWebKit;\nvar supportsInputEvents = \"onbeforeinput\" in document && \"inputType\" in new InputEvent(\"input\");\nvar notWS = /[^ \\t\\r\\n]/;\nvar indentedNodeAttributes = {\n\tclass: \"tutanota_indented\",\n\tstyle: \"margin-left: 40px\"\n}\n\n// source/node/Category.ts\nvar inlineNodeNames = /^(?:#text|A(?:BBR|CRONYM)?|B(?:R|D[IO])?|C(?:ITE|ODE)|D(?:ATA|EL|FN)|EM|FONT|HR|I(?:FRAME|MG|NPUT|NS)?|KBD|Q|R(?:P|T|UBY)|S(?:AMP|MALL|PAN|TR(?:IKE|ONG)|U[BP])?|TIME|U|VAR|WBR)$/;\nvar leafNodeNames = /* @__PURE__ */ new Set([\"BR\", \"HR\", \"IFRAME\", \"IMG\", \"INPUT\"]);\nvar UNKNOWN = 0;\nvar INLINE = 1;\nvar BLOCK = 2;\nvar CONTAINER = 3;\nvar cache = /* @__PURE__ */ new WeakMap();\nvar resetNodeCategoryCache = () => {\n\tcache = /* @__PURE__ */ new WeakMap();\n};\nvar isLeaf = (node) => {\n\treturn leafNodeNames.has(node.nodeName);\n};\nvar getNodeCategory = (node) => {\n\tswitch (node.nodeType) {\n\t\tcase TEXT_NODE:\n\t\t\treturn INLINE;\n\t\tcase ELEMENT_NODE:\n\t\tcase DOCUMENT_FRAGMENT_NODE:\n\t\t\tif (cache.has(node)) {\n\t\t\t\treturn cache.get(node);\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\treturn UNKNOWN;\n\t}\n\tlet nodeCategory;\n\tif (!Array.from(node.childNodes).every(isInline)) {\n\t\tnodeCategory = CONTAINER;\n\t} else if (inlineNodeNames.test(node.nodeName)) {\n\t\tnodeCategory = INLINE;\n\t} else {\n\t\tnodeCategory = BLOCK;\n\t}\n\tcache.set(node, nodeCategory);\n\treturn nodeCategory;\n};\nvar isInline = (node) => {\n\treturn getNodeCategory(node) === INLINE;\n};\nvar isBlock = (node) => {\n\treturn getNodeCategory(node) === BLOCK;\n};\nvar isContainer = (node) => {\n\treturn getNodeCategory(node) === CONTAINER;\n};\n\n// source/node/Node.ts\nvar createElement = (tag, props, children) => {\n\tconst el = document.createElement(tag);\n\tif (props instanceof Array) {\n\t\tchildren = props;\n\t\tprops = null;\n\t}\n\tif (props) {\n\t\tfor (const attr in props) {\n\t\t\tconst value = props[attr];\n\t\t\tif (value !== void 0) {\n\t\t\t\tel.setAttribute(attr, value);\n\t\t\t}\n\t\t}\n\t}\n\tif (children) {\n\t\tchildren.forEach((node) => el.appendChild(node));\n\t}\n\treturn el;\n};\nvar areAlike = (node, node2) => {\n\tif (isLeaf(node)) {\n\t\treturn false;\n\t}\n\tif (node.nodeType !== node2.nodeType || node.nodeName !== node2.nodeName) {\n\t\treturn false;\n\t}\n\tif (node instanceof HTMLElement && node2 instanceof HTMLElement) {\n\t\treturn node.nodeName !== \"A\" && node.className === node2.className && node.style.cssText === node2.style.cssText;\n\t}\n\treturn true;\n};\nvar hasTagAttributes = (node, tag, attributes) => {\n\tif (node.nodeName !== tag) {\n\t\treturn false;\n\t}\n\tfor (const attr in attributes) {\n\t\tif (!(\"getAttribute\" in node) || node.getAttribute(attr) !== attributes[attr]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n};\nvar getNearest = (node, root, tag, attributes) => {\n\twhile (node && node !== root) {\n\t\tif (hasTagAttributes(node, tag, attributes)) {\n\t\t\treturn node;\n\t\t}\n\t\tnode = node.parentNode;\n\t}\n\treturn null;\n};\nvar getNodeBeforeOffset = (node, offset) => {\n\tlet children = node.childNodes;\n\twhile (offset && node instanceof Element) {\n\t\tnode = children[offset - 1];\n\t\tchildren = node.childNodes;\n\t\toffset = children.length;\n\t}\n\treturn node;\n};\nvar getNodeAfterOffset = (node, offset) => {\n\tlet returnNode = node;\n\tif (returnNode instanceof Element) {\n\t\tconst children = returnNode.childNodes;\n\t\tif (offset < children.length) {\n\t\t\treturnNode = children[offset];\n\t\t} else {\n\t\t\twhile (returnNode && !returnNode.nextSibling) {\n\t\t\t\treturnNode = returnNode.parentNode;\n\t\t\t}\n\t\t\tif (returnNode) {\n\t\t\t\treturnNode = returnNode.nextSibling;\n\t\t\t}\n\t\t}\n\t}\n\treturn returnNode;\n};\nvar getLength = (node) => {\n\treturn node instanceof Element || node instanceof DocumentFragment ? node.childNodes.length : node instanceof CharacterData ? node.length : 0;\n};\nvar empty = (node) => {\n\tconst frag = document.createDocumentFragment();\n\tlet child = node.firstChild;\n\twhile (child) {\n\t\tfrag.appendChild(child);\n\t\tchild = node.firstChild;\n\t}\n\treturn frag;\n};\nvar detach = (node) => {\n\tconst parent = node.parentNode;\n\tif (parent) {\n\t\tparent.removeChild(node);\n\t}\n\treturn node;\n};\nvar replaceWith = (node, node2) => {\n\tconst parent = node.parentNode;\n\tif (parent) {\n\t\tparent.replaceChild(node2, node);\n\t}\n};\n\n// source/node/Whitespace.ts\nvar notWSTextNode = (node) => {\n\treturn node instanceof Element ? node.nodeName === \"BR\" : (\n\t\t\t// okay if data is 'undefined' here.\n\t\t\tnotWS.test(node.data)\n\t);\n};\nvar isLineBreak = (br, isLBIfEmptyBlock) => {\n\tlet block = br.parentNode;\n\twhile (isInline(block)) {\n\t\tblock = block.parentNode;\n\t}\n\tconst walker = new TreeIterator(\n\t\t\tblock,\n\t\t\tSHOW_ELEMENT_OR_TEXT,\n\t\t\tnotWSTextNode\n\t);\n\twalker.currentNode = br;\n\treturn !!walker.nextNode() || isLBIfEmptyBlock && !walker.previousNode();\n};\nvar removeZWS = (root, keepNode) => {\n\tconst walker = new TreeIterator(root, SHOW_TEXT);\n\tlet textNode;\n\tlet index;\n\twhile (textNode = walker.nextNode()) {\n\t\twhile ((index = textNode.data.indexOf(ZWS)) > -1 && // eslint-disable-next-line no-unmodified-loop-condition\n\t\t(!keepNode || textNode.parentNode !== keepNode)) {\n\t\t\tif (textNode.length === 1) {\n\t\t\t\tlet node = textNode;\n\t\t\t\tlet parent = node.parentNode;\n\t\t\t\twhile (parent) {\n\t\t\t\t\tparent.removeChild(node);\n\t\t\t\t\twalker.currentNode = parent;\n\t\t\t\t\tif (!isInline(parent) || getLength(parent)) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tnode = parent;\n\t\t\t\t\tparent = node.parentNode;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t} else {\n\t\t\t\ttextNode.deleteData(index, 1);\n\t\t\t}\n\t\t}\n\t}\n};\n\n// source/range/Boundaries.ts\nvar START_TO_START = 0;\nvar START_TO_END = 1;\nvar END_TO_END = 2;\nvar END_TO_START = 3;\nvar isNodeContainedInRange = (range, node, partial) => {\n\tconst nodeRange = document.createRange();\n\tnodeRange.selectNode(node);\n\tif (partial) {\n\t\tconst nodeEndBeforeStart = range.compareBoundaryPoints(END_TO_START, nodeRange) > -1;\n\t\tconst nodeStartAfterEnd = range.compareBoundaryPoints(START_TO_END, nodeRange) < 1;\n\t\treturn !nodeEndBeforeStart && !nodeStartAfterEnd;\n\t} else {\n\t\tconst nodeStartAfterStart = range.compareBoundaryPoints(START_TO_START, nodeRange) < 1;\n\t\tconst nodeEndBeforeEnd = range.compareBoundaryPoints(END_TO_END, nodeRange) > -1;\n\t\treturn nodeStartAfterStart && nodeEndBeforeEnd;\n\t}\n};\nvar moveRangeBoundariesDownTree = (range) => {\n\tlet {startContainer, startOffset, endContainer, endOffset} = range;\n\twhile (!(startContainer instanceof Text)) {\n\t\tlet child = startContainer.childNodes[startOffset];\n\t\tif (!child || isLeaf(child)) {\n\t\t\tif (startOffset) {\n\t\t\t\tchild = startContainer.childNodes[startOffset - 1];\n\t\t\t\tif (child instanceof Text) {\n\t\t\t\t\tlet textChild = child;\n\t\t\t\t\tlet prev;\n\t\t\t\t\twhile (!textChild.length && (prev = textChild.previousSibling) && prev instanceof Text) {\n\t\t\t\t\t\ttextChild.remove();\n\t\t\t\t\t\ttextChild = prev;\n\t\t\t\t\t}\n\t\t\t\t\tstartContainer = textChild;\n\t\t\t\t\tstartOffset = textChild.data.length;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tstartContainer = child;\n\t\tstartOffset = 0;\n\t}\n\tif (endOffset) {\n\t\twhile (!(endContainer instanceof Text)) {\n\t\t\tconst child = endContainer.childNodes[endOffset - 1];\n\t\t\tif (!child || isLeaf(child)) {\n\t\t\t\tif (child && child.nodeName === \"BR\" && !isLineBreak(child, false)) {\n\t\t\t\t\tendOffset -= 1;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tendContainer = child;\n\t\t\tendOffset = getLength(endContainer);\n\t\t}\n\t} else {\n\t\twhile (!(endContainer instanceof Text)) {\n\t\t\tconst child = endContainer.firstChild;\n\t\t\tif (!child || isLeaf(child)) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tendContainer = child;\n\t\t}\n\t}\n\trange.setStart(startContainer, startOffset);\n\trange.setEnd(endContainer, endOffset);\n};\nvar moveRangeBoundariesUpTree = (range, startMax, endMax, root) => {\n\tlet startContainer = range.startContainer;\n\tlet startOffset = range.startOffset;\n\tlet endContainer = range.endContainer;\n\tlet endOffset = range.endOffset;\n\tlet parent;\n\tif (!startMax) {\n\t\tstartMax = range.commonAncestorContainer;\n\t}\n\tif (!endMax) {\n\t\tendMax = startMax;\n\t}\n\twhile (!startOffset && startContainer !== startMax && startContainer !== root) {\n\t\tparent = startContainer.parentNode;\n\t\tstartOffset = Array.from(parent.childNodes).indexOf(\n\t\t\t\tstartContainer\n\t\t);\n\t\tstartContainer = parent;\n\t}\n\twhile (true) {\n\t\tif (endContainer === endMax || endContainer === root) {\n\t\t\tbreak;\n\t\t}\n\t\tif (endContainer.nodeType !== TEXT_NODE && endContainer.childNodes[endOffset] && endContainer.childNodes[endOffset].nodeName === \"BR\" && !isLineBreak(endContainer.childNodes[endOffset], false)) {\n\t\t\tendOffset += 1;\n\t\t}\n\t\tif (endOffset !== getLength(endContainer)) {\n\t\t\tbreak;\n\t\t}\n\t\tparent = endContainer.parentNode;\n\t\tendOffset = Array.from(parent.childNodes).indexOf(endContainer) + 1;\n\t\tendContainer = parent;\n\t}\n\trange.setStart(startContainer, startOffset);\n\trange.setEnd(endContainer, endOffset);\n};\nvar moveRangeBoundaryOutOf = (range, tag, root) => {\n\tlet parent = getNearest(range.endContainer, root, tag);\n\tif (parent && (parent = parent.parentNode)) {\n\t\tconst clone = range.cloneRange();\n\t\tmoveRangeBoundariesUpTree(clone, parent, parent, root);\n\t\tif (clone.endContainer === parent) {\n\t\t\trange.setStart(clone.endContainer, clone.endOffset);\n\t\t\trange.setEnd(clone.endContainer, clone.endOffset);\n\t\t}\n\t}\n\treturn range;\n};\n\n// source/node/MergeSplit.ts\nvar fixCursor = (node) => {\n\tlet fixer = null;\n\tif (node instanceof Text) {\n\t\treturn node;\n\t}\n\tif (isInline(node)) {\n\t\tlet child = node.firstChild;\n\t\tif (cantFocusEmptyTextNodes) {\n\t\t\twhile (child && child instanceof Text && !child.data) {\n\t\t\t\tnode.removeChild(child);\n\t\t\t\tchild = node.firstChild;\n\t\t\t}\n\t\t}\n\t\tif (!child) {\n\t\t\tif (cantFocusEmptyTextNodes) {\n\t\t\t\tfixer = document.createTextNode(ZWS);\n\t\t\t} else {\n\t\t\t\tfixer = document.createTextNode(\"\");\n\t\t\t}\n\t\t}\n\t} else if ((node instanceof Element || node instanceof DocumentFragment) && !node.querySelector(\"BR\")) {\n\t\tfixer = createElement(\"BR\");\n\t\tlet parent = node;\n\t\tlet child;\n\t\twhile ((child = parent.lastElementChild) && !isInline(child)) {\n\t\t\tparent = child;\n\t\t}\n\t\tnode = parent;\n\t}\n\tif (fixer) {\n\t\ttry {\n\t\t\tnode.appendChild(fixer);\n\t\t} catch (error) {\n\t\t}\n\t}\n\treturn node;\n};\nvar fixContainer = (container, root, config) => {\n\tlet wrapper = null;\n\tArray.from(container.childNodes).forEach((child) => {\n\t\tconst isBR = child.nodeName === \"BR\";\n\t\tif (!isBR && isInline(child)) {\n\t\t\tif (!wrapper) {\n\t\t\t\twrapper = createElement(config.blockTag, config.blockAttributes);\n\t\t\t}\n\t\t\twrapper.appendChild(child);\n\t\t} else if (isBR || wrapper) {\n\t\t\tif (!wrapper) {\n\t\t\t\twrapper = createElement(config.blockTag, config.blockAttributes);\n\t\t\t}\n\t\t\tfixCursor(wrapper);\n\t\t\tif (isBR) {\n\t\t\t\tcontainer.replaceChild(wrapper, child);\n\t\t\t} else {\n\t\t\t\tcontainer.insertBefore(wrapper, child);\n\t\t\t}\n\t\t\twrapper = null;\n\t\t}\n\t\tif (isContainer(child)) {\n\t\t\tfixContainer(child, root, config);\n\t\t}\n\t});\n\tif (wrapper) {\n\t\tcontainer.appendChild(fixCursor(wrapper));\n\t}\n\treturn container;\n};\nvar split = (node, offset, stopNode, root) => {\n\tif (node instanceof Text && node !== stopNode) {\n\t\tif (typeof offset !== \"number\") {\n\t\t\tthrow new Error(\"Offset must be a number to split text node!\");\n\t\t}\n\t\tif (!node.parentNode) {\n\t\t\tthrow new Error(\"Cannot split text node with no parent!\");\n\t\t}\n\t\treturn split(node.parentNode, node.splitText(offset), stopNode, root);\n\t}\n\tlet nodeAfterSplit = typeof offset === \"number\" ? offset < node.childNodes.length ? node.childNodes[offset] : null : offset;\n\tconst parent = node.parentNode;\n\tif (!parent || node === stopNode || !(node instanceof Element)) {\n\t\treturn nodeAfterSplit;\n\t}\n\tconst clone = node.cloneNode(false);\n\twhile (nodeAfterSplit) {\n\t\tconst next = nodeAfterSplit.nextSibling;\n\t\tclone.appendChild(nodeAfterSplit);\n\t\tnodeAfterSplit = next;\n\t}\n\tif (node instanceof HTMLOListElement && getNearest(node, root, \"DIV\", indentedNodeAttributes)) {\n\t\tclone.start = (+node.start || 1) + node.childNodes.length - 1;\n\t}\n\tfixCursor(node);\n\tfixCursor(clone);\n\tparent.insertBefore(clone, node.nextSibling);\n\treturn split(parent, clone, stopNode, root);\n};\nvar _mergeInlines = (node, fakeRange) => {\n\tconst children = node.childNodes;\n\tlet l = children.length;\n\tconst frags = [];\n\twhile (l--) {\n\t\tconst child = children[l];\n\t\tconst prev = l ? children[l - 1] : null;\n\t\tif (prev && isInline(child) && areAlike(child, prev)) {\n\t\t\tif (fakeRange.startContainer === child) {\n\t\t\t\tfakeRange.startContainer = prev;\n\t\t\t\tfakeRange.startOffset += getLength(prev);\n\t\t\t}\n\t\t\tif (fakeRange.endContainer === child) {\n\t\t\t\tfakeRange.endContainer = prev;\n\t\t\t\tfakeRange.endOffset += getLength(prev);\n\t\t\t}\n\t\t\tif (fakeRange.startContainer === node) {\n\t\t\t\tif (fakeRange.startOffset > l) {\n\t\t\t\t\tfakeRange.startOffset -= 1;\n\t\t\t\t} else if (fakeRange.startOffset === l) {\n\t\t\t\t\tfakeRange.startContainer = prev;\n\t\t\t\t\tfakeRange.startOffset = getLength(prev);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (fakeRange.endContainer === node) {\n\t\t\t\tif (fakeRange.endOffset > l) {\n\t\t\t\t\tfakeRange.endOffset -= 1;\n\t\t\t\t} else if (fakeRange.endOffset === l) {\n\t\t\t\t\tfakeRange.endContainer = prev;\n\t\t\t\t\tfakeRange.endOffset = getLength(prev);\n\t\t\t\t}\n\t\t\t}\n\t\t\tdetach(child);\n\t\t\tif (child instanceof Text) {\n\t\t\t\tprev.appendData(child.data);\n\t\t\t} else {\n\t\t\t\tfrags.push(empty(child));\n\t\t\t}\n\t\t} else if (child instanceof Element) {\n\t\t\tlet frag;\n\t\t\twhile (frag = frags.pop()) {\n\t\t\t\tchild.appendChild(frag);\n\t\t\t}\n\t\t\t_mergeInlines(child, fakeRange);\n\t\t}\n\t}\n};\nvar mergeInlines = (node, range) => {\n\tconst element = node instanceof Text ? node.parentNode : node;\n\tif (element instanceof Element) {\n\t\tconst fakeRange = {\n\t\t\tstartContainer: range.startContainer,\n\t\t\tstartOffset: range.startOffset,\n\t\t\tendContainer: range.endContainer,\n\t\t\tendOffset: range.endOffset\n\t\t};\n\t\t_mergeInlines(element, fakeRange);\n\t\trange.setStart(fakeRange.startContainer, fakeRange.startOffset);\n\t\trange.setEnd(fakeRange.endContainer, fakeRange.endOffset);\n\t}\n};\nvar mergeWithBlock = (block, next, range, root) => {\n\tlet container = next;\n\tlet parent;\n\tlet offset;\n\twhile ((parent = container.parentNode) && parent !== root && parent instanceof Element && parent.childNodes.length === 1) {\n\t\tcontainer = parent;\n\t}\n\tdetach(container);\n\toffset = block.childNodes.length;\n\tconst last = block.lastChild;\n\tif (last && last.nodeName === \"BR\") {\n\t\tblock.removeChild(last);\n\t\toffset -= 1;\n\t}\n\tblock.appendChild(empty(next));\n\trange.setStart(block, offset);\n\trange.collapse(true);\n\tmergeInlines(block, range);\n};\nvar mergeContainers = (node, root, config) => {\n\tconst prev = node.previousSibling;\n\tconst first = node.firstChild;\n\tconst isListItem = node.nodeName === \"LI\";\n\tif (isListItem && (!first || !/^[OU]L$/.test(first.nodeName))) {\n\t\treturn;\n\t}\n\tif (prev && areAlike(prev, node)) {\n\t\tif (!isContainer(prev)) {\n\t\t\tif (isListItem) {\n\t\t\t\tconst block = createElement(\"DIV\");\n\t\t\t\tblock.appendChild(empty(prev));\n\t\t\t\tprev.appendChild(block);\n\t\t\t} else {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tdetach(node);\n\t\tconst needsFix = !isContainer(node);\n\t\tprev.appendChild(empty(node));\n\t\tif (needsFix) {\n\t\t\tfixContainer(prev, root, config);\n\t\t}\n\t\tif (first) {\n\t\t\tmergeContainers(first, root, config);\n\t\t}\n\t} else if (isListItem) {\n\t\tconst block = createElement(\"DIV\");\n\t\tnode.insertBefore(block, first);\n\t\tfixCursor(block);\n\t}\n};\n\n// source/Clean.ts\nvar styleToSemantic = {\n\t\"font-weight\": {\n\t\tregexp: /^bold|^700/i,\n\t\treplace() {\n\t\t\treturn createElement(\"B\");\n\t\t}\n\t},\n\t\"font-style\": {\n\t\tregexp: /^italic/i,\n\t\treplace() {\n\t\t\treturn createElement(\"I\");\n\t\t}\n\t},\n\t\"font-family\": {\n\t\tregexp: notWS,\n\t\treplace(classNames, family) {\n\t\t\treturn createElement(\"SPAN\", {\n\t\t\t\tclass: classNames.fontFamily,\n\t\t\t\tstyle: \"font-family:\" + family\n\t\t\t});\n\t\t}\n\t},\n\t\"font-size\": {\n\t\tregexp: notWS,\n\t\treplace(classNames, size) {\n\t\t\treturn createElement(\"SPAN\", {\n\t\t\t\tclass: classNames.fontSize,\n\t\t\t\tstyle: \"font-size:\" + size\n\t\t\t});\n\t\t}\n\t},\n\t\"text-decoration\": {\n\t\tregexp: /^underline/i,\n\t\treplace() {\n\t\t\treturn createElement(\"U\");\n\t\t}\n\t}\n};\nvar replaceStyles = (node, _, config) => {\n\tconst style = node.style;\n\tlet newTreeBottom;\n\tlet newTreeTop;\n\tfor (const attr in styleToSemantic) {\n\t\tconst converter = styleToSemantic[attr];\n\t\tconst css = style.getPropertyValue(attr);\n\t\tif (css && converter.regexp.test(css)) {\n\t\t\tconst el = converter.replace(config.classNames, css);\n\t\t\tif (el.nodeName === node.nodeName && el.className === node.className) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (!newTreeTop) {\n\t\t\t\tnewTreeTop = el;\n\t\t\t}\n\t\t\tif (newTreeBottom) {\n\t\t\t\tnewTreeBottom.appendChild(el);\n\t\t\t}\n\t\t\tnewTreeBottom = el;\n\t\t\tnode.style.removeProperty(attr);\n\t\t}\n\t}\n\tif (newTreeTop && newTreeBottom) {\n\t\tnewTreeBottom.appendChild(empty(node));\n\t\tif (node.style.cssText) {\n\t\t\tnode.appendChild(newTreeTop);\n\t\t} else {\n\t\t\treplaceWith(node, newTreeTop);\n\t\t}\n\t}\n\treturn newTreeBottom || node;\n};\nvar replaceWithTag = (tag) => {\n\treturn (node, parent) => {\n\t\tconst el = createElement(tag);\n\t\tconst attributes = node.attributes;\n\t\tfor (let i = 0, l = attributes.length; i < l; i += 1) {\n\t\t\tconst attribute = attributes[i];\n\t\t\tel.setAttribute(attribute.name, attribute.value);\n\t\t}\n\t\tparent.replaceChild(el, node);\n\t\tel.appendChild(empty(node));\n\t\treturn el;\n\t};\n};\nvar fontSizes = {\n\t\"1\": \"10\",\n\t\"2\": \"13\",\n\t\"3\": \"16\",\n\t\"4\": \"18\",\n\t\"5\": \"24\",\n\t\"6\": \"32\",\n\t\"7\": \"48\"\n};\nvar stylesRewriters = {\n\tSTRONG: replaceWithTag(\"B\"),\n\tEM: replaceWithTag(\"I\"),\n\tINS: replaceWithTag(\"U\"),\n\tSTRIKE: replaceWithTag(\"S\"),\n\tSPAN: replaceStyles,\n\tFONT: (node, parent, config) => {\n\t\tconst font = node;\n\t\tconst face = font.face;\n\t\tconst size = font.size;\n\t\tlet color = font.color;\n\t\tconst classNames = config.classNames;\n\t\tlet fontSpan;\n\t\tlet sizeSpan;\n\t\tlet colorSpan;\n\t\tlet newTreeBottom;\n\t\tlet newTreeTop;\n\t\tif (face) {\n\t\t\tfontSpan = createElement(\"SPAN\", {\n\t\t\t\tclass: classNames.fontFamily,\n\t\t\t\tstyle: \"font-family:\" + face\n\t\t\t});\n\t\t\tnewTreeTop = fontSpan;\n\t\t\tnewTreeBottom = fontSpan;\n\t\t}\n\t\tif (size) {\n\t\t\tsizeSpan = createElement(\"SPAN\", {\n\t\t\t\tclass: classNames.fontSize,\n\t\t\t\tstyle: \"font-size:\" + fontSizes[size] + \"px\"\n\t\t\t});\n\t\t\tif (!newTreeTop) {\n\t\t\t\tnewTreeTop = sizeSpan;\n\t\t\t}\n\t\t\tif (newTreeBottom) {\n\t\t\t\tnewTreeBottom.appendChild(sizeSpan);\n\t\t\t}\n\t\t\tnewTreeBottom = sizeSpan;\n\t\t}\n\t\tif (color && /^#?([\\dA-F]{3}){1,2}$/i.test(color)) {\n\t\t\tif (color.charAt(0) !== \"#\") {\n\t\t\t\tcolor = \"#\" + color;\n\t\t\t}\n\t\t\tcolorSpan = createElement(\"SPAN\", {\n\t\t\t\tclass: classNames.color,\n\t\t\t\tstyle: \"color:\" + color\n\t\t\t});\n\t\t\tif (!newTreeTop) {\n\t\t\t\tnewTreeTop = colorSpan;\n\t\t\t}\n\t\t\tif (newTreeBottom) {\n\t\t\t\tnewTreeBottom.appendChild(colorSpan);\n\t\t\t}\n\t\t\tnewTreeBottom = colorSpan;\n\t\t}\n\t\tif (!newTreeTop || !newTreeBottom) {\n\t\t\tnewTreeTop = newTreeBottom = createElement(\"SPAN\");\n\t\t}\n\t\tparent.replaceChild(newTreeTop, font);\n\t\tnewTreeBottom.appendChild(empty(font));\n\t\treturn newTreeBottom;\n\t},\n\tTT: (node, parent, config) => {\n\t\tconst el = createElement(\"SPAN\", {\n\t\t\tclass: config.classNames.fontFamily,\n\t\t\tstyle: 'font-family:menlo,consolas,\"courier new\",monospace'\n\t\t});\n\t\tparent.replaceChild(el, node);\n\t\tel.appendChild(empty(node));\n\t\treturn el;\n\t}\n};\nvar allowedBlock = /^(?:A(?:DDRESS|RTICLE|SIDE|UDIO)|BLOCKQUOTE|CAPTION|D(?:[DLT]|IV)|F(?:IGURE|IGCAPTION|OOTER)|H[1-6]|HEADER|L(?:ABEL|EGEND|I)|O(?:L|UTPUT)|P(?:RE)?|SECTION|T(?:ABLE|BODY|D|FOOT|H|HEAD|R)|COL(?:GROUP)?|UL)$/;\nvar blacklist = /^(?:HEAD|META|STYLE)/;\nvar cleanTree = (node, config, preserveWS) => {\n\tconst children = node.childNodes;\n\tlet nonInlineParent = node;\n\twhile (isInline(nonInlineParent)) {\n\t\tnonInlineParent = nonInlineParent.parentNode;\n\t}\n\tconst walker = new TreeIterator(\n\t\t\tnonInlineParent,\n\t\t\tSHOW_ELEMENT_OR_TEXT\n\t);\n\tfor (let i = 0, l = children.length; i < l; i += 1) {\n\t\tlet child = children[i];\n\t\tconst nodeName = child.nodeName;\n\t\tconst rewriter = stylesRewriters[nodeName];\n\t\tif (child instanceof HTMLElement) {\n\t\t\tconst childLength = child.childNodes.length;\n\t\t\tif (rewriter) {\n\t\t\t\tchild = rewriter(child, node, config);\n\t\t\t} else if (blacklist.test(nodeName)) {\n\t\t\t\tnode.removeChild(child);\n\t\t\t\ti -= 1;\n\t\t\t\tl -= 1;\n\t\t\t\tcontinue;\n\t\t\t} else if (!allowedBlock.test(nodeName) && !isInline(child)) {\n\t\t\t\ti -= 1;\n\t\t\t\tl += childLength - 1;\n\t\t\t\tnode.replaceChild(empty(child), child);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (childLength) {\n\t\t\t\tcleanTree(child, config, preserveWS || nodeName === \"PRE\");\n\t\t\t}\n\t\t} else {\n\t\t\tif (child instanceof Text) {\n\t\t\t\tlet data = child.data;\n\t\t\t\tconst startsWithWS = !notWS.test(data.charAt(0));\n\t\t\t\tconst endsWithWS = !notWS.test(data.charAt(data.length - 1));\n\t\t\t\tif (preserveWS || !startsWithWS && !endsWithWS) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (startsWithWS) {\n\t\t\t\t\twalker.currentNode = child;\n\t\t\t\t\tlet sibling;\n\t\t\t\t\twhile (sibling = walker.previousPONode()) {\n\t\t\t\t\t\tif (sibling.nodeName === \"IMG\" || sibling instanceof Text && notWS.test(sibling.data)) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!isInline(sibling)) {\n\t\t\t\t\t\t\tsibling = null;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdata = data.replace(/^[ \\t\\r\\n]+/g, sibling ? \" \" : \"\");\n\t\t\t\t}\n\t\t\t\tif (endsWithWS) {\n\t\t\t\t\twalker.currentNode = child;\n\t\t\t\t\tlet sibling;\n\t\t\t\t\twhile (sibling = walker.nextNode()) {\n\t\t\t\t\t\tif (sibling.nodeName === \"IMG\" || sibling instanceof Text && notWS.test(sibling.data)) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!isInline(sibling)) {\n\t\t\t\t\t\t\tsibling = null;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdata = data.replace(/[ \\t\\r\\n]+$/g, sibling ? \" \" : \"\");\n\t\t\t\t}\n\t\t\t\tif (data) {\n\t\t\t\t\tchild.data = data;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\tnode.removeChild(child);\n\t\t\ti -= 1;\n\t\t\tl -= 1;\n\t\t}\n\t}\n\treturn node;\n};\nvar removeEmptyInlines = (node) => {\n\tconst children = node.childNodes;\n\tlet l = children.length;\n\twhile (l--) {\n\t\tconst child = children[l];\n\t\tif (child instanceof Element && !isLeaf(child)) {\n\t\t\tremoveEmptyInlines(child);\n\t\t\tif (isInline(child) && !child.firstChild) {\n\t\t\t\tnode.removeChild(child);\n\t\t\t}\n\t\t} else if (child instanceof Text && !child.data) {\n\t\t\tnode.removeChild(child);\n\t\t}\n\t}\n};\nvar cleanupBRs = (node, root, keepForBlankLine, config) => {\n\tconst brs = node.querySelectorAll(\"BR\");\n\tconst brBreaksLine = [];\n\tlet l = brs.length;\n\tfor (let i = 0; i < l; i += 1) {\n\t\tbrBreaksLine[i] = isLineBreak(brs[i], keepForBlankLine);\n\t}\n\twhile (l--) {\n\t\tconst br = brs[l];\n\t\tconst parent = br.parentNode;\n\t\tif (!parent) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (!brBreaksLine[l]) {\n\t\t\tdetach(br);\n\t\t} else if (!isInline(parent)) {\n\t\t\tfixContainer(parent, root, config);\n\t\t}\n\t}\n};\nvar escapeHTML = (text) => {\n\treturn text.split(\"&\").join(\"&amp;\").split(\"<\").join(\"&lt;\").split(\">\").join(\"&gt;\").split('\"').join(\"&quot;\");\n};\n\n// source/node/Block.ts\nvar getBlockWalker = (node, root) => {\n\tconst walker = new TreeIterator(root, SHOW_ELEMENT, isBlock);\n\twalker.currentNode = node;\n\treturn walker;\n};\nvar getPreviousBlock = (node, root) => {\n\tconst block = getBlockWalker(node, root).previousNode();\n\treturn block !== root ? block : null;\n};\nvar getNextBlock = (node, root) => {\n\tconst block = getBlockWalker(node, root).nextNode();\n\treturn block !== root ? block : null;\n};\nvar isEmptyBlock = (block) => {\n\treturn !block.textContent && !block.querySelector(\"IMG\");\n};\n\n// source/range/Block.ts\nvar getStartBlockOfRange = (range, root) => {\n\tconst container = range.startContainer;\n\tlet block;\n\tif (isInline(container)) {\n\t\tblock = getPreviousBlock(container, root);\n\t} else if (container !== root && container instanceof HTMLElement && isBlock(container)) {\n\t\tblock = container;\n\t} else {\n\t\tconst node = getNodeBeforeOffset(container, range.startOffset);\n\t\tblock = getNextBlock(node, root);\n\t}\n\treturn block && isNodeContainedInRange(range, block, true) ? block : null;\n};\nvar getEndBlockOfRange = (range, root) => {\n\tconst container = range.endContainer;\n\tlet block;\n\tif (isInline(container)) {\n\t\tblock = getPreviousBlock(container, root);\n\t} else if (container !== root && container instanceof HTMLElement && isBlock(container)) {\n\t\tblock = container;\n\t} else {\n\t\tlet node = getNodeAfterOffset(container, range.endOffset);\n\t\tif (!node || !root.contains(node)) {\n\t\t\tnode = root;\n\t\t\tlet child;\n\t\t\twhile (child = node.lastChild) {\n\t\t\t\tnode = child;\n\t\t\t}\n\t\t}\n\t\tblock = getPreviousBlock(node, root);\n\t}\n\treturn block && isNodeContainedInRange(range, block, true) ? block : null;\n};\nvar isContent = (node) => {\n\treturn node instanceof Text ? notWS.test(node.data) : node.nodeName === \"IMG\";\n};\nvar rangeDoesStartAtBlockBoundary = (range, root) => {\n\tconst startContainer = range.startContainer;\n\tconst startOffset = range.startOffset;\n\tlet nodeAfterCursor;\n\tif (startContainer instanceof Text) {\n\t\tconst text = startContainer.data;\n\t\tfor (let i = startOffset; i > 0; i -= 1) {\n\t\t\tif (text.charAt(i - 1) !== ZWS) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tnodeAfterCursor = startContainer;\n\t} else {\n\t\tnodeAfterCursor = getNodeAfterOffset(startContainer, startOffset);\n\t\tif (nodeAfterCursor && !root.contains(nodeAfterCursor)) {\n\t\t\tnodeAfterCursor = null;\n\t\t}\n\t\tif (!nodeAfterCursor) {\n\t\t\tnodeAfterCursor = getNodeBeforeOffset(startContainer, startOffset);\n\t\t\tif (nodeAfterCursor instanceof Text && nodeAfterCursor.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\tconst block = getStartBlockOfRange(range, root);\n\tif (!block) {\n\t\treturn false;\n\t}\n\tconst contentWalker = new TreeIterator(\n\t\t\tblock,\n\t\t\tSHOW_ELEMENT_OR_TEXT,\n\t\t\tisContent\n\t);\n\tcontentWalker.currentNode = nodeAfterCursor;\n\treturn !contentWalker.previousNode();\n};\nvar rangeDoesEndAtBlockBoundary = (range, root) => {\n\tconst endContainer = range.endContainer;\n\tconst endOffset = range.endOffset;\n\tlet currentNode;\n\tif (endContainer instanceof Text) {\n\t\tconst text = endContainer.data;\n\t\tconst length = text.length;\n\t\tfor (let i = endOffset; i < length; i += 1) {\n\t\t\tif (text.charAt(i) !== ZWS) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tcurrentNode = endContainer;\n\t} else {\n\t\tcurrentNode = getNodeBeforeOffset(endContainer, endOffset);\n\t}\n\tconst block = getEndBlockOfRange(range, root);\n\tif (!block) {\n\t\treturn false;\n\t}\n\tconst contentWalker = new TreeIterator(\n\t\t\tblock,\n\t\t\tSHOW_ELEMENT_OR_TEXT,\n\t\t\tisContent\n\t);\n\tcontentWalker.currentNode = currentNode;\n\treturn !contentWalker.nextNode();\n};\nvar expandRangeToBlockBoundaries = (range, root) => {\n\tconst start = getStartBlockOfRange(range, root);\n\tconst end = getEndBlockOfRange(range, root);\n\tlet parent;\n\tif (start && end) {\n\t\tparent = start.parentNode;\n\t\trange.setStart(parent, Array.from(parent.childNodes).indexOf(start));\n\t\tparent = end.parentNode;\n\t\trange.setEnd(parent, Array.from(parent.childNodes).indexOf(end) + 1);\n\t}\n};\n\n// source/range/InsertDelete.ts\nfunction createRange(startContainer, startOffset, endContainer, endOffset) {\n\tconst range = document.createRange();\n\trange.setStart(startContainer, startOffset);\n\tif (endContainer && typeof endOffset === \"number\") {\n\t\trange.setEnd(endContainer, endOffset);\n\t} else {\n\t\trange.setEnd(startContainer, startOffset);\n\t}\n\treturn range;\n}\n\nvar insertNodeInRange = (range, node) => {\n\tlet {startContainer, startOffset, endContainer, endOffset} = range;\n\tlet children;\n\tif (startContainer instanceof Text) {\n\t\tconst parent = startContainer.parentNode;\n\t\tchildren = parent.childNodes;\n\t\tif (startOffset === startContainer.length) {\n\t\t\tstartOffset = Array.from(children).indexOf(startContainer) + 1;\n\t\t\tif (range.collapsed) {\n\t\t\t\tendContainer = parent;\n\t\t\t\tendOffset = startOffset;\n\t\t\t}\n\t\t} else {\n\t\t\tif (startOffset) {\n\t\t\t\tconst afterSplit = startContainer.splitText(startOffset);\n\t\t\t\tif (endContainer === startContainer) {\n\t\t\t\t\tendOffset -= startOffset;\n\t\t\t\t\tendContainer = afterSplit;\n\t\t\t\t} else if (endContainer === parent) {\n\t\t\t\t\tendOffset += 1;\n\t\t\t\t}\n\t\t\t\tstartContainer = afterSplit;\n\t\t\t}\n\t\t\tstartOffset = Array.from(children).indexOf(\n\t\t\t\t\tstartContainer\n\t\t\t);\n\t\t}\n\t\tstartContainer = parent;\n\t} else {\n\t\tchildren = startContainer.childNodes;\n\t}\n\tconst childCount = children.length;\n\tif (startOffset === childCount) {\n\t\tstartContainer.appendChild(node);\n\t} else {\n\t\tstartContainer.insertBefore(node, children[startOffset]);\n\t}\n\tif (startContainer === endContainer) {\n\t\tendOffset += children.length - childCount;\n\t}\n\trange.setStart(startContainer, startOffset);\n\trange.setEnd(endContainer, endOffset);\n};\nvar extractContentsOfRange = (range, common, root) => {\n\tconst frag = document.createDocumentFragment();\n\tif (range.collapsed) {\n\t\treturn frag;\n\t}\n\tif (!common) {\n\t\tcommon = range.commonAncestorContainer;\n\t}\n\tif (common instanceof Text) {\n\t\tcommon = common.parentNode;\n\t}\n\tconst startContainer = range.startContainer;\n\tconst startOffset = range.startOffset;\n\tlet endContainer = split(range.endContainer, range.endOffset, common, root);\n\tlet endOffset = 0;\n\tlet node = split(startContainer, startOffset, common, root);\n\twhile (node && node !== endContainer) {\n\t\tconst next = node.nextSibling;\n\t\tfrag.appendChild(node);\n\t\tnode = next;\n\t}\n\tif (startContainer instanceof Text && endContainer instanceof Text) {\n\t\tstartContainer.appendData(endContainer.data);\n\t\tdetach(endContainer);\n\t\tendContainer = startContainer;\n\t\tendOffset = startOffset;\n\t}\n\trange.setStart(startContainer, startOffset);\n\tif (endContainer) {\n\t\trange.setEnd(endContainer, endOffset);\n\t} else {\n\t\trange.setEnd(common, common.childNodes.length);\n\t}\n\tfixCursor(common);\n\treturn frag;\n};\nvar getAdjacentInlineNode = (iterator, method, node) => {\n\titerator.currentNode = node;\n\tlet nextNode;\n\twhile (nextNode = iterator[method]()) {\n\t\tif (nextNode instanceof Text || isLeaf(nextNode)) {\n\t\t\treturn nextNode;\n\t\t}\n\t\tif (!isInline(nextNode)) {\n\t\t\treturn null;\n\t\t}\n\t}\n\treturn null;\n};\nvar deleteContentsOfRange = (range, root) => {\n\tconst startBlock = getStartBlockOfRange(range, root);\n\tlet endBlock = getEndBlockOfRange(range, root);\n\tconst needsMerge = startBlock !== endBlock;\n\tif (startBlock && endBlock) {\n\t\tmoveRangeBoundariesDownTree(range);\n\t\tmoveRangeBoundariesUpTree(range, startBlock, endBlock, root);\n\t}\n\tconst frag = extractContentsOfRange(range, null, root);\n\tmoveRangeBoundariesDownTree(range);\n\tif (needsMerge) {\n\t\tendBlock = getEndBlockOfRange(range, root);\n\t\tif (startBlock && endBlock && startBlock !== endBlock) {\n\t\t\tmergeWithBlock(startBlock, endBlock, range, root);\n\t\t}\n\t}\n\tif (startBlock) {\n\t\tfixCursor(startBlock);\n\t}\n\tconst child = root.firstChild;\n\tif (!child || child.nodeName === \"BR\") {\n\t\tfixCursor(root);\n\t\tif (root.firstChild) {\n\t\t\trange.selectNodeContents(root.firstChild);\n\t\t}\n\t}\n\trange.collapse(true);\n\tconst startContainer = range.startContainer;\n\tconst startOffset = range.startOffset;\n\tconst iterator = new TreeIterator(root, SHOW_ELEMENT_OR_TEXT);\n\tlet afterNode = startContainer;\n\tlet afterOffset = startOffset;\n\tif (!(afterNode instanceof Text) || afterOffset === afterNode.data.length) {\n\t\tafterNode = getAdjacentInlineNode(iterator, \"nextNode\", afterNode);\n\t\tafterOffset = 0;\n\t}\n\tlet beforeNode = startContainer;\n\tlet beforeOffset = startOffset - 1;\n\tif (!(beforeNode instanceof Text) || beforeOffset === -1) {\n\t\tbeforeNode = getAdjacentInlineNode(\n\t\t\t\titerator,\n\t\t\t\t\"previousPONode\",\n\t\t\t\tafterNode || (startContainer instanceof Text ? startContainer : startContainer.childNodes[startOffset] || startContainer)\n\t\t);\n\t\tif (beforeNode instanceof Text) {\n\t\t\tbeforeOffset = beforeNode.data.length;\n\t\t}\n\t}\n\tlet node = null;\n\tlet offset = 0;\n\tif (afterNode instanceof Text && afterNode.data.charAt(afterOffset) === \" \" && rangeDoesStartAtBlockBoundary(range, root)) {\n\t\tnode = afterNode;\n\t\toffset = afterOffset;\n\t} else if (beforeNode instanceof Text && beforeNode.data.charAt(beforeOffset) === \" \") {\n\t\tif (afterNode instanceof Text && afterNode.data.charAt(afterOffset) === \" \" || rangeDoesEndAtBlockBoundary(range, root)) {\n\t\t\tnode = beforeNode;\n\t\t\toffset = beforeOffset;\n\t\t}\n\t}\n\tif (node) {\n\t\tnode.replaceData(offset, 1, \"\\xA0\");\n\t}\n\trange.setStart(startContainer, startOffset);\n\trange.collapse(true);\n\treturn frag;\n};\nvar insertTreeFragmentIntoRange = (range, frag, root, config) => {\n\tconst firstInFragIsInline = frag.firstChild && isInline(frag.firstChild);\n\tlet node;\n\tfixContainer(frag, root, config);\n\tnode = frag;\n\twhile (node = getNextBlock(node, root)) {\n\t\tfixCursor(node);\n\t}\n\tif (!range.collapsed) {\n\t\tdeleteContentsOfRange(range, root);\n\t}\n\tmoveRangeBoundariesDownTree(range);\n\trange.collapse(false);\n\tconst stopPoint = getNearest(range.endContainer, root, \"BLOCKQUOTE\") || root;\n\tlet block = getStartBlockOfRange(range, root);\n\tlet blockContentsAfterSplit = null;\n\tconst firstBlockInFrag = getNextBlock(frag, frag);\n\tconst replaceBlock = !firstInFragIsInline && !!block && isEmptyBlock(block);\n\tif (block && firstBlockInFrag && !replaceBlock && // Don't merge table cells or PRE elements into block\n\t\t\t!getNearest(firstBlockInFrag, frag, \"PRE\") && !getNearest(firstBlockInFrag, frag, \"TABLE\")) {\n\t\tmoveRangeBoundariesUpTree(range, block, block, root);\n\t\trange.collapse(true);\n\t\tlet container = range.endContainer;\n\t\tlet offset = range.endOffset;\n\t\tcleanupBRs(block, root, false, config);\n\t\tif (isInline(container)) {\n\t\t\tconst nodeAfterSplit = split(\n\t\t\t\t\tcontainer,\n\t\t\t\t\toffset,\n\t\t\t\t\tgetPreviousBlock(container, root) || root,\n\t\t\t\t\troot\n\t\t\t);\n\t\t\tcontainer = nodeAfterSplit.parentNode;\n\t\t\toffset = Array.from(container.childNodes).indexOf(\n\t\t\t\t\tnodeAfterSplit\n\t\t\t);\n\t\t}\n\t\tif (\n\t\t\t\t/*isBlock( container ) && */\n\t\t\t\toffset !== getLength(container)\n\t\t) {\n\t\t\tblockContentsAfterSplit = document.createDocumentFragment();\n\t\t\twhile (node = container.childNodes[offset]) {\n\t\t\t\tblockContentsAfterSplit.appendChild(node);\n\t\t\t}\n\t\t}\n\t\tmergeWithBlock(container, firstBlockInFrag, range, root);\n\t\toffset = Array.from(container.parentNode.childNodes).indexOf(\n\t\t\t\tcontainer\n\t\t) + 1;\n\t\tcontainer = container.parentNode;\n\t\trange.setEnd(container, offset);\n\t}\n\tif (getLength(frag)) {\n\t\tif (replaceBlock && block) {\n\t\t\trange.setEndBefore(block);\n\t\t\trange.collapse(false);\n\t\t\tdetach(block);\n\t\t}\n\t\tmoveRangeBoundariesUpTree(range, stopPoint, stopPoint, root);\n\t\tlet nodeAfterSplit = split(\n\t\t\t\trange.endContainer,\n\t\t\t\trange.endOffset,\n\t\t\t\tstopPoint,\n\t\t\t\troot\n\t\t);\n\t\tconst nodeBeforeSplit = nodeAfterSplit ? nodeAfterSplit.previousSibling : stopPoint.lastChild;\n\t\tstopPoint.insertBefore(frag, nodeAfterSplit);\n\t\tif (nodeAfterSplit) {\n\t\t\trange.setEndBefore(nodeAfterSplit);\n\t\t} else {\n\t\t\trange.setEnd(stopPoint, getLength(stopPoint));\n\t\t}\n\t\tblock = getEndBlockOfRange(range, root);\n\t\tmoveRangeBoundariesDownTree(range);\n\t\tconst container = range.endContainer;\n\t\tconst offset = range.endOffset;\n\t\tif (nodeAfterSplit && isContainer(nodeAfterSplit)) {\n\t\t\tmergeContainers(nodeAfterSplit, root, config);\n\t\t}\n\t\tnodeAfterSplit = nodeBeforeSplit && nodeBeforeSplit.nextSibling;\n\t\tif (nodeAfterSplit && isContainer(nodeAfterSplit)) {\n\t\t\tmergeContainers(nodeAfterSplit, root, config);\n\t\t}\n\t\trange.setEnd(container, offset);\n\t}\n\tif (blockContentsAfterSplit && block) {\n\t\tconst tempRange = range.cloneRange();\n\t\tfixCursor(blockContentsAfterSplit);\n\t\tmergeWithBlock(block, blockContentsAfterSplit, tempRange, root);\n\t\trange.setEnd(tempRange.endContainer, tempRange.endOffset);\n\t}\n\tmoveRangeBoundariesDownTree(range);\n};\n\n// source/range/Contents.ts\nvar getTextContentsOfRange = (range) => {\n\tif (range.collapsed) {\n\t\treturn \"\";\n\t}\n\tconst startContainer = range.startContainer;\n\tconst endContainer = range.endContainer;\n\tconst walker = new TreeIterator(\n\t\t\trange.commonAncestorContainer,\n\t\t\tSHOW_ELEMENT_OR_TEXT,\n\t\t\t(node2) => {\n\t\t\t\treturn isNodeContainedInRange(range, node2, true);\n\t\t\t}\n\t);\n\twalker.currentNode = startContainer;\n\tlet node = startContainer;\n\tlet textContent = \"\";\n\tlet addedTextInBlock = false;\n\tlet value;\n\tif (!(node instanceof Element) && !(node instanceof Text) || !walker.filter(node)) {\n\t\tnode = walker.nextNode();\n\t}\n\twhile (node) {\n\t\tif (node instanceof Text) {\n\t\t\tvalue = node.data;\n\t\t\tif (value && /\\S/.test(value)) {\n\t\t\t\tif (node === endContainer) {\n\t\t\t\t\tvalue = value.slice(0, range.endOffset);\n\t\t\t\t}\n\t\t\t\tif (node === startContainer) {\n\t\t\t\t\tvalue = value.slice(range.startOffset);\n\t\t\t\t}\n\t\t\t\ttextContent += value;\n\t\t\t\taddedTextInBlock = true;\n\t\t\t}\n\t\t} else if (node.nodeName === \"BR\" || addedTextInBlock && !isInline(node)) {\n\t\t\ttextContent += \"\\n\";\n\t\t\taddedTextInBlock = false;\n\t\t}\n\t\tnode = walker.nextNode();\n\t}\n\ttextContent = textContent.replace(/ /g, \" \");\n\treturn textContent;\n};\n\n// source/Clipboard.ts\nvar indexOf = Array.prototype.indexOf;\nvar extractRangeToClipboard = (event, range, root, removeRangeFromDocument, toCleanHTML, toPlainText, plainTextOnly) => {\n\tconst clipboardData = event.clipboardData;\n\tif (isLegacyEdge || !clipboardData) {\n\t\treturn false;\n\t}\n\tlet text = toPlainText ? \"\" : getTextContentsOfRange(range);\n\tconst startBlock = getStartBlockOfRange(range, root);\n\tconst endBlock = getEndBlockOfRange(range, root);\n\tlet copyRoot = root;\n\tif (startBlock === endBlock && startBlock?.contains(range.commonAncestorContainer)) {\n\t\tcopyRoot = startBlock;\n\t}\n\tlet contents;\n\tif (removeRangeFromDocument) {\n\t\tcontents = deleteContentsOfRange(range, root);\n\t} else {\n\t\trange = range.cloneRange();\n\t\tmoveRangeBoundariesDownTree(range);\n\t\tmoveRangeBoundariesUpTree(range, copyRoot, copyRoot, root);\n\t\tcontents = range.cloneContents();\n\t}\n\tlet parent = range.commonAncestorContainer;\n\tif (parent instanceof Text) {\n\t\tparent = parent.parentNode;\n\t}\n\twhile (parent && parent !== copyRoot) {\n\t\tconst newContents = parent.cloneNode(false);\n\t\tnewContents.appendChild(contents);\n\t\tcontents = newContents;\n\t\tparent = parent.parentNode;\n\t}\n\tlet html;\n\tif (contents.childNodes.length === 1 && contents.childNodes[0] instanceof Text) {\n\t\ttext = contents.childNodes[0].data.replace(/ /g, \" \");\n\t\tplainTextOnly = true;\n\t} else {\n\t\tconst node = createElement(\"DIV\");\n\t\tnode.appendChild(contents);\n\t\thtml = node.innerHTML;\n\t\tif (toCleanHTML) {\n\t\t\thtml = toCleanHTML(html);\n\t\t}\n\t}\n\tif (toPlainText && html !== void 0) {\n\t\ttext = toPlainText(html);\n\t}\n\tif (isWin) {\n\t\ttext = text.replace(/\\r?\\n/g, \"\\r\\n\");\n\t}\n\tif (!plainTextOnly && html && text !== html) {\n\t\tclipboardData.setData(\"text/html\", html);\n\t}\n\tclipboardData.setData(\"text/plain\", text);\n\tevent.preventDefault();\n\treturn true;\n};\nvar _onCut = function (event) {\n\tconst range = this.getSelection();\n\tconst root = this._root;\n\tif (range.collapsed) {\n\t\tevent.preventDefault();\n\t\treturn;\n\t}\n\tthis.saveUndoState(range);\n\tconst handled = extractRangeToClipboard(\n\t\t\tevent,\n\t\t\trange,\n\t\t\troot,\n\t\t\ttrue,\n\t\t\tthis._config.willCutCopy,\n\t\t\tthis._config.toPlainText,\n\t\t\tfalse\n\t);\n\tif (!handled) {\n\t\tsetTimeout(() => {\n\t\t\ttry {\n\t\t\t\tthis._ensureBottomLine();\n\t\t\t} catch (error) {\n\t\t\t\tthis._config.didError(error);\n\t\t\t}\n\t\t}, 0);\n\t}\n\tthis.setSelection(range);\n};\nvar _onCopy = function (event) {\n\textractRangeToClipboard(\n\t\t\tevent,\n\t\t\tthis.getSelection(),\n\t\t\tthis._root,\n\t\t\tfalse,\n\t\t\tthis._config.willCutCopy,\n\t\t\tthis._config.toPlainText,\n\t\t\tfalse\n\t);\n};\nvar _monitorShiftKey = function (event) {\n\tthis._isShiftDown = event.shiftKey;\n};\nvar _onPaste = function (event) {\n\tconst clipboardData = event.clipboardData;\n\tconst items = clipboardData?.items;\n\tconst choosePlain = this._isShiftDown;\n\tlet hasRTF = false;\n\tlet hasImage = false;\n\tlet plainItem = null;\n\tlet htmlItem = null;\n\tif (items) {\n\t\tlet l = items.length;\n\t\twhile (l--) {\n\t\t\tconst item = items[l];\n\t\t\tconst type = item.type;\n\t\t\tif (type === \"text/html\") {\n\t\t\t\thtmlItem = item;\n\t\t\t} else if (type === \"text/plain\" || type === \"text/uri-list\") {\n\t\t\t\tplainItem = item;\n\t\t\t} else if (type === \"text/rtf\") {\n\t\t\t\thasRTF = true;\n\t\t\t} else if (/^image\\/.*/.test(type)) {\n\t\t\t\thasImage = true;\n\t\t\t}\n\t\t}\n\t\tif (hasImage && !(hasRTF && htmlItem)) {\n\t\t\tevent.preventDefault();\n\t\t\tthis.fireEvent(\"pasteImage\", {\n\t\t\t\tclipboardData\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tif (!isLegacyEdge) {\n\t\t\tevent.preventDefault();\n\t\t\tif (htmlItem && (!choosePlain || !plainItem)) {\n\t\t\t\thtmlItem.getAsString((html) => {\n\t\t\t\t\tthis.insertHTML(html, true);\n\t\t\t\t});\n\t\t\t} else if (plainItem) {\n\t\t\t\tplainItem.getAsString((text) => {\n\t\t\t\t\tlet isLink = false;\n\t\t\t\t\tconst range2 = this.getSelection();\n\t\t\t\t\tif (!range2.collapsed && notWS.test(range2.toString())) {\n\t\t\t\t\t\tconst match = this.linkRegExp.exec(text);\n\t\t\t\t\t\tisLink = !!match && match[0].length === text.length;\n\t\t\t\t\t}\n\t\t\t\t\tif (isLink) {\n\t\t\t\t\t\tthis.makeLink(text);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.insertPlainText(text, true);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t}\n\tconst types = clipboardData?.types;\n\tif (!isLegacyEdge && types && (indexOf.call(types, \"text/html\") > -1 || !isGecko && indexOf.call(types, \"text/plain\") > -1 && indexOf.call(types, \"text/rtf\") < 0)) {\n\t\tevent.preventDefault();\n\t\tlet data;\n\t\tif (!choosePlain && (data = clipboardData.getData(\"text/html\"))) {\n\t\t\tthis.insertHTML(data, true);\n\t\t} else if ((data = clipboardData.getData(\"text/plain\")) || (data = clipboardData.getData(\"text/uri-list\"))) {\n\t\t\tthis.insertPlainText(data, true);\n\t\t}\n\t\treturn;\n\t}\n\tconst body = document.body;\n\tconst range = this.getSelection();\n\tconst startContainer = range.startContainer;\n\tconst startOffset = range.startOffset;\n\tconst endContainer = range.endContainer;\n\tconst endOffset = range.endOffset;\n\tlet pasteArea = createElement(\"DIV\", {\n\t\tcontenteditable: \"true\",\n\t\tstyle: \"position:fixed; overflow:hidden; top:0; right:100%; width:1px; height:1px;\"\n\t});\n\tbody.appendChild(pasteArea);\n\trange.selectNodeContents(pasteArea);\n\tthis.setSelection(range);\n\tsetTimeout(() => {\n\t\ttry {\n\t\t\tlet html = \"\";\n\t\t\tlet next = pasteArea;\n\t\t\tlet first;\n\t\t\twhile (pasteArea = next) {\n\t\t\t\tnext = pasteArea.nextSibling;\n\t\t\t\tdetach(pasteArea);\n\t\t\t\tfirst = pasteArea.firstChild;\n\t\t\t\tif (first && first === pasteArea.lastChild && first instanceof HTMLDivElement) {\n\t\t\t\t\tpasteArea = first;\n\t\t\t\t}\n\t\t\t\thtml += pasteArea.innerHTML;\n\t\t\t}\n\t\t\tthis.setSelection(\n\t\t\t\t\tcreateRange(\n\t\t\t\t\t\t\tstartContainer,\n\t\t\t\t\t\t\tstartOffset,\n\t\t\t\t\t\t\tendContainer,\n\t\t\t\t\t\t\tendOffset\n\t\t\t\t\t)\n\t\t\t);\n\t\t\tif (html) {\n\t\t\t\tthis.insertHTML(html, true);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis._config.didError(error);\n\t\t}\n\t}, 0);\n};\nvar _onDrop = function (event) {\n\tif (!event.dataTransfer) {\n\t\treturn;\n\t}\n\tconst types = event.dataTransfer.types;\n\tlet l = types.length;\n\tlet hasPlain = false;\n\tlet hasHTML = false;\n\twhile (l--) {\n\t\tswitch (types[l]) {\n\t\t\tcase \"text/plain\":\n\t\t\t\thasPlain = true;\n\t\t\t\tbreak;\n\t\t\tcase \"text/html\":\n\t\t\t\thasHTML = true;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn;\n\t\t}\n\t}\n\tif (hasHTML || hasPlain && this.saveUndoState) {\n\t\tthis.saveUndoState();\n\t}\n};\n\n// source/keyboard/Enter.ts\nvar Enter = (self, event, range) => {\n\tevent.preventDefault();\n\tself.splitBlock(event.shiftKey, range);\n};\n\n// source/keyboard/KeyHelpers.ts\nvar afterDelete = (self, range) => {\n\ttry {\n\t\tif (!range) {\n\t\t\trange = self.getSelection();\n\t\t}\n\t\tlet node = range.startContainer;\n\t\tif (node instanceof Text) {\n\t\t\tnode = node.parentNode;\n\t\t}\n\t\tlet parent = node;\n\t\twhile (isInline(parent) && (!parent.textContent || parent.textContent === ZWS)) {\n\t\t\tnode = parent;\n\t\t\tparent = node.parentNode;\n\t\t}\n\t\tif (node !== parent) {\n\t\t\trange.setStart(\n\t\t\t\t\tparent,\n\t\t\t\t\tArray.from(parent.childNodes).indexOf(node)\n\t\t\t);\n\t\t\trange.collapse(true);\n\t\t\tparent.removeChild(node);\n\t\t\tif (!isBlock(parent)) {\n\t\t\t\tparent = getPreviousBlock(parent, self._root) || self._root;\n\t\t\t}\n\t\t\tfixCursor(parent);\n\t\t\tmoveRangeBoundariesDownTree(range);\n\t\t}\n\t\tif (node === self._root && (node = node.firstChild) && node.nodeName === \"BR\") {\n\t\t\tdetach(node);\n\t\t}\n\t\tself._ensureBottomLine();\n\t\tself.setSelection(range);\n\t\tself._updatePath(range, true);\n\t} catch (error) {\n\t\tself._config.didError(error);\n\t}\n};\nvar detachUneditableNode = (node, root) => {\n\tlet parent;\n\twhile (parent = node.parentNode) {\n\t\tif (parent === root || parent.isContentEditable) {\n\t\t\tbreak;\n\t\t}\n\t\tnode = parent;\n\t}\n\tdetach(node);\n};\nvar linkifyText = (self, textNode, offset) => {\n\tif (getNearest(textNode, self._root, \"A\")) {\n\t\treturn;\n\t}\n\tconst data = textNode.data || \"\";\n\tconst searchFrom = Math.max(\n\t\t\tdata.lastIndexOf(\" \", offset - 1),\n\t\t\tdata.lastIndexOf(\"\\xA0\", offset - 1)\n\t) + 1;\n\tconst searchText = data.slice(searchFrom, offset);\n\tconst match = self.linkRegExp.exec(searchText);\n\tif (match) {\n\t\tconst selection = self.getSelection();\n\t\tself._docWasChanged();\n\t\tself._recordUndoState(selection);\n\t\tself._getRangeAndRemoveBookmark(selection);\n\t\tconst index = searchFrom + match.index;\n\t\tconst endIndex = index + match[0].length;\n\t\tconst needsSelectionUpdate = selection.startContainer === textNode;\n\t\tconst newSelectionOffset = selection.startOffset - endIndex;\n\t\tif (index) {\n\t\t\ttextNode = textNode.splitText(index);\n\t\t}\n\t\tconst defaultAttributes = self._config.tagAttributes.a;\n\t\tconst link = createElement(\n\t\t\t\t\"A\",\n\t\t\t\tObject.assign(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\thref: match[1] ? /^(?:ht|f)tps?:/i.test(match[1]) ? match[1] : \"http://\" + match[1] : \"mailto:\" + match[0]\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdefaultAttributes\n\t\t\t\t)\n\t\t);\n\t\tlink.textContent = data.slice(index, endIndex);\n\t\ttextNode.parentNode.insertBefore(link, textNode);\n\t\ttextNode.data = data.slice(endIndex);\n\t\tif (needsSelectionUpdate) {\n\t\t\tselection.setStart(textNode, newSelectionOffset);\n\t\t\tselection.setEnd(textNode, newSelectionOffset);\n\t\t}\n\t\tself.setSelection(selection);\n\t}\n};\n\n// source/keyboard/Backspace.ts\nvar Backspace = (self, event, range) => {\n\tconst root = self._root;\n\tself._removeZWS();\n\tself.saveUndoState(range);\n\tif (!range.collapsed) {\n\t\tevent.preventDefault();\n\t\tdeleteContentsOfRange(range, root);\n\t\tafterDelete(self, range);\n\t} else if (rangeDoesStartAtBlockBoundary(range, root)) {\n\t\tevent.preventDefault();\n\t\tconst startBlock = getStartBlockOfRange(range, root);\n\t\tif (!startBlock) {\n\t\t\treturn;\n\t\t}\n\t\tlet current = startBlock;\n\t\tfixContainer(current.parentNode, root, self._config);\n\t\tconst previous = getPreviousBlock(current, root);\n\t\tif (previous) {\n\t\t\tif (!previous.isContentEditable) {\n\t\t\t\tdetachUneditableNode(previous, root);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tmergeWithBlock(previous, current, range, root);\n\t\t\tcurrent = previous.parentNode;\n\t\t\twhile (current !== root && !current.nextSibling) {\n\t\t\t\tcurrent = current.parentNode;\n\t\t\t}\n\t\t\tif (current !== root && (current = current.nextSibling)) {\n\t\t\t\tmergeContainers(current, root, self._config);\n\t\t\t}\n\t\t\tself.setSelection(range);\n\t\t} else if (current) {\n\t\t\tif (getNearest(current, root, \"UL\") || getNearest(current, root, \"OL\")) {\n\t\t\t\tself.decreaseListLevel(range);\n\t\t\t\treturn;\n\t\t\t} else if (getNearest(current, root, \"DIV\", indentedNodeAttributes)) {\n\t\t\t\tself.removeIndentation(range);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tself.setSelection(range);\n\t\t\tself._updatePath(range, true);\n\t\t}\n\t} else {\n\t\tmoveRangeBoundariesDownTree(range);\n\t\tconst text = range.startContainer;\n\t\tconst offset = range.startOffset;\n\t\tconst a = text.parentNode;\n\t\tif (text instanceof Text && a instanceof HTMLAnchorElement && offset && a.href.includes(text.data)) {\n\t\t\ttext.deleteData(offset - 1, 1);\n\t\t\tself.setSelection(range);\n\t\t\tself.removeLink();\n\t\t\tevent.preventDefault();\n\t\t} else {\n\t\t\tself.setSelection(range);\n\t\t\tsetTimeout(() => {\n\t\t\t\tafterDelete(self);\n\t\t\t}, 0);\n\t\t}\n\t}\n};\n\n// source/keyboard/Delete.ts\nvar Delete = (self, event, range) => {\n\tconst root = self._root;\n\tlet current;\n\tlet next;\n\tlet originalRange;\n\tlet cursorContainer;\n\tlet cursorOffset;\n\tlet nodeAfterCursor;\n\tself._removeZWS();\n\tself.saveUndoState(range);\n\tif (!range.collapsed) {\n\t\tevent.preventDefault();\n\t\tdeleteContentsOfRange(range, root);\n\t\tafterDelete(self, range);\n\t} else if (rangeDoesEndAtBlockBoundary(range, root)) {\n\t\tevent.preventDefault();\n\t\tcurrent = getStartBlockOfRange(range, root);\n\t\tif (!current) {\n\t\t\treturn;\n\t\t}\n\t\tfixContainer(current.parentNode, root, self._config);\n\t\tnext = getNextBlock(current, root);\n\t\tif (next) {\n\t\t\tif (!next.isContentEditable) {\n\t\t\t\tdetachUneditableNode(next, root);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tmergeWithBlock(current, next, range, root);\n\t\t\tnext = current.parentNode;\n\t\t\twhile (next !== root && !next.nextSibling) {\n\t\t\t\tnext = next.parentNode;\n\t\t\t}\n\t\t\tif (next !== root && (next = next.nextSibling)) {\n\t\t\t\tmergeContainers(next, root, self._config);\n\t\t\t}\n\t\t\tself.setSelection(range);\n\t\t\tself._updatePath(range, true);\n\t\t}\n\t} else {\n\t\toriginalRange = range.cloneRange();\n\t\tmoveRangeBoundariesUpTree(range, root, root, root);\n\t\tcursorContainer = range.endContainer;\n\t\tcursorOffset = range.endOffset;\n\t\tif (cursorContainer instanceof Element) {\n\t\t\tnodeAfterCursor = cursorContainer.childNodes[cursorOffset];\n\t\t\tif (nodeAfterCursor && nodeAfterCursor.nodeName === \"IMG\") {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tdetach(nodeAfterCursor);\n\t\t\t\tmoveRangeBoundariesDownTree(range);\n\t\t\t\tafterDelete(self, range);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tself.setSelection(originalRange);\n\t\tsetTimeout(() => {\n\t\t\tafterDelete(self);\n\t\t}, 0);\n\t}\n};\n\n// source/keyboard/Tab.ts\nvar Tab = (self, event, range) => {\n\tconst root = self._root;\n\tself._removeZWS();\n\tif (range.collapsed && rangeDoesStartAtBlockBoundary(range, root)) {\n\t\tlet node = getStartBlockOfRange(range, root);\n\t\tlet parent;\n\t\twhile (parent = node.parentNode) {\n\t\t\tif (parent.nodeName === \"UL\" || parent.nodeName === \"OL\") {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tself.increaseListLevel(range);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tnode = parent;\n\t\t}\n\t}\n};\nvar ShiftTab = (self, event, range) => {\n\tconst root = self._root;\n\tself._removeZWS();\n\tif (range.collapsed && rangeDoesStartAtBlockBoundary(range, root)) {\n\t\tconst node = range.startContainer;\n\t\tif (getNearest(node, root, \"UL\") || getNearest(node, root, \"OL\")) {\n\t\t\tevent.preventDefault();\n\t\t\tself.decreaseListLevel(range);\n\t\t}\n\t}\n};\n\n// source/keyboard/Space.ts\nvar Space = (self, event, range) => {\n\tlet node;\n\tconst root = self._root;\n\tself._recordUndoState(range);\n\tself._getRangeAndRemoveBookmark(range);\n\tif (!range.collapsed) {\n\t\tdeleteContentsOfRange(range, root);\n\t\tself._ensureBottomLine();\n\t\tself.setSelection(range);\n\t\tself._updatePath(range, true);\n\t} else if (rangeDoesEndAtBlockBoundary(range, root)) {\n\t\tconst block = getStartBlockOfRange(range, root);\n\t\tif (block && block.nodeName !== \"PRE\") {\n\t\t\tconst text = block.textContent?.trimEnd().replace(ZWS, \"\");\n\t\t\tif (text === \"*\" || text === \"1.\") {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tself.insertPlainText(\" \", false);\n\t\t\t\tself._docWasChanged();\n\t\t\t\tself.saveUndoState(range);\n\t\t\t\tconst walker = new TreeIterator(block, SHOW_TEXT);\n\t\t\t\tlet textNode;\n\t\t\t\twhile (textNode = walker.nextNode()) {\n\t\t\t\t\tdetach(textNode);\n\t\t\t\t}\n\t\t\t\tif (text === \"*\") {\n\t\t\t\t\tself.makeUnorderedList();\n\t\t\t\t} else {\n\t\t\t\t\tself.makeOrderedList();\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\tnode = range.endContainer;\n\tif (range.endOffset === getLength(node)) {\n\t\tdo {\n\t\t\tif (node.nodeName === \"A\") {\n\t\t\t\trange.setStartAfter(node);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} while (!node.nextSibling && (node = node.parentNode) && node !== root);\n\t}\n\tif (self._config.addLinks) {\n\t\tconst linkRange = range.cloneRange();\n\t\tmoveRangeBoundariesDownTree(linkRange);\n\t\tconst textNode = linkRange.startContainer;\n\t\tconst offset = linkRange.startOffset;\n\t\tsetTimeout(() => {\n\t\t\tlinkifyText(self, textNode, offset);\n\t\t}, 0);\n\t}\n\tself.setSelection(range);\n};\n\n// source/keyboard/KeyHandlers.ts\nvar _onKey = function (event) {\n\tif (event.defaultPrevented || event.isComposing) {\n\t\treturn;\n\t}\n\t// tutao: we need to lowercase the last letter in case the key combo contains \"Shift\" as it will be set as uppercase letter\n\t// see https://github.com/fastmail/Squire/issues/457\n\tlet key = event.key;\n\tconst lastCharacterIndex = key.length - 1\n\tconst lastCharacter = key.charAt(lastCharacterIndex)\n\tkey = key.substring(0, lastCharacterIndex) + lastCharacter.toLowerCase()\n\n\tlet modifiers = \"\";\n\tif (key !== \"Backspace\" && key !== \"Delete\") {\n\t\tif (event.altKey) {\n\t\t\tmodifiers += \"Alt-\";\n\t\t}\n\t\tif (event.ctrlKey) {\n\t\t\tmodifiers += \"Ctrl-\";\n\t\t}\n\t\tif (event.metaKey) {\n\t\t\tmodifiers += \"Meta-\";\n\t\t}\n\t\tif (event.shiftKey) {\n\t\t\tmodifiers += \"Shift-\";\n\t\t}\n\t}\n\tif (isWin && event.shiftKey && key === \"Delete\") {\n\t\tmodifiers += \"Shift-\";\n\t}\n\tkey = modifiers + key;\n\tconst range = this.getSelection();\n\tif (this._keyHandlers[key]) {\n\t\tthis._keyHandlers[key](this, event, range);\n\t} else if (!range.collapsed && !event.ctrlKey && !event.metaKey && key.length === 1) {\n\t\tthis.saveUndoState(range);\n\t\tdeleteContentsOfRange(range, this._root);\n\t\tthis._ensureBottomLine();\n\t\tthis.setSelection(range);\n\t\tthis._updatePath(range, true);\n\t}\n};\nvar keyHandlers = {\n\t\"Backspace\": Backspace,\n\t\"Delete\": Delete,\n\t\"Tab\": Tab,\n\t\"Shift-Tab\": ShiftTab,\n\t\" \": Space,\n\t\"ArrowLeft\"(self) {\n\t\tself._removeZWS();\n\t},\n\t\"ArrowRight\"(self, event, range) {\n\t\tself._removeZWS();\n\t\tconst root = self.getRoot();\n\t\tif (rangeDoesEndAtBlockBoundary(range, root)) {\n\t\t\tmoveRangeBoundariesDownTree(range);\n\t\t\tlet node = range.endContainer;\n\t\t\tdo {\n\t\t\t\tif (node.nodeName === \"CODE\") {\n\t\t\t\t\tlet next = node.nextSibling;\n\t\t\t\t\tif (!(next instanceof Text)) {\n\t\t\t\t\t\tconst textNode = document.createTextNode(\"\\xA0\");\n\t\t\t\t\t\tnode.parentNode.insertBefore(textNode, next);\n\t\t\t\t\t\tnext = textNode;\n\t\t\t\t\t}\n\t\t\t\t\trange.setStart(next, 1);\n\t\t\t\t\tself.setSelection(range);\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} while (!node.nextSibling && (node = node.parentNode) && node !== root);\n\t\t}\n\t}\n};\nif (!supportsInputEvents) {\n\tkeyHandlers.Enter = Enter;\n\tkeyHandlers[\"Shift-Enter\"] = Enter;\n}\nif (!isMac && !isIOS) {\n\tkeyHandlers.PageUp = (self) => {\n\t\tself.moveCursorToStart();\n\t};\n\tkeyHandlers.PageDown = (self) => {\n\t\tself.moveCursorToEnd();\n\t};\n}\nvar mapKeyToFormat = (tag, remove) => {\n\tremove = remove || null;\n\treturn (self, event) => {\n\t\tevent.preventDefault();\n\t\tconst range = self.getSelection();\n\t\tif (self.hasFormat(tag, null, range)) {\n\t\t\tself.changeFormat(null, {tag}, range);\n\t\t} else {\n\t\t\tself.changeFormat({tag}, remove, range);\n\t\t}\n\t};\n};\nkeyHandlers[ctrlKey + \"b\"] = mapKeyToFormat(\"B\");\nkeyHandlers[ctrlKey + \"i\"] = mapKeyToFormat(\"I\");\nkeyHandlers[ctrlKey + \"u\"] = mapKeyToFormat(\"U\");\nkeyHandlers[ctrlKey + \"Shift-7\"] = mapKeyToFormat(\"S\");\nkeyHandlers[ctrlKey + \"Shift-5\"] = mapKeyToFormat(\"SUB\", {tag: \"SUP\"});\nkeyHandlers[ctrlKey + \"Shift-6\"] = mapKeyToFormat(\"SUP\", {tag: \"SUB\"});\nkeyHandlers[ctrlKey + \"Shift-8\"] = (self, event) => {\n\tevent.preventDefault();\n\tconst path = self.getPath();\n\tif (!/(?:^|>)UL/.test(path)) {\n\t\tself.makeUnorderedList();\n\t} else {\n\t\tself.removeList();\n\t}\n};\nkeyHandlers[ctrlKey + \"Shift-9\"] = (self, event) => {\n\tevent.preventDefault();\n\tconst path = self.getPath();\n\tif (!/(?:^|>)OL/.test(path)) {\n\t\tself.makeOrderedList();\n\t} else {\n\t\tself.removeList();\n\t}\n};\nkeyHandlers[ctrlKey + \"[\"] = (self, event) => {\n\tevent.preventDefault();\n\tconst path = self.getPath();\n\tif (/(?:^|>)[OU]L/.test(path)) {\n\t\tself.decreaseListLevel();\n\t} else {\n\t\tself.decreaseIndentationLevel();\n\t}\n};\nkeyHandlers[ctrlKey + \"]\"] = (self, event) => {\n\tevent.preventDefault();\n\tconst path = self.getPath();\n\tif (/(?:^|>)[OU]L/.test(path)) {\n\t\tself.increaseListLevel();\n\t} else {\n\t\tself.increaseIndentationLevel();\n\t}\n};\nkeyHandlers[ctrlKey + \"d\"] = (self, event) => {\n\tevent.preventDefault();\n\tself.toggleCode();\n};\nkeyHandlers[ctrlKey + \"z\"] = (self, event) => {\n\tevent.preventDefault();\n\tself.undo();\n};\nkeyHandlers[ctrlKey + \"y\"] = keyHandlers[ctrlKey + \"Shift-z\"] = (self, event) => {\n\tevent.preventDefault();\n\tself.redo();\n};\n\n// source/Editor.ts\nvar Squire = class {\n\tconstructor(root, config) {\n\t\t/**\n\t\t * Subscribing to these events won't automatically add a listener to the\n\t\t * document node, since these events are fired in a custom manner by the\n\t\t * editor code.\n\t\t */\n\t\tthis.customEvents = /* @__PURE__ */ new Set([\n\t\t\t\"pathChange\",\n\t\t\t\"select\",\n\t\t\t\"input\",\n\t\t\t\"pasteImage\",\n\t\t\t\"undoStateChange\"\n\t\t]);\n\t\t// ---\n\t\tthis.startSelectionId = \"squire-selection-start\";\n\t\tthis.endSelectionId = \"squire-selection-end\";\n\t\t/*\n    linkRegExp = new RegExp(\n        // Only look on boundaries\n        '\\\\b(?:' +\n        // Capture group 1: URLs\n        '(' +\n            // Add links to URLS\n            // Starts with:\n            '(?:' +\n                // http(s):// or ftp://\n                '(?:ht|f)tps?:\\\\/\\\\/' +\n                // or\n                '|' +\n                // www.\n                'www\\\\d{0,3}[.]' +\n                // or\n                '|' +\n                // foo90.com/\n                '[a-z0-9][a-z0-9.\\\\-]*[.][a-z]{2,}\\\\/' +\n            ')' +\n            // Then we get one or more:\n            '(?:' +\n                // Run of non-spaces, non ()<>\n                '[^\\\\s()<>]+' +\n                // or\n                '|' +\n                // balanced parentheses (one level deep only)\n                '\\\\([^\\\\s()<>]+\\\\)' +\n            ')+' +\n            // And we finish with\n            '(?:' +\n                // Not a space or punctuation character\n                '[^\\\\s?&`!()\\\\[\\\\]{};:\\'\".,<>«»“”‘’]' +\n                // or\n                '|' +\n                // Balanced parentheses.\n                '\\\\([^\\\\s()<>]+\\\\)' +\n            ')' +\n        // Capture group 2: Emails\n        ')|(' +\n            // Add links to emails\n            '[\\\\w\\\\-.%+]+@(?:[\\\\w\\\\-]+\\\\.)+[a-z]{2,}\\\\b' +\n            // Allow query parameters in the mailto: style\n            '(?:' +\n                '[?][^&?\\\\s]+=[^\\\\s?&`!()\\\\[\\\\]{};:\\'\".,<>«»“”‘’]+' +\n                '(?:&[^&?\\\\s]+=[^\\\\s?&`!()\\\\[\\\\]{};:\\'\".,<>«»“”‘’]+)*' +\n            ')?' +\n        '))',\n        'i'\n    );\n    */\n\t\tthis.linkRegExp = /\\b(?:((?:(?:ht|f)tps?:\\/\\/|www\\d{0,3}[.]|[a-z0-9][a-z0-9.\\-]*[.][a-z]{2,}\\/)(?:[^\\s()<>]+|\\([^\\s()<>]+\\))+(?:[^\\s?&`!()\\[\\]{};:'\".,<>«»“”‘’]|\\([^\\s()<>]+\\)))|([\\w\\-.%+]+@(?:[\\w\\-]+\\.)+[a-z]{2,}\\b(?:[?][^&?\\s]+=[^\\s?&`!()\\[\\]{};:'\".,<>«»“”‘’]+(?:&[^&?\\s]+=[^\\s?&`!()\\[\\]{};:'\".,<>«»“”‘’]+)*)?))/i;\n\t\tthis.tagAfterSplit = {\n\t\t\tDT: \"DD\",\n\t\t\tDD: \"DT\",\n\t\t\tLI: \"LI\",\n\t\t\tPRE: \"PRE\"\n\t\t};\n\t\tthis._root = root;\n\t\tthis._config = this._makeConfig(config);\n\t\tthis._isFocused = false;\n\t\tthis._lastSelection = createRange(root, 0);\n\t\tthis._willRestoreSelection = false;\n\t\tthis._mayHaveZWS = false;\n\t\tthis._lastAnchorNode = null;\n\t\tthis._lastFocusNode = null;\n\t\tthis._path = \"\";\n\t\tthis._events = /* @__PURE__ */ new Map();\n\t\tthis._undoIndex = -1;\n\t\tthis._undoStack = [];\n\t\tthis._undoStackLength = 0;\n\t\tthis._isInUndoState = false;\n\t\tthis._ignoreChange = false;\n\t\tthis._ignoreAllChanges = false;\n\t\tthis.addEventListener(\"selectionchange\", this._updatePathOnEvent);\n\t\tthis.addEventListener(\"blur\", this._enableRestoreSelection);\n\t\tthis.addEventListener(\"mousedown\", this._disableRestoreSelection);\n\t\tthis.addEventListener(\"touchstart\", this._disableRestoreSelection);\n\t\tthis.addEventListener(\"focus\", this._restoreSelection);\n\t\tthis._isShiftDown = false;\n\t\tthis.addEventListener(\"cut\", _onCut);\n\t\tthis.addEventListener(\"copy\", _onCopy);\n\t\tthis.addEventListener(\"paste\", _onPaste);\n\t\tthis.addEventListener(\"drop\", _onDrop);\n\t\tthis.addEventListener(\n\t\t\t\t\"keydown\",\n\t\t\t\t_monitorShiftKey\n\t\t);\n\t\tthis.addEventListener(\"keyup\", _monitorShiftKey);\n\t\tthis.addEventListener(\"keydown\", _onKey);\n\t\tthis._keyHandlers = Object.create(keyHandlers);\n\t\tconst mutation = new MutationObserver(() => this._docWasChanged());\n\t\tmutation.observe(root, {\n\t\t\tchildList: true,\n\t\t\tattributes: true,\n\t\t\tcharacterData: true,\n\t\t\tsubtree: true\n\t\t});\n\t\tthis._mutation = mutation;\n\t\troot.setAttribute(\"contenteditable\", \"true\");\n\t\tthis.addEventListener(\n\t\t\t\t\"beforeinput\",\n\t\t\t\tthis._beforeInput\n\t\t);\n\t\tthis.setHTML(\"\");\n\t}\n\n\tdestroy() {\n\t\tthis._events.forEach((_, type) => {\n\t\t\tthis.removeEventListener(type);\n\t\t});\n\t\tthis._mutation.disconnect();\n\t\tthis._undoIndex = -1;\n\t\tthis._undoStack = [];\n\t\tthis._undoStackLength = 0;\n\t}\n\n\t_makeConfig(userConfig) {\n\t\tconst config = {\n\t\t\tblockTag: \"DIV\",\n\t\t\tblockAttributes: null,\n\t\t\ttagAttributes: {},\n\t\t\tclassNames: {\n\t\t\t\tcolor: \"color\",\n\t\t\t\tfontFamily: \"font\",\n\t\t\t\tfontSize: \"size\",\n\t\t\t\thighlight: \"highlight\"\n\t\t\t},\n\t\t\tundo: {\n\t\t\t\tdocumentSizeThreshold: -1,\n\t\t\t\t// -1 means no threshold\n\t\t\t\tundoLimit: -1\n\t\t\t\t// -1 means no limit\n\t\t\t},\n\t\t\taddLinks: true,\n\t\t\twillCutCopy: null,\n\t\t\ttoPlainText: null,\n\t\t\tsanitizeToDOMFragment: (html) => {\n\t\t\t\tconst frag = DOMPurify.sanitize(html, {\n\t\t\t\t\tALLOW_UNKNOWN_PROTOCOLS: true,\n\t\t\t\t\tWHOLE_DOCUMENT: false,\n\t\t\t\t\tRETURN_DOM: true,\n\t\t\t\t\tRETURN_DOM_FRAGMENT: true,\n\t\t\t\t\tFORCE_BODY: false\n\t\t\t\t});\n\t\t\t\treturn frag ? document.importNode(frag, true) : document.createDocumentFragment();\n\t\t\t},\n\t\t\tdidError: (error) => console.log(error)\n\t\t};\n\t\tif (userConfig) {\n\t\t\tObject.assign(config, userConfig);\n\t\t\tconfig.blockTag = config.blockTag.toUpperCase();\n\t\t}\n\t\treturn config;\n\t}\n\n\tsetKeyHandler(key, fn) {\n\t\tthis._keyHandlers[key] = fn;\n\t\treturn this;\n\t}\n\n\t_beforeInput(event) {\n\t\tswitch (event.inputType) {\n\t\t\tcase \"insertLineBreak\":\n\t\t\t\tevent.preventDefault();\n\t\t\t\tthis.splitBlock(true);\n\t\t\t\tbreak;\n\t\t\tcase \"insertParagraph\":\n\t\t\t\tevent.preventDefault();\n\t\t\t\tthis.splitBlock(false);\n\t\t\t\tbreak;\n\t\t\tcase \"insertOrderedList\":\n\t\t\t\tevent.preventDefault();\n\t\t\t\tthis.makeOrderedList();\n\t\t\t\tbreak;\n\t\t\tcase \"insertUnoderedList\":\n\t\t\t\tevent.preventDefault();\n\t\t\t\tthis.makeUnorderedList();\n\t\t\t\tbreak;\n\t\t\tcase \"historyUndo\":\n\t\t\t\tevent.preventDefault();\n\t\t\t\tthis.undo();\n\t\t\t\tbreak;\n\t\t\tcase \"historyRedo\":\n\t\t\t\tevent.preventDefault();\n\t\t\t\tthis.redo();\n\t\t\t\tbreak;\n\t\t\tcase \"formatBold\":\n\t\t\t\tevent.preventDefault();\n\t\t\t\tthis.bold();\n\t\t\t\tbreak;\n\t\t\tcase \"formaItalic\":\n\t\t\t\tevent.preventDefault();\n\t\t\t\tthis.italic();\n\t\t\t\tbreak;\n\t\t\tcase \"formatUnderline\":\n\t\t\t\tevent.preventDefault();\n\t\t\t\tthis.underline();\n\t\t\t\tbreak;\n\t\t\tcase \"formatStrikeThrough\":\n\t\t\t\tevent.preventDefault();\n\t\t\t\tthis.strikethrough();\n\t\t\t\tbreak;\n\t\t\tcase \"formatSuperscript\":\n\t\t\t\tevent.preventDefault();\n\t\t\t\tthis.superscript();\n\t\t\t\tbreak;\n\t\t\tcase \"formatSubscript\":\n\t\t\t\tevent.preventDefault();\n\t\t\t\tthis.subscript();\n\t\t\t\tbreak;\n\t\t\tcase \"formatJustifyFull\":\n\t\t\tcase \"formatJustifyCenter\":\n\t\t\tcase \"formatJustifyRight\":\n\t\t\tcase \"formatJustifyLeft\": {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tlet alignment = event.inputType.slice(13).toLowerCase();\n\t\t\t\tif (alignment === \"full\") {\n\t\t\t\t\talignment = \"justify\";\n\t\t\t\t}\n\t\t\t\tthis.setTextAlignment(alignment);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"formatRemove\":\n\t\t\t\tevent.preventDefault();\n\t\t\t\tthis.removeAllFormatting();\n\t\t\t\tbreak;\n\t\t\tcase \"formatSetBlockTextDirection\": {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tlet dir = event.data;\n\t\t\t\tif (dir === \"null\") {\n\t\t\t\t\tdir = null;\n\t\t\t\t}\n\t\t\t\tthis.setTextDirection(dir);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"formatBackColor\":\n\t\t\t\tevent.preventDefault();\n\t\t\t\tthis.setHighlightColor(event.data);\n\t\t\t\tbreak;\n\t\t\tcase \"formatFontColor\":\n\t\t\t\tevent.preventDefault();\n\t\t\t\tthis.setTextColor(event.data);\n\t\t\t\tbreak;\n\t\t\tcase \"formatFontName\":\n\t\t\t\tevent.preventDefault();\n\t\t\t\tthis.setFontFace(event.data);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t// --- Events\n\thandleEvent(event) {\n\t\tthis.fireEvent(event.type, event);\n\t}\n\n\tfireEvent(type, detail) {\n\t\tlet handlers = this._events.get(type);\n\t\tif (/^(?:focus|blur)/.test(type)) {\n\t\t\tconst isFocused = this._root === document.activeElement;\n\t\t\tif (type === \"focus\") {\n\t\t\t\tif (!isFocused || this._isFocused) {\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t\tthis._isFocused = true;\n\t\t\t} else {\n\t\t\t\tif (isFocused || !this._isFocused) {\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t\tthis._isFocused = false;\n\t\t\t}\n\t\t}\n\t\tif (handlers) {\n\t\t\tconst event = detail instanceof Event ? detail : new CustomEvent(type, {\n\t\t\t\tdetail\n\t\t\t});\n\t\t\thandlers = handlers.slice();\n\t\t\tfor (const handler of handlers) {\n\t\t\t\ttry {\n\t\t\t\t\tif (\"handleEvent\" in handler) {\n\t\t\t\t\t\thandler.handleEvent(event);\n\t\t\t\t\t} else {\n\t\t\t\t\t\thandler.call(this, event);\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis._config.didError(error);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\taddEventListener(type, fn) {\n\t\tlet handlers = this._events.get(type);\n\t\tlet target = this._root;\n\t\tif (!handlers) {\n\t\t\thandlers = [];\n\t\t\tthis._events.set(type, handlers);\n\t\t\tif (!this.customEvents.has(type)) {\n\t\t\t\tif (type === \"selectionchange\") {\n\t\t\t\t\ttarget = document;\n\t\t\t\t}\n\t\t\t\ttarget.addEventListener(type, this, true);\n\t\t\t}\n\t\t}\n\t\thandlers.push(fn);\n\t\treturn this;\n\t}\n\n\tremoveEventListener(type, fn) {\n\t\tconst handlers = this._events.get(type);\n\t\tlet target = this._root;\n\t\tif (handlers) {\n\t\t\tif (fn) {\n\t\t\t\tlet l = handlers.length;\n\t\t\t\twhile (l--) {\n\t\t\t\t\tif (handlers[l] === fn) {\n\t\t\t\t\t\thandlers.splice(l, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\thandlers.length = 0;\n\t\t\t}\n\t\t\tif (!handlers.length) {\n\t\t\t\tthis._events.delete(type);\n\t\t\t\tif (!this.customEvents.has(type)) {\n\t\t\t\t\tif (type === \"selectionchange\") {\n\t\t\t\t\t\ttarget = document;\n\t\t\t\t\t}\n\t\t\t\t\ttarget.removeEventListener(type, this, true);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t// --- Focus\n\tfocus() {\n\t\tthis._root.focus({preventScroll: true});\n\t\treturn this;\n\t}\n\n\tblur() {\n\t\tthis._root.blur();\n\t\treturn this;\n\t}\n\n\t// --- Selection and bookmarking\n\t_enableRestoreSelection() {\n\t\tthis._willRestoreSelection = true;\n\t}\n\n\t_disableRestoreSelection() {\n\t\tthis._willRestoreSelection = false;\n\t}\n\n\t_restoreSelection() {\n\t\tif (this._willRestoreSelection) {\n\t\t\tthis.setSelection(this._lastSelection);\n\t\t}\n\t}\n\n\t// ---\n\t_removeZWS() {\n\t\tif (!this._mayHaveZWS) {\n\t\t\treturn;\n\t\t}\n\t\tremoveZWS(this._root);\n\t\tthis._mayHaveZWS = false;\n\t}\n\n\t_saveRangeToBookmark(range) {\n\t\tlet startNode = createElement(\"INPUT\", {\n\t\t\tid: this.startSelectionId,\n\t\t\ttype: \"hidden\"\n\t\t});\n\t\tlet endNode = createElement(\"INPUT\", {\n\t\t\tid: this.endSelectionId,\n\t\t\ttype: \"hidden\"\n\t\t});\n\t\tlet temp;\n\t\tinsertNodeInRange(range, startNode);\n\t\trange.collapse(false);\n\t\tinsertNodeInRange(range, endNode);\n\t\tif (startNode.compareDocumentPosition(endNode) & Node.DOCUMENT_POSITION_PRECEDING) {\n\t\t\tstartNode.id = this.endSelectionId;\n\t\t\tendNode.id = this.startSelectionId;\n\t\t\ttemp = startNode;\n\t\t\tstartNode = endNode;\n\t\t\tendNode = temp;\n\t\t}\n\t\trange.setStartAfter(startNode);\n\t\trange.setEndBefore(endNode);\n\t}\n\n\t_getRangeAndRemoveBookmark(range) {\n\t\tconst root = this._root;\n\t\tconst start = root.querySelector(\"#\" + this.startSelectionId);\n\t\tconst end = root.querySelector(\"#\" + this.endSelectionId);\n\t\tif (start && end) {\n\t\t\tlet startContainer = start.parentNode;\n\t\t\tlet endContainer = end.parentNode;\n\t\t\tconst startOffset = Array.from(startContainer.childNodes).indexOf(\n\t\t\t\t\tstart\n\t\t\t);\n\t\t\tlet endOffset = Array.from(endContainer.childNodes).indexOf(end);\n\t\t\tif (startContainer === endContainer) {\n\t\t\t\tendOffset -= 1;\n\t\t\t}\n\t\t\tstart.remove();\n\t\t\tend.remove();\n\t\t\tif (!range) {\n\t\t\t\trange = document.createRange();\n\t\t\t}\n\t\t\trange.setStart(startContainer, startOffset);\n\t\t\trange.setEnd(endContainer, endOffset);\n\t\t\tmergeInlines(startContainer, range);\n\t\t\tif (startContainer !== endContainer) {\n\t\t\t\tmergeInlines(endContainer, range);\n\t\t\t}\n\t\t\tif (range.collapsed) {\n\t\t\t\tstartContainer = range.startContainer;\n\t\t\t\tif (startContainer instanceof Text) {\n\t\t\t\t\tendContainer = startContainer.childNodes[range.startOffset];\n\t\t\t\t\tif (!endContainer || !(endContainer instanceof Text)) {\n\t\t\t\t\t\tendContainer = startContainer.childNodes[range.startOffset - 1];\n\t\t\t\t\t}\n\t\t\t\t\tif (endContainer && endContainer instanceof Text) {\n\t\t\t\t\t\trange.setStart(endContainer, 0);\n\t\t\t\t\t\trange.collapse(true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn range || null;\n\t}\n\n\tgetSelection() {\n\t\tconst selection = window.getSelection();\n\t\tconst root = this._root;\n\t\tlet range = null;\n\t\tif (this._isFocused && selection && selection.rangeCount) {\n\t\t\trange = selection.getRangeAt(0).cloneRange();\n\t\t\tconst startContainer = range.startContainer;\n\t\t\tconst endContainer = range.endContainer;\n\t\t\tif (startContainer && isLeaf(startContainer)) {\n\t\t\t\trange.setStartBefore(startContainer);\n\t\t\t}\n\t\t\tif (endContainer && isLeaf(endContainer)) {\n\t\t\t\trange.setEndBefore(endContainer);\n\t\t\t}\n\t\t}\n\t\tif (range && root.contains(range.commonAncestorContainer)) {\n\t\t\tthis._lastSelection = range;\n\t\t} else {\n\t\t\trange = this._lastSelection;\n\t\t\tif (!document.contains(range.commonAncestorContainer)) {\n\t\t\t\trange = null;\n\t\t\t}\n\t\t}\n\t\tif (!range) {\n\t\t\trange = createRange(root.firstElementChild || root, 0);\n\t\t}\n\t\treturn range;\n\t}\n\n\tsetSelection(range) {\n\t\tthis._lastSelection = range;\n\t\tif (!this._isFocused) {\n\t\t\tthis._enableRestoreSelection();\n\t\t} else {\n\t\t\tconst selection = window.getSelection();\n\t\t\tif (selection) {\n\t\t\t\tif (\"setBaseAndExtent\" in Selection.prototype) {\n\t\t\t\t\tselection.setBaseAndExtent(\n\t\t\t\t\t\t\trange.startContainer,\n\t\t\t\t\t\t\trange.startOffset,\n\t\t\t\t\t\t\trange.endContainer,\n\t\t\t\t\t\t\trange.endOffset\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tselection.removeAllRanges();\n\t\t\t\t\tselection.addRange(range);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t// ---\n\t_moveCursorTo(toStart) {\n\t\tconst root = this._root;\n\t\tconst range = createRange(root, toStart ? 0 : root.childNodes.length);\n\t\tmoveRangeBoundariesDownTree(range);\n\t\tthis.setSelection(range);\n\t\treturn this;\n\t}\n\n\tmoveCursorToStart() {\n\t\treturn this._moveCursorTo(true);\n\t}\n\n\tmoveCursorToEnd() {\n\t\treturn this._moveCursorTo(false);\n\t}\n\n\t// ---\n\tgetCursorPosition() {\n\t\tconst range = this.getSelection();\n\t\tlet rect = range.getBoundingClientRect();\n\t\tif (rect && !rect.top) {\n\t\t\tthis._ignoreChange = true;\n\t\t\tconst node = createElement(\"SPAN\");\n\t\t\tnode.textContent = ZWS;\n\t\t\tinsertNodeInRange(range, node);\n\t\t\trect = node.getBoundingClientRect();\n\t\t\tconst parent = node.parentNode;\n\t\t\tparent.removeChild(node);\n\t\t\tmergeInlines(parent, range);\n\t\t}\n\t\treturn rect;\n\t}\n\n\t// --- Path\n\tgetPath() {\n\t\treturn this._path;\n\t}\n\n\t_updatePathOnEvent() {\n\t\tif (this._isFocused) {\n\t\t\tthis._updatePath(this.getSelection());\n\t\t}\n\t}\n\n\t_updatePath(range, force) {\n\t\tconst anchor = range.startContainer;\n\t\tconst focus = range.endContainer;\n\t\tlet newPath;\n\t\tif (force || anchor !== this._lastAnchorNode || focus !== this._lastFocusNode) {\n\t\t\tthis._lastAnchorNode = anchor;\n\t\t\tthis._lastFocusNode = focus;\n\t\t\tnewPath = anchor && focus ? anchor === focus ? this._getPath(focus) : \"(selection)\" : \"\";\n\t\t\tif (this._path !== newPath) {\n\t\t\t\tthis._path = newPath;\n\t\t\t\tthis.fireEvent(\"pathChange\", {\n\t\t\t\t\tpath: newPath\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tthis.fireEvent(range.collapsed ? \"cursor\" : \"select\", {\n\t\t\trange\n\t\t});\n\t}\n\n\t_getPath(node) {\n\t\tconst root = this._root;\n\t\tconst config = this._config;\n\t\tlet path = \"\";\n\t\tif (node && node !== root) {\n\t\t\tconst parent = node.parentNode;\n\t\t\tpath = parent ? this._getPath(parent) : \"\";\n\t\t\tif (node instanceof HTMLElement) {\n\t\t\t\tconst id = node.id;\n\t\t\t\tconst classList = node.classList;\n\t\t\t\tconst classNames = Array.from(classList).sort();\n\t\t\t\tconst dir = node.dir;\n\t\t\t\tconst styleNames = config.classNames;\n\t\t\t\tpath += (path ? \">\" : \"\") + node.nodeName;\n\t\t\t\tif (id) {\n\t\t\t\t\tpath += \"#\" + id;\n\t\t\t\t}\n\t\t\t\tif (classNames.length) {\n\t\t\t\t\tpath += \".\";\n\t\t\t\t\tpath += classNames.join(\".\");\n\t\t\t\t}\n\t\t\t\tif (dir) {\n\t\t\t\t\tpath += \"[dir=\" + dir + \"]\";\n\t\t\t\t}\n\t\t\t\tif (classList.contains(styleNames.highlight)) {\n\t\t\t\t\tpath += \"[backgroundColor=\" + node.style.backgroundColor.replace(/ /g, \"\") + \"]\";\n\t\t\t\t}\n\t\t\t\tif (classList.contains(styleNames.color)) {\n\t\t\t\t\tpath += \"[color=\" + node.style.color.replace(/ /g, \"\") + \"]\";\n\t\t\t\t}\n\t\t\t\tif (classList.contains(styleNames.fontFamily)) {\n\t\t\t\t\tpath += \"[fontFamily=\" + node.style.fontFamily.replace(/ /g, \"\") + \"]\";\n\t\t\t\t}\n\t\t\t\tif (classList.contains(styleNames.fontSize)) {\n\t\t\t\t\tpath += \"[fontSize=\" + node.style.fontSize + \"]\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn path;\n\t}\n\n\t// --- History\n\tmodifyDocument(modificationFn) {\n\t\tconst mutation = this._mutation;\n\t\tif (mutation) {\n\t\t\tif (mutation.takeRecords().length) {\n\t\t\t\tthis._docWasChanged();\n\t\t\t}\n\t\t\tmutation.disconnect();\n\t\t}\n\t\tthis._ignoreAllChanges = true;\n\t\tmodificationFn();\n\t\tthis._ignoreAllChanges = false;\n\t\tif (mutation) {\n\t\t\tmutation.observe(this._root, {\n\t\t\t\tchildList: true,\n\t\t\t\tattributes: true,\n\t\t\t\tcharacterData: true,\n\t\t\t\tsubtree: true\n\t\t\t});\n\t\t\tthis._ignoreChange = false;\n\t\t}\n\t\treturn this;\n\t}\n\n\t_docWasChanged() {\n\t\tresetNodeCategoryCache();\n\t\tthis._mayHaveZWS = true;\n\t\tif (this._ignoreAllChanges) {\n\t\t\treturn;\n\t\t}\n\t\tif (this._ignoreChange) {\n\t\t\tthis._ignoreChange = false;\n\t\t\treturn;\n\t\t}\n\t\tif (this._isInUndoState) {\n\t\t\tthis._isInUndoState = false;\n\t\t\tthis.fireEvent(\"undoStateChange\", {\n\t\t\t\tcanUndo: true,\n\t\t\t\tcanRedo: false\n\t\t\t});\n\t\t}\n\t\tthis.fireEvent(\"input\");\n\t}\n\n\t/**\n\t * Leaves bookmark.\n\t */\n\t_recordUndoState(range, replace) {\n\t\tconst isInUndoState = this._isInUndoState;\n\t\tif (!isInUndoState || replace) {\n\t\t\tlet undoIndex = this._undoIndex + 1;\n\t\t\tconst undoStack = this._undoStack;\n\t\t\tconst undoConfig = this._config.undo;\n\t\t\tconst undoThreshold = undoConfig.documentSizeThreshold;\n\t\t\tconst undoLimit = undoConfig.undoLimit;\n\t\t\tif (undoIndex < this._undoStackLength) {\n\t\t\t\tundoStack.length = this._undoStackLength = undoIndex;\n\t\t\t}\n\t\t\tif (range) {\n\t\t\t\tthis._saveRangeToBookmark(range);\n\t\t\t}\n\t\t\tif (isInUndoState) {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t\tconst html = this._getRawHTML();\n\t\t\tif (replace) {\n\t\t\t\tundoIndex -= 1;\n\t\t\t}\n\t\t\tif (undoThreshold > -1 && html.length * 2 > undoThreshold) {\n\t\t\t\tif (undoLimit > -1 && undoIndex > undoLimit) {\n\t\t\t\t\tundoStack.splice(0, undoIndex - undoLimit);\n\t\t\t\t\tundoIndex = undoLimit;\n\t\t\t\t\tthis._undoStackLength = undoLimit;\n\t\t\t\t}\n\t\t\t}\n\t\t\tundoStack[undoIndex] = html;\n\t\t\tthis._undoIndex = undoIndex;\n\t\t\tthis._undoStackLength += 1;\n\t\t\tthis._isInUndoState = true;\n\t\t}\n\t\treturn this;\n\t}\n\n\tsaveUndoState(range) {\n\t\tif (!range) {\n\t\t\trange = this.getSelection();\n\t\t}\n\t\tthis._recordUndoState(range, this._isInUndoState);\n\t\tthis._getRangeAndRemoveBookmark(range);\n\t\treturn this;\n\t}\n\n\tundo() {\n\t\tif (this._undoIndex !== 0 || !this._isInUndoState) {\n\t\t\tthis._recordUndoState(this.getSelection(), false);\n\t\t\tthis._undoIndex -= 1;\n\t\t\tthis._setRawHTML(this._undoStack[this._undoIndex]);\n\t\t\tconst range = this._getRangeAndRemoveBookmark();\n\t\t\tif (range) {\n\t\t\t\tthis.setSelection(range);\n\t\t\t}\n\t\t\tthis._isInUndoState = true;\n\t\t\tthis.fireEvent(\"undoStateChange\", {\n\t\t\t\tcanUndo: this._undoIndex !== 0,\n\t\t\t\tcanRedo: true\n\t\t\t});\n\t\t\tthis.fireEvent(\"input\");\n\t\t}\n\t\treturn this.focus();\n\t}\n\n\tredo() {\n\t\tconst undoIndex = this._undoIndex;\n\t\tconst undoStackLength = this._undoStackLength;\n\t\tif (undoIndex + 1 < undoStackLength && this._isInUndoState) {\n\t\t\tthis._undoIndex += 1;\n\t\t\tthis._setRawHTML(this._undoStack[this._undoIndex]);\n\t\t\tconst range = this._getRangeAndRemoveBookmark();\n\t\t\tif (range) {\n\t\t\t\tthis.setSelection(range);\n\t\t\t}\n\t\t\tthis.fireEvent(\"undoStateChange\", {\n\t\t\t\tcanUndo: true,\n\t\t\t\tcanRedo: undoIndex + 2 < undoStackLength\n\t\t\t});\n\t\t\tthis.fireEvent(\"input\");\n\t\t}\n\t\treturn this.focus();\n\t}\n\n\t// --- Get and set data\n\tgetRoot() {\n\t\treturn this._root;\n\t}\n\n\t_getRawHTML() {\n\t\treturn this._root.innerHTML;\n\t}\n\n\t_setRawHTML(html) {\n\t\tconst root = this._root;\n\t\troot.innerHTML = html;\n\t\tlet node = root;\n\t\tconst child = node.firstChild;\n\t\tif (!child || child.nodeName === \"BR\") {\n\t\t\tconst block = this.createDefaultBlock();\n\t\t\tif (child) {\n\t\t\t\tnode.replaceChild(block, child);\n\t\t\t} else {\n\t\t\t\tnode.appendChild(block);\n\t\t\t}\n\t\t} else {\n\t\t\twhile (node = getNextBlock(node, root)) {\n\t\t\t\tfixCursor(node);\n\t\t\t}\n\t\t}\n\t\tthis._ignoreChange = true;\n\t\treturn this;\n\t}\n\n\tgetHTML(withBookmark) {\n\t\tlet range;\n\t\tif (withBookmark) {\n\t\t\trange = this.getSelection();\n\t\t\tthis._saveRangeToBookmark(range);\n\t\t}\n\t\tconst html = this._getRawHTML().replace(/\\u200B/g, \"\");\n\t\tif (withBookmark) {\n\t\t\tthis._getRangeAndRemoveBookmark(range);\n\t\t}\n\t\treturn html;\n\t}\n\n\tsetHTML(html) {\n\t\tconst frag = this._config.sanitizeToDOMFragment(html, this);\n\t\tconst root = this._root;\n\t\tcleanTree(frag, this._config);\n\t\tcleanupBRs(frag, root, false, this._config);\n\t\tfixContainer(frag, root, this._config);\n\t\tlet node = frag;\n\t\tlet child = node.firstChild;\n\t\tif (!child || child.nodeName === \"BR\") {\n\t\t\tconst block = this.createDefaultBlock();\n\t\t\tif (child) {\n\t\t\t\tnode.replaceChild(block, child);\n\t\t\t} else {\n\t\t\t\tnode.appendChild(block);\n\t\t\t}\n\t\t} else {\n\t\t\twhile (node = getNextBlock(node, root)) {\n\t\t\t\tfixCursor(node);\n\t\t\t}\n\t\t}\n\t\tthis._ignoreChange = true;\n\t\twhile (child = root.lastChild) {\n\t\t\troot.removeChild(child);\n\t\t}\n\t\troot.appendChild(frag);\n\t\tthis._undoIndex = -1;\n\t\tthis._undoStack.length = 0;\n\t\tthis._undoStackLength = 0;\n\t\tthis._isInUndoState = false;\n\t\tconst range = this._getRangeAndRemoveBookmark() || createRange(root.firstElementChild || root, 0);\n\t\tthis.saveUndoState(range);\n\t\tthis.setSelection(range);\n\t\tthis._updatePath(range, true);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Insert HTML at the cursor location. If the selection is not collapsed\n\t * insertTreeFragmentIntoRange will delete the selection so that it is\n\t * replaced by the html being inserted.\n\t */\n\tinsertHTML(html, isPaste) {\n\t\tconst config = this._config;\n\t\tlet frag = config.sanitizeToDOMFragment(html, this);\n\t\tconst range = this.getSelection();\n\t\tthis.saveUndoState(range);\n\t\ttry {\n\t\t\tconst root = this._root;\n\t\t\tif (config.addLinks) {\n\t\t\t\tthis.addDetectedLinks(frag, frag);\n\t\t\t}\n\t\t\tcleanTree(frag, this._config);\n\t\t\tcleanupBRs(frag, root, false, this._config);\n\t\t\tremoveEmptyInlines(frag);\n\t\t\tfrag.normalize();\n\t\t\tlet node = frag;\n\t\t\twhile (node = getNextBlock(node, frag)) {\n\t\t\t\tfixCursor(node);\n\t\t\t}\n\t\t\tlet doInsert = true;\n\t\t\tif (isPaste) {\n\t\t\t\tconst event = new CustomEvent(\"willPaste\", {\n\t\t\t\t\tcancelable: true,\n\t\t\t\t\tdetail: {\n\t\t\t\t\t\tfragment: frag\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tthis.fireEvent(\"willPaste\", event);\n\t\t\t\tfrag = event.detail.fragment;\n\t\t\t\tdoInsert = !event.defaultPrevented;\n\t\t\t}\n\t\t\tif (doInsert) {\n\t\t\t\tinsertTreeFragmentIntoRange(range, frag, root, config);\n\t\t\t\trange.collapse(false);\n\t\t\t\tmoveRangeBoundaryOutOf(range, \"A\", root);\n\t\t\t\tthis._ensureBottomLine();\n\t\t\t}\n\t\t\tthis.setSelection(range);\n\t\t\tthis._updatePath(range, true);\n\t\t\tif (isPaste) {\n\t\t\t\tthis.focus();\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis._config.didError(error);\n\t\t}\n\t\treturn this;\n\t}\n\n\tinsertElement(el, range) {\n\t\tif (!range) {\n\t\t\trange = this.getSelection();\n\t\t}\n\t\trange.collapse(true);\n\t\tif (isInline(el)) {\n\t\t\tinsertNodeInRange(range, el);\n\t\t\trange.setStartAfter(el);\n\t\t} else {\n\t\t\tconst root = this._root;\n\t\t\tconst startNode = getStartBlockOfRange(\n\t\t\t\t\trange,\n\t\t\t\t\troot\n\t\t\t);\n\t\t\tlet splitNode = startNode || root;\n\t\t\tlet nodeAfterSplit = null;\n\t\t\twhile (splitNode !== root && !splitNode.nextSibling) {\n\t\t\t\tsplitNode = splitNode.parentNode;\n\t\t\t}\n\t\t\tif (splitNode !== root) {\n\t\t\t\tconst parent = splitNode.parentNode;\n\t\t\t\tnodeAfterSplit = split(\n\t\t\t\t\t\tparent,\n\t\t\t\t\t\tsplitNode.nextSibling,\n\t\t\t\t\t\troot,\n\t\t\t\t\t\troot\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (startNode && isEmptyBlock(startNode)) {\n\t\t\t\tdetach(startNode);\n\t\t\t}\n\t\t\troot.insertBefore(el, nodeAfterSplit);\n\t\t\tconst blankLine = this.createDefaultBlock();\n\t\t\troot.insertBefore(blankLine, nodeAfterSplit);\n\t\t\trange.setStart(blankLine, 0);\n\t\t\trange.setEnd(blankLine, 0);\n\t\t\tmoveRangeBoundariesDownTree(range);\n\t\t}\n\t\tthis.focus();\n\t\tthis.setSelection(range);\n\t\tthis._updatePath(range);\n\t\treturn this;\n\t}\n\n\tinsertImage(src, attributes) {\n\t\tconst img = createElement(\n\t\t\t\t\"IMG\",\n\t\t\t\tObject.assign(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsrc\n\t\t\t\t\t\t},\n\t\t\t\t\t\tattributes\n\t\t\t\t)\n\t\t);\n\t\tthis.insertElement(img);\n\t\treturn img;\n\t}\n\n\tinsertPlainText(plainText, isPaste) {\n\t\tconst range = this.getSelection();\n\t\tif (range.collapsed && getNearest(range.startContainer, this._root, \"PRE\")) {\n\t\t\tconst startContainer = range.startContainer;\n\t\t\tlet offset = range.startOffset;\n\t\t\tlet textNode;\n\t\t\tif (!startContainer || !(startContainer instanceof Text)) {\n\t\t\t\tconst text = document.createTextNode(\"\");\n\t\t\t\tstartContainer.insertBefore(\n\t\t\t\t\t\ttext,\n\t\t\t\t\t\tstartContainer.childNodes[offset]\n\t\t\t\t);\n\t\t\t\ttextNode = text;\n\t\t\t\toffset = 0;\n\t\t\t} else {\n\t\t\t\ttextNode = startContainer;\n\t\t\t}\n\t\t\tlet doInsert = true;\n\t\t\tif (isPaste) {\n\t\t\t\tconst event = new CustomEvent(\"willPaste\", {\n\t\t\t\t\tcancelable: true,\n\t\t\t\t\tdetail: {\n\t\t\t\t\t\ttext: plainText\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tthis.fireEvent(\"willPaste\", event);\n\t\t\t\tplainText = event.detail.text;\n\t\t\t\tdoInsert = !event.defaultPrevented;\n\t\t\t}\n\t\t\tif (doInsert) {\n\t\t\t\ttextNode.insertData(offset, plainText);\n\t\t\t\trange.setStart(textNode, offset + plainText.length);\n\t\t\t\trange.collapse(true);\n\t\t\t}\n\t\t\tthis.setSelection(range);\n\t\t\treturn this;\n\t\t}\n\t\tconst lines = plainText.split(\"\\n\");\n\t\tconst config = this._config;\n\t\tconst tag = config.blockTag;\n\t\tconst attributes = config.blockAttributes;\n\t\tconst closeBlock = \"</\" + tag + \">\";\n\t\tlet openBlock = \"<\" + tag;\n\t\tfor (const attr in attributes) {\n\t\t\topenBlock += \" \" + attr + '=\"' + escapeHTML(attributes[attr]) + '\"';\n\t\t}\n\t\topenBlock += \">\";\n\t\tfor (let i = 0, l = lines.length; i < l; i += 1) {\n\t\t\tlet line = lines[i];\n\t\t\tline = escapeHTML(line).replace(/ (?=(?: |$))/g, \"&nbsp;\");\n\t\t\tif (i) {\n\t\t\t\tline = openBlock + (line || \"<BR>\") + closeBlock;\n\t\t\t}\n\t\t\tlines[i] = line;\n\t\t}\n\t\treturn this.insertHTML(lines.join(\"\"), isPaste);\n\t}\n\n\tgetSelectedText(range) {\n\t\treturn getTextContentsOfRange(range || this.getSelection());\n\t}\n\n\t// --- Inline formatting\n\t/**\n\t * Extracts the font-family and font-size (if any) of the element\n\t * holding the cursor. If there's a selection, returns an empty object.\n\t */\n\tgetFontInfo(range) {\n\t\tconst fontInfo = {\n\t\t\tcolor: void 0,\n\t\t\tbackgroundColor: void 0,\n\t\t\tfontFamily: void 0,\n\t\t\tfontSize: void 0\n\t\t};\n\t\tif (!range) {\n\t\t\trange = this.getSelection();\n\t\t}\n\t\tlet seenAttributes = 0;\n\t\tlet element = range.commonAncestorContainer;\n\t\tif (range.collapsed || element instanceof Text) {\n\t\t\tif (element instanceof Text) {\n\t\t\t\telement = element.parentNode;\n\t\t\t}\n\t\t\twhile (seenAttributes < 4 && element) {\n\t\t\t\tconst style = element.style;\n\t\t\t\tif (style) {\n\t\t\t\t\tconst color = style.color;\n\t\t\t\t\tif (!fontInfo.color && color) {\n\t\t\t\t\t\tfontInfo.color = color;\n\t\t\t\t\t\tseenAttributes += 1;\n\t\t\t\t\t}\n\t\t\t\t\tconst backgroundColor = style.backgroundColor;\n\t\t\t\t\tif (!fontInfo.backgroundColor && backgroundColor) {\n\t\t\t\t\t\tfontInfo.backgroundColor = backgroundColor;\n\t\t\t\t\t\tseenAttributes += 1;\n\t\t\t\t\t}\n\t\t\t\t\tconst fontFamily = style.fontFamily;\n\t\t\t\t\tif (!fontInfo.fontFamily && fontFamily) {\n\t\t\t\t\t\tfontInfo.fontFamily = fontFamily;\n\t\t\t\t\t\tseenAttributes += 1;\n\t\t\t\t\t}\n\t\t\t\t\tconst fontSize = style.fontSize;\n\t\t\t\t\tif (!fontInfo.fontSize && fontSize) {\n\t\t\t\t\t\tfontInfo.fontSize = fontSize;\n\t\t\t\t\t\tseenAttributes += 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telement = element.parentNode;\n\t\t\t}\n\t\t}\n\t\treturn fontInfo;\n\t}\n\n\t/**\n\t * Looks for matching tag and attributes, so won't work if <strong>\n\t * instead of <b> etc.\n\t */\n\thasFormat(tag, attributes, range) {\n\t\ttag = tag.toUpperCase();\n\t\tif (!attributes) {\n\t\t\tattributes = {};\n\t\t}\n\t\tif (!range) {\n\t\t\trange = this.getSelection();\n\t\t}\n\t\tif (!range.collapsed && range.startContainer instanceof Text && range.startOffset === range.startContainer.length && range.startContainer.nextSibling) {\n\t\t\trange.setStartBefore(range.startContainer.nextSibling);\n\t\t}\n\t\tif (!range.collapsed && range.endContainer instanceof Text && range.endOffset === 0 && range.endContainer.previousSibling) {\n\t\t\trange.setEndAfter(range.endContainer.previousSibling);\n\t\t}\n\t\tconst root = this._root;\n\t\tconst common = range.commonAncestorContainer;\n\t\tif (getNearest(common, root, tag, attributes)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (common instanceof Text) {\n\t\t\treturn false;\n\t\t}\n\t\tconst walker = new TreeIterator(common, SHOW_TEXT, (node2) => {\n\t\t\treturn isNodeContainedInRange(range, node2, true);\n\t\t});\n\t\tlet seenNode = false;\n\t\tlet node;\n\t\twhile (node = walker.nextNode()) {\n\t\t\tif (!getNearest(node, root, tag, attributes)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tseenNode = true;\n\t\t}\n\t\treturn seenNode;\n\t}\n\n\tchangeFormat(add, remove, range, partial) {\n\t\tif (!range) {\n\t\t\trange = this.getSelection();\n\t\t}\n\t\tthis.saveUndoState(range);\n\t\tif (remove) {\n\t\t\trange = this._removeFormat(\n\t\t\t\t\tremove.tag.toUpperCase(),\n\t\t\t\t\tremove.attributes || {},\n\t\t\t\t\trange,\n\t\t\t\t\tpartial\n\t\t\t);\n\t\t}\n\t\tif (add) {\n\t\t\trange = this._addFormat(\n\t\t\t\t\tadd.tag.toUpperCase(),\n\t\t\t\t\tadd.attributes || {},\n\t\t\t\t\trange\n\t\t\t);\n\t\t}\n\t\tthis.setSelection(range);\n\t\tthis._updatePath(range, true);\n\t\treturn this.focus();\n\t}\n\n\t_addFormat(tag, attributes, range) {\n\t\tconst root = this._root;\n\t\tif (range.collapsed) {\n\t\t\tconst el = fixCursor(createElement(tag, attributes));\n\t\t\tinsertNodeInRange(range, el);\n\t\t\tconst focusNode = el.firstChild || el;\n\t\t\tconst focusOffset = focusNode instanceof Text ? focusNode.length : 0;\n\t\t\trange.setStart(focusNode, focusOffset);\n\t\t\trange.collapse(true);\n\t\t\tlet block = el;\n\t\t\twhile (isInline(block)) {\n\t\t\t\tblock = block.parentNode;\n\t\t\t}\n\t\t\tremoveZWS(block, el);\n\t\t} else {\n\t\t\tconst walker = new TreeIterator(\n\t\t\t\t\trange.commonAncestorContainer,\n\t\t\t\t\tSHOW_ELEMENT_OR_TEXT,\n\t\t\t\t\t(node) => {\n\t\t\t\t\t\treturn (node instanceof Text || node.nodeName === \"BR\" || node.nodeName === \"IMG\") && isNodeContainedInRange(range, node, true);\n\t\t\t\t\t}\n\t\t\t);\n\t\t\tlet {startContainer, startOffset, endContainer, endOffset} = range;\n\t\t\twalker.currentNode = startContainer;\n\t\t\tif (!(startContainer instanceof Element) && !(startContainer instanceof Text) || !walker.filter(startContainer)) {\n\t\t\t\tconst next = walker.nextNode();\n\t\t\t\tif (!next) {\n\t\t\t\t\treturn range;\n\t\t\t\t}\n\t\t\t\tstartContainer = next;\n\t\t\t\tstartOffset = 0;\n\t\t\t}\n\t\t\tdo {\n\t\t\t\tlet node = walker.currentNode;\n\t\t\t\tconst needsFormat = !getNearest(node, root, tag, attributes);\n\t\t\t\tif (needsFormat) {\n\t\t\t\t\tif (node === endContainer && node.length > endOffset) {\n\t\t\t\t\t\tnode.splitText(endOffset);\n\t\t\t\t\t}\n\t\t\t\t\tif (node === startContainer && startOffset) {\n\t\t\t\t\t\tnode = node.splitText(startOffset);\n\t\t\t\t\t\tif (endContainer === startContainer) {\n\t\t\t\t\t\t\tendContainer = node;\n\t\t\t\t\t\t\tendOffset -= startOffset;\n\t\t\t\t\t\t} else if (endContainer === startContainer.parentNode) {\n\t\t\t\t\t\t\tendOffset += 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstartContainer = node;\n\t\t\t\t\t\tstartOffset = 0;\n\t\t\t\t\t}\n\t\t\t\t\tconst el = createElement(tag, attributes);\n\t\t\t\t\treplaceWith(node, el);\n\t\t\t\t\tel.appendChild(node);\n\t\t\t\t}\n\t\t\t} while (walker.nextNode());\n\t\t\trange = createRange(\n\t\t\t\t\tstartContainer,\n\t\t\t\t\tstartOffset,\n\t\t\t\t\tendContainer,\n\t\t\t\t\tendOffset\n\t\t\t);\n\t\t}\n\t\treturn range;\n\t}\n\n\t_removeFormat(tag, attributes, range, partial) {\n\t\tthis._saveRangeToBookmark(range);\n\t\tlet fixer;\n\t\tif (range.collapsed) {\n\t\t\tif (cantFocusEmptyTextNodes) {\n\t\t\t\tfixer = document.createTextNode(ZWS);\n\t\t\t} else {\n\t\t\t\tfixer = document.createTextNode(\"\");\n\t\t\t}\n\t\t\tinsertNodeInRange(range, fixer);\n\t\t}\n\t\tlet root = range.commonAncestorContainer;\n\t\twhile (isInline(root)) {\n\t\t\troot = root.parentNode;\n\t\t}\n\t\tconst startContainer = range.startContainer;\n\t\tconst startOffset = range.startOffset;\n\t\tconst endContainer = range.endContainer;\n\t\tconst endOffset = range.endOffset;\n\t\tconst toWrap = [];\n\t\tconst examineNode = (node, exemplar) => {\n\t\t\tif (isNodeContainedInRange(range, node, false)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet child;\n\t\t\tlet next;\n\t\t\tif (!isNodeContainedInRange(range, node, true)) {\n\t\t\t\tif (!(node instanceof HTMLInputElement) && (!(node instanceof Text) || node.data)) {\n\t\t\t\t\ttoWrap.push([exemplar, node]);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (node instanceof Text) {\n\t\t\t\tif (node === endContainer && endOffset !== node.length) {\n\t\t\t\t\ttoWrap.push([exemplar, node.splitText(endOffset)]);\n\t\t\t\t}\n\t\t\t\tif (node === startContainer && startOffset) {\n\t\t\t\t\tnode.splitText(startOffset);\n\t\t\t\t\ttoWrap.push([exemplar, node]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (child = node.firstChild; child; child = next) {\n\t\t\t\t\tnext = child.nextSibling;\n\t\t\t\t\texamineNode(child, exemplar);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tconst formatTags = Array.from(\n\t\t\t\troot.getElementsByTagName(tag)\n\t\t).filter((el) => {\n\t\t\treturn isNodeContainedInRange(range, el, true) && hasTagAttributes(el, tag, attributes);\n\t\t});\n\t\tif (!partial) {\n\t\t\tformatTags.forEach((node) => {\n\t\t\t\texamineNode(node, node);\n\t\t\t});\n\t\t}\n\t\ttoWrap.forEach(([el, node]) => {\n\t\t\tel = el.cloneNode(false);\n\t\t\treplaceWith(node, el);\n\t\t\tel.appendChild(node);\n\t\t});\n\t\tformatTags.forEach((el) => {\n\t\t\treplaceWith(el, empty(el));\n\t\t});\n\t\tif (cantFocusEmptyTextNodes && fixer) {\n\t\t\tfixer = fixer.parentNode;\n\t\t\tlet block = fixer;\n\t\t\twhile (block && isInline(block)) {\n\t\t\t\tblock = block.parentNode;\n\t\t\t}\n\t\t\tif (block) {\n\t\t\t\tremoveZWS(block, fixer);\n\t\t\t}\n\t\t}\n\t\tthis._getRangeAndRemoveBookmark(range);\n\t\tif (fixer) {\n\t\t\trange.collapse(false);\n\t\t}\n\t\tmergeInlines(root, range);\n\t\treturn range;\n\t}\n\n\t// ---\n\tbold() {\n\t\treturn this.changeFormat({tag: \"B\"});\n\t}\n\n\tremoveBold() {\n\t\treturn this.changeFormat(null, {tag: \"B\"});\n\t}\n\n\titalic() {\n\t\treturn this.changeFormat({tag: \"I\"});\n\t}\n\n\tremoveItalic() {\n\t\treturn this.changeFormat(null, {tag: \"I\"});\n\t}\n\n\tunderline() {\n\t\treturn this.changeFormat({tag: \"U\"});\n\t}\n\n\tremoveUnderline() {\n\t\treturn this.changeFormat(null, {tag: \"U\"});\n\t}\n\n\tstrikethrough() {\n\t\treturn this.changeFormat({tag: \"S\"});\n\t}\n\n\tremoveStrikethrough() {\n\t\treturn this.changeFormat(null, {tag: \"S\"});\n\t}\n\n\tsubscript() {\n\t\treturn this.changeFormat({tag: \"SUB\"}, {tag: \"SUP\"});\n\t}\n\n\tremoveSubscript() {\n\t\treturn this.changeFormat(null, {tag: \"SUB\"});\n\t}\n\n\tsuperscript() {\n\t\treturn this.changeFormat({tag: \"SUP\"}, {tag: \"SUB\"});\n\t}\n\n\tremoveSuperscript() {\n\t\treturn this.changeFormat(null, {tag: \"SUP\"});\n\t}\n\n\t// ---\n\tmakeLink(url, attributes) {\n\t\tconst range = this.getSelection();\n\t\tif (range.collapsed) {\n\t\t\tlet protocolEnd = url.indexOf(\":\") + 1;\n\t\t\tif (protocolEnd) {\n\t\t\t\twhile (url[protocolEnd] === \"/\") {\n\t\t\t\t\tprotocolEnd += 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tinsertNodeInRange(\n\t\t\t\t\trange,\n\t\t\t\t\tdocument.createTextNode(url.slice(protocolEnd))\n\t\t\t);\n\t\t}\n\t\tattributes = Object.assign(\n\t\t\t\t{\n\t\t\t\t\thref: url\n\t\t\t\t},\n\t\t\t\tthis._config.tagAttributes.a,\n\t\t\t\tattributes\n\t\t);\n\t\treturn this.changeFormat(\n\t\t\t\t{\n\t\t\t\t\ttag: \"A\",\n\t\t\t\t\tattributes\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttag: \"A\"\n\t\t\t\t},\n\t\t\t\trange\n\t\t);\n\t}\n\n\tremoveLink() {\n\t\treturn this.changeFormat(\n\t\t\t\tnull,\n\t\t\t\t{\n\t\t\t\t\ttag: \"A\"\n\t\t\t\t},\n\t\t\t\tthis.getSelection(),\n\t\t\t\ttrue\n\t\t);\n\t}\n\n\taddDetectedLinks(searchInNode, root) {\n\t\tconst walker = new TreeIterator(\n\t\t\t\tsearchInNode,\n\t\t\t\tSHOW_TEXT,\n\t\t\t\t(node2) => !getNearest(node2, root || this._root, \"A\")\n\t\t);\n\t\tconst linkRegExp = this.linkRegExp;\n\t\tconst defaultAttributes = this._config.tagAttributes.a;\n\t\tlet node;\n\t\twhile (node = walker.nextNode()) {\n\t\t\tconst parent = node.parentNode;\n\t\t\tlet data = node.data;\n\t\t\tlet match;\n\t\t\twhile (match = linkRegExp.exec(data)) {\n\t\t\t\tconst index = match.index;\n\t\t\t\tconst endIndex = index + match[0].length;\n\t\t\t\tif (index) {\n\t\t\t\t\tparent.insertBefore(\n\t\t\t\t\t\t\tdocument.createTextNode(data.slice(0, index)),\n\t\t\t\t\t\t\tnode\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tconst child = createElement(\n\t\t\t\t\t\t\"A\",\n\t\t\t\t\t\tObject.assign(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\thref: match[1] ? /^(?:ht|f)tps?:/i.test(match[1]) ? match[1] : \"http://\" + match[1] : \"mailto:\" + match[0]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tdefaultAttributes\n\t\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\tchild.textContent = data.slice(index, endIndex);\n\t\t\t\tparent.insertBefore(child, node);\n\t\t\t\tnode.data = data = data.slice(endIndex);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t// ---\n\tsetFontFace(name) {\n\t\tconst className = this._config.classNames.fontFamily;\n\t\treturn this.changeFormat(\n\t\t\t\tname ? {\n\t\t\t\t\ttag: \"SPAN\",\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\tclass: className,\n\t\t\t\t\t\tstyle: \"font-family: \" + name + \", sans-serif;\"\n\t\t\t\t\t}\n\t\t\t\t} : null,\n\t\t\t\t{\n\t\t\t\t\ttag: \"SPAN\",\n\t\t\t\t\tattributes: {class: className}\n\t\t\t\t}\n\t\t);\n\t}\n\n\tsetFontSize(size) {\n\t\tconst className = this._config.classNames.fontSize;\n\t\treturn this.changeFormat(\n\t\t\t\tsize ? {\n\t\t\t\t\ttag: \"SPAN\",\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\tclass: className,\n\t\t\t\t\t\tstyle: \"font-size: \" + (typeof size === \"number\" ? size + \"px\" : size)\n\t\t\t\t\t}\n\t\t\t\t} : null,\n\t\t\t\t{\n\t\t\t\t\ttag: \"SPAN\",\n\t\t\t\t\tattributes: {class: className}\n\t\t\t\t}\n\t\t);\n\t}\n\n\tsetTextColor(color) {\n\t\tconst className = this._config.classNames.color;\n\t\treturn this.changeFormat(\n\t\t\t\tcolor ? {\n\t\t\t\t\ttag: \"SPAN\",\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\tclass: className,\n\t\t\t\t\t\tstyle: \"color:\" + color\n\t\t\t\t\t}\n\t\t\t\t} : null,\n\t\t\t\t{\n\t\t\t\t\ttag: \"SPAN\",\n\t\t\t\t\tattributes: {class: className}\n\t\t\t\t}\n\t\t);\n\t}\n\n\tsetHighlightColor(color) {\n\t\tconst className = this._config.classNames.highlight;\n\t\treturn this.changeFormat(\n\t\t\t\tcolor ? {\n\t\t\t\t\ttag: \"SPAN\",\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\tclass: className,\n\t\t\t\t\t\tstyle: \"background-color:\" + color\n\t\t\t\t\t}\n\t\t\t\t} : null,\n\t\t\t\t{\n\t\t\t\t\ttag: \"SPAN\",\n\t\t\t\t\tattributes: {class: className}\n\t\t\t\t}\n\t\t);\n\t}\n\n\t// --- Block formatting\n\t_ensureBottomLine() {\n\t\tconst root = this._root;\n\t\tconst last = root.lastElementChild;\n\t\tif (!last || last.nodeName !== this._config.blockTag || !isBlock(last)) {\n\t\t\troot.appendChild(this.createDefaultBlock());\n\t\t}\n\t}\n\n\tcreateDefaultBlock(children) {\n\t\tconst config = this._config;\n\t\treturn fixCursor(\n\t\t\t\tcreateElement(config.blockTag, config.blockAttributes, children)\n\t\t);\n\t}\n\n\tsplitBlock(lineBreakOnly, range) {\n\t\tif (!range) {\n\t\t\trange = this.getSelection();\n\t\t}\n\t\tconst root = this._root;\n\t\tlet block;\n\t\tlet parent;\n\t\tlet node;\n\t\tlet nodeAfterSplit;\n\t\tthis._recordUndoState(range);\n\t\tthis._removeZWS();\n\t\tthis._getRangeAndRemoveBookmark(range);\n\t\tif (!range.collapsed) {\n\t\t\tdeleteContentsOfRange(range, root);\n\t\t}\n\t\tif (this._config.addLinks) {\n\t\t\tmoveRangeBoundariesDownTree(range);\n\t\t\tconst textNode = range.startContainer;\n\t\t\tconst offset2 = range.startOffset;\n\t\t\tsetTimeout(() => {\n\t\t\t\tlinkifyText(this, textNode, offset2);\n\t\t\t}, 0);\n\t\t}\n\t\tblock = getStartBlockOfRange(range, root);\n\t\tif (block && (parent = getNearest(block, root, \"PRE\"))) {\n\t\t\tmoveRangeBoundariesDownTree(range);\n\t\t\tnode = range.startContainer;\n\t\t\tconst offset2 = range.startOffset;\n\t\t\tif (!(node instanceof Text)) {\n\t\t\t\tnode = document.createTextNode(\"\");\n\t\t\t\tparent.insertBefore(node, parent.firstChild);\n\t\t\t}\n\t\t\tif (!lineBreakOnly && node instanceof Text && (node.data.charAt(offset2 - 1) === \"\\n\" || rangeDoesStartAtBlockBoundary(range, root)) && (node.data.charAt(offset2) === \"\\n\" || rangeDoesEndAtBlockBoundary(range, root))) {\n\t\t\t\tnode.deleteData(offset2 && offset2 - 1, offset2 ? 2 : 1);\n\t\t\t\tnodeAfterSplit = split(\n\t\t\t\t\t\tnode,\n\t\t\t\t\t\toffset2 && offset2 - 1,\n\t\t\t\t\t\troot,\n\t\t\t\t\t\troot\n\t\t\t\t);\n\t\t\t\tnode = nodeAfterSplit.previousSibling;\n\t\t\t\tif (!node.textContent) {\n\t\t\t\t\tdetach(node);\n\t\t\t\t}\n\t\t\t\tnode = this.createDefaultBlock();\n\t\t\t\tnodeAfterSplit.parentNode.insertBefore(node, nodeAfterSplit);\n\t\t\t\tif (!nodeAfterSplit.textContent) {\n\t\t\t\t\tdetach(nodeAfterSplit);\n\t\t\t\t}\n\t\t\t\trange.setStart(node, 0);\n\t\t\t} else {\n\t\t\t\tnode.insertData(offset2, \"\\n\");\n\t\t\t\tfixCursor(parent);\n\t\t\t\tif (node.length === offset2 + 1) {\n\t\t\t\t\trange.setStartAfter(node);\n\t\t\t\t} else {\n\t\t\t\t\trange.setStart(node, offset2 + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\trange.collapse(true);\n\t\t\tthis.setSelection(range);\n\t\t\tthis._updatePath(range, true);\n\t\t\tthis._docWasChanged();\n\t\t\treturn this;\n\t\t}\n\t\tif (!block || lineBreakOnly || /^T[HD]$/.test(block.nodeName)) {\n\t\t\tmoveRangeBoundaryOutOf(range, \"A\", root);\n\t\t\tinsertNodeInRange(range, createElement(\"BR\"));\n\t\t\trange.collapse(false);\n\t\t\tthis.setSelection(range);\n\t\t\tthis._updatePath(range, true);\n\t\t\treturn this;\n\t\t}\n\t\tif (parent = getNearest(block, root, \"LI\")) {\n\t\t\tblock = parent;\n\t\t}\n\t\tif (isEmptyBlock(block)) {\n\t\t\tif (getNearest(block, root, \"UL\") || getNearest(block, root, \"OL\")) {\n\t\t\t\tthis.decreaseListLevel(range);\n\t\t\t\treturn this;\n\t\t\t} else if (getNearest(block, root, \"DIV\", indentedNodeAttributes)) {\n\t\t\t\tthis.removeIndentation(range);\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tnode = range.startContainer;\n\t\tconst offset = range.startOffset;\n\t\tlet splitTag = this.tagAfterSplit[block.nodeName];\n\t\tnodeAfterSplit = split(\n\t\t\t\tnode,\n\t\t\t\toffset,\n\t\t\t\tblock.parentNode,\n\t\t\t\tthis._root\n\t\t);\n\t\tconst config = this._config;\n\t\tlet splitProperties = null;\n\t\tif (!splitTag) {\n\t\t\tsplitTag = config.blockTag;\n\t\t\tsplitProperties = config.blockAttributes;\n\t\t}\n\t\tif (!hasTagAttributes(nodeAfterSplit, splitTag, splitProperties)) {\n\t\t\tblock = createElement(splitTag, splitProperties);\n\t\t\tif (nodeAfterSplit.dir) {\n\t\t\t\tblock.dir = nodeAfterSplit.dir;\n\t\t\t}\n\t\t\treplaceWith(nodeAfterSplit, block);\n\t\t\tblock.appendChild(empty(nodeAfterSplit));\n\t\t\tnodeAfterSplit = block;\n\t\t}\n\t\tremoveZWS(block);\n\t\tremoveEmptyInlines(block);\n\t\tfixCursor(block);\n\t\twhile (nodeAfterSplit instanceof Element) {\n\t\t\tlet child = nodeAfterSplit.firstChild;\n\t\t\tlet next;\n\t\t\tif (nodeAfterSplit.nodeName === \"A\" && (!nodeAfterSplit.textContent || nodeAfterSplit.textContent === ZWS)) {\n\t\t\t\tchild = document.createTextNode(\"\");\n\t\t\t\treplaceWith(nodeAfterSplit, child);\n\t\t\t\tnodeAfterSplit = child;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\twhile (child && child instanceof Text && !child.data) {\n\t\t\t\tnext = child.nextSibling;\n\t\t\t\tif (!next || next.nodeName === \"BR\") {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdetach(child);\n\t\t\t\tchild = next;\n\t\t\t}\n\t\t\tif (!child || child.nodeName === \"BR\" || child instanceof Text) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tnodeAfterSplit = child;\n\t\t}\n\t\trange = createRange(nodeAfterSplit, 0);\n\t\tthis.setSelection(range);\n\t\tthis._updatePath(range, true);\n\t\treturn this;\n\t}\n\n\tforEachBlock(fn, mutates, range) {\n\t\tif (!range) {\n\t\t\trange = this.getSelection();\n\t\t}\n\t\tif (mutates) {\n\t\t\tthis.saveUndoState(range);\n\t\t}\n\t\tconst root = this._root;\n\t\tlet start = getStartBlockOfRange(range, root);\n\t\tconst end = getEndBlockOfRange(range, root);\n\t\tif (start && end) {\n\t\t\tdo {\n\t\t\t\tif (fn(start) || start === end) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} while (start = getNextBlock(start, root));\n\t\t}\n\t\tif (mutates) {\n\t\t\tthis.setSelection(range);\n\t\t\tthis._updatePath(range, true);\n\t\t}\n\t\treturn this;\n\t}\n\n\tmodifyBlocks(modify, range) {\n\t\tif (!range) {\n\t\t\trange = this.getSelection();\n\t\t}\n\t\tthis._recordUndoState(range, this._isInUndoState);\n\t\tconst root = this._root;\n\t\texpandRangeToBlockBoundaries(range, root);\n\t\tmoveRangeBoundariesUpTree(range, root, root, root);\n\t\tconst frag = extractContentsOfRange(range, root, root);\n\t\tif (!range.collapsed) {\n\t\t\tlet node = range.endContainer;\n\t\t\tif (node === root) {\n\t\t\t\trange.collapse(false);\n\t\t\t} else {\n\t\t\t\twhile (node.parentNode !== root) {\n\t\t\t\t\tnode = node.parentNode;\n\t\t\t\t}\n\t\t\t\trange.setStartBefore(node);\n\t\t\t\trange.collapse(true);\n\t\t\t}\n\t\t}\n\t\tinsertNodeInRange(range, modify.call(this, frag));\n\t\tif (range.endOffset < range.endContainer.childNodes.length) {\n\t\t\tmergeContainers(\n\t\t\t\t\trange.endContainer.childNodes[range.endOffset],\n\t\t\t\t\troot,\n\t\t\t\t\tthis._config\n\t\t\t);\n\t\t}\n\t\tmergeContainers(\n\t\t\t\trange.startContainer.childNodes[range.startOffset],\n\t\t\t\troot,\n\t\t\t\tthis._config\n\t\t);\n\t\tthis._getRangeAndRemoveBookmark(range);\n\t\tthis.setSelection(range);\n\t\tthis._updatePath(range, true);\n\t\treturn this;\n\t}\n\n\t// ---\n\tsetTextAlignment(alignment) {\n\t\tthis.forEachBlock((block) => {\n\t\t\tconst className = block.className.split(/\\s+/).filter((klass) => {\n\t\t\t\treturn !!klass && !/^align/.test(klass);\n\t\t\t}).join(\" \");\n\t\t\tif (alignment) {\n\t\t\t\tblock.className = className + \" align-\" + alignment;\n\t\t\t\tblock.style.textAlign = alignment;\n\t\t\t} else {\n\t\t\t\tblock.className = className;\n\t\t\t\tblock.style.textAlign = \"\";\n\t\t\t}\n\t\t}, true);\n\t\treturn this.focus();\n\t}\n\n\tsetTextDirection(direction) {\n\t\tthis.forEachBlock((block) => {\n\t\t\tif (direction) {\n\t\t\t\tblock.dir = direction;\n\t\t\t} else {\n\t\t\t\tblock.removeAttribute(\"dir\");\n\t\t\t}\n\t\t}, true);\n\t\treturn this.focus();\n\t}\n\n\t// ---\n\t_getListSelection(range, root) {\n\t\tlet list = range.commonAncestorContainer;\n\t\tlet startLi = range.startContainer;\n\t\tlet endLi = range.endContainer;\n\t\twhile (list && list !== root && !/^[OU]L$/.test(list.nodeName)) {\n\t\t\tlist = list.parentNode;\n\t\t}\n\t\tif (!list || list === root) {\n\t\t\treturn null;\n\t\t}\n\t\tif (startLi === list) {\n\t\t\tstartLi = startLi.childNodes[range.startOffset];\n\t\t}\n\t\tif (endLi === list) {\n\t\t\tendLi = endLi.childNodes[range.endOffset];\n\t\t}\n\t\twhile (startLi && startLi.parentNode !== list) {\n\t\t\tstartLi = startLi.parentNode;\n\t\t}\n\t\twhile (endLi && endLi.parentNode !== list) {\n\t\t\tendLi = endLi.parentNode;\n\t\t}\n\t\treturn [list, startLi, endLi];\n\t}\n\n\tincreaseListLevel(range) {\n\t\tif (!range) {\n\t\t\trange = this.getSelection();\n\t\t}\n\t\tconst root = this._root;\n\t\tconst listSelection = this._getListSelection(range, root);\n\t\tif (!listSelection) {\n\t\t\treturn this.focus();\n\t\t}\n\t\tlet [list, startLi, endLi] = listSelection;\n\t\tif (!startLi || startLi === list.firstChild) {\n\t\t\treturn this.focus();\n\t\t}\n\t\tthis._recordUndoState(range, this._isInUndoState);\n\t\tconst type = list.nodeName;\n\t\tlet newParent = startLi.previousSibling;\n\t\tlet listAttrs;\n\t\tlet next;\n\t\tif (newParent.nodeName !== type) {\n\t\t\tlistAttrs = this._config.tagAttributes[type.toLowerCase()];\n\t\t\tnewParent = createElement(type, listAttrs);\n\t\t\tlist.insertBefore(newParent, startLi);\n\t\t}\n\t\tdo {\n\t\t\tnext = startLi === endLi ? null : startLi.nextSibling;\n\t\t\tnewParent.appendChild(startLi);\n\t\t} while (startLi = next);\n\t\tnext = newParent.nextSibling;\n\t\tif (next) {\n\t\t\tmergeContainers(next, root, this._config);\n\t\t}\n\t\tthis._getRangeAndRemoveBookmark(range);\n\t\tthis.setSelection(range);\n\t\tthis._updatePath(range, true);\n\t\treturn this.focus();\n\t}\n\n\tdecreaseListLevel(range) {\n\t\tif (!range) {\n\t\t\trange = this.getSelection();\n\t\t}\n\t\tconst root = this._root;\n\t\tconst listSelection = this._getListSelection(range, root);\n\t\tif (!listSelection) {\n\t\t\treturn this.focus();\n\t\t}\n\t\tlet [list, startLi, endLi] = listSelection;\n\t\tif (!startLi) {\n\t\t\tstartLi = list.firstChild;\n\t\t}\n\t\tif (!endLi) {\n\t\t\tendLi = list.lastChild;\n\t\t}\n\t\tthis._recordUndoState(range, this._isInUndoState);\n\t\tlet next;\n\t\tlet insertBefore = null;\n\t\tif (startLi) {\n\t\t\tlet newParent = list.parentNode;\n\t\t\tinsertBefore = !endLi.nextSibling ? list.nextSibling : split(list, endLi.nextSibling, newParent, root);\n\t\t\tif (newParent !== root && newParent.nodeName === \"LI\") {\n\t\t\t\tnewParent = newParent.parentNode;\n\t\t\t\twhile (insertBefore) {\n\t\t\t\t\tnext = insertBefore.nextSibling;\n\t\t\t\t\tendLi.appendChild(insertBefore);\n\t\t\t\t\tinsertBefore = next;\n\t\t\t\t}\n\t\t\t\tinsertBefore = list.parentNode.nextSibling;\n\t\t\t}\n\t\t\tconst makeNotList = !/^[OU]L$/.test(newParent.nodeName);\n\t\t\tdo {\n\t\t\t\tnext = startLi === endLi ? null : startLi.nextSibling;\n\t\t\t\tlist.removeChild(startLi);\n\t\t\t\tif (makeNotList && startLi.nodeName === \"LI\") {\n\t\t\t\t\tstartLi = this.createDefaultBlock([empty(startLi)]);\n\t\t\t\t}\n\t\t\t\tnewParent.insertBefore(startLi, insertBefore);\n\t\t\t} while (startLi = next);\n\t\t}\n\t\tif (!list.firstChild) {\n\t\t\tdetach(list);\n\t\t}\n\t\tif (insertBefore) {\n\t\t\tmergeContainers(insertBefore, root, this._config);\n\t\t}\n\t\tthis._getRangeAndRemoveBookmark(range);\n\t\tthis.setSelection(range);\n\t\tthis._updatePath(range, true);\n\t\treturn this.focus();\n\t}\n\n\t_makeList(frag, type) {\n\t\tconst walker = getBlockWalker(frag, this._root);\n\t\tconst tagAttributes = this._config.tagAttributes;\n\t\tconst listAttrs = tagAttributes[type.toLowerCase()];\n\t\tconst listItemAttrs = tagAttributes.li;\n\t\tlet node;\n\t\twhile (node = walker.nextNode()) {\n\t\t\tif (node.parentNode instanceof HTMLLIElement) {\n\t\t\t\tnode = node.parentNode;\n\t\t\t\twalker.currentNode = node.lastChild;\n\t\t\t}\n\t\t\tif (!(node instanceof HTMLLIElement)) {\n\t\t\t\tconst newLi = createElement(\"LI\", listItemAttrs);\n\t\t\t\tif (node.dir) {\n\t\t\t\t\tnewLi.dir = node.dir;\n\t\t\t\t}\n\t\t\t\tconst prev = node.previousSibling;\n\t\t\t\tif (prev && prev.nodeName === type) {\n\t\t\t\t\tprev.appendChild(newLi);\n\t\t\t\t\tdetach(node);\n\t\t\t\t} else {\n\t\t\t\t\treplaceWith(node, createElement(type, listAttrs, [newLi]));\n\t\t\t\t}\n\t\t\t\tnewLi.appendChild(empty(node));\n\t\t\t\twalker.currentNode = newLi;\n\t\t\t} else {\n\t\t\t\tnode = node.parentNode;\n\t\t\t\tconst tag = node.nodeName;\n\t\t\t\tif (tag !== type && /^[OU]L$/.test(tag)) {\n\t\t\t\t\treplaceWith(\n\t\t\t\t\t\t\tnode,\n\t\t\t\t\t\t\tcreateElement(type, listAttrs, [empty(node)])\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn frag;\n\t}\n\n\tmakeUnorderedList() {\n\t\tthis.modifyBlocks((frag) => this._makeList(frag, \"UL\"));\n\t\treturn this.focus();\n\t}\n\n\tmakeOrderedList() {\n\t\tthis.modifyBlocks((frag) => this._makeList(frag, \"OL\"));\n\t\treturn this.focus();\n\t}\n\n\tremoveList() {\n\t\tthis.modifyBlocks((frag) => {\n\t\t\tconst lists = frag.querySelectorAll(\"UL, OL\");\n\t\t\tconst items = frag.querySelectorAll(\"LI\");\n\t\t\tconst root = this._root;\n\t\t\tfor (let i = 0, l = lists.length; i < l; i += 1) {\n\t\t\t\tconst list = lists[i];\n\t\t\t\tconst listFrag = empty(list);\n\t\t\t\tfixContainer(listFrag, root, this._config);\n\t\t\t\treplaceWith(list, listFrag);\n\t\t\t}\n\t\t\tfor (let i = 0, l = items.length; i < l; i += 1) {\n\t\t\t\tconst item = items[i];\n\t\t\t\tif (isBlock(item)) {\n\t\t\t\t\treplaceWith(item, this.createDefaultBlock([empty(item)]));\n\t\t\t\t} else {\n\t\t\t\t\tfixContainer(item, root, this._config);\n\t\t\t\t\treplaceWith(item, empty(item));\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn frag;\n\t\t});\n\t\treturn this.focus();\n\t}\n\n\t// ---\n\tincreaseIndentationLevel(range) {\n\t\tthis.modifyBlocks(\n\t\t\t(frag) => createElement(\n\t\t\t\t\"DIV\",\n\t\t\t\tindentedNodeAttributes,\n\t\t\t\t[frag]\n\t\t\t),\n\t\t\trange\n\t\t);\n\t\treturn this.focus();\n\t}\n\n\tdecreaseIndentationLevel(range) {\n\t\tthis.modifyBlocks((frag) => {\n\t\t\tArray.from(frag.querySelectorAll(\".\" + indentedNodeAttributes.class)).filter((el) => {\n\t\t\t\treturn !getNearest(el.parentNode, frag, \"DIV\", indentedNodeAttributes);\n\t\t\t}).forEach((el) => {\n\t\t\t\treplaceWith(el, empty(el));\n\t\t\t});\n\t\t\treturn frag;\n\t\t}, range);\n\t\treturn this.focus();\n\t}\n\n\tremoveIndentation(range) {\n\t\tthis.modifyBlocks(\n\t\t\t\t() => this.createDefaultBlock([\n\t\t\t\t\tcreateElement(\"INPUT\", {\n\t\t\t\t\t\tid: this.startSelectionId,\n\t\t\t\t\t\ttype: \"hidden\"\n\t\t\t\t\t}),\n\t\t\t\t\tcreateElement(\"INPUT\", {\n\t\t\t\t\t\tid: this.endSelectionId,\n\t\t\t\t\t\ttype: \"hidden\"\n\t\t\t\t\t})\n\t\t\t\t]),\n\t\t\t\trange\n\t\t);\n\t\treturn this.focus();\n\t}\n\n\t// ---\n\tcode() {\n\t\tconst range = this.getSelection();\n\t\tif (range.collapsed || isContainer(range.commonAncestorContainer)) {\n\t\t\tthis.modifyBlocks((frag) => {\n\t\t\t\tconst root = this._root;\n\t\t\t\tconst output = document.createDocumentFragment();\n\t\t\t\tconst blockWalker = getBlockWalker(frag, root);\n\t\t\t\tlet node;\n\t\t\t\twhile (node = blockWalker.nextNode()) {\n\t\t\t\t\tlet nodes = node.querySelectorAll(\"BR\");\n\t\t\t\t\tconst brBreaksLine = [];\n\t\t\t\t\tlet l = nodes.length;\n\t\t\t\t\tfor (let i = 0; i < l; i += 1) {\n\t\t\t\t\t\tbrBreaksLine[i] = isLineBreak(nodes[i], false);\n\t\t\t\t\t}\n\t\t\t\t\twhile (l--) {\n\t\t\t\t\t\tconst br = nodes[l];\n\t\t\t\t\t\tif (!brBreaksLine[l]) {\n\t\t\t\t\t\t\tdetach(br);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treplaceWith(br, document.createTextNode(\"\\n\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tnodes = node.querySelectorAll(\"CODE\");\n\t\t\t\t\tl = nodes.length;\n\t\t\t\t\twhile (l--) {\n\t\t\t\t\t\treplaceWith(nodes[l], empty(nodes[l]));\n\t\t\t\t\t}\n\t\t\t\t\tif (output.childNodes.length) {\n\t\t\t\t\t\toutput.appendChild(document.createTextNode(\"\\n\"));\n\t\t\t\t\t}\n\t\t\t\t\toutput.appendChild(empty(node));\n\t\t\t\t}\n\t\t\t\tconst textWalker = new TreeIterator(output, SHOW_TEXT);\n\t\t\t\twhile (node = textWalker.nextNode()) {\n\t\t\t\t\tnode.data = node.data.replace(/ /g, \" \");\n\t\t\t\t}\n\t\t\t\toutput.normalize();\n\t\t\t\treturn fixCursor(\n\t\t\t\t\t\tcreateElement(\"PRE\", this._config.tagAttributes.pre, [\n\t\t\t\t\t\t\toutput\n\t\t\t\t\t\t])\n\t\t\t\t);\n\t\t\t}, range);\n\t\t\tthis.focus();\n\t\t} else {\n\t\t\tthis.changeFormat(\n\t\t\t\t\t{\n\t\t\t\t\t\ttag: \"CODE\",\n\t\t\t\t\t\tattributes: this._config.tagAttributes.code\n\t\t\t\t\t},\n\t\t\t\t\tnull,\n\t\t\t\t\trange\n\t\t\t);\n\t\t}\n\t\treturn this;\n\t}\n\n\tremoveCode() {\n\t\tconst range = this.getSelection();\n\t\tconst ancestor = range.commonAncestorContainer;\n\t\tconst inPre = getNearest(ancestor, this._root, \"PRE\");\n\t\tif (inPre) {\n\t\t\tthis.modifyBlocks((frag) => {\n\t\t\t\tconst root = this._root;\n\t\t\t\tconst pres = frag.querySelectorAll(\"PRE\");\n\t\t\t\tlet l = pres.length;\n\t\t\t\twhile (l--) {\n\t\t\t\t\tconst pre = pres[l];\n\t\t\t\t\tconst walker = new TreeIterator(pre, SHOW_TEXT);\n\t\t\t\t\tlet node;\n\t\t\t\t\twhile (node = walker.nextNode()) {\n\t\t\t\t\t\tlet value = node.data;\n\t\t\t\t\t\tvalue = value.replace(/ (?= )/g, \"\\xA0\");\n\t\t\t\t\t\tconst contents = document.createDocumentFragment();\n\t\t\t\t\t\tlet index;\n\t\t\t\t\t\twhile ((index = value.indexOf(\"\\n\")) > -1) {\n\t\t\t\t\t\t\tcontents.appendChild(\n\t\t\t\t\t\t\t\t\tdocument.createTextNode(value.slice(0, index))\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tcontents.appendChild(createElement(\"BR\"));\n\t\t\t\t\t\t\tvalue = value.slice(index + 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnode.parentNode.insertBefore(contents, node);\n\t\t\t\t\t\tnode.data = value;\n\t\t\t\t\t}\n\t\t\t\t\tfixContainer(pre, root, this._config);\n\t\t\t\t\treplaceWith(pre, empty(pre));\n\t\t\t\t}\n\t\t\t\treturn frag;\n\t\t\t}, range);\n\t\t\tthis.focus();\n\t\t} else {\n\t\t\tthis.changeFormat(null, {tag: \"CODE\"}, range);\n\t\t}\n\t\treturn this;\n\t}\n\n\ttoggleCode() {\n\t\tif (this.hasFormat(\"PRE\") || this.hasFormat(\"CODE\")) {\n\t\t\tthis.removeCode();\n\t\t} else {\n\t\t\tthis.code();\n\t\t}\n\t\treturn this;\n\t}\n\n\t// ---\n\t_removeFormatting(root, clean) {\n\t\tfor (let node = root.firstChild, next; node; node = next) {\n\t\t\tnext = node.nextSibling;\n\t\t\tif (isInline(node)) {\n\t\t\t\tif (node instanceof Text || node.nodeName === \"BR\" || node.nodeName === \"IMG\") {\n\t\t\t\t\tclean.appendChild(node);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t} else if (isBlock(node)) {\n\t\t\t\tclean.appendChild(\n\t\t\t\t\t\tthis.createDefaultBlock([\n\t\t\t\t\t\t\tthis._removeFormatting(\n\t\t\t\t\t\t\t\t\tnode,\n\t\t\t\t\t\t\t\t\tdocument.createDocumentFragment()\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t])\n\t\t\t\t);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tthis._removeFormatting(node, clean);\n\t\t}\n\t\treturn clean;\n\t}\n\n\tremoveAllFormatting(range) {\n\t\tif (!range) {\n\t\t\trange = this.getSelection();\n\t\t}\n\t\tif (range.collapsed) {\n\t\t\treturn this.focus();\n\t\t}\n\t\tconst root = this._root;\n\t\tlet stopNode = range.commonAncestorContainer;\n\t\twhile (stopNode && !isBlock(stopNode)) {\n\t\t\tstopNode = stopNode.parentNode;\n\t\t}\n\t\tif (!stopNode) {\n\t\t\texpandRangeToBlockBoundaries(range, root);\n\t\t\tstopNode = root;\n\t\t}\n\t\tif (stopNode instanceof Text) {\n\t\t\treturn this.focus();\n\t\t}\n\t\tthis.saveUndoState(range);\n\t\tmoveRangeBoundariesUpTree(range, stopNode, stopNode, root);\n\t\tconst startContainer = range.startContainer;\n\t\tlet startOffset = range.startOffset;\n\t\tconst endContainer = range.endContainer;\n\t\tlet endOffset = range.endOffset;\n\t\tconst formattedNodes = document.createDocumentFragment();\n\t\tconst cleanNodes = document.createDocumentFragment();\n\t\tconst nodeAfterSplit = split(endContainer, endOffset, stopNode, root);\n\t\tlet nodeInSplit = split(startContainer, startOffset, stopNode, root);\n\t\tlet nextNode;\n\t\twhile (nodeInSplit !== nodeAfterSplit) {\n\t\t\tnextNode = nodeInSplit.nextSibling;\n\t\t\tformattedNodes.appendChild(nodeInSplit);\n\t\t\tnodeInSplit = nextNode;\n\t\t}\n\t\tthis._removeFormatting(formattedNodes, cleanNodes);\n\t\tcleanNodes.normalize();\n\t\tnodeInSplit = cleanNodes.firstChild;\n\t\tnextNode = cleanNodes.lastChild;\n\t\tif (nodeInSplit) {\n\t\t\tstopNode.insertBefore(cleanNodes, nodeAfterSplit);\n\t\t\tconst childNodes = Array.from(stopNode.childNodes);\n\t\t\tstartOffset = childNodes.indexOf(nodeInSplit);\n\t\t\tendOffset = nextNode ? childNodes.indexOf(nextNode) + 1 : 0;\n\t\t} else if (nodeAfterSplit) {\n\t\t\tconst childNodes = Array.from(stopNode.childNodes);\n\t\t\tstartOffset = childNodes.indexOf(nodeAfterSplit);\n\t\t\tendOffset = startOffset;\n\t\t}\n\t\trange.setStart(stopNode, startOffset);\n\t\trange.setEnd(stopNode, endOffset);\n\t\tmergeInlines(stopNode, range);\n\t\tmoveRangeBoundariesDownTree(range);\n\t\tthis.setSelection(range);\n\t\tthis._updatePath(range, true);\n\t\treturn this.focus();\n\t}\n};\n\n// source/Squire.ts\nvar Squire_default = Squire;\nexport {\n\tSquire_default as default\n};\n","import m, { Children, Component } from \"mithril\"\nimport SquireEditor from \"squire-rte\"\nimport { defer } from \"@tutao/tutanota-utils\"\nimport { px } from \"../size\"\nimport { Dialog } from \"../base/Dialog\"\nimport { isMailAddress } from \"../../misc/FormatValidator\"\nimport { TabIndex } from \"../../api/common/TutanotaConstants\"\nimport { TextFieldType } from \"../base/TextField.js\"\nimport { HTML_EDITOR_LINE_HEIGHT } from \"./HtmlEditor.js\"\nimport type { ImageHandler } from \"../../mailFunctionality/SharedMailUtils.js\"\n\ntype SanitizerFn = (html: string, isPaste: boolean) => DocumentFragment\nexport type ImagePasteEvent = CustomEvent<{ clipboardData: DataTransfer }>\nexport type TextPasteEvent = CustomEvent<{ fragment: DocumentFragment }>\nexport type Style = \"b\" | \"i\" | \"u\" | \"c\" | \"a\"\nexport type Alignment = \"left\" | \"center\" | \"right\" | \"justify\"\nexport type Listing = \"ol\" | \"ul\"\ntype Styles = {\n\t[key in Style]: boolean\n} & {\n\talignment: Alignment\n\tlisting: Listing | null\n}\n\nexport class Editor implements ImageHandler, Component {\n\tsquire: SquireEditor | null\n\tinitialized = defer<void>()\n\tdomElement: HTMLElement | null = null\n\tprivate showOutline = false\n\tprivate enabled = true\n\tprivate readOnly = false\n\tprivate createsLists = true\n\tprivate userHasPasted = false\n\tprivate styleActions = Object.freeze({\n\t\tb: [() => this.squire.bold(), () => this.squire.removeBold(), () => this.styles.b],\n\t\ti: [() => this.squire.italic(), () => this.squire.removeItalic(), () => this.styles.i],\n\t\tu: [() => this.squire.underline(), () => this.squire.removeUnderline(), () => this.styles.u],\n\t\tc: [() => this.squire.setFontFace(\"monospace\"), () => this.squire.setFontFace(null), () => this.styles.c],\n\t\ta: [() => this.makeLink(), () => this.squire.removeLink(), () => this.styles.a],\n\t} as const)\n\n\tstyles: Styles = {\n\t\tb: false,\n\t\ti: false,\n\t\tu: false,\n\t\tc: false,\n\t\ta: false,\n\t\talignment: \"left\",\n\t\tlisting: null,\n\t}\n\n\t/**\n\t * squire 2.0 removed the isPaste argument from the sanitizeToDomFragment function.\n\t * since sanitizeToDomFragment is called before squire's willPaste event is fired, we\n\t * can't have our sanitization strategy depend on the willPaste event.\n\t *\n\t * we therefore add our own paste handler to the dom element squire uses and set a\n\t * flag once we detect a paste and reset it when squire next fires the \"input\" event.\n\t *\n\t * * user pastes\n\t * * \"paste\" event on dom sets flag\n\t * * sanitizeToDomFragment is called by squire\n\t * * \"input\" event on squire resets flag.\n\t */\n\tprivate pasteListener: (e: ClipboardEvent) => void = (_: ClipboardEvent) => (this.userHasPasted = true)\n\n\tconstructor(private minHeight: number | null, private sanitizer: SanitizerFn, private staticLineAmount: number | null) {\n\t\tthis.onremove = this.onremove.bind(this)\n\t\tthis.onbeforeupdate = this.onbeforeupdate.bind(this)\n\t\tthis.view = this.view.bind(this)\n\t}\n\n\tonbeforeupdate(): boolean {\n\t\t// do not update the dom part managed by squire\n\t\treturn this.squire == null\n\t}\n\n\tonremove() {\n\t\tthis.domElement?.removeEventListener(\"paste\", this.pasteListener)\n\t\tif (this.squire) {\n\t\t\tthis.squire.destroy()\n\n\t\t\tthis.squire = null\n\t\t\tthis.initialized = defer()\n\t\t}\n\t}\n\n\tview(): Children {\n\t\treturn m(\".selectable\", {\n\t\t\trole: \"textbox\",\n\t\t\t\"aria-multiline\": \"true\",\n\t\t\t\"data-testid\": \"text_editor\",\n\t\t\ttabindex: TabIndex.Default,\n\t\t\toncreate: (vnode) => this.initSquire(vnode.dom as HTMLElement),\n\t\t\tclass: `flex-grow ${this.showOutline ? \"\" : \"hide-outline\"}`,\n\t\t\tstyle: this.staticLineAmount\n\t\t\t\t? {\n\t\t\t\t\t\t\"max-height\": px(this.staticLineAmount * HTML_EDITOR_LINE_HEIGHT),\n\t\t\t\t\t\t\"min-height:\": px(this.staticLineAmount * HTML_EDITOR_LINE_HEIGHT),\n\t\t\t\t\t\toverflow: \"scroll\",\n\t\t\t\t  }\n\t\t\t\t: this.minHeight\n\t\t\t\t? {\n\t\t\t\t\t\t\"min-height\": px(this.minHeight),\n\t\t\t\t  }\n\t\t\t\t: {},\n\t\t})\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn !this.squire || this.squire.getHTML() === \"<div><br></div>\"\n\t}\n\n\tgetValue(): string {\n\t\treturn this.isEmpty() ? \"\" : this.squire.getHTML()\n\t}\n\n\taddChangeListener(callback: (...args: Array<any>) => any) {\n\t\tthis.squire.addEventListener(\"input\", callback)\n\t}\n\n\tsetMinHeight(minHeight: number): Editor {\n\t\tthis.minHeight = minHeight\n\t\treturn this\n\t}\n\n\tsetShowOutline(show: boolean) {\n\t\tthis.showOutline = show\n\t}\n\n\t/**\n\t * Sets a static amount 'n' of lines the Editor should always render/allow.\n\t * When using n+1 lines, the editor will instead begin to be scrollable.\n\t * Currently, this overwrites min-height.\n\t */\n\tsetStaticNumberOfLines(numberOfLines: number): Editor {\n\t\tthis.staticLineAmount = numberOfLines\n\t\treturn this\n\t}\n\n\tsetCreatesLists(createsLists: boolean): Editor {\n\t\tthis.createsLists = createsLists\n\t\treturn this\n\t}\n\n\tinitSquire(domElement: HTMLElement) {\n\t\tthis.squire = new SquireEditor(domElement, {\n\t\t\tsanitizeToDOMFragment: (html: string) => this.sanitizer(html, this.userHasPasted),\n\t\t\tblockAttributes: {\n\t\t\t\tdir: \"auto\",\n\t\t\t},\n\t\t})\n\n\t\t// Suppress paste events if pasting while disabled\n\t\tthis.squire.addEventListener(\"willPaste\", (e: TextPasteEvent) => {\n\t\t\tif (!this.isEnabled()) {\n\t\t\t\te.preventDefault()\n\t\t\t}\n\t\t})\n\n\t\tthis.squire.addEventListener(\"input\", (_: CustomEvent<void>) => (this.userHasPasted = false))\n\t\tdomElement.addEventListener(\"paste\", this.pasteListener)\n\n\t\tthis.squire.addEventListener(\"pathChange\", () => {\n\t\t\tthis.getStylesAtPath()\n\t\t\tm.redraw() // allow richtexttoolbar to redraw elements\n\t\t})\n\n\t\tthis.domElement = domElement\n\t\t// the _editor might have been disabled before the dom element was there\n\t\tthis.setEnabled(this.enabled)\n\t\tthis.initialized.resolve()\n\t}\n\n\tsetEnabled(enabled: boolean) {\n\t\tthis.enabled = enabled\n\t\tthis.updateContentEditableAttribute()\n\t}\n\n\tsetReadOnly(readOnly: boolean) {\n\t\tthis.readOnly = readOnly\n\t\tthis.updateContentEditableAttribute()\n\t}\n\n\tisReadOnly(): boolean {\n\t\treturn this.readOnly\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled\n\t}\n\n\tsetHTML(html: string | null) {\n\t\tthis.squire.setHTML(html)\n\t}\n\n\tgetHTML(): string {\n\t\treturn this.squire.getHTML()\n\t}\n\n\tsetStyle(state: boolean, style: Style) {\n\t\t;(state ? this.styleActions[style][0] : this.styleActions[style][1])()\n\t}\n\n\thasStyle: (arg0: Style) => boolean = (style) => (this.squire ? this.styleActions[style][2]() : false)\n\tgetStylesAtPath: () => void = () => {\n\t\tif (!this.squire) {\n\t\t\treturn\n\t\t}\n\n\t\tlet pathSegments: string[] = this.squire.getPath().split(\">\")\n\n\t\t// lists\n\t\tconst ulIndex = pathSegments.lastIndexOf(\"UL\")\n\t\tconst olIndex = pathSegments.lastIndexOf(\"OL\")\n\n\t\tif (ulIndex === -1) {\n\t\t\tif (olIndex > -1) {\n\t\t\t\tthis.styles.listing = \"ol\"\n\t\t\t} else {\n\t\t\t\tthis.styles.listing = null\n\t\t\t}\n\t\t} else if (olIndex === -1) {\n\t\t\tif (ulIndex > -1) {\n\t\t\t\tthis.styles.listing = \"ul\"\n\t\t\t} else {\n\t\t\t\tthis.styles.listing = null\n\t\t\t}\n\t\t} else if (olIndex > ulIndex) {\n\t\t\tthis.styles.listing = \"ol\"\n\t\t} else {\n\t\t\tthis.styles.listing = \"ul\"\n\t\t}\n\n\t\t//links\n\t\tthis.styles.a = pathSegments.includes(\"A\")\n\t\t// alignment\n\t\tlet alignment = pathSegments.find((f) => f.includes(\"align\"))\n\n\t\tif (alignment !== undefined) {\n\t\t\tswitch (alignment.split(\".\")[1].substring(6)) {\n\t\t\t\tcase \"left\":\n\t\t\t\t\tthis.styles.alignment = \"left\"\n\t\t\t\t\tbreak\n\n\t\t\t\tcase \"right\":\n\t\t\t\t\tthis.styles.alignment = \"right\"\n\t\t\t\t\tbreak\n\n\t\t\t\tcase \"center\":\n\t\t\t\t\tthis.styles.alignment = \"center\"\n\t\t\t\t\tbreak\n\n\t\t\t\tdefault:\n\t\t\t\t\tthis.styles.alignment = \"justify\"\n\t\t\t}\n\t\t} else {\n\t\t\tthis.styles.alignment = \"left\"\n\t\t}\n\n\t\t// font\n\t\tthis.styles.c = pathSegments.some((f) => f.includes(\"monospace\"))\n\t\t// decorations\n\t\tthis.styles.b = this.squire.hasFormat(\"b\")\n\t\tthis.styles.u = this.squire.hasFormat(\"u\")\n\t\tthis.styles.i = this.squire.hasFormat(\"i\")\n\t}\n\n\tmakeLink() {\n\t\tDialog.showTextInputDialog({\n\t\t\ttitle: \"makeLink_action\",\n\t\t\tlabel: \"url_label\",\n\t\t\ttextFieldType: TextFieldType.Url,\n\t\t}).then((url) => {\n\t\t\tif (isMailAddress(url, false)) {\n\t\t\t\turl = \"mailto:\" + url\n\t\t\t} else if (!url.startsWith(\"http://\") && !url.startsWith(\"https://\") && !url.startsWith(\"mailto:\") && !url.startsWith(\"{\")) {\n\t\t\t\turl = \"https://\" + url\n\t\t\t}\n\n\t\t\tthis.squire.makeLink(url)\n\t\t})\n\t}\n\n\tinsertImage(srcAttr: string, attrs?: Record<string, string>): HTMLElement {\n\t\treturn this.squire.insertImage(srcAttr, attrs)\n\t}\n\n\t/**\n\t * Inserts the given html content at the current cursor position.\n\t */\n\tinsertHTML(html: string) {\n\t\tthis.squire.insertHTML(html)\n\t}\n\n\tgetDOM(): HTMLElement {\n\t\treturn this.squire.getRoot()\n\t}\n\n\tgetCursorPosition(): ClientRect {\n\t\treturn this.squire.getCursorPosition()\n\t}\n\n\tfocus(): void {\n\t\tthis.squire.focus()\n\n\t\tthis.getStylesAtPath()\n\t}\n\n\tisAttached(): boolean {\n\t\treturn this.squire != null\n\t}\n\n\tgetSelectedText(): string {\n\t\treturn this.squire.getSelectedText()\n\t}\n\n\taddEventListener(type: string, handler: (arg0: Event) => void) {\n\t\tthis.squire.addEventListener(type, handler)\n\t}\n\n\tsetSelection(range: Range) {\n\t\tthis.squire.setSelection(range)\n\t}\n\n\t/**\n\t * Convenience function for this.isEnabled() && !this.isReadOnly()\n\t */\n\tisEditable(): boolean {\n\t\treturn this.isEnabled() && !this.isReadOnly()\n\t}\n\n\tprivate updateContentEditableAttribute() {\n\t\tif (this.domElement) {\n\t\t\tthis.domElement.setAttribute(\"contenteditable\", String(this.isEditable()))\n\t\t}\n\t}\n}\n","import m, { Children, Component, Vnode, VnodeDOM } from \"mithril\"\nimport { Icons } from \"./icons/Icons\"\nimport type { Editor, Listing, Style } from \"../editor/Editor\"\nimport { Alignment } from \"../editor/Editor\"\nimport { numberRange } from \"@tutao/tutanota-utils\"\nimport { size } from \"../size\"\nimport { createDropdown, DropdownButtonAttrs } from \"./Dropdown.js\"\nimport { lang, TranslationKey, MaybeTranslation } from \"../../misc/LanguageViewModel\"\nimport { animations, height, opacity } from \"../animation/Animations\"\nimport { client } from \"../../misc/ClientDetector\"\nimport { BrowserType } from \"../../misc/ClientConstants\"\nimport { ToggleButton } from \"./buttons/ToggleButton.js\"\nimport { IconButton, IconButtonAttrs } from \"./IconButton.js\"\nimport { ButtonSize } from \"./ButtonSize.js\"\n\nexport interface RichTextToolbarAttrs {\n\teditor: Editor\n\timageButtonClickHandler?: ((ev: Event, editor: Editor) => unknown) | null\n\talignmentEnabled?: boolean\n\tfontSizeEnabled?: boolean\n\tcustomButtonAttrs?: Array<IconButtonAttrs>\n}\n\nexport class RichTextToolbar implements Component<RichTextToolbarAttrs> {\n\tselectedSize = size.font_size_base\n\n\tconstructor({ attrs }: Vnode<RichTextToolbarAttrs>) {\n\t\ttry {\n\t\t\tthis.selectedSize = parseInt(attrs.editor.squire.getFontInfo().size.slice(0, -2))\n\t\t} catch (e) {\n\t\t\tthis.selectedSize = size.font_size_base\n\t\t}\n\t}\n\n\toncreate(vnode: VnodeDOM<any>): void {\n\t\tconst dom = vnode.dom as HTMLElement\n\t\tdom.style.height = \"0\"\n\t\tanimateToolbar(dom, true)\n\t}\n\n\tonbeforeremove(vnode: VnodeDOM<any>): Promise<void> {\n\t\treturn animateToolbar(vnode.dom as HTMLElement, false)\n\t}\n\n\tview({ attrs }: Vnode<RichTextToolbarAttrs>): Children {\n\t\treturn m(\n\t\t\t\".elevated-bg.overflow-hidden\",\n\t\t\t{\n\t\t\t\tstyle: {\n\t\t\t\t\ttop: \"0px\",\n\t\t\t\t\tposition:\n\t\t\t\t\t\tclient.browser === BrowserType.SAFARI\n\t\t\t\t\t\t\t? client.isMacOS\n\t\t\t\t\t\t\t\t? \"-webkit-sticky\" // safari on macos\n\t\t\t\t\t\t\t\t: \"inherit\" // sticky changes the rendering order on iOS\n\t\t\t\t\t\t\t: \"sticky\", // normal browsers\n\t\t\t\t},\n\t\t\t},\n\t\t\t[\n\t\t\t\tm(\n\t\t\t\t\t\".flex-end.wrap.items-center.mb-xs.mt-xs.ml-between-s\",\n\t\t\t\t\tthis.renderStyleButtons(attrs),\n\t\t\t\t\tthis.renderCustomButtons(attrs),\n\t\t\t\t\tthis.renderAlignDropDown(attrs),\n\t\t\t\t\tthis.renderSizeButtons(attrs),\n\t\t\t\t\tthis.renderRemoveFormattingButton(attrs),\n\t\t\t\t),\n\t\t\t],\n\t\t)\n\t}\n\n\tprivate renderStyleButtons(attrs: RichTextToolbarAttrs): Children {\n\t\tconst { editor, imageButtonClickHandler } = attrs\n\n\t\treturn [\n\t\t\tthis.renderStyleToggleButton(\"b\", lang.get(\"formatTextBold_msg\") + \" (Ctrl + B)\", Icons.Bold, editor),\n\t\t\tthis.renderStyleToggleButton(\"i\", lang.get(\"formatTextItalic_msg\") + \" (Ctrl + I)\", Icons.Italic, editor),\n\t\t\tthis.renderStyleToggleButton(\"u\", lang.get(\"formatTextUnderline_msg\") + \" (Ctrl + U)\", Icons.Underline, editor),\n\t\t\tthis.renderStyleToggleButton(\"c\", lang.get(\"formatTextMonospace_msg\"), Icons.Code, editor),\n\t\t\tthis.renderStyleToggleButton(\"a\", editor.hasStyle(\"a\") ? lang.get(\"breakLink_action\") : lang.get(\"makeLink_action\"), Icons.Link, editor),\n\t\t\tthis.renderListToggleButton(\"ol\", lang.get(\"formatTextOl_msg\") + \" (Ctrl + Shift + 9)\", Icons.ListOrdered, editor),\n\t\t\tthis.renderListToggleButton(\"ul\", lang.get(\"formatTextUl_msg\") + \" (Ctrl + Shift + 8)\", Icons.ListUnordered, editor),\n\t\t\timageButtonClickHandler\n\t\t\t\t? m(IconButton, {\n\t\t\t\t\t\ttitle: \"insertImage_action\",\n\t\t\t\t\t\tclick: (ev) => imageButtonClickHandler(ev, editor),\n\t\t\t\t\t\ticon: Icons.Picture,\n\t\t\t\t\t\tsize: ButtonSize.Compact,\n\t\t\t\t  })\n\t\t\t\t: null,\n\t\t]\n\t}\n\n\tprivate renderStyleToggleButton(style: Style, title: string, icon: Icons, editor: Editor): Children {\n\t\treturn this.renderToggleButton(\n\t\t\tlang.makeTranslation(title, title),\n\t\t\ticon,\n\t\t\t() => editor.setStyle(!editor.hasStyle(style), style),\n\t\t\t() => editor.hasStyle(style),\n\t\t)\n\t}\n\n\tprivate renderListToggleButton(listing: Listing, title: string, icon: Icons, editor: Editor): Children {\n\t\treturn this.renderToggleButton(\n\t\t\tlang.makeTranslation(title, title),\n\t\t\ticon,\n\t\t\t() =>\n\t\t\t\teditor.styles.listing === listing\n\t\t\t\t\t? editor.squire.removeList()\n\t\t\t\t\t: listing === \"ul\"\n\t\t\t\t\t? editor.squire.makeUnorderedList()\n\t\t\t\t\t: editor.squire.makeOrderedList(),\n\t\t\t() => editor.styles.listing === listing,\n\t\t)\n\t}\n\n\tprivate renderToggleButton(title: MaybeTranslation, icon: Icons, click: () => void, isSelected: () => boolean): Children {\n\t\treturn m(ToggleButton, {\n\t\t\ttitle: title,\n\t\t\tonToggled: click,\n\t\t\ticon: icon,\n\t\t\ttoggled: isSelected(),\n\t\t\tsize: ButtonSize.Compact,\n\t\t})\n\t}\n\n\tprivate renderCustomButtons(attrs: RichTextToolbarAttrs): Children {\n\t\treturn (attrs.customButtonAttrs ?? []).map((attrs) => m(IconButton, attrs))\n\t}\n\n\tprivate renderAlignDropDown(attrs: RichTextToolbarAttrs): Children {\n\t\tif (attrs.alignmentEnabled === false) {\n\t\t\treturn null\n\t\t}\n\n\t\tconst alignButtonAttrs = (alignment: Alignment, title: TranslationKey, icon: Icons): DropdownButtonAttrs => {\n\t\t\treturn {\n\t\t\t\tlabel: title,\n\t\t\t\tclick: () => {\n\t\t\t\t\tattrs.editor.squire.setTextAlignment(alignment)\n\t\t\t\t\tsetTimeout(() => attrs.editor.squire.focus(), 100) // blur for the editor is fired after the handler for some reason\n\t\t\t\t\tm.redraw()\n\t\t\t\t},\n\t\t\t\ticon: icon,\n\t\t\t}\n\t\t}\n\n\t\treturn m(IconButton, {\n\t\t\t// label: () => \"▼\",\n\t\t\ttitle: \"formatTextAlignment_msg\",\n\t\t\ticon: this.alignIcon(attrs),\n\t\t\tsize: ButtonSize.Compact,\n\t\t\tclick: (e, dom) => {\n\t\t\t\te.stopPropagation()\n\t\t\t\tcreateDropdown({\n\t\t\t\t\twidth: 200,\n\t\t\t\t\tlazyButtons: () => [\n\t\t\t\t\t\talignButtonAttrs(\"left\", \"formatTextLeft_msg\", Icons.AlignLeft),\n\t\t\t\t\t\talignButtonAttrs(\"center\", \"formatTextCenter_msg\", Icons.AlignCenter),\n\t\t\t\t\t\talignButtonAttrs(\"right\", \"formatTextRight_msg\", Icons.AlignRight),\n\t\t\t\t\t\talignButtonAttrs(\"justify\", \"formatTextJustify_msg\", Icons.AlignJustified),\n\t\t\t\t\t],\n\t\t\t\t})(e, dom)\n\t\t\t},\n\t\t})\n\t}\n\n\tprivate alignIcon(attrs: RichTextToolbarAttrs) {\n\t\tswitch (attrs.editor.styles.alignment) {\n\t\t\tcase \"left\":\n\t\t\t\treturn Icons.AlignLeft\n\n\t\t\tcase \"center\":\n\t\t\t\treturn Icons.AlignCenter\n\n\t\t\tcase \"right\":\n\t\t\t\treturn Icons.AlignRight\n\n\t\t\tcase \"justify\":\n\t\t\t\treturn Icons.AlignJustified\n\t\t}\n\t}\n\n\tprivate renderSizeButtons({ editor }: RichTextToolbarAttrs): Children {\n\t\treturn m(IconButton, {\n\t\t\ttitle: \"formatTextFontSize_msg\",\n\t\t\ticon: Icons.FontSize,\n\t\t\tsize: ButtonSize.Compact,\n\t\t\tclick: (e, dom) => {\n\t\t\t\te.stopPropagation()\n\t\t\t\tcreateDropdown({\n\t\t\t\t\tlazyButtons: () =>\n\t\t\t\t\t\tnumberRange(8, 144).map((n) => {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tlabel: lang.makeTranslation(\"font_size_\" + n, n.toString()),\n\t\t\t\t\t\t\t\tclick: () => {\n\t\t\t\t\t\t\t\t\teditor.squire.setFontSize(n)\n\t\t\t\t\t\t\t\t\tthis.selectedSize = n\n\t\t\t\t\t\t\t\t\tsetTimeout(() => editor.squire.focus(), 100) // blur for the editor is fired after the handler for some reason\n\t\t\t\t\t\t\t\t\tm.redraw()\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}),\n\t\t\t\t})(e, dom)\n\t\t\t},\n\t\t})\n\t}\n\n\tprivate renderRemoveFormattingButton(attrs: RichTextToolbarAttrs): Children {\n\t\tif (attrs.fontSizeEnabled === false) {\n\t\t\treturn null\n\t\t}\n\n\t\treturn m(IconButton, {\n\t\t\ttitle: \"removeFormatting_action\",\n\t\t\ticon: Icons.FormatClear,\n\t\t\tclick: (e) => {\n\t\t\t\te.stopPropagation()\n\t\t\t\tattrs.editor.squire.removeAllFormatting()\n\t\t\t},\n\t\t\tsize: ButtonSize.Compact,\n\t\t})\n\t}\n}\n\nexport function animateToolbar(dom: HTMLElement, appear: boolean): Promise<void> {\n\tlet childHeight = Array.from(dom.children)\n\t\t.map((domElement) => (domElement as HTMLElement).offsetHeight)\n\t\t.reduce((current: number, previous: number) => Math.max(current, previous), 0)\n\treturn animations.add(dom, [height(appear ? 0 : childHeight, appear ? childHeight : 0), appear ? opacity(0, 1, false) : opacity(1, 0, false)]).then(() => {\n\t\tif (appear) {\n\t\t\tdom.style.height = \"\"\n\t\t}\n\t})\n}\n","import m, { Children, Component } from \"mithril\"\nimport stream from \"mithril/stream\"\nimport { Editor } from \"./Editor.js\"\nimport type { TranslationKey, MaybeTranslation } from \"../../misc/LanguageViewModel\"\nimport { lang } from \"../../misc/LanguageViewModel\"\nimport { px } from \"../size\"\nimport { htmlSanitizer } from \"../../misc/HtmlSanitizer\"\nimport { assertNotNull } from \"@tutao/tutanota-utils\"\nimport { DropDownSelector } from \"../base/DropDownSelector.js\"\nimport { RichTextToolbar, RichTextToolbarAttrs } from \"../base/RichTextToolbar.js\"\n\nexport enum HtmlEditorMode {\n\tHTML = \"html\",\n\tWYSIWYG = \"what you see is what you get\",\n}\n\nexport const HTML_EDITOR_LINE_HEIGHT: number = 24 // Height required for one line in the HTML editor\n\nexport class HtmlEditor implements Component {\n\teditor: Editor\n\tprivate mode = HtmlEditorMode.WYSIWYG\n\tprivate active = false\n\tprivate domTextArea: HTMLTextAreaElement | null = null\n\tprivate _showBorders = false\n\tprivate minHeight: number | null = null\n\tprivate placeholderId: TranslationKey | null = null\n\tprivate placeholderDomElement: HTMLElement | null = null\n\tprivate value = stream(\"\")\n\tprivate htmlMonospace = true\n\tprivate modeSwitcherLabel: MaybeTranslation | null = null\n\tprivate toolbarEnabled = false\n\tprivate toolbarAttrs: Omit<RichTextToolbarAttrs, \"editor\"> = {}\n\tprivate staticLineAmount: number | null = null // Static amount of lines the editor shall allow at all times\n\n\tconstructor(private label?: MaybeTranslation, private readonly injections?: () => Children) {\n\t\tthis.editor = new Editor(null, (html) => htmlSanitizer.sanitizeFragment(html, { blockExternalContent: false }).fragment, null)\n\t\tthis.view = this.view.bind(this)\n\t\tthis.initializeEditorListeners()\n\t}\n\n\tview(): Children {\n\t\tconst modeSwitcherLabel = this.modeSwitcherLabel\n\t\tlet borderClasses = this._showBorders\n\t\t\t? this.active && this.editor.isEnabled()\n\t\t\t\t? \".editor-border-active.border-radius\"\n\t\t\t\t: \".editor-border.border-radius.\" + (modeSwitcherLabel != null ? \".editor-no-top-border\" : \"\")\n\t\t\t: \"\"\n\n\t\tconst renderedInjections = this.injections?.() ?? null\n\n\t\tconst getPlaceholder = () =>\n\t\t\t!this.active && this.isEmpty()\n\t\t\t\t? m(\n\t\t\t\t\t\t\".abs.text-ellipsis.noselect.z1.i.pr-s\",\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\toncreate: (vnode) => (this.placeholderDomElement = vnode.dom as HTMLElement),\n\t\t\t\t\t\t\tonclick: () =>\n\t\t\t\t\t\t\t\tthis.mode === HtmlEditorMode.WYSIWYG ? assertNotNull(this.editor.domElement).focus() : assertNotNull(this.domTextArea).focus(),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tthis.placeholderId ? lang.get(this.placeholderId) : \"\",\n\t\t\t\t  )\n\t\t\t\t: null\n\n\t\treturn m(\".html-editor\" + (this.mode === HtmlEditorMode.WYSIWYG ? \".text-break\" : \"\"), { class: this.editor.isEnabled() ? \"\" : \"disabled\" }, [\n\t\t\tmodeSwitcherLabel != null\n\t\t\t\t? m(DropDownSelector, {\n\t\t\t\t\t\tlabel: modeSwitcherLabel,\n\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\t{ name: lang.get(\"richText_label\"), value: HtmlEditorMode.WYSIWYG },\n\t\t\t\t\t\t\t{ name: lang.get(\"htmlSourceCode_label\"), value: HtmlEditorMode.HTML },\n\t\t\t\t\t\t],\n\t\t\t\t\t\tselectedValue: this.mode,\n\t\t\t\t\t\tselectionChangedHandler: (mode: HtmlEditorMode) => {\n\t\t\t\t\t\t\tthis.mode = mode\n\t\t\t\t\t\t\tthis.setValue(this.value())\n\t\t\t\t\t\t\tthis.initializeEditorListeners()\n\t\t\t\t\t\t},\n\t\t\t\t  })\n\t\t\t\t: null,\n\t\t\tthis.label ? m(\".small.mt-form\", lang.getTranslationText(this.label)) : null,\n\t\t\tm(borderClasses, [\n\t\t\t\tgetPlaceholder(),\n\t\t\t\tthis.mode === HtmlEditorMode.WYSIWYG\n\t\t\t\t\t? m(\".wysiwyg.rel.overflow-hidden.selectable\", [\n\t\t\t\t\t\t\tthis.editor.isEnabled() && (this.toolbarEnabled || renderedInjections)\n\t\t\t\t\t\t\t\t? [\n\t\t\t\t\t\t\t\t\t\tm(\".flex-end.sticky.pb-2\", [\n\t\t\t\t\t\t\t\t\t\t\tthis.toolbarEnabled ? m(RichTextToolbar, Object.assign({ editor: this.editor }, this.toolbarAttrs)) : null,\n\t\t\t\t\t\t\t\t\t\t\trenderedInjections,\n\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\tm(\"hr.hr.mb-s\"),\n\t\t\t\t\t\t\t\t  ]\n\t\t\t\t\t\t\t\t: null,\n\t\t\t\t\t\t\tm(this.editor, {\n\t\t\t\t\t\t\t\toncreate: () => {\n\t\t\t\t\t\t\t\t\tthis.editor.initialized.promise.then(() => this.editor.setHTML(this.value()))\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tonremove: () => {\n\t\t\t\t\t\t\t\t\tthis.value(this.getValue())\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t  ])\n\t\t\t\t\t: m(\n\t\t\t\t\t\t\t\".html\",\n\t\t\t\t\t\t\tm(\"textarea.input-area.selectable\", {\n\t\t\t\t\t\t\t\toncreate: (vnode) => {\n\t\t\t\t\t\t\t\t\tthis.domTextArea = vnode.dom as HTMLTextAreaElement\n\t\t\t\t\t\t\t\t\tif (!this.isEmpty()) {\n\t\t\t\t\t\t\t\t\t\tthis.domTextArea.value = this.value()\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tonfocus: () => this.focus(),\n\t\t\t\t\t\t\t\tonblur: () => this.blur(),\n\t\t\t\t\t\t\t\toninput: () => {\n\t\t\t\t\t\t\t\t\tif (this.domTextArea) {\n\t\t\t\t\t\t\t\t\t\tthis.domTextArea.style.height = \"0px\"\n\t\t\t\t\t\t\t\t\t\tthis.domTextArea.style.height = this.domTextArea.scrollHeight + \"px\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tstyle: this.staticLineAmount\n\t\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\t\t\"max-height\": px(this.staticLineAmount * HTML_EDITOR_LINE_HEIGHT),\n\t\t\t\t\t\t\t\t\t\t\t\"min-height\": px(this.staticLineAmount * HTML_EDITOR_LINE_HEIGHT),\n\t\t\t\t\t\t\t\t\t\t\toverflow: \"scroll\",\n\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\t\t\t\"font-family\": this.htmlMonospace ? \"monospace\" : \"inherit\",\n\t\t\t\t\t\t\t\t\t\t\t\"min-height\": this.minHeight ? px(this.minHeight) : \"initial\",\n\t\t\t\t\t\t\t\t\t  },\n\t\t\t\t\t\t\t\tdisabled: !this.editor.isEnabled(),\n\t\t\t\t\t\t\t\treadonly: this.editor.isReadOnly(),\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t  ),\n\t\t\t]),\n\t\t])\n\t}\n\n\tprivate initializeEditorListeners() {\n\t\tthis.editor.initialized.promise.then(() => {\n\t\t\tconst dom = assertNotNull(this.editor?.domElement)\n\t\t\tdom.onfocus = () => this.focus()\n\t\t\tdom.onblur = () => this.blur()\n\t\t})\n\t}\n\n\tprivate focus() {\n\t\tthis.active = true\n\t\tm.redraw()\n\t}\n\n\tprivate blur() {\n\t\tthis.active = false\n\t\tif (this.mode === HtmlEditorMode.WYSIWYG) {\n\t\t\tthis.value(this.editor.getValue())\n\t\t} else {\n\t\t\tthis.value(assertNotNull(this.domTextArea).value)\n\t\t}\n\t}\n\n\tsetModeSwitcher(label: MaybeTranslation): this {\n\t\tthis.modeSwitcherLabel = label\n\t\treturn this\n\t}\n\n\tshowBorders(): HtmlEditor {\n\t\tthis._showBorders = true\n\t\treturn this\n\t}\n\n\tsetMinHeight(height: number): HtmlEditor {\n\t\tthis.minHeight = height\n\t\tthis.editor.setMinHeight(height)\n\t\treturn this\n\t}\n\n\t/**\n\t * Sets a static amount 'n' of lines the Editor should always render/allow.\n\t * When using n+1 lines, the editor will instead begin to be scrollable.\n\t * Currently, this overwrites min-height.\n\t */\n\tsetStaticNumberOfLines(numberOfLines: number): HtmlEditor {\n\t\tthis.staticLineAmount = numberOfLines\n\t\tthis.editor.setStaticNumberOfLines(numberOfLines)\n\t\treturn this\n\t}\n\n\tsetPlaceholderId(placeholderId: TranslationKey): HtmlEditor {\n\t\tthis.placeholderId = placeholderId\n\t\treturn this\n\t}\n\n\tgetValue(): string {\n\t\tif (this.mode === HtmlEditorMode.WYSIWYG) {\n\t\t\tif (this.editor.isAttached()) {\n\t\t\t\treturn this.editor.getHTML()\n\t\t\t} else {\n\t\t\t\treturn this.value()\n\t\t\t}\n\t\t} else {\n\t\t\tif (this.domTextArea) {\n\t\t\t\treturn htmlSanitizer.sanitizeHTML(this.domTextArea.value, { blockExternalContent: false }).html\n\t\t\t} else {\n\t\t\t\treturn this.value()\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * squire HTML editor usually has some HTML when appearing empty, sometimes we don't want that content.\n\t */\n\tgetTrimmedValue(): string {\n\t\treturn this.isEmpty() ? \"\" : this.getValue()\n\t}\n\n\tsetValue(html: string): HtmlEditor {\n\t\tif (this.mode === HtmlEditorMode.WYSIWYG) {\n\t\t\tthis.editor.initialized.promise.then(() => this.editor.setHTML(html))\n\t\t} else if (this.domTextArea) {\n\t\t\tthis.domTextArea.value = html\n\t\t}\n\t\tthis.value(html)\n\t\treturn this\n\t}\n\n\tsetShowOutline(show: boolean) {\n\t\tthis.editor.setShowOutline(show)\n\t\treturn this\n\t}\n\n\tisActive(): boolean {\n\t\treturn this.active\n\t}\n\n\tisEmpty(): boolean {\n\t\t// either nothing or default squire content\n\t\treturn this.value() === \"\" || new RegExp(/^<div( dir=[\"'][A-z]*[\"'])?><br><\\/div>$/).test(this.value())\n\t}\n\n\t/** set whether the dialog should be editable.*/\n\tsetEnabled(enabled: boolean): HtmlEditor {\n\t\tthis.editor.setEnabled(enabled)\n\t\tif (this.domTextArea) {\n\t\t\tthis.domTextArea.disabled = !enabled\n\t\t}\n\t\treturn this\n\t}\n\n\tsetReadOnly(readOnly: boolean): this {\n\t\tthis.editor.setReadOnly(readOnly)\n\t\tif (this.domTextArea) {\n\t\t\tthis.domTextArea.readOnly = readOnly\n\t\t}\n\t\treturn this\n\t}\n\n\tsetMode(mode: HtmlEditorMode): HtmlEditor {\n\t\tthis.mode = mode\n\t\treturn this\n\t}\n\n\tsetHtmlMonospace(monospace: boolean): HtmlEditor {\n\t\tthis.htmlMonospace = monospace\n\t\treturn this\n\t}\n\n\t/** show the rich text toolbar */\n\tenableToolbar(): this {\n\t\tthis.toolbarEnabled = true\n\t\treturn this\n\t}\n\n\tisToolbarEnabled(): boolean {\n\t\treturn this.toolbarEnabled\n\t}\n\n\t/** toggle the visibility of the rich text toolbar */\n\ttoggleToolbar(): this {\n\t\tthis.toolbarEnabled = !this.toolbarEnabled\n\t\treturn this\n\t}\n\n\tsetToolbarOptions(attrs: Omit<RichTextToolbarAttrs, \"editor\">): this {\n\t\tthis.toolbarAttrs = attrs\n\t\treturn this\n\t}\n}\n"],"mappings":"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"}