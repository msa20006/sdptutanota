{"version":3,"file":"DesktopIntegratorLinux-B-aJdsEF.js","names":["electron: ElectronExports","fs: FsExports","childProcess: ChildProcessExports","pathToCheck: string","wm: WindowManager","prefix: string","err: ExecFileException | null","stdout: string","stderr: string"],"sources":["../../src/common/desktop/integration/DesktopIntegratorLinux.ts"],"sourcesContent":["import path from \"node:path\"\nimport { lang } from \"../../misc/LanguageViewModel\"\nimport type { WindowManager } from \"../DesktopWindowManager\"\nimport { log } from \"../DesktopLog\"\nimport type { DesktopIntegrator } from \"./DesktopIntegrator\"\nimport { ChildProcessExports, ElectronExports, FsExports } from \"../ElectronExportTypes\"\nimport { ExecFileException } from \"node:child_process\"\n\nexport class DesktopIntegratorLinux implements DesktopIntegrator {\n\t_electron: ElectronExports\n\t_fs: FsExports\n\t_childProcess: ChildProcessExports\n\tDATA_HOME: string\n\tCONFIG_HOME: string\n\texecutablePath: string\n\tpackagePath: string\n\tautoLaunchPath: string\n\tdesktopFilePath: string\n\ticonTargetDir64: string\n\ticonTargetDir512: string\n\ticonTargetPath64: string\n\ticonTargetPath512: string\n\ticonSourcePath64: string\n\ticonSourcePath512: string\n\tnointegrationpath: string\n\n\tconstructor(electron: ElectronExports, fs: FsExports, childProcess: ChildProcessExports) {\n\t\tthis._electron = electron\n\t\tthis._fs = fs\n\t\tthis._childProcess = childProcess\n\t\tconst { app } = electron\n\t\tthis.DATA_HOME = process.env.XDG_DATA_HOME || path.join(app.getPath(\"home\"), \".local/share\")\n\t\tthis.CONFIG_HOME = process.env.XDG_CONFIG_HOME || path.join(app.getPath(\"home\"), \".config\")\n\t\tthis.executablePath = process.execPath\n\t\tthis.packagePath = process.env.APPIMAGE ? process.env.APPIMAGE : process.execPath\n\t\tthis.autoLaunchPath = path.join(this.CONFIG_HOME, `autostart/${app.name}.desktop`)\n\t\tthis.desktopFilePath = path.join(this.DATA_HOME, `applications/${app.name}.desktop`)\n\t\tthis.iconTargetDir64 = path.join(this.DATA_HOME, `icons/hicolor/64x64/apps/`)\n\t\tthis.iconTargetDir512 = path.join(this.DATA_HOME, `icons/hicolor/512x512/apps/`)\n\t\tthis.iconTargetPath64 = path.join(this.iconTargetDir64, `${app.name}.png`)\n\t\tthis.iconTargetPath512 = path.join(this.iconTargetDir512, `${app.name}.png`)\n\t\tthis.iconSourcePath64 = path.join(path.dirname(this.executablePath), `resources/icons/logo-solo-red-small.png`)\n\t\tthis.iconSourcePath512 = path.join(path.dirname(this.executablePath), `resources/icons/logo-solo-red.png`)\n\t\tthis.nointegrationpath = path.join(this.CONFIG_HOME, \"tuta_integration/no_integration\")\n\t}\n\n\tisAutoLaunchEnabled(): Promise<boolean> {\n\t\treturn this.checkFileIsThere(this.autoLaunchPath)\n\t}\n\n\tisIntegrated(): Promise<boolean> {\n\t\treturn this.checkFileIsThere(this.desktopFilePath)\n\t}\n\n\tcheckFileIsThere(pathToCheck: string): Promise<boolean> {\n\t\treturn this._fs.promises\n\t\t\t.access(pathToCheck, this._fs.constants.F_OK | this._fs.constants.W_OK | this._fs.constants.R_OK)\n\t\t\t.then(() => true)\n\t\t\t.catch(() => false)\n\t}\n\n\tenableAutoLaunch(): Promise<void> {\n\t\treturn this.isAutoLaunchEnabled().then((enabled) => {\n\t\t\tif (enabled) return\n\t\t\tconst autoLaunchDesktopEntry = `[Desktop Entry]\n\tType=Application\n\tVersion=${this._electron.app.getVersion()}\n\tName=${this._electron.app.name}\n\tComment=${this._electron.app.name} startup script\n\tExec=${this.packagePath} -a\n\tStartupNotify=false\n\tTerminal=false`\n\n\t\t\tthis._fs.mkdirSync(path.dirname(this.autoLaunchPath), {\n\t\t\t\trecursive: true,\n\t\t\t})\n\n\t\t\tthis._fs.writeFileSync(this.autoLaunchPath, autoLaunchDesktopEntry, {\n\t\t\t\tencoding: \"utf-8\",\n\t\t\t})\n\t\t})\n\t}\n\n\tdisableAutoLaunch(): Promise<void> {\n\t\treturn this.isAutoLaunchEnabled()\n\t\t\t.then((enabled) => (enabled ? this._fs.promises.unlink(this.autoLaunchPath) : Promise.resolve()))\n\t\t\t.catch((e) => {\n\t\t\t\t// don't throw if file not found\n\t\t\t\tif (e.code !== \"ENOENT\") throw e\n\t\t\t})\n\t}\n\n\tasync runIntegration(wm: WindowManager): Promise<void> {\n\t\tif (this.executablePath.includes(\"node_modules/electron/dist/electron\")) return\n\t\tconst integrated = await this.isIntegrated()\n\n\t\tif (integrated) {\n\t\t\tlog.debug(`desktop file exists, checking version...`)\n\t\t\tconst desktopEntryVersion = this.getDesktopEntryVersion()\n\n\t\t\tif (desktopEntryVersion !== this._electron.app.getVersion()) {\n\t\t\t\tlog.debug(\"version mismatch, reintegrating...\")\n\t\t\t\treturn this.integrate()\n\t\t\t}\n\t\t} else {\n\t\t\tlog.debug(`${this.desktopFilePath} does not exist, checking for permission to ask for permission...`)\n\t\t\tconst isThere = await this.checkFileIsThere(this.nointegrationpath)\n\n\t\t\tif (isThere) {\n\t\t\t\tconst forbiddenPaths = this._fs\n\t\t\t\t\t.readFileSync(this.nointegrationpath, {\n\t\t\t\t\t\tencoding: \"utf8\",\n\t\t\t\t\t\tflag: \"r\",\n\t\t\t\t\t})\n\t\t\t\t\t.trim()\n\t\t\t\t\t.split(\"\\n\")\n\n\t\t\t\tif (!forbiddenPaths.includes(this.packagePath)) {\n\t\t\t\t\treturn this.askPermission()\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn this.askPermission()\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * returns the version number from the desktop file\n\t * @returns {*}\n\t */\n\tgetDesktopEntryVersion(): string {\n\t\tconst versionLine =\n\t\t\tthis._fs\n\t\t\t\t.readFileSync(this.desktopFilePath, \"utf8\")\n\t\t\t\t.split(\"\\n\")\n\t\t\t\t.find((s) => s.includes(\"X-Tutanota-Version\")) || \"=0.0.0\"\n\t\treturn versionLine.split(\"=\")[1]\n\t}\n\n\tintegrate(): Promise<void> {\n\t\tconst prefix = this._electron.app.name.includes(\"test\") ? \"test \" : \"\"\n\t\treturn this.copyIcons()\n\t\t\t.then(() => this.createDesktopEntry(prefix))\n\t\t\t.then(() => {\n\t\t\t\tif (process.env[\"XDG_CURRENT_DESKTOP\"] !== \"GNOME\") return\n\n\t\t\t\ttry {\n\t\t\t\t\tthis._childProcess.execFile(\n\t\t\t\t\t\t\"update-desktop-database\",\n\t\t\t\t\t\t[path.join(this._electron.app.getPath(\"home\"), \".local/share/applications\")],\n\t\t\t\t\t\tlogExecFile,\n\t\t\t\t\t)\n\t\t\t\t} catch (e) {\n\t\t\t\t\t/* empty */\n\t\t\t\t}\n\t\t\t})\n\t}\n\n\tunintegrate(): Promise<void> {\n\t\treturn Promise.all([this._fs.promises.unlink(this.iconTargetPath64), this._fs.promises.unlink(this.iconTargetPath512)])\n\t\t\t.catch((e) => {\n\t\t\t\tif (!e.message.startsWith(\"ENOENT\")) {\n\t\t\t\t\tthrow e\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(() => this._fs.promises.unlink(this.desktopFilePath))\n\t\t\t.catch((e) => {\n\t\t\t\tif (!e.message.startsWith(\"ENOENT\")) {\n\t\t\t\t\tthrow e\n\t\t\t\t}\n\t\t\t})\n\t}\n\n\tcreateDesktopEntry(prefix: string): Promise<void> {\n\t\tconst desktopEntry = `[Desktop Entry]\nName=${prefix}Tuta Mail\nComment=The desktop client for Tuta Mail, the secure e-mail service.\nGenericName=Mail Client\nKeywords=Email;E-mail\nExec=\"${this.packagePath}\" %U\nTerminal=false\nType=Application\nIcon=${this._electron.app.name}\nStartupWMClass=${this._electron.app.name}\nMimeType=x-scheme-handler/mailto;\nCategories=Network;\nX-Tutanota-Version=${this._electron.app.getVersion()}\nTryExec=${this.packagePath}`\n\t\treturn this._fs.promises\n\t\t\t.mkdir(path.dirname(this.desktopFilePath), {\n\t\t\t\trecursive: true,\n\t\t\t})\n\t\t\t.then(() =>\n\t\t\t\tthis._fs.promises.writeFile(this.desktopFilePath, desktopEntry, {\n\t\t\t\t\tencoding: \"utf-8\",\n\t\t\t\t}),\n\t\t\t)\n\t}\n\n\tcopyIcons(): Promise<void> {\n\t\treturn Promise.all([\n\t\t\tthis._fs.promises.mkdir(this.iconTargetDir64, {\n\t\t\t\trecursive: true,\n\t\t\t}),\n\t\t\tthis._fs.promises.mkdir(this.iconTargetDir512, {\n\t\t\t\trecursive: true,\n\t\t\t}),\n\t\t])\n\t\t\t.then(() => {\n\t\t\t\treturn Promise.all([\n\t\t\t\t\tthis._fs.promises.copyFile(this.iconSourcePath64, this.iconTargetPath64),\n\t\t\t\t\tthis._fs.promises.copyFile(this.iconSourcePath512, this.iconTargetPath512),\n\t\t\t\t])\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\ttry {\n\t\t\t\t\t// refresh icon cache (update last modified timestamp)\n\t\t\t\t\tthis._childProcess.execFile(\"touch\", [path.join(this._electron.app.getPath(\"home\"), \".local/share/icons/hicolor\")], logExecFile)\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// it's ok if this fails for some reason, the icons will appear after a reboot at the latest\n\t\t\t\t}\n\t\t\t})\n\t}\n\n\t/**\n\t * asks the user for permission to integrate.\n\t * also gives the option to opt-out indefinitely, which\n\t * records the current path to the appImage in\n\t * ~/.config/tuta_integration/no_integration\n\t */\n\tasync askPermission(): Promise<void> {\n\t\tconst { response, checkboxChecked } = await this._electron.dialog.showMessageBox({\n\t\t\ttitle: lang.get(\"desktopIntegration_label\"),\n\t\t\tbuttons: [lang.get(\"no_label\"), lang.get(\"yes_label\")],\n\t\t\tdefaultId: 1,\n\t\t\tmessage: lang.get(\"desktopIntegration_msg\"),\n\t\t\tcheckboxLabel: lang.get(\"doNotAskAgain_label\"),\n\t\t\tcheckboxChecked: false,\n\t\t\ttype: \"question\",\n\t\t})\n\n\t\tif (checkboxChecked) {\n\t\t\tlog.debug(\"updating no_integration blacklist...\")\n\t\t\tawait this._fs.promises.mkdir(path.dirname(this.nointegrationpath), {\n\t\t\t\trecursive: true,\n\t\t\t})\n\t\t\tawait this._fs.promises.writeFile(this.nointegrationpath, this.packagePath + \"\\n\", {\n\t\t\t\tencoding: \"utf-8\",\n\t\t\t\tflag: \"a\",\n\t\t\t})\n\t\t}\n\n\t\tif (response === 1) {\n\t\t\t// clicked yes\n\t\t\tawait this.integrate()\n\t\t}\n\t}\n}\n\nfunction logExecFile(err: ExecFileException | null, stdout: string, stderr: string) {\n\tif (stdout && stdout !== \"\") log.debug(\"stdout:\", stdout)\n\tif (err) log.error(err)\n\tif (stderr && stderr !== \"\") log.error(\"stderr:\", stderr)\n}\n"],"mappings":"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"}