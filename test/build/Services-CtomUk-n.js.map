{"version":3,"file":"Services-CtomUk-n.js","names":["BlobAccessTokenPostInTypeRef: TypeRef<BlobAccessTokenPostIn>","values: StrippedEntity<BlobAccessTokenPostIn>","BlobAccessTokenPostOutTypeRef: TypeRef<BlobAccessTokenPostOut>","BlobArchiveRefTypeRef: TypeRef<BlobArchiveRef>","BlobGetInTypeRef: TypeRef<BlobGetIn>","values: StrippedEntity<BlobGetIn>","BlobIdTypeRef: TypeRef<BlobId>","values: StrippedEntity<BlobId>","BlobPostOutTypeRef: TypeRef<BlobPostOut>","BlobReadDataTypeRef: TypeRef<BlobReadData>","values: StrippedEntity<BlobReadData>","BlobReferenceDeleteInTypeRef: TypeRef<BlobReferenceDeleteIn>","BlobReferencePutInTypeRef: TypeRef<BlobReferencePutIn>","BlobServerAccessInfoTypeRef: TypeRef<BlobServerAccessInfo>","BlobServerUrlTypeRef: TypeRef<BlobServerUrl>","BlobWriteDataTypeRef: TypeRef<BlobWriteData>","values: StrippedEntity<BlobWriteData>","InstanceIdTypeRef: TypeRef<InstanceId>","values: StrippedEntity<InstanceId>"],"sources":["../../src/common/api/entities/storage/TypeRefs.ts","../../src/common/api/entities/storage/Services.ts"],"sourcesContent":["import { create, Stripped, StrippedEntity } from \"../../common/utils/EntityUtils.js\"\nimport { TypeRef } from \"@tutao/tutanota-utils\"\nimport { typeModels } from \"./TypeModels.js\"\nimport { BlobReferenceTokenWrapper } from '../sys/TypeRefs.js'\nimport { Blob } from '../sys/TypeRefs.js'\n\nexport const BlobAccessTokenPostInTypeRef: TypeRef<BlobAccessTokenPostIn> = new TypeRef(\"storage\", \"BlobAccessTokenPostIn\")\n\nexport function createBlobAccessTokenPostIn(values: StrippedEntity<BlobAccessTokenPostIn>): BlobAccessTokenPostIn {\n\treturn Object.assign(create(typeModels.BlobAccessTokenPostIn, BlobAccessTokenPostInTypeRef), values)\n}\n\nexport type BlobAccessTokenPostIn = {\n\t_type: TypeRef<BlobAccessTokenPostIn>;\n\n\t_format: NumberString;\n\tarchiveDataType: null | NumberString;\n\n\tread: null | BlobReadData;\n\twrite: null | BlobWriteData;\n}\nexport const BlobAccessTokenPostOutTypeRef: TypeRef<BlobAccessTokenPostOut> = new TypeRef(\"storage\", \"BlobAccessTokenPostOut\")\n\nexport function createBlobAccessTokenPostOut(values: StrippedEntity<BlobAccessTokenPostOut>): BlobAccessTokenPostOut {\n\treturn Object.assign(create(typeModels.BlobAccessTokenPostOut, BlobAccessTokenPostOutTypeRef), values)\n}\n\nexport type BlobAccessTokenPostOut = {\n\t_type: TypeRef<BlobAccessTokenPostOut>;\n\n\t_format: NumberString;\n\n\tblobAccessInfo: BlobServerAccessInfo;\n}\nexport const BlobArchiveRefTypeRef: TypeRef<BlobArchiveRef> = new TypeRef(\"storage\", \"BlobArchiveRef\")\n\nexport function createBlobArchiveRef(values: StrippedEntity<BlobArchiveRef>): BlobArchiveRef {\n\treturn Object.assign(create(typeModels.BlobArchiveRef, BlobArchiveRefTypeRef), values)\n}\n\nexport type BlobArchiveRef = {\n\t_type: TypeRef<BlobArchiveRef>;\n\n\t_format: NumberString;\n\t_id: IdTuple;\n\t_ownerGroup: null | Id;\n\t_permissions: Id;\n\n\tarchive: Id;\n}\nexport const BlobGetInTypeRef: TypeRef<BlobGetIn> = new TypeRef(\"storage\", \"BlobGetIn\")\n\nexport function createBlobGetIn(values: StrippedEntity<BlobGetIn>): BlobGetIn {\n\treturn Object.assign(create(typeModels.BlobGetIn, BlobGetInTypeRef), values)\n}\n\nexport type BlobGetIn = {\n\t_type: TypeRef<BlobGetIn>;\n\n\t_format: NumberString;\n\tarchiveId: Id;\n\tblobId: null | Id;\n\n\tblobIds: BlobId[];\n}\nexport const BlobIdTypeRef: TypeRef<BlobId> = new TypeRef(\"storage\", \"BlobId\")\n\nexport function createBlobId(values: StrippedEntity<BlobId>): BlobId {\n\treturn Object.assign(create(typeModels.BlobId, BlobIdTypeRef), values)\n}\n\nexport type BlobId = {\n\t_type: TypeRef<BlobId>;\n\n\t_id: Id;\n\tblobId: Id;\n}\nexport const BlobPostOutTypeRef: TypeRef<BlobPostOut> = new TypeRef(\"storage\", \"BlobPostOut\")\n\nexport function createBlobPostOut(values: StrippedEntity<BlobPostOut>): BlobPostOut {\n\treturn Object.assign(create(typeModels.BlobPostOut, BlobPostOutTypeRef), values)\n}\n\nexport type BlobPostOut = {\n\t_type: TypeRef<BlobPostOut>;\n\n\t_format: NumberString;\n\tblobReferenceToken: null | string;\n\n\tblobReferenceTokens: BlobReferenceTokenWrapper[];\n}\nexport const BlobReadDataTypeRef: TypeRef<BlobReadData> = new TypeRef(\"storage\", \"BlobReadData\")\n\nexport function createBlobReadData(values: StrippedEntity<BlobReadData>): BlobReadData {\n\treturn Object.assign(create(typeModels.BlobReadData, BlobReadDataTypeRef), values)\n}\n\nexport type BlobReadData = {\n\t_type: TypeRef<BlobReadData>;\n\n\t_id: Id;\n\tarchiveId: Id;\n\tinstanceListId: null | Id;\n\n\tinstanceIds: InstanceId[];\n}\nexport const BlobReferenceDeleteInTypeRef: TypeRef<BlobReferenceDeleteIn> = new TypeRef(\"storage\", \"BlobReferenceDeleteIn\")\n\nexport function createBlobReferenceDeleteIn(values: StrippedEntity<BlobReferenceDeleteIn>): BlobReferenceDeleteIn {\n\treturn Object.assign(create(typeModels.BlobReferenceDeleteIn, BlobReferenceDeleteInTypeRef), values)\n}\n\nexport type BlobReferenceDeleteIn = {\n\t_type: TypeRef<BlobReferenceDeleteIn>;\n\n\t_format: NumberString;\n\tarchiveDataType: NumberString;\n\tinstanceId: Id;\n\tinstanceListId: null | Id;\n\n\tblobs: Blob[];\n}\nexport const BlobReferencePutInTypeRef: TypeRef<BlobReferencePutIn> = new TypeRef(\"storage\", \"BlobReferencePutIn\")\n\nexport function createBlobReferencePutIn(values: StrippedEntity<BlobReferencePutIn>): BlobReferencePutIn {\n\treturn Object.assign(create(typeModels.BlobReferencePutIn, BlobReferencePutInTypeRef), values)\n}\n\nexport type BlobReferencePutIn = {\n\t_type: TypeRef<BlobReferencePutIn>;\n\n\t_format: NumberString;\n\tarchiveDataType: NumberString;\n\tinstanceId: Id;\n\tinstanceListId: null | Id;\n\n\treferenceTokens: BlobReferenceTokenWrapper[];\n}\nexport const BlobServerAccessInfoTypeRef: TypeRef<BlobServerAccessInfo> = new TypeRef(\"storage\", \"BlobServerAccessInfo\")\n\nexport function createBlobServerAccessInfo(values: StrippedEntity<BlobServerAccessInfo>): BlobServerAccessInfo {\n\treturn Object.assign(create(typeModels.BlobServerAccessInfo, BlobServerAccessInfoTypeRef), values)\n}\n\nexport type BlobServerAccessInfo = {\n\t_type: TypeRef<BlobServerAccessInfo>;\n\n\t_id: Id;\n\tblobAccessToken: string;\n\texpires: Date;\n\ttokenKind: NumberString;\n\n\tservers: BlobServerUrl[];\n}\nexport const BlobServerUrlTypeRef: TypeRef<BlobServerUrl> = new TypeRef(\"storage\", \"BlobServerUrl\")\n\nexport function createBlobServerUrl(values: StrippedEntity<BlobServerUrl>): BlobServerUrl {\n\treturn Object.assign(create(typeModels.BlobServerUrl, BlobServerUrlTypeRef), values)\n}\n\nexport type BlobServerUrl = {\n\t_type: TypeRef<BlobServerUrl>;\n\n\t_id: Id;\n\turl: string;\n}\nexport const BlobWriteDataTypeRef: TypeRef<BlobWriteData> = new TypeRef(\"storage\", \"BlobWriteData\")\n\nexport function createBlobWriteData(values: StrippedEntity<BlobWriteData>): BlobWriteData {\n\treturn Object.assign(create(typeModels.BlobWriteData, BlobWriteDataTypeRef), values)\n}\n\nexport type BlobWriteData = {\n\t_type: TypeRef<BlobWriteData>;\n\n\t_id: Id;\n\tarchiveOwnerGroup: Id;\n}\nexport const InstanceIdTypeRef: TypeRef<InstanceId> = new TypeRef(\"storage\", \"InstanceId\")\n\nexport function createInstanceId(values: StrippedEntity<InstanceId>): InstanceId {\n\treturn Object.assign(create(typeModels.InstanceId, InstanceIdTypeRef), values)\n}\n\nexport type InstanceId = {\n\t_type: TypeRef<InstanceId>;\n\n\t_id: Id;\n\tinstanceId: null | Id;\n}\n","import { BlobAccessTokenPostInTypeRef } from \"./TypeRefs.js\"\nimport { BlobAccessTokenPostOutTypeRef } from \"./TypeRefs.js\"\nimport { BlobReferencePutInTypeRef } from \"./TypeRefs.js\"\nimport { BlobReferenceDeleteInTypeRef } from \"./TypeRefs.js\"\nimport { BlobGetInTypeRef } from \"./TypeRefs.js\"\nimport { BlobPostOutTypeRef } from \"./TypeRefs.js\"\n\nexport const BlobAccessTokenService = Object.freeze({\n\tapp: \"storage\",\n\tname: \"BlobAccessTokenService\",\n\tget: null,\n\tpost: { data: BlobAccessTokenPostInTypeRef, return: BlobAccessTokenPostOutTypeRef },\n\tput: null,\n\tdelete: null,\n} as const)\n\nexport const BlobReferenceService = Object.freeze({\n\tapp: \"storage\",\n\tname: \"BlobReferenceService\",\n\tget: null,\n\tpost: null,\n\tput: { data: BlobReferencePutInTypeRef, return: null },\n\tdelete: { data: BlobReferenceDeleteInTypeRef, return: null },\n} as const)\n\nexport const BlobService = Object.freeze({\n\tapp: \"storage\",\n\tname: \"BlobService\",\n\tget: { data: BlobGetInTypeRef, return: null },\n\tpost: { data: null, return: BlobPostOutTypeRef },\n\tput: null,\n\tdelete: null,\n} as const)"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAMaA,+BAA+D,IAAI,QAAQ,WAAW;AAE5F,SAAS,4BAA4BC,QAAsE;AACjH,QAAO,OAAO,OAAO,OAAO,WAAW,uBAAuB,6BAA6B,EAAE,OAAO;AACpG;MAWYC,gCAAiE,IAAI,QAAQ,WAAW;MAaxFC,wBAAiD,IAAI,QAAQ,WAAW;MAgBxEC,mBAAuC,IAAI,QAAQ,WAAW;AAEpE,SAAS,gBAAgBC,QAA8C;AAC7E,QAAO,OAAO,OAAO,OAAO,WAAW,WAAW,iBAAiB,EAAE,OAAO;AAC5E;MAWYC,gBAAiC,IAAI,QAAQ,WAAW;AAE9D,SAAS,aAAaC,QAAwC;AACpE,QAAO,OAAO,OAAO,OAAO,WAAW,QAAQ,cAAc,EAAE,OAAO;AACtE;MAQYC,qBAA2C,IAAI,QAAQ,WAAW;MAclEC,sBAA6C,IAAI,QAAQ,WAAW;AAE1E,SAAS,mBAAmBC,QAAoD;AACtF,QAAO,OAAO,OAAO,OAAO,WAAW,cAAc,oBAAoB,EAAE,OAAO;AAClF;MAWYC,+BAA+D,IAAI,QAAQ,WAAW;MAgBtFC,4BAAyD,IAAI,QAAQ,WAAW;MAgBhFC,8BAA6D,IAAI,QAAQ,WAAW;MAgBpFC,uBAA+C,IAAI,QAAQ,WAAW;MAYtEC,uBAA+C,IAAI,QAAQ,WAAW;AAE5E,SAAS,oBAAoBC,QAAsD;AACzF,QAAO,OAAO,OAAO,OAAO,WAAW,eAAe,qBAAqB,EAAE,OAAO;AACpF;MAQYC,oBAAyC,IAAI,QAAQ,WAAW;AAEtE,SAAS,iBAAiBC,QAAgD;AAChF,QAAO,OAAO,OAAO,OAAO,WAAW,YAAY,kBAAkB,EAAE,OAAO;AAC9E;;;;MC/KY,yBAAyB,OAAO,OAAO;CACnD,KAAK;CACL,MAAM;CACN,KAAK;CACL,MAAM;EAAE,MAAM;EAA8B,QAAQ;CAA+B;CACnF,KAAK;CACL,QAAQ;AACR,EAAU;MAEE,uBAAuB,OAAO,OAAO;CACjD,KAAK;CACL,MAAM;CACN,KAAK;CACL,MAAM;CACN,KAAK;EAAE,MAAM;EAA2B,QAAQ;CAAM;CACtD,QAAQ;EAAE,MAAM;EAA8B,QAAQ;CAAM;AAC5D,EAAU;MAEE,cAAc,OAAO,OAAO;CACxC,KAAK;CACL,MAAM;CACN,KAAK;EAAE,MAAM;EAAkB,QAAQ;CAAM;CAC7C,MAAM;EAAE,MAAM;EAAM,QAAQ;CAAoB;CAChD,KAAK;CACL,QAAQ;AACR,EAAU"}