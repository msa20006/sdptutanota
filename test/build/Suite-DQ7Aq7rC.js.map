{"version":3,"file":"Suite-DQ7Aq7rC.js","names":["fetchDefer: DeferredObject<ListFetchResult<KnowledgeBaseEntry>>","listModel: ListModel<KnowledgeBaseEntry, Id>","defaultListConfig: ListModelConfig<KnowledgeBaseEntry, Id>","id1: string","id2: string","items: KnowledgeBaseEntry[]","fetchDefer: DeferredObject<ListFetchResult<KnowledgeBaseEntry>>","listModel: ListElementListModel<KnowledgeBaseEntry>","defaultListConfig: ListElementListModelConfig<KnowledgeBaseEntry>","items: KnowledgeBaseEntry[]","element: KnowledgeBaseEntry","_listId: Id","elementId: Id","newConfig: ListElementListModelConfig<KnowledgeBaseEntry>","somePromise: DeferredObject<ListFetchResult<KnowledgeBaseEntry>>","matchers","verify","demonstration: any","config?: td.VerificationConfig","demonstration","makeUser","userId: Id","kdfVersion: KdfType","userPassphraseKey: AesKey","userId","facade: LoginFacade","serviceExecutor: IServiceExecutor","restClientMock: RestClient","entityClientMock: EntityClient","loginListener: LoginListener","instanceMapperMock: InstanceMapper","cryptoFacadeMock: CryptoFacade","cacheStorageInitializerMock: CacheStorageLateInitializer","eventBusClientMock: EventBusClient","usingOfflineStorage: boolean","userFacade: UserFacade","entropyFacade: EntropyFacade","blobAccessTokenFacade: BlobAccessTokenFacade","databaseKeyFactoryMock: DatabaseKeyFactory","argon2idFacade: Argon2idFacade","cacheManagmentFacadeMock: CacheManagementFacade","error: Error","dbKey","accessToken","credentials: Credentials","user: User","credentials","calls: string[]","fullLoginDeferred: DeferredObject<void>","dateProvider","testFunction: () => any","expectedError: TutanotaError","actual: any","matchers","count: number","factory: (index: number) => T","entityRestClient: EntityRestClient","restClient: RestClient","instanceMapperMock: InstanceMapper","cryptoFacadeMock: CryptoFacade","fullyLoggedIn: boolean","blobAccessTokenFacade: BlobAccessTokenFacade","dateProvider: DateProvider","data","instance","authDataProvider: AuthDataProvider","authDataProvider","tutanotaModelInfo","sysModelInfo","blobServerAccessInfo","result: Array<MailDetailsBlob> | null","version","instances: Contact[]","path: string","method: HttpMethod","RSA_TEST_KEYPAIR: RsaKeyPair","kyberFacade","pqFacade: PQFacade","matchers","pqFacade: PQFacade","asymmetricCryptoFacade: AsymmetricCryptoFacade","bucketEncMailSessionKey: Uint8Array","fileSessionKeys: Array<AesKey>","bk: number[]","pubEncBucketKey: Uint8Array","recipientUser: TestUser","instanceMapper: InstanceMapper","mailLiteral: Record<string, any>","senderPubEccKey?: Versioned<EccPublicKey>","recipientKeyVersion: NumberString","protocolVersion: CryptoProtocolVersion","restClient: RestClient","serviceExecutor: IServiceExecutor","entityClient: EntityClient","ownerEncSessionKeysUpdateQueue: OwnerEncSessionKeysUpdateQueue","crypto: CryptoFacade","userFacade: UserFacade","keyLoaderFacade: KeyLoaderFacade","cache: DefaultEntityRestCache","entityClient","sessionKey: AesKey","privateKey","publicKey","p: UpdatePermissionKeyData","protocolVersion","pqEncapsulation: PQBucketKeyEncapsulation","encodedPqMessage: Uint8Array","crypto","fileSessionKeys: Array<Aes256Key>","confidential: boolean","ownerGroupKey: AesKey | null","ownerGroupId: string","name: string","testUser: TestUser","rsa: RsaImplementation","pqFacade: PQFacade","keyLoaderFacade: KeyLoaderFacade","cryptoWrapper: CryptoWrapper","serviceExecutor: IServiceExecutor","asymmetricCryptoFacade: AsymmetricCryptoFacade","pqFacade","identifier: string","identifierType: PublicKeyIdentifierType","senderIdentityPubKey: Uint8Array","senderKeyVersion: number","keyData: PublicKeyGetIn","pubEncSymKey: Uint8Array","pubEncKeyData: PubEncKeyData","symKey: AesKey","pubEncSymKeyBytes: Uint8Array","recipientKyberPublicKey: KyberPublicKey","senderPqKeyPair: Versioned<PQKeyPairs>","ephemeralKeyPair: EccKeyPair","recipientPublicKeys: Versioned<PublicKeys>","newIdentityEccPair: EccKeyPair","senderRsaKeyPair: Versioned<RsaKeyPair>","arg: PublicKeyPutIn","entityClient: EntityClient","userFacade: UserFacade","keyLoaderFacade: KeyLoaderFacade","instanceMapper: InstanceMapper","valueType: ModelValue","vt: ModelValue","entityClient","result: any","customerAccountTerminationRequest: CustomerAccountTerminationRequest","instance: Mail","instance","matchers","serviceExecutor: IServiceExecutor","ownerEncSessionKeysUpdateQueue: OwnerEncSessionKeysUpdateQueue","userFacade: UserFacade","mailTypeModel: TypeModel","td","testData","publicKey","privateKey","data","pqPublicKeys: PQPublicKeys","pqKeyPairs: PQKeyPairs","pqFacade","matchers","userId: Id","userid: string","key: Uint8Array","retry?: boolean","userId","userId: string","name: string","getStorage: (userId: Id) => Promise<CacheStorage>","storage: CacheStorage","cache: DefaultEntityRestCache","entityRestClient: EntityRestClient","userId: Id | null","createUpdate","typeRef: TypeRef<any>","listId: Id","id: Id","operation: OperationType","name","mock","instance","eventId: IdTuple","loadedUntilMinId: boolean","loadedUntilMaxId: boolean","listId","cache","listIdToLoad: string","startId: Id","count: number","reverse: boolean","contactId: IdTuple","client","permissionId: IdTuple","client: EntityRestClient","id: IdTuple","ids: IdTuple[]","contactAId: IdTuple","contactBId: IdTuple","updates: Array<EntityUpdate>","userId","authDataProvider: AuthDataProvider","instance","id: Id","error: Error","id: IdTuple","listId: Id","elementId: Id","_typeRef: TypeRef<T>","id: T[\"_id\"]","_opts: EntityRestClientLoadOptions","typeRef: TypeRef<T>","start: Id","count: number","reverse: boolean","listId: Id | null | undefined","elementIds: Array<Id>","instance: T","extraHeaders?: Dict","instances: Array<T>","id: Id | null | undefined","element: any","id: Id | IdTuple","ebc: EventBusClient","cacheMock: DefaultEntityRestCache","restClient: EntityRestClientMock","userMock: UserFacade","socket: WebSocket","user: User","sleepDetector: SleepDetector","listenerMock: EventBusListener","progressTrackerMock: ExposedProgressTracker","entityClient","batch: QueuedBatch","groupId: Id","batchId: Id","updateCaptor: Captor","now","addedBatchIds: Id[]","newEvents: ReadonlyArray<EntityUpdate>","addedBatches: Array<ReadonlyArray<EntityUpdate>>","unknownTypeModel: TypeModel","unknownTypeRef: TypeRef<UnknownType>","eventBatchId: number","event: WebsocketEntityData","event: WebsocketCounterData","eventBusEventCoordinator: EventBusEventCoordinator","userId","userGroupId","user: User","userFacade: UserFacade","entityClient: EntityClient","mailFacade: MailFacade","eventController: EventController","keyRotationFacadeMock: KeyRotationFacade","cacheManagementFacade: CacheManagementFacade","lazyMailFacade: lazyAsync<MailFacade>","entityClient","error: Error","queuedBatch: QueuedBatch[]","updates: Array<EntityUpdate>","restClientMock: EntityRestClient","entityRestCache: DefaultEntityRestCache","mailIndexer: MailIndexer","mock","dbKey","count","transaction: DbTransaction","typeRef: TypeRef<T>","typeRef: TypeRef<any>","batch: QueuedBatch","batch1: QueuedBatch","batch2: QueuedBatch","indexer: Indexer","entityRestClientDouble: EntityRestClient","restClientDouble: RestClient","cacheInfo: CacheInfo","name: ObjectStoreName","autoIncrement: boolean","keyPath?: string","index?: Index","stub: DbStub","objectStore: ObjectStoreName","key: DbKey","indexName?: IndexName","value","key: DbKey | null","value: any","mailTypeInfo","contactTypeInfo","key: Aes256Key","iv: Uint8Array","n: number","baseTimestamp: number","newEntries: EncSearchIndexEntryWithTimestamp[]","actual: Uint8Array","expected: Uint8Array","instanceId: IdTuple","keyToIndexEntries: Map<string, SearchIndexEntry[]>","elementData: ElementDataSurrogate","encEntriesA: EncSearchIndexEntryWithTimestamp[]","entry: any","encEntriesB: EncSearchIndexEntryWithTimestamp[]","entry2: any","id2: IdTuple","keyToIndexEntries2: Map<string, SearchIndexEntry[]>","elementData2: ElementDataSurrogate","newEntry: any","transaction: any","entry: EncryptedSearchIndexEntry","other1: EncryptedSearchIndexEntry","other2: EncryptedSearchIndexEntry","metaData: SearchIndexMetaDataRow","elementDataSurrogate: ElementDataSurrogate","indexUpdate: IndexUpdate","dbStub: DbStub","transaction: DbStubTransaction","core: IndexerCore","newEntry: EncryptedSearchIndexEntry","searchIndexMeta: SearchIndexMetaDataRow","newEntries: Array<EncSearchIndexEntryWithTimestamp>","groupData: GroupData","encWordToMetaRow: EncWordToMetaRow","elementData: ElementDataDbRow","queue: EventQueue","transaction: DbTransaction","dbMock: any","contactTypeInfo","dbMock","event: EntityUpdate","transaction: DbTransaction","contactList","userGroupId","contacts","entity: any","createUpdate","type: OperationType","listId: Id","id: Id","now: number","now","shiftedBy: number","dbMock: any","entityMock: EntityRestClientMock","entityClient: EntityClient","bulkMailLoader: BulkMailLoader","dateProvider: DateProvider","mailFacade: MailFacade","entityClient","dateProvider","core: IndexerCore","MailModel","event: EntityUpdate","elementData: ElementDataDbRow","db: Db","core: any","indexer: any","MetaData","mailbox: MailBox","indexUpdate: IndexUpdate","v: any","type: OperationType","listId: Id","instanceId: Id","eventId?: Id","startTimestamp: number","endIndexTimstamp: number","fullyIndexed: boolean","indexMailList: boolean","dbMock","mock","indexingEnabled: boolean","mailState: MailState","mailId: IdTuple","mailDetailsBlobId: IdTuple","mailId","entry: SearchIndexEntry","withoutEncId: any","meta: SearchIndexMetaDataRow","createUpdate","type: OperationType","id: Id","browserData: BrowserData","entityClient: EntityClient","transaction: DbStubTransaction","currentIndexTimestamp: number","transaction","dbData: KeyToIndexEntriesWithType[]","fullIds: IdTuple[]","counter","metaDataRow: SearchIndexMetaDataRow","elementDataEntry: ElementDataDbRow","word: string","entries: SearchIndexEntryWithType[]","id: Id","attribute: number","positions: number[]","attributeIds?: number[] | null","listId?: Id | null","start?: number | null","end?: number | null","dbListIds: IdTuple[]","query: string","restriction: SearchRestriction","expectedResult: IdTuple[]","minSuggestionCount: number","maxResults?: number","dbStub: DbStub","id1","id2","id3","firstWordIds: Array<IdTuple>","secondWordIds: Array<IdTuple>","transactionMock: any","transactionLoadMock: any","spy","contactList","search","urlString: string","urlsToCache: string[]","caches: CacheStorage","cacheName: string","selfLocation: string","applicationPaths: string[]","isTutanotaDomain: boolean","caches","applicationPaths","isTutanotaDomain","evt: FetchEvent","r: Response","clonedResponse: Response","body: ReadableStream | Blob","r","request: Request","requestUrl: string","cache: Cache","url: string","urlWithout: string","init","sw: ServiceWorker","evt: ExtendableEvent","caches: CacheStorage","sw: ServiceWorker","applicationPaths","caches","queue: EventQueue","processElement: any","lastProcess: { resolve: () => void; reject: (Error) => void; promise: Promise<void> }","type: OperationType","instanceId: string","batchWithOnlyDelete: QueuedBatch","batchWithThrow: QueuedBatch","batchWithOnlyCreate: QueuedBatch","queue","nextElement: QueuedBatch","createEvent","createUpdate","listId: Id","instanceId: Id","eventId?: Id","facade: MailFacade","userFacade: UserFacade","cryptoFacade: CryptoFacade","serviceExecutor: IServiceExecutor","entity: EntityClient","blobFacade: BlobFacade","fileApp: NativeFileApp","loginFacade: LoginFacade","keyLoaderFacade: KeyLoaderFacade","userFacade: UserFacade","counters: CounterFacade","entityClient: EntityClient","serviceExecutor: IServiceExecutor","pqFacade: PQFacade","keyLoaderFacade: KeyLoaderFacade","cacheManagementFacade: CacheManagementFacade","asymmetricCryptoFacade: AsymmetricCryptoFacade","cryptoWrapper: CryptoWrapper","groupManagementFacade: GroupManagementFacade","adminGroupId","group: Group","entityClient","pqFacade","asymmetricCryptoFacade","symGlobalAdminGroupKey: VersionedKey","symLocalAdminGroupKey: VersionedKey","userGroup: Group","adminGroupKey: VersionedKey","postIn: LocalAdminRemovalPostIn","groupType: GroupType","groupInfoListId: string","groupId: string","adminGroup: string","adminGroupEncGroupKey: Uint8Array","groupId","group","pqMessage: PQMessage","kyberFacade","pqFacade: PQFacade","userAlarmInfoListId: Id","user: User","userFacade: UserFacade","groupManagementFacade: GroupManagementFacade","restClientMock: EntityRestClientMock","entityRestCache: DefaultEntityRestCache","calendarFacade: CalendarFacade","progressMonitor: ProgressMonitor","entityRequest: EntityRestClient[\"setupMultiple\"]","requestSpy: any","serviceExecutor: IServiceExecutor","cryptoFacade: CryptoFacade","infoMessageHandler: InfoMessageHandler","eventsWithAlarmInfos: Array<EventWithUserAlarmInfos>","makeEvent","listId: Id","elementId?: Id","event: CalendarEvent","listId","smaller","keyCache: KeyCache","facade: UserFacade","keyCache: KeyCache","userFacade: UserFacade","entityClient: EntityClient","cacheManagementFacade: CacheManagementFacade","pqFacade: PQFacade","keyLoaderFacade: KeyLoaderFacade","group: Group","userGroup: Group","currentKeys: KeyPair | null","formerKeys: GroupKey[]","formerKeysDecrypted: AesKey[]","currentGroupKey: VersionedKey","userGroupKey: VersionedKey","currentGroupKeyVersion: number","formerKeyPairsDecrypted: PQKeyPairs[]","currentKeyPair: PQKeyPairs","membership: GroupMembership","entityClient","key: GroupKey","outOfDateMembership: GroupMembership","user: User","messageHandlerMock: InfoMessageHandler","results: string[]","keyLoaderFacade: KeyLoaderFacade","allowListTable: Array<{\n\t\t\taddress: string\n\t\t\trule?: ExternalImageRule\n\t\t}>","keyLoaderFacade","userFacade: UserFacade","dbFacade: DbFacade","transaction: DbTransaction","currentUserGroupKey: VersionedKey","dbKey: AesKey","iv: Uint8Array","encIv: Uint8Array","dbKey","transaction","data","testData","instance","mailId: Id","mailId","matchers","blobFacade: BlobFacade","blobAccessTokenFacade: BlobAccessTokenFacade","restClientMock: RestClient","suspensionHandlerMock: SuspensionHandler","fileAppMock: NativeFileApp","aesAppMock: AesApp","instanceMapperMock: InstanceMapper","cryptoFacadeMock: CryptoFacade","file: TutanotaFile","anotherFile: TutanotaFile","blobId1","expectedFileReference: FileReference","inData: BlobGetIn","options: RestClientOptions","tutanotaFile: TutanotaFile","matchers","blobAccessTokenFacade: BlobAccessTokenFacade","serviceMock: ServiceExecutor","authDataProvider: AuthDataProvider","now","dateProvider","authDataProvider","referencingInstance: BlobReferencingInstance","archiveDataType","referencingInstance1: BlobReferencingInstance","referencingInstance2: BlobReferencingInstance","scheduler: SchedulerMock","dateProvider: DateProvider","detector: SleepDetector","dateProvider","matchers","restClient: RestClient","authHeaders: Record<string, string>","instanceMapper: InstanceMapper","cryptoFacade: CryptoFacade","executor: ServiceExecutor","fullyLoggedIn: boolean","authDataProvider: AuthDataProvider","authDataProvider","getService: GetService","data","params: RestClientOptions","postService: PostService","getService: PostService","putService: PutService","deleteService: DeleteService","opts: RestClientOptions","accessToken","userId","workerMock: WorkerImpl","offlineStorageMock: OfflineStorage","offlineStorageProviderMock: () => Promise<null | OfflineStorage>","proxy: LateInitializedCacheStorageImpl","error: Error","args: OfflineStorageArgs","contactArray: Contact[]","contacts","firstName: string","lastName: string","comment: string","company: string","title: string","nickname: string","middleName: string","nameSuffix: string","department: string","emailAddresses?: string[] | null | undefined","phoneNumbers?: string[] | null | undefined","socialIds?: Array<string | string[]> | null | undefined","addresses?: string[] | null | undefined","websites?: Array<string>","birthdayIso?: string | null | undefined","en","contacts","en","cases: [string, string | null][]","text: string","expectedDay: number","expectedMonth: number","expectedYear: number | null | undefined","generator: PasswordGenerator","randomNumber: number","passwordModel: PasswordModel | null","reservedStrings: string[]","logins: LoginController","usageTestController: UsageTestController","defaultMutation: DomMutation","delay","themeManager: ThemeController","themeFacadeMock: ThemeFacade","htmlSanitizerMock: HtmlSanitizer","theme: Partial<Theme>","theme: ThemeCustomizations","theme","captor","event: string","name: E","event: Partial<WindowEventMap[E]>","array: T","collector: EntropyCollector","entropyFacade: EntropyFacade","scheduler: SchedulerMock","addedEntropy: EntropyDataChunk[][]","fakeWindow: FakeWindow","restClient: EntityRestClientMock","entityClient","rules: InboxRule[]","value: string","type?: string","targetFolder?: IdTuple","t1: IdTuple","t2: IdTuple","mockedAttributes: any[]","signatureType: EmailSignatureType","signature: string","internalUser: boolean","overrides: Partial<Mail>","mail: Mail","notifications: Partial<Notifications>","showSpy: Spy","model: MailModel","mailboxDetails: Partial<MailboxDetail>[]","logins: LoginController","inboxRuleHandler: InboxRuleHandler","restClient: EntityRestClientMock","arg: { instanceListId: string; instanceId: Id; operation: OperationType }","firstName: string","lastName: string","emailAddresses?: string[] | null | undefined","phoneNumbers?: string[] | null | undefined","mailAddresses: string[]","phoneNumbers: string[]","comment: string","company: string","title: string","nickname: string","c: Contact","socialIds?: string[] | null | undefined","addresses?: string[] | null | undefined","allContacts: Contact[]","birthdayIso: string | null | undefined","c1: Contact","c2: Contact","merged: Contact","day: NumberString","month: NumberString","year: NumberString | null | undefined","restClientMock: EntityRestClientMock","groupRoot: CalendarGroupRoot","createdEvent: CalendarEvent","alarms: ReadonlyArray<AlarmInfo>","restClientMock","progressTracker: ProgressTracker","listener: EntityEventsListener","loginController: LoginController","userController: UserController","getEventsByUid: { getEventsByUid: (_: any) => unknown }","entityRestClient: EntityRestClientMock","entityClient","zone","strings: TemplateStringsArray","strings","timeString: string","now","start: Date","end: Date","eventsForDays: Map<number, Array<CalendarEvent>>","userController: UserController","calendars: Map<string, CalendarInfo>","calendars","event: Partial<CalendarEvent>","calenderMonth: CalendarMonth","now: Date","timeZone: string","eventStart: Date","eventEnd: Date","repeatPeriod: RepeatPeriod","interval: number","endType: EndType","endValue: number","exclusions: Array<Date>","alarmInterval: AlarmInterval","calculationZone: string","maxOccurrences: number","occurrences: Date[]","next: AlarmOccurrence","startTime: Date","endTime: Date","event: CalendarEvent","matchers","maiboxModel: MailboxModel","calendarIniviteHandler: CalendarInviteHandler","calendarModel: CalendarModel","logins: LoginController","sendMailModel: SendMailModel","calendarNotificationSender: CalendarNotificationSender","mailboxDetails: MailboxDetail","userController: Partial<UserController>","mailboxProperties: MailboxProperties","makeEvent","zone","zone","actual: unknown","expected: unknown","message: string","alarmScheduler: AlarmScheduler","scheduler: SchedulerMock","now: DateTime","dateProvider: DateProvider","dateProvider","events: readonly CalendarEvent[]","date: Date","events: CalendarEvent[]","generator: AsyncGenerator","result: Array<unknown>","domain: string","domainData: AddDomainData","showErrorDialog: boolean","cleanDomainName: string","customerId?: Id","data","data: AddDomainData","wizardPages: WizardPageWrapper<AddDomainData>[]","initialValues: Partial<CalendarEvent>","now","recipients: RecipientsModel","sendMailModel: SendMailModel","userController: UserController","recipient: Recipient","initialValues: Partial<CalendarEvent>","userController","sendModels: Array<SendMailModel>","dateProvider: DateProvider","en","userController: UserController","distributor: CalendarNotificationSender","calendarModel: CalendarModel","entityClient: EntityClient","editModels: CalendarEventEditModels","recipientsModel: RecipientsModel","logins: LoginController","userController","resolvableOwner: ResolvableRecipient","resolvableRecipient: ResolvableRecipient","mailboxDetail: MailboxDetail","mailboxProperties: MailboxProperties","sendModelFac: () => SendMailModel","entityClient","now","address: string","name: string | null","contact: Contact | null","type: RecipientType | null","internalAddresses: string[]","existingContacts: Contact[]","resolveMode: ResolveMode","user: User","contact: Contact","name: string","onResolved: (resolvedRecipient: Recipient) => void","matchers","testIdGenerator: TestIdGenerator","en","mailboxModel: MailboxModel","entity: EntityClient","mailFacade: MailFacade","recipientsModel: RecipientsModel","model: SendMailModel","mailboxDetails: MailboxDetail","mail: Mail","getConfirmation","anything","recipients","mockedAttributes: any","now","planPrices: typeof PLAN_PRICES","registrationDataId: string | null","bonusMonths: number","en","serviceExecutor: IServiceExecutor","emailTemplates: Array<EmailTemplate>","knowledgebaseEntry1: KnowledgeBaseEntry","knowledgebaseEntry2: KnowledgeBaseEntry","knowledgebaseEntry3: KnowledgeBaseEntry","facade!: MailExportTokenFacade","serviceExecutor!: ServiceExecutor","now","mostMinimalBundle: MailBundle","bundle: MailBundle","entityClientMock: EntityClient","fileControllerMock: FileController","sanitizerMock: HtmlSanitizer","mailFacadeMock: MailFacade","cryptoMock: CryptoFacade","mailId: IdTuple","attachmentListId: Id","attachmentIds: Id[]","attachments: Array<DataFile>","mailId","mail: Mail","attachments: File","attachments","input: string","options?: Partial<CsvParseOptions>","delimiter: Delimiter","quotedColumnParser: Parser<string>","delimiter: string","iterator: StringIterator","dateProvider: DateProvider","newsModel: NewsModel","referralViewModel: ReferralLinkViewer","referralLinkNews: ReferralLinkNews","userController: UserController","locator: IMailLocator","domainConfig: DomainConfig","locator","user: User","customer: Customer","dateProvider","entityClient: EntityClient","entityClient","model: MailAddressTableModel","nameChanger: MailAddressNameChanger","mailAddressFacade: MailAddressFacade","entityClient: EntityClient","userGroupInfo: GroupInfo","entityClient","entityClient: EntityClient","logins: LoginController","counterFacade: CounterFacade","allUserGroupInfos: Array<GroupInfo>","entityClientMock: EntityClient","counterFacadeMock: CounterFacade","loginsMock: LoginController","fileControllerMock: FileController","userId","SecondFactorTypeToNameTextId: Record<SecondFactorType, TranslationKey>","entityClient: EntityClient","user: User","webauthnClient: WebauthnClient","totpKeys: TotpSecret","webauthnSupported: boolean","loginFacade: LoginFacade","hostname: string","domainConfig: DomainConfig","updateViewCallback: () => void","token?: string","QRCode","options: Array<SecondFactorType>","newValue: SecondFactorType","newValue: string","secret: string","expectedCode: number","key: Uint8Array","entityClientMock: EntityClient","userMock: User","webAuthnClientMock: WebauthnClient","loginFacadeMock: LoginFacade","params: any","o","dateProvider: DateProvider","scheduler: SchedulerImpl","timeoutMock: TimeoutMock","now","dateProvider","val: string","isValid: boolean","currentTheme: Theme","themeCustomizations: ThemeCustomizations","whitelabelConfig: WhitelabelConfig","whitelabelDomainInfo: DomainInfo","themeController: ThemeController","entityClient: EntityClient","loginController: LoginController","entityClient","colorName: ThemeKey","accentColor: string","baseThemeId: BaseThemeId","nameOfKey: CustomizationKey","colorValue: string","name: CustomizationKey","model: CustomColorsEditorViewModel","themeController: ThemeController","defaultCustomizations: ThemeCustomizations","entityClient: EntityClient","loginController: LoginController","isWhitelabelEnabled: boolean","customizations: ThemeCustomizations","entityClient","matchers","userId","encryptedTestCredentials: PersistedCredentials","testCredentials: Credentials","loginControllerMock: LoginController","credentialsProviderMock: CredentialsProvider","secondFactorHandlerMock: SecondFactorHandler","deviceConfigMock: DeviceConfig","credentialRemovalHandler: CredentialRemovalHandler","pushServiceApp: NativePushServiceApp","appLock: AppLock","credentialsWithoutPassword: Credentials","unencrypted: UnencryptedCredentials","oldCredentials: UnencryptedCredentials","oldCredentials: Credentials","oldCredentials","credentialsProvider: CredentialsProvider","internalCredentials: UnencryptedCredentials","internalCredentials2: UnencryptedCredentials","internalCredentialsBob: UnencryptedCredentials","internalCredentialsAlice: UnencryptedCredentials","externalCredentials: UnencryptedCredentials","encryptedInternalCredentials: PersistedCredentials","encryptedInternalCredentialsBob: PersistedCredentials","encryptedInternalCredentialsAlice: PersistedCredentials","encryptedExternalCredentials: PersistedCredentials","encryptedInternalCredentialsWithoutDatabaseKey: Omit<PersistedCredentials, \"databaseKey\">","sqlCipherFacadeMock: SqlCipherFacade","interWindowEventSenderMock: InterWindowEventFacadeSendDispatcher","nativeCredentialFacadeMock: NativeCredentialsFacade","list: readonly PersistedCredentials[]","userId","credentials: CredentialsInfo","persistentCredentials: PersistedCredentials","oldConfig: any","expectedCredentialsAfterMigration: Record<string, Omit<DeviceConfigCredentials, \"databaseKey\">>","localStorageMock: Storage","draggingArea: HTMLBodyElement","eventDragCallbacks: EventDragHandlerCallbacks","calendarEvent: CalendarEvent","dateUnderMouse: Date","mousePos: MousePos","keepTime: boolean","pos: MousePos","eventStart: Date","dragData: DragData","adjustedDateUnderMouse: Date","zone","body: HTMLBodyElement","callbackMock: EventDragHandlerCallbacks","handler: EventDragHandler","draggedEvent: DraggedEvent","diff: number","entityClientMock: EntityRestClientMock","makeViewModelCallback: CalendarEventEditModelsFactory","progressTracker: ProgressTracker","deviceConfig: DeviceConfig","calendarInvitations: ReceivedGroupInvitationsModel<GroupType.Calendar>","calendarModel: CalendarModel","contactModel: ContactModel","eventMapStream: Stream<DaysToEvents>","calendarInfosStream: Stream<ReadonlyMap<Id, CalendarInfo>>","eventsRepository: CalendarEventsRepository","loginController: LoginController","mailboxModel: MailboxModel","previewModelFactory: CalendarEventPreviewModelFactory","contactPreviewModelFactory: CalendarContactPreviewModelFactory","init","makeCalendarEventModel","eventModel: CalendarEventModel","saveModel: CalendarEventModel","entityListeners: any[]","eventController: EventController","entityUpdate: EntityUpdateData","originalEvent: CalendarEvent","newDate: Date","viewModel: CalendarViewModel","originalDate: Date","mode: CalendarOperation","existingEvent: CalendarEvent","userController: UserController","customer: Customer","logins: LoginController","webauthn: WebAuthnFacade","client: WebauthnClient","domainConfigProvider: DomainConfigProvider","isApp: boolean","isApp","en","de","de_sie","matchers","usageTestModel: UsageTestModel","serviceExecutor: IServiceExecutor","entityClient: EntityClient","persistentStorage: UsageTestStorage","ephemeralStorage: UsageTestStorage","userControllerMock: UserController","loginControllerMock: LoginController","eventControllerMock: EventController","usageTestController: UsageTestController","dateProvider","assignmentData: PersistedAssignmentData","modelInfo","entityClient","usageTest: UsageTest","pingOrder: Array<string>","newsModel: NewsModel","serviceExecutor: IServiceExecutor","storage: NewsItemStorage","newsIds: NewsId[]","newsId: NewsId","matchers","somePromise: Promise<void>","progress?: Stream<number>","blobFacadeMock: BlobFacade","fileAppMock: NativeFileApp","fileController: FileControllerNative","oldEnv: typeof env","fileReferenceWorks: FileReference","fileController: FileControllerBrowser","data","otherAddress","contactModelMock: ContactModel","userControllerMock: UserController","loginControllerMock: LoginController","mailFacadeMock: MailFacade","entityClientMock: EntityClient","model: RecipientsModel","contactId","id: IdTuple","mailAddress: string","firstName?: string","lastName?: string","worker: WorkerImpl","userFacade: UserFacade","groupManagementFacade: GroupManagementFacade","countersFacade: CounterFacade","rsa: RsaImplementation","entityClient: EntityClient","serviceExecutor: ServiceExecutor","nonCachingEntityClient: EntityClient","facade: MailAddressFacade","opts: EntityRestClientLoadOptions","userGroupInfoId: IdTuple","model: MailListModel","mailboxDetail: MailboxDetail","labels: MailFolder[]","mailSet: MailFolder","conversationPrefProvider: ConversationPrefProvider","entityClient: EntityClient","mailModel: MailModel","inboxRuleHandler: InboxRuleHandler","cacheStorage: ExposedCacheStorage","entityClient","index: number","mailSetElementId: Id","count: number","initialLabels: MailFolder[]","offline: boolean","mailSetEntries: MailSetEntry[]","mails: Mail[][]","mailId: IdTuple","mailId","mail: Mail","sets: MailFolder[]","_mailSetEntry: any","_listId: Id","startingId: Id","_reverse: boolean","endingIndex: number","count","_mailTypeRef: any","mailBag: string","elements: Id[]","mail","someMail: LoadedMail","forEntries: Id","init","o","spy","stack","spec","pop","delay","err","e","name","deepEqual","self","message","results","contactListEditorModel: ContactListEditorModel","userController: UserController","customerInfo: CustomerInfo","customerProperties: CustomerProperties","customer: Customer","kyberFacade: WASMKyberFacade","node","rank","last","data","func","now","amountOfEntries: number","data: any","data","pdfWriter: PdfWriter","input: RequestInfo | URL","init?: RequestInit","response: Response","entityClient: EntityClient","entityClient","contacts","matchers","PW_KEY: AesKey","CURRENT_USER_GROUP_KEY: VersionedKey","CURRENT_ADMIN_GROUP_KEY: VersionedKey","NEW_USER_GROUP_KEY: VersionedKey","NEW_ADMIN_GROUP_KEY: VersionedKey","RECOVER_CODE: Aes256Key","CURRENT_USER_AREA_GROUP_KEY: VersionedKey","NEW_GROUP_KEY: VersionedKey","MEMBER1_BUCKET_KEY: Aes256Key","MEMBER1_SESSION_KEY: Aes256Key","OTHER_MEMBER_USER_GROUP_KEY: VersionedKey","CURRENT_ADMIN_GROUP_ENC_CURRENT_USER_GROUP_KEY: VersionedEncryptedKey","CURRENT_ADMIN_GROUP_ENC_CURRENT_ADMIN_GROUP_KEY: VersionedEncryptedKey","PW_ENC_CURRENT_USER_GROUP_KEY: VersionedEncryptedKey","NEW_ADMIN_GROUP_ENC_NEW_USER_GROUP_KEY: VersionedEncryptedKey","NEW_ADMIN_GROUP_ENC_NEW_ADMIN_GROUP_KEY: VersionedEncryptedKey","NEW_USER_GROUP_ENC_NEW_ADMIN_GROUP_KEY: VersionedEncryptedKey","NEW_ADMIN_GROUP_ENC_CURRENT_ADMIN_GROUP_KEY: VersionedEncryptedKey","NEW_USER_GROUP_ENC_CURRENT_USER_GROUP_KEY: VersionedEncryptedKey","PW_ENC_NEW_USER_GROUP_KEY: VersionedEncryptedKey","NEW_USER_GROUP_ENC_RECOVER_CODE_KEY: VersionedEncryptedKey","RECOVER_CODE_ENC_NEW_USER_GROUP_KEY: VersionedEncryptedKey","NEW_USER_AREA_GROUP_ENC_CURRENT_USER_AREA_GROUP_KEY: VersionedEncryptedKey","CURRENT_ADMIN_GROUP_ENC_NEW_USER_AREA_GROUP_KEY: VersionedEncryptedKey","CURRENT_USER_GROUP_ENC_NEW_USER_AREA_GROUP_KEY: VersionedEncryptedKey","OTHER_USER_GROUP_ENC_NEW_SHARED_GROUP_KEY: VersionedEncryptedKey","recoverData: RecoverData","recoverCodeFacade: RecoverCodeFacade","userGroupKeyData: UserGroupKeyRotationData","recoverCodeData: RecoverCodeData","mocks: {\n\t\tserviceExecutor: IServiceExecutor\n\t\tcryptoWrapper: CryptoWrapper\n\t\tentityClient: EntityClient\n\t\tasymmetricCryptoFacade: AsymmetricCryptoFacade\n\t}","keyRotationFacade: KeyRotationFacade","userGroup: Group","entityClientMock: EntityClient","keyLoaderFacadeMock: KeyLoaderFacade","pqFacadeMock: PQFacade","serviceExecutorMock: IServiceExecutor","userFacade: UserFacade","cryptoFacade: CryptoFacade","shareFacade: ShareFacade","groupManagementFacade: GroupManagementFacade","asymmetricCryptoFacade: AsymmetricCryptoFacade","user: User","cryptoWrapperMock: CryptoWrapper","userEncAdminKey: Uint8Array","group: Group","groupInfo: GroupInfo","groupKeyVersion0: AesKey","customer: Customer","recoverCodeFacadeAsync: lazyAsync<RecoverCodeFacade>","asymmetricCryptoFacade","captor","sentData: GroupKeyRotationPostIn","invitationId: IdTuple","memberUserGroupInfoId: IdTuple","senderUserGroupId: Id","bucketKey: AesKey","recipientMailAddress: string","notFoundRecipients: Array<string>","adminGroup: Group","generatedKeyPairs: Map<AesKey, MockedKeyPairs>","adminGroupKeyData: GroupKeyRotationData","arg: AdminGroupKeyRotationPostIn","adminGroupKeyAuthenticationData: AdminGroupKeyAuthenticationData","arg: PublicKeyGetIn","insecureUserGroupKey: VersionedKey","insecureAdminGroupKey: VersionedKey","groupId: Id","group","groupId","groupInfo","user","userId: Id","userEncAdminKey: VersionedEncryptedKey","userId","keyRotationsList: Id","groupType: string","invitations: Id","groupKeyUpdatesList: Id","groupManagementFacadeMock: GroupManagementFacade","newKeyPairs: PQKeyPairs","encryptedEccPrivKey: Uint8Array","encryptedKyberPrivKey: Uint8Array","kyberPublicKeyBytes: Uint8Array","arg: EncryptedPqKeyPairs","keyPair: KeyPair | null | undefined","mockedKeyPairs: MockedKeyPairs","conversation: ConversationEntry[]","primaryMail: Mail","anotherMail: Mail","viewModel: ConversationViewModel","mailModel: MailModel","mailboxModel: MailboxModel","mailboxDetail: MailboxDetail","entityRestClientMock: EntityRestClientMock","prefProvider: ConversationPrefProvider","redraw: () => unknown","loadingDefer: DeferredObject<void>","eventCallback: EntityEventsListener","pMail: Mail","entityClient","eventController: EventController","mailId: string","mailId","mailsDisplayed: ConversationItem[]","mail: Mail","showFolder: boolean","entityClient: EntityClient","mailModel: MailModel","mailboxModel: MailboxModel","contactModel: ContactModel","configFacade: ConfigurationDatabase","fileController: FileController","logins: LoginController","eventController: EventController","workerFacade: WorkerFacade","searchModel: SearchModel","mailFacade: MailFacade","sendMailModel: SendMailModel","sendMailModelFactory: (mailboxDetails: MailboxDetail) => Promise<SendMailModel>","cryptoFacade: CryptoFacade","contactImporter: ContactImporter","headers: string","entityClient","mail","mailDetails: MailDetails","expected: Array<string>","keyCache: KeyCache","deviceConfigMock: DeviceConfig","locatorMock: CommonLocator","now","userControllerMock: UserController","userId","controller: MailExportController","mailExportFacade: MailExportFacade","exportFacade: ExportFacade","logins: LoginController","mailboxModel: MailboxModel","mailboxDetail: MailboxDetail","userController: UserController","scheduler: SchedulerMock","mailBag: MailBag","startId: Id","num: number","persistedState: MailboxExportState","facade!: MailExportFacade","tokenFacade!: MailExportTokenFacade","bulkMailLoader!: BulkMailLoader","blobFacade!: BlobFacade","cryptoFacade!: CryptoFacade","blobAccessTokenFacade!: BlobAccessTokenFacade","WorkerImpl"],"sources":["../tests/misc/ListModelTest.ts","../tests/misc/ListElementListModelTest.ts","../tests/api/worker/facades/LoginFacadeTest.ts","../tests/api/common/utils/LoggerTest.ts","../tests/api/common/utils/BirthdayUtilsTest.ts","../tests/api/worker/rest/EntityRestClientTest.ts","../tests/api/worker/facades/RsaPqPerformanceTest.ts","../tests/api/worker/crypto/CryptoFacadeTest.ts","../tests/api/worker/crypto/AsymmetricCryptoFacadeTest.ts","../tests/api/worker/crypto/InstanceMapperTest.ts","../tests/api/worker/crypto/OwnerEncSessionKeysUpdateQueueTest.ts","../tests/api/worker/crypto/CompatibilityTestData.json","../tests/api/worker/crypto/CompatibilityTest.ts","../tests/api/common/error/RestErrorTest.ts","../tests/api/common/error/TutanotaErrorTest.ts","../tests/api/worker/rest/EntityRestCacheTest.ts","../tests/api/worker/rest/EphemeralCacheStorageTest.ts","../tests/api/worker/rest/EntityRestClientMock.ts","../tests/api/worker/EventBusClientTest.ts","../tests/api/worker/EventBusEventCoordinatorTest.ts","../tests/api/worker/search/IndexerTest.ts","../tests/api/worker/search/DbStub.ts","../tests/api/worker/search/IndexerCoreTest.ts","../tests/api/worker/search/ContactIndexerTest.ts","../tests/api/worker/search/MailIndexerTest.ts","../tests/api/worker/search/IndexUtilsTest.ts","../tests/api/worker/search/SearchFacadeTest.ts","../tests/api/worker/search/SuggestionFacadeTest.ts","../tests/api/worker/search/SearchIndexEncodingTest.ts","../../src/mail-app/ApplicationPaths.ts","../../src/common/serviceworker/sw.ts","../tests/serviceworker/SwTest.ts","../tests/api/worker/search/EventQueueTest.ts","../tests/api/worker/facades/MailFacadeTest.ts","../tests/api/worker/facades/GroupManagementFacadeTest.ts","../tests/api/worker/facades/PQMessageTest.ts","../tests/api/worker/facades/PQFacadeTest.ts","../tests/api/worker/facades/CalendarFacadeTest.ts","../tests/api/worker/facades/UserFacadeTest.ts","../tests/api/worker/facades/KeyLoaderFacadeTest.ts","../tests/api/worker/SuspensionHandlerTest.ts","../tests/api/worker/facades/ConfigurationDbTest.ts","../tests/api/worker/CompressionTest.ts","../tests/api/common/utils/PlainTextSearchTest.ts","../tests/api/common/utils/EntityUtilsTest.ts","../tests/api/worker/rest/CborDateEncoderTest.ts","../tests/api/worker/facades/BlobFacadeTest.ts","../tests/api/worker/facades/BlobAccessTokenFacadeTest.ts","../tests/api/worker/utils/SleepDetectorTest.ts","../tests/api/worker/rest/ServiceExecutorTest.ts","../tests/api/worker/rest/CacheStorageProxyTest.ts","../tests/contacts/VCardExporterTest.ts","../tests/contacts/VCardImporterTest.ts","../tests/misc/ClientDetectorTest.ts","../tests/misc/LanguageViewModelTest.ts","../tests/api/common/utils/CommonFormatterTest.ts","../tests/misc/FormatterTest.ts","../tests/api/worker/UrlifierTest.ts","../tests/misc/PasswordUtilsTest.ts","../tests/misc/PasswordGeneratorTest.ts","../tests/misc/PasswordModelTest.ts","../tests/gui/animation/AnimationsTest.ts","../tests/gui/ThemeControllerTest.ts","../tests/api/main/EntropyCollectorTest.ts","../tests/misc/HtmlSanitizerTest.ts","../tests/mail/InboxRuleHandlerTest.ts","../tests/mail/MailUtilsSignatureTest.ts","../tests/api/common/mail/CommonMailUtilsTest.ts","../tests/mail/MailModelTest.ts","../tests/contacts/ContactUtilsTest.ts","../tests/contacts/ContactMergeUtilsTest.ts","../tests/calendar/CalendarModelTest.ts","../tests/calendar/CalendarUtilsTest.ts","../tests/calendar/CalendarInvitesTest.ts","../tests/calendar/CalendarParserTest.ts","../tests/calendar/CalendarImporterTest.ts","../tests/calendar/AlarmSchedulerTest.ts","../../src/calendar-app/calendar/view/CalendarAgendaView.ts","../tests/calendar/CalendarAgendaViewTest.ts","../tests/support/FaqModelTest.ts","../../src/mail-app/settings/emaildomain/EnterDomainPage.ts","../../src/mail-app/settings/DomainDnsStatus.ts","../tests/gui/base/WizardDialogNTest.ts","../tests/calendar/eventeditor/CalendarEventWhenModelTest.ts","../tests/calendar/eventeditor/CalendarEventWhoModelTest.ts","../tests/calendar/eventeditor/CalendarEventAlarmModelTest.ts","../tests/calendar/eventeditor/CalendarEventModelTest.ts","../tests/gui/ColorTest.ts","../tests/mail/ResolvableRecipientMock.ts","../tests/mail/SendMailModelTest.ts","../tests/misc/OutOfOfficeNotificationTest.ts","../tests/subscription/priceTestUtils.ts","../tests/subscription/PriceUtilsTest.ts","../tests/subscription/SubscriptionUtilsTest.ts","../tests/subscription/CreditCardViewModelTest.ts","../tests/mail/TemplateSearchFilterTest.ts","../tests/mail/KnowledgeBaseSearchFilterTest.ts","../tests/api/worker/facades/MailExportTokenFacadeTest.ts","../tests/mail/export/ExporterTest.ts","../tests/mail/export/BundlerTest.ts","../tests/api/common/utils/FileUtilsTest.ts","../tests/gui/GuiUtilsTest.ts","../../src/common/misc/parsing/CsvParser.ts","../tests/misc/ParserTest.ts","../tests/misc/news/items/ReferralLinkNewsTest.ts","../tests/settings/TemplateEditorModelTest.ts","../tests/settings/mailaddress/MailAddressTableModelTest.ts","../../src/common/settings/UserDataExporter.ts","../tests/settings/UserDataExportTest.ts","../../src/common/settings/login/secondfactor/SecondFactorEditModel.ts","../tests/settings/login/secondfactor/SecondFactorEditModelTest.ts","../tests/misc/SchedulerTest.ts","../tests/misc/parsing/MailAddressParserTest.ts","../tests/misc/FormatValidatorTest.ts","../../src/common/settings/whitelabel/CustomColorsEditorViewModel.ts","../tests/settings/whitelabel/CustomColorEditorTest.ts","../tests/login/LoginViewModelTest.ts","../tests/misc/credentials/CredentialsProviderTest.ts","../tests/misc/DeviceConfigTest.ts","../../src/calendar-app/calendar/view/EventDragHandler.ts","../tests/calendar/EventDragHandlerTest.ts","../tests/calendar/CalendarGuiUtilsTest.ts","../tests/calendar/CalendarViewModelTest.ts","../tests/calendar/eventeditor/CalendarNotificationModelTest.ts","../tests/misc/webauthn/WebauthnClientTest.ts","../tests/translations/TranslationKeysTest.ts","../tests/misc/UsageTestModelTest.ts","../tests/misc/NewsModelTest.ts","../tests/file/FileControllerTest.ts","../tests/api/worker/rest/CustomCacheHandlerTest.ts","../tests/misc/RecipientsModelTest.ts","../tests/api/worker/facades/MailAddressFacadeTest.ts","../tests/mail/model/FolderSystemTest.ts","../tests/mail/model/MailListModelTest.ts","../tests/gui/ScopedRouterTest.ts","../../node_modules/ospec/ospec.js","../tests/contacts/ContactListEditorTest.ts","../tests/login/PostLoginUtilsTest.ts","../tests/api/worker/facades/KyberFacadeTest.ts","../../node_modules/pako/dist/pako.esm.mjs","../tests/api/worker/pdf/DeflaterTest.ts","../tests/api/worker/pdf/PdfWriterTest.ts","../tests/api/worker/pdf/PdfObjectTest.ts","../tests/api/worker/pdf/PdfDocumentTest.ts","../tests/api/worker/invoicegen/invoiceTestUtils.ts","../tests/api/worker/invoicegen/PdfInvoiceGeneratorTest.ts","../tests/api/worker/invoicegen/XRechnungInvoiceGeneratorTest.ts","../tests/subscription/SignupFormTest.ts","../tests/api/worker/facades/ContactFacadeTest.ts","../tests/api/worker/facades/KeyRotationFacadeTest.ts","../tests/mail/view/ConversationViewModelTest.ts","../tests/mail/view/MailViewerViewModelTest.ts","../tests/api/worker/facades/KeyCacheTest.ts","../tests/misc/InAppRatingUtilsTest.ts","../tests/native/main/MailExportControllerTest.ts","../tests/api/worker/facades/MailExportFacadeTest.ts","../tests/Suite.ts"],"sourcesContent":["import o from \"@tutao/otest\"\nimport { ListModel, ListModelConfig } from \"../../../src/common/misc/ListModel.js\"\nimport { getElementId, sortCompareById, timestampToGeneratedId } from \"../../../src/common/api/common/utils/EntityUtils.js\"\nimport { defer, DeferredObject } from \"@tutao/tutanota-utils\"\nimport { KnowledgeBaseEntry, KnowledgeBaseEntryTypeRef } from \"../../../src/common/api/entities/tutanota/TypeRefs.js\"\nimport { ListFetchResult } from \"../../../src/common/gui/base/ListUtils.js\"\nimport { ListLoadingState } from \"../../../src/common/gui/base/List.js\"\nimport { ConnectionError } from \"../../../src/common/api/common/error/RestError.js\"\nimport { createTestEntity } from \"../TestUtils.js\"\nimport { ListAutoSelectBehavior } from \"../../../src/common/misc/DeviceConfig.js\"\n\no.spec(\"ListModel\", function () {\n\tconst listId = \"listId\"\n\tlet fetchDefer: DeferredObject<ListFetchResult<KnowledgeBaseEntry>>\n\tlet listModel: ListModel<KnowledgeBaseEntry, Id>\n\tconst defaultListConfig: ListModelConfig<KnowledgeBaseEntry, Id> = {\n\t\tfetch: () => fetchDefer.promise,\n\t\tsortCompare: sortCompareById,\n\t\tautoSelectBehavior: () => ListAutoSelectBehavior.OLDER,\n\t\tgetItemId: getElementId,\n\t\tisSameId: (id1: string, id2: string) => id1 === id2,\n\t}\n\n\tconst itemA = createTestEntity(KnowledgeBaseEntryTypeRef, {\n\t\t_id: [listId, \"a\"],\n\t\ttitle: \"a\",\n\t})\n\tconst itemB = createTestEntity(KnowledgeBaseEntryTypeRef, {\n\t\t_id: [listId, \"b\"],\n\t\ttitle: \"b\",\n\t})\n\tconst itemC = createTestEntity(KnowledgeBaseEntryTypeRef, {\n\t\t_id: [listId, \"c\"],\n\t\ttitle: \"c\",\n\t})\n\tconst itemD = createTestEntity(KnowledgeBaseEntryTypeRef, {\n\t\t_id: [listId, \"d\"],\n\t\ttitle: \"d\",\n\t})\n\n\tconst items = [itemA, itemB, itemC, itemD]\n\n\tasync function setItems(items: KnowledgeBaseEntry[]) {\n\t\tfetchDefer.resolve({ items, complete: true })\n\t\tawait listModel.loadInitial()\n\t}\n\n\to.beforeEach(function () {\n\t\tfetchDefer = defer<ListFetchResult<KnowledgeBaseEntry>>()\n\t\tlistModel = new ListModel<KnowledgeBaseEntry, Id>(defaultListConfig)\n\t})\n\n\to.spec(\"loading states\", function () {\n\t\to(\"when loading initially it will set state to loading\", async function () {\n\t\t\tconst loading = listModel.loadInitial()\n\t\t\to(listModel.state.loadingStatus).equals(ListLoadingState.Loading)\n\t\t\tfetchDefer.resolve({ items: [], complete: false })\n\t\t\tawait loading\n\t\t\to(listModel.state.loadingStatus).equals(ListLoadingState.Idle)\n\t\t})\n\n\t\to(\"when connection error occurs it wil set state to connectionLost\", async function () {\n\t\t\tconst loading = listModel.loadInitial()\n\t\t\to(listModel.state.loadingStatus).equals(ListLoadingState.Loading)\n\t\t\tfetchDefer.reject(new ConnectionError(\"oops\"))\n\t\t\tawait loading\n\t\t\to(listModel.state.loadingStatus).equals(ListLoadingState.ConnectionLost)\n\t\t})\n\n\t\to(\"when complete it wil set state to done\", async function () {\n\t\t\tconst loading = listModel.loadInitial()\n\t\t\to(listModel.state.loadingStatus).equals(ListLoadingState.Loading)\n\t\t\tfetchDefer.resolve({ items: [], complete: true })\n\t\t\tawait loading\n\t\t\to(listModel.state.loadingStatus).equals(ListLoadingState.Done)\n\t\t})\n\n\t\to(\"when loadMore is called it will set state to loading and will fetch more\", async function () {\n\t\t\tconst initialLoading = listModel.loadInitial()\n\t\t\tfetchDefer.resolve({ items: [], complete: false })\n\t\t\tawait initialLoading\n\n\t\t\tfetchDefer = defer()\n\t\t\tconst moreLoading = listModel.loadMore()\n\t\t\to(listModel.state.loadingStatus).equals(ListLoadingState.Loading)\n\n\t\t\tconst knowledgeBaseEntry = createTestEntity(KnowledgeBaseEntryTypeRef, {\n\t\t\t\t_id: [listId, timestampToGeneratedId(10)],\n\t\t\t})\n\t\t\tfetchDefer.resolve({\n\t\t\t\titems: [knowledgeBaseEntry],\n\t\t\t\tcomplete: true,\n\t\t\t})\n\t\t\tawait moreLoading\n\t\t\to(listModel.state.loadingStatus).equals(ListLoadingState.Done)\n\t\t\to(listModel.state.items).deepEquals([knowledgeBaseEntry])\n\t\t})\n\n\t\to(\"when called with retryLoading after connection error it will set state to loading and will load again\", async function () {\n\t\t\tconst initialLoading = listModel.loadInitial()\n\t\t\tfetchDefer.reject(new ConnectionError(\"oops\"))\n\t\t\tawait initialLoading\n\n\t\t\tfetchDefer = defer()\n\t\t\tconst retryLoading = listModel.retryLoading()\n\t\t\to(listModel.state.loadingStatus).equals(ListLoadingState.Loading)\n\n\t\t\tfetchDefer.resolve({ items: [], complete: true })\n\t\t\tawait retryLoading\n\n\t\t\to(listModel.state.loadingStatus).equals(ListLoadingState.Done)\n\t\t})\n\t})\n\n\tfunction getSortedSelection() {\n\t\treturn listModel.getSelectedAsArray().sort(sortCompareById)\n\t}\n\n\to.spec(\"selection controls\", function () {\n\t\to.spec(\"single\", function () {\n\t\t\to(\"when selectNext and the list is empty nothing happens\", async function () {\n\t\t\t\tawait setItems([])\n\t\t\t\tlistModel.selectNext(false)\n\t\t\t\to(getSortedSelection()).deepEquals([])\n\t\t\t\to(listModel.state.inMultiselect).equals(false)\n\t\t\t\to(listModel.state.activeIndex).equals(null)\n\t\t\t})\n\n\t\t\to(\"when selectNext and nothing is selected it select the first item\", async function () {\n\t\t\t\tawait setItems(items)\n\t\t\t\tlistModel.selectNext(false)\n\t\t\t\to(getSortedSelection()).deepEquals([itemA])\n\t\t\t\to(listModel.state.inMultiselect).equals(false)\n\t\t\t\to(listModel.state.activeIndex).equals(0)\n\t\t\t})\n\n\t\t\to(\"when selectNext selects next item\", async function () {\n\t\t\t\tawait setItems(items)\n\t\t\t\tlistModel.onSingleSelection(itemB)\n\t\t\t\tlistModel.selectNext(false)\n\t\t\t\to(getSortedSelection()).deepEquals([itemC])\n\t\t\t\to(listModel.state.inMultiselect).equals(false)\n\t\t\t\to(listModel.state.activeIndex).equals(2)\n\t\t\t})\n\n\t\t\to(\"when selectNext and last item is selected it stays\", async function () {\n\t\t\t\tawait setItems(items)\n\t\t\t\tlistModel.onSingleSelection(itemD)\n\t\t\t\tlistModel.selectNext(false)\n\t\t\t\to(getSortedSelection()).deepEquals([itemD])\n\t\t\t\to(listModel.state.inMultiselect).equals(false)\n\t\t\t\to(listModel.state.activeIndex).equals(3)\n\t\t\t})\n\n\t\t\to(\"when selectPrevious and nothing is selected it select the first item\", async function () {\n\t\t\t\tawait setItems(items)\n\t\t\t\tlistModel.selectPrevious(false)\n\t\t\t\to(getSortedSelection()).deepEquals([itemA])\n\t\t\t\to(listModel.state.inMultiselect).equals(false)\n\t\t\t\to(listModel.state.activeIndex).equals(0)\n\t\t\t})\n\n\t\t\to(\"when selectPrevious and the first item is selected it stays\", async function () {\n\t\t\t\tawait setItems(items)\n\t\t\t\tlistModel.onSingleSelection(itemA)\n\t\t\t\tlistModel.selectPrevious(false)\n\t\t\t\to(getSortedSelection()).deepEquals([itemA])\n\t\t\t\to(listModel.state.inMultiselect).equals(false)\n\t\t\t\to(listModel.state.activeIndex).equals(0)\n\t\t\t})\n\t\t})\n\n\t\to.spec(\"selectPrevious/selectNext\", function () {\n\t\t\to(\"when selectNext and the list is empty nothing happens\", async function () {\n\t\t\t\tawait setItems([])\n\t\t\t\tlistModel.selectNext(true)\n\t\t\t\to(getSortedSelection()).deepEquals([])\n\t\t\t\to(listModel.state.inMultiselect).equals(false)\n\t\t\t\to(listModel.state.activeIndex).equals(null)\n\t\t\t})\n\n\t\t\to(\"when selectNext and nothing is selected it select the first item\", async function () {\n\t\t\t\tawait setItems(items)\n\t\t\t\tlistModel.selectNext(true)\n\t\t\t\to(getSortedSelection()).deepEquals([itemA])\n\t\t\t\to(listModel.state.inMultiselect).equals(true)\n\t\t\t\to(listModel.state.activeIndex).equals(0)\n\t\t\t})\n\n\t\t\to(\"when one item was selected selectNext adds to selection\", async function () {\n\t\t\t\tawait setItems(items)\n\t\t\t\tlistModel.onSingleSelection(itemB)\n\t\t\t\t// start state:\n\t\t\t\t//\n\t\t\t\t// A\n\t\t\t\t// B + selection start\n\t\t\t\t// C\n\t\t\t\t// D\n\t\t\t\t//\n\t\t\t\t// end state:\n\t\t\t\t//\n\t\t\t\t// A\n\t\t\t\t// B + selection start\n\t\t\t\t// C +\n\t\t\t\t// D\n\n\t\t\t\tlistModel.selectNext(true)\n\t\t\t\to(getSortedSelection()).deepEquals([itemB, itemC])\n\t\t\t\to(listModel.state.inMultiselect).equals(true)\n\t\t\t\to(listModel.state.activeIndex).equals(2)\n\t\t\t})\n\n\t\t\to(\"when multiple items were selected selectNext below the selection start adds to selection\", async function () {\n\t\t\t\tawait setItems(items)\n\t\t\t\tlistModel.onSingleSelection(itemB)\n\t\t\t\tlistModel.selectNext(true)\n\t\t\t\t// start state:\n\t\t\t\t//\n\t\t\t\t// A\n\t\t\t\t// B + selection start\n\t\t\t\t// C +\n\t\t\t\t// D\n\t\t\t\t//\n\t\t\t\t// end state:\n\t\t\t\t//\n\t\t\t\t// A\n\t\t\t\t// B + selection start\n\t\t\t\t// C +\n\t\t\t\t// D +\n\n\t\t\t\tlistModel.selectNext(true)\n\t\t\t\to(getSortedSelection()).deepEquals([itemB, itemC, itemD])\n\t\t\t\to(listModel.state.inMultiselect).equals(true)\n\t\t\t\to(listModel.state.activeIndex).equals(3)\n\t\t\t})\n\n\t\t\to(\"when multiple items were selected selectNext above the selection start removes from selection\", async function () {\n\t\t\t\tawait setItems(items)\n\t\t\t\tlistModel.onSingleSelection(itemB)\n\t\t\t\tlistModel.selectPrevious(true)\n\t\t\t\t// start state:\n\t\t\t\t//\n\t\t\t\t// A +\n\t\t\t\t// B + selection start\n\t\t\t\t// C\n\t\t\t\t// D\n\t\t\t\t//\n\t\t\t\t// end state:\n\t\t\t\t//\n\t\t\t\t// A\n\t\t\t\t// B + selection start\n\t\t\t\t// C\n\t\t\t\t// D\n\n\t\t\t\tlistModel.selectNext(true)\n\t\t\t\to(getSortedSelection()).deepEquals([itemB])\n\t\t\t\to(listModel.state.inMultiselect).equals(true)\n\t\t\t\to(listModel.state.activeIndex).equals(1)\n\t\t\t})\n\n\t\t\to(\"when item below selection start is selected selectPrevious adds previous item to selection \", async function () {\n\t\t\t\tawait setItems(items)\n\t\t\t\tlistModel.onSingleSelection(itemB)\n\t\t\t\t// start state:\n\t\t\t\t//\n\t\t\t\t// A\n\t\t\t\t// B + selection start\n\t\t\t\t// C\n\t\t\t\t// D\n\t\t\t\t//\n\t\t\t\t// end state:\n\t\t\t\t//\n\t\t\t\t// A +\n\t\t\t\t// B + selection start\n\t\t\t\t// C\n\t\t\t\t// D\n\t\t\t\tlistModel.selectPrevious(true)\n\t\t\t\to(getSortedSelection()).deepEquals([itemA, itemB])\n\t\t\t\to(listModel.state.inMultiselect).equals(true)\n\t\t\t\to(listModel.state.activeIndex).equals(0)\n\t\t\t})\n\n\t\t\to(\"when multiple items above selection start are selected selectPrevious adds previous item to selection \", async function () {\n\t\t\t\tawait setItems(items)\n\t\t\t\tlistModel.onSingleSelection(itemC)\n\t\t\t\tlistModel.selectPrevious(true)\n\t\t\t\t// start state:\n\t\t\t\t//\n\t\t\t\t// A\n\t\t\t\t// B +\n\t\t\t\t// C + selection start\n\t\t\t\t// D\n\t\t\t\t//\n\t\t\t\t// end state:\n\t\t\t\t//\n\t\t\t\t// A +\n\t\t\t\t// B +\n\t\t\t\t// C + selection start\n\t\t\t\t// D\n\t\t\t\tlistModel.selectPrevious(true)\n\t\t\t\to(getSortedSelection()).deepEquals([itemA, itemB, itemC])\n\t\t\t\to(listModel.state.inMultiselect).equals(true)\n\t\t\t\to(listModel.state.activeIndex).equals(0)\n\t\t\t})\n\n\t\t\to(\"when multiple items were selected selectPrevious above the selection start removes from selection\", async function () {\n\t\t\t\tawait setItems(items)\n\t\t\t\tlistModel.onSingleSelection(itemB)\n\t\t\t\tlistModel.selectNext(true)\n\t\t\t\t// start state:\n\t\t\t\t//\n\t\t\t\t// A\n\t\t\t\t// B + selection start\n\t\t\t\t// C +\n\t\t\t\t// D\n\t\t\t\t//\n\t\t\t\t// end state:\n\t\t\t\t//\n\t\t\t\t// A\n\t\t\t\t// B + selection start\n\t\t\t\t// C\n\t\t\t\t// D\n\n\t\t\t\tlistModel.selectPrevious(true)\n\t\t\t\to(getSortedSelection()).deepEquals([itemB])\n\t\t\t\to(listModel.state.inMultiselect).equals(true)\n\t\t\t\to(listModel.state.activeIndex).equals(1)\n\t\t\t})\n\n\t\t\to(\"when selectNext and last item is selected it stays\", async function () {\n\t\t\t\tawait setItems(items)\n\t\t\t\tlistModel.onSingleSelection(itemD)\n\t\t\t\tlistModel.selectNext(true)\n\t\t\t\to(getSortedSelection()).deepEquals([itemD])\n\t\t\t\to(listModel.state.inMultiselect).equals(true)\n\t\t\t\to(listModel.state.activeIndex).equals(3)\n\t\t\t})\n\n\t\t\to(\"when selectPrevious and nothing is selected it select the first item\", async function () {\n\t\t\t\tawait setItems(items)\n\t\t\t\tlistModel.selectPrevious(true)\n\t\t\t\to(getSortedSelection()).deepEquals([itemA])\n\t\t\t\to(listModel.state.inMultiselect).equals(true)\n\t\t\t\to(listModel.state.activeIndex).equals(0)\n\t\t\t})\n\n\t\t\to(\"when selectPrevious and the first item is selected it stays\", async function () {\n\t\t\t\tawait setItems(items)\n\t\t\t\tlistModel.onSingleSelection(itemA)\n\t\t\t\tlistModel.selectPrevious(true)\n\t\t\t\to(getSortedSelection()).deepEquals([itemA])\n\t\t\t\to(listModel.state.inMultiselect).equals(true)\n\t\t\t\to(listModel.state.activeIndex).equals(0)\n\t\t\t})\n\n\t\t\to(\n\t\t\t\t\"when multiple items are selected and the active item is above the anchor and there's a gap selectPrevious will add item above the active one\",\n\t\t\t\tasync function () {\n\t\t\t\t\tawait setItems(items)\n\t\t\t\t\tlistModel.onSingleSelection(itemD)\n\t\t\t\t\tlistModel.onSingleInclusiveSelection(itemA)\n\t\t\t\t\tlistModel.onSingleInclusiveSelection(itemC)\n\t\t\t\t\t// start state:\n\t\t\t\t\t//\n\t\t\t\t\t// A +\n\t\t\t\t\t// B\n\t\t\t\t\t// C + active item\n\t\t\t\t\t// D + selection start\n\t\t\t\t\t//\n\t\t\t\t\t// end state:\n\t\t\t\t\t//\n\t\t\t\t\t// A +\n\t\t\t\t\t// B +\n\t\t\t\t\t// C + active item\n\t\t\t\t\t// D + selection start\n\t\t\t\t\tlistModel.selectPrevious(true)\n\t\t\t\t\to(getSortedSelection()).deepEquals([itemA, itemB, itemC, itemD])\n\t\t\t\t\to(listModel.state.inMultiselect).equals(true)\n\t\t\t\t\to(listModel.state.activeIndex).equals(1)\n\t\t\t\t},\n\t\t\t)\n\n\t\t\to(\n\t\t\t\t\"when multiple items are selected and the active item is below the anchor and there's a gap select will add item above the active one\",\n\t\t\t\tasync function () {\n\t\t\t\t\tawait setItems(items)\n\t\t\t\t\tlistModel.onSingleSelection(itemA)\n\t\t\t\t\tlistModel.onSingleInclusiveSelection(itemD)\n\t\t\t\t\tlistModel.onSingleInclusiveSelection(itemB)\n\t\t\t\t\t// start state:\n\t\t\t\t\t//\n\t\t\t\t\t// A + selection start\n\t\t\t\t\t// B + active item\n\t\t\t\t\t// C\n\t\t\t\t\t// D +\n\t\t\t\t\t//\n\t\t\t\t\t// end state:\n\t\t\t\t\t//\n\t\t\t\t\t// A + selection start\n\t\t\t\t\t// B + active item\n\t\t\t\t\t// C +\n\t\t\t\t\t// D +\n\t\t\t\t\tlistModel.selectNext(true)\n\t\t\t\t\to(getSortedSelection()).deepEquals([itemA, itemB, itemC, itemD])\n\t\t\t\t\to(listModel.state.inMultiselect).equals(true)\n\t\t\t\t\to(listModel.state.activeIndex).equals(2)\n\t\t\t\t},\n\t\t\t)\n\n\t\t\to(\"when the active item is filtered out selectNext multiselect will still select next item relative to it\", async function () {\n\t\t\t\tawait setItems(items)\n\t\t\t\tlistModel.onSingleInclusiveSelection(itemB)\n\t\t\t\tlistModel.setFilter((item) => item !== itemB)\n\t\t\t\t// start state:\n\t\t\t\t//\n\t\t\t\t// A\n\t\t\t\t// (B) active, gone\n\t\t\t\t// C\n\t\t\t\t// D\n\t\t\t\t//\n\t\t\t\t// end state:\n\t\t\t\t//\n\t\t\t\t// A\n\t\t\t\t// C + active\n\t\t\t\t// D\n\t\t\t\tlistModel.selectNext(true)\n\t\t\t\to(getSortedSelection()).deepEquals([itemC])\n\t\t\t\to(listModel.state.inMultiselect).equals(true)\n\t\t\t\to(listModel.state.activeIndex).equals(1)\n\t\t\t})\n\n\t\t\to(\"when the active item is filtered out selectPrevious multiselect will still select previous item relative to it\", async function () {\n\t\t\t\tawait setItems(items)\n\t\t\t\tlistModel.onSingleInclusiveSelection(itemB)\n\t\t\t\tlistModel.setFilter((item) => item !== itemB)\n\t\t\t\t// start state:\n\t\t\t\t//\n\t\t\t\t// A\n\t\t\t\t// (B) active, gone\n\t\t\t\t// C\n\t\t\t\t// D\n\t\t\t\t//\n\t\t\t\t// end state:\n\t\t\t\t//\n\t\t\t\t// A + active\n\t\t\t\t// C\n\t\t\t\t// D\n\t\t\t\tlistModel.selectPrevious(true)\n\t\t\t\to(getSortedSelection()).deepEquals([itemA])\n\t\t\t\to(listModel.state.inMultiselect).equals(true)\n\t\t\t\to(listModel.state.activeIndex).equals(0)\n\t\t\t})\n\t\t})\n\n\t\to(\"selectRangeTowards towards item below\", async function () {\n\t\t\tawait setItems(items)\n\t\t\tlistModel.onSingleSelection(itemA)\n\t\t\t// start state:\n\t\t\t//\n\t\t\t// A +\n\t\t\t// B\n\t\t\t// C\n\t\t\t// D\n\t\t\t//\n\t\t\t// end state:\n\t\t\t//\n\t\t\t// A +\n\t\t\t// B +\n\t\t\t// C +\n\t\t\t// D\n\t\t\tlistModel.selectRangeTowards(itemC)\n\t\t\to(getSortedSelection()).deepEquals([itemA, itemB, itemC])\n\t\t\to(listModel.state.inMultiselect).equals(true)\n\t\t\to(listModel.state.activeIndex).equals(2)\n\t\t})\n\n\t\to(\"selectRangeTowards towards item above\", async function () {\n\t\t\tawait setItems(items)\n\t\t\tlistModel.onSingleSelection(itemC)\n\t\t\t// start state:\n\t\t\t//\n\t\t\t// A\n\t\t\t// B\n\t\t\t// C +\n\t\t\t// D\n\t\t\t//\n\t\t\t// end state:\n\t\t\t//\n\t\t\t// A +\n\t\t\t// B +\n\t\t\t// C +\n\t\t\t// D\n\t\t\tlistModel.selectRangeTowards(itemA)\n\t\t\to(getSortedSelection()).deepEquals([itemA, itemB, itemC])\n\t\t\to(listModel.state.inMultiselect).equals(true)\n\t\t\to(listModel.state.activeIndex).equals(0)\n\t\t})\n\n\t\to(\"selectRangeTowards towards item below with gap\", async function () {\n\t\t\tawait setItems(items)\n\t\t\tlistModel.onSingleInclusiveSelection(itemC)\n\t\t\tlistModel.onSingleInclusiveSelection(itemA)\n\t\t\t// start state:\n\t\t\t//\n\t\t\t// A +\n\t\t\t// B\n\t\t\t// C +\n\t\t\t// D\n\t\t\t//\n\t\t\t// end state:\n\t\t\t//\n\t\t\t// A +\n\t\t\t// B\n\t\t\t// C +\n\t\t\t// D +\n\t\t\tlistModel.selectRangeTowards(itemD)\n\t\t\to(getSortedSelection()).deepEquals([itemA, itemC, itemD])\n\t\t\to(listModel.state.inMultiselect).equals(true)\n\t\t\to(listModel.state.activeIndex).equals(3)\n\t\t})\n\n\t\to(\"selectRangeTowards towards item above with gap\", async function () {\n\t\t\tawait setItems(items)\n\t\t\tlistModel.onSingleInclusiveSelection(itemB)\n\t\t\tlistModel.onSingleInclusiveSelection(itemD)\n\t\t\t// start state:\n\t\t\t//\n\t\t\t// A\n\t\t\t// B + selection start\n\t\t\t// C\n\t\t\t// D +\n\t\t\t//\n\t\t\t// end state:\n\t\t\t//\n\t\t\t// A +\n\t\t\t// B +\n\t\t\t// C\n\t\t\t// D +\n\t\t\tlistModel.selectRangeTowards(itemA)\n\t\t\to(getSortedSelection()).deepEquals([itemA, itemB, itemD])\n\t\t\to(listModel.state.inMultiselect).equals(true)\n\t\t\to(listModel.state.activeIndex).equals(0)\n\t\t})\n\n\t\to(\"onSingleSelection reset previous selection\", async function () {\n\t\t\tawait setItems(items)\n\t\t\tlistModel.onSingleInclusiveSelection(itemA)\n\t\t\tlistModel.onSingleSelection(itemC)\n\t\t\to(getSortedSelection()).deepEquals([itemC])\n\t\t\to(listModel.state.inMultiselect).equals(false)\n\t\t\to(listModel.state.activeIndex).equals(2)\n\t\t})\n\n\t\to.spec(\"onSingleExclusiveSelection\", function () {\n\t\t\to(\"when not in multiselect it will only select the newly selected item\", async function () {\n\t\t\t\tawait setItems(items)\n\t\t\t\tlistModel.onSingleSelection(itemA)\n\t\t\t\tlistModel.onSingleExclusiveSelection(itemC)\n\t\t\t\to(getSortedSelection()).deepEquals([itemC])\n\t\t\t\to(listModel.state.inMultiselect).equals(true)\n\t\t\t\to(listModel.state.activeIndex).equals(2)\n\t\t\t})\n\n\t\t\to(\"when in multiselect it will add newly selected item to the selection\", async function () {\n\t\t\t\tawait setItems(items)\n\t\t\t\tlistModel.onSingleExclusiveSelection(itemA)\n\t\t\t\tlistModel.onSingleExclusiveSelection(itemC)\n\t\t\t\to(getSortedSelection()).deepEquals([itemA, itemC])\n\t\t\t\to(listModel.state.inMultiselect).equals(true)\n\t\t\t\to(listModel.state.activeIndex).equals(2)\n\t\t\t})\n\t\t})\n\n\t\to.spec(\"onSingleInclusiveSelection\", function () {\n\t\t\to(\"when not in multiselect it will select both previous single selection and the newly selected item\", async function () {\n\t\t\t\tawait setItems(items)\n\t\t\t\tlistModel.onSingleSelection(itemA)\n\t\t\t\tlistModel.onSingleInclusiveSelection(itemC)\n\t\t\t\to(getSortedSelection()).deepEquals([itemA, itemC])\n\t\t\t\to(listModel.state.inMultiselect).equals(true)\n\t\t\t\to(listModel.state.activeIndex).equals(2)\n\t\t\t})\n\n\t\t\to(\n\t\t\t\t\"when not in multiselect it will not select both previous single selection and the newly selected item if in one column layout\",\n\t\t\t\tasync function () {\n\t\t\t\t\tawait setItems(items)\n\t\t\t\t\tlistModel.onSingleSelection(itemA)\n\t\t\t\t\tlistModel.onSingleInclusiveSelection(itemC, true)\n\t\t\t\t\to(getSortedSelection()).deepEquals([itemC])\n\t\t\t\t\to(listModel.state.inMultiselect).equals(true)\n\t\t\t\t},\n\t\t\t)\n\n\t\t\to(\"when in multiselect it will add newly selected item to the selection\", async function () {\n\t\t\t\tawait setItems(items)\n\t\t\t\tlistModel.onSingleInclusiveSelection(itemA)\n\t\t\t\tlistModel.onSingleInclusiveSelection(itemC)\n\t\t\t\to(getSortedSelection()).deepEquals([itemA, itemC])\n\t\t\t\to(listModel.state.inMultiselect).equals(true)\n\t\t\t\to(listModel.state.activeIndex).equals(2)\n\t\t\t})\n\n\t\t\to(\"when entering multiselect on the same item as previously selected item, the item is selected\", async function () {\n\t\t\t\tawait setItems(items)\n\t\t\t\tlistModel.onSingleSelection(itemB)\n\t\t\t\tlistModel.onSingleInclusiveSelection(itemB)\n\t\t\t\to(listModel.getSelectedAsArray()).deepEquals([itemB])\n\t\t\t\to(listModel.state.inMultiselect).equals(true)\n\t\t\t})\n\n\t\t\to(\"when entering multiselect when having a single item selected, both items are selected\", async function () {\n\t\t\t\tawait setItems(items)\n\t\t\t\tlistModel.onSingleSelection(itemB)\n\t\t\t\tlistModel.onSingleInclusiveSelection(itemD)\n\t\t\t\to(getSortedSelection()).deepEquals([itemB, itemD])\n\t\t\t\to(listModel.state.inMultiselect).equals(true)\n\t\t\t})\n\t\t})\n\t})\n})\n","import o from \"@tutao/otest\"\nimport { getElementId, getListId, sortCompareById } from \"../../../src/common/api/common/utils/EntityUtils.js\"\nimport { defer, DeferredObject } from \"@tutao/tutanota-utils\"\nimport { KnowledgeBaseEntry, KnowledgeBaseEntryTypeRef } from \"../../../src/common/api/entities/tutanota/TypeRefs.js\"\nimport { ListFetchResult } from \"../../../src/common/gui/base/ListUtils.js\"\nimport { OperationType } from \"../../../src/common/api/common/TutanotaConstants.js\"\nimport { createTestEntity } from \"../TestUtils.js\"\nimport { ListAutoSelectBehavior } from \"../../../src/common/misc/DeviceConfig.js\"\nimport { ListElementListModel, ListElementListModelConfig } from \"../../../src/common/misc/ListElementListModel\"\nimport { ConnectionError } from \"../../../src/common/api/common/error/RestError\"\n\no.spec(\"ListElementListModel\", function () {\n\tconst listId = \"listId\"\n\tlet fetchDefer: DeferredObject<ListFetchResult<KnowledgeBaseEntry>>\n\tlet listModel: ListElementListModel<KnowledgeBaseEntry>\n\tconst defaultListConfig: ListElementListModelConfig<KnowledgeBaseEntry> = {\n\t\tfetch: () => fetchDefer.promise,\n\t\tsortCompare: sortCompareById,\n\t\tloadSingle: () => {\n\t\t\tthrow new Error(\"noop\")\n\t\t},\n\t\tautoSelectBehavior: () => ListAutoSelectBehavior.OLDER,\n\t}\n\n\tconst itemA = createTestEntity(KnowledgeBaseEntryTypeRef, {\n\t\t_id: [listId, \"a\"],\n\t\ttitle: \"a\",\n\t})\n\tconst itemB = createTestEntity(KnowledgeBaseEntryTypeRef, {\n\t\t_id: [listId, \"b\"],\n\t\ttitle: \"b\",\n\t})\n\tconst itemC = createTestEntity(KnowledgeBaseEntryTypeRef, {\n\t\t_id: [listId, \"c\"],\n\t\ttitle: \"c\",\n\t})\n\tconst itemD = createTestEntity(KnowledgeBaseEntryTypeRef, {\n\t\t_id: [listId, \"d\"],\n\t\ttitle: \"d\",\n\t})\n\n\tconst items = [itemA, itemB, itemC, itemD]\n\n\tasync function setItems(items: KnowledgeBaseEntry[]) {\n\t\tfetchDefer.resolve({ items, complete: true })\n\t\tawait listModel.loadInitial()\n\t}\n\n\to.beforeEach(function () {\n\t\tfetchDefer = defer<ListFetchResult<KnowledgeBaseEntry>>()\n\t\tlistModel = new ListElementListModel<KnowledgeBaseEntry>(defaultListConfig)\n\t})\n\n\tfunction getSortedSelection() {\n\t\treturn listModel.getSelectedAsArray().sort(sortCompareById)\n\t}\n\n\to.spec(\"selection controls\", function () {\n\t\to.spec(\"selectPrevious/selectNext\", function () {\n\t\t\to(\"when the active item is deleted selectPrevious single will still select previous item relative to it\", async function () {\n\t\t\t\tawait setItems(items)\n\t\t\t\tlistModel.onSingleInclusiveSelection(itemB)\n\t\t\t\tawait listModel.entityEventReceived(getListId(itemB), getElementId(itemB), OperationType.DELETE)\n\t\t\t\t// start state:\n\t\t\t\t//\n\t\t\t\t// A\n\t\t\t\t// (B) active, gone\n\t\t\t\t// C\n\t\t\t\t// D\n\t\t\t\t//\n\t\t\t\t// end state:\n\t\t\t\t//\n\t\t\t\t// A + active\n\t\t\t\t// C\n\t\t\t\t// D\n\t\t\t\tlistModel.selectPrevious(false)\n\t\t\t\to(getSortedSelection()).deepEquals([itemA])\n\t\t\t\to(listModel.state.inMultiselect).equals(false)\n\t\t\t\to(listModel.state.activeIndex).equals(0)\n\t\t\t})\n\n\t\t\to(\"when the active item is deleted selectPrevious multiselect will still select previous item relative to it\", async function () {\n\t\t\t\tawait setItems(items)\n\t\t\t\tlistModel.onSingleInclusiveSelection(itemB)\n\t\t\t\tawait listModel.entityEventReceived(getListId(itemB), getElementId(itemB), OperationType.DELETE)\n\t\t\t\t// start state:\n\t\t\t\t//\n\t\t\t\t// A\n\t\t\t\t// (B) active, gone\n\t\t\t\t// C\n\t\t\t\t// D\n\t\t\t\t//\n\t\t\t\t// end state:\n\t\t\t\t//\n\t\t\t\t// A + active\n\t\t\t\t// C\n\t\t\t\t// D\n\t\t\t\tlistModel.selectPrevious(true)\n\t\t\t\to(getSortedSelection()).deepEquals([itemA])\n\t\t\t\to(listModel.state.inMultiselect).equals(true)\n\t\t\t\to(listModel.state.activeIndex).equals(0)\n\t\t\t})\n\n\t\t\to(\"when the active item is deleted selectNext single will still select next item relative to it\", async function () {\n\t\t\t\tawait setItems(items)\n\t\t\t\tlistModel.onSingleInclusiveSelection(itemB)\n\t\t\t\tawait listModel.entityEventReceived(getListId(itemB), getElementId(itemB), OperationType.DELETE)\n\t\t\t\t// start state:\n\t\t\t\t//\n\t\t\t\t// A\n\t\t\t\t// (B) active, gone\n\t\t\t\t// C\n\t\t\t\t// D\n\t\t\t\t//\n\t\t\t\t// end state:\n\t\t\t\t//\n\t\t\t\t// A\n\t\t\t\t// C + active\n\t\t\t\t// D\n\t\t\t\tlistModel.selectNext(false)\n\t\t\t\to(getSortedSelection()).deepEquals([itemC])\n\t\t\t\to(listModel.state.inMultiselect).equals(false)\n\t\t\t\to(listModel.state.activeIndex).equals(1)\n\t\t\t})\n\n\t\t\to(\"when the active item is deleted selectNext multiselect will still select next item relative to it\", async function () {\n\t\t\t\tawait setItems(items)\n\t\t\t\tlistModel.onSingleInclusiveSelection(itemB)\n\t\t\t\tawait listModel.entityEventReceived(getListId(itemB), getElementId(itemB), OperationType.DELETE)\n\t\t\t\t// start state:\n\t\t\t\t//\n\t\t\t\t// A\n\t\t\t\t// (B) active, gone\n\t\t\t\t// C\n\t\t\t\t// D\n\t\t\t\t//\n\t\t\t\t// end state:\n\t\t\t\t//\n\t\t\t\t// A\n\t\t\t\t// C + active\n\t\t\t\t// D\n\t\t\t\tlistModel.selectNext(true)\n\t\t\t\to(getSortedSelection()).deepEquals([itemC])\n\t\t\t\to(listModel.state.inMultiselect).equals(true)\n\t\t\t\to(listModel.state.activeIndex).equals(1)\n\t\t\t})\n\t\t})\n\t})\n\n\to.spec(\"Removing element in list \", function () {\n\t\to(\"in single select, the active element is next entity when active element gets deleted\", async function () {\n\t\t\tawait setItems(items)\n\t\t\tlistModel.onSingleSelection(itemB)\n\t\t\tawait listModel.entityEventReceived(getListId(itemB), getElementId(itemB), OperationType.DELETE)\n\n\t\t\to(listModel.state.activeIndex).equals(1)\n\t\t})\n\n\t\to(\"in single select, the active element is not changed when a different entity is deleted\", async function () {\n\t\t\tawait setItems(items)\n\t\t\tlistModel.onSingleSelection(itemC)\n\t\t\tawait listModel.entityEventReceived(getListId(itemA), getElementId(itemA), OperationType.DELETE)\n\n\t\t\to(listModel.state.activeIndex).equals(1)\n\t\t})\n\n\t\to(\"in multiselect, next element is not selected when element is removed\", async function () {\n\t\t\tawait setItems(items)\n\t\t\tlistModel.onSingleInclusiveSelection(itemB)\n\t\t\tawait listModel.entityEventReceived(getListId(itemB), getElementId(itemB), OperationType.DELETE)\n\n\t\t\to(listModel.state.inMultiselect).equals(true)\n\t\t\to(listModel.state.activeIndex).equals(null)\n\t\t})\n\t})\n\n\to.spec(\"Updating items\", function () {\n\t\tfunction loadsElement(element: KnowledgeBaseEntry): (listId: Id, elementId: Id) => Promise<KnowledgeBaseEntry | null> {\n\t\t\treturn async (_listId: Id, elementId: Id): Promise<KnowledgeBaseEntry | null> => {\n\t\t\t\tif (elementId === getElementId(element)) {\n\t\t\t\t\treturn element\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(\"noop\")\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\to(\"update for item with id sorting updates item\", async function () {\n\t\t\tconst updatedItemD = createTestEntity(KnowledgeBaseEntryTypeRef, { ...itemD, title: \"AA\" })\n\n\t\t\tconst newConfig: ListElementListModelConfig<KnowledgeBaseEntry> = {\n\t\t\t\t...defaultListConfig,\n\t\t\t\tloadSingle: loadsElement(updatedItemD),\n\t\t\t}\n\n\t\t\tlistModel = new ListElementListModel<KnowledgeBaseEntry>(newConfig)\n\t\t\tawait setItems(items)\n\n\t\t\tawait listModel.entityEventReceived(getListId(itemD), getElementId(itemD), OperationType.UPDATE)\n\n\t\t\to(listModel.state.items).deepEquals([itemA, itemB, itemC, updatedItemD])\n\t\t})\n\n\t\to(\"update for item with custom sorting changes position\", async function () {\n\t\t\tconst updatedItemD = createTestEntity(KnowledgeBaseEntryTypeRef, { ...itemD, title: \"AA\" })\n\n\t\t\tconst newConfig: ListElementListModelConfig<KnowledgeBaseEntry> = {\n\t\t\t\t...defaultListConfig,\n\t\t\t\tloadSingle: loadsElement(updatedItemD),\n\t\t\t\tsortCompare: (e1, e2) => {\n\t\t\t\t\treturn e1.title.localeCompare(e2.title)\n\t\t\t\t},\n\t\t\t}\n\n\t\t\tlistModel = new ListElementListModel<KnowledgeBaseEntry>(newConfig)\n\t\t\tawait setItems(items)\n\n\t\t\tawait listModel.entityEventReceived(getListId(itemD), getElementId(itemD), OperationType.UPDATE)\n\n\t\t\to(listModel.state.items).deepEquals([itemA, updatedItemD, itemB, itemC])\n\t\t})\n\n\t\to(\"create loading done\", async function () {\n\t\t\tconst itemE = createTestEntity(KnowledgeBaseEntryTypeRef, {\n\t\t\t\t_id: [listId, \"e\"],\n\t\t\t\ttitle: \"e\",\n\t\t\t})\n\n\t\t\tlet somePromise: DeferredObject<ListFetchResult<KnowledgeBaseEntry>> = defer()\n\n\t\t\tconst newConfig: ListElementListModelConfig<KnowledgeBaseEntry> = {\n\t\t\t\t...defaultListConfig,\n\t\t\t\tfetch: () => {\n\t\t\t\t\treturn somePromise.promise\n\t\t\t\t},\n\t\t\t\tloadSingle: loadsElement(itemE),\n\t\t\t}\n\n\t\t\tlistModel = new ListElementListModel<KnowledgeBaseEntry>(newConfig)\n\n\t\t\tlistModel.loadInitial()\n\n\t\t\tconst received = listModel.entityEventReceived(getListId(itemE), getElementId(itemE), OperationType.CREATE)\n\t\t\tsomePromise.resolve({\n\t\t\t\titems: [],\n\t\t\t\tcomplete: true,\n\t\t\t})\n\n\t\t\tawait received\n\n\t\t\to(listModel.state.items).deepEquals([itemE])\n\t\t})\n\n\t\to(\"when receive create event while empty list and not loaded completely it will not insert the item\", async function () {\n\t\t\tconst itemE = createTestEntity(KnowledgeBaseEntryTypeRef, {\n\t\t\t\t_id: [listId, \"e\"],\n\t\t\t\ttitle: \"e\",\n\t\t\t})\n\n\t\t\tlet somePromise: DeferredObject<ListFetchResult<KnowledgeBaseEntry>> = defer()\n\n\t\t\tconst newConfig: ListElementListModelConfig<KnowledgeBaseEntry> = {\n\t\t\t\t...defaultListConfig,\n\t\t\t\tfetch: () => {\n\t\t\t\t\treturn somePromise.promise\n\t\t\t\t},\n\t\t\t\tloadSingle: loadsElement(itemE),\n\t\t\t}\n\n\t\t\tlistModel = new ListElementListModel<KnowledgeBaseEntry>(newConfig)\n\n\t\t\tlistModel.loadInitial()\n\n\t\t\tconst received = listModel.entityEventReceived(getListId(itemE), getElementId(itemE), OperationType.CREATE)\n\t\t\tsomePromise.resolve({\n\t\t\t\titems: [],\n\t\t\t\tcomplete: false,\n\t\t\t})\n\n\t\t\tawait received\n\n\t\t\to(listModel.state.items).deepEquals([])\n\t\t})\n\n\t\to(\"when receive create event while empty list and error it does not insert\", async function () {\n\t\t\tconst itemE = createTestEntity(KnowledgeBaseEntryTypeRef, {\n\t\t\t\t_id: [listId, \"e\"],\n\t\t\t\ttitle: \"e\",\n\t\t\t})\n\n\t\t\tlet somePromise: DeferredObject<ListFetchResult<KnowledgeBaseEntry>> = defer()\n\n\t\t\tconst newConfig: ListElementListModelConfig<KnowledgeBaseEntry> = {\n\t\t\t\t...defaultListConfig,\n\t\t\t\tfetch: () => {\n\t\t\t\t\treturn somePromise.promise\n\t\t\t\t},\n\t\t\t\tloadSingle: loadsElement(itemE),\n\t\t\t}\n\n\t\t\tlistModel = new ListElementListModel<KnowledgeBaseEntry>(newConfig)\n\n\t\t\tlistModel.loadInitial()\n\n\t\t\tconst received = listModel.entityEventReceived(getListId(itemE), getElementId(itemE), OperationType.CREATE)\n\t\t\tsomePromise.reject(new ConnectionError(\"test\"))\n\n\t\t\tawait received\n\n\t\t\to(listModel.state.items).deepEquals([])\n\t\t})\n\n\t\to(\"when receive create event and out of range\", async function () {\n\t\t\tconst itemE = createTestEntity(KnowledgeBaseEntryTypeRef, {\n\t\t\t\t_id: [listId, \"e\"],\n\t\t\t\ttitle: \"e\",\n\t\t\t})\n\n\t\t\tlet somePromise: DeferredObject<ListFetchResult<KnowledgeBaseEntry>> = defer()\n\n\t\t\tconst newConfig: ListElementListModelConfig<KnowledgeBaseEntry> = {\n\t\t\t\t...defaultListConfig,\n\t\t\t\tfetch: () => {\n\t\t\t\t\treturn somePromise.promise\n\t\t\t\t},\n\t\t\t\tloadSingle: loadsElement(itemE),\n\t\t\t}\n\n\t\t\tlistModel = new ListElementListModel<KnowledgeBaseEntry>(newConfig)\n\n\t\t\tlistModel.loadInitial()\n\n\t\t\tconst received = listModel.entityEventReceived(getListId(itemE), getElementId(itemE), OperationType.CREATE)\n\t\t\tsomePromise.resolve({\n\t\t\t\titems: [itemA, itemB, itemC, itemD],\n\t\t\t\tcomplete: false,\n\t\t\t})\n\n\t\t\tawait received\n\n\t\t\to(listModel.state.items).deepEquals([itemA, itemB, itemC, itemD])\n\t\t})\n\t})\n})\n","import o from \"@tutao/otest\"\nimport td, { instance, matchers, object, when } from \"testdouble\"\nimport {\n\tcreateSaltReturn,\n\tCreateSessionReturnTypeRef,\n\tGroupInfoTypeRef,\n\tGroupMembershipTypeRef,\n\tSaltReturnTypeRef,\n\tUser,\n\tUserExternalAuthInfoTypeRef,\n\tUserTypeRef,\n} from \"../../../../../src/common/api/entities/sys/TypeRefs\"\nimport { AesKey, createAuthVerifier, encryptKey, KEY_LENGTH_BYTES_AES_256, keyToBase64, sha256Hash, uint8ArrayToBitArray } from \"@tutao/tutanota-crypto\"\nimport { LoginFacade, LoginListener, ResumeSessionErrorReason } from \"../../../../../src/common/api/worker/facades/LoginFacade\"\nimport { IServiceExecutor } from \"../../../../../src/common/api/common/ServiceRequest\"\nimport { EntityClient } from \"../../../../../src/common/api/common/EntityClient\"\nimport { RestClient } from \"../../../../../src/common/api/worker/rest/RestClient\"\nimport { InstanceMapper } from \"../../../../../src/common/api/worker/crypto/InstanceMapper\"\nimport { CryptoFacade } from \"../../../../../src/common/api/worker/crypto/CryptoFacade\"\nimport { CacheStorageLateInitializer } from \"../../../../../src/common/api/worker/rest/CacheStorageProxy\"\nimport { UserFacade } from \"../../../../../src/common/api/worker/facades/UserFacade\"\nimport { ChangeKdfService, SaltService, SessionService } from \"../../../../../src/common/api/entities/sys/Services\"\nimport { Credentials } from \"../../../../../src/common/misc/credentials/Credentials\"\nimport { defer, DeferredObject, uint8ArrayToBase64 } from \"@tutao/tutanota-utils\"\nimport { AccountType, Const, DEFAULT_KDF_TYPE, KdfType } from \"../../../../../src/common/api/common/TutanotaConstants\"\nimport { AccessExpiredError, ConnectionError, NotAuthenticatedError } from \"../../../../../src/common/api/common/error/RestError\"\nimport { SessionType } from \"../../../../../src/common/api/common/SessionType\"\nimport { HttpMethod } from \"../../../../../src/common/api/common/EntityFunctions\"\nimport { ConnectMode, EventBusClient } from \"../../../../../src/common/api/worker/EventBusClient\"\nimport { TutanotaPropertiesTypeRef } from \"../../../../../src/common/api/entities/tutanota/TypeRefs\"\nimport { BlobAccessTokenFacade } from \"../../../../../src/common/api/worker/facades/BlobAccessTokenFacade.js\"\nimport { EntropyFacade } from \"../../../../../src/common/api/worker/facades/EntropyFacade.js\"\nimport { DatabaseKeyFactory } from \"../../../../../src/common/misc/credentials/DatabaseKeyFactory.js\"\nimport { Argon2idFacade } from \"../../../../../src/common/api/worker/facades/Argon2idFacade.js\"\nimport { createTestEntity } from \"../../../TestUtils.js\"\nimport { KeyRotationFacade } from \"../../../../../src/common/api/worker/facades/KeyRotationFacade.js\"\nimport { CredentialType } from \"../../../../../src/common/misc/credentials/CredentialType.js\"\nimport { encryptString } from \"../../../../../src/common/api/worker/crypto/CryptoWrapper.js\"\nimport { CacheManagementFacade } from \"../../../../../src/common/api/worker/facades/lazy/CacheManagementFacade.js\"\n\nconst { anything, argThat } = matchers\n\nconst PASSWORD_KEY = uint8ArrayToBitArray(new Uint8Array(Array(KEY_LENGTH_BYTES_AES_256).keys()))\n\n/** Verify using testdouble, but register as an ospec assertion */\nexport function verify(demonstration: any, config?: td.VerificationConfig) {\n\tfunction check(demonstration) {\n\t\ttry {\n\t\t\ttd.verify(demonstration, config)\n\t\t\treturn {\n\t\t\t\tpass: true,\n\t\t\t\tmessage: \"Successful verification\",\n\t\t\t}\n\t\t} catch (e) {\n\t\t\treturn {\n\t\t\t\tpass: false,\n\t\t\t\tmessage: e.toString(),\n\t\t\t}\n\t\t}\n\t}\n\n\to(demonstration).satisfies(check)\n}\n\nconst SALT = new Uint8Array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15])\n\nasync function makeUser(userId: Id, kdfVersion: KdfType = DEFAULT_KDF_TYPE, userPassphraseKey: AesKey = PASSWORD_KEY): Promise<User> {\n\tconst groupKey = encryptKey(userPassphraseKey, [3229306880, 2716953871, 4072167920, 3901332676])\n\n\treturn createTestEntity(UserTypeRef, {\n\t\t_id: userId,\n\t\tverifier: sha256Hash(createAuthVerifier(userPassphraseKey)),\n\t\tuserGroup: createTestEntity(GroupMembershipTypeRef, {\n\t\t\tgroup: \"groupId\",\n\t\t\tsymEncGKey: groupKey,\n\t\t\tgroupInfo: [\"groupInfoListId\", \"groupInfoElId\"],\n\t\t}),\n\t\tkdfVersion,\n\t\texternalAuthInfo: createTestEntity(UserExternalAuthInfoTypeRef, {\n\t\t\tlatestSaltHash: SALT,\n\t\t}),\n\t})\n}\n\no.spec(\"LoginFacadeTest\", function () {\n\tlet facade: LoginFacade\n\tlet serviceExecutor: IServiceExecutor\n\tlet restClientMock: RestClient\n\tlet entityClientMock: EntityClient\n\tlet loginListener: LoginListener\n\tlet instanceMapperMock: InstanceMapper\n\tlet cryptoFacadeMock: CryptoFacade\n\tlet cacheStorageInitializerMock: CacheStorageLateInitializer\n\tlet eventBusClientMock: EventBusClient\n\tlet usingOfflineStorage: boolean\n\tlet userFacade: UserFacade\n\tlet entropyFacade: EntropyFacade\n\tlet blobAccessTokenFacade: BlobAccessTokenFacade\n\tlet databaseKeyFactoryMock: DatabaseKeyFactory\n\tlet argon2idFacade: Argon2idFacade\n\tlet cacheManagmentFacadeMock: CacheManagementFacade\n\n\tconst timeRangeDays = 42\n\tconst login = \"born.slippy@tuta.io\"\n\n\to.beforeEach(function () {\n\t\tserviceExecutor = object()\n\t\twhen(serviceExecutor.get(SaltService, anything()), { ignoreExtraArgs: true }).thenResolve(\n\t\t\tcreateTestEntity(SaltReturnTypeRef, { salt: SALT, kdfVersion: DEFAULT_KDF_TYPE }),\n\t\t)\n\n\t\trestClientMock = instance(RestClient)\n\t\tentityClientMock = instance(EntityClient)\n\t\twhen(entityClientMock.loadRoot(TutanotaPropertiesTypeRef, anything())).thenResolve(createTestEntity(TutanotaPropertiesTypeRef))\n\n\t\tloginListener = object<LoginListener>()\n\t\tinstanceMapperMock = instance(InstanceMapper)\n\t\tcryptoFacadeMock = object<CryptoFacade>()\n\t\tusingOfflineStorage = false\n\t\tcacheStorageInitializerMock = object()\n\t\twhen(\n\t\t\tcacheStorageInitializerMock.initialize({\n\t\t\t\tuserId: anything(),\n\t\t\t\tdatabaseKey: anything(),\n\t\t\t\ttimeRangeDays: anything(),\n\t\t\t\tforceNewDatabase: anything(),\n\t\t\t\ttype: \"offline\",\n\t\t\t}),\n\t\t).thenDo(async () => {\n\t\t\treturn {\n\t\t\t\tisPersistent: usingOfflineStorage,\n\t\t\t\tisNewOfflineDb: false,\n\t\t\t}\n\t\t})\n\t\twhen(cacheStorageInitializerMock.initialize({ userId: anything() as Id, type: \"ephemeral\" })).thenResolve({\n\t\t\tisPersistent: false,\n\t\t\tisNewOfflineDb: false,\n\t\t})\n\t\tuserFacade = object()\n\t\tentropyFacade = object()\n\t\tdatabaseKeyFactoryMock = object()\n\t\targon2idFacade = object()\n\t\twhen(argon2idFacade.generateKeyFromPassphrase(anything(), anything())).thenResolve(PASSWORD_KEY)\n\t\tcacheManagmentFacadeMock = object()\n\n\t\tfacade = new LoginFacade(\n\t\t\trestClientMock,\n\t\t\tentityClientMock,\n\t\t\tloginListener,\n\t\t\tinstanceMapperMock,\n\t\t\tcryptoFacadeMock,\n\t\t\tinstance(KeyRotationFacade),\n\t\t\tcacheStorageInitializerMock,\n\t\t\tserviceExecutor,\n\t\t\tuserFacade,\n\t\t\tblobAccessTokenFacade,\n\t\t\tentropyFacade,\n\t\t\tdatabaseKeyFactoryMock,\n\t\t\targon2idFacade,\n\t\t\tentityClientMock,\n\t\t\tasync (error: Error) => {},\n\t\t\tasync () => cacheManagmentFacadeMock,\n\t\t)\n\n\t\teventBusClientMock = instance(EventBusClient)\n\n\t\tfacade.init(eventBusClientMock)\n\t})\n\n\to.spec(\"Creating new sessions\", function () {\n\t\to.spec(\"initializing cache storage\", function () {\n\t\t\tconst dbKey = new Uint8Array([1, 2, 3, 4, 1, 2, 3, 4])\n\t\t\tconst passphrase = \"hunter2\"\n\t\t\tconst userId = \"userId\"\n\t\t\tconst accessToken = \"accessToken\"\n\n\t\t\to.beforeEach(async function () {\n\t\t\t\twhen(serviceExecutor.post(SessionService, anything()), { ignoreExtraArgs: true }).thenResolve(\n\t\t\t\t\tcreateTestEntity(CreateSessionReturnTypeRef, { user: userId, accessToken: accessToken, challenges: [] }),\n\t\t\t\t)\n\t\t\t\twhen(entityClientMock.load(UserTypeRef, userId)).thenResolve(await makeUser(userId))\n\t\t\t})\n\n\t\t\to.test(\"When a database key is provided and session is persistent it is passed to the offline storage initializer\", async function () {\n\t\t\t\tawait facade.createSession(login, passphrase, \"client\", SessionType.Persistent, dbKey)\n\t\t\t\tverify(cacheStorageInitializerMock.initialize({ type: \"offline\", databaseKey: dbKey, userId, timeRangeDays: null, forceNewDatabase: false }))\n\t\t\t\tverify(databaseKeyFactoryMock.generateKey(), { times: 0 })\n\t\t\t})\n\t\t\to.test(\"When no database key is provided and session is persistent, a key is generated and we attempt offline db init\", async function () {\n\t\t\t\tconst databaseKey = Uint8Array.from([1, 2, 3, 4])\n\t\t\t\twhen(databaseKeyFactoryMock.generateKey()).thenResolve(databaseKey)\n\t\t\t\tawait facade.createSession(login, passphrase, \"client\", SessionType.Persistent, null)\n\t\t\t\tverify(cacheStorageInitializerMock.initialize({ type: \"offline\", userId, databaseKey, timeRangeDays: null, forceNewDatabase: true }))\n\t\t\t\tverify(databaseKeyFactoryMock.generateKey(), { times: 1 })\n\t\t\t})\n\t\t\to.test(\"When no database key is provided and session is Login, nothing is passed to the offline storage initialzier\", async function () {\n\t\t\t\tawait facade.createSession(login, passphrase, \"client\", SessionType.Login, null)\n\t\t\t\tverify(cacheStorageInitializerMock.initialize({ type: \"ephemeral\", userId }))\n\t\t\t\tverify(databaseKeyFactoryMock.generateKey(), { times: 0 })\n\t\t\t})\n\t\t\to.test(\"When no database key is provided and session is persistent, valid credentials are returned\", async () => {\n\t\t\t\tconst result = await facade.createSession(login, passphrase, \"client\", SessionType.Persistent, null)\n\t\t\t\tconst credentials = result.credentials\n\t\t\t\to(credentials.encryptedPassphraseKey).notEquals(null) // TODO: Verify the value (maybe via size?)\n\t\t\t\to(credentials.login).equals(login)\n\t\t\t\to(credentials.userId).equals(userId)\n\t\t\t\to(credentials.encryptedPassword?.length).notEquals(null) // TODO: Verify the value (maybe via size?)\n\t\t\t\to(credentials.encryptedPassword).notEquals(null)\n\t\t\t\to(credentials.type).equals(CredentialType.Internal)\n\t\t\t\to(credentials.accessToken).equals(accessToken)\n\t\t\t})\n\t\t})\n\t})\n\n\to.spec(\"Resuming existing sessions\", function () {\n\t\to.spec(\"initializing cache storage\", function () {\n\t\t\tconst dbKey = new Uint8Array([1, 2, 3, 4, 1, 2, 3, 4])\n\t\t\tconst passphrase = \"hunter2\"\n\t\t\tconst userId = \"userId\"\n\t\t\tconst accessKey = [3229306880, 2716953871, 4072167920, 3901332677]\n\t\t\tconst accessToken = \"accessToken\"\n\n\t\t\tlet credentials: Credentials\n\t\t\tlet user: User\n\n\t\t\to.beforeEach(async function () {\n\t\t\t\tuser = await makeUser(userId)\n\n\t\t\t\tcredentials = {\n\t\t\t\t\t/**\n\t\t\t\t\t * Identifier which we use for logging in.\n\t\t\t\t\t * Email address used to log in for internal users, userId for external users.\n\t\t\t\t\t * */\n\t\t\t\t\tlogin: login,\n\n\t\t\t\t\t/** Session#accessKey encrypted password. Is set when session is persisted. */\n\t\t\t\t\tencryptedPassword: uint8ArrayToBase64(encryptString(accessKey, passphrase)), // We can't call encryptString in the top level of spec because `random` isn't initialized yet\n\t\t\t\t\tencryptedPassphraseKey: null,\n\t\t\t\t\taccessToken,\n\t\t\t\t\tuserId,\n\t\t\t\t\ttype: CredentialType.Internal,\n\t\t\t\t}\n\n\t\t\t\twhen(entityClientMock.load(UserTypeRef, userId)).thenResolve(user)\n\n\t\t\t\t// The call to /sys/session/...\n\t\t\t\twhen(\n\t\t\t\t\trestClientMock.request(\n\t\t\t\t\t\tmatchers.argThat((path) => typeof path === \"string\" && path.startsWith(\"/rest/sys/session/\")),\n\t\t\t\t\t\tHttpMethod.GET,\n\t\t\t\t\t\tanything(),\n\t\t\t\t\t),\n\t\t\t\t).thenResolve(JSON.stringify({ user: userId, accessKey: keyToBase64(accessKey) }))\n\t\t\t})\n\n\t\t\to.test(\"When resuming a session and there is a database key, it is passed to offline storage initialization\", async function () {\n\t\t\t\tusingOfflineStorage = true\n\t\t\t\tawait facade.resumeSession(credentials, null, dbKey, timeRangeDays)\n\t\t\t\tverify(cacheStorageInitializerMock.initialize({ type: \"offline\", databaseKey: dbKey, userId, timeRangeDays, forceNewDatabase: false }))\n\t\t\t})\n\n\t\t\to.test(\"When resuming a session and there is no database key, nothing is passed to offline storage initialization\", async function () {\n\t\t\t\tusingOfflineStorage = true\n\t\t\t\tawait facade.resumeSession(credentials, null, null, timeRangeDays)\n\t\t\t\tverify(cacheStorageInitializerMock.initialize({ type: \"ephemeral\", userId }))\n\t\t\t})\n\n\t\t\to.test(\"when resuming a session and the offline initialization has created a new database, we do synchronous login\", async function () {\n\t\t\t\tusingOfflineStorage = true\n\t\t\t\tuser.accountType = AccountType.PAID\n\t\t\t\twhen(\n\t\t\t\t\tcacheStorageInitializerMock.initialize({ type: \"offline\", databaseKey: dbKey, userId, timeRangeDays, forceNewDatabase: false }),\n\t\t\t\t).thenResolve({\n\t\t\t\t\tisPersistent: true,\n\t\t\t\t\tisNewOfflineDb: true,\n\t\t\t\t})\n\n\t\t\t\tawait facade.resumeSession(credentials, null, dbKey, timeRangeDays)\n\n\t\t\t\to(facade.asyncLoginState).deepEquals({ state: \"idle\" })(\"Synchronous login occured, so once resume returns we have already logged in\")\n\t\t\t})\n\n\t\t\to.test(\"when resuming a session and the offline initialization has an existing database, we do async login\", async function () {\n\t\t\t\tusingOfflineStorage = true\n\t\t\t\tuser.accountType = AccountType.PAID\n\n\t\t\t\twhen(\n\t\t\t\t\tcacheStorageInitializerMock.initialize({ type: \"offline\", databaseKey: dbKey, userId, timeRangeDays, forceNewDatabase: false }),\n\t\t\t\t).thenResolve({\n\t\t\t\t\tisPersistent: true,\n\t\t\t\t\tisNewOfflineDb: false,\n\t\t\t\t})\n\n\t\t\t\tawait facade.resumeSession(credentials, null, dbKey, timeRangeDays)\n\n\t\t\t\to(facade.asyncLoginState).deepEquals({ state: \"running\" })(\"Async login occurred so it is still running\")\n\t\t\t})\n\n\t\t\to.test(\"when resuming a session and a notauthenticatedError is thrown, the offline db is deleted\", async function () {\n\t\t\t\tusingOfflineStorage = true\n\t\t\t\tuser.accountType = AccountType.FREE\n\t\t\t\twhen(\n\t\t\t\t\trestClientMock.request(\n\t\t\t\t\t\tmatchers.argThat((path) => path.startsWith(\"/rest/sys/session/\")),\n\t\t\t\t\t\tHttpMethod.GET,\n\t\t\t\t\t\tanything(),\n\t\t\t\t\t),\n\t\t\t\t).thenReject(new NotAuthenticatedError(\"not your cheese\"))\n\n\t\t\t\tawait o(() =>\n\t\t\t\t\tfacade.resumeSession(\n\t\t\t\t\t\tcredentials,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsalt: SALT,\n\t\t\t\t\t\t\tkdfType: DEFAULT_KDF_TYPE,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdbKey,\n\t\t\t\t\t\ttimeRangeDays,\n\t\t\t\t\t),\n\t\t\t\t).asyncThrows(NotAuthenticatedError)\n\t\t\t\tverify(cacheStorageInitializerMock.deInitialize())\n\t\t\t})\n\n\t\t\to.test(\"when resuming a session with credentials that don't have encryptedPassphraseKey it is assigned\", async () => {\n\t\t\t\tusingOfflineStorage = true\n\t\t\t\tawait facade.resumeSession(credentials, null, null, timeRangeDays)\n\n\t\t\t\tverify(\n\t\t\t\t\tloginListener.onFullLoginSuccess(\n\t\t\t\t\t\tSessionType.Persistent,\n\t\t\t\t\t\tanything(),\n\t\t\t\t\t\targThat((credentials: Credentials) => credentials.encryptedPassphraseKey != null),\n\t\t\t\t\t),\n\t\t\t\t)\n\t\t\t})\n\t\t})\n\n\t\to.spec(\"account type combinations\", function () {\n\t\t\tlet credentials: Credentials\n\t\t\tconst dbKey = new Uint8Array([1, 2, 3, 4, 1, 2, 3, 4])\n\t\t\tconst passphrase = \"hunter2\"\n\t\t\tconst userId = \"userId\"\n\t\t\tconst accessKey = [3229306880, 2716953871, 4072167920, 3901332677]\n\t\t\tconst accessToken = \"accessToken\"\n\n\t\t\tlet user: User\n\t\t\tlet calls: string[]\n\t\t\tlet fullLoginDeferred: DeferredObject<void>\n\n\t\t\to.beforeEach(async function () {\n\t\t\t\tuser = await makeUser(userId)\n\t\t\t\tcredentials = {\n\t\t\t\t\t/**\n\t\t\t\t\t * Identifier which we use for logging in.\n\t\t\t\t\t * Email address used to log in for internal users, userId for external users.\n\t\t\t\t\t * */\n\t\t\t\t\tlogin: login,\n\n\t\t\t\t\t/** Session#accessKey encrypted password. Is set when session is persisted. */\n\t\t\t\t\tencryptedPassword: uint8ArrayToBase64(encryptString(accessKey, passphrase)), // We can't call encryptString in the top level of spec because `random` isn't initialized yet\n\t\t\t\t\taccessToken,\n\t\t\t\t\tuserId,\n\t\t\t\t\ttype: \"internal\",\n\t\t\t\t} as Credentials\n\n\t\t\t\twhen(entityClientMock.load(UserTypeRef, userId)).thenResolve(user)\n\n\t\t\t\t// // The call to /sys/session/...\n\t\t\t\t// when(restClientMock.request(anything(), HttpMethod.GET, anything()))\n\t\t\t\t// \t.thenResolve(JSON.stringify({user: userId, accessKey: keyToBase64(accessKey)}))\n\n\t\t\t\tcalls = []\n\t\t\t\t// .thenReturn(sessionServiceDefer)\n\t\t\t\twhen(userFacade.setUser(anything())).thenDo(() => {\n\t\t\t\t\tcalls.push(\"setUser\")\n\t\t\t\t})\n\t\t\t\twhen(userFacade.isPartiallyLoggedIn()).thenDo(() => calls.includes(\"setUser\"))\n\n\t\t\t\tfullLoginDeferred = defer()\n\t\t\t\twhen(loginListener.onFullLoginSuccess(matchers.anything(), matchers.anything(), matchers.anything())).thenDo(() => fullLoginDeferred.resolve())\n\t\t\t})\n\n\t\t\to(\"When using offline as a free user and with stable connection, login sync\", async function () {\n\t\t\t\tusingOfflineStorage = true\n\t\t\t\tuser.accountType = AccountType.FREE\n\t\t\t\tawait testSuccessfulSyncLogin()\n\t\t\t})\n\n\t\t\to(\"When using offline as a free user with unstable connection, no offline for free users\", async function () {\n\t\t\t\tusingOfflineStorage = true\n\t\t\t\tuser.accountType = AccountType.FREE\n\t\t\t\twhen(restClientMock.request(anything(), HttpMethod.GET, anything())).thenDo(async () => {\n\t\t\t\t\tcalls.push(\"sessionService\")\n\t\t\t\t\tthrow new ConnectionError(\"Oopsie 1\")\n\t\t\t\t})\n\n\t\t\t\tconst result = await facade.resumeSession(credentials, { salt: user.salt!, kdfType: DEFAULT_KDF_TYPE }, dbKey, timeRangeDays).finally(() => {\n\t\t\t\t\tcalls.push(\"return\")\n\t\t\t\t})\n\n\t\t\t\to(result).deepEquals({ type: \"error\", reason: ResumeSessionErrorReason.OfflineNotAvailableForFree })\n\t\t\t\to(calls).deepEquals([\"sessionService\", \"return\"])\n\t\t\t})\n\n\t\t\to(\"When using offline as premium user with stable connection, async login\", async function () {\n\t\t\t\tusingOfflineStorage = true\n\t\t\t\tuser.accountType = AccountType.PAID\n\t\t\t\twhen(restClientMock.request(anything(), HttpMethod.GET, anything())).thenDo(async () => {\n\t\t\t\t\tcalls.push(\"sessionService\")\n\t\t\t\t\treturn JSON.stringify({ user: userId, accessKey: keyToBase64(accessKey) })\n\t\t\t\t})\n\n\t\t\t\tconst deferred = defer()\n\t\t\t\twhen(loginListener.onFullLoginSuccess(matchers.anything(), matchers.anything(), matchers.anything())).thenDo(() => deferred.resolve(null))\n\n\t\t\t\tconst result = await facade.resumeSession(credentials, { salt: user.salt!, kdfType: DEFAULT_KDF_TYPE }, dbKey, timeRangeDays)\n\n\t\t\t\to(result.type).equals(\"success\")\n\n\t\t\t\tawait deferred.promise\n\n\t\t\t\t// we would love to prove that part of the login is done async but without injecting some asyncExecutor it's a bit tricky to do\n\t\t\t\t// we assume to have seUser twice, once using caching entity client and once using non caching entity client.\n\t\t\t\to(calls).deepEquals([\"setUser\", \"sessionService\", \"setUser\"])\n\n\t\t\t\t// just wait for the async login to not bleed into other test cases or to not randomly fail\n\t\t\t\tawait fullLoginDeferred.promise\n\t\t\t})\n\n\t\t\to(\"When using offline as premium user with unstable connection, async login with later retry\", async function () {\n\t\t\t\tusingOfflineStorage = true\n\t\t\t\tuser.accountType = AccountType.PAID\n\t\t\t\tconst connectionError = new ConnectionError(\"Oopsie 2\")\n\t\t\t\twhen(restClientMock.request(anything(), HttpMethod.GET, anything())).thenDo(async () => {\n\t\t\t\t\tcalls.push(\"sessionService\")\n\t\t\t\t\tthrow connectionError\n\t\t\t\t})\n\n\t\t\t\tconst result = await facade.resumeSession(credentials, { salt: user.salt!, kdfType: DEFAULT_KDF_TYPE }, dbKey, timeRangeDays)\n\n\t\t\t\t// we expect async resume session so we have to pause current code execution.\n\t\t\t\tawait Promise.resolve()\n\n\t\t\t\to(result.type).equals(\"success\")\n\t\t\t\to(calls).deepEquals([\"setUser\", \"sessionService\"])\n\n\t\t\t\t// Did not finish login\n\t\t\t\tverify(userFacade.unlockUserGroupKey(anything()), { times: 0 })\n\t\t\t})\n\n\t\t\to(\"When not using offline as free user with connection, sync login\", async function () {\n\t\t\t\tusingOfflineStorage = false\n\t\t\t\tuser.accountType = AccountType.FREE\n\t\t\t\tawait testSuccessfulSyncLogin()\n\t\t\t})\n\n\t\t\to(\"When not using offline as free user with unstable connection, sync login with connection error\", async function () {\n\t\t\t\tusingOfflineStorage = false\n\t\t\t\tuser.accountType = AccountType.FREE\n\t\t\t\tawait testConnectionFailingSyncLogin()\n\t\t\t})\n\n\t\t\to(\"When not using offline as premium user with stable connection, sync login\", async function () {\n\t\t\t\tusingOfflineStorage = false\n\t\t\t\tuser.accountType = AccountType.PAID\n\t\t\t\tawait testSuccessfulSyncLogin()\n\t\t\t})\n\t\t\to(\"When not using offline as premium with unstable connection, sync login with connection error\", async function () {\n\t\t\t\tusingOfflineStorage = false\n\t\t\t\tuser.accountType = AccountType.PAID\n\t\t\t\tawait testConnectionFailingSyncLogin()\n\t\t\t})\n\n\t\t\tasync function testSuccessfulSyncLogin() {\n\t\t\t\twhen(restClientMock.request(anything(), HttpMethod.GET, anything())).thenDo(async () => {\n\t\t\t\t\tcalls.push(\"sessionService\")\n\t\t\t\t\treturn JSON.stringify({ user: userId, accessKey: keyToBase64(accessKey) })\n\t\t\t\t})\n\n\t\t\t\tawait facade\n\t\t\t\t\t.resumeSession(credentials, user.salt == null ? null : { salt: user.salt, kdfType: DEFAULT_KDF_TYPE }, dbKey, timeRangeDays)\n\t\t\t\t\t.finally(() => {\n\t\t\t\t\t\tcalls.push(\"return\")\n\t\t\t\t\t})\n\t\t\t\to(calls).deepEquals([\"sessionService\", \"setUser\", \"return\"])\n\t\t\t}\n\n\t\t\tasync function testConnectionFailingSyncLogin() {\n\t\t\t\twhen(restClientMock.request(anything(), HttpMethod.GET, anything())).thenDo(async () => {\n\t\t\t\t\tcalls.push(\"sessionService\")\n\t\t\t\t\tthrow new ConnectionError(\"Oopsie 3\")\n\t\t\t\t})\n\n\t\t\t\tawait o(() => facade.resumeSession(credentials, { salt: user.salt!, kdfType: DEFAULT_KDF_TYPE }, dbKey, timeRangeDays)).asyncThrows(\n\t\t\t\t\tConnectionError,\n\t\t\t\t)\n\t\t\t\to(calls).deepEquals([\"sessionService\"])\n\t\t\t}\n\t\t})\n\n\t\to.spec(\"async login\", function () {\n\t\t\tlet credentials: Credentials\n\t\t\tconst dbKey = new Uint8Array([1, 2, 3, 4, 1, 2, 3, 4])\n\t\t\tconst passphrase = \"hunter2\"\n\t\t\tconst userId = \"userId\"\n\t\t\tconst accessKey = [3229306880, 2716953871, 4072167920, 3901332677]\n\t\t\tconst accessToken = \"accessToken\"\n\t\t\tlet calls: string[]\n\t\t\tlet fullLoginDeferred: DeferredObject<void>\n\n\t\t\tlet user: User\n\n\t\t\to.beforeEach(async function () {\n\t\t\t\tuser = await makeUser(userId)\n\t\t\t\tusingOfflineStorage = true\n\t\t\t\tuser.accountType = AccountType.PAID\n\n\t\t\t\tcredentials = {\n\t\t\t\t\t/**\n\t\t\t\t\t * Identifier which we use for logging in.\n\t\t\t\t\t * Email address used to log in for internal users, userId for external users.\n\t\t\t\t\t * */\n\t\t\t\t\tlogin: login,\n\n\t\t\t\t\t/** Session#accessKey encrypted password. Is set when session is persisted. */\n\t\t\t\t\tencryptedPassword: uint8ArrayToBase64(encryptString(accessKey, passphrase)), // We can't call encryptString in the top level of spec because `random` isn't initialized yet\n\t\t\t\t\taccessToken,\n\t\t\t\t\tuserId,\n\t\t\t\t\ttype: \"internal\",\n\t\t\t\t} as Credentials\n\n\t\t\t\twhen(entityClientMock.load(UserTypeRef, userId)).thenResolve(user)\n\n\t\t\t\t// // The call to /sys/session/...\n\t\t\t\t// when(restClientMock.request(anything(), HttpMethod.GET, anything()))\n\t\t\t\t// \t.thenResolve(JSON.stringify({user: userId, accessKey: keyToBase64(accessKey)}))\n\n\t\t\t\tcalls = []\n\t\t\t\t// .thenReturn(sessionServiceDefer)\n\t\t\t\twhen(userFacade.setUser(anything())).thenDo(() => {\n\t\t\t\t\tcalls.push(\"setUser\")\n\t\t\t\t})\n\t\t\t\twhen(userFacade.isPartiallyLoggedIn()).thenDo(() => calls.includes(\"setUser\"))\n\n\t\t\t\tfullLoginDeferred = defer()\n\t\t\t\twhen(loginListener.onFullLoginSuccess(matchers.anything(), matchers.anything(), matchers.anything())).thenDo(() => fullLoginDeferred.resolve())\n\t\t\t})\n\n\t\t\to(\"When successfully logged in, userFacade is initialised\", async function () {\n\t\t\t\tconst groupInfo = createTestEntity(GroupInfoTypeRef)\n\t\t\t\twhen(entityClientMock.load(GroupInfoTypeRef, user.userGroup.groupInfo)).thenResolve(groupInfo)\n\t\t\t\twhen(restClientMock.request(matchers.contains(\"sys/session\"), HttpMethod.GET, anything())).thenResolve(\n\t\t\t\t\tJSON.stringify({ user: userId, accessKey: keyToBase64(accessKey) }),\n\t\t\t\t)\n\n\t\t\t\tawait facade.resumeSession(credentials, { salt: user.salt!, kdfType: DEFAULT_KDF_TYPE }, dbKey, timeRangeDays)\n\n\t\t\t\tawait fullLoginDeferred.promise\n\n\t\t\t\tverify(userFacade.setAccessToken(\"accessToken\"))\n\t\t\t\tverify(userFacade.unlockUserGroupKey(matchers.anything()))\n\t\t\t\tverify(eventBusClientMock.connect(ConnectMode.Initial))\n\t\t\t})\n\n\t\t\to(\"when retrying failed login, userFacade is initialized\", async function () {\n\t\t\t\tconst deferred = defer()\n\t\t\t\twhen(loginListener.onLoginFailure(matchers.anything())).thenDo(() => deferred.resolve(null))\n\n\t\t\t\tconst groupInfo = createTestEntity(GroupInfoTypeRef)\n\t\t\t\twhen(entityClientMock.load(GroupInfoTypeRef, user.userGroup.groupInfo)).thenResolve(groupInfo)\n\t\t\t\tconst connectionError = new ConnectionError(\"test\")\n\t\t\t\twhen(userFacade.isFullyLoggedIn()).thenReturn(false)\n\n\t\t\t\twhen(restClientMock.request(matchers.contains(\"sys/session\"), HttpMethod.GET, anything()))\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t// the type definitions for testdouble are lacking, but we can do this\n\t\t\t\t\t.thenReturn(Promise.reject(connectionError), Promise.resolve(JSON.stringify({ user: userId, accessKey: keyToBase64(accessKey) })))\n\n\t\t\t\tawait facade.resumeSession(credentials, { salt: user.salt!, kdfType: DEFAULT_KDF_TYPE }, dbKey, timeRangeDays)\n\n\t\t\t\tverify(userFacade.setAccessToken(\"accessToken\"))\n\t\t\t\tverify(userFacade.unlockUserGroupKey(anything()), { times: 0 })\n\t\t\t\tverify(userFacade.unlockUserGroupKey(matchers.anything()), { times: 0 })\n\t\t\t\tverify(eventBusClientMock.connect(ConnectMode.Initial), { times: 0 })\n\n\t\t\t\tawait deferred.promise\n\n\t\t\t\tawait facade.retryAsyncLogin()\n\n\t\t\t\tawait fullLoginDeferred.promise\n\n\t\t\t\tverify(userFacade.setAccessToken(\"accessToken\"))\n\t\t\t\tverify(userFacade.unlockUserGroupKey(matchers.anything()))\n\t\t\t\tverify(eventBusClientMock.connect(ConnectMode.Initial))\n\t\t\t})\n\t\t})\n\n\t\to.spec(\"async login bcrypt\", function () {\n\t\t\tlet credentials: Credentials\n\t\t\tconst dbKey = new Uint8Array([1, 2, 3, 4, 1, 2, 3, 4])\n\t\t\tconst passphrase = \"hunter2\"\n\t\t\tconst userId = \"userId\"\n\t\t\tconst accessKey = [3229306880, 2716953871, 4072167920, 3901332677]\n\t\t\tconst accessToken = \"accessToken\"\n\t\t\tlet calls: string[]\n\t\t\tlet fullLoginDeferred: DeferredObject<void>\n\n\t\t\tlet user: User\n\n\t\t\to.beforeEach(async function () {\n\t\t\t\tconst passphraseKeyData = { kdfType: KdfType.Bcrypt, passphrase, salt: SALT }\n\t\t\t\tconst userPassphraseKey = await facade.deriveUserPassphraseKey(passphraseKeyData)\n\t\t\t\tuser = await makeUser(userId, KdfType.Bcrypt, userPassphraseKey)\n\t\t\t\tuser.salt = SALT\n\t\t\t\tusingOfflineStorage = true\n\t\t\t\tuser.accountType = AccountType.PAID\n\n\t\t\t\tcredentials = {\n\t\t\t\t\t/**\n\t\t\t\t\t * Identifier which we use for logging in.\n\t\t\t\t\t * Email address used to log in for internal users, userId for external users.\n\t\t\t\t\t * */\n\t\t\t\t\tlogin: login,\n\n\t\t\t\t\t/** Session#accessKey encrypted password. Is set when session is persisted. */\n\t\t\t\t\tencryptedPassword: uint8ArrayToBase64(encryptString(accessKey, passphrase)), // We can't call encryptString in the top level of spec because `random` isn't initialized yet\n\t\t\t\t\taccessToken,\n\t\t\t\t\tuserId,\n\t\t\t\t\ttype: \"internal\",\n\t\t\t\t} as Credentials\n\n\t\t\t\twhen(entityClientMock.load(UserTypeRef, userId)).thenResolve(user)\n\n\t\t\t\twhen(serviceExecutor.get(SaltService, anything()), { ignoreExtraArgs: true }).thenResolve(\n\t\t\t\t\tcreateSaltReturn({ salt: SALT, kdfVersion: KdfType.Bcrypt }),\n\t\t\t\t)\n\n\t\t\t\t// // The call to /sys/session/...\n\t\t\t\t// when(restClientMock.request(anything(), HttpMethod.GET, anything()))\n\t\t\t\t// \t.thenResolve(JSON.stringify({user: userId, accessKey: keyToBase64(accessKey)}))\n\n\t\t\t\tcalls = []\n\t\t\t\t// .thenReturn(sessionServiceDefer)\n\t\t\t\twhen(userFacade.setUser(anything())).thenDo(() => {\n\t\t\t\t\tcalls.push(\"setUser\")\n\t\t\t\t})\n\t\t\t\twhen(userFacade.isPartiallyLoggedIn()).thenDo(() => calls.includes(\"setUser\"))\n\n\t\t\t\tfullLoginDeferred = defer()\n\t\t\t\twhen(loginListener.onFullLoginSuccess(matchers.anything(), matchers.anything(), matchers.anything())).thenDo(() => fullLoginDeferred.resolve())\n\t\t\t})\n\n\t\t\to(\"When successfully logged in, userFacade is initialised\", async function () {\n\t\t\t\tconst groupInfo = createTestEntity(GroupInfoTypeRef)\n\t\t\t\twhen(entityClientMock.load(GroupInfoTypeRef, user.userGroup.groupInfo)).thenResolve(groupInfo)\n\t\t\t\twhen(restClientMock.request(matchers.contains(\"sys/session\"), HttpMethod.GET, anything())).thenResolve(\n\t\t\t\t\tJSON.stringify({ user: userId, accessKey: keyToBase64(accessKey) }),\n\t\t\t\t)\n\n\t\t\t\tawait facade.resumeSession(credentials, null, dbKey, timeRangeDays)\n\n\t\t\t\tawait fullLoginDeferred.promise\n\n\t\t\t\tverify(userFacade.setAccessToken(\"accessToken\"))\n\t\t\t\tverify(userFacade.unlockUserGroupKey(matchers.anything()))\n\t\t\t\tverify(eventBusClientMock.connect(ConnectMode.Initial))\n\t\t\t})\n\t\t})\n\n\t\to.spec(\"external sessions\", function () {\n\t\t\tconst passphrase = \"hunter2\"\n\t\t\tconst userId = \"userId\"\n\t\t\tconst accessKey = [3229306880, 2716953871, 4072167920, 3901332677]\n\t\t\tconst accessToken = \"accessToken\"\n\n\t\t\tlet user: User\n\t\t\tlet credentials: Credentials\n\n\t\t\to.beforeEach(async function () {\n\t\t\t\tcredentials = {\n\t\t\t\t\t/**\n\t\t\t\t\t * Identifier which we use for logging in.\n\t\t\t\t\t * Email address used to log in for internal users, userId for external users.\n\t\t\t\t\t * */\n\t\t\t\t\tlogin: userId,\n\n\t\t\t\t\t/** Session#accessKey encrypted password. Is set when session is persisted. */\n\t\t\t\t\tencryptedPassword: uint8ArrayToBase64(encryptString(accessKey, passphrase)), // We can't call encryptString in the top level of spec because `random` isn't initialized yet\n\t\t\t\t\taccessToken,\n\t\t\t\t\tuserId,\n\t\t\t\t\ttype: \"internal\",\n\t\t\t\t} as Credentials\n\n\t\t\t\tuser = await makeUser(userId)\n\t\t\t\tuser.externalAuthInfo = createTestEntity(UserExternalAuthInfoTypeRef, {\n\t\t\t\t\tlatestSaltHash: sha256Hash(SALT),\n\t\t\t\t})\n\n\t\t\t\twhen(entityClientMock.load(UserTypeRef, userId)).thenResolve(user)\n\n\t\t\t\twhen(restClientMock.request(matchers.contains(\"sys/session\"), HttpMethod.GET, anything())).thenResolve(\n\t\t\t\t\tJSON.stringify({ user: userId, accessKey: keyToBase64(accessKey) }),\n\t\t\t\t)\n\t\t\t})\n\n\t\t\to(\"when the salt is not outdated, login works\", async function () {\n\t\t\t\tconst result = await facade.resumeSession(credentials, { salt: SALT, kdfType: DEFAULT_KDF_TYPE }, null, timeRangeDays)\n\n\t\t\t\to(result.type).equals(\"success\")\n\t\t\t})\n\n\t\t\to(\"when the salt is outdated, AccessExpiredError is thrown\", async function () {\n\t\t\t\tuser.externalAuthInfo!.latestSaltHash = new Uint8Array([1, 2, 3])\n\n\t\t\t\tawait o(() => facade.resumeSession(credentials, { salt: SALT, kdfType: DEFAULT_KDF_TYPE }, null, timeRangeDays)).asyncThrows(AccessExpiredError)\n\t\t\t\tverify(restClientMock.request(matchers.contains(\"sys/session\"), HttpMethod.DELETE, anything()), { times: 0 })\n\t\t\t})\n\n\t\t\to(\"when the password is outdated, NotAuthenticatedError is thrown\", async function () {\n\t\t\t\tuser.verifier = new Uint8Array([1, 2, 3])\n\t\t\t\twhen(restClientMock.request(matchers.contains(\"sys/session\"), HttpMethod.DELETE, anything())).thenResolve(null)\n\n\t\t\t\tawait o(() =>\n\t\t\t\t\tfacade.resumeSession(\n\t\t\t\t\t\tcredentials,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsalt: SALT,\n\t\t\t\t\t\t\tkdfType: DEFAULT_KDF_TYPE,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\ttimeRangeDays,\n\t\t\t\t\t),\n\t\t\t\t).asyncThrows(NotAuthenticatedError)\n\t\t\t\tverify(restClientMock.request(matchers.contains(\"sys/session\"), HttpMethod.DELETE, anything()))\n\t\t\t})\n\t\t})\n\n\t\to.spec(\"external sessions bcrypt\", function () {\n\t\t\tconst passphrase = \"hunter2\"\n\t\t\tconst userId = \"userId\"\n\t\t\tconst accessKey = [3229306880, 2716953871, 4072167920, 3901332677]\n\t\t\tconst accessToken = \"accessToken\"\n\n\t\t\tlet user: User\n\t\t\tlet credentials: Credentials\n\n\t\t\to.beforeEach(async function () {\n\t\t\t\tcredentials = {\n\t\t\t\t\t/**\n\t\t\t\t\t * Identifier which we use for logging in.\n\t\t\t\t\t * Email address used to log in for internal users, userId for external users.\n\t\t\t\t\t * */\n\t\t\t\t\tlogin: userId,\n\n\t\t\t\t\t/** Session#accessKey encrypted password. Is set when session is persisted. */\n\t\t\t\t\tencryptedPassword: uint8ArrayToBase64(encryptString(accessKey, passphrase)), // We can't call encryptString in the top level of spec because `random` isn't initialized yet\n\t\t\t\t\taccessToken,\n\t\t\t\t\tuserId,\n\t\t\t\t\ttype: \"internal\",\n\t\t\t\t} as Credentials\n\n\t\t\t\tconst passphraseKeyData = { kdfType: KdfType.Bcrypt, passphrase, salt: SALT }\n\t\t\t\tconst userPassphraseKey = await facade.deriveUserPassphraseKey(passphraseKeyData)\n\t\t\t\tuser = await makeUser(userId, KdfType.Bcrypt, userPassphraseKey)\n\t\t\t\tuser.externalAuthInfo = createTestEntity(UserExternalAuthInfoTypeRef, {\n\t\t\t\t\tlatestSaltHash: sha256Hash(SALT),\n\t\t\t\t})\n\n\t\t\t\twhen(entityClientMock.load(UserTypeRef, userId)).thenResolve(user)\n\n\t\t\t\twhen(restClientMock.request(matchers.contains(\"sys/session\"), HttpMethod.GET, anything())).thenResolve(\n\t\t\t\t\tJSON.stringify({ user: userId, accessKey: keyToBase64(accessKey) }),\n\t\t\t\t)\n\t\t\t})\n\n\t\t\to(\"when the salt is not outdated, login works\", async function () {\n\t\t\t\tconst result = await facade.resumeSession(credentials, { salt: SALT, kdfType: KdfType.Bcrypt }, null, timeRangeDays)\n\n\t\t\t\to(result.type).equals(\"success\")\n\t\t\t})\n\t\t})\n\t})\n\n\to.spec(\"Migrating the KDF\", function () {\n\t\to(\"When the migration is enabled, a new key is derived from the same password with Argon2\", async function () {\n\t\t\tconst user = await makeUser(\"userId\", KdfType.Bcrypt)\n\t\t\tuser.salt = SALT\n\n\t\t\twhen(userFacade.getCurrentUserGroupKey()).thenReturn({ object: [1, 2, 3, 4], version: 0 })\n\t\t\tConst.EXECUTE_KDF_MIGRATION = true\n\t\t\tawait facade.migrateKdfType(KdfType.Argon2id, \"hunter2\", user)\n\n\t\t\tverify(\n\t\t\t\targon2idFacade.generateKeyFromPassphrase(\n\t\t\t\t\t\"hunter2\",\n\t\t\t\t\targThat((arg) => {\n\t\t\t\t\t\treturn arg !== SALT\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t)\n\t\t\tverify(\n\t\t\t\tserviceExecutor.post(\n\t\t\t\t\tChangeKdfService,\n\t\t\t\t\targThat(({ kdfVersion, oldVerifier, pwEncUserGroupKey, salt, verifier }) => {\n\t\t\t\t\t\treturn kdfVersion === KdfType.Argon2id\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t)\n\t\t\tverify(cacheManagmentFacadeMock.reloadUser())\n\t\t})\n\t\to.afterEach(() => {\n\t\t\tConst.EXECUTE_KDF_MIGRATION = false\n\t\t})\n\t})\n})\n","import o from \"@tutao/otest\"\nimport { LOG_SIZE, Logger } from \"../../../../../src/common/api/common/Logger.js\"\nimport { lastThrow } from \"@tutao/tutanota-utils\"\no.spec(\"Loger test\", function () {\n\tlet dateProvider\n\tlet log\n\to.beforeEach(function () {\n\t\tlet dateCounter = 0\n\n\t\tdateProvider = () => new Date(dateCounter++)\n\n\t\tlog = new Logger(dateProvider)\n\t})\n\to(\"log warn info error\", function () {\n\t\to(log.getEntries()).deepEquals([])\n\t\tlog.logInfo(\"info\")\n\t\tlog.logWarn(\"warn\")\n\t\tlog.logError(\"error\")\n\t\to(log.getEntries()).deepEquals([\n\t\t\tlog.formatLogEntry(new Date(0), \"I\", \"info\"),\n\t\t\tlog.formatLogEntry(new Date(1), \"W\", \"warn\"),\n\t\t\tlog.formatLogEntry(new Date(2), \"E\", \"error\"),\n\t\t])\n\t})\n\to(\"log lots of entries\", function () {\n\t\tfor (let i = 0; i < LOG_SIZE + 2; i++) {\n\t\t\tlog.logInfo(\"info \" + i)\n\t\t}\n\n\t\to(log.getEntries().length).equals(LOG_SIZE)\n\t\to(log.getEntries()[0]).equals(log.formatLogEntry(new Date(2), \"I\", \"info \" + 2))\n\t\to(lastThrow(log.getEntries())).equals(log.formatLogEntry(new Date(1001), \"I\", \"info \" + 1001))\n\t})\n})\n","import o from \"@tutao/otest\"\nimport { BirthdayTypeRef, createBirthday } from \"../../../../../src/common/api/entities/tutanota/TypeRefs.js\"\nimport { birthdayToIsoDate, isoDateToBirthday } from \"../../../../../src/common/api/common/utils/BirthdayUtils.js\"\nimport { ParsingError } from \"../../../../../src/common/api/common/error/ParsingError.js\"\nimport { TutanotaError } from \"@tutao/tutanota-error\"\nimport { createTestEntity } from \"../../../TestUtils.js\"\n\no.spec(\"BirthdayUtilsTest\", function () {\n\to(\"birthdayToIsoDate\", function () {\n\t\tconst bday = createTestEntity(BirthdayTypeRef, {\n\t\t\tday: \"12\",\n\t\t\tmonth: \"10\",\n\t\t\tyear: null,\n\t\t})\n\t\to(birthdayToIsoDate(bday)).equals(\"--10-12\")\n\t\tbday.year = \"2009\"\n\t\to(birthdayToIsoDate(bday)).equals(\"2009-10-12\")\n\t\tbday.year = \"100\"\n\t\to(birthdayToIsoDate(bday)).equals(\"0100-10-12\")\n\t\tbday.year = \"2019\"\n\t\tbday.month = \"1\"\n\t\tbday.day = \"5\"\n\t\to(birthdayToIsoDate(bday)).equals(\"2019-01-05\")\n\t})\n\to(\"isoDateToBirthday\", function () {\n\t\to(isoDateToBirthday(\"--10-12\")).deepEquals(\n\t\t\tcreateTestEntity(BirthdayTypeRef, {\n\t\t\t\tday: \"12\",\n\t\t\t\tmonth: \"10\",\n\t\t\t\tyear: null,\n\t\t\t}),\n\t\t)\n\t\to(isoDateToBirthday(\"2009-10-12\")).deepEquals(\n\t\t\tcreateTestEntity(BirthdayTypeRef, {\n\t\t\t\tday: \"12\",\n\t\t\t\tmonth: \"10\",\n\t\t\t\tyear: \"2009\",\n\t\t\t}),\n\t\t)\n\t\to(isoDateToBirthday(\"2009-12-31\")).deepEquals(\n\t\t\tcreateTestEntity(BirthdayTypeRef, {\n\t\t\t\tday: \"31\",\n\t\t\t\tmonth: \"12\",\n\t\t\t\tyear: \"2009\",\n\t\t\t}),\n\t\t)\n\t\to(isoDateToBirthday(\"2009-01-01\")).deepEquals(\n\t\t\tcreateTestEntity(BirthdayTypeRef, {\n\t\t\t\tday: \"01\",\n\t\t\t\tmonth: \"01\",\n\t\t\t\tyear: \"2009\",\n\t\t\t}),\n\t\t)\n\t})\n\to(\"parsing error\", function () {\n\t\tassertFail(() => isoDateToBirthday(\"\"), new ParsingError(\"invalid birthday: \"))\n\t\tassertFail(() => isoDateToBirthday(\"-\"), new ParsingError(\"invalid birthday: -\"))\n\t\tassertFail(() => isoDateToBirthday(\"31\"), new ParsingError(\"invalid birthday: 31\"))\n\t\tassertFail(() => isoDateToBirthday(\"31-wq.\"), new ParsingError(\"invalid birthday: 31-wq.\"))\n\t\tassertFail(() => isoDateToBirthday(\"--\"), new ParsingError(\"invalid birthday without year: --\"))\n\t\tassertFail(() => isoDateToBirthday(\"---10-12\"), new ParsingError(\"invalid birthday without year: ---10-12\"))\n\t\tassertFail(() => isoDateToBirthday(\"aaaa-bb-cc\"), new ParsingError(\"Invalid birthday format: aaaa-bb-cc\"))\n\t\tassertFail(() => isoDateToBirthday(\"aaaa-bb-01\"), new ParsingError(\"Invalid birthday format: aaaa-bb-01\"))\n\t\tassertFail(() => isoDateToBirthday(\"aaaa-01-01\"), new ParsingError(\"Invalid birthday format: aaaa-01-01\"))\n\t\tassertFail(() => isoDateToBirthday(\"0000-01-01\"), new ParsingError(\"Invalid birthday format: 0000-01-01\"))\n\t\tassertFail(() => isoDateToBirthday(\"2019-00-01\"), new ParsingError(\"Invalid birthday format: 2019-00-01\"))\n\t\tassertFail(() => isoDateToBirthday(\"2019-01-00\"), new ParsingError(\"Invalid birthday format: 2019-01-00\"))\n\t\tassertFail(() => isoDateToBirthday(\"2019-13-31\"), new ParsingError(\"Invalid birthday format: 2019-13-31\"))\n\t\tassertFail(() => isoDateToBirthday(\"2019-12-32\"), new ParsingError(\"Invalid birthday format: 2019-12-32\"))\n\t})\n})\n\nfunction assertFail(testFunction: () => any, expectedError: TutanotaError) {\n\ttry {\n\t\ttestFunction()\n\t\t// @ts-ignore\n\t\to(false).equals(\"exception expected: \" + expectedError.message)\n\t} catch (e) {\n\t\tassertTutanotaError(e, expectedError)\n\t}\n}\n\nfunction assertTutanotaError(actual: any, expectedError: TutanotaError) {\n\to(actual.name).equals(expectedError.name)\n\to(actual.message).equals(expectedError.message)\n}\n","import o from \"@tutao/otest\"\nimport {\n\tBadRequestError,\n\tConnectionError,\n\tInternalServerError,\n\tNotAuthorizedError,\n\tPayloadTooLargeError,\n} from \"../../../../../src/common/api/common/error/RestError.js\"\nimport { assertThrows } from \"@tutao/tutanota-test-utils\"\nimport { SetupMultipleError } from \"../../../../../src/common/api/common/error/SetupMultipleError.js\"\nimport { HttpMethod, MediaType, resolveTypeReference } from \"../../../../../src/common/api/common/EntityFunctions.js\"\nimport { CustomerServerPropertiesTypeRef, CustomerTypeRef } from \"../../../../../src/common/api/entities/sys/TypeRefs.js\"\nimport { doBlobRequestWithRetry, EntityRestClient, tryServers, typeRefToPath } from \"../../../../../src/common/api/worker/rest/EntityRestClient.js\"\nimport { RestClient } from \"../../../../../src/common/api/worker/rest/RestClient.js\"\nimport type { CryptoFacade } from \"../../../../../src/common/api/worker/crypto/CryptoFacade.js\"\nimport { InstanceMapper } from \"../../../../../src/common/api/worker/crypto/InstanceMapper.js\"\nimport { func, instance, matchers, object, verify, when } from \"testdouble\"\nimport tutanotaModelInfo from \"../../../../../src/common/api/entities/tutanota/ModelInfo.js\"\nimport sysModelInfo from \"../../../../../src/common/api/entities/sys/ModelInfo.js\"\nimport { AuthDataProvider } from \"../../../../../src/common/api/worker/facades/UserFacade.js\"\nimport { LoginIncompleteError } from \"../../../../../src/common/api/common/error/LoginIncompleteError.js\"\nimport { BlobServerAccessInfoTypeRef, BlobServerUrlTypeRef } from \"../../../../../src/common/api/entities/storage/TypeRefs.js\"\nimport { freshVersioned, Mapper, ofClass } from \"@tutao/tutanota-utils\"\nimport { ProgrammingError } from \"../../../../../src/common/api/common/error/ProgrammingError.js\"\nimport { BlobAccessTokenFacade } from \"../../../../../src/common/api/worker/facades/BlobAccessTokenFacade.js\"\nimport {\n\tCalendarEventTypeRef,\n\tContact,\n\tContactTypeRef,\n\tInternalRecipientKeyDataTypeRef,\n\tMailDetailsBlob,\n\tMailDetailsBlobTypeRef,\n} from \"../../../../../src/common/api/entities/tutanota/TypeRefs.js\"\nimport { DateProvider } from \"../../../../../src/common/api/common/DateProvider.js\"\nimport { createTestEntity } from \"../../../TestUtils.js\"\nimport { DefaultDateProvider } from \"../../../../../src/common/calendar/date/CalendarUtils.js\"\n\nconst { anything, argThat } = matchers\n\nconst accessToken = \"My cool access token\"\nconst authHeader = {\n\taccessToken: accessToken,\n}\n\nfunction createArrayOf<T>(count: number, factory: (index: number) => T): Array<T> {\n\treturn (\n\t\tArray(count)\n\t\t\t// @ts-ignore\n\t\t\t.fill()\n\t\t\t.map((_, idx) => factory(idx))\n\t)\n}\n\nconst countFrom = (start, count) => createArrayOf(count, (idx) => String(idx + start))\n\nfunction contacts(count) {\n\tconst contactFactory = (idx) =>\n\t\tcreateTestEntity(ContactTypeRef, {\n\t\t\tfirstName: `Contact${idx}`,\n\t\t})\n\n\treturn createArrayOf(count, contactFactory)\n}\n\no.spec(\"EntityRestClient\", function () {\n\tlet entityRestClient: EntityRestClient\n\tlet restClient: RestClient\n\tlet instanceMapperMock: InstanceMapper\n\tlet cryptoFacadeMock: CryptoFacade\n\tlet fullyLoggedIn: boolean\n\tlet blobAccessTokenFacade: BlobAccessTokenFacade\n\tlet dateProvider: DateProvider\n\n\to.beforeEach(function () {\n\t\tcryptoFacadeMock = object()\n\t\twhen(cryptoFacadeMock.applyMigrations(anything(), anything())).thenDo(async (typeRef, data) => {\n\t\t\treturn Promise.resolve({ ...data, migrated: true })\n\t\t})\n\t\twhen(cryptoFacadeMock.applyMigrationsForInstance(anything())).thenDo((decryptedInstance) => {\n\t\t\treturn Promise.resolve({ ...decryptedInstance, migratedForInstance: true })\n\t\t})\n\t\twhen(cryptoFacadeMock.setNewOwnerEncSessionKey(anything(), anything())).thenResolve([])\n\t\twhen(cryptoFacadeMock.encryptBucketKeyForInternalRecipient(anything(), anything(), anything(), anything())).thenResolve(\n\t\t\tcreateTestEntity(InternalRecipientKeyDataTypeRef),\n\t\t)\n\t\twhen(cryptoFacadeMock.resolveSessionKey(anything(), anything())).thenResolve([])\n\n\t\tinstanceMapperMock = object()\n\t\twhen(instanceMapperMock.encryptAndMapToLiteral(anything(), anything(), anything())).thenDo((typeModel, instance, sessionKey) => {\n\t\t\treturn Promise.resolve({ ...instance, encrypted: true })\n\t\t})\n\t\twhen(instanceMapperMock.decryptAndMapToInstance(anything(), anything(), anything())).thenDo((typeModel, migratedEntity, sessionKey) => {\n\t\t\treturn Promise.resolve({ ...migratedEntity, decrypted: true })\n\t\t})\n\n\t\tblobAccessTokenFacade = instance(BlobAccessTokenFacade)\n\n\t\trestClient = object()\n\n\t\tfullyLoggedIn = true\n\n\t\tconst authDataProvider: AuthDataProvider = {\n\t\t\tcreateAuthHeaders(): Dict {\n\t\t\t\treturn authHeader\n\t\t\t},\n\t\t\tisFullyLoggedIn(): boolean {\n\t\t\t\treturn fullyLoggedIn\n\t\t\t},\n\t\t}\n\n\t\tdateProvider = instance(DefaultDateProvider)\n\t\tentityRestClient = new EntityRestClient(authDataProvider, restClient, () => cryptoFacadeMock, instanceMapperMock, blobAccessTokenFacade)\n\t})\n\n\tfunction assertThatNoRequestsWereMade() {\n\t\tverify(restClient.request(anything(), anything()), { ignoreExtraArgs: true, times: 0 })\n\t}\n\n\to.spec(\"Load\", function () {\n\t\to(\"loading a list element\", async function () {\n\t\t\tconst calendarListId = \"calendarListId\"\n\t\t\tconst id1 = \"id1\"\n\t\t\twhen(\n\t\t\t\trestClient.request(`${typeRefToPath(CalendarEventTypeRef)}/${calendarListId}/${id1}`, HttpMethod.GET, {\n\t\t\t\t\theaders: { ...authHeader, v: String(tutanotaModelInfo.version) },\n\t\t\t\t\tresponseType: MediaType.Json,\n\t\t\t\t\tqueryParams: undefined,\n\t\t\t\t\tbaseUrl: undefined,\n\t\t\t\t}),\n\t\t\t).thenResolve(JSON.stringify({ instance: \"calendar\" }))\n\n\t\t\tconst result = await entityRestClient.load(CalendarEventTypeRef, [calendarListId, id1])\n\t\t\to(result as any).deepEquals({\n\t\t\t\tinstance: \"calendar\",\n\t\t\t\tdecrypted: true,\n\t\t\t\tmigrated: true,\n\t\t\t\tmigratedForInstance: true,\n\t\t\t})\n\t\t})\n\n\t\to(\"loading an element \", async function () {\n\t\t\tconst id1 = \"id1\"\n\t\t\twhen(\n\t\t\t\trestClient.request(`${typeRefToPath(CustomerTypeRef)}/${id1}`, HttpMethod.GET, {\n\t\t\t\t\theaders: { ...authHeader, v: String(sysModelInfo.version) },\n\t\t\t\t\tresponseType: MediaType.Json,\n\t\t\t\t\tqueryParams: undefined,\n\t\t\t\t\tbaseUrl: undefined,\n\t\t\t\t}),\n\t\t\t).thenResolve(JSON.stringify({ instance: \"customer\" }))\n\n\t\t\tconst result = await entityRestClient.load(CustomerTypeRef, id1)\n\t\t\to(result as any).deepEquals({\n\t\t\t\tinstance: \"customer\",\n\t\t\t\tdecrypted: true,\n\t\t\t\tmigrated: true,\n\t\t\t\tmigratedForInstance: true,\n\t\t\t})\n\t\t})\n\n\t\to(\"query parameters and additional headers + access token and version are always passed to the rest client\", async function () {\n\t\t\tconst calendarListId = \"calendarListId\"\n\t\t\tconst id1 = \"id1\"\n\t\t\twhen(\n\t\t\t\trestClient.request(`${typeRefToPath(CalendarEventTypeRef)}/${calendarListId}/${id1}`, HttpMethod.GET, {\n\t\t\t\t\theaders: { ...authHeader, v: String(tutanotaModelInfo.version), baz: \"quux\" },\n\t\t\t\t\tresponseType: MediaType.Json,\n\t\t\t\t\tqueryParams: { foo: \"bar\" },\n\t\t\t\t\tbaseUrl: undefined,\n\t\t\t\t}),\n\t\t\t).thenResolve(JSON.stringify({ instance: \"calendar\" }))\n\n\t\t\tawait entityRestClient.load(CalendarEventTypeRef, [calendarListId, id1], {\n\t\t\t\tqueryParams: { foo: \"bar\" },\n\t\t\t\textraHeaders: { baz: \"quux\" },\n\t\t\t})\n\t\t})\n\n\t\to(\"when loading encrypted instance and not being logged in it throws an error\", async function () {\n\t\t\tfullyLoggedIn = false\n\t\t\tawait assertThrows(LoginIncompleteError, () => entityRestClient.load(CalendarEventTypeRef, [\"listId\", \"id\"]))\n\t\t\tassertThatNoRequestsWereMade()\n\t\t})\n\n\t\to(\"when ownerKey is passed it is used instead for session key resolution\", async function () {\n\t\t\tconst calendarListId = \"calendarListId\"\n\t\t\tconst id1 = \"id1\"\n\t\t\twhen(\n\t\t\t\trestClient.request(`${typeRefToPath(CalendarEventTypeRef)}/${calendarListId}/${id1}`, HttpMethod.GET, {\n\t\t\t\t\theaders: { ...authHeader, v: String(tutanotaModelInfo.version) },\n\t\t\t\t\tresponseType: MediaType.Json,\n\t\t\t\t\tqueryParams: undefined,\n\t\t\t\t\tbaseUrl: undefined,\n\t\t\t\t}),\n\t\t\t).thenResolve(JSON.stringify({ _ownerEncSessionKey: \"some key\" }))\n\n\t\t\tconst ownerKey = [1, 2, 3]\n\t\t\tconst sessionKey = [3, 2, 1]\n\t\t\twhen(cryptoFacadeMock.resolveSessionKeyWithOwnerKey(anything(), ownerKey)).thenReturn(sessionKey)\n\n\t\t\tconst result = await entityRestClient.load(CalendarEventTypeRef, [calendarListId, id1], { ownerKeyProvider: async (_) => ownerKey })\n\n\t\t\tconst typeModel = await resolveTypeReference(CalendarEventTypeRef)\n\t\t\tverify(instanceMapperMock.decryptAndMapToInstance(typeModel, anything(), sessionKey))\n\t\t\tverify(cryptoFacadeMock.resolveSessionKey(anything(), anything()), { times: 0 })\n\t\t\to(result as any).deepEquals({\n\t\t\t\t_ownerEncSessionKey: \"some key\",\n\t\t\t\tdecrypted: true,\n\t\t\t\tmigrated: true,\n\t\t\t\tmigratedForInstance: true,\n\t\t\t})\n\t\t})\n\t})\n\n\to.spec(\"Load Range\", function () {\n\t\to(\"Loads a countFrom of entities in a single request\", async function () {\n\t\t\tconst startId = \"42\"\n\t\t\tconst count = 5\n\t\t\tconst listId = \"listId\"\n\n\t\t\twhen(\n\t\t\t\trestClient.request(`${typeRefToPath(CalendarEventTypeRef)}/${listId}`, HttpMethod.GET, {\n\t\t\t\t\theaders: { ...authHeader, v: String(tutanotaModelInfo.version) },\n\t\t\t\t\tqueryParams: { start: startId, count: String(count), reverse: String(false) },\n\t\t\t\t\tresponseType: MediaType.Json,\n\t\t\t\t\tbaseUrl: undefined,\n\t\t\t\t\tsuspensionBehavior: undefined,\n\t\t\t\t}),\n\t\t\t).thenResolve(JSON.stringify([{ instance: 1 }, { instance: 2 }]))\n\n\t\t\tconst result = await entityRestClient.loadRange(CalendarEventTypeRef, listId, startId, count, false)\n\t\t\t// There's some weird optimization for list requests where the types to migrate\n\t\t\t// are hardcoded (e.g. PushIdentifier) for *vaguely gestures* optimization reasons.\n\t\t\to(result as any).deepEquals([\n\t\t\t\t{ instance: 1, /*migrated: true,*/ decrypted: true, migratedForInstance: true },\n\t\t\t\t{ instance: 2, /*migrated: true,*/ decrypted: true, migratedForInstance: true },\n\t\t\t])\n\t\t})\n\n\t\to(\"when loading encrypted instance list and not being logged in it throws an error\", async function () {\n\t\t\tfullyLoggedIn = false\n\t\t\tawait assertThrows(LoginIncompleteError, () => entityRestClient.loadRange(CalendarEventTypeRef, \"listId\", \"startId\", 40, false))\n\t\t\tassertThatNoRequestsWereMade()\n\t\t})\n\t})\n\n\to.spec(\"Load multiple\", function () {\n\t\to(\"Less than 100 entities requested should result in a single rest request\", async function () {\n\t\t\tconst ids = countFrom(0, 5)\n\n\t\t\twhen(\n\t\t\t\trestClient.request(`${typeRefToPath(CustomerTypeRef)}`, HttpMethod.GET, {\n\t\t\t\t\theaders: { ...authHeader, v: String(sysModelInfo.version) },\n\t\t\t\t\tqueryParams: { ids: \"0,1,2,3,4\" },\n\t\t\t\t\tresponseType: MediaType.Json,\n\t\t\t\t\tbaseUrl: undefined,\n\t\t\t\t\tsuspensionBehavior: undefined,\n\t\t\t\t}),\n\t\t\t).thenResolve(JSON.stringify([{ instance: 1 }, { instance: 2 }]))\n\n\t\t\tconst result = await entityRestClient.loadMultiple(CustomerTypeRef, null, ids)\n\n\t\t\t// There's some weird optimization for list requests where the types to migrate\n\t\t\t// are hardcoded (e.g. PushIdentifier) for *vaguely gestures* optimization reasons.\n\t\t\to(result as any).deepEquals([\n\t\t\t\t{ instance: 1, /*migrated: true,*/ decrypted: true, migratedForInstance: true },\n\t\t\t\t{ instance: 2, /*migrated: true,*/ decrypted: true, migratedForInstance: true },\n\t\t\t])\n\t\t})\n\n\t\to(\"Exactly 100 entities requested should result in a single rest request\", async function () {\n\t\t\tconst ids = countFrom(0, 100)\n\n\t\t\twhen(\n\t\t\t\trestClient.request(`${typeRefToPath(CustomerTypeRef)}`, HttpMethod.GET, {\n\t\t\t\t\theaders: { ...authHeader, v: String(sysModelInfo.version) },\n\t\t\t\t\tqueryParams: { ids: ids.join(\",\") },\n\t\t\t\t\tresponseType: MediaType.Json,\n\t\t\t\t\tbaseUrl: undefined,\n\t\t\t\t\tsuspensionBehavior: undefined,\n\t\t\t\t}),\n\t\t\t\t{ times: 1 },\n\t\t\t).thenResolve(JSON.stringify([{ instance: 1 }, { instance: 2 }]))\n\n\t\t\tconst result = await entityRestClient.loadMultiple(CustomerTypeRef, null, ids)\n\t\t\t// There's some weird optimization for list requests where the types to migrate\n\t\t\t// are hardcoded (e.g. PushIdentifier) for *vaguely gestures* optimization reasons.\n\t\t\to(result as any).deepEquals([\n\t\t\t\t{ instance: 1, /*migrated: true,*/ decrypted: true, migratedForInstance: true },\n\t\t\t\t{ instance: 2, /*migrated: true,*/ decrypted: true, migratedForInstance: true },\n\t\t\t])\n\t\t})\n\n\t\to(\"More than 100 entities requested results in 2 rest requests\", async function () {\n\t\t\tconst ids = countFrom(0, 101)\n\n\t\t\twhen(\n\t\t\t\trestClient.request(`${typeRefToPath(CustomerTypeRef)}`, HttpMethod.GET, {\n\t\t\t\t\theaders: { ...authHeader, v: String(sysModelInfo.version) },\n\t\t\t\t\tqueryParams: { ids: countFrom(0, 100).join(\",\") },\n\t\t\t\t\tresponseType: MediaType.Json,\n\t\t\t\t\tbaseUrl: undefined,\n\t\t\t\t\tsuspensionBehavior: undefined,\n\t\t\t\t}),\n\t\t\t\t{ times: 1 },\n\t\t\t).thenResolve(JSON.stringify([{ instance: 1 }]))\n\n\t\t\twhen(\n\t\t\t\trestClient.request(`${typeRefToPath(CustomerTypeRef)}`, HttpMethod.GET, {\n\t\t\t\t\theaders: { ...authHeader, v: String(sysModelInfo.version) },\n\t\t\t\t\tqueryParams: { ids: \"100\" },\n\t\t\t\t\tresponseType: MediaType.Json,\n\t\t\t\t\tbaseUrl: undefined,\n\t\t\t\t\tsuspensionBehavior: undefined,\n\t\t\t\t}),\n\t\t\t\t{ times: 1 },\n\t\t\t).thenResolve(JSON.stringify([{ instance: 2 }]))\n\n\t\t\tconst result = await entityRestClient.loadMultiple(CustomerTypeRef, null, ids)\n\t\t\to(result as any).deepEquals([\n\t\t\t\t{ instance: 1, /*migrated: true,*/ decrypted: true, migratedForInstance: true },\n\t\t\t\t{ instance: 2, /*migrated: true,*/ decrypted: true, migratedForInstance: true },\n\t\t\t])\n\t\t})\n\n\t\to(\"More than 200 entities requested results in 3 rest requests\", async function () {\n\t\t\tconst ids = countFrom(0, 211)\n\n\t\t\twhen(\n\t\t\t\trestClient.request(typeRefToPath(CustomerTypeRef), HttpMethod.GET, {\n\t\t\t\t\theaders: { ...authHeader, v: String(sysModelInfo.version) },\n\t\t\t\t\tqueryParams: { ids: countFrom(0, 100).join(\",\") },\n\t\t\t\t\tresponseType: MediaType.Json,\n\t\t\t\t\tbaseUrl: undefined,\n\t\t\t\t\tsuspensionBehavior: undefined,\n\t\t\t\t}),\n\t\t\t\t{ times: 1 },\n\t\t\t).thenResolve(JSON.stringify([{ instance: 1 }]))\n\n\t\t\twhen(\n\t\t\t\trestClient.request(typeRefToPath(CustomerTypeRef), HttpMethod.GET, {\n\t\t\t\t\theaders: { ...authHeader, v: String(sysModelInfo.version) },\n\t\t\t\t\tqueryParams: { ids: countFrom(100, 100).join(\",\") },\n\t\t\t\t\tresponseType: MediaType.Json,\n\t\t\t\t\tbaseUrl: undefined,\n\t\t\t\t\tsuspensionBehavior: undefined,\n\t\t\t\t}),\n\t\t\t\t{ times: 1 },\n\t\t\t).thenResolve(JSON.stringify([{ instance: 2 }]))\n\n\t\t\twhen(\n\t\t\t\trestClient.request(typeRefToPath(CustomerTypeRef), HttpMethod.GET, {\n\t\t\t\t\theaders: { ...authHeader, v: String(sysModelInfo.version) },\n\t\t\t\t\tqueryParams: { ids: countFrom(200, 11).join(\",\") },\n\t\t\t\t\tresponseType: MediaType.Json,\n\t\t\t\t\tbaseUrl: undefined,\n\t\t\t\t\tsuspensionBehavior: undefined,\n\t\t\t\t}),\n\t\t\t\t{ times: 1 },\n\t\t\t).thenResolve(JSON.stringify([{ instance: 3 }]))\n\n\t\t\tconst result = await entityRestClient.loadMultiple(CustomerTypeRef, null, ids)\n\t\t\to(result as any).deepEquals([\n\t\t\t\t{ instance: 1, /*migrated: true,*/ decrypted: true, migratedForInstance: true },\n\t\t\t\t{ instance: 2, /*migrated: true,*/ decrypted: true, migratedForInstance: true },\n\t\t\t\t{ instance: 3, /*migrated: true,*/ decrypted: true, migratedForInstance: true },\n\t\t\t])\n\t\t})\n\n\t\to(\"when loading encrypted instance list and not being logged in it throws an error\", async function () {\n\t\t\tfullyLoggedIn = false\n\t\t\tawait assertThrows(LoginIncompleteError, () => entityRestClient.loadMultiple(CalendarEventTypeRef, \"listId\", [\"startId\", \"anotherId\"]))\n\t\t\tassertThatNoRequestsWereMade()\n\t\t})\n\n\t\to(\"when loading blob elements a blob access token is requested and the correct headers and parameters are set\", async function () {\n\t\t\tconst ids = countFrom(0, 5)\n\t\t\tconst archiveId = \"archiveId\"\n\t\t\tconst firstServer = \"firstServer\"\n\n\t\t\tconst blobAccessToken = \"123\"\n\t\t\tlet blobServerAccessInfo = createTestEntity(BlobServerAccessInfoTypeRef, {\n\t\t\t\tblobAccessToken,\n\t\t\t\tservers: [createTestEntity(BlobServerUrlTypeRef, { url: firstServer }), createTestEntity(BlobServerUrlTypeRef, { url: \"otherServer\" })],\n\t\t\t})\n\t\t\twhen(blobAccessTokenFacade.requestReadTokenArchive(archiveId)).thenResolve(blobServerAccessInfo)\n\n\t\t\twhen(blobAccessTokenFacade.createQueryParams(blobServerAccessInfo, anything(), anything())).thenDo((blobServerAccessInfo, authHeaders) => {\n\t\t\t\treturn Object.assign({ blobAccessToken: blobServerAccessInfo.blobAccessToken }, authHeaders)\n\t\t\t})\n\n\t\t\twhen(restClient.request(anything(), HttpMethod.GET, anything())).thenResolve(JSON.stringify([{ instance: 1 }, { instance: 2 }]))\n\n\t\t\tconst result = await entityRestClient.loadMultiple(MailDetailsBlobTypeRef, archiveId, ids)\n\n\t\t\tlet expectedOptions = {\n\t\t\t\theaders: {},\n\t\t\t\tqueryParams: { ids: \"0,1,2,3,4\", ...authHeader, blobAccessToken, v: String(tutanotaModelInfo.version) },\n\t\t\t\tresponseType: MediaType.Json,\n\t\t\t\tnoCORS: true,\n\t\t\t\tbaseUrl: firstServer,\n\t\t\t}\n\t\t\tverify(\n\t\t\t\trestClient.request(\n\t\t\t\t\t`${typeRefToPath(MailDetailsBlobTypeRef)}/${archiveId}`,\n\t\t\t\t\tHttpMethod.GET,\n\t\t\t\t\targThat((optionsArg) => {\n\t\t\t\t\t\to(optionsArg.headers).deepEquals(expectedOptions.headers)(\"headers\")\n\t\t\t\t\t\to(optionsArg.responseType).equals(expectedOptions.responseType)(\"responseType\")\n\t\t\t\t\t\to(optionsArg.baseUrl).equals(expectedOptions.baseUrl)(\"baseUrl\")\n\t\t\t\t\t\to(optionsArg.noCORS).equals(expectedOptions.noCORS)(\"noCORS\")\n\t\t\t\t\t\to(optionsArg.queryParams).deepEquals({\n\t\t\t\t\t\t\tblobAccessToken: \"123\",\n\t\t\t\t\t\t\t...authHeader,\n\t\t\t\t\t\t\tids: \"0,1,2,3,4\",\n\t\t\t\t\t\t\tv: String(tutanotaModelInfo.version),\n\t\t\t\t\t\t})\n\t\t\t\t\t\treturn true\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t)\n\n\t\t\t// There's some weird optimization for list requests where the types to migrate\n\t\t\t// are hardcoded (e.g. PushIdentifier) for *vaguely gestures* optimization reasons.\n\t\t\to(result as any).deepEquals([\n\t\t\t\t{ instance: 1, /*migrated: true,*/ decrypted: true, migratedForInstance: true },\n\t\t\t\t{ instance: 2, /*migrated: true,*/ decrypted: true, migratedForInstance: true },\n\t\t\t])\n\t\t})\n\n\t\to(\"when loading blob elements request is retried with another server url if it failed\", async function () {\n\t\t\tconst ids = countFrom(0, 5)\n\t\t\tconst archiveId = \"archiveId\"\n\t\t\tconst firstServer = \"firstServer\"\n\n\t\t\tconst blobAccessToken = \"123\"\n\t\t\tconst otherServer = \"otherServer\"\n\t\t\tconst blobServerAccessInfo = createTestEntity(BlobServerAccessInfoTypeRef, {\n\t\t\t\tblobAccessToken,\n\t\t\t\tservers: [createTestEntity(BlobServerUrlTypeRef, { url: firstServer }), createTestEntity(BlobServerUrlTypeRef, { url: otherServer })],\n\t\t\t})\n\t\t\twhen(blobAccessTokenFacade.requestReadTokenArchive(archiveId)).thenResolve(blobServerAccessInfo)\n\n\t\t\twhen(blobAccessTokenFacade.createQueryParams(blobServerAccessInfo, anything(), anything())).thenDo((blobServerAccessInfo, authHeaders) => {\n\t\t\t\treturn Object.assign({ blobAccessToken: blobServerAccessInfo.blobAccessToken }, authHeaders)\n\t\t\t})\n\n\t\t\twhen(\n\t\t\t\trestClient.request(anything(), HttpMethod.GET, {\n\t\t\t\t\theaders: {},\n\t\t\t\t\tqueryParams: {\n\t\t\t\t\t\tids: \"0,1,2,3,4\",\n\t\t\t\t\t\t...authHeader,\n\t\t\t\t\t\tblobAccessToken,\n\t\t\t\t\t\tv: String(tutanotaModelInfo.version),\n\t\t\t\t\t},\n\t\t\t\t\tresponseType: MediaType.Json,\n\t\t\t\t\tnoCORS: true,\n\t\t\t\t\tbaseUrl: firstServer,\n\t\t\t\t\tsuspensionBehavior: undefined,\n\t\t\t\t}),\n\t\t\t).thenReject(new ConnectionError(\"test connection error for retry\"))\n\t\t\twhen(\n\t\t\t\trestClient.request(anything(), HttpMethod.GET, {\n\t\t\t\t\theaders: {},\n\t\t\t\t\tqueryParams: {\n\t\t\t\t\t\tids: \"0,1,2,3,4\",\n\t\t\t\t\t\t...authHeader,\n\t\t\t\t\t\tblobAccessToken,\n\t\t\t\t\t\tv: String(tutanotaModelInfo.version),\n\t\t\t\t\t},\n\t\t\t\t\tresponseType: MediaType.Json,\n\t\t\t\t\tnoCORS: true,\n\t\t\t\t\tbaseUrl: otherServer,\n\t\t\t\t\tsuspensionBehavior: undefined,\n\t\t\t\t}),\n\t\t\t).thenResolve(JSON.stringify([{ instance: 1 }, { instance: 2 }]))\n\n\t\t\tconst result = await entityRestClient.loadMultiple(MailDetailsBlobTypeRef, archiveId, ids)\n\n\t\t\tverify(restClient.request(`${typeRefToPath(MailDetailsBlobTypeRef)}/${archiveId}`, HttpMethod.GET, anything()), { times: 2 })\n\n\t\t\t// There's some weird optimization for list requests where the types to migrate\n\t\t\t// are hardcoded (e.g. PushIdentifier) for *vaguely gestures* optimization reasons.\n\t\t\to(result as any).deepEquals([\n\t\t\t\t{ instance: 1, /*migrated: true,*/ decrypted: true, migratedForInstance: true },\n\t\t\t\t{ instance: 2, /*migrated: true,*/ decrypted: true, migratedForInstance: true },\n\t\t\t])\n\t\t})\n\n\t\to(\"when loading blob elements without an archiveId it throws\", async function () {\n\t\t\tconst ids = countFrom(0, 5)\n\t\t\tconst archiveId = null\n\n\t\t\tlet result: Array<MailDetailsBlob> | null = null\n\t\t\ttry {\n\t\t\t\tresult = await entityRestClient.loadMultiple(MailDetailsBlobTypeRef, archiveId, ids)\n\t\t\t\to(true).equals(false)(\"loadMultiple should have thrown an exception\")\n\t\t\t} catch (e) {\n\t\t\t\to(e.message).equals(\"archiveId must be set to load BlobElementTypes\")\n\t\t\t}\n\n\t\t\tverify(restClient.request(anything(), anything(), anything()), { times: 0 })\n\t\t\tverify(blobAccessTokenFacade.requestReadTokenArchive(anything()), { times: 0 })\n\n\t\t\to(result).equals(null)\n\t\t})\n\t})\n\n\to.spec(\"Setup\", function () {\n\t\to(\"Setup list entity\", async function () {\n\t\t\tconst v = (await resolveTypeReference(ContactTypeRef)).version\n\t\t\tconst newContact = createTestEntity(ContactTypeRef)\n\t\t\tconst resultId = \"id\"\n\t\t\twhen(\n\t\t\t\trestClient.request(`/rest/tutanota/contact/listId`, HttpMethod.POST, {\n\t\t\t\t\tbaseUrl: undefined,\n\t\t\t\t\theaders: { ...authHeader, v },\n\t\t\t\t\tqueryParams: undefined,\n\t\t\t\t\tresponseType: MediaType.Json,\n\t\t\t\t\tbody: JSON.stringify({ ...newContact, encrypted: true }),\n\t\t\t\t}),\n\t\t\t\t{ times: 1 },\n\t\t\t).thenResolve(JSON.stringify({ generatedId: resultId }))\n\n\t\t\tconst result = await entityRestClient.setup(\"listId\", newContact)\n\t\t\to(result).equals(resultId)\n\t\t})\n\n\t\to(\"Setup list entity throws when no listid is passed\", async function () {\n\t\t\tconst newContact = createTestEntity(ContactTypeRef)\n\t\t\tconst result = await assertThrows(Error, async () => await entityRestClient.setup(null, newContact))\n\t\t\to(result.message).equals(\"List id must be defined for LETs\")\n\t\t})\n\n\t\to(\"Setup entity\", async function () {\n\t\t\tconst v = (await resolveTypeReference(CustomerTypeRef)).version\n\t\t\tconst newCustomer = createTestEntity(CustomerTypeRef)\n\t\t\tconst resultId = \"id\"\n\t\t\twhen(\n\t\t\t\trestClient.request(`/rest/sys/customer`, HttpMethod.POST, {\n\t\t\t\t\tbaseUrl: undefined,\n\t\t\t\t\theaders: { ...authHeader, v },\n\t\t\t\t\tqueryParams: undefined,\n\t\t\t\t\tresponseType: MediaType.Json,\n\t\t\t\t\tbody: JSON.stringify({ ...newCustomer, encrypted: true }),\n\t\t\t\t}),\n\t\t\t\t{ times: 1 },\n\t\t\t).thenResolve(JSON.stringify({ generatedId: resultId }))\n\n\t\t\tconst result = await entityRestClient.setup(null, newCustomer)\n\t\t\to(result).equals(resultId)\n\t\t})\n\n\t\to(\"Setup entity throws when listid is passed\", async function () {\n\t\t\tconst newCustomer = createTestEntity(CustomerTypeRef)\n\t\t\tconst result = await assertThrows(Error, async () => await entityRestClient.setup(\"listId\", newCustomer))\n\t\t\to(result.message).equals(\"List id must not be defined for ETs\")\n\t\t})\n\n\t\to(\"Base URL option is passed to the rest client\", async function () {\n\t\t\twhen(restClient.request(anything(), anything(), anything()), { times: 1 }).thenResolve(JSON.stringify({ generatedId: null }))\n\t\t\tawait entityRestClient.setup(\"listId\", createTestEntity(ContactTypeRef), undefined, { baseUrl: \"some url\" })\n\t\t\tverify(\n\t\t\t\trestClient.request(\n\t\t\t\t\tanything(),\n\t\t\t\t\tHttpMethod.POST,\n\t\t\t\t\targThat((arg) => arg.baseUrl === \"some url\"),\n\t\t\t\t),\n\t\t\t)\n\t\t})\n\n\t\to(\"when ownerKey is passed it is used instead for session key resolution\", async function () {\n\t\t\tconst typeModel = await resolveTypeReference(CustomerServerPropertiesTypeRef)\n\t\t\tconst v = typeModel.version\n\t\t\tconst newCustomerServerProperties = createTestEntity(CustomerServerPropertiesTypeRef, {\n\t\t\t\t_ownerEncSessionKey: new Uint8Array([4, 5, 6]),\n\t\t\t})\n\t\t\tconst resultId = \"id\"\n\t\t\twhen(\n\t\t\t\trestClient.request(`/rest/sys/customerserverproperties`, HttpMethod.POST, {\n\t\t\t\t\tbaseUrl: undefined,\n\t\t\t\t\theaders: { ...authHeader, v },\n\t\t\t\t\tqueryParams: undefined,\n\t\t\t\t\tresponseType: MediaType.Json,\n\t\t\t\t\tbody: JSON.stringify({ ...newCustomerServerProperties, encrypted: true }),\n\t\t\t\t}),\n\t\t\t\t{ times: 1 },\n\t\t\t).thenResolve(JSON.stringify({ generatedId: resultId }))\n\n\t\t\tconst ownerKey = freshVersioned([1, 2, 3])\n\t\t\tconst sessionKey = [3, 2, 1]\n\t\t\twhen(cryptoFacadeMock.setNewOwnerEncSessionKey(typeModel, anything(), ownerKey)).thenResolve(sessionKey)\n\n\t\t\tconst result = await entityRestClient.setup(null, newCustomerServerProperties, undefined, { ownerKey })\n\n\t\t\tverify(instanceMapperMock.encryptAndMapToLiteral(anything(), anything(), sessionKey))\n\t\t\tverify(cryptoFacadeMock.resolveSessionKey(anything(), anything()), { times: 0 })\n\n\t\t\to(result).equals(resultId)\n\t\t})\n\t})\n\n\to.spec(\"Setup multiple\", function () {\n\t\to(\"Less than 100 entities created should result in a single rest request\", async function () {\n\t\t\tconst newContacts = contacts(1)\n\t\t\tconst resultId = \"id1\"\n\t\t\tconst { version } = await resolveTypeReference(ContactTypeRef)\n\n\t\t\twhen(\n\t\t\t\trestClient.request(`/rest/tutanota/contact/listId`, HttpMethod.POST, {\n\t\t\t\t\theaders: { ...authHeader, v: version },\n\t\t\t\t\tqueryParams: { count: \"1\" },\n\t\t\t\t\tresponseType: MediaType.Json,\n\t\t\t\t\tbody: JSON.stringify([{ ...newContacts[0], encrypted: true }]),\n\t\t\t\t}),\n\t\t\t\t{ times: 1 },\n\t\t\t).thenResolve(JSON.stringify([{ generatedId: resultId }]))\n\n\t\t\tconst result = await entityRestClient.setupMultiple(\"listId\", newContacts)\n\t\t\to(result).deepEquals([resultId])\n\t\t})\n\n\t\to(\"Exactly 100 entities created should result in a single rest request\", async function () {\n\t\t\tconst newContacts = contacts(100)\n\t\t\tconst resultIds = countFrom(0, 100).map(String)\n\t\t\tconst { version } = await resolveTypeReference(ContactTypeRef)\n\n\t\t\twhen(\n\t\t\t\trestClient.request(`/rest/tutanota/contact/listId`, HttpMethod.POST, {\n\t\t\t\t\theaders: { ...authHeader, v: version },\n\t\t\t\t\tqueryParams: { count: \"100\" },\n\t\t\t\t\tresponseType: MediaType.Json,\n\t\t\t\t\tbody: JSON.stringify(\n\t\t\t\t\t\tnewContacts.map((c) => {\n\t\t\t\t\t\t\treturn { ...c, encrypted: true }\n\t\t\t\t\t\t}),\n\t\t\t\t\t),\n\t\t\t\t}),\n\t\t\t\t{ times: 1 },\n\t\t\t).thenResolve(\n\t\t\t\tJSON.stringify(\n\t\t\t\t\tresultIds.map((id) => {\n\t\t\t\t\t\treturn { generatedId: id }\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t)\n\n\t\t\tconst result = await entityRestClient.setupMultiple(\"listId\", newContacts)\n\t\t\to(result).deepEquals(resultIds)\n\t\t})\n\n\t\to(\"More than 100 entities created should result in 2 rest requests\", async function () {\n\t\t\tconst newContacts = contacts(101)\n\t\t\tconst resultIds = countFrom(0, 101).map(String)\n\t\t\tconst { version } = await resolveTypeReference(ContactTypeRef)\n\n\t\t\twhen(\n\t\t\t\trestClient.request(`/rest/tutanota/contact/listId`, HttpMethod.POST, {\n\t\t\t\t\theaders: { ...authHeader, v: version },\n\t\t\t\t\tqueryParams: { count: \"100\" },\n\t\t\t\t\tresponseType: MediaType.Json,\n\t\t\t\t\tbody: JSON.stringify(\n\t\t\t\t\t\tnewContacts.slice(0, 100).map((c) => {\n\t\t\t\t\t\t\treturn { ...c, encrypted: true }\n\t\t\t\t\t\t}),\n\t\t\t\t\t),\n\t\t\t\t}),\n\t\t\t\t{ times: 1 },\n\t\t\t).thenResolve(\n\t\t\t\tJSON.stringify(\n\t\t\t\t\tresultIds.slice(0, 100).map((id) => {\n\t\t\t\t\t\treturn { generatedId: id }\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t)\n\n\t\t\twhen(\n\t\t\t\trestClient.request(`/rest/tutanota/contact/listId`, HttpMethod.POST, {\n\t\t\t\t\theaders: { ...authHeader, v: version },\n\t\t\t\t\tqueryParams: { count: \"1\" },\n\t\t\t\t\tresponseType: MediaType.Json,\n\t\t\t\t\tbody: JSON.stringify(\n\t\t\t\t\t\tnewContacts.slice(100).map((c) => {\n\t\t\t\t\t\t\treturn { ...c, encrypted: true }\n\t\t\t\t\t\t}),\n\t\t\t\t\t),\n\t\t\t\t}),\n\t\t\t\t{ times: 1 },\n\t\t\t).thenResolve(\n\t\t\t\tJSON.stringify(\n\t\t\t\t\tresultIds.slice(100).map((id) => {\n\t\t\t\t\t\treturn { generatedId: id }\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t)\n\n\t\t\tconst result = await entityRestClient.setupMultiple(\"listId\", newContacts)\n\t\t\to(result).deepEquals(resultIds)\n\t\t})\n\n\t\to(\"More than 200 entities created should result in 3 rest requests\", async function () {\n\t\t\tconst newContacts = contacts(211)\n\t\t\tconst resultIds = countFrom(0, 211).map(String)\n\t\t\tconst { version } = await resolveTypeReference(ContactTypeRef)\n\n\t\t\twhen(\n\t\t\t\trestClient.request(`/rest/tutanota/contact/listId`, HttpMethod.POST, {\n\t\t\t\t\theaders: { ...authHeader, v: version },\n\t\t\t\t\tqueryParams: { count: \"100\" },\n\t\t\t\t\tresponseType: MediaType.Json,\n\t\t\t\t\tbody: JSON.stringify(\n\t\t\t\t\t\tnewContacts.slice(0, 100).map((c) => {\n\t\t\t\t\t\t\treturn { ...c, encrypted: true }\n\t\t\t\t\t\t}),\n\t\t\t\t\t),\n\t\t\t\t}),\n\t\t\t\t{ times: 1 },\n\t\t\t).thenResolve(\n\t\t\t\tJSON.stringify(\n\t\t\t\t\tresultIds.slice(0, 100).map((id) => {\n\t\t\t\t\t\treturn { generatedId: id }\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t)\n\n\t\t\twhen(\n\t\t\t\trestClient.request(`/rest/tutanota/contact/listId`, HttpMethod.POST, {\n\t\t\t\t\theaders: { ...authHeader, v: version },\n\t\t\t\t\tqueryParams: { count: \"100\" },\n\t\t\t\t\tresponseType: MediaType.Json,\n\t\t\t\t\tbody: JSON.stringify(\n\t\t\t\t\t\tnewContacts.slice(100, 200).map((c) => {\n\t\t\t\t\t\t\treturn { ...c, encrypted: true }\n\t\t\t\t\t\t}),\n\t\t\t\t\t),\n\t\t\t\t}),\n\t\t\t\t{ times: 1 },\n\t\t\t).thenResolve(\n\t\t\t\tJSON.stringify(\n\t\t\t\t\tresultIds.slice(100, 200).map((id) => {\n\t\t\t\t\t\treturn { generatedId: id }\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t)\n\n\t\t\twhen(\n\t\t\t\trestClient.request(`/rest/tutanota/contact/listId`, HttpMethod.POST, {\n\t\t\t\t\theaders: { ...authHeader, v: version },\n\t\t\t\t\tqueryParams: { count: \"11\" },\n\t\t\t\t\tresponseType: MediaType.Json,\n\t\t\t\t\tbody: JSON.stringify(\n\t\t\t\t\t\tnewContacts.slice(200).map((c) => {\n\t\t\t\t\t\t\treturn { ...c, encrypted: true }\n\t\t\t\t\t\t}),\n\t\t\t\t\t),\n\t\t\t\t}),\n\t\t\t\t{ times: 1 },\n\t\t\t).thenResolve(\n\t\t\t\tJSON.stringify(\n\t\t\t\t\tresultIds.slice(200).map((id) => {\n\t\t\t\t\t\treturn { generatedId: id }\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t)\n\n\t\t\tconst result = await entityRestClient.setupMultiple(\"listId\", newContacts)\n\t\t\to(result).deepEquals(resultIds)\n\t\t})\n\n\t\to(\"A single request is made and an error occurs, all entities should be returned as failedInstances\", async function () {\n\t\t\twhen(restClient.request(anything(), anything(), anything())).thenReject(new BadRequestError(\"canny do et\"))\n\n\t\t\tconst newContacts = contacts(100)\n\t\t\tconst result = await assertThrows(SetupMultipleError, () => entityRestClient.setupMultiple(\"listId\", newContacts))\n\t\t\to(result.failedInstances.length).equals(newContacts.length)\n\t\t\to(result.errors.length).equals(1)\n\t\t\to(result.errors[0] instanceof BadRequestError).equals(true)\n\t\t\to(result.failedInstances).deepEquals(newContacts)\n\t\t})\n\n\t\to(\"Post multiple: An error is encountered for part of the request, only failed entities are returned in the result\", async function () {\n\t\t\tlet requestCounter = 0\n\t\t\twhen(restClient.request(anything(), anything(), anything())).thenDo(() => {\n\t\t\t\trequestCounter += 1\n\n\t\t\t\tif (requestCounter % 2 === 0) {\n\t\t\t\t\t// Second and Fourth requests are success\n\t\t\t\t\treturn JSON.stringify(\n\t\t\t\t\t\tcountFrom(0, 100).map((c) => {\n\t\t\t\t\t\t\treturn { generatedId: c }\n\t\t\t\t\t\t}),\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\t// First and Third requests are failure\n\t\t\t\t\tthrow new BadRequestError(\"It was a bad request\")\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tconst newContacts = contacts(400)\n\t\t\tconst result = await assertThrows(SetupMultipleError, () => entityRestClient.setupMultiple(\"listId\", newContacts))\n\t\t\tverify(restClient.request(anything(), anything()), { times: 4, ignoreExtraArgs: true })\n\t\t\to(result.failedInstances).deepEquals(newContacts.slice(0, 100).concat(newContacts.slice(200, 300)))\n\t\t\to(result.errors.length).equals(2)\n\t\t\to(result.errors.every((e) => e instanceof BadRequestError)).equals(true)\n\t\t})\n\n\t\to(\"Post multiple: When a PayloadTooLarge error occurs individual instances are posted\", async function () {\n\t\t\tconst listId = \"listId\"\n\t\t\tconst idArray = [\"0\", null, \"2\"] // GET fails for id 1\n\n\t\t\tlet instances: Contact[] = []\n\n\t\t\tfor (let i = 0; i < idArray.length; i++) {\n\t\t\t\tinstances.push(createTestEntity(ContactTypeRef))\n\t\t\t}\n\n\t\t\tlet step = 0\n\t\t\twhen(restClient.request(anything(), anything(), anything())).thenDo((path: string, method: HttpMethod, { body }) => {\n\t\t\t\t//post multiple - body is an array\n\t\t\t\tif (body && body.startsWith(\"[\")) {\n\t\t\t\t\tthrow new PayloadTooLargeError(\"test\") //post single\n\t\t\t\t} else if (step === 1) {\n\t\t\t\t\tstep += 1\n\t\t\t\t\tthrow new InternalServerError(\"might happen\")\n\t\t\t\t} else {\n\t\t\t\t\treturn JSON.stringify(idArray[step++])\n\t\t\t\t}\n\t\t\t})\n\t\t\tconst result = await assertThrows(SetupMultipleError, async () => {\n\t\t\t\treturn await entityRestClient.setupMultiple(listId, instances)\n\t\t\t})\n\t\t\t//one post multiple and three individual posts\n\t\t\tverify(restClient.request(anything(), anything()), { ignoreExtraArgs: true, times: 4 })\n\t\t\to(result.failedInstances.length).equals(1) //one individual post results in an error\n\n\t\t\to(result.errors.length).equals(1)\n\t\t\to(result.errors[0] instanceof InternalServerError).equals(true)\n\t\t\to(result.failedInstances).deepEquals([instances[1]])\n\t\t})\n\t})\n\n\to.spec(\"Update\", function () {\n\t\to(\"Update entity\", async function () {\n\t\t\tconst { version } = await resolveTypeReference(CustomerTypeRef)\n\t\t\tconst newCustomer = createTestEntity(CustomerTypeRef, {\n\t\t\t\t_id: \"id\",\n\t\t\t})\n\t\t\twhen(\n\t\t\t\trestClient.request(\"/rest/sys/customer/id\", HttpMethod.PUT, {\n\t\t\t\t\theaders: { ...authHeader, v: version },\n\t\t\t\t\tbody: JSON.stringify({ ...newCustomer, encrypted: true }),\n\t\t\t\t}),\n\t\t\t)\n\n\t\t\tawait entityRestClient.update(newCustomer)\n\t\t})\n\n\t\to(\"Update entity throws if entity does not have an id\", async function () {\n\t\t\tconst newCustomer = createTestEntity(CustomerTypeRef)\n\t\t\tconst result = await assertThrows(Error, async () => await entityRestClient.update(newCustomer))\n\t\t\to(result.message).equals(\"Id must be defined\")\n\t\t})\n\n\t\to(\"when ownerKey is passed it is used instead for session key resolution\", async function () {\n\t\t\tconst typeModel = await resolveTypeReference(CustomerServerPropertiesTypeRef)\n\t\t\tconst version = typeModel.version\n\t\t\tconst ownerKeyVersion = 2\n\t\t\tconst newCustomerServerProperties = createTestEntity(CustomerServerPropertiesTypeRef, {\n\t\t\t\t_id: \"id\",\n\t\t\t\t_ownerEncSessionKey: new Uint8Array([4, 5, 6]),\n\t\t\t\t_ownerKeyVersion: String(ownerKeyVersion),\n\t\t\t})\n\t\t\twhen(\n\t\t\t\trestClient.request(\"/rest/sys/customerserverproperties/id\", HttpMethod.PUT, {\n\t\t\t\t\theaders: { ...authHeader, v: version },\n\t\t\t\t\tbody: JSON.stringify({ ...newCustomerServerProperties, encrypted: true }),\n\t\t\t\t}),\n\t\t\t)\n\n\t\t\tconst ownerKey = freshVersioned([1, 2, 3])\n\t\t\tconst sessionKey = [3, 2, 1]\n\t\t\twhen(cryptoFacadeMock.resolveSessionKeyWithOwnerKey(anything(), ownerKey.object)).thenReturn(sessionKey)\n\n\t\t\tawait entityRestClient.update(newCustomerServerProperties, {\n\t\t\t\townerKeyProvider: async (version) => {\n\t\t\t\t\to(version).equals(ownerKeyVersion)\n\t\t\t\t\treturn ownerKey.object\n\t\t\t\t},\n\t\t\t})\n\n\t\t\tverify(instanceMapperMock.encryptAndMapToLiteral(anything(), anything(), sessionKey))\n\t\t\tverify(cryptoFacadeMock.resolveSessionKey(anything(), anything()), { times: 0 })\n\t\t})\n\t})\n\n\to.spec(\"Delete\", function () {\n\t\to(\"Delete entity\", async function () {\n\t\t\tconst { version } = await resolveTypeReference(CustomerTypeRef)\n\t\t\tconst id = \"id\"\n\t\t\tconst newCustomer = createTestEntity(CustomerTypeRef, {\n\t\t\t\t_id: id,\n\t\t\t})\n\t\t\twhen(\n\t\t\t\trestClient.request(\"/rest/sys/customer/id\", HttpMethod.DELETE, {\n\t\t\t\t\theaders: { ...authHeader, v: version },\n\t\t\t\t}),\n\t\t\t)\n\n\t\t\tawait entityRestClient.erase(newCustomer)\n\t\t})\n\t})\n\n\to.spec(\"tryServers\", function () {\n\t\to(\"tryServers successful\", async function () {\n\t\t\tlet servers = [createTestEntity(BlobServerUrlTypeRef, { url: \"w1\" }), createTestEntity(BlobServerUrlTypeRef, { url: \"w2\" })]\n\t\t\tconst mapperMock = func<Mapper<string, object>>()\n\t\t\tconst expectedResult = { response: \"response-from-server\" }\n\t\t\twhen(mapperMock(anything(), anything())).thenResolve(expectedResult)\n\t\t\tconst result = await tryServers(servers, mapperMock, \"error\")\n\t\t\to(result).equals(expectedResult)\n\t\t\tverify(mapperMock(\"w1\", 0), { times: 1 })\n\t\t\tverify(mapperMock(\"w2\", 1), { times: 0 })\n\t\t})\n\n\t\to(\"tryServers error\", async function () {\n\t\t\tlet servers = [createTestEntity(BlobServerUrlTypeRef, { url: \"w1\" }), createTestEntity(BlobServerUrlTypeRef, { url: \"w2\" })]\n\t\t\tconst mapperMock = func<Mapper<string, object>>()\n\t\t\twhen(mapperMock(\"w1\", 0)).thenReject(new ProgrammingError(\"test\"))\n\t\t\tconst e = await assertThrows(ProgrammingError, () => tryServers(servers, mapperMock, \"error\"))\n\t\t\to(e.message).equals(\"test\")\n\t\t\tverify(mapperMock(anything(), anything()), { times: 1 })\n\t\t})\n\n\t\to(\"tryServers ConnectionError and successful response\", async function () {\n\t\t\tlet servers = [createTestEntity(BlobServerUrlTypeRef, { url: \"w1\" }), createTestEntity(BlobServerUrlTypeRef, { url: \"w2\" })]\n\t\t\tconst mapperMock = func<Mapper<string, object>>()\n\t\t\tconst expectedResult = { response: \"response-from-server\" }\n\t\t\twhen(mapperMock(\"w1\", 0)).thenReject(new ConnectionError(\"test\"))\n\t\t\twhen(mapperMock(\"w2\", 1)).thenResolve(expectedResult)\n\t\t\tconst result = await tryServers(servers, mapperMock, \"error\")\n\t\t\to(result).deepEquals(expectedResult)\n\t\t\tverify(mapperMock(anything(), anything()), { times: 2 })\n\t\t})\n\n\t\to(\"tryServers multiple ConnectionError\", async function () {\n\t\t\tlet servers = [createTestEntity(BlobServerUrlTypeRef, { url: \"w1\" }), createTestEntity(BlobServerUrlTypeRef, { url: \"w2\" })]\n\t\t\tconst mapperMock = func<Mapper<string, object>>()\n\t\t\twhen(mapperMock(\"w1\", 0)).thenReject(new ConnectionError(\"test\"))\n\t\t\twhen(mapperMock(\"w2\", 1)).thenReject(new ConnectionError(\"test\"))\n\t\t\tconst e = await assertThrows(ConnectionError, () => tryServers(servers, mapperMock, \"error log msg\"))\n\t\t\to(e.message).equals(\"test\")\n\t\t\tverify(mapperMock(anything(), anything()), { times: 2 })\n\t\t})\n\t})\n\n\to.spec(\"doBlobRequestWithRetry\", function () {\n\t\to(\"retry once after NotAuthorizedError, then fails\", async function () {\n\t\t\tlet blobRequestCallCount = 0\n\t\t\tlet evictCacheCallCount = 0\n\t\t\tlet errorThrown = 0\n\t\t\tconst doBlobRequest = async () => {\n\t\t\t\tblobRequestCallCount += 1\n\t\t\t\tthrow new NotAuthorizedError(\"test error\")\n\t\t\t}\n\t\t\tconst evictCache = () => {\n\t\t\t\tevictCacheCallCount += 1\n\t\t\t}\n\t\t\tawait doBlobRequestWithRetry(doBlobRequest, evictCache).catch(\n\t\t\t\tofClass(NotAuthorizedError, (e) => {\n\t\t\t\t\terrorThrown += 1 // must be thrown\n\t\t\t\t}),\n\t\t\t)\n\t\t\to(errorThrown).equals(1)\n\t\t\to(blobRequestCallCount).equals(2)\n\t\t\to(evictCacheCallCount).equals(1)\n\t\t})\n\n\t\to(\"retry once after NotAuthorizedError, then succeeds\", async function () {\n\t\t\tlet blobRequestCallCount = 0\n\t\t\tlet evictCacheCallCount = 0\n\t\t\tconst doBlobRequest = async () => {\n\t\t\t\t//only throw on first call\n\t\t\t\tif (blobRequestCallCount === 0) {\n\t\t\t\t\tblobRequestCallCount += 1\n\t\t\t\t\tthrow new NotAuthorizedError(\"test error\")\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst evictCache = () => {\n\t\t\t\tevictCacheCallCount += 1\n\t\t\t}\n\t\t\tawait doBlobRequestWithRetry(doBlobRequest, evictCache)\n\t\t\to(blobRequestCallCount).equals(1)\n\t\t\to(evictCacheCallCount).equals(1)\n\t\t})\n\t})\n})\n","import o from \"@tutao/otest\"\nimport {\n\taes256RandomKey,\n\tbitArrayToUint8Array,\n\tgenerateEccKeyPair,\n\thexToRsaPrivateKey,\n\thexToRsaPublicKey,\n\tKeyPairType,\n\tpqKeyPairsToPublicKeys,\n\trsaDecrypt,\n\trsaEncrypt,\n\tRsaKeyPair,\n} from \"@tutao/tutanota-crypto\"\nimport { PQFacade } from \"../../../../../src/common/api/worker/facades/PQFacade.js\"\nimport { WASMKyberFacade } from \"../../../../../src/common/api/worker/facades/KyberFacade.js\"\nimport { loadLibOQSWASM } from \"../WASMTestUtils.js\"\nimport { encodePQMessage } from \"../../../../../src/common/api/worker/facades/PQMessage.js\"\n\nconst privateKey = hexToRsaPrivateKey(\n\t\"02008bb1bbcb2c6915c182b0c7cc93e1d8210181ffee4be4ae81f7a98fdba2d6e37cea72e2124ebb6b05d330ab1ddfbc6d85c9d1c90fc3b65bd9634c3b722fe77ab98f33cc28af975d51609e1c308324501d615cbb82836c33c2a240e00826ddf09460cee7a975c0607579d4f7b707e19287a1c754ba485e04aab664e44cae8fcab770b9bb5c95a271786aa79d6fa11dd21bdb3a08b679bd5f29fc95ab573a3dabcbd8e70aaec0cc2a817eefbc886d3eafea96abd0d5e364b83ccf74f4d18b3546b014fa24b90134179ed952209971211c623a2743da0c3236abd512499920a75651482b43b27c18d477e8735935425933d8f09a12fbf1950cf8a381ef5f2400fcf90200816022249104e1f94e289b6284b36d8f63ee1a31806852965be0d632fc25389ac02795e88eb254f4181bc2def00f7affa5627d6bf43e37e2a56c3cc20c4bbe058cf2d3e9fa759d1f78f3f5f797fd5195644e95fad1ecac235e51e72aa59476f374952b486e9db4b818157d362e3e638ee9edca329c4336df43fd3cd327f8542d1add9798af1d6a9e8cf8f54dd0b6a6f9ed9c3f5d803c220716757871e1442ef407ffe5df44c364bf57a60551b681173747b8df8e4138101f1d048cc1941a5d4c1fd3eda5bc96496eb1892477d811b845a7c9b3333e700989a1134e8f65edbf3a8332baa7195eb6aa33591b6ab41ec8215c6487979df5cf1b9736fd4fea73eee102000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e7a2e7a5cc651614fd17eb10765ef63462e5767745fc849e97095319d42f8cbb1485aba0f590b33208e666e949db0465e483a122467f771a986da6855abb148d0b5c1eefb08636d0aeb36b8ec161497cc9a64704f0976aceb33d09af5408ded1aec771b534f9a27fd9dc3303146ce98872915ed730ed9661eec46b8c0d6b6d37020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000009a632cb2e0a17ee6e363e3e056e5170480a3790023e342cb221431be37d63e692ce572390a379cf470c8a9fa4251a0af84d746b79ff91f6dcf168417137150d93049098ef747a601825982cbbd1ac1c20b3f3ee97b25e1739c31b43e78fc1cd53134dc4e82ebf98c720c34852fbd2288370421b848575f4d054e1d1e66b47f4f02000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b09e8b48e56fd2859072135f4b129f62546228914b80fed239d1f756436f3a3c4faa98b2336bf0e6ded86771cc49beb1beab0b4b2a3bf8e20385e029e083b368d4579a9322a343da9ccadbe14edc527f5ef6754273fcd088e92c4a5d30934eeaccfcf05bbe17f66acc0055b92c72db229a50f3e2db40dda0b0c17e4b9cd3e3c30200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000088861ee6e7e1a7f8c1287a40ce56b3ae159b79caf7f166057fd35fd1984aead1d313eb982942d897088d4a52b606bd13b9632d7400112b0bcdcf596b9693e42ccb982acdb43a35c0abe63fd5af1a54312604fdbb365d5f2afefaad2b798d6869d6a3aa15fb8c75170f5b5fae4f72ef7089462c136c55673f12ebeab0119e97dd02000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d8538fe6ebe9514412692fc985f8fd62b237c51c160c3d49aeeafffa057f2feff8f29040a205895b61dfa3f6188851021dc9e50152f3ea69746f5eb491af4a6dde21db9fa2c6fa61198ea02d6b600ed4267c3871af686c8db12e4bcbaaaa552e157e66fda90d34fce11cfd0f5eea6fbb236818070fb3a13751ad408e4231f499\",\n)\nconst publicKey = hexToRsaPublicKey(\n\t\"02008bb1bbcb2c6915c182b0c7cc93e1d8210181ffee4be4ae81f7a98fdba2d6e37cea72e2124ebb6b05d330ab1ddfbc6d85c9d1c90fc3b65bd9634c3b722fe77ab98f33cc28af975d51609e1c308324501d615cbb82836c33c2a240e00826ddf09460cee7a975c0607579d4f7b707e19287a1c754ba485e04aab664e44cae8fcab770b9bb5c95a271786aa79d6fa11dd21bdb3a08b679bd5f29fc95ab573a3dabcbd8e70aaec0cc2a817eefbc886d3eafea96abd0d5e364b83ccf74f4d18b3546b014fa24b90134179ed952209971211c623a2743da0c3236abd512499920a75651482b43b27c18d477e8735935425933d8f09a12fbf1950cf8a381ef5f2400fcf9\",\n)\n\nexport const RSA_TEST_KEYPAIR: RsaKeyPair = { keyPairType: KeyPairType.RSA, privateKey, publicKey }\n\no.spec(\"RsaPqPerformanceTest\", function () {\n\to.spec(\"perf\", function () {\n\t\tconst iterations = 1\n\n\t\tfunction formatNumber(x) {\n\t\t\treturn x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\")\n\t\t}\n\n\t\to(\"pq\", async function () {\n\t\t\tconst kyberFacade = new WASMKyberFacade(await loadLibOQSWASM())\n\t\t\tconst pqFacade: PQFacade = new PQFacade(kyberFacade)\n\t\t\tconst bucketKey = bitArrayToUint8Array(aes256RandomKey())\n\n\t\t\tconst senderIdentityKeyPair = generateEccKeyPair()\n\t\t\tconst recipientKeys = await pqFacade.generateKeyPairs()\n\n\t\t\tlet start = window.performance.now()\n\t\t\tlet pubEncBucketKey\n\t\t\tfor (let i = 0; i < iterations; i++) {\n\t\t\t\tconst ephemeralKeyPair = generateEccKeyPair()\n\t\t\t\tpubEncBucketKey = await pqFacade.encapsulateAndEncode(senderIdentityKeyPair, ephemeralKeyPair, pqKeyPairsToPublicKeys(recipientKeys), bucketKey)\n\t\t\t}\n\t\t\tlet end = window.performance.now()\n\t\t\tconsole.log(formatNumber((end - start) / iterations) + \"ms per pq encryption\")\n\n\t\t\tlet decryptedBucketKey\n\t\t\tfor (let i = 0; i < iterations; i++) {\n\t\t\t\tdecryptedBucketKey = (await pqFacade.decapsulateEncoded(pubEncBucketKey, recipientKeys)).decryptedSymKeyBytes\n\t\t\t}\n\t\t\tend = window.performance.now()\n\t\t\tconsole.log(formatNumber((end - start) / iterations) + \"ms per pq decryption\")\n\n\t\t\to(bucketKey).deepEquals(decryptedBucketKey)\n\t\t})\n\n\t\to(\"rsa\", async function () {\n\t\t\tconst bucketKey = bitArrayToUint8Array(aes256RandomKey())\n\n\t\t\tconst keyPair = RSA_TEST_KEYPAIR\n\t\t\tlet seed = new Uint8Array(32)\n\t\t\tcrypto.getRandomValues(seed)\n\n\t\t\tlet start = window.performance.now()\n\t\t\tlet pubEncBucketKey\n\t\t\tfor (let i = 0; i < iterations; i++) {\n\t\t\t\tconst ephemeralKeyPair = generateEccKeyPair()\n\t\t\t\tpubEncBucketKey = rsaEncrypt(keyPair.publicKey, bucketKey, seed)\n\t\t\t}\n\t\t\tlet end = window.performance.now()\n\t\t\tconsole.log(formatNumber((end - start) / iterations) + \"ms per rsa encryption\")\n\n\t\t\tlet decryptedBucketKey\n\t\t\tfor (let i = 0; i < iterations; i++) {\n\t\t\t\tdecryptedBucketKey = rsaDecrypt(keyPair.privateKey, pubEncBucketKey)\n\t\t\t}\n\t\t\tend = window.performance.now()\n\t\t\tconsole.log(formatNumber((end - start) / iterations) + \"ms per rsa decryption\")\n\n\t\t\to(bucketKey).deepEquals(decryptedBucketKey)\n\t\t})\n\t})\n})\n","import o from \"@tutao/otest\"\nimport {\n\tarrayEquals,\n\tassertNotNull,\n\thexToUint8Array,\n\tneverNull,\n\tstringToUtf8Uint8Array,\n\tuint8ArrayToBase64,\n\tutf8Uint8ArrayToString,\n\tVersioned,\n} from \"@tutao/tutanota-utils\"\nimport { CryptoFacade } from \"../../../../../src/common/api/worker/crypto/CryptoFacade.js\"\nimport {\n\tasCryptoProtoocolVersion,\n\tBucketPermissionType,\n\tCryptoProtocolVersion,\n\tEncryptionAuthStatus,\n\tGroupType,\n\tPermissionType,\n\tPublicKeyIdentifierType,\n} from \"../../../../../src/common/api/common/TutanotaConstants.js\"\nimport {\n\tBirthdayTypeRef,\n\tContactTypeRef,\n\tFileTypeRef,\n\tInternalRecipientKeyData,\n\tMail,\n\tMailDetailsBlobTypeRef,\n\tMailTypeRef,\n} from \"../../../../../src/common/api/entities/tutanota/TypeRefs.js\"\nimport {\n\tBucketKey,\n\tBucketKeyTypeRef,\n\tBucketPermissionTypeRef,\n\tBucketTypeRef,\n\tcreateBucket,\n\tcreateBucketKey,\n\tcreateBucketPermission,\n\tcreateGroup,\n\tcreateInstanceSessionKey,\n\tcreateKeyPair,\n\tcreatePermission,\n\tcreatePublicKeyGetIn,\n\tcreatePublicKeyGetOut,\n\tcreateTypeInfo,\n\tCustomerAccountTerminationRequestTypeRef,\n\tGroup,\n\tGroupMembershipTypeRef,\n\tGroupTypeRef,\n\tInstanceSessionKey,\n\tInstanceSessionKeyTypeRef,\n\tKeyPairTypeRef,\n\tPermissionTypeRef,\n\tTypeInfoTypeRef,\n\tUpdatePermissionKeyData,\n\tUser,\n\tUserTypeRef,\n} from \"../../../../../src/common/api/entities/sys/TypeRefs.js\"\nimport { spy } from \"@tutao/tutanota-test-utils\"\nimport { RestClient } from \"../../../../../src/common/api/worker/rest/RestClient.js\"\nimport { EntityClient } from \"../../../../../src/common/api/common/EntityClient.js\"\nimport {\n\tAes256Key,\n\taes256RandomKey,\n\taesDecrypt,\n\taesEncrypt,\n\tAesKey,\n\tbitArrayToUint8Array,\n\tdecryptKey,\n\tEccKeyPair,\n\tEccPublicKey,\n\tENABLE_MAC,\n\tencryptKey,\n\tencryptRsaKey,\n\tgenerateEccKeyPair,\n\tIV_BYTE_LENGTH,\n\tkyberPrivateKeyToBytes,\n\tkyberPublicKeyToBytes,\n\tpqKeyPairsToPublicKeys,\n\trandom,\n\trsaPrivateKeyToHex,\n\trsaPublicKeyToHex,\n} from \"@tutao/tutanota-crypto\"\nimport { InstanceMapper } from \"../../../../../src/common/api/worker/crypto/InstanceMapper.js\"\nimport type { TypeModel } from \"../../../../../src/common/api/common/EntityTypes.js\"\nimport { IServiceExecutor } from \"../../../../../src/common/api/common/ServiceRequest.js\"\nimport { matchers, object, verify, when } from \"testdouble\"\nimport { PublicKeyService, UpdatePermissionKeyService } from \"../../../../../src/common/api/entities/sys/Services.js\"\nimport { getListId, isSameId } from \"../../../../../src/common/api/common/utils/EntityUtils.js\"\nimport { HttpMethod, resolveTypeReference, typeModels } from \"../../../../../src/common/api/common/EntityFunctions.js\"\nimport { UserFacade } from \"../../../../../src/common/api/worker/facades/UserFacade.js\"\nimport { SessionKeyNotFoundError } from \"../../../../../src/common/api/common/error/SessionKeyNotFoundError.js\"\nimport { OwnerEncSessionKeysUpdateQueue } from \"../../../../../src/common/api/worker/crypto/OwnerEncSessionKeysUpdateQueue.js\"\nimport { WASMKyberFacade } from \"../../../../../src/common/api/worker/facades/KyberFacade.js\"\nimport { PQFacade } from \"../../../../../src/common/api/worker/facades/PQFacade.js\"\nimport { encodePQMessage, PQBucketKeyEncapsulation } from \"../../../../../src/common/api/worker/facades/PQMessage.js\"\nimport { createTestEntity } from \"../../../TestUtils.js\"\nimport { RSA_TEST_KEYPAIR } from \"../facades/RsaPqPerformanceTest.js\"\nimport { DefaultEntityRestCache } from \"../../../../../src/common/api/worker/rest/DefaultEntityRestCache.js\"\nimport { loadLibOQSWASM } from \"../WASMTestUtils.js\"\nimport { KeyLoaderFacade } from \"../../../../../src/common/api/worker/facades/KeyLoaderFacade.js\"\nimport { AsymmetricCryptoFacade, convertToVersionedPublicKeys } from \"../../../../../src/common/api/worker/crypto/AsymmetricCryptoFacade.js\"\n\nconst { captor, anything, argThat } = matchers\n\nconst kyberFacade = new WASMKyberFacade(await loadLibOQSWASM())\nconst pqFacade: PQFacade = new PQFacade(kyberFacade)\nlet asymmetricCryptoFacade: AsymmetricCryptoFacade\n\n/**\n * Helper to have all the mocked items available in the test case.\n */\ntype TestUser = {\n\tuser: User\n\tname: string\n\tuserGroup: Group\n\tmailGroup: Group\n\tuserGroupKey: AesKey\n\tmailGroupKey: AesKey\n}\n\nconst senderAddress = \"hello@tutao.de\"\n\nasync function prepareBucketKeyInstance(\n\tbucketEncMailSessionKey: Uint8Array,\n\tfileSessionKeys: Array<AesKey>,\n\tbk: number[],\n\tpubEncBucketKey: Uint8Array,\n\trecipientUser: TestUser,\n\tinstanceMapper: InstanceMapper,\n\tmailLiteral: Record<string, any>,\n\tsenderPubEccKey?: Versioned<EccPublicKey>,\n\trecipientKeyVersion: NumberString = \"0\",\n\tprotocolVersion: CryptoProtocolVersion = CryptoProtocolVersion.TUTA_CRYPT,\n) {\n\tconst MailTypeModel = await resolveTypeReference(MailTypeRef)\n\n\tconst mailInstanceSessionKey = createTestEntity(InstanceSessionKeyTypeRef, {\n\t\ttypeInfo: createTestEntity(TypeInfoTypeRef, {\n\t\t\tapplication: MailTypeModel.app,\n\t\t\ttypeId: String(MailTypeModel.id),\n\t\t}),\n\t\tsymEncSessionKey: bucketEncMailSessionKey,\n\t\tinstanceList: \"mailListId\",\n\t\tinstanceId: \"mailId\",\n\t})\n\tconst FileTypeModel = await resolveTypeReference(FileTypeRef)\n\tconst bucketEncSessionKeys = fileSessionKeys.map((fileSessionKey, index) => {\n\t\treturn createTestEntity(InstanceSessionKeyTypeRef, {\n\t\t\ttypeInfo: createTestEntity(TypeInfoTypeRef, {\n\t\t\t\tapplication: FileTypeModel.app,\n\t\t\t\ttypeId: String(FileTypeModel.id),\n\t\t\t}),\n\t\t\tsymEncSessionKey: encryptKey(bk, fileSessionKey),\n\t\t\tinstanceList: \"fileListId\",\n\t\t\tinstanceId: \"fileId\" + (index + 1),\n\t\t})\n\t})\n\tbucketEncSessionKeys.push(mailInstanceSessionKey)\n\n\tconst bucketKey = createTestEntity(BucketKeyTypeRef, {\n\t\tpubEncBucketKey,\n\t\tkeyGroup: recipientUser.userGroup._id,\n\t\tbucketEncSessionKeys: bucketEncSessionKeys,\n\t\trecipientKeyVersion,\n\t\tsenderKeyVersion: senderPubEccKey != null ? senderPubEccKey.version.toString() : \"0\",\n\t\tprotocolVersion,\n\t})\n\n\twhen(\n\t\tasymmetricCryptoFacade.loadKeyPairAndDecryptSymKey(\n\t\t\tassertNotNull(bucketKey.keyGroup),\n\t\t\tNumber(bucketKey.recipientKeyVersion),\n\t\t\tasCryptoProtoocolVersion(bucketKey.protocolVersion),\n\t\t\tpubEncBucketKey,\n\t\t),\n\t).thenResolve({ decryptedAesKey: bk, senderIdentityPubKey: senderPubEccKey?.object ?? null })\n\n\tconst BucketKeyModel = await resolveTypeReference(BucketKeyTypeRef)\n\tconst bucketKeyLiteral = await instanceMapper.encryptAndMapToLiteral(BucketKeyModel, bucketKey, null)\n\tObject.assign(mailLiteral, { bucketKey: bucketKeyLiteral })\n\treturn { MailTypeModel, bucketKey }\n}\n\no.spec(\"CryptoFacadeTest\", function () {\n\tlet restClient: RestClient\n\n\tlet instanceMapper = new InstanceMapper()\n\tlet serviceExecutor: IServiceExecutor\n\tlet entityClient: EntityClient\n\tlet ownerEncSessionKeysUpdateQueue: OwnerEncSessionKeysUpdateQueue\n\tlet crypto: CryptoFacade\n\tlet userFacade: UserFacade\n\tlet keyLoaderFacade: KeyLoaderFacade\n\tlet cache: DefaultEntityRestCache\n\n\to.before(function () {\n\t\trestClient = object()\n\t\twhen(restClient.request(anything(), anything(), anything())).thenResolve(undefined)\n\t\tuserFacade = object()\n\t\tkeyLoaderFacade = object()\n\t\tcache = object()\n\t})\n\n\to.beforeEach(function () {\n\t\tserviceExecutor = object()\n\t\tentityClient = object()\n\t\tasymmetricCryptoFacade = object()\n\t\townerEncSessionKeysUpdateQueue = object()\n\t\tcrypto = new CryptoFacade(\n\t\t\tuserFacade,\n\t\t\tentityClient,\n\t\t\trestClient,\n\t\t\tserviceExecutor,\n\t\t\tinstanceMapper,\n\t\t\townerEncSessionKeysUpdateQueue,\n\t\t\tcache,\n\t\t\tkeyLoaderFacade,\n\t\t\tasymmetricCryptoFacade,\n\t\t)\n\t})\n\n\to(\"resolve session key: unencrypted instance\", async function () {\n\t\tconst dummyDate = new Date().getTime().toString()\n\t\tconst customerAccountTerminationRequestLiteral = {\n\t\t\t_format: 0,\n\t\t\tterminationDate: dummyDate,\n\t\t\tterminationRequestDate: dummyDate,\n\t\t\tcustomer: \"customerId\",\n\t\t}\n\t\tconst CustomerAccountTerminationTypeModel = await resolveTypeReference(CustomerAccountTerminationRequestTypeRef)\n\t\to(await crypto.resolveSessionKey(CustomerAccountTerminationTypeModel, customerAccountTerminationRequestLiteral)).equals(null)\n\t})\n\n\to(\"resolve session key: _ownerEncSessionKey instance.\", async function () {\n\t\tconst recipientUser = createTestUser(\"Bob\", entityClient)\n\t\tconfigureLoggedInUser(recipientUser, userFacade, keyLoaderFacade)\n\t\tlet subject = \"this is our subject\"\n\t\tlet confidential = true\n\t\tlet senderName = \"TutanotaTeam\"\n\t\tconst sk = aes256RandomKey()\n\n\t\tconst mail = createMailLiteral(recipientUser.mailGroupKey, sk, subject, confidential, senderName, recipientUser.name, recipientUser.mailGroup._id)\n\n\t\tconst MailTypeModel = await resolveTypeReference(MailTypeRef)\n\t\tconst sessionKey: AesKey = neverNull(await crypto.resolveSessionKey(MailTypeModel, mail))\n\n\t\to(sessionKey).deepEquals(sk)\n\t})\n\n\to(\"resolve session key: _ownerEncSessionKey instance, fetches correct version.\", async function () {\n\t\tconst recipientUser = createTestUser(\"Bob\", entityClient)\n\t\tconfigureLoggedInUser(recipientUser, userFacade, keyLoaderFacade)\n\t\tlet subject = \"this is our subject\"\n\t\tlet confidential = true\n\t\tlet senderName = \"TutanotaTeam\"\n\t\tconst sk = aes256RandomKey()\n\n\t\tconst groupKey_v1 = aes256RandomKey()\n\t\twhen(keyLoaderFacade.loadSymGroupKey(recipientUser.mailGroup._id, 1)).thenResolve(groupKey_v1)\n\t\tconst mail = createMailLiteral(groupKey_v1, sk, subject, confidential, senderName, recipientUser.name, recipientUser.mailGroup._id)\n\t\tmail._ownerKeyVersion = \"1\"\n\n\t\tconst MailTypeModel = await resolveTypeReference(MailTypeRef)\n\t\tconst sessionKey: AesKey = neverNull(await crypto.resolveSessionKey(MailTypeModel, mail))\n\n\t\to(sessionKey).deepEquals(sk)\n\t})\n\n\tconst protocolVersion = CryptoProtocolVersion.TUTA_CRYPT\n\to(\"resolve session key: rsa public key decryption of session key.\", async function () {\n\t\to.timeout(500) // in CI or with debugging it can take a while\n\t\tconst recipientUser = createTestUser(\"Bob\", entityClient)\n\t\tconfigureLoggedInUser(recipientUser, userFacade, keyLoaderFacade)\n\n\t\tlet subject = \"this is our subject\"\n\t\tlet confidential = true\n\t\tlet senderName = \"TutanotaTeam\"\n\t\tlet sk = aes256RandomKey()\n\t\tlet bk = aes256RandomKey()\n\t\tlet privateKey = RSA_TEST_KEYPAIR.privateKey\n\t\tlet publicKey = RSA_TEST_KEYPAIR.publicKey\n\t\tconst keyPair = createTestEntity(KeyPairTypeRef, {\n\t\t\t_id: \"keyPairId\",\n\t\t\tsymEncPrivRsaKey: encryptRsaKey(recipientUser.userGroupKey, privateKey),\n\t\t\tpubRsaKey: hexToUint8Array(rsaPublicKeyToHex(RSA_TEST_KEYPAIR.publicKey)),\n\t\t})\n\t\trecipientUser.userGroup.currentKeys = keyPair\n\n\t\tconst mail = createMailLiteral(null, sk, subject, confidential, senderName, recipientUser.name, recipientUser.mailGroup._id)\n\n\t\tconst bucket = createTestEntity(BucketTypeRef, {\n\t\t\tbucketPermissions: \"bucketPermissionListId\",\n\t\t})\n\t\tconst permission = createTestEntity(PermissionTypeRef, {\n\t\t\t_id: [\"permissionListId\", \"permissionId\"],\n\t\t\t_ownerGroup: recipientUser.userGroup._id,\n\t\t\tbucketEncSessionKey: encryptKey(bk, sk),\n\t\t\tbucket,\n\t\t\ttype: PermissionType.Public,\n\t\t})\n\t\tconst pubEncBucketKey = object<Uint8Array>()\n\t\tconst bucketPermission = createTestEntity(BucketPermissionTypeRef, {\n\t\t\t_id: [\"bucketPermissionListId\", \"bucketPermissionId\"],\n\t\t\t_ownerGroup: recipientUser.userGroup._id,\n\t\t\ttype: BucketPermissionType.Public,\n\t\t\tgroup: recipientUser.userGroup._id,\n\t\t\tpubEncBucketKey,\n\t\t\tprotocolVersion: protocolVersion,\n\t\t\tpubKeyVersion: \"0\",\n\t\t})\n\n\t\twhen(\n\t\t\tasymmetricCryptoFacade.loadKeyPairAndDecryptSymKey(\n\t\t\t\tassertNotNull(bucketPermission.group),\n\t\t\t\tNumber(bucketPermission.pubKeyVersion),\n\t\t\t\tprotocolVersion,\n\t\t\t\tpubEncBucketKey,\n\t\t\t),\n\t\t).thenResolve({ decryptedAesKey: bk, senderIdentityPubKey: null })\n\t\twhen(entityClient.loadAll(BucketPermissionTypeRef, getListId(bucketPermission))).thenResolve([bucketPermission])\n\t\twhen(entityClient.loadAll(PermissionTypeRef, getListId(permission))).thenResolve([permission])\n\t\twhen(\n\t\t\tserviceExecutor.post(\n\t\t\t\tUpdatePermissionKeyService,\n\t\t\t\targThat((p: UpdatePermissionKeyData) => {\n\t\t\t\t\treturn isSameId(p.permission, permission._id) && isSameId(p.bucketPermission, bucketPermission._id)\n\t\t\t\t}),\n\t\t\t),\n\t\t).thenResolve(undefined)\n\n\t\tconst MailTypeModel = await resolveTypeReference(MailTypeRef)\n\t\tconst sessionKey = neverNull(await crypto.resolveSessionKey(MailTypeModel, mail))\n\n\t\to(sessionKey).deepEquals(sk)\n\t})\n\n\to(\"resolve session key: pq public key decryption of session key.\", async function () {\n\t\to.timeout(500) // in CI or with debugging it can take a while\n\n\t\tlet subject = \"this is our subject\"\n\t\tlet confidential = true\n\t\tlet senderName = \"TutanotaTeam\"\n\n\t\tconst recipientTestUser = createTestUser(\"Bob\", entityClient)\n\t\tconfigureLoggedInUser(recipientTestUser, userFacade, keyLoaderFacade)\n\n\t\tlet pqKeyPairs = await pqFacade.generateKeyPairs()\n\n\t\tconst senderIdentityKeyPair = generateEccKeyPair()\n\n\t\t// configure test mail\n\t\tlet sk = aes256RandomKey()\n\t\tlet bk = aes256RandomKey()\n\n\t\tconst mail = createMailLiteral(null, sk, subject, confidential, senderName, recipientTestUser.name, recipientTestUser.mailGroup._id)\n\t\tconst bucket = createBucket({\n\t\t\tbucketPermissions: \"bucketPermissionListId\",\n\t\t})\n\t\tconst permission = createPermission({\n\t\t\t_format: \"\",\n\t\t\tlistElementApplication: null,\n\t\t\tlistElementTypeId: null,\n\t\t\tops: null,\n\t\t\tsymEncSessionKey: null,\n\t\t\tsymKeyVersion: null,\n\t\t\t_id: [\"permissionListId\", \"permissionId\"],\n\t\t\t_ownerGroup: recipientTestUser.mailGroup._id,\n\t\t\tbucketEncSessionKey: encryptKey(bk, sk),\n\t\t\tbucket,\n\t\t\ttype: PermissionType.Public,\n\t\t\t_ownerEncSessionKey: null,\n\t\t\t_ownerKeyVersion: null,\n\t\t\t_permissions: \"p_id\",\n\t\t\tgroup: null,\n\t\t})\n\t\tconst pubEncBucketKey = await pqFacade.encapsulateAndEncode(\n\t\t\tsenderIdentityKeyPair,\n\t\t\tgenerateEccKeyPair(),\n\t\t\tpqKeyPairsToPublicKeys(pqKeyPairs),\n\t\t\tbitArrayToUint8Array(bk),\n\t\t)\n\t\tconst protocolVersion = CryptoProtocolVersion.RSA\n\t\tconst bucketPermission = createBucketPermission({\n\t\t\t_id: [\"bucketPermissionListId\", \"bucketPermissionId\"],\n\t\t\t_format: \"\",\n\t\t\t_permissions: \"\",\n\t\t\t_ownerGroup: recipientTestUser.mailGroup._id,\n\t\t\ttype: BucketPermissionType.Public,\n\t\t\tgroup: recipientTestUser.userGroup._id,\n\t\t\tpubEncBucketKey,\n\t\t\tsenderKeyVersion: \"0\",\n\t\t\townerEncBucketKey: null,\n\t\t\townerKeyVersion: null,\n\t\t\tprotocolVersion,\n\t\t\tpubKeyVersion: \"0\",\n\t\t\tsymEncBucketKey: null,\n\t\t\tsymKeyVersion: null,\n\t\t})\n\n\t\twhen(\n\t\t\tasymmetricCryptoFacade.loadKeyPairAndDecryptSymKey(\n\t\t\t\tassertNotNull(bucketPermission.group),\n\t\t\t\tNumber(bucketPermission.pubKeyVersion),\n\t\t\t\tprotocolVersion,\n\t\t\t\tpubEncBucketKey,\n\t\t\t),\n\t\t).thenResolve({ decryptedAesKey: bk, senderIdentityPubKey: senderIdentityKeyPair.publicKey })\n\n\t\twhen(userFacade.createAuthHeaders()).thenReturn({})\n\t\twhen(restClient.request(anything(), HttpMethod.PUT, anything())).thenResolve(undefined)\n\t\twhen(entityClient.loadAll(BucketPermissionTypeRef, getListId(bucketPermission))).thenResolve([bucketPermission])\n\t\twhen(entityClient.loadAll(PermissionTypeRef, getListId(permission))).thenResolve([permission])\n\n\t\tconst MailTypeModel = await resolveTypeReference(MailTypeRef)\n\t\tconst sessionKey = neverNull(await crypto.resolveSessionKey(MailTypeModel, mail))\n\n\t\to(sessionKey).deepEquals(sk)\n\t})\n\n\to(\"resolve session key: pq public key decryption of session key, fetches correct recipient key version\", async function () {\n\t\to.timeout(500) // in CI or with debugging it can take a while\n\n\t\tlet subject = \"this is our subject\"\n\t\tlet confidential = true\n\t\tlet senderName = \"TutanotaTeam\"\n\n\t\tconst recipientTestUser = createTestUser(\"Bob\", entityClient)\n\t\tconfigureLoggedInUser(recipientTestUser, userFacade, keyLoaderFacade)\n\n\t\tconst pqKeyPairs_v1 = await pqFacade.generateKeyPairs()\n\n\t\tconst senderIdentityKeyPair = generateEccKeyPair()\n\n\t\t// configure test mail\n\t\tconst sk = aes256RandomKey()\n\t\tconst bk = aes256RandomKey()\n\n\t\tconst mail = createMailLiteral(null, sk, subject, confidential, senderName, recipientTestUser.name, recipientTestUser.mailGroup._id)\n\t\tconst bucket = createBucket({\n\t\t\tbucketPermissions: \"bucketPermissionListId\",\n\t\t})\n\t\tconst permission = createPermission({\n\t\t\t_format: \"\",\n\t\t\tlistElementApplication: null,\n\t\t\tlistElementTypeId: null,\n\t\t\tops: null,\n\t\t\tsymEncSessionKey: null,\n\t\t\tsymKeyVersion: null,\n\t\t\t_id: [\"permissionListId\", \"permissionId\"],\n\t\t\t_ownerGroup: recipientTestUser.mailGroup._id,\n\t\t\tbucketEncSessionKey: encryptKey(bk, sk),\n\t\t\tbucket,\n\t\t\ttype: PermissionType.Public,\n\t\t\t_ownerEncSessionKey: null,\n\t\t\t_ownerKeyVersion: null,\n\t\t\t_permissions: \"p_id\",\n\t\t\tgroup: null,\n\t\t})\n\t\tconst pubEncBucketKey = await pqFacade.encapsulateAndEncode(\n\t\t\tsenderIdentityKeyPair,\n\t\t\tgenerateEccKeyPair(),\n\t\t\tpqKeyPairsToPublicKeys(pqKeyPairs_v1),\n\t\t\tbitArrayToUint8Array(bk),\n\t\t)\n\t\tconst protocolVersion = CryptoProtocolVersion.RSA\n\t\tconst bucketPermission = createBucketPermission({\n\t\t\t_id: [\"bucketPermissionListId\", \"bucketPermissionId\"],\n\t\t\t_format: \"\",\n\t\t\t_permissions: \"\",\n\t\t\t_ownerGroup: recipientTestUser.mailGroup._id,\n\t\t\ttype: BucketPermissionType.Public,\n\t\t\tgroup: recipientTestUser.userGroup._id,\n\t\t\tpubEncBucketKey,\n\t\t\tsenderKeyVersion: \"0\",\n\t\t\townerEncBucketKey: null,\n\t\t\townerKeyVersion: null,\n\t\t\tprotocolVersion: \"0\",\n\t\t\tpubKeyVersion: \"1\",\n\t\t\tsymEncBucketKey: null,\n\t\t\tsymKeyVersion: null,\n\t\t})\n\n\t\twhen(\n\t\t\tasymmetricCryptoFacade.loadKeyPairAndDecryptSymKey(\n\t\t\t\tassertNotNull(bucketPermission.group),\n\t\t\t\tNumber(bucketPermission.pubKeyVersion),\n\t\t\t\tprotocolVersion,\n\t\t\t\tpubEncBucketKey,\n\t\t\t),\n\t\t).thenResolve({ decryptedAesKey: bk, senderIdentityPubKey: senderIdentityKeyPair.publicKey })\n\t\twhen(userFacade.createAuthHeaders()).thenReturn({})\n\t\twhen(restClient.request(anything(), HttpMethod.PUT, anything())).thenResolve(undefined)\n\t\twhen(entityClient.loadAll(BucketPermissionTypeRef, getListId(bucketPermission))).thenResolve([bucketPermission])\n\t\twhen(entityClient.loadAll(PermissionTypeRef, getListId(permission))).thenResolve([permission])\n\n\t\tconst MailTypeModel = await resolveTypeReference(MailTypeRef)\n\t\tconst sessionKey = neverNull(await crypto.resolveSessionKey(MailTypeModel, mail))\n\n\t\to(sessionKey).deepEquals(sk)\n\t})\n\n\to(\"resolve session key: pq public key decryption of session key using bucketKey\", async function () {\n\t\to.timeout(500) // in CI or with debugging it can take a while\n\n\t\tlet subject = \"this is our subject\"\n\t\tlet confidential = true\n\t\tlet senderName = \"TutanotaTeam\"\n\n\t\tconst recipientTestUser = createTestUser(\"Bob\", entityClient)\n\t\tconfigureLoggedInUser(recipientTestUser, userFacade, keyLoaderFacade)\n\n\t\tconst pqKeyPairs_v1 = await pqFacade.generateKeyPairs()\n\n\t\tconst senderIdentityKeyPair = generateEccKeyPair()\n\n\t\t// configure test mail\n\t\tconst sk = aes256RandomKey()\n\t\tconst bk = aes256RandomKey()\n\n\t\tconst mail = createMailLiteral(null, sk, subject, confidential, senderName, recipientTestUser.name, recipientTestUser.mailGroup._id)\n\t\tconst bucketEncMailSessionKey = encryptKey(bk, sk)\n\t\tconst pubEncBucketKey = await pqFacade.encapsulateAndEncode(\n\t\t\tsenderIdentityKeyPair,\n\t\t\tgenerateEccKeyPair(),\n\t\t\tpqKeyPairsToPublicKeys(pqKeyPairs_v1),\n\t\t\tbitArrayToUint8Array(bk),\n\t\t)\n\n\t\tObject.assign(mail, { mailDetails: [\"mailDetailsArchiveId\", \"mailDetailsId\"] })\n\n\t\tconst senderKeyVersion = 1\n\t\tawait prepareBucketKeyInstance(\n\t\t\tbucketEncMailSessionKey,\n\t\t\t[],\n\t\t\tbk,\n\t\t\tpubEncBucketKey,\n\t\t\trecipientTestUser,\n\t\t\tinstanceMapper,\n\t\t\tmail,\n\t\t\t{\n\t\t\t\tobject: senderIdentityKeyPair.publicKey,\n\t\t\t\tversion: senderKeyVersion,\n\t\t\t},\n\t\t\t\"1\",\n\t\t\tprotocolVersion,\n\t\t)\n\n\t\twhen(\n\t\t\tasymmetricCryptoFacade.decryptSymKeyWithKeyPair(\n\t\t\t\t{\n\t\t\t\t\tkeyPairType: pqKeyPairs_v1.keyPairType,\n\t\t\t\t\teccKeyPair: pqKeyPairs_v1.eccKeyPair,\n\t\t\t\t\tkyberKeyPair: pqKeyPairs_v1.kyberKeyPair,\n\t\t\t\t},\n\t\t\t\tprotocolVersion,\n\t\t\t\tpubEncBucketKey,\n\t\t\t),\n\t\t).thenResolve({ decryptedAesKey: bk, senderIdentityPubKey: senderIdentityKeyPair.publicKey })\n\t\twhen(userFacade.createAuthHeaders()).thenReturn({})\n\t\twhen(restClient.request(anything(), HttpMethod.PUT, anything())).thenResolve(undefined)\n\t\twhen(\n\t\t\tasymmetricCryptoFacade.authenticateSender(\n\t\t\t\t{\n\t\t\t\t\tidentifier: senderAddress,\n\t\t\t\t\tidentifierType: PublicKeyIdentifierType.MAIL_ADDRESS,\n\t\t\t\t},\n\t\t\t\tsenderIdentityKeyPair.publicKey,\n\t\t\t\tsenderKeyVersion,\n\t\t\t),\n\t\t).thenResolve(EncryptionAuthStatus.TUTACRYPT_AUTHENTICATION_SUCCEEDED)\n\n\t\tconst MailTypeModel = await resolveTypeReference(MailTypeRef)\n\t\tconst sessionKey = neverNull(await crypto.resolveSessionKey(MailTypeModel, mail))\n\n\t\to(sessionKey).deepEquals(sk)\n\t})\n\n\to(\"enforceSessionKeyUpdateIfNeeded: _ownerEncSessionKey already defined\", async function () {\n\t\tconst files = [createTestEntity(FileTypeRef, { _ownerEncSessionKey: new Uint8Array() })]\n\t\tawait crypto.enforceSessionKeyUpdateIfNeeded({}, files)\n\t\tverify(ownerEncSessionKeysUpdateQueue.postUpdateSessionKeysService(anything()), { times: 0 })\n\t\tverify(cache.deleteFromCacheIfExists(anything(), anything(), anything()), { times: 0 })\n\t})\n\n\to(\"enforceSessionKeyUpdateIfNeeded: _ownerEncSessionKey missing\", async function () {\n\t\to.timeout(500) // in CI or with debugging it can take a while\n\t\tconst files = [\n\t\t\tcreateTestEntity(FileTypeRef, { _id: [\"listId\", \"1\"], _ownerEncSessionKey: new Uint8Array() }),\n\t\t\tcreateTestEntity(FileTypeRef, { _id: [\"listId\", \"2\"], _ownerEncSessionKey: null }),\n\t\t]\n\n\t\tconst testData = await preparePqPubEncBucketKeyResolveSessionKeyTest()\n\t\tObject.assign(testData.mailLiteral, { body: \"bodyId\" })\n\t\tconst mail = createTestEntity(MailTypeRef, testData.mailLiteral)\n\n\t\twhen(serviceExecutor.get(PublicKeyService, anything())).thenResolve(\n\t\t\tcreatePublicKeyGetOut({\n\t\t\t\tpubEccKey: testData.senderIdentityKeyPair.publicKey,\n\t\t\t\tpubKeyVersion: \"0\",\n\t\t\t\tpubKyberKey: null,\n\t\t\t\tpubRsaKey: null,\n\t\t\t}),\n\t\t)\n\n\t\t// const sessionKey = neverNull(await crypto.resolveSessionKey(testData.MailTypeModel, testData.mailLiteral))\n\t\tconst updatedFiles = await crypto.enforceSessionKeyUpdateIfNeeded(mail, files)\n\t\tverify(ownerEncSessionKeysUpdateQueue.postUpdateSessionKeysService(anything()), { times: 1 })\n\t\tverify(cache.deleteFromCacheIfExists(FileTypeRef, \"listId\", \"2\"))\n\t})\n\n\to(\"encryptBucketKeyForInternalRecipient with existing PQKeys for sender and recipient\", async () => {\n\t\tconst cryptoFacadeTmp = new CryptoFacade(\n\t\t\tuserFacade,\n\t\t\tentityClient,\n\t\t\trestClient,\n\t\t\tserviceExecutor,\n\t\t\tinstanceMapper,\n\t\t\townerEncSessionKeysUpdateQueue,\n\t\t\tcache,\n\t\t\tkeyLoaderFacade,\n\t\t\tasymmetricCryptoFacade,\n\t\t)\n\t\tlet senderMailAddress = \"alice@tutanota.com\"\n\t\tlet recipientMailAddress = \"bob@tutanota.com\"\n\t\tlet senderGroupKey = aes256RandomKey()\n\t\tlet bk = aes256RandomKey()\n\n\t\tconst recipientKeyPairs = await pqFacade.generateKeyPairs()\n\n\t\tconst recipientKeyPair = createKeyPair({\n\t\t\t_id: \"recipientKeyPairId\",\n\t\t\tpubEccKey: recipientKeyPairs.eccKeyPair.publicKey,\n\t\t\tsymEncPrivEccKey: null,\n\t\t\tpubKyberKey: kyberPublicKeyToBytes(recipientKeyPairs.kyberKeyPair.publicKey),\n\t\t\tsymEncPrivKyberKey: null,\n\t\t\tpubRsaKey: null,\n\t\t\tsymEncPrivRsaKey: null,\n\t\t})\n\n\t\tconst senderKeyPairs = await pqFacade.generateKeyPairs()\n\n\t\tconst senderKeyPair = createKeyPair({\n\t\t\t_id: \"senderKeyPairId\",\n\t\t\tpubRsaKey: null,\n\t\t\tsymEncPrivRsaKey: null,\n\t\t\tpubEccKey: senderKeyPairs.eccKeyPair.publicKey,\n\t\t\tsymEncPrivEccKey: aesEncrypt(senderGroupKey, senderKeyPairs.eccKeyPair.privateKey),\n\t\t\tpubKyberKey: kyberPublicKeyToBytes(senderKeyPairs.kyberKeyPair.publicKey),\n\t\t\tsymEncPrivKyberKey: aesEncrypt(senderGroupKey, kyberPrivateKeyToBytes(senderKeyPairs.kyberKeyPair.privateKey)),\n\t\t})\n\n\t\tconst senderUserGroup = createGroup({\n\t\t\t_format: \"\",\n\t\t\t_ownerGroup: \"\",\n\t\t\t_permissions: \"\",\n\t\t\tadmin: \"admin1\",\n\t\t\tadminGroupEncGKey: null,\n\t\t\tadminGroupKeyVersion: null,\n\t\t\tadministratedGroups: null,\n\t\t\tarchives: [],\n\t\t\tcustomer: \"customer1\",\n\t\t\tenabled: false,\n\t\t\texternal: false,\n\t\t\tgroupInfo: [\"\", \"\"],\n\t\t\tinvitations: \"\",\n\t\t\tmembers: \"\",\n\t\t\tstorageCounter: \"counter1\",\n\t\t\ttype: \"\",\n\t\t\tuser: \"user1\",\n\t\t\t_id: \"userGroupId\",\n\t\t\tcurrentKeys: senderKeyPair,\n\t\t\tgroupKeyVersion: \"0\",\n\t\t\tformerGroupKeys: null,\n\t\t\tpubAdminGroupEncGKey: null,\n\t\t})\n\t\twhen(keyLoaderFacade.loadCurrentKeyPair(senderUserGroup._id)).thenResolve({ version: 0, object: senderKeyPairs })\n\n\t\tconst notFoundRecipients = []\n\t\tconst pqEncapsulation: PQBucketKeyEncapsulation = {\n\t\t\tkyberCipherText: new Uint8Array([1]),\n\t\t\tkekEncBucketKey: new Uint8Array([2]),\n\t\t}\n\n\t\tconst encodedPqMessage: Uint8Array = encodePQMessage({\n\t\t\tsenderIdentityPubKey: senderKeyPair.pubEccKey!,\n\t\t\tephemeralPubKey: senderKeyPair.pubEccKey!,\n\t\t\tencapsulation: pqEncapsulation,\n\t\t})\n\n\t\tconst recipientPublicKeyGetOut = createPublicKeyGetOut({\n\t\t\tpubKeyVersion: \"0\",\n\t\t\tpubEccKey: recipientKeyPair.pubEccKey,\n\t\t\tpubKyberKey: recipientKeyPair.pubKyberKey,\n\t\t\tpubRsaKey: null,\n\t\t})\n\t\twhen(\n\t\t\tserviceExecutor.get(\n\t\t\t\tPublicKeyService,\n\t\t\t\tcreatePublicKeyGetIn({ identifierType: PublicKeyIdentifierType.MAIL_ADDRESS, identifier: recipientMailAddress, version: null }),\n\t\t\t),\n\t\t).thenResolve(recipientPublicKeyGetOut)\n\t\twhen(\n\t\t\tserviceExecutor.get(\n\t\t\t\tPublicKeyService,\n\t\t\t\tcreatePublicKeyGetIn({ identifierType: PublicKeyIdentifierType.MAIL_ADDRESS, identifier: senderMailAddress, version: \"0\" }),\n\t\t\t),\n\t\t).thenResolve(\n\t\t\tcreatePublicKeyGetOut({\n\t\t\t\tpubKeyVersion: \"0\",\n\t\t\t\tpubEccKey: senderKeyPair.pubEccKey,\n\t\t\t\tpubKyberKey: senderKeyPair.pubKyberKey,\n\t\t\t\tpubRsaKey: null,\n\t\t\t}),\n\t\t)\n\t\twhen(entityClient.load(GroupTypeRef, senderUserGroup._id)).thenResolve(senderUserGroup)\n\t\twhen(keyLoaderFacade.getCurrentSymGroupKey(senderUserGroup._id)).thenResolve({ object: senderGroupKey, version: 0 })\n\t\twhen(asymmetricCryptoFacade.asymEncryptSymKey(bk, convertToVersionedPublicKeys(recipientPublicKeyGetOut), senderUserGroup._id)).thenResolve({\n\t\t\trecipientKeyVersion: Number(recipientPublicKeyGetOut.pubKeyVersion),\n\t\t\tsenderKeyVersion: Number(senderUserGroup.groupKeyVersion),\n\t\t\tpubEncSymKeyBytes: encodedPqMessage,\n\t\t\tcryptoProtocolVersion: CryptoProtocolVersion.TUTA_CRYPT,\n\t\t})\n\n\t\tconst internalRecipientKeyData = (await cryptoFacadeTmp.encryptBucketKeyForInternalRecipient(\n\t\t\tsenderUserGroup._id,\n\t\t\tbk,\n\t\t\trecipientMailAddress,\n\t\t\tnotFoundRecipients,\n\t\t)) as InternalRecipientKeyData\n\n\t\to(internalRecipientKeyData!.recipientKeyVersion).equals(\"0\")\n\t\to(internalRecipientKeyData.protocolVersion).equals(CryptoProtocolVersion.TUTA_CRYPT)\n\t\to(internalRecipientKeyData!.mailAddress).equals(recipientMailAddress)\n\t\to(internalRecipientKeyData!.pubEncBucketKey).deepEquals(encodedPqMessage)\n\t\tverify(serviceExecutor.put(PublicKeyService, anything()), { times: 0 })\n\t})\n\n\to(\"encryptBucketKeyForInternalRecipient with existing PQKeys for sender\", async () => {\n\t\tconst cryptoFacadeTmp = new CryptoFacade(\n\t\t\tuserFacade,\n\t\t\tentityClient,\n\t\t\trestClient,\n\t\t\tserviceExecutor,\n\t\t\tinstanceMapper,\n\t\t\townerEncSessionKeysUpdateQueue,\n\t\t\tcache,\n\t\t\tkeyLoaderFacade,\n\t\t\tasymmetricCryptoFacade,\n\t\t)\n\t\tlet senderMailAddress = \"alice@tutanota.com\"\n\t\tlet recipientMailAddress = \"bob@tutanota.com\"\n\t\tlet senderGroupKey = aes256RandomKey()\n\t\tlet bk = aes256RandomKey()\n\n\t\tconst recipientKeyPairs = RSA_TEST_KEYPAIR\n\n\t\tconst recipientKeyPair = createKeyPair({\n\t\t\t_id: \"recipientKeyPairId\",\n\t\t\tpubRsaKey: hexToUint8Array(rsaPublicKeyToHex(recipientKeyPairs.publicKey)),\n\t\t\tsymEncPrivRsaKey: aesEncrypt(senderGroupKey, hexToUint8Array(rsaPrivateKeyToHex(recipientKeyPairs.privateKey))),\n\t\t\tpubEccKey: null,\n\t\t\tpubKyberKey: null,\n\t\t\tsymEncPrivEccKey: null,\n\t\t\tsymEncPrivKyberKey: null,\n\t\t})\n\n\t\tconst senderKeyPairs = await pqFacade.generateKeyPairs()\n\n\t\tconst senderKeyPair = createKeyPair({\n\t\t\t_id: \"senderKeyPairId\",\n\t\t\tpubEccKey: senderKeyPairs.eccKeyPair.publicKey,\n\t\t\tsymEncPrivEccKey: aesEncrypt(senderGroupKey, senderKeyPairs.eccKeyPair.privateKey),\n\t\t\tpubKyberKey: kyberPublicKeyToBytes(senderKeyPairs.kyberKeyPair.publicKey),\n\t\t\tsymEncPrivKyberKey: aesEncrypt(senderGroupKey, kyberPrivateKeyToBytes(senderKeyPairs.kyberKeyPair.privateKey)),\n\t\t\tpubRsaKey: null,\n\t\t\tsymEncPrivRsaKey: null,\n\t\t})\n\n\t\tconst senderUserGroup = createGroup({\n\t\t\t_id: \"userGroupId\",\n\t\t\tcurrentKeys: senderKeyPair,\n\t\t\tgroupKeyVersion: \"0\",\n\t\t\t_permissions: \"\",\n\t\t\tadmin: null,\n\t\t\tadminGroupEncGKey: null,\n\t\t\tadminGroupKeyVersion: null,\n\t\t\tadministratedGroups: null,\n\t\t\tarchives: [],\n\t\t\tcustomer: null,\n\t\t\tenabled: false,\n\t\t\texternal: false,\n\t\t\tgroupInfo: [\"\", \"\"],\n\t\t\tinvitations: \"\",\n\t\t\tmembers: \"\",\n\t\t\tstorageCounter: null,\n\t\t\ttype: \"\",\n\t\t\tuser: null,\n\t\t\tformerGroupKeys: null,\n\t\t\tpubAdminGroupEncGKey: null,\n\t\t})\n\t\twhen(keyLoaderFacade.loadCurrentKeyPair(senderUserGroup._id)).thenResolve({ version: 0, object: senderKeyPairs })\n\t\tconst notFoundRecipients = []\n\n\t\tconst recipientPublicKeyGetOut = createPublicKeyGetOut({\n\t\t\tpubKeyVersion: \"0\",\n\t\t\tpubRsaKey: recipientKeyPair.pubRsaKey,\n\t\t\tpubEccKey: null,\n\t\t\tpubKyberKey: null,\n\t\t})\n\t\twhen(\n\t\t\tserviceExecutor.get(\n\t\t\t\tPublicKeyService,\n\t\t\t\tcreatePublicKeyGetIn({ identifierType: PublicKeyIdentifierType.MAIL_ADDRESS, identifier: recipientMailAddress, version: null }),\n\t\t\t),\n\t\t).thenResolve(recipientPublicKeyGetOut)\n\t\twhen(\n\t\t\tserviceExecutor.get(\n\t\t\t\tPublicKeyService,\n\t\t\t\tcreatePublicKeyGetIn({ identifierType: PublicKeyIdentifierType.MAIL_ADDRESS, identifier: senderMailAddress, version: null }),\n\t\t\t),\n\t\t).thenResolve(\n\t\t\tcreatePublicKeyGetOut({\n\t\t\t\tpubKeyVersion: \"0\",\n\t\t\t\tpubEccKey: senderKeyPair.pubEccKey,\n\t\t\t\tpubKyberKey: senderKeyPair.pubKyberKey,\n\t\t\t\t_ownerGroup: \"\",\n\t\t\t\tpubRsaKey: null,\n\t\t\t}),\n\t\t)\n\t\twhen(entityClient.load(GroupTypeRef, senderUserGroup._id)).thenResolve(senderUserGroup)\n\t\twhen(keyLoaderFacade.getCurrentSymGroupKey(senderUserGroup._id)).thenResolve({ object: senderGroupKey, version: 0 })\n\t\tconst pubEncBucketKey = object<Uint8Array>()\n\t\twhen(asymmetricCryptoFacade.asymEncryptSymKey(bk, convertToVersionedPublicKeys(recipientPublicKeyGetOut), senderUserGroup._id)).thenResolve({\n\t\t\trecipientKeyVersion: Number(recipientPublicKeyGetOut.pubKeyVersion),\n\t\t\tsenderKeyVersion: Number(senderUserGroup.groupKeyVersion),\n\t\t\tpubEncSymKeyBytes: pubEncBucketKey,\n\t\t\tcryptoProtocolVersion: CryptoProtocolVersion.RSA,\n\t\t})\n\n\t\tconst internalRecipientKeyData = (await cryptoFacadeTmp.encryptBucketKeyForInternalRecipient(\n\t\t\tsenderUserGroup._id,\n\t\t\tbk,\n\t\t\trecipientMailAddress,\n\t\t\tnotFoundRecipients,\n\t\t)) as InternalRecipientKeyData\n\n\t\to(internalRecipientKeyData!.recipientKeyVersion).equals(\"0\")\n\t\to(internalRecipientKeyData!.mailAddress).equals(recipientMailAddress)\n\t\to(internalRecipientKeyData.protocolVersion).equals(CryptoProtocolVersion.RSA)\n\t\to(internalRecipientKeyData.pubEncBucketKey).deepEquals(pubEncBucketKey)\n\t\tverify(serviceExecutor.put(PublicKeyService, anything()), { times: 0 })\n\t})\n\n\to(\"authenticateSender | sender is authenticated for correct SenderIdentityKey\", async function () {\n\t\to.timeout(500) // in CI or with debugging it can take a while\n\t\tconst testData = await preparePqPubEncBucketKeyResolveSessionKeyTest()\n\t\tObject.assign(testData.mailLiteral, { body: \"bodyId\" })\n\n\t\tconst senderKeyVersion = \"0\"\n\t\twhen(\n\t\t\tasymmetricCryptoFacade.authenticateSender(\n\t\t\t\t{\n\t\t\t\t\tidentifier: senderAddress,\n\t\t\t\t\tidentifierType: PublicKeyIdentifierType.MAIL_ADDRESS,\n\t\t\t\t},\n\t\t\t\ttestData.senderIdentityKeyPair.publicKey,\n\t\t\t\tNumber(senderKeyVersion),\n\t\t\t),\n\t\t).thenResolve(EncryptionAuthStatus.TUTACRYPT_AUTHENTICATION_SUCCEEDED)\n\n\t\tconst sessionKey = neverNull(await crypto.resolveSessionKey(testData.MailTypeModel, testData.mailLiteral))\n\n\t\to(sessionKey).deepEquals(testData.sk)\n\n\t\tconst updatedInstanceSessionKeysCaptor = captor()\n\t\tverify(ownerEncSessionKeysUpdateQueue.updateInstanceSessionKeys(updatedInstanceSessionKeysCaptor.capture(), anything()))\n\t\tconst updatedInstanceSessionKeys = updatedInstanceSessionKeysCaptor.value as Array<InstanceSessionKey>\n\t\to(updatedInstanceSessionKeys.length).equals(testData.bucketKey.bucketEncSessionKeys.length)\n\t\tconst mailInstanceSessionKey = updatedInstanceSessionKeys.find((instanceSessionKey) =>\n\t\t\tisSameId([instanceSessionKey.instanceList, instanceSessionKey.instanceId], testData.mailLiteral._id),\n\t\t)\n\n\t\tconst actualAutStatus = utf8Uint8ArrayToString(aesDecrypt(testData.sk, neverNull(mailInstanceSessionKey).encryptionAuthStatus!))\n\t\to(actualAutStatus).deepEquals(EncryptionAuthStatus.TUTACRYPT_AUTHENTICATION_SUCCEEDED)\n\t})\n\n\to(\"authenticateSender | sender is authenticated for correct SenderIdentityKey from system@tutanota.de\", async function () {\n\t\to.timeout(500) // in CI or with debugging it can take a while\n\t\tconst testData = await preparePqPubEncBucketKeyResolveSessionKeyTest([], false)\n\t\tObject.assign(testData.mailLiteral, { body: \"bodyId\" })\n\n\t\tconst senderKeyVersion = \"0\"\n\t\tconst senderIdentifier = \"system@tutanota.de\"\n\t\twhen(\n\t\t\tasymmetricCryptoFacade.authenticateSender(\n\t\t\t\t{\n\t\t\t\t\tidentifier: senderIdentifier,\n\t\t\t\t\tidentifierType: PublicKeyIdentifierType.MAIL_ADDRESS,\n\t\t\t\t},\n\t\t\t\ttestData.senderIdentityKeyPair.publicKey,\n\t\t\t\tNumber(senderKeyVersion),\n\t\t\t),\n\t\t).thenResolve(EncryptionAuthStatus.TUTACRYPT_AUTHENTICATION_SUCCEEDED)\n\n\t\tconst sessionKey = neverNull(await crypto.resolveSessionKey(testData.MailTypeModel, testData.mailLiteral))\n\n\t\to(sessionKey).deepEquals(testData.sk)\n\n\t\tconst updatedInstanceSessionKeysCaptor = captor()\n\t\tverify(ownerEncSessionKeysUpdateQueue.updateInstanceSessionKeys(updatedInstanceSessionKeysCaptor.capture(), anything()))\n\t\tconst updatedInstanceSessionKeys = updatedInstanceSessionKeysCaptor.value as Array<InstanceSessionKey>\n\t\to(updatedInstanceSessionKeys.length).equals(testData.bucketKey.bucketEncSessionKeys.length)\n\t\tconst mailInstanceSessionKey = updatedInstanceSessionKeys.find((instanceSessionKey) =>\n\t\t\tisSameId([instanceSessionKey.instanceList, instanceSessionKey.instanceId], testData.mailLiteral._id),\n\t\t)\n\n\t\tconst actualAutStatus = utf8Uint8ArrayToString(aesDecrypt(testData.sk, neverNull(mailInstanceSessionKey).encryptionAuthStatus!))\n\t\to(actualAutStatus).deepEquals(EncryptionAuthStatus.TUTACRYPT_AUTHENTICATION_SUCCEEDED)\n\t})\n\n\to(\"authenticateSender | sender is not authenticated for incorrect SenderIdentityKey\", async function () {\n\t\to.timeout(500) // in CI or with debugging it can take a while\n\t\tconst testData = await preparePqPubEncBucketKeyResolveSessionKeyTest()\n\t\tObject.assign(testData.mailLiteral, { body: \"bodyId\" })\n\n\t\tconst senderKeyVersion = \"0\"\n\t\twhen(\n\t\t\tasymmetricCryptoFacade.authenticateSender(\n\t\t\t\t{\n\t\t\t\t\tidentifier: senderAddress,\n\t\t\t\t\tidentifierType: PublicKeyIdentifierType.MAIL_ADDRESS,\n\t\t\t\t},\n\t\t\t\ttestData.senderIdentityKeyPair.publicKey,\n\t\t\t\tNumber(senderKeyVersion),\n\t\t\t),\n\t\t).thenResolve(EncryptionAuthStatus.TUTACRYPT_AUTHENTICATION_FAILED)\n\n\t\tconst sessionKey = neverNull(await crypto.resolveSessionKey(testData.MailTypeModel, testData.mailLiteral))\n\n\t\to(sessionKey).deepEquals(testData.sk)\n\n\t\tconst updatedInstanceSessionKeysCaptor = captor()\n\t\tverify(ownerEncSessionKeysUpdateQueue.updateInstanceSessionKeys(updatedInstanceSessionKeysCaptor.capture(), anything()))\n\t\tconst updatedInstanceSessionKeys = updatedInstanceSessionKeysCaptor.value as Array<InstanceSessionKey>\n\t\to(updatedInstanceSessionKeys.length).equals(testData.bucketKey.bucketEncSessionKeys.length)\n\t\tconst mailInstanceSessionKey = updatedInstanceSessionKeys.find((instanceSessionKey) =>\n\t\t\tisSameId([instanceSessionKey.instanceList, instanceSessionKey.instanceId], testData.mailLiteral._id),\n\t\t)\n\n\t\tconst actualAutStatus = utf8Uint8ArrayToString(aesDecrypt(testData.sk, neverNull(mailInstanceSessionKey).encryptionAuthStatus!))\n\t\to(actualAutStatus).deepEquals(EncryptionAuthStatus.TUTACRYPT_AUTHENTICATION_FAILED)\n\t})\n\n\to(\"authenticateSender | no authentication needed for sender with RSAKeypair\", async function () {\n\t\to.timeout(500) // in CI or with debugging it can take a while\n\t\tconst testData = await prepareRsaPubEncBucketKeyResolveSessionKeyTest()\n\t\tObject.assign(testData.mailLiteral, { body: \"bodyId\" })\n\n\t\tconst sessionKey = neverNull(await crypto.resolveSessionKey(testData.MailTypeModel, testData.mailLiteral))\n\t\to(sessionKey).deepEquals(testData.sk)\n\n\t\tconst updatedInstanceSessionKeysCaptor = captor()\n\t\tverify(ownerEncSessionKeysUpdateQueue.updateInstanceSessionKeys(updatedInstanceSessionKeysCaptor.capture(), anything()), { times: 1 })\n\t\tconst updatedInstanceSessionKeys = updatedInstanceSessionKeysCaptor.value as Array<InstanceSessionKey>\n\t\to(updatedInstanceSessionKeys.length).equals(testData.bucketKey.bucketEncSessionKeys.length)\n\t\tconst mailInstanceSessionKey = updatedInstanceSessionKeys.find((instanceSessionKey) =>\n\t\t\tisSameId([instanceSessionKey.instanceList, instanceSessionKey.instanceId], testData.mailLiteral._id),\n\t\t)\n\n\t\tconst actualAutStatus = utf8Uint8ArrayToString(aesDecrypt(testData.sk, neverNull(mailInstanceSessionKey).encryptionAuthStatus!))\n\t\to(actualAutStatus).deepEquals(EncryptionAuthStatus.RSA_NO_AUTHENTICATION)\n\t})\n\n\to(\"authenticateSender | no authentication needed for secure external recipient\", async function () {\n\t\to.timeout(500) // in CI or with debugging it can take a while\n\t\tconst file1SessionKey = aes256RandomKey()\n\t\tconst file2SessionKey = aes256RandomKey()\n\t\tconst testData = await prepareConfidentialMailToExternalRecipient([file1SessionKey, file2SessionKey])\n\t\tObject.assign(testData.mailLiteral, { mailDetails: [\"mailDetailsArchiveId\", \"mailDetailsId\"] })\n\n\t\tconst mailSessionKey = neverNull(await crypto.resolveSessionKey(testData.MailTypeModel, testData.mailLiteral))\n\t\to(mailSessionKey).deepEquals(testData.sk)\n\n\t\tconst updatedInstanceSessionKeysCaptor = captor()\n\t\tverify(ownerEncSessionKeysUpdateQueue.updateInstanceSessionKeys(updatedInstanceSessionKeysCaptor.capture(), anything()), { times: 1 })\n\t\tconst updatedInstanceSessionKeys = updatedInstanceSessionKeysCaptor.value as Array<InstanceSessionKey>\n\t\to(updatedInstanceSessionKeys.length).equals(testData.bucketKey.bucketEncSessionKeys.length)\n\t\tconst mailInstanceSessionKey = updatedInstanceSessionKeys.find((instanceSessionKey) =>\n\t\t\tisSameId([instanceSessionKey.instanceList, instanceSessionKey.instanceId], testData.mailLiteral._id),\n\t\t)\n\n\t\tconst actualAutStatus = utf8Uint8ArrayToString(aesDecrypt(testData.sk, neverNull(mailInstanceSessionKey).encryptionAuthStatus!))\n\t\to(actualAutStatus).deepEquals(EncryptionAuthStatus.AES_NO_AUTHENTICATION)\n\t})\n\n\to(\"authenticateSender | no authentication needed for secure external sender\", async function () {\n\t\t//o.timeout(500) // in CI or with debugging it can take a while\n\t\tconst testData = await prepareConfidentialReplyFromExternalUser()\n\t\tconst externalUser = testData.externalUser\n\n\t\tconst mailSessionKey = neverNull(await crypto.resolveSessionKey(testData.MailTypeModel, testData.mailLiteral))\n\t\to(mailSessionKey).deepEquals(testData.sk)\n\n\t\tconst mailCaptor = matchers.captor()\n\t\tconst userCaptor = matchers.captor()\n\t\tverify(keyLoaderFacade.loadSymGroupKey(externalUser.userGroup._id, Number(externalUser.mailGroup.adminGroupKeyVersion), userCaptor.capture()))\n\t\tverify(keyLoaderFacade.loadSymGroupKey(externalUser.mailGroup._id, testData.recipientKeyVersion, mailCaptor.capture()))\n\t\to(userCaptor.value.version).equals(Number(externalUser.userGroup.groupKeyVersion))\n\t\to(mailCaptor.value.version).equals(Number(externalUser.mailGroup.groupKeyVersion))\n\n\t\tconst updatedInstanceSessionKeysCaptor = captor()\n\t\tverify(ownerEncSessionKeysUpdateQueue.updateInstanceSessionKeys(updatedInstanceSessionKeysCaptor.capture(), anything()), { times: 1 })\n\t\tconst updatedInstanceSessionKeys = updatedInstanceSessionKeysCaptor.value as Array<InstanceSessionKey>\n\t\to(updatedInstanceSessionKeys.length).equals(testData.bucketKey.bucketEncSessionKeys.length)\n\t\tconst mailInstanceSessionKey = updatedInstanceSessionKeys.find((instanceSessionKey) =>\n\t\t\tisSameId([instanceSessionKey.instanceList, instanceSessionKey.instanceId], testData.mailLiteral._id),\n\t\t)\n\n\t\tconst actualAutStatus = utf8Uint8ArrayToString(aesDecrypt(testData.sk, neverNull(mailInstanceSessionKey).encryptionAuthStatus!))\n\t\to(actualAutStatus).deepEquals(EncryptionAuthStatus.AES_NO_AUTHENTICATION)\n\t})\n\n\to.spec(\"instance migrations\", function () {\n\t\to.beforeEach(function () {\n\t\t\twhen(entityClient.update(anything())).thenResolve(undefined)\n\t\t})\n\t\to(\"contact migration without birthday\", async function () {\n\t\t\tconst contact = createTestEntity(ContactTypeRef)\n\n\t\t\tconst migratedContact = await crypto.applyMigrationsForInstance(contact)\n\n\t\t\to(migratedContact.birthdayIso).equals(null)\n\t\t\tverify(entityClient.update(anything()), { times: 0 })\n\t\t})\n\n\t\to(\"contact migration without existing birthday\", async function () {\n\t\t\tconst contact = createTestEntity(ContactTypeRef, {\n\t\t\t\tbirthdayIso: \"2019-05-01\",\n\t\t\t})\n\n\t\t\tconst migratedContact = await crypto.applyMigrationsForInstance(contact)\n\n\t\t\to(migratedContact.birthdayIso).equals(\"2019-05-01\")\n\t\t\tverify(entityClient.update(anything()), { times: 0 })\n\t\t})\n\n\t\to(\"contact migration without existing birthday and oldBirthdayDate\", async function () {\n\t\t\tconst contact = createTestEntity(ContactTypeRef, {\n\t\t\t\t_id: [\"listid\", \"id\"],\n\t\t\t\tbirthdayIso: \"2019-05-01\",\n\t\t\t\toldBirthdayDate: new Date(2000, 4, 1),\n\t\t\t})\n\n\t\t\tconst migratedContact = await crypto.applyMigrationsForInstance(contact)\n\t\t\to(migratedContact.birthdayIso).equals(\"2019-05-01\")\n\t\t\to(migratedContact.oldBirthdayAggregate).equals(null)\n\t\t\to(migratedContact.oldBirthdayDate).equals(null)\n\t\t\tverify(entityClient.update(anything()), { times: 1 })\n\t\t})\n\n\t\to(\"contact migration with existing birthday and oldBirthdayAggregate\", async function () {\n\t\t\tconst contact = createTestEntity(ContactTypeRef, {\n\t\t\t\t_id: [\"listid\", \"id\"],\n\t\t\t\tbirthdayIso: \"2019-05-01\",\n\t\t\t\toldBirthdayAggregate: createTestEntity(BirthdayTypeRef, {\n\t\t\t\t\tday: \"01\",\n\t\t\t\t\tmonth: \"05\",\n\t\t\t\t\tyear: \"2000\",\n\t\t\t\t}),\n\t\t\t})\n\n\t\t\tconst migratedContact = await crypto.applyMigrationsForInstance(contact)\n\n\t\t\to(migratedContact.birthdayIso).equals(\"2019-05-01\")\n\t\t\to(migratedContact.oldBirthdayAggregate).equals(null)\n\t\t\to(migratedContact.oldBirthdayDate).equals(null)\n\t\t\tverify(entityClient.update(anything()), { times: 1 })\n\t\t})\n\n\t\to(\"contact migration from oldBirthdayAggregate\", async function () {\n\t\t\tconst contact = createTestEntity(ContactTypeRef, {\n\t\t\t\t_id: [\"listid\", \"id\"],\n\t\t\t\toldBirthdayDate: new Date(1800, 4, 1),\n\t\t\t\toldBirthdayAggregate: createTestEntity(BirthdayTypeRef, {\n\t\t\t\t\tday: \"01\",\n\t\t\t\t\tmonth: \"05\",\n\t\t\t\t\tyear: \"2000\",\n\t\t\t\t}),\n\t\t\t})\n\n\t\t\tconst migratedContact = await crypto.applyMigrationsForInstance(contact)\n\n\t\t\to(migratedContact.birthdayIso).equals(\"2000-05-01\")\n\t\t\to(migratedContact.oldBirthdayAggregate).equals(null)\n\t\t\to(migratedContact.oldBirthdayDate).equals(null)\n\t\t\tverify(entityClient.update(anything()), { times: 1 })\n\t\t})\n\n\t\to(\"contact migration from oldBirthdayDate\", async function () {\n\t\t\tconst contact = createTestEntity(ContactTypeRef, {\n\t\t\t\t_id: [\"listid\", \"id\"],\n\t\t\t\tbirthdayIso: null,\n\t\t\t\toldBirthdayDate: new Date(1800, 4, 1),\n\t\t\t\toldBirthdayAggregate: null,\n\t\t\t})\n\n\t\t\tconst migratedContact = await crypto.applyMigrationsForInstance(contact)\n\n\t\t\to(migratedContact.birthdayIso).equals(\"1800-05-01\")\n\t\t\to(migratedContact.oldBirthdayAggregate).equals(null)\n\t\t\to(migratedContact.oldBirthdayDate).equals(null)\n\t\t\tverify(entityClient.update(anything()), { times: 1 })\n\t\t})\n\n\t\to(\"contact migration from oldBirthdayAggregate without year\", async function () {\n\t\t\tconst contact = createTestEntity(ContactTypeRef, {\n\t\t\t\t_id: [\"listid\", \"id\"],\n\t\t\t\tbirthdayIso: null,\n\t\t\t\toldBirthdayDate: null,\n\t\t\t\toldBirthdayAggregate: createTestEntity(BirthdayTypeRef, {\n\t\t\t\t\tday: \"01\",\n\t\t\t\t\tmonth: \"05\",\n\t\t\t\t\tyear: null,\n\t\t\t\t}),\n\t\t\t})\n\n\t\t\tconst migratedContact = await crypto.applyMigrationsForInstance(contact)\n\n\t\t\to(migratedContact.birthdayIso).equals(\"--05-01\")\n\t\t\to(migratedContact.oldBirthdayAggregate).equals(null)\n\t\t\to(migratedContact.oldBirthdayDate).equals(null)\n\t\t\tverify(entityClient.update(anything()), { times: 1 })\n\t\t})\n\t})\n\n\to(\"resolve session key: rsa public key decryption of mail session key using BucketKey aggregated type - Mail referencing MailBody\", async function () {\n\t\to.timeout(500) // in CI or with debugging it can take a while\n\t\tconst testData = await prepareRsaPubEncBucketKeyResolveSessionKeyTest()\n\t\tObject.assign(testData.mailLiteral, { body: \"bodyId\" })\n\n\t\tconst sessionKey = neverNull(await crypto.resolveSessionKey(testData.MailTypeModel, testData.mailLiteral))\n\n\t\to(sessionKey).deepEquals(testData.sk)\n\t})\n\n\to(\"resolve session key: rsa public key decryption of session key using BucketKey aggregated type - Mail referencing MailDetailsDraft\", async function () {\n\t\to.timeout(500) // in CI or with debugging it can take a while\n\t\tconst testData = await prepareRsaPubEncBucketKeyResolveSessionKeyTest()\n\t\tObject.assign(testData.mailLiteral, { mailDetailsDraft: [\"draftDetailsListId\", \"draftDetailsId\"] })\n\n\t\tconst sessionKey = neverNull(await crypto.resolveSessionKey(testData.MailTypeModel, testData.mailLiteral))\n\n\t\to(sessionKey).deepEquals(testData.sk)\n\t})\n\n\to(\n\t\t\"resolve session key: rsa public key decryption of mail session key using BucketKey aggregated type - already decoded/decrypted Mail referencing MailDetailsDraft\",\n\t\tasync function () {\n\t\t\to.timeout(500) // in CI or with debugging it can take a while\n\t\t\tconst testData = await prepareRsaPubEncBucketKeyResolveSessionKeyTest()\n\t\t\tObject.assign(testData.mailLiteral, {\n\t\t\t\tmailDetailsDraft: [\"draftDetailsListId\", \"draftDetailsId\"],\n\t\t\t})\n\n\t\t\tconst mailInstance = await instanceMapper.decryptAndMapToInstance<Mail>(testData.MailTypeModel, testData.mailLiteral, testData.sk)\n\n\t\t\t// do not use testdouble here because it's hard to not break the function itself and then verify invocations\n\t\t\tconst decryptAndMapToInstance = (instanceMapper.decryptAndMapToInstance = spy(instanceMapper.decryptAndMapToInstance))\n\t\t\tconst convertBucketKeyToInstanceIfNecessary = (crypto.convertBucketKeyToInstanceIfNecessary = spy(crypto.convertBucketKeyToInstanceIfNecessary))\n\n\t\t\tconst sessionKey = neverNull(await crypto.resolveSessionKey(testData.MailTypeModel, mailInstance))\n\t\t\to(decryptAndMapToInstance.invocations.length).equals(0)\n\t\t\to(convertBucketKeyToInstanceIfNecessary.invocations.length).equals(1)\n\n\t\t\to(sessionKey).deepEquals(testData.sk)\n\t\t},\n\t)\n\n\to(\"resolve session key: rsa public key decryption of session key using BucketKey aggregated type - Mail referencing MailDetailsBlob\", async function () {\n\t\to.timeout(500) // in CI or with debugging it can take a while\n\t\tconst testData = await prepareRsaPubEncBucketKeyResolveSessionKeyTest()\n\t\tObject.assign(testData.mailLiteral, { mailDetails: [\"mailDetailsArchiveId\", \"mailDetailsId\"] })\n\n\t\tconst sessionKey = neverNull(await crypto.resolveSessionKey(testData.MailTypeModel, testData.mailLiteral))\n\n\t\to(sessionKey).deepEquals(testData.sk)\n\t})\n\n\to(\n\t\t\"resolve session key: rsa public key decryption of session key using BucketKey aggregated type - Mail referencing MailDetailsBlob with attachments\",\n\t\tasync function () {\n\t\t\to.timeout(500) // in CI or with debugging it can take a while\n\t\t\tconst file1SessionKey = aes256RandomKey()\n\t\t\tconst file2SessionKey = aes256RandomKey()\n\t\t\tconst testData = await prepareRsaPubEncBucketKeyResolveSessionKeyTest([file1SessionKey, file2SessionKey])\n\t\t\tObject.assign(testData.mailLiteral, { mailDetails: [\"mailDetailsArchiveId\", \"mailDetailsId\"] })\n\n\t\t\tconst mailSessionKey = neverNull(await crypto.resolveSessionKey(testData.MailTypeModel, testData.mailLiteral))\n\t\t\to(mailSessionKey).deepEquals(testData.sk)\n\n\t\t\to(testData.bucketKey.bucketEncSessionKeys.length).equals(3) //mail, file1, file2\n\t\t\tconst updatedInstanceSessionKeysCaptor = captor()\n\t\t\tverify(ownerEncSessionKeysUpdateQueue.updateInstanceSessionKeys(updatedInstanceSessionKeysCaptor.capture(), anything()))\n\t\t\tconst updatedInstanceSessionKeys = updatedInstanceSessionKeysCaptor.value\n\t\t\to(updatedInstanceSessionKeys.length).equals(testData.bucketKey.bucketEncSessionKeys.length)\n\t\t\tfor (const isk of testData.bucketKey.bucketEncSessionKeys) {\n\t\t\t\tconst expectedSessionKey = decryptKey(testData.bk, isk.symEncSessionKey)\n\t\t\t\to(\n\t\t\t\t\tupdatedInstanceSessionKeys.some((updatedKey) => {\n\t\t\t\t\t\tlet updatedSessionKey = decryptKey(testData.mailGroupKey, updatedKey.symEncSessionKey)\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\tupdatedKey.instanceId === isk.instanceId &&\n\t\t\t\t\t\t\tupdatedKey.instanceList === isk.instanceList &&\n\t\t\t\t\t\t\tupdatedKey.typeInfo.application === isk.typeInfo.application &&\n\t\t\t\t\t\t\tupdatedKey.typeInfo.typeId === isk.typeInfo.typeId &&\n\t\t\t\t\t\t\tarrayEquals(updatedSessionKey, expectedSessionKey)\n\t\t\t\t\t\t)\n\t\t\t\t\t}),\n\t\t\t\t).equals(true)\n\t\t\t}\n\t\t},\n\t)\n\n\t// ------------\n\n\to(\"resolve session key: pq public key decryption of mail session key using BucketKey aggregated type - Mail referencing MailBody\", async function () {\n\t\to.timeout(500) // in CI or with debugging it can take a while\n\t\tconst testData = await preparePqPubEncBucketKeyResolveSessionKeyTest()\n\t\tObject.assign(testData.mailLiteral, { body: \"bodyId\" })\n\n\t\twhen(serviceExecutor.get(PublicKeyService, anything())).thenResolve(\n\t\t\tcreatePublicKeyGetOut({\n\t\t\t\tpubEccKey: testData.senderIdentityKeyPair.publicKey,\n\t\t\t\tpubKeyVersion: \"0\",\n\t\t\t\tpubKyberKey: null,\n\t\t\t\tpubRsaKey: null,\n\t\t\t}),\n\t\t)\n\n\t\tconst sessionKey = neverNull(await crypto.resolveSessionKey(testData.MailTypeModel, testData.mailLiteral))\n\n\t\to(sessionKey).deepEquals(testData.sk)\n\t})\n\n\to(\"resolve session key: pq public key decryption of session key using BucketKey aggregated type - Mail referencing MailDetailsDraft\", async function () {\n\t\to.timeout(500) // in CI or with debugging it can take a while\n\t\tconst testData = await preparePqPubEncBucketKeyResolveSessionKeyTest()\n\t\tObject.assign(testData.mailLiteral, { mailDetailsDraft: [\"draftDetailsListId\", \"draftDetailsId\"] })\n\n\t\twhen(serviceExecutor.get(PublicKeyService, anything())).thenResolve(\n\t\t\tcreatePublicKeyGetOut({\n\t\t\t\tpubEccKey: testData.senderIdentityKeyPair.publicKey,\n\t\t\t\tpubKeyVersion: \"0\",\n\t\t\t\tpubKyberKey: null,\n\t\t\t\tpubRsaKey: null,\n\t\t\t}),\n\t\t)\n\n\t\tconst sessionKey = neverNull(await crypto.resolveSessionKey(testData.MailTypeModel, testData.mailLiteral))\n\n\t\to(sessionKey).deepEquals(testData.sk)\n\t})\n\n\to(\n\t\t\"resolve session key: pq public key decryption of mail session key using BucketKey aggregated type - already decoded/decrypted Mail referencing MailDetailsDraft\",\n\t\tasync function () {\n\t\t\to.timeout(500) // in CI or with debugging it can take a while\n\t\t\tconst testData = await preparePqPubEncBucketKeyResolveSessionKeyTest()\n\t\t\tObject.assign(testData.mailLiteral, {\n\t\t\t\tmailDetailsDraft: [\"draftDetailsListId\", \"draftDetailsId\"],\n\t\t\t})\n\n\t\t\twhen(serviceExecutor.get(PublicKeyService, anything())).thenResolve(\n\t\t\t\tcreatePublicKeyGetOut({\n\t\t\t\t\tpubEccKey: testData.senderIdentityKeyPair.publicKey,\n\t\t\t\t\tpubKeyVersion: \"0\",\n\t\t\t\t\tpubKyberKey: null,\n\t\t\t\t\tpubRsaKey: null,\n\t\t\t\t}),\n\t\t\t)\n\n\t\t\tconst mailInstance = await instanceMapper.decryptAndMapToInstance<Mail>(testData.MailTypeModel, testData.mailLiteral, testData.sk)\n\n\t\t\t// do not use testdouble here because it's hard to not break the function itself and then verify invocations\n\t\t\tconst decryptAndMapToInstance = (instanceMapper.decryptAndMapToInstance = spy(instanceMapper.decryptAndMapToInstance))\n\t\t\tconst convertBucketKeyToInstanceIfNecessary = (crypto.convertBucketKeyToInstanceIfNecessary = spy(crypto.convertBucketKeyToInstanceIfNecessary))\n\n\t\t\tconst sessionKey = neverNull(await crypto.resolveSessionKey(testData.MailTypeModel, mailInstance))\n\t\t\t// TODO is it ok to remove this: decryptAndMapToInstance is now called when resolving the session key\n\t\t\t// o(decryptAndMapToInstance.invocations.length).equals(0)\n\t\t\to(convertBucketKeyToInstanceIfNecessary.invocations.length).equals(1)\n\n\t\t\to(sessionKey).deepEquals(testData.sk)\n\t\t},\n\t)\n\n\to(\"resolve session key: pq public key decryption of session key using BucketKey aggregated type - Mail referencing MailDetailsBlob\", async function () {\n\t\to.timeout(500) // in CI or with debugging it can take a while\n\t\tconst testData = await preparePqPubEncBucketKeyResolveSessionKeyTest()\n\t\tObject.assign(testData.mailLiteral, { mailDetails: [\"mailDetailsArchiveId\", \"mailDetailsId\"] })\n\n\t\twhen(serviceExecutor.get(PublicKeyService, anything())).thenResolve(\n\t\t\tcreatePublicKeyGetOut({\n\t\t\t\tpubEccKey: testData.senderIdentityKeyPair.publicKey,\n\t\t\t\tpubKeyVersion: \"0\",\n\t\t\t\tpubKyberKey: null,\n\t\t\t\tpubRsaKey: null,\n\t\t\t}),\n\t\t)\n\n\t\tconst sessionKey = neverNull(await crypto.resolveSessionKey(testData.MailTypeModel, testData.mailLiteral))\n\n\t\to(sessionKey).deepEquals(testData.sk)\n\t})\n\n\to(\n\t\t\"resolve session key: pq public key decryption of session key using BucketKey aggregated type - Mail referencing MailDetailsBlob with attachments\",\n\t\tasync function () {\n\t\t\to.timeout(500) // in CI or with debugging it can take a while\n\t\t\tconst file1SessionKey = aes256RandomKey()\n\t\t\tconst file2SessionKey = aes256RandomKey()\n\t\t\tconst testData = await preparePqPubEncBucketKeyResolveSessionKeyTest([file1SessionKey, file2SessionKey])\n\t\t\tObject.assign(testData.mailLiteral, { mailDetails: [\"mailDetailsArchiveId\", \"mailDetailsId\"] })\n\n\t\t\twhen(serviceExecutor.get(PublicKeyService, anything())).thenResolve(\n\t\t\t\tcreatePublicKeyGetOut({\n\t\t\t\t\tpubEccKey: testData.senderIdentityKeyPair.publicKey,\n\t\t\t\t\tpubKeyVersion: \"0\",\n\t\t\t\t\tpubKyberKey: null,\n\t\t\t\t\tpubRsaKey: null,\n\t\t\t\t}),\n\t\t\t)\n\n\t\t\tconst mailSessionKey = neverNull(await crypto.resolveSessionKey(testData.MailTypeModel, testData.mailLiteral))\n\t\t\to(mailSessionKey).deepEquals(testData.sk)\n\n\t\t\to(testData.bucketKey.bucketEncSessionKeys.length).equals(3) //mail, file1, file2\n\t\t\tconst updatedInstanceSessionKeysCaptor = captor()\n\t\t\tverify(ownerEncSessionKeysUpdateQueue.updateInstanceSessionKeys(updatedInstanceSessionKeysCaptor.capture(), anything()))\n\t\t\tconst updatedInstanceSessionKeys = updatedInstanceSessionKeysCaptor.value\n\t\t\to(updatedInstanceSessionKeys.length).equals(testData.bucketKey.bucketEncSessionKeys.length)\n\t\t\tfor (const isk of testData.bucketKey.bucketEncSessionKeys) {\n\t\t\t\tconst expectedSessionKey = decryptKey(testData.bk, isk.symEncSessionKey)\n\t\t\t\tif (\n\t\t\t\t\t!updatedInstanceSessionKeys.some((updatedKey) => {\n\t\t\t\t\t\tconst updatedSessionKey = decryptKey(testData.mailGroupKey, updatedKey.symEncSessionKey)\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\tupdatedKey.instanceId === isk.instanceId &&\n\t\t\t\t\t\t\tupdatedKey.instanceList === isk.instanceList &&\n\t\t\t\t\t\t\tupdatedKey.typeInfo.application === isk.typeInfo.application &&\n\t\t\t\t\t\t\tupdatedKey.typeInfo.typeId === isk.typeInfo.typeId &&\n\t\t\t\t\t\t\tarrayEquals(updatedSessionKey, expectedSessionKey)\n\t\t\t\t\t\t)\n\t\t\t\t\t})\n\t\t\t\t) {\n\t\t\t\t\tconsole.log(\"===============================\")\n\t\t\t\t\tupdatedInstanceSessionKeys.some((updatedKey) => {\n\t\t\t\t\t\tconst updatedSessionKey = decryptKey(testData.mailGroupKey, updatedKey.symEncSessionKey)\n\t\t\t\t\t\tconsole.log(\">>>>>>>>>>>>>>>>>>>>>>>\")\n\t\t\t\t\t\tconsole.log(\"1 \", updatedKey.instanceId, isk.instanceId)\n\t\t\t\t\t\tconsole.log(\"2 \", updatedKey.instanceList, isk.instanceList)\n\t\t\t\t\t\tconsole.log(\"3 \", updatedKey.typeInfo.application, isk.typeInfo.application)\n\t\t\t\t\t\tconsole.log(\"4 \", updatedKey.typeInfo.typeId, isk.typeInfo.typeId)\n\t\t\t\t\t\tconsole.log(\"5 \", updatedSessionKey, expectedSessionKey)\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\to(\n\t\t\t\t\tupdatedInstanceSessionKeys.some((updatedKey) => {\n\t\t\t\t\t\tconst updatedSessionKey = decryptKey(testData.mailGroupKey, updatedKey.symEncSessionKey)\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\tupdatedKey.instanceId === isk.instanceId &&\n\t\t\t\t\t\t\tupdatedKey.instanceList === isk.instanceList &&\n\t\t\t\t\t\t\tupdatedKey.typeInfo.application === isk.typeInfo.application &&\n\t\t\t\t\t\t\tupdatedKey.typeInfo.typeId === isk.typeInfo.typeId &&\n\t\t\t\t\t\t\tarrayEquals(updatedSessionKey, expectedSessionKey)\n\t\t\t\t\t\t)\n\t\t\t\t\t}),\n\t\t\t\t).equals(true)\n\t\t\t}\n\t\t},\n\t)\n\n\to(\n\t\t\"resolve session key: external user key decryption of session key using BucketKey aggregated type encrypted with MailGroupKey - Mail referencing MailDetailsBlob with attachments\",\n\t\tasync function () {\n\t\t\to.timeout(500) // in CI or with debugging it can take a while\n\t\t\tconst file1SessionKey = aes256RandomKey()\n\t\t\tconst file2SessionKey = aes256RandomKey()\n\t\t\tconst testData = await prepareConfidentialMailToExternalRecipient([file1SessionKey, file2SessionKey])\n\t\t\tObject.assign(testData.mailLiteral, { mailDetails: [\"mailDetailsArchiveId\", \"mailDetailsId\"] })\n\n\t\t\tconst mailSessionKey = neverNull(await crypto.resolveSessionKey(testData.MailTypeModel, testData.mailLiteral))\n\t\t\to(mailSessionKey).deepEquals(testData.sk)\n\t\t},\n\t)\n\n\to(\n\t\t\"resolve session key: external user key decryption of session key using BucketKey aggregated type encrypted with UserGroupKey - Mail referencing MailDetailsBlob with attachments\",\n\t\tasync function () {\n\t\t\to.timeout(500) // in CI or with debugging it can take a while\n\t\t\tconst file1SessionKey = aes256RandomKey()\n\t\t\tconst file2SessionKey = aes256RandomKey()\n\t\t\tconst testData = await prepareConfidentialMailToExternalRecipient([file1SessionKey, file2SessionKey], true)\n\t\t\tObject.assign(testData.mailLiteral, { mailDetails: [\"mailDetailsArchiveId\", \"mailDetailsId\"] })\n\n\t\t\tconst mailSessionKey = neverNull(await crypto.resolveSessionKey(testData.MailTypeModel, testData.mailLiteral))\n\n\t\t\to(mailSessionKey).deepEquals(testData.sk)\n\t\t},\n\t)\n\n\to(\"resolve session key: MailDetailsBlob\", async function () {\n\t\tconst gk = aes256RandomKey()\n\t\tconst sk = aes256RandomKey()\n\t\tconst ownerGroup = \"mailGroupId\"\n\t\twhen(keyLoaderFacade.getCurrentSymGroupKey(ownerGroup)).thenResolve({ object: gk, version: 0 })\n\t\twhen(userFacade.hasGroup(ownerGroup)).thenReturn(true)\n\t\twhen(userFacade.isFullyLoggedIn()).thenReturn(true)\n\n\t\tconst MailDetailsBlobTypeModel = await resolveTypeReference(MailDetailsBlobTypeRef)\n\t\tconst mailDetailsBlobLiteral = {\n\t\t\t_id: [\"mailDetailsArchiveId\", \"mailDetailsId\"],\n\t\t\t_ownerGroup: ownerGroup,\n\t\t\t_ownerEncSessionKey: encryptKey(gk, sk),\n\t\t}\n\t\twhen(keyLoaderFacade.loadSymGroupKey(ownerGroup, 0)).thenResolve(gk)\n\n\t\tconst mailDetailsBlobSessionKey = neverNull(await crypto.resolveSessionKey(MailDetailsBlobTypeModel, mailDetailsBlobLiteral))\n\t\to(mailDetailsBlobSessionKey).deepEquals(sk)\n\t})\n\n\to(\"resolve session key: MailDetailsBlob - session key not found\", async function () {\n\t\tconst MailDetailsBlobTypeModel = await resolveTypeReference(MailDetailsBlobTypeRef)\n\t\tconst mailDetailsBlobLiteral = {\n\t\t\t_id: [\"mailDetailsArchiveId\", \"mailDetailsId\"],\n\t\t\t_permissions: \"permissionListId\",\n\t\t}\n\t\twhen(entityClient.loadAll(PermissionTypeRef, \"permissionListId\")).thenResolve([])\n\n\t\ttry {\n\t\t\tawait crypto.resolveSessionKey(MailDetailsBlobTypeModel, mailDetailsBlobLiteral)\n\t\t\to(true).equals(false) // let the test fails if there is no exception\n\t\t} catch (error) {\n\t\t\to(error.constructor).equals(SessionKeyNotFoundError)\n\t\t}\n\t})\n\n\t/**\n\t * Prepares the environment to test receiving rsa asymmetric encrypted emails that have been sent with the simplified permission system.\n\t *  - Creates key pair for the recipient user\n\t *  - Creates group, bucket and session keys\n\t *  - Creates mail literal and encrypts all encrypted attributes of the mail\n\t *  - Create BucketKey object on the mail\n\t *\n\t * @param fileSessionKeys List of session keys for the attachments. When the list is empty there are no attachments\n\t */\n\tasync function prepareRsaPubEncBucketKeyResolveSessionKeyTest(fileSessionKeys: Array<Aes256Key> = []): Promise<{\n\t\tmailLiteral: Record<string, any>\n\t\tbucketKey: BucketKey\n\t\tsk: Aes256Key\n\t\tbk: Aes256Key\n\t\tmailGroupKey: Aes256Key\n\t\tMailTypeModel: TypeModel\n\t}> {\n\t\t// configure test user\n\t\tconst recipientUser = createTestUser(\"Bob\", entityClient)\n\t\tconfigureLoggedInUser(recipientUser, userFacade, keyLoaderFacade)\n\n\t\tlet privateKey = RSA_TEST_KEYPAIR.privateKey\n\t\tlet publicKey = RSA_TEST_KEYPAIR.publicKey\n\t\tconst keyPair = createTestEntity(KeyPairTypeRef, {\n\t\t\t_id: \"keyPairId\",\n\t\t\tsymEncPrivRsaKey: encryptRsaKey(recipientUser.userGroupKey, privateKey),\n\t\t\tpubRsaKey: hexToUint8Array(rsaPublicKeyToHex(publicKey)),\n\t\t})\n\t\trecipientUser.userGroup.currentKeys = keyPair\n\n\t\t// configure mail\n\t\tlet subject = \"this is our subject\"\n\t\tlet confidential = true\n\t\tlet senderName = \"TutanotaTeam\"\n\n\t\tlet sk = aes256RandomKey()\n\t\tlet bk = aes256RandomKey()\n\n\t\tconst mailLiteral = createMailLiteral(null, sk, subject, confidential, senderName, recipientUser.name, recipientUser.mailGroup._id)\n\n\t\tconst pubEncBucketKey = new Uint8Array([1, 2, 3, 4])\n\t\tconst bucketEncMailSessionKey = encryptKey(bk, sk)\n\n\t\tconst MailTypeModel = await resolveTypeReference(MailTypeRef)\n\n\t\tconst mailInstanceSessionKey = createInstanceSessionKey({\n\t\t\ttypeInfo: createTypeInfo({\n\t\t\t\tapplication: MailTypeModel.app,\n\t\t\t\ttypeId: String(MailTypeModel.id),\n\t\t\t}),\n\t\t\tsymEncSessionKey: bucketEncMailSessionKey,\n\t\t\tinstanceList: \"mailListId\",\n\t\t\tinstanceId: \"mailId\",\n\t\t\tencryptionAuthStatus: null,\n\t\t\tsymKeyVersion: \"0\",\n\t\t})\n\t\tconst FileTypeModel = await resolveTypeReference(FileTypeRef)\n\t\tconst bucketEncSessionKeys = fileSessionKeys.map((fileSessionKey, index) => {\n\t\t\treturn createInstanceSessionKey({\n\t\t\t\ttypeInfo: createTypeInfo({\n\t\t\t\t\tapplication: FileTypeModel.app,\n\t\t\t\t\ttypeId: String(FileTypeModel.id),\n\t\t\t\t}),\n\t\t\t\tsymEncSessionKey: encryptKey(bk, fileSessionKey),\n\t\t\t\tsymKeyVersion: \"0\",\n\t\t\t\tinstanceList: \"fileListId\",\n\t\t\t\tinstanceId: \"fileId\" + (index + 1),\n\t\t\t\tencryptionAuthStatus: null,\n\t\t\t})\n\t\t})\n\t\tbucketEncSessionKeys.push(mailInstanceSessionKey)\n\n\t\tconst protocolVersion = CryptoProtocolVersion.RSA\n\t\tconst bucketKey = createBucketKey({\n\t\t\tpubEncBucketKey,\n\t\t\tkeyGroup: recipientUser.userGroup._id,\n\t\t\tbucketEncSessionKeys: bucketEncSessionKeys,\n\t\t\tgroupEncBucketKey: null,\n\t\t\tprotocolVersion,\n\t\t\tsenderKeyVersion: null,\n\t\t\trecipientKeyVersion: \"0\",\n\t\t})\n\n\t\tconst BucketKeyModel = await resolveTypeReference(BucketKeyTypeRef)\n\t\tconst bucketKeyLiteral = await instanceMapper.encryptAndMapToLiteral(BucketKeyModel, bucketKey, null)\n\t\tObject.assign(mailLiteral, { bucketKey: bucketKeyLiteral })\n\n\t\twhen(\n\t\t\tasymmetricCryptoFacade.loadKeyPairAndDecryptSymKey(\n\t\t\t\tassertNotNull(bucketKey.keyGroup),\n\t\t\t\tNumber(bucketKey.recipientKeyVersion),\n\t\t\t\tasCryptoProtoocolVersion(bucketKey.protocolVersion),\n\t\t\t\tpubEncBucketKey,\n\t\t\t),\n\t\t).thenResolve({ decryptedAesKey: bk, senderIdentityPubKey: null })\n\n\t\treturn {\n\t\t\tmailLiteral,\n\t\t\tbucketKey,\n\t\t\tsk,\n\t\t\tbk,\n\t\t\tmailGroupKey: recipientUser.mailGroupKey,\n\t\t\tMailTypeModel,\n\t\t}\n\t}\n\n\t/**\n\t * Prepares the environment to test receiving pq asymmetric encrypted emails that have been sent with the simplified permission system.\n\t *  - Creates key pair for the recipient user\n\t *  - Creates group, bucket and session keys\n\t *  - Creates mail literal and encrypts all encrypted attributes of the mail\n\t *  - Create BucketKey object on the mail\n\t *\n\t * @param fileSessionKeys List of session keys for the attachments. When the list is empty there are no attachments\n\t */\n\tasync function preparePqPubEncBucketKeyResolveSessionKeyTest(\n\t\tfileSessionKeys: Array<AesKey> = [],\n\t\tconfidential: boolean = true,\n\t): Promise<{\n\t\tmailLiteral: Record<string, any>\n\t\tbucketKey: BucketKey\n\t\tsk: AesKey\n\t\tbk: AesKey\n\t\tmailGroupKey: AesKey\n\t\tMailTypeModel: TypeModel\n\t\tsenderIdentityKeyPair: EccKeyPair\n\t}> {\n\t\t// create test user\n\t\tconst recipientUser = createTestUser(\"Bob\", entityClient)\n\t\tconfigureLoggedInUser(recipientUser, userFacade, keyLoaderFacade)\n\n\t\tlet pqKeyPairs = await pqFacade.generateKeyPairs()\n\n\t\tconst recipientKeyPair = createKeyPair({\n\t\t\t_id: \"keyPairId\",\n\t\t\tpubEccKey: pqKeyPairs.eccKeyPair.publicKey,\n\t\t\tsymEncPrivEccKey: aesEncrypt(recipientUser.userGroupKey, pqKeyPairs.eccKeyPair.privateKey),\n\t\t\tpubKyberKey: kyberPublicKeyToBytes(pqKeyPairs.kyberKeyPair.publicKey),\n\t\t\tsymEncPrivKyberKey: aesEncrypt(recipientUser.userGroupKey, kyberPrivateKeyToBytes(pqKeyPairs.kyberKeyPair.privateKey)),\n\t\t\tpubRsaKey: null,\n\t\t\tsymEncPrivRsaKey: null,\n\t\t})\n\n\t\trecipientUser.userGroup.currentKeys = recipientKeyPair\n\n\t\tconst senderIdentityKeyPair = generateEccKeyPair()\n\n\t\t// create test mail\n\t\tlet subject = \"this is our subject\"\n\t\tlet senderName = \"TutanotaTeam\"\n\n\t\tlet sk = aes256RandomKey()\n\t\tlet bk = aes256RandomKey()\n\n\t\tconst mailLiteral = createMailLiteral(\n\t\t\trecipientUser.mailGroupKey,\n\t\t\tsk,\n\t\t\tsubject,\n\t\t\tconfidential,\n\t\t\tsenderName,\n\t\t\trecipientUser.name,\n\t\t\trecipientUser.mailGroup._id,\n\t\t)\n\t\t// @ts-ignore\n\t\tmailLiteral._ownerEncSessionKey = null\n\n\t\tconst pubEncBucketKey = await pqFacade.encapsulateAndEncode(\n\t\t\tsenderIdentityKeyPair,\n\t\t\tgenerateEccKeyPair(),\n\t\t\tpqKeyPairsToPublicKeys(pqKeyPairs),\n\t\t\tbitArrayToUint8Array(bk),\n\t\t)\n\t\tconst bucketEncMailSessionKey = encryptKey(bk, sk)\n\t\tconst { MailTypeModel, bucketKey } = await prepareBucketKeyInstance(\n\t\t\tbucketEncMailSessionKey,\n\t\t\tfileSessionKeys,\n\t\t\tbk,\n\t\t\tpubEncBucketKey,\n\t\t\trecipientUser,\n\t\t\tinstanceMapper,\n\t\t\tmailLiteral,\n\t\t)\n\n\t\twhen(\n\t\t\tasymmetricCryptoFacade.decryptSymKeyWithKeyPair(\n\t\t\t\t{\n\t\t\t\t\tkeyPairType: pqKeyPairs.keyPairType,\n\t\t\t\t\teccKeyPair: pqKeyPairs.eccKeyPair,\n\t\t\t\t\tkyberKeyPair: pqKeyPairs.kyberKeyPair,\n\t\t\t\t},\n\t\t\t\tCryptoProtocolVersion.TUTA_CRYPT,\n\t\t\t\tpubEncBucketKey,\n\t\t\t),\n\t\t).thenResolve({ decryptedAesKey: bk, senderIdentityPubKey: senderIdentityKeyPair.publicKey })\n\n\t\twhen(\n\t\t\tasymmetricCryptoFacade.loadKeyPairAndDecryptSymKey(\n\t\t\t\tassertNotNull(bucketKey.keyGroup),\n\t\t\t\tNumber(bucketKey.recipientKeyVersion),\n\t\t\t\tasCryptoProtoocolVersion(bucketKey.protocolVersion),\n\t\t\t\tpubEncBucketKey,\n\t\t\t),\n\t\t).thenResolve({ decryptedAesKey: bk, senderIdentityPubKey: senderIdentityKeyPair.publicKey })\n\n\t\treturn {\n\t\t\tmailLiteral,\n\t\t\tbucketKey,\n\t\t\tsk,\n\t\t\tbk,\n\t\t\tmailGroupKey: recipientUser.mailGroupKey,\n\t\t\tMailTypeModel,\n\t\t\tsenderIdentityKeyPair,\n\t\t}\n\t}\n\n\t/**\n\t * Prepares the environment to test receiving symmetric encrypted emails (mails sent from internal to external user) that have been sent with the simplified permission system.\n\t *  - Creates group, bucket and session keys\n\t *  - Creates mail literal and encrypts all encrypted attributes of the mail\n\t *  - Create BucketKey object on the mail\n\t *\n\t * @param fileSessionKeys List of session keys for the attachments. When the list is empty there are no attachments\n\t * @param externalUserGroupEncBucketKey for legacy external user group to encrypt bucket key\n\t */\n\tasync function prepareConfidentialMailToExternalRecipient(\n\t\tfileSessionKeys: Array<AesKey> = [],\n\t\texternalUserGroupEncBucketKey = false,\n\t): Promise<{\n\t\tmailLiteral: Record<string, any>\n\t\tbucketKey: BucketKey\n\t\tsk: AesKey\n\t\tbk: AesKey\n\t\tMailTypeModel: TypeModel\n\t}> {\n\t\t// create user\n\t\tconst externalUser = createTestUser(\"Bob\", entityClient)\n\t\tconfigureLoggedInUser(externalUser, userFacade, keyLoaderFacade)\n\n\t\t// create test mail\n\t\tlet subject = \"this is our subject\"\n\t\tlet confidential = true\n\t\tlet senderName = \"TutanotaTeam\"\n\t\tlet sk = aes256RandomKey()\n\t\tlet bk = aes256RandomKey()\n\n\t\tconst mailLiteral = createMailLiteral(null, sk, subject, confidential, senderName, externalUser.name, externalUser.mailGroup._id)\n\n\t\tconst groupKeyToEncryptBucketKey = externalUserGroupEncBucketKey ? externalUser.userGroupKey : externalUser.mailGroupKey\n\t\tconst groupEncBucketKey = encryptKey(groupKeyToEncryptBucketKey, bk)\n\t\tconst bucketEncMailSessionKey = encryptKey(bk, sk)\n\n\t\tconst MailTypeModel = await resolveTypeReference(MailTypeRef)\n\n\t\tconst mailInstanceSessionKey = createTestEntity(InstanceSessionKeyTypeRef, {\n\t\t\ttypeInfo: createTestEntity(TypeInfoTypeRef, {\n\t\t\t\tapplication: MailTypeModel.app,\n\t\t\t\ttypeId: String(MailTypeModel.id),\n\t\t\t}),\n\t\t\tsymEncSessionKey: bucketEncMailSessionKey,\n\t\t\tinstanceList: \"mailListId\",\n\t\t\tinstanceId: \"mailId\",\n\t\t})\n\t\tconst FileTypeModel = await resolveTypeReference(FileTypeRef)\n\t\tconst bucketEncSessionKeys = fileSessionKeys.map((fileSessionKey, index) => {\n\t\t\treturn createTestEntity(InstanceSessionKeyTypeRef, {\n\t\t\t\ttypeInfo: createTestEntity(TypeInfoTypeRef, {\n\t\t\t\t\tapplication: FileTypeModel.app,\n\t\t\t\t\ttypeId: String(FileTypeModel.id),\n\t\t\t\t}),\n\t\t\t\tsymEncSessionKey: encryptKey(bk, fileSessionKey),\n\t\t\t\tinstanceList: \"fileListId\",\n\t\t\t\tinstanceId: \"fileId\" + (index + 1),\n\t\t\t})\n\t\t})\n\t\tbucketEncSessionKeys.push(mailInstanceSessionKey)\n\n\t\tconst bucketKey = createTestEntity(BucketKeyTypeRef, {\n\t\t\tpubEncBucketKey: null,\n\t\t\tkeyGroup: externalUserGroupEncBucketKey ? externalUser.userGroup._id : null,\n\t\t\tgroupEncBucketKey: groupEncBucketKey,\n\t\t\tbucketEncSessionKeys: bucketEncSessionKeys,\n\t\t})\n\n\t\tconst BucketKeyModel = await resolveTypeReference(BucketKeyTypeRef)\n\t\tconst bucketKeyLiteral = await instanceMapper.encryptAndMapToLiteral(BucketKeyModel, bucketKey, null)\n\t\tObject.assign(mailLiteral, { bucketKey: bucketKeyLiteral })\n\n\t\treturn {\n\t\t\tmailLiteral,\n\t\t\tbucketKey,\n\t\t\tsk,\n\t\t\tbk,\n\t\t\tMailTypeModel,\n\t\t}\n\t}\n\n\t/**\n\t * Prepares the environment to test receiving symmetric encrypted emails from an external sender(mails sent from external to internal user) that have been sent with the simplified permission system.\n\t *  - Creates group, bucket and session keys\n\t *  - Creates mail literal and encrypts all encrypted attributes of the mail\n\t *  - Create BucketKey object on the mail\n\t *\n\t * @param fileSessionKeys List of session keys for the attachments. When the list is empty there are no attachments\n\t */\n\tasync function prepareConfidentialReplyFromExternalUser(): Promise<{\n\t\tmailLiteral: Record<string, any>\n\t\tbucketKey: BucketKey\n\t\tsk: AesKey\n\t\tbk: AesKey\n\t\tMailTypeModel: TypeModel\n\t\tinternalUser: TestUser\n\t\texternalUser: TestUser\n\t\trecipientKeyVersion: number\n\t}> {\n\t\t// Setup test users and groups\n\t\tconst internalUser = createTestUser(\"Alice\", entityClient)\n\t\tconst externalUser = createTestUser(\"Bob\", entityClient)\n\n\t\t// Setup relationship between internal and external user\n\t\texternalUser.userGroup.admin = internalUser.userGroup._id\n\t\texternalUser.userGroup.adminGroupEncGKey = encryptKey(internalUser.userGroupKey, externalUser.userGroupKey)\n\t\texternalUser.userGroup.adminGroupKeyVersion = \"0\"\n\t\texternalUser.mailGroup.admin = externalUser.userGroup._id\n\t\texternalUser.mailGroup.adminGroupEncGKey = encryptKey(externalUser.userGroupKey, externalUser.mailGroupKey)\n\t\texternalUser.mailGroup.adminGroupKeyVersion = \"4\"\n\t\tconst recipientKeyVersion = \"5\"\n\t\texternalUser.userGroup.groupKeyVersion = \"7\"\n\t\texternalUser.mailGroup.groupKeyVersion = \"8\"\n\n\t\tconfigureLoggedInUser(internalUser, userFacade, keyLoaderFacade)\n\n\t\twhen(keyLoaderFacade.loadSymGroupKey(externalUser.mailGroup._id, Number(recipientKeyVersion), anything())).thenResolve(externalUser.mailGroupKey)\n\t\twhen(keyLoaderFacade.loadSymGroupKey(externalUser.userGroup._id, Number(externalUser.mailGroup.adminGroupKeyVersion), anything())).thenResolve(\n\t\t\texternalUser.userGroupKey,\n\t\t)\n\n\t\t// setup test mail (confidential reply from external)\n\n\t\tlet subject = \"this is our subject\"\n\t\tlet confidential = true\n\t\tlet sk = aes256RandomKey()\n\t\tlet bk = aes256RandomKey()\n\t\tconst mailLiteral = createMailLiteral(null, sk, subject, confidential, externalUser.name, internalUser.name, internalUser.mailGroup._id)\n\n\t\tconst keyGroup = externalUser.mailGroup._id\n\t\tconst groupEncBucketKey = encryptKey(externalUser.mailGroupKey, bk)\n\t\tconst bucketEncMailSessionKey = encryptKey(bk, sk)\n\n\t\tconst MailTypeModel = await resolveTypeReference(MailTypeRef)\n\t\tconst mailInstanceSessionKey = createTestEntity(InstanceSessionKeyTypeRef, {\n\t\t\ttypeInfo: createTestEntity(TypeInfoTypeRef, {\n\t\t\t\tapplication: MailTypeModel.app,\n\t\t\t\ttypeId: String(MailTypeModel.id),\n\t\t\t}),\n\t\t\tsymEncSessionKey: bucketEncMailSessionKey,\n\t\t\tinstanceList: \"mailListId\",\n\t\t\tinstanceId: \"mailId\",\n\t\t})\n\n\t\tconst bucketEncSessionKeys = new Array<InstanceSessionKey>()\n\t\tbucketEncSessionKeys.push(mailInstanceSessionKey)\n\n\t\tconst bucketKey = createTestEntity(BucketKeyTypeRef, {\n\t\t\tpubEncBucketKey: null,\n\t\t\tkeyGroup: keyGroup,\n\t\t\tgroupEncBucketKey: groupEncBucketKey,\n\t\t\trecipientKeyVersion,\n\t\t\tbucketEncSessionKeys: bucketEncSessionKeys,\n\t\t\tprotocolVersion: CryptoProtocolVersion.SYMMETRIC_ENCRYPTION,\n\t\t\tsenderKeyVersion: null,\n\t\t})\n\n\t\tconst BucketKeyModel = await resolveTypeReference(BucketKeyTypeRef)\n\t\tconst bucketKeyLiteral = await instanceMapper.encryptAndMapToLiteral(BucketKeyModel, bucketKey, null)\n\t\tObject.assign(mailLiteral, { bucketKey: bucketKeyLiteral })\n\n\t\treturn {\n\t\t\tmailLiteral,\n\t\t\tbucketKey,\n\t\t\tsk,\n\t\t\tbk,\n\t\t\tMailTypeModel,\n\t\t\tinternalUser,\n\t\t\texternalUser,\n\t\t\trecipientKeyVersion: Number(recipientKeyVersion),\n\t\t}\n\t}\n})\n\nexport function createMailLiteral(\n\townerGroupKey: AesKey | null,\n\tsessionKey,\n\tsubject,\n\tconfidential,\n\tsenderName,\n\trecipientName,\n\townerGroupId: string,\n): Record<string, any> {\n\treturn {\n\t\t_format: \"0\",\n\t\t_area: \"0\",\n\t\t_owner: \"ownerId\",\n\t\t_ownerGroup: ownerGroupId,\n\t\t_ownerEncSessionKey: ownerGroupKey ? encryptKey(ownerGroupKey, sessionKey) : null,\n\t\t_id: [\"mailListId\", \"mailId\"],\n\t\t_permissions: \"permissionListId\",\n\t\treceivedDate: new Date(1470039025474).getTime().toString(),\n\t\tsentDate: new Date(1470039021474).getTime().toString(),\n\t\tstate: \"\",\n\t\ttrashed: false,\n\t\tunread: true,\n\t\tsubject: uint8ArrayToBase64(aesEncrypt(sessionKey, stringToUtf8Uint8Array(subject), random.generateRandomData(IV_BYTE_LENGTH), true, ENABLE_MAC)),\n\t\treplyType: \"\",\n\t\tconfidential: uint8ArrayToBase64(\n\t\t\taesEncrypt(sessionKey, stringToUtf8Uint8Array(confidential ? \"1\" : \"0\"), random.generateRandomData(IV_BYTE_LENGTH), true, ENABLE_MAC),\n\t\t),\n\t\tsender: {\n\t\t\t_id: \"senderId\",\n\t\t\taddress: senderAddress,\n\t\t\tname: uint8ArrayToBase64(aesEncrypt(sessionKey, stringToUtf8Uint8Array(senderName), random.generateRandomData(IV_BYTE_LENGTH), true, ENABLE_MAC)),\n\t\t},\n\t\tbccRecipients: [],\n\t\tccRecipients: [],\n\t\ttoRecipients: [\n\t\t\t{\n\t\t\t\t_id: \"recipientId\",\n\t\t\t\taddress: \"support@yahoo.com\",\n\t\t\t\tname: uint8ArrayToBase64(\n\t\t\t\t\taesEncrypt(sessionKey, stringToUtf8Uint8Array(recipientName), random.generateRandomData(IV_BYTE_LENGTH), true, ENABLE_MAC),\n\t\t\t\t),\n\t\t\t},\n\t\t],\n\t\treplyTos: [],\n\t\tbucketKey: null,\n\t\tattachmentCount: \"0\",\n\t\tauthStatus: \"0\",\n\t\tlistUnsubscribe: uint8ArrayToBase64(aesEncrypt(sessionKey, stringToUtf8Uint8Array(\"\"), random.generateRandomData(IV_BYTE_LENGTH), true, ENABLE_MAC)),\n\t\tmethod: uint8ArrayToBase64(aesEncrypt(sessionKey, stringToUtf8Uint8Array(\"\"), random.generateRandomData(IV_BYTE_LENGTH), true, ENABLE_MAC)),\n\t\tphishingStatus: \"0\",\n\t\trecipientCount: \"0\",\n\t}\n}\n\nexport function createTestUser(name: string, entityClient: EntityClient): TestUser {\n\tconst userGroupKey = aes256RandomKey()\n\tconst mailGroupKey = aes256RandomKey()\n\n\tconst userGroup = createTestEntity(GroupTypeRef, {\n\t\t_id: \"userGroup\" + name,\n\t\ttype: GroupType.User,\n\t\tcurrentKeys: null,\n\t\tgroupKeyVersion: \"0\",\n\t})\n\n\tconst mailGroup = createTestEntity(GroupTypeRef, {\n\t\t_id: \"mailGroup\" + name,\n\t\ttype: GroupType.Mail,\n\t\tcurrentKeys: null,\n\t\tgroupKeyVersion: \"0\",\n\t})\n\n\tconst userGroupMembership = createTestEntity(GroupMembershipTypeRef, {\n\t\tgroup: userGroup._id,\n\t})\n\tconst mailGroupMembership = createTestEntity(GroupMembershipTypeRef, {\n\t\tgroup: mailGroup._id,\n\t})\n\n\tconst user = createTestEntity(UserTypeRef, {\n\t\tuserGroup: userGroupMembership,\n\t\tmemberships: [mailGroupMembership],\n\t})\n\n\twhen(entityClient.load(GroupTypeRef, userGroup._id)).thenResolve(userGroup)\n\twhen(entityClient.load(GroupTypeRef, mailGroup._id)).thenResolve(mailGroup)\n\treturn {\n\t\tuser,\n\t\tuserGroup,\n\t\tmailGroup,\n\t\tuserGroupKey,\n\t\tmailGroupKey,\n\t\tname,\n\t}\n}\n\n/**\n * Helper function to mock the user facade so that the given test user is considered as logged in user.\n */\nexport function configureLoggedInUser(testUser: TestUser, userFacade: UserFacade, keyLoaderFacade: KeyLoaderFacade) {\n\twhen(userFacade.getLoggedInUser()).thenReturn(testUser.user)\n\twhen(keyLoaderFacade.getCurrentSymGroupKey(testUser.mailGroup._id)).thenResolve({ object: testUser.mailGroupKey, version: 0 })\n\twhen(keyLoaderFacade.getCurrentSymGroupKey(testUser.userGroup._id)).thenResolve({ object: testUser.userGroupKey, version: 0 })\n\twhen(userFacade.hasGroup(testUser.userGroup._id)).thenReturn(true)\n\twhen(userFacade.hasGroup(testUser.mailGroup._id)).thenReturn(true)\n\twhen(userFacade.getCurrentUserGroupKey()).thenReturn({ object: testUser.userGroupKey, version: 0 })\n\twhen(userFacade.isLeader()).thenReturn(true)\n\twhen(userFacade.isFullyLoggedIn()).thenReturn(true)\n\twhen(keyLoaderFacade.loadSymGroupKey(testUser.mailGroup._id, 0)).thenResolve(testUser.mailGroupKey)\n\twhen(keyLoaderFacade.loadSymGroupKey(testUser.userGroup._id, 0)).thenResolve(testUser.userGroupKey)\n}\n","import o from \"../../../../../packages/otest/dist/otest.js\"\nimport { AsymmetricCryptoFacade, PublicKeys } from \"../../../../../src/common/api/worker/crypto/AsymmetricCryptoFacade.js\"\nimport { RsaImplementation } from \"../../../../../src/common/api/worker/crypto/RsaImplementation.js\"\nimport { PQFacade } from \"../../../../../src/common/api/worker/facades/PQFacade.js\"\nimport { matchers, object, verify, when } from \"testdouble\"\nimport { assertThrows } from \"@tutao/tutanota-test-utils\"\nimport { CryptoProtocolVersion, EncryptionAuthStatus, PublicKeyIdentifierType } from \"../../../../../src/common/api/common/TutanotaConstants.js\"\nimport { CryptoError } from \"@tutao/tutanota-crypto/error.js\"\nimport { RSA_TEST_KEYPAIR } from \"../facades/RsaPqPerformanceTest.js\"\nimport {\n\tAesKey,\n\tbitArrayToUint8Array,\n\tEccKeyPair,\n\tKeyPairType,\n\tKyberPublicKey,\n\tPQKeyPairs,\n\tRsaKeyPair,\n\trsaPublicKeyToHex,\n\tuint8ArrayToBitArray,\n} from \"@tutao/tutanota-crypto\"\nimport { KeyLoaderFacade } from \"../../../../../src/common/api/worker/facades/KeyLoaderFacade.js\"\nimport { CryptoWrapper } from \"../../../../../src/common/api/worker/crypto/CryptoWrapper.js\"\nimport { IServiceExecutor } from \"../../../../../src/common/api/common/ServiceRequest.js\"\nimport { hexToUint8Array, Versioned } from \"@tutao/tutanota-utils\"\nimport { PublicKeyService } from \"../../../../../src/common/api/entities/sys/Services.js\"\nimport {\n\tcreatePublicKeyGetIn,\n\tPubEncKeyData,\n\tPubEncKeyDataTypeRef,\n\tPublicKeyGetIn,\n\tPublicKeyPutIn,\n} from \"../../../../../src/common/api/entities/sys/TypeRefs.js\"\nimport { ProgrammingError } from \"../../../../../src/common/api/common/error/ProgrammingError.js\"\nimport { createTestEntity } from \"../../../TestUtils.js\"\n\no.spec(\"AsymmetricCryptoFacadeTest\", function () {\n\tlet rsa: RsaImplementation\n\tlet pqFacade: PQFacade\n\tlet keyLoaderFacade: KeyLoaderFacade\n\tlet cryptoWrapper: CryptoWrapper\n\tlet serviceExecutor: IServiceExecutor\n\n\tlet asymmetricCryptoFacade: AsymmetricCryptoFacade\n\n\to.beforeEach(function () {\n\t\trsa = object()\n\t\tpqFacade = object()\n\t\tkeyLoaderFacade = object()\n\t\tcryptoWrapper = object()\n\t\tserviceExecutor = object()\n\t\tasymmetricCryptoFacade = new AsymmetricCryptoFacade(rsa, pqFacade, keyLoaderFacade, cryptoWrapper, serviceExecutor)\n\t})\n\n\to.spec(\"authenticateSender\", function () {\n\t\tlet identifier: string\n\t\tlet identifierType: PublicKeyIdentifierType\n\t\tlet senderIdentityPubKey: Uint8Array\n\t\tlet senderKeyVersion: number\n\t\tlet keyData: PublicKeyGetIn\n\n\t\to.beforeEach(() => {\n\t\t\tidentifier = object<string>()\n\t\t\tidentifierType = object<PublicKeyIdentifierType>()\n\t\t\tsenderIdentityPubKey = new Uint8Array([1, 2, 3])\n\t\t\tsenderKeyVersion = 0\n\t\t\tkeyData = createPublicKeyGetIn({\n\t\t\t\tidentifier,\n\t\t\t\tidentifierType,\n\t\t\t\tversion: senderKeyVersion.toString(),\n\t\t\t})\n\t\t})\n\n\t\to(\"should return TUTACRYPT_AUTHENTICATION_SUCCEEDED if the key matches\", async function () {\n\t\t\twhen(serviceExecutor.get(PublicKeyService, keyData)).thenResolve({ pubEccKey: senderIdentityPubKey })\n\n\t\t\tconst result = await asymmetricCryptoFacade.authenticateSender({ identifier, identifierType }, senderIdentityPubKey, senderKeyVersion)\n\n\t\t\to(result).equals(EncryptionAuthStatus.TUTACRYPT_AUTHENTICATION_SUCCEEDED)\n\t\t})\n\n\t\to(\"should return TUTACRYPT_AUTHENTICATION_FAILED if sender does not have an ecc identity key in the requested version\", async function () {\n\t\t\twhen(serviceExecutor.get(PublicKeyService, keyData)).thenResolve({ pubEccKey: null, pubRsaKey: new Uint8Array([4, 5, 6]), pubKyberKey: null })\n\n\t\t\tconst result = await asymmetricCryptoFacade.authenticateSender({ identifier, identifierType }, senderIdentityPubKey, senderKeyVersion)\n\n\t\t\to(result).equals(EncryptionAuthStatus.TUTACRYPT_AUTHENTICATION_FAILED)\n\t\t})\n\n\t\to(\"should return TUTACRYPT_AUTHENTICATION_FAILED if the key does not match\", async function () {\n\t\t\twhen(serviceExecutor.get(PublicKeyService, keyData)).thenResolve({ pubEccKey: new Uint8Array([4, 5, 6]) })\n\n\t\t\tconst result = await asymmetricCryptoFacade.authenticateSender({ identifier, identifierType }, senderIdentityPubKey, senderKeyVersion)\n\n\t\t\to(result).equals(EncryptionAuthStatus.TUTACRYPT_AUTHENTICATION_FAILED)\n\t\t})\n\t})\n\n\to.spec(\"decryptSymKeyWithKeyPairAndAuthenticate\", function () {\n\t\to(\"should throw CryptoError if authentication fails\", async function () {\n\t\t\tconst pubEncSymKey: Uint8Array = object()\n\t\t\tconst symKey = new Uint8Array([1, 2, 3, 4])\n\t\t\tconst keyPair = object<PQKeyPairs>()\n\t\t\tkeyPair.keyPairType = KeyPairType.TUTA_CRYPT\n\n\t\t\tconst senderKeyVersion = \"1\"\n\t\t\tconst senderIdentifier = object<string>()\n\t\t\tconst senderIdentifierType = PublicKeyIdentifierType.GROUP_ID\n\t\t\tconst recipientIdentifier = object<string>()\n\t\t\tconst recipientIdentifierType = PublicKeyIdentifierType.MAIL_ADDRESS\n\t\t\tconst pubEncKeyData: PubEncKeyData = createTestEntity(PubEncKeyDataTypeRef, {\n\t\t\t\tpubEncSymKey,\n\t\t\t\tprotocolVersion: CryptoProtocolVersion.TUTA_CRYPT,\n\t\t\t\tsenderKeyVersion,\n\t\t\t\trecipientIdentifier,\n\t\t\t\trecipientIdentifierType,\n\t\t\t})\n\t\t\twhen(pqFacade.decapsulateEncoded(pubEncSymKey, keyPair)).thenResolve({\n\t\t\t\tdecryptedSymKeyBytes: symKey,\n\t\t\t\tsenderIdentityPubKey: object(),\n\t\t\t})\n\t\t\twhen(\n\t\t\t\tserviceExecutor.get(\n\t\t\t\t\tPublicKeyService,\n\t\t\t\t\tcreatePublicKeyGetIn({\n\t\t\t\t\t\tversion: senderKeyVersion,\n\t\t\t\t\t\tidentifierType: senderIdentifierType,\n\t\t\t\t\t\tidentifier: senderIdentifier,\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t).thenResolve({ pubEccKey: new Uint8Array([4, 5, 6]) })\n\n\t\t\tawait assertThrows(CryptoError, () =>\n\t\t\t\tasymmetricCryptoFacade.decryptSymKeyWithKeyPairAndAuthenticate(keyPair, pubEncKeyData, {\n\t\t\t\t\tidentifier: senderIdentifier,\n\t\t\t\t\tidentifierType: senderIdentifierType,\n\t\t\t\t}),\n\t\t\t)\n\t\t})\n\n\t\to(\"should not try authentication when protocol is not TutaCrypt\", async function () {\n\t\t\tconst pubEncSymKey: Uint8Array = object()\n\t\t\tconst pubEncKeyData: PubEncKeyData = createTestEntity(PubEncKeyDataTypeRef, {\n\t\t\t\tpubEncSymKey,\n\t\t\t\tprotocolVersion: CryptoProtocolVersion.RSA,\n\t\t\t\tsenderKeyVersion: null,\n\t\t\t})\n\n\t\t\tconst senderIdentifier = object<string>()\n\t\t\tconst senderIdentifierType = PublicKeyIdentifierType.GROUP_ID\n\n\t\t\tconst symKey = new Uint8Array([1, 2, 3, 4])\n\t\t\twhen(rsa.decrypt(RSA_TEST_KEYPAIR.privateKey, pubEncSymKey)).thenResolve(symKey)\n\n\t\t\tconst result = await asymmetricCryptoFacade.decryptSymKeyWithKeyPairAndAuthenticate(RSA_TEST_KEYPAIR, pubEncKeyData, {\n\t\t\t\tidentifier: senderIdentifier,\n\t\t\t\tidentifierType: senderIdentifierType,\n\t\t\t})\n\n\t\t\tverify(serviceExecutor.get(PublicKeyService, matchers.anything()), { times: 0 })\n\t\t\to(result).deepEquals({ senderIdentityPubKey: null, decryptedAesKey: uint8ArrayToBitArray(symKey) })\n\t\t})\n\t})\n\n\to.spec(\"decryptSymKeyWithKeyPair\", function () {\n\t\to(\"should raise a CryptoError when the protocol version is unknown\", async function () {\n\t\t\tawait assertThrows(CryptoError, async function () {\n\t\t\t\tawait asymmetricCryptoFacade.decryptSymKeyWithKeyPair(object(), \"unknown\" as CryptoProtocolVersion, object())\n\t\t\t})\n\t\t})\n\n\t\to(\"should call RSA decryption when the protocol version is set to RSA\", async function () {\n\t\t\tconst pubEncSymKey: Uint8Array = object()\n\n\t\t\twhen(rsa.decrypt(RSA_TEST_KEYPAIR.privateKey, pubEncSymKey)).thenResolve(new Uint8Array([1, 2, 3, 4]))\n\n\t\t\tawait asymmetricCryptoFacade.decryptSymKeyWithKeyPair(RSA_TEST_KEYPAIR, CryptoProtocolVersion.RSA, pubEncSymKey)\n\n\t\t\tverify(rsa.decrypt(RSA_TEST_KEYPAIR.privateKey, pubEncSymKey), { times: 1 })\n\t\t})\n\n\t\to(\"should raise a Crypto Error when trying to decypher a RSA that is not an RSA KeyPair\", async function () {\n\t\t\tconst pubEncSymKey: Uint8Array = object()\n\t\t\tconst keyPair = object<PQKeyPairs>()\n\t\t\tkeyPair.keyPairType = KeyPairType.TUTA_CRYPT\n\t\t\tawait assertThrows(CryptoError, async function () {\n\t\t\t\tawait asymmetricCryptoFacade.decryptSymKeyWithKeyPair(keyPair, CryptoProtocolVersion.RSA, pubEncSymKey)\n\t\t\t})\n\t\t})\n\n\t\to(\"should call tuta crypt decryption when the protocol version is set to TUTA_CRYPT\", async function () {\n\t\t\tconst pubEncSymKey: Uint8Array = object()\n\t\t\tconst keyPair = object<PQKeyPairs>()\n\t\t\tkeyPair.keyPairType = KeyPairType.TUTA_CRYPT\n\n\t\t\twhen(pqFacade.decapsulateEncoded(pubEncSymKey, keyPair)).thenResolve({\n\t\t\t\tdecryptedSymKeyBytes: new Uint8Array([1, 2, 3, 4]),\n\t\t\t\tsenderIdentityPubKey: object(),\n\t\t\t})\n\n\t\t\tawait asymmetricCryptoFacade.decryptSymKeyWithKeyPair(keyPair, CryptoProtocolVersion.TUTA_CRYPT, pubEncSymKey)\n\n\t\t\tverify(pqFacade.decapsulateEncoded(pubEncSymKey, keyPair), { times: 1 })\n\t\t})\n\n\t\to(\"should raise a Crypto Error when trying to decypher a TutaCrypt that is not an TutaCrypt KeyPair\", async function () {\n\t\t\tconst pubEncSymKey: Uint8Array = object()\n\t\t\tconst keyPair = object<RsaKeyPair>()\n\t\t\tkeyPair.keyPairType = KeyPairType.RSA\n\t\t\tawait assertThrows(CryptoError, async function () {\n\t\t\t\tawait asymmetricCryptoFacade.decryptSymKeyWithKeyPair(keyPair, CryptoProtocolVersion.TUTA_CRYPT, pubEncSymKey)\n\t\t\t})\n\t\t})\n\t})\n\n\to.spec(\"encryptPubSymKey\", function () {\n\t\tconst recipientKeyVersion = 1\n\t\tconst senderKeyVersion = 2\n\t\tconst senderGroupId = \"senderGroupId\"\n\t\tlet symKey: AesKey\n\t\tlet pubEncSymKeyBytes: Uint8Array\n\t\tlet recipientKyberPublicKey: KyberPublicKey\n\t\tlet senderPqKeyPair: Versioned<PQKeyPairs>\n\t\tlet ephemeralKeyPair: EccKeyPair\n\n\t\to.beforeEach(function () {\n\t\t\trecipientKyberPublicKey = object<KyberPublicKey>()\n\t\t\tsymKey = [1, 2, 3, 4]\n\t\t\tpubEncSymKeyBytes = object<Uint8Array>()\n\t\t\tsenderPqKeyPair = {\n\t\t\t\tobject: { keyPairType: KeyPairType.TUTA_CRYPT, eccKeyPair: object(), kyberKeyPair: object() },\n\t\t\t\tversion: senderKeyVersion,\n\t\t\t}\n\t\t\tephemeralKeyPair = object()\n\t\t\twhen(cryptoWrapper.generateEccKeyPair()).thenReturn(ephemeralKeyPair)\n\t\t\twhen(keyLoaderFacade.loadCurrentKeyPair(senderGroupId)).thenResolve(senderPqKeyPair)\n\t\t})\n\n\t\to(\"should raise a CryptoError when the key pair type is unknown\", async function () {\n\t\t\tawait assertThrows(CryptoError, async function () {\n\t\t\t\tawait asymmetricCryptoFacade.asymEncryptSymKey(symKey, object(), senderGroupId)\n\t\t\t})\n\t\t})\n\n\t\to(\"should encrypt the sym key with the recipient PQ public key\", async function () {\n\t\t\tconst pubKyberKey = new Uint8Array([1, 2, 3, 4])\n\t\t\tconst eccPublicKey = new Uint8Array([5, 6, 7, 8])\n\t\t\tconst recipientPublicKeys: Versioned<PublicKeys> = {\n\t\t\t\tobject: {\n\t\t\t\t\tpubKyberKey,\n\t\t\t\t\tpubEccKey: eccPublicKey,\n\t\t\t\t\tpubRsaKey: null,\n\t\t\t\t},\n\t\t\t\tversion: recipientKeyVersion,\n\t\t\t}\n\t\t\twhen(cryptoWrapper.bytesToKyberPublicKey(pubKyberKey)).thenReturn(recipientKyberPublicKey)\n\t\t\twhen(\n\t\t\t\tpqFacade.encapsulateAndEncode(\n\t\t\t\t\tsenderPqKeyPair.object.eccKeyPair,\n\t\t\t\t\tephemeralKeyPair,\n\t\t\t\t\t{\n\t\t\t\t\t\teccPublicKey,\n\t\t\t\t\t\tkyberPublicKey: recipientKyberPublicKey,\n\t\t\t\t\t\tkeyPairType: KeyPairType.TUTA_CRYPT,\n\t\t\t\t\t},\n\t\t\t\t\tmatchers.anything(),\n\t\t\t\t),\n\t\t\t).thenResolve(pubEncSymKeyBytes)\n\n\t\t\tconst pubEncSymKey = await asymmetricCryptoFacade.asymEncryptSymKey(symKey, recipientPublicKeys, senderGroupId)\n\n\t\t\to(pubEncSymKey).deepEquals({\n\t\t\t\tpubEncSymKeyBytes,\n\t\t\t\trecipientKeyVersion,\n\t\t\t\tsenderKeyVersion,\n\t\t\t\tcryptoProtocolVersion: CryptoProtocolVersion.TUTA_CRYPT,\n\t\t\t})\n\t\t})\n\n\t\to(\n\t\t\t\"should encrypt the sym key with the recipient PQ public key and generate new sender ecc identity key pair (sender has only RSA key pair)\",\n\t\t\tasync function () {\n\t\t\t\tconst newIdentityEccPair: EccKeyPair = { publicKey: object(), privateKey: object() }\n\t\t\t\twhen(cryptoWrapper.generateEccKeyPair()).thenReturn(newIdentityEccPair, ephemeralKeyPair)\n\t\t\t\tconst senderRsaKeyPair: Versioned<RsaKeyPair> = { object: RSA_TEST_KEYPAIR, version: senderKeyVersion }\n\t\t\t\twhen(keyLoaderFacade.loadCurrentKeyPair(senderGroupId)).thenResolve(senderRsaKeyPair)\n\t\t\t\tconst pubKyberKey = new Uint8Array([1, 2, 3, 4])\n\t\t\t\tconst eccPublicKey = new Uint8Array([5, 6, 7, 8])\n\t\t\t\tconst recipientPublicKeys: Versioned<PublicKeys> = {\n\t\t\t\t\tobject: {\n\t\t\t\t\t\tpubKyberKey,\n\t\t\t\t\t\tpubEccKey: eccPublicKey,\n\t\t\t\t\t\tpubRsaKey: null,\n\t\t\t\t\t},\n\t\t\t\t\tversion: recipientKeyVersion,\n\t\t\t\t}\n\t\t\t\twhen(cryptoWrapper.bytesToKyberPublicKey(pubKyberKey)).thenReturn(recipientKyberPublicKey)\n\t\t\t\twhen(\n\t\t\t\t\tpqFacade.encapsulateAndEncode(\n\t\t\t\t\t\tnewIdentityEccPair,\n\t\t\t\t\t\tephemeralKeyPair,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\teccPublicKey,\n\t\t\t\t\t\t\tkyberPublicKey: recipientKyberPublicKey,\n\t\t\t\t\t\t\tkeyPairType: KeyPairType.TUTA_CRYPT,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmatchers.anything(),\n\t\t\t\t\t),\n\t\t\t\t).thenResolve(pubEncSymKeyBytes)\n\t\t\t\tconst senderUserGroupKey = object<AesKey>()\n\t\t\t\twhen(keyLoaderFacade.getCurrentSymGroupKey(senderGroupId)).thenResolve({ object: senderUserGroupKey, version: senderKeyVersion })\n\t\t\t\tconst encryptedEccSenderPrivateKey = object<Uint8Array>()\n\t\t\t\twhen(cryptoWrapper.encryptEccKey(senderUserGroupKey, newIdentityEccPair.privateKey)).thenReturn(encryptedEccSenderPrivateKey)\n\n\t\t\t\tconst pubEncSymKey = await asymmetricCryptoFacade.asymEncryptSymKey(symKey, recipientPublicKeys, senderGroupId)\n\n\t\t\t\to(pubEncSymKey).deepEquals({\n\t\t\t\t\tpubEncSymKeyBytes,\n\t\t\t\t\trecipientKeyVersion,\n\t\t\t\t\tsenderKeyVersion,\n\t\t\t\t\tcryptoProtocolVersion: CryptoProtocolVersion.TUTA_CRYPT,\n\t\t\t\t})\n\t\t\t\tverify(\n\t\t\t\t\tserviceExecutor.put(\n\t\t\t\t\t\tPublicKeyService,\n\t\t\t\t\t\tmatchers.argThat((arg: PublicKeyPutIn) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\targ.pubEccKey === newIdentityEccPair.publicKey &&\n\t\t\t\t\t\t\t\targ.symEncPrivEccKey === encryptedEccSenderPrivateKey &&\n\t\t\t\t\t\t\t\targ.keyGroup === senderGroupId\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}),\n\t\t\t\t\t),\n\t\t\t\t)\n\t\t\t},\n\t\t)\n\n\t\to(\"should encrypt the sym key with the recipient RSA public key\", async function () {\n\t\t\tconst recipientPublicKeys: Versioned<PublicKeys> = {\n\t\t\t\tobject: {\n\t\t\t\t\tpubKyberKey: null,\n\t\t\t\t\tpubEccKey: null,\n\t\t\t\t\tpubRsaKey: hexToUint8Array(rsaPublicKeyToHex(RSA_TEST_KEYPAIR.publicKey)),\n\t\t\t\t},\n\t\t\t\tversion: recipientKeyVersion,\n\t\t\t}\n\n\t\t\twhen(\n\t\t\t\trsa.encrypt(\n\t\t\t\t\tmatchers.argThat((arg) => arg.keyPairType === KeyPairType.RSA),\n\t\t\t\t\tbitArrayToUint8Array(symKey),\n\t\t\t\t),\n\t\t\t).thenResolve(pubEncSymKeyBytes)\n\n\t\t\tconst pubEncSymKey = await asymmetricCryptoFacade.asymEncryptSymKey(symKey, recipientPublicKeys, senderGroupId)\n\n\t\t\to(pubEncSymKey).deepEquals({\n\t\t\t\tpubEncSymKeyBytes,\n\t\t\t\trecipientKeyVersion,\n\t\t\t\tsenderKeyVersion: null,\n\t\t\t\tcryptoProtocolVersion: CryptoProtocolVersion.RSA,\n\t\t\t})\n\t\t})\n\n\t\to(\"raise a ProgrammingError when passing an RSA public key\", async function () {\n\t\t\tawait assertThrows(ProgrammingError, async function () {\n\t\t\t\tawait asymmetricCryptoFacade.tutaCryptEncryptSymKey(\n\t\t\t\t\tobject(),\n\t\t\t\t\t{\n\t\t\t\t\t\tobject: {\n\t\t\t\t\t\t\tpubKyberKey: null,\n\t\t\t\t\t\t\tpubEccKey: null,\n\t\t\t\t\t\t\tpubRsaKey: hexToUint8Array(rsaPublicKeyToHex(RSA_TEST_KEYPAIR.publicKey)),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tversion: 2,\n\t\t\t\t\t},\n\t\t\t\t\tobject(),\n\t\t\t\t)\n\t\t\t})\n\t\t})\n\t})\n})\n","import o from \"@tutao/otest\"\nimport { CustomerAccountTerminationRequest, CustomerAccountTerminationRequestTypeRef } from \"../../../../../src/common/api/entities/sys/TypeRefs.js\"\nimport { aes256RandomKey, aesDecrypt, aesEncrypt, ENABLE_MAC, IV_BYTE_LENGTH, random } from \"@tutao/tutanota-crypto\"\nimport { decryptValue, encryptValue, InstanceMapper } from \"../../../../../src/common/api/worker/crypto/InstanceMapper.js\"\nimport { Cardinality, ValueType } from \"../../../../../src/common/api/common/EntityConstants.js\"\nimport { ModelValue } from \"../../../../../src/common/api/common/EntityTypes.js\"\nimport { assertThrows } from \"@tutao/tutanota-test-utils\"\nimport { ProgrammingError } from \"../../../../../src/common/api/common/error/ProgrammingError.js\"\nimport { base64ToUint8Array, isSameTypeRef, neverNull, stringToUtf8Uint8Array, uint8ArrayToBase64, utf8Uint8ArrayToString } from \"@tutao/tutanota-utils\"\nimport { resolveTypeReference } from \"../../../../../src/common/api/common/EntityFunctions.js\"\nimport { ContactAddressTypeRef, ContactTypeRef, Mail, MailAddressTypeRef, MailTypeRef } from \"../../../../../src/common/api/entities/tutanota/TypeRefs.js\"\nimport { createTestEntity } from \"../../../TestUtils.js\"\nimport { configureLoggedInUser, createMailLiteral, createTestUser } from \"./CryptoFacadeTest.js\"\nimport { EntityClient } from \"../../../../../src/common/api/common/EntityClient.js\"\nimport { UserFacade } from \"../../../../../src/common/api/worker/facades/UserFacade.js\"\nimport { object } from \"testdouble\"\nimport { KeyLoaderFacade } from \"../../../../../src/common/api/worker/facades/KeyLoaderFacade.js\"\n\no.spec(\"InstanceMapper\", function () {\n\tlet entityClient: EntityClient\n\tlet userFacade: UserFacade\n\tlet keyLoaderFacade: KeyLoaderFacade\n\n\tlet instanceMapper: InstanceMapper\n\to.beforeEach(() => {\n\t\tinstanceMapper = new InstanceMapper()\n\t\tuserFacade = object()\n\t\tkeyLoaderFacade = object()\n\t\tentityClient = object()\n\t})\n\n\tfunction createValueType(type, encrypted, cardinality): ModelValue & { name: string; since: number } {\n\t\treturn {\n\t\t\tname: \"test\",\n\t\t\tid: 426,\n\t\t\tsince: 6,\n\t\t\ttype: type,\n\t\t\tcardinality: cardinality,\n\t\t\tfinal: true,\n\t\t\tencrypted: encrypted,\n\t\t}\n\t}\n\n\to.spec(\"decrypt value\", function () {\n\t\to(\"decrypt string / number value without mac\", function () {\n\t\t\tlet sk = aes256RandomKey()\n\t\t\tlet value = \"this is a string value\"\n\t\t\tlet encryptedValue = uint8ArrayToBase64(aesEncrypt(sk, stringToUtf8Uint8Array(value), random.generateRandomData(IV_BYTE_LENGTH), true, true))\n\t\t\to(decryptValue(\"test\", createValueType(ValueType.String, true, Cardinality.One), encryptedValue, sk)).equals(value)\n\t\t\tvalue = \"516546\"\n\t\t\tencryptedValue = uint8ArrayToBase64(aesEncrypt(sk, stringToUtf8Uint8Array(value), random.generateRandomData(IV_BYTE_LENGTH), true, true))\n\t\t\to(decryptValue(\"test\", createValueType(ValueType.String, true, Cardinality.One), encryptedValue, sk)).equals(value)\n\t\t})\n\t\to(\"decrypt string / number value with mac\", function () {\n\t\t\tlet sk = aes256RandomKey()\n\t\t\tlet value = \"this is a string value\"\n\t\t\tlet encryptedValue = uint8ArrayToBase64(aesEncrypt(sk, stringToUtf8Uint8Array(value), random.generateRandomData(IV_BYTE_LENGTH), true, true))\n\t\t\to(decryptValue(\"test\", createValueType(ValueType.String, true, Cardinality.One), encryptedValue, sk)).equals(value)\n\t\t\tvalue = \"516546\"\n\t\t\tencryptedValue = uint8ArrayToBase64(aesEncrypt(sk, stringToUtf8Uint8Array(value), random.generateRandomData(IV_BYTE_LENGTH), true, true))\n\t\t\to(decryptValue(\"test\", createValueType(ValueType.String, true, Cardinality.One), encryptedValue, sk)).equals(value)\n\t\t})\n\t\to(\"decrypt boolean value without mac\", function () {\n\t\t\tlet valueType: ModelValue = createValueType(ValueType.Boolean, true, Cardinality.One)\n\t\t\tlet sk = aes256RandomKey()\n\t\t\tlet value = \"0\"\n\t\t\tlet encryptedValue = uint8ArrayToBase64(aesEncrypt(sk, stringToUtf8Uint8Array(value), random.generateRandomData(IV_BYTE_LENGTH), true, true))\n\t\t\to(decryptValue(\"test\", valueType, encryptedValue, sk)).equals(false)\n\t\t\tvalue = \"1\"\n\t\t\tencryptedValue = uint8ArrayToBase64(aesEncrypt(sk, stringToUtf8Uint8Array(value), random.generateRandomData(IV_BYTE_LENGTH), true, true))\n\t\t\to(decryptValue(\"test\", valueType, encryptedValue, sk)).equals(true)\n\t\t\tvalue = \"32498\"\n\t\t\tencryptedValue = uint8ArrayToBase64(aesEncrypt(sk, stringToUtf8Uint8Array(value), random.generateRandomData(IV_BYTE_LENGTH), true, true))\n\t\t\to(decryptValue(\"test\", valueType, encryptedValue, sk)).equals(true)\n\t\t})\n\t\to(\"decrypt boolean value with mac\", function () {\n\t\t\tlet valueType: ModelValue = createValueType(ValueType.Boolean, true, Cardinality.One)\n\t\t\tlet sk = aes256RandomKey()\n\t\t\tlet value = \"0\"\n\t\t\tlet encryptedValue = uint8ArrayToBase64(aesEncrypt(sk, stringToUtf8Uint8Array(value), random.generateRandomData(IV_BYTE_LENGTH), true, true))\n\t\t\to(decryptValue(\"test\", valueType, encryptedValue, sk)).equals(false)\n\t\t\tvalue = \"1\"\n\t\t\tencryptedValue = uint8ArrayToBase64(aesEncrypt(sk, stringToUtf8Uint8Array(value), random.generateRandomData(IV_BYTE_LENGTH), true, true))\n\t\t\to(decryptValue(\"test\", valueType, encryptedValue, sk)).equals(true)\n\t\t\tvalue = \"32498\"\n\t\t\tencryptedValue = uint8ArrayToBase64(aesEncrypt(sk, stringToUtf8Uint8Array(value), random.generateRandomData(IV_BYTE_LENGTH), true, true))\n\t\t\to(decryptValue(\"test\", valueType, encryptedValue, sk)).equals(true)\n\t\t})\n\t\to(\"decrypt date value without mac\", function () {\n\t\t\tlet valueType: ModelValue = createValueType(ValueType.Date, true, Cardinality.One)\n\t\t\tlet sk = aes256RandomKey()\n\t\t\tlet value = new Date().getTime().toString()\n\t\t\tlet encryptedValue = uint8ArrayToBase64(aesEncrypt(sk, stringToUtf8Uint8Array(value), random.generateRandomData(IV_BYTE_LENGTH), true, true))\n\t\t\to(decryptValue(\"test\", valueType, encryptedValue, sk)).deepEquals(new Date(parseInt(value)))\n\t\t})\n\t\to(\"decrypt date value with mac\", function () {\n\t\t\tlet valueType: ModelValue = createValueType(ValueType.Date, true, Cardinality.One)\n\t\t\tlet sk = aes256RandomKey()\n\t\t\tlet value = new Date().getTime().toString()\n\t\t\tlet encryptedValue = uint8ArrayToBase64(aesEncrypt(sk, stringToUtf8Uint8Array(value), random.generateRandomData(IV_BYTE_LENGTH), true, true))\n\t\t\to(decryptValue(\"test\", valueType, encryptedValue, sk)).deepEquals(new Date(parseInt(value)))\n\t\t})\n\t\to(\"decrypt bytes value without mac\", function () {\n\t\t\tlet valueType: ModelValue = createValueType(ValueType.Bytes, true, Cardinality.One)\n\t\t\tlet sk = aes256RandomKey()\n\t\t\tlet value = random.generateRandomData(5)\n\t\t\tlet encryptedValue = uint8ArrayToBase64(aesEncrypt(sk, value, random.generateRandomData(IV_BYTE_LENGTH), true, true))\n\t\t\tlet decryptedValue = decryptValue(\"test\", valueType, encryptedValue, sk)\n\t\t\to(decryptedValue instanceof Uint8Array).equals(true)\n\t\t\to(Array.from(decryptedValue)).deepEquals(Array.from(value))\n\t\t})\n\t\to(\"decrypt bytes value with mac\", function () {\n\t\t\tlet valueType: ModelValue = createValueType(ValueType.Bytes, true, Cardinality.One)\n\t\t\tlet sk = aes256RandomKey()\n\t\t\tlet value = random.generateRandomData(5)\n\t\t\tlet encryptedValue = uint8ArrayToBase64(aesEncrypt(sk, value, random.generateRandomData(IV_BYTE_LENGTH), true, true))\n\t\t\tlet decryptedValue = decryptValue(\"test\", valueType, encryptedValue, sk)\n\t\t\to(decryptedValue instanceof Uint8Array).equals(true)\n\t\t\to(Array.from(decryptedValue)).deepEquals(Array.from(value))\n\t\t})\n\t\to(\"decrypt compressedString\", function () {\n\t\t\tlet valueType: ModelValue = createValueType(ValueType.CompressedString, true, Cardinality.One)\n\t\t\tlet sk = aes256RandomKey()\n\t\t\tlet value = base64ToUint8Array(\"QHRlc3Q=\")\n\t\t\tlet encryptedValue = uint8ArrayToBase64(aesEncrypt(sk, value, random.generateRandomData(IV_BYTE_LENGTH), true, true))\n\t\t\tlet decryptedValue = decryptValue(\"test\", valueType, encryptedValue, sk)\n\t\t\to(typeof decryptedValue === \"string\").equals(true)\n\t\t\to(decryptedValue).equals(\"test\")\n\t\t})\n\t\to(\"decrypt compressedString w resize\", function () {\n\t\t\tlet valueType: ModelValue = createValueType(ValueType.CompressedString, true, Cardinality.One)\n\t\t\tlet sk = aes256RandomKey()\n\t\t\tlet value = base64ToUint8Array(\"X3RleHQgBQD//1FQdGV4dCA=\")\n\t\t\tlet encryptedValue = uint8ArrayToBase64(aesEncrypt(sk, value, random.generateRandomData(IV_BYTE_LENGTH), true, true))\n\t\t\tlet decryptedValue = decryptValue(\"test\", valueType, encryptedValue, sk)\n\t\t\to(typeof decryptedValue === \"string\").equals(true)\n\t\t\to(decryptedValue).equals(\n\t\t\t\t\"text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text text \",\n\t\t\t)\n\t\t})\n\t\to(\"decrypt empty compressedString\", function () {\n\t\t\tlet valueType: ModelValue = createValueType(ValueType.CompressedString, true, Cardinality.One)\n\t\t\tlet sk = aes256RandomKey()\n\t\t\tlet encryptedValue = uint8ArrayToBase64(aesEncrypt(sk, new Uint8Array([]), random.generateRandomData(IV_BYTE_LENGTH), true, true))\n\t\t\tlet decryptedValue = decryptValue(\"test\", valueType, encryptedValue, sk)\n\t\t\to(typeof decryptedValue === \"string\").equals(true)\n\t\t\to(decryptedValue).equals(\"\")\n\t\t})\n\t\to(\"do not decrypt null values\", function () {\n\t\t\tlet sk = aes256RandomKey()\n\t\t\to(decryptValue(\"test\", createValueType(ValueType.String, true, Cardinality.ZeroOrOne), null, sk)).equals(null)\n\t\t\to(decryptValue(\"test\", createValueType(ValueType.Date, true, Cardinality.ZeroOrOne), null, sk)).equals(null)\n\t\t\to(decryptValue(\"test\", createValueType(ValueType.Bytes, true, Cardinality.ZeroOrOne), null, sk)).equals(null)\n\t\t\to(decryptValue(\"test\", createValueType(ValueType.Boolean, true, Cardinality.ZeroOrOne), null, sk)).equals(null)\n\t\t\to(decryptValue(\"test\", createValueType(ValueType.Number, true, Cardinality.ZeroOrOne), null, sk)).equals(null)\n\t\t})\n\t\to(\"throw error on ONE null values (String)\", makeTestForErrorOnNull(ValueType.String))\n\t\to(\"throw error on ONE null values (Date)\", makeTestForErrorOnNull(ValueType.Date))\n\t\to(\"throw error on ONE null values (Bytes)\", makeTestForErrorOnNull(ValueType.Bytes))\n\t\to(\"throw error on ONE null values (Boolean)\", makeTestForErrorOnNull(ValueType.Boolean))\n\t\to(\"throw error on ONE null values (Number)\", makeTestForErrorOnNull(ValueType.Number))\n\n\t\tfunction makeTestForErrorOnNull(type) {\n\t\t\treturn async () => {\n\t\t\t\tlet sk = aes256RandomKey()\n\n\t\t\t\tconst e = await assertThrows(ProgrammingError, () => decryptValue(\"test\", createValueType(type, true, Cardinality.One), null, sk))\n\t\t\t\to(e.message).equals(\"Value test with cardinality ONE can not be null\")\n\t\t\t}\n\t\t}\n\n\t\to(\"convert unencrypted Date to JS type\", function () {\n\t\t\tlet value = new Date().getTime().toString()\n\t\t\to(decryptValue(\"test\", createValueType(ValueType.Date, false, Cardinality.One), value, null)).deepEquals(new Date(parseInt(value)))\n\t\t})\n\t\to(\"convert unencrypted Bytes to JS type\", function () {\n\t\t\tlet valueBytes = random.generateRandomData(15)\n\t\t\tlet value = uint8ArrayToBase64(valueBytes)\n\t\t\to(Array.from(decryptValue(\"test\", createValueType(ValueType.Bytes, false, Cardinality.One), value, null))).deepEquals(Array.from(valueBytes))\n\t\t})\n\t\to(\"convert unencrypted Boolean to JS type\", function () {\n\t\t\tlet value = \"0\"\n\t\t\to(decryptValue(\"test\", createValueType(ValueType.Boolean, false, Cardinality.One), value, null)).equals(false)\n\t\t\tvalue = \"1\"\n\t\t\to(decryptValue(\"test\", createValueType(ValueType.Boolean, false, Cardinality.One), value, null)).equals(true)\n\t\t})\n\t\to(\"convert unencrypted Number to JS type\", function () {\n\t\t\tlet value = \"\"\n\t\t\to(decryptValue(\"test\", createValueType(ValueType.Number, false, Cardinality.One), value, null)).equals(\"0\")\n\t\t\tvalue = \"0\"\n\t\t\to(decryptValue(\"test\", createValueType(ValueType.Number, false, Cardinality.One), value, null)).equals(\"0\")\n\t\t\tvalue = \"1\"\n\t\t\to(decryptValue(\"test\", createValueType(ValueType.Number, false, Cardinality.One), value, null)).equals(\"1\")\n\t\t})\n\t\to(\"convert unencrypted compressedString to JS type\", function () {\n\t\t\tlet value = \"\"\n\t\t\to(decryptValue(\"test\", createValueType(ValueType.CompressedString, false, Cardinality.One), value, null)).equals(\"\")\n\t\t\tvalue = \"QHRlc3Q=\"\n\t\t\to(decryptValue(\"test\", createValueType(ValueType.CompressedString, false, Cardinality.One), value, null)).equals(\"test\")\n\t\t})\n\t})\n\n\to.spec(\"encryptValue\", function () {\n\t\to(\"encrypt string / number value\", function () {\n\t\t\tconst valueType = createValueType(ValueType.String, true, Cardinality.One)\n\t\t\tlet sk = aes256RandomKey()\n\t\t\tlet value = \"this is a string value\"\n\t\t\tlet encryptedValue = neverNull(encryptValue(\"test\", valueType, value, sk))\n\t\t\tlet expected = uint8ArrayToBase64(\n\t\t\t\taesEncrypt(\n\t\t\t\t\tsk,\n\t\t\t\t\tstringToUtf8Uint8Array(value),\n\t\t\t\t\tbase64ToUint8Array(encryptedValue).slice(ENABLE_MAC ? 1 : 0, ENABLE_MAC ? 17 : 16),\n\t\t\t\t\ttrue,\n\t\t\t\t\tENABLE_MAC,\n\t\t\t\t),\n\t\t\t)\n\t\t\to(encryptedValue).equals(expected)\n\t\t\to(decryptValue(\"test\", valueType, encryptedValue, sk)).equals(value)\n\t\t})\n\t\to(\"encrypt boolean value\", function () {\n\t\t\tlet valueType: ModelValue = createValueType(ValueType.Boolean, true, Cardinality.One)\n\t\t\tlet sk = aes256RandomKey()\n\t\t\tlet value = false\n\t\t\tlet encryptedValue = neverNull(encryptValue(\"test\", valueType, value, sk))\n\t\t\tlet expected = uint8ArrayToBase64(\n\t\t\t\taesEncrypt(\n\t\t\t\t\tsk,\n\t\t\t\t\tstringToUtf8Uint8Array(value ? \"1\" : \"0\"),\n\t\t\t\t\tbase64ToUint8Array(encryptedValue).slice(ENABLE_MAC ? 1 : 0, ENABLE_MAC ? 17 : 16),\n\t\t\t\t\ttrue,\n\t\t\t\t\tENABLE_MAC,\n\t\t\t\t),\n\t\t\t)\n\t\t\to(encryptedValue).equals(expected)\n\t\t\to(decryptValue(\"test\", valueType, encryptedValue, sk)).equals(false)\n\t\t\tvalue = true\n\t\t\tencryptedValue = neverNull(encryptValue(\"test\", valueType, value, sk))\n\t\t\texpected = uint8ArrayToBase64(\n\t\t\t\taesEncrypt(\n\t\t\t\t\tsk,\n\t\t\t\t\tstringToUtf8Uint8Array(value ? \"1\" : \"0\"),\n\t\t\t\t\tbase64ToUint8Array(encryptedValue).slice(ENABLE_MAC ? 1 : 0, ENABLE_MAC ? 17 : 16),\n\t\t\t\t\ttrue,\n\t\t\t\t\tENABLE_MAC,\n\t\t\t\t),\n\t\t\t)\n\t\t\to(encryptedValue).equals(expected)\n\t\t\to(decryptValue(\"test\", valueType, encryptedValue, sk)).equals(true)\n\t\t})\n\t\to(\"encrypt date value\", function () {\n\t\t\tlet valueType: ModelValue = createValueType(ValueType.Date, true, Cardinality.One)\n\t\t\tlet sk = aes256RandomKey()\n\t\t\tlet value = new Date()\n\t\t\tlet encryptedValue = neverNull(encryptValue(\"test\", valueType, value, sk))\n\t\t\tlet expected = uint8ArrayToBase64(\n\t\t\t\taesEncrypt(\n\t\t\t\t\tsk,\n\t\t\t\t\tstringToUtf8Uint8Array(value.getTime().toString()),\n\t\t\t\t\tbase64ToUint8Array(encryptedValue).slice(ENABLE_MAC ? 1 : 0, ENABLE_MAC ? 17 : 16),\n\t\t\t\t\ttrue,\n\t\t\t\t\tENABLE_MAC,\n\t\t\t\t),\n\t\t\t)\n\t\t\to(encryptedValue).equals(expected)\n\t\t\to(decryptValue(\"test\", valueType, encryptedValue, sk)).deepEquals(value)\n\t\t})\n\t\to(\"encrypt bytes value\", function () {\n\t\t\tlet valueType: ModelValue = createValueType(ValueType.Bytes, true, Cardinality.One)\n\t\t\tlet sk = aes256RandomKey()\n\t\t\tlet value = random.generateRandomData(5)\n\t\t\tlet encryptedValue = neverNull(encryptValue(\"test\", valueType, value, sk))\n\t\t\tlet expected = uint8ArrayToBase64(\n\t\t\t\taesEncrypt(sk, value, base64ToUint8Array(encryptedValue).slice(ENABLE_MAC ? 1 : 0, ENABLE_MAC ? 17 : 16), true, ENABLE_MAC),\n\t\t\t)\n\t\t\to(encryptedValue).equals(expected)\n\t\t\to(Array.from(decryptValue(\"test\", valueType, encryptedValue, sk))).deepEquals(Array.from(value))\n\t\t})\n\t\to(\"do not encrypt null values\", function () {\n\t\t\tlet sk = aes256RandomKey()\n\t\t\to(encryptValue(\"test\", createValueType(ValueType.String, true, Cardinality.ZeroOrOne), null, sk)).equals(null)\n\t\t\to(encryptValue(\"test\", createValueType(ValueType.Date, true, Cardinality.ZeroOrOne), null, sk)).equals(null)\n\t\t\to(encryptValue(\"test\", createValueType(ValueType.Bytes, true, Cardinality.ZeroOrOne), null, sk)).equals(null)\n\t\t\to(encryptValue(\"test\", createValueType(ValueType.Boolean, true, Cardinality.ZeroOrOne), null, sk)).equals(null)\n\t\t\to(encryptValue(\"test\", createValueType(ValueType.Number, true, Cardinality.ZeroOrOne), null, sk)).equals(null)\n\t\t})\n\t\to(\"accept null _id and _permissions value during encryption\", function () {\n\t\t\tlet vt: ModelValue = {\n\t\t\t\tid: 426,\n\t\t\t\ttype: ValueType.GeneratedId,\n\t\t\t\tcardinality: Cardinality.One,\n\t\t\t\tfinal: true,\n\t\t\t\tencrypted: false,\n\t\t\t}\n\t\t\to(encryptValue(\"_id\", vt, null, null)).equals(null)\n\t\t\to(encryptValue(\"_permissions\", vt, null, null)).equals(null)\n\t\t})\n\t\to(\"throw error on ONE null values (enc String)\", makeTestForErrorOnNull(ValueType.String))\n\t\to(\"throw error on ONE null values (enc Date)\", makeTestForErrorOnNull(ValueType.Date))\n\t\to(\"throw error on ONE null values (enc Bytes)\", makeTestForErrorOnNull(ValueType.Bytes))\n\t\to(\"throw error on ONE null values (enc Boolean)\", makeTestForErrorOnNull(ValueType.Boolean))\n\t\to(\"throw error on ONE null values (enc Number)\", makeTestForErrorOnNull(ValueType.Number))\n\n\t\tfunction makeTestForErrorOnNull(type) {\n\t\t\treturn async () => {\n\t\t\t\tlet sk = aes256RandomKey()\n\n\t\t\t\tconst e = await assertThrows(ProgrammingError, async () => encryptValue(\"test\", createValueType(type, true, Cardinality.One), null, sk))\n\t\t\t\to(e.message).equals(\"Value test with cardinality ONE can not be null\")\n\t\t\t}\n\t\t}\n\n\t\to(\"convert unencrypted Date to DB type\", function () {\n\t\t\tlet value = new Date()\n\t\t\to(encryptValue(\"test\", createValueType(ValueType.Date, false, Cardinality.One), value, null)).equals(value.getTime().toString())\n\t\t})\n\n\t\to(\"convert unencrypted Bytes to DB type\", function () {\n\t\t\tlet valueBytes = random.generateRandomData(15)\n\t\t\to(encryptValue(\"test\", createValueType(ValueType.Bytes, false, Cardinality.One), valueBytes, null)).equals(uint8ArrayToBase64(valueBytes))\n\t\t})\n\n\t\to(\"convert unencrypted Boolean to DB type\", function () {\n\t\t\tlet value = false\n\t\t\to(encryptValue(\"test\", createValueType(ValueType.Boolean, false, Cardinality.One), value, null)).equals(\"0\")\n\t\t\tvalue = true\n\t\t\to(encryptValue(\"test\", createValueType(ValueType.Boolean, false, Cardinality.One), value, null)).equals(\"1\")\n\t\t})\n\n\t\to(\"convert unencrypted Number to DB type\", function () {\n\t\t\tlet value = \"0\"\n\t\t\to(encryptValue(\"test\", createValueType(ValueType.Number, false, Cardinality.One), value, null)).equals(\"0\")\n\t\t\tvalue = \"1\"\n\t\t\to(encryptValue(\"test\", createValueType(ValueType.Number, false, Cardinality.One), value, null)).equals(\"1\")\n\t\t})\n\t})\n\n\to(\"decrypt instance\", async function () {\n\t\to.timeout(1000)\n\t\tlet subject = \"this is our subject\"\n\t\tlet confidential = true\n\t\tlet senderName = \"TutanotaTeam\"\n\t\tconst user = createTestUser(\"Alice\", entityClient)\n\t\tconst sk = aes256RandomKey()\n\t\tlet mail = createMailLiteral(user.mailGroupKey, sk, subject, confidential, senderName, user.name, user.mailGroup._id)\n\t\tconst MailTypeModel = await resolveTypeReference(MailTypeRef)\n\t\treturn instanceMapper.decryptAndMapToInstance<Mail>(MailTypeModel, mail, sk).then((decrypted) => {\n\t\t\to(isSameTypeRef(decrypted._type, MailTypeRef)).equals(true)\n\t\t\to(decrypted.receivedDate.getTime()).equals(1470039025474)\n\t\t\to(decrypted.confidential).equals(confidential)\n\t\t\to(decrypted.subject).equals(subject)\n\t\t\to(decrypted.replyType).equals(\"0\")\n\t\t\t// aggregates\n\t\t\to(isSameTypeRef(decrypted.sender._type, MailAddressTypeRef)).equals(true)\n\t\t\to(decrypted.sender.name).equals(senderName)\n\t\t\to(decrypted.sender.address).equals(\"hello@tutao.de\")\n\t\t})\n\t})\n\n\to.spec(\"encryptAndMapToLiteral\", function () {\n\t\to.test(\"encrypt instance\", async function () {\n\t\t\tlet sk = aes256RandomKey()\n\t\t\tlet address = createTestEntity(ContactAddressTypeRef)\n\t\t\taddress.type = \"0\"\n\t\t\taddress.address = \"Entenhausen\"\n\t\t\taddress.customTypeName = \"0\"\n\t\t\tlet contact = createTestEntity(ContactTypeRef)\n\t\t\tcontact.title = \"Dr.\"\n\t\t\tcontact.firstName = \"Max\"\n\t\t\tcontact.lastName = \"Meier\"\n\t\t\tcontact.comment = \"what?\"\n\t\t\tcontact.company = \"WIW\"\n\t\t\tcontact.addresses = [address]\n\t\t\tconst ContactTypeModel = await resolveTypeReference(ContactTypeRef)\n\t\t\tconst result: any = await instanceMapper.encryptAndMapToLiteral(ContactTypeModel, contact, sk)\n\t\t\to(result._format).equals(\"0\")\n\t\t\to(result._ownerGroup).equals(null)\n\t\t\to(result._ownerEncSessionKey).equals(null)\n\t\t\to(utf8Uint8ArrayToString(aesDecrypt(sk, base64ToUint8Array(result.addresses[0].type)))).equals(contact.addresses[0].type)\n\t\t\to(utf8Uint8ArrayToString(aesDecrypt(sk, base64ToUint8Array(result.addresses[0].address)))).equals(contact.addresses[0].address)\n\t\t\to(utf8Uint8ArrayToString(aesDecrypt(sk, base64ToUint8Array(result.addresses[0].customTypeName)))).equals(contact.addresses[0].customTypeName)\n\t\t\to(utf8Uint8ArrayToString(aesDecrypt(sk, base64ToUint8Array(result.title)))).equals(contact.title)\n\t\t\to(utf8Uint8ArrayToString(aesDecrypt(sk, base64ToUint8Array(result.firstName)))).equals(contact.firstName)\n\t\t\to(utf8Uint8ArrayToString(aesDecrypt(sk, base64ToUint8Array(result.lastName)))).equals(contact.lastName)\n\t\t\to(utf8Uint8ArrayToString(aesDecrypt(sk, base64ToUint8Array(result.comment)))).equals(contact.comment)\n\t\t\to(utf8Uint8ArrayToString(aesDecrypt(sk, base64ToUint8Array(result.company)))).equals(contact.company)\n\t\t})\n\n\t\to.test(\"map unencrypted to DB literal\", async function () {\n\t\t\tconst dummyDate = new Date()\n\t\t\tconst customerAccountTerminationRequest = createTestEntity(CustomerAccountTerminationRequestTypeRef)\n\t\t\tcustomerAccountTerminationRequest._format = \"0\"\n\t\t\tcustomerAccountTerminationRequest.terminationDate = dummyDate\n\t\t\tcustomerAccountTerminationRequest.terminationRequestDate = dummyDate\n\t\t\tcustomerAccountTerminationRequest.customer = \"customerId\"\n\t\t\tconst customerAccountTerminationRequestLiteral = {\n\t\t\t\t_format: \"0\",\n\t\t\t\t_id: null,\n\t\t\t\t_ownerGroup: null,\n\t\t\t\t_permissions: null,\n\t\t\t\tterminationDate: dummyDate.getTime().toString(),\n\t\t\t\tterminationRequestDate: dummyDate.getTime().toString(),\n\t\t\t\tcustomer: \"customerId\",\n\t\t\t}\n\t\t\tconst CustomerAccountTerminationRequestTypeModel = await resolveTypeReference(CustomerAccountTerminationRequestTypeRef)\n\t\t\tconst result = await instanceMapper.encryptAndMapToLiteral(CustomerAccountTerminationRequestTypeModel, customerAccountTerminationRequest, null)\n\t\t\to(result).deepEquals(customerAccountTerminationRequestLiteral)\n\t\t})\n\n\t\to.test(\"when finalIvs has an entry it will reuse the IV\", async function () {\n\t\t\tconst sk = aes256RandomKey()\n\t\t\tconst TypeModel = await resolveTypeReference(MailTypeRef)\n\t\t\tconst mail = {\n\t\t\t\t...createTestEntity(MailTypeRef),\n\t\t\t\tsubject: \"some subject\",\n\t\t\t\tsender: createTestEntity(MailAddressTypeRef),\n\t\t\t}\n\t\t\tconst iv = new Uint8Array(IV_BYTE_LENGTH)\n\t\t\tiv[1] = 1\n\t\t\tmail[\"_finalIvs\"] = { subject: new Uint8Array(iv) }\n\t\t\tconst result: any = await instanceMapper.encryptAndMapToLiteral(TypeModel, mail, sk)\n\t\t\tconst encryptedSubject = base64ToUint8Array(result[\"subject\"] as string)\n\t\t\to(encryptedSubject.slice(1, IV_BYTE_LENGTH + 1)).deepEquals(iv)\n\t\t})\n\n\t\to.test(\"when finalIvs has an empty entry and the value is default it will write default placeholder back\", async function () {\n\t\t\tconst sk = aes256RandomKey()\n\t\t\tconst TypeModel = await resolveTypeReference(MailTypeRef)\n\t\t\tconst mail = {\n\t\t\t\t...createTestEntity(MailTypeRef),\n\t\t\t\tsubject: \"\",\n\t\t\t\tsender: createTestEntity(MailAddressTypeRef),\n\t\t\t}\n\t\t\tconst iv = new Uint8Array([])\n\t\t\tmail[\"_finalIvs\"] = { subject: new Uint8Array(iv) }\n\t\t\tconst result: any = await instanceMapper.encryptAndMapToLiteral(TypeModel, mail, sk)\n\t\t\tconst encryptedSubject = result[\"subject\"]\n\t\t\to(encryptedSubject).equals(\"\")\n\t\t})\n\t})\n\n\to(\"map unencrypted to instance\", async function () {\n\t\tconst dummyDate = new Date()\n\t\tconst customerAccountTerminationRequestLiteral = {\n\t\t\t_format: \"0\",\n\t\t\tterminationDate: dummyDate.getTime().toString(),\n\t\t\tterminationRequestDate: dummyDate.getTime().toString(),\n\t\t\tcustomer: \"customerId\",\n\t\t}\n\t\tconst CustomerAccountTerminationTypeModel = await resolveTypeReference(CustomerAccountTerminationRequestTypeRef)\n\n\t\tconst customerAccountTerminationRequest: CustomerAccountTerminationRequest = await instanceMapper.decryptAndMapToInstance(\n\t\t\tCustomerAccountTerminationTypeModel,\n\t\t\tcustomerAccountTerminationRequestLiteral,\n\t\t\tnull,\n\t\t)\n\t\to(customerAccountTerminationRequest._format).equals(\"0\")\n\t\to(customerAccountTerminationRequest.customer).equals(\"customerId\")\n\t\to(customerAccountTerminationRequest.terminationDate).deepEquals(dummyDate)\n\t\to(customerAccountTerminationRequest.terminationRequestDate).deepEquals(dummyDate)\n\t})\n\n\to(\"decryption errors should be written to _errors field\", async function () {\n\t\tconst testUser = createTestUser(\"Bob\", entityClient)\n\t\tconfigureLoggedInUser(testUser, userFacade, keyLoaderFacade)\n\t\tlet subject = \"this is our subject\"\n\t\tlet confidential = true\n\t\tlet senderName = \"TutanotaTeam\"\n\t\tlet sk = aes256RandomKey()\n\t\tlet mail = createMailLiteral(testUser.mailGroupKey, sk, subject, confidential, senderName, testUser.name, testUser.mailGroup._id)\n\t\tmail.subject = \"asdf\"\n\t\tconst MailTypeModel = await resolveTypeReference(MailTypeRef)\n\t\tconst instance: Mail = await instanceMapper.decryptAndMapToInstance(MailTypeModel, mail, sk)\n\t\to(typeof instance._errors[\"subject\"]).equals(\"string\")\n\t})\n})\n","import o from \"@tutao/otest\"\nimport { IServiceExecutor } from \"../../../../../src/common/api/common/ServiceRequest.js\"\nimport { matchers, object, verify, when } from \"testdouble\"\nimport { UserFacade } from \"../../../../../src/common/api/worker/facades/UserFacade.js\"\nimport { OwnerEncSessionKeysUpdateQueue } from \"../../../../../src/common/api/worker/crypto/OwnerEncSessionKeysUpdateQueue.js\"\nimport { GroupKeyUpdateTypeRef, InstanceSessionKeyTypeRef, TypeInfoTypeRef } from \"../../../../../src/common/api/entities/sys/TypeRefs.js\"\nimport { UpdateSessionKeysService } from \"../../../../../src/common/api/entities/sys/Services.js\"\nimport { delay } from \"@tutao/tutanota-utils\"\nimport { LockedError } from \"../../../../../src/common/api/common/error/RestError.js\"\nimport { createTestEntity } from \"../../../TestUtils.js\"\nimport { resolveTypeReference } from \"../../../../../src/common/api/common/EntityFunctions.js\"\nimport { MailTypeRef } from \"../../../../../src/common/api/entities/tutanota/TypeRefs.js\"\nimport { TypeModel } from \"../../../../../src/common/api/common/EntityTypes.js\"\n\nconst { anything, captor } = matchers\n\no.spec(\"OwnerEncSessionKeysUpdateQueueTest\", function () {\n\tlet serviceExecutor: IServiceExecutor\n\tlet ownerEncSessionKeysUpdateQueue: OwnerEncSessionKeysUpdateQueue\n\tlet userFacade: UserFacade\n\tlet mailTypeModel: TypeModel\n\n\to.beforeEach(async function () {\n\t\tmailTypeModel = await resolveTypeReference(MailTypeRef)\n\t\tuserFacade = object()\n\t\twhen(userFacade.isLeader()).thenReturn(true)\n\t\tserviceExecutor = object()\n\t\townerEncSessionKeysUpdateQueue = new OwnerEncSessionKeysUpdateQueue(userFacade, serviceExecutor, 0)\n\t})\n\n\to.spec(\"updateInstanceSessionKeys\", function () {\n\t\to(\"send updates from queue\", async function () {\n\t\t\tconst updatableInstanceSessionKeys = [\n\t\t\t\tcreateTestEntity(InstanceSessionKeyTypeRef, {\n\t\t\t\t\tinstanceId: \"mailInstanceId\",\n\t\t\t\t\tinstanceList: \"mailInstanceList\",\n\t\t\t\t\ttypeInfo: createTestEntity(TypeInfoTypeRef),\n\t\t\t\t\tsymEncSessionKey: new Uint8Array([1, 2, 3]),\n\t\t\t\t}),\n\t\t\t\tcreateTestEntity(InstanceSessionKeyTypeRef, {\n\t\t\t\t\tinstanceId: \"fileInstanceId\",\n\t\t\t\t\tinstanceList: \"fileInstanceList\",\n\t\t\t\t\ttypeInfo: createTestEntity(TypeInfoTypeRef),\n\t\t\t\t\tsymEncSessionKey: new Uint8Array([4, 5, 6]),\n\t\t\t\t}),\n\t\t\t]\n\t\t\tawait await ownerEncSessionKeysUpdateQueue.updateInstanceSessionKeys(updatableInstanceSessionKeys, mailTypeModel)\n\t\t\tawait delay(0)\n\t\t\tconst updatedPostCaptor = captor()\n\t\t\tverify(serviceExecutor.post(UpdateSessionKeysService, updatedPostCaptor.capture()))\n\t\t\to(updatedPostCaptor.value.ownerEncSessionKeys).deepEquals(updatableInstanceSessionKeys)\n\t\t})\n\n\t\to(\"no updates sent if not leader\", async function () {\n\t\t\twhen(userFacade.isLeader()).thenReturn(false)\n\t\t\tconst updatableInstanceSessionKeys = [createTestEntity(InstanceSessionKeyTypeRef)]\n\t\t\tawait ownerEncSessionKeysUpdateQueue.updateInstanceSessionKeys(updatableInstanceSessionKeys, mailTypeModel)\n\t\t\tawait delay(0)\n\t\t\tverify(serviceExecutor.post(anything(), anything()), { times: 0 })\n\t\t})\n\n\t\to(\"no updates sent for GroupKeyUpdate type\", async function () {\n\t\t\tconst groupKeyUpdateTypeModel = await resolveTypeReference(GroupKeyUpdateTypeRef)\n\t\t\tconst updatableInstanceSessionKeys = [createTestEntity(InstanceSessionKeyTypeRef)]\n\t\t\tawait ownerEncSessionKeysUpdateQueue.updateInstanceSessionKeys(updatableInstanceSessionKeys, groupKeyUpdateTypeModel)\n\t\t\tawait delay(0)\n\t\t\tverify(serviceExecutor.post(anything(), anything()), { times: 0 })\n\t\t})\n\n\t\to(\"retry after LockedError\", async function () {\n\t\t\tlet throwError = true\n\t\t\twhen(serviceExecutor.post(UpdateSessionKeysService, anything())).thenDo(() => {\n\t\t\t\tif (throwError) {\n\t\t\t\t\treturn Promise.reject(new LockedError(\"test lock\"))\n\t\t\t\t} else {\n\t\t\t\t\treturn undefined\n\t\t\t\t}\n\t\t\t})\n\t\t\tconst updatableInstanceSessionKeys = [\n\t\t\t\tcreateTestEntity(InstanceSessionKeyTypeRef, {\n\t\t\t\t\tinstanceId: \"mailInstanceId\",\n\t\t\t\t\tinstanceList: \"mailInstanceList\",\n\t\t\t\t\ttypeInfo: createTestEntity(TypeInfoTypeRef),\n\t\t\t\t\tsymEncSessionKey: new Uint8Array([1, 2, 3]),\n\t\t\t\t}),\n\t\t\t\tcreateTestEntity(InstanceSessionKeyTypeRef, {\n\t\t\t\t\tinstanceId: \"fileInstanceId\",\n\t\t\t\t\tinstanceList: \"fileInstanceList\",\n\t\t\t\t\ttypeInfo: createTestEntity(TypeInfoTypeRef),\n\t\t\t\t\tsymEncSessionKey: new Uint8Array([4, 5, 6]),\n\t\t\t\t}),\n\t\t\t]\n\t\t\tawait ownerEncSessionKeysUpdateQueue.updateInstanceSessionKeys(updatableInstanceSessionKeys, mailTypeModel)\n\t\t\tawait delay(0)\n\t\t\tthrowError = false\n\t\t\twhen(serviceExecutor.post(UpdateSessionKeysService, anything())).thenResolve(undefined)\n\t\t\tawait delay(0)\n\t\t\tconst updatedPostCaptor = captor()\n\t\t\tverify(serviceExecutor.post(UpdateSessionKeysService, updatedPostCaptor.capture()), { times: 2 })\n\t\t\to(updatedPostCaptor.value.ownerEncSessionKeys).deepEquals(updatableInstanceSessionKeys)\n\t\t\tif (!updatedPostCaptor.values) {\n\t\t\t\tthrow new Error(\"should have been invoked twice\")\n\t\t\t}\n\t\t\to(updatedPostCaptor.values[0]).deepEquals(updatedPostCaptor.values[1])\n\t\t})\n\n\t\to(\"debounced request sends entire queue\", async function () {\n\t\t\tconst updatableInstanceSessionKeys = [\n\t\t\t\tcreateTestEntity(InstanceSessionKeyTypeRef, {\n\t\t\t\t\tinstanceId: \"mailInstanceId\",\n\t\t\t\t\tinstanceList: \"mailInstanceList\",\n\t\t\t\t\ttypeInfo: createTestEntity(TypeInfoTypeRef),\n\t\t\t\t\tsymEncSessionKey: new Uint8Array([1, 2, 3]),\n\t\t\t\t}),\n\t\t\t\tcreateTestEntity(InstanceSessionKeyTypeRef, {\n\t\t\t\t\tinstanceId: \"fileInstanceId\",\n\t\t\t\t\tinstanceList: \"fileInstanceList\",\n\t\t\t\t\ttypeInfo: createTestEntity(TypeInfoTypeRef),\n\t\t\t\t\tsymEncSessionKey: new Uint8Array([4, 5, 6]),\n\t\t\t\t}),\n\t\t\t]\n\t\t\tawait ownerEncSessionKeysUpdateQueue.updateInstanceSessionKeys([updatableInstanceSessionKeys[0]], mailTypeModel)\n\t\t\tawait ownerEncSessionKeysUpdateQueue.updateInstanceSessionKeys([updatableInstanceSessionKeys[1]], mailTypeModel)\n\t\t\tawait delay(0)\n\t\t\tconst updatedPostCaptor = captor()\n\t\t\tverify(serviceExecutor.post(UpdateSessionKeysService, updatedPostCaptor.capture()))\n\t\t\to(updatedPostCaptor.value.ownerEncSessionKeys).deepEquals(updatableInstanceSessionKeys)\n\t\t})\n\n\t\to(\"empty inputs do not trigger a call to the service\", async function () {\n\t\t\tawait ownerEncSessionKeysUpdateQueue.updateInstanceSessionKeys([], mailTypeModel)\n\t\t\tawait delay(0)\n\t\t\tverify(serviceExecutor.post(UpdateSessionKeysService, anything()), { times: 0 })\n\t\t})\n\t})\n})\n","{\n\t\"rsaEncryptionTests\": [\n\t\t{\n\t\t\t\"publicKey\": \"02008bb1bbcb2c6915c182b0c7cc93e1d8210181ffee4be4ae81f7a98fdba2d6e37cea72e2124ebb6b05d330ab1ddfbc6d85c9d1c90fc3b65bd9634c3b722fe77ab98f33cc28af975d51609e1c308324501d615cbb82836c33c2a240e00826ddf09460cee7a975c0607579d4f7b707e19287a1c754ba485e04aab664e44cae8fcab770b9bb5c95a271786aa79d6fa11dd21bdb3a08b679bd5f29fc95ab573a3dabcbd8e70aaec0cc2a817eefbc886d3eafea96abd0d5e364b83ccf74f4d18b3546b014fa24b90134179ed952209971211c623a2743da0c3236abd512499920a75651482b43b27c18d477e8735935425933d8f09a12fbf1950cf8a381ef5f2400fcf9\",\n\t\t\t\"privateKey\": \"02008bb1bbcb2c6915c182b0c7cc93e1d8210181ffee4be4ae81f7a98fdba2d6e37cea72e2124ebb6b05d330ab1ddfbc6d85c9d1c90fc3b65bd9634c3b722fe77ab98f33cc28af975d51609e1c308324501d615cbb82836c33c2a240e00826ddf09460cee7a975c0607579d4f7b707e19287a1c754ba485e04aab664e44cae8fcab770b9bb5c95a271786aa79d6fa11dd21bdb3a08b679bd5f29fc95ab573a3dabcbd8e70aaec0cc2a817eefbc886d3eafea96abd0d5e364b83ccf74f4d18b3546b014fa24b90134179ed952209971211c623a2743da0c3236abd512499920a75651482b43b27c18d477e8735935425933d8f09a12fbf1950cf8a381ef5f2400fcf90200816022249104e1f94e289b6284b36d8f63ee1a31806852965be0d632fc25389ac02795e88eb254f4181bc2def00f7affa5627d6bf43e37e2a56c3cc20c4bbe058cf2d3e9fa759d1f78f3f5f797fd5195644e95fad1ecac235e51e72aa59476f374952b486e9db4b818157d362e3e638ee9edca329c4336df43fd3cd327f8542d1add9798af1d6a9e8cf8f54dd0b6a6f9ed9c3f5d803c220716757871e1442ef407ffe5df44c364bf57a60551b681173747b8df8e4138101f1d048cc1941a5d4c1fd3eda5bc96496eb1892477d811b845a7c9b3333e700989a1134e8f65edbf3a8332baa7195eb6aa33591b6ab41ec8215c6487979df5cf1b9736fd4fea73eee102000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e7a2e7a5cc651614fd17eb10765ef63462e5767745fc849e97095319d42f8cbb1485aba0f590b33208e666e949db0465e483a122467f771a986da6855abb148d0b5c1eefb08636d0aeb36b8ec161497cc9a64704f0976aceb33d09af5408ded1aec771b534f9a27fd9dc3303146ce98872915ed730ed9661eec46b8c0d6b6d37020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000009a632cb2e0a17ee6e363e3e056e5170480a3790023e342cb221431be37d63e692ce572390a379cf470c8a9fa4251a0af84d746b79ff91f6dcf168417137150d93049098ef747a601825982cbbd1ac1c20b3f3ee97b25e1739c31b43e78fc1cd53134dc4e82ebf98c720c34852fbd2288370421b848575f4d054e1d1e66b47f4f02000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b09e8b48e56fd2859072135f4b129f62546228914b80fed239d1f756436f3a3c4faa98b2336bf0e6ded86771cc49beb1beab0b4b2a3bf8e20385e029e083b368d4579a9322a343da9ccadbe14edc527f5ef6754273fcd088e92c4a5d30934eeaccfcf05bbe17f66acc0055b92c72db229a50f3e2db40dda0b0c17e4b9cd3e3c30200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000088861ee6e7e1a7f8c1287a40ce56b3ae159b79caf7f166057fd35fd1984aead1d313eb982942d897088d4a52b606bd13b9632d7400112b0bcdcf596b9693e42ccb982acdb43a35c0abe63fd5af1a54312604fdbb365d5f2afefaad2b798d6869d6a3aa15fb8c75170f5b5fae4f72ef7089462c136c55673f12ebeab0119e97dd02000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d8538fe6ebe9514412692fc985f8fd62b237c51c160c3d49aeeafffa057f2feff8f29040a205895b61dfa3f6188851021dc9e50152f3ea69746f5eb491af4a6dde21db9fa2c6fa61198ea02d6b600ed4267c3871af686c8db12e4bcbaaaa552e157e66fda90d34fce11cfd0f5eea6fbb236818070fb3a13751ad408e4231f499\",\n\t\t\t\"input\": \"83197c134aeeff44c5ea6f4fae4ebda3\",\n\t\t\t\"seed\": \"a82f703e3faae5490ca64a2b100c2d4c093ce3549a2bfbbc88615b29824fab59\",\n\t\t\t\"result\": \"843ce9168930b862f26ed512e641f395f6fd8e8ee350892208985c478a742713d18a36ce8a64b62a36ecf92585890a2f89cf5effc7182968436b35a61f56f0f26e86bb373e85554ab621e29da169a38bbc84e5725e4ea1e5d42c6df74f0874f0fe65b0563c7b95bf97d697ca3a2f8c2d8259f210320d5dbec1987aa0c4d828a0bbc5d60ddc07f2b07759b35f4cf08618383b6912f2cd2eaff81b8b1083146ccc6d90b6a171939a94b455239af034995a367bb081b4edc9028adbcc21a34331064e4a6160ce982a6386f03e4837593339e062338fdbcb1d6400b4dff089a20e67b13f0f4a2c2acaa3bc7ea16e68c9407d73b42d7a63c0d6612e44d5de72ea00fc\"\n\t\t},\n\t\t{\n\t\t\t\"publicKey\": \"02008bb1bbcb2c6915c182b0c7cc93e1d8210181ffee4be4ae81f7a98fdba2d6e37cea72e2124ebb6b05d330ab1ddfbc6d85c9d1c90fc3b65bd9634c3b722fe77ab98f33cc28af975d51609e1c308324501d615cbb82836c33c2a240e00826ddf09460cee7a975c0607579d4f7b707e19287a1c754ba485e04aab664e44cae8fcab770b9bb5c95a271786aa79d6fa11dd21bdb3a08b679bd5f29fc95ab573a3dabcbd8e70aaec0cc2a817eefbc886d3eafea96abd0d5e364b83ccf74f4d18b3546b014fa24b90134179ed952209971211c623a2743da0c3236abd512499920a75651482b43b27c18d477e8735935425933d8f09a12fbf1950cf8a381ef5f2400fcf9\",\n\t\t\t\"privateKey\": \"02008bb1bbcb2c6915c182b0c7cc93e1d8210181ffee4be4ae81f7a98fdba2d6e37cea72e2124ebb6b05d330ab1ddfbc6d85c9d1c90fc3b65bd9634c3b722fe77ab98f33cc28af975d51609e1c308324501d615cbb82836c33c2a240e00826ddf09460cee7a975c0607579d4f7b707e19287a1c754ba485e04aab664e44cae8fcab770b9bb5c95a271786aa79d6fa11dd21bdb3a08b679bd5f29fc95ab573a3dabcbd8e70aaec0cc2a817eefbc886d3eafea96abd0d5e364b83ccf74f4d18b3546b014fa24b90134179ed952209971211c623a2743da0c3236abd512499920a75651482b43b27c18d477e8735935425933d8f09a12fbf1950cf8a381ef5f2400fcf90200816022249104e1f94e289b6284b36d8f63ee1a31806852965be0d632fc25389ac02795e88eb254f4181bc2def00f7affa5627d6bf43e37e2a56c3cc20c4bbe058cf2d3e9fa759d1f78f3f5f797fd5195644e95fad1ecac235e51e72aa59476f374952b486e9db4b818157d362e3e638ee9edca329c4336df43fd3cd327f8542d1add9798af1d6a9e8cf8f54dd0b6a6f9ed9c3f5d803c220716757871e1442ef407ffe5df44c364bf57a60551b681173747b8df8e4138101f1d048cc1941a5d4c1fd3eda5bc96496eb1892477d811b845a7c9b3333e700989a1134e8f65edbf3a8332baa7195eb6aa33591b6ab41ec8215c6487979df5cf1b9736fd4fea73eee102000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e7a2e7a5cc651614fd17eb10765ef63462e5767745fc849e97095319d42f8cbb1485aba0f590b33208e666e949db0465e483a122467f771a986da6855abb148d0b5c1eefb08636d0aeb36b8ec161497cc9a64704f0976aceb33d09af5408ded1aec771b534f9a27fd9dc3303146ce98872915ed730ed9661eec46b8c0d6b6d37020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000009a632cb2e0a17ee6e363e3e056e5170480a3790023e342cb221431be37d63e692ce572390a379cf470c8a9fa4251a0af84d746b79ff91f6dcf168417137150d93049098ef747a601825982cbbd1ac1c20b3f3ee97b25e1739c31b43e78fc1cd53134dc4e82ebf98c720c34852fbd2288370421b848575f4d054e1d1e66b47f4f02000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b09e8b48e56fd2859072135f4b129f62546228914b80fed239d1f756436f3a3c4faa98b2336bf0e6ded86771cc49beb1beab0b4b2a3bf8e20385e029e083b368d4579a9322a343da9ccadbe14edc527f5ef6754273fcd088e92c4a5d30934eeaccfcf05bbe17f66acc0055b92c72db229a50f3e2db40dda0b0c17e4b9cd3e3c30200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000088861ee6e7e1a7f8c1287a40ce56b3ae159b79caf7f166057fd35fd1984aead1d313eb982942d897088d4a52b606bd13b9632d7400112b0bcdcf596b9693e42ccb982acdb43a35c0abe63fd5af1a54312604fdbb365d5f2afefaad2b798d6869d6a3aa15fb8c75170f5b5fae4f72ef7089462c136c55673f12ebeab0119e97dd02000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d8538fe6ebe9514412692fc985f8fd62b237c51c160c3d49aeeafffa057f2feff8f29040a205895b61dfa3f6188851021dc9e50152f3ea69746f5eb491af4a6dde21db9fa2c6fa61198ea02d6b600ed4267c3871af686c8db12e4bcbaaaa552e157e66fda90d34fce11cfd0f5eea6fbb236818070fb3a13751ad408e4231f499\",\n\t\t\t\"input\": \"2d2ab0a40010a202457ef6c973c9d5740058b18bed7e648d2d7e7310df8d1675\",\n\t\t\t\"seed\": \"a82f703e3faae5490ca64a2b100c2d4c093ce3549a2bfbbc88615b29824fab59\",\n\t\t\t\"result\": \"8317b2db99dc191c333226a5f83b0f8a0125ccf298424a43450dc9b4cc72c037a9e8f16b633e591ef3e16e7649c7f7a746c9b65ac9d2b4888367f7ebc5235dd2aedb712ed085205ce6847ded9f05f9defa7af419b43d56b8a3e40822e4fc0aaa9305bc0b23c96382a541149300a9c216abf70e97b782db7a0e5939d8f023d8d3637187fa45ed63dc4f2a355bfacc77bd7dc0d7c193717d2e0e382ef0fe7ffe8f9169eb2ec3e7e8b08119a9913d3318b1d5aceadb86a7072d57fb1df7eeff9438a87c35f77d521123aaed949a2b3d9aacdd1d913a0b64db5a2ec2147f1fdb1a203bfd92e26d49d9ab0784b3da55cb892596b7670b4425b9c278d18c3bacf4a672\"\n\t\t}\n\t],\n\t\"kyberEncryptionTests\": [\n\t\t{\n\t\t\t\"publicKey\": \"06001ca3c52629b5161c0ed6f100efe9650f7983652865a2e00049c7c840741238022170a89b7e4a001f014a62223e29d6693712428e415520487155078be8a78c6b92c628d667241174f7f2acc333bfe7db667063ce5d45b69afcc9f16b64d9a2ad48784b133963268a1ab2c9a8f76638de4280b3733c1752a09929203fb237a5dac0d5b37387181edcf3500755bb34f37b5cf7bb31266a7c49853276c95bb179595ca5833b25d4726b9014affafb2b074338885abdbe8c7915a12576565370c181f24b31cbb66ae4ca69c0452b9db632f0bc4179972922fb932c0364cc8763f6d7bbcf7531b7981442f583904937ab33bbd528754fc425e422b22eb66f45e16208ec49cdb0472829361e30af5dd24bccdca6cca7811bac40c0095fa128c60b202eda22435692aa67177f0e02c381f220249059e79b75aba5b04d39055b6cc9324641fef2bb978abe09ec9960b35bc8a94a1cd4445b702bca11a4336c261ed4738af0a7588c748bc1590f335757c8a4fc0a58ffe15c84691551f2c9f1202548e595c39b73d0c422557b34161813d93b4463a020db27c490aa6095f43cdab0b2d21b4bea66c09c9a5e56d2a79b8c7e958712b56996a67631514b7e97d849cc3a81b7a1bd4579930310a56b43a8654c7606d8c28acb8f2ac3b93b5857a43712f9193f65d2cf76fc422deb4ff85c6f4775a4b49cab655c3a5c5916707bc37525c43a914bbe22ae1c7b96143bab620189bcd98e52137950539526f5818a0a7a3919040e9790710b1eb5f73ed3359dfd1790491b492d38212c43a1ec30cdca66c46d98a80f957e9823084c6697219027a54b98d37811cc0a20bcac336eb85c3b3a2b31a26a28f6cabad7a13fa73887364d2993c2753a8dcfc0a769e2cb03025db349607e3c1a6f54861b79823943cbf091070fc3895d775a68441b41ea3d584c360546808cd3252a7b2baf7808930a7cf003718a30854d57450595a9f374236eb3a0d358396b972f05fc9ea9164abc3aa4e6b3a70679c4224479a5d84a4777041238278a4b657163b013667d7be35081c645e0fb4a07a20173f54dd92a6b64469f21f146530723c62503d2b331a7262b60540f50775eb5e06f1a0401e48072b3a736af250fea149a32f421cf560000fc7ed2e50bb6d096c2aa4f1fcc7680513699bcbedc59c8bfeabe05a9626b904fe9ac9cba19cd9704bf92c82380134f010322f90b78b23ca858215cb07b6bbdd434cd440af015844ef27b58297922a24d3d531de35734cbf552aed02963f1076785949301457035a5c51874a1b4ca2805cb0b07bd44f77a59a7c48e0a1dd7e69d4baa4f07472be82c58ee5b4fff093cdbbc6bfdd37aa8c5cb79dcbfda589cae8c8f6d3490386c531b98b83d008f440388418308211c6e48fc1153493d56f915e85aabd0052ed01b210a143c073cbef96192aa04a544330c87c5a344521f7d44835cba1b3ae1303fc215bcd99a20fa00395bc9edf74502981766f56e7b97398185915edb7c95dcc4859b9798d25f1eb5cfad85c698bcafe0b11744f1283c536188757c3ad505f05650320c2021667f4f978fb120635c036b4a34732f67a7017aa740ba7b7f269fa0e940c7d51bbe6b0cf7d4370dd4872831b3258b803a64cff331b6b880925fc260ba63930e3164d153285c5a45db620efad208104087653852e667af48aa5884a1660ce8519533851340c8286372b2eaaf7d5c20c2b84ae0b33acdf827960a73bdfa68c28bb2c8a6475998673f2c2c3ae4bf2740c925d556fdd259d2eab5b2204faac71109ec9e261a9825dc49c03c2b10b5a72b9ca003e02f948acc00393d51282e92c61f991a606a88438ddcb6be73b4341b1ada180dc1620390b033a5bc536e8b96ce9a89a7d5276913c19de78bd0c393a74c6c2bdbb0bd307d2ff5ad608bc0424230706915d563009f05422f595a0d51083b17253b12470f503e84058b32a290ded39d14d1136f0570fa43c174acb726293940f848186b85a2fc22d7cb103a08cbed438537a42cb495841b457c2901b179530105563288d6578ed81ec4d988a5b9b8c10898bef7bdef4300e694801fa3c8e9e90b7ae30eec349d6934668a4ba843203b86bb4745d5281870b9ee83547309268c9740e02001560409fcf4cb54c67bafb417be366d810c7854f9750020bd58d5134911f959fe588af8e73aefa60ed00a55e8acc8451f837be565e2e719\",\n\t\t\t\"privateKey\": \"06004c04453f7506f72038b5c2a4f8f92c130a8e5bdc95f8f324a618ad66c65e8071014b62176957309aea5a921c5b09567b65c62231994da401306886126c25037f50a635360758217f7c6b1de0e65af134b88bf400ee9401c38382649a9c8790910ac679521a68a1f0958db310c9190120fa925a4c69de2b2772e10a01208e2276af79b82ddf7a8f46592ee9357be2661ca189742645aafbb507de439a3ae6c6030b872c2a96dbf38643338bc1f61ac797ac09aabcd1d6bc0830956668afc90ac3457401cf2a2cf129981cb5248a163393ea12cbd0b7ebda1aa1560cb2463111ecb9e7d88460c049d0084807e8128a361da69481063287c08a857f8c5553400c67e40724a8a2e54807c8bac508434cc6ccc70fe90ddff007f27647b3799a4aac5c8b5090d368c5bb3294cb67c3a636128d0c1e38a196bf446a12c6459cb2a5dc752394fc7f20942915f4b99758a969d356e551156292897db34be6565ce843bbe0b055b1970c06836523d6b2e447454b513e87564238d8984468482952a4154968a2f2cb5e43c1490a3b9ee91157ab6cdb64064e3cabab299a6b19614437c399589452889869ea7b5ed68eb82056b4a54789b034c8612615a2597f539348255c859b9d144bc4c9889b06579abc6b19b2968b962a08bf093ad5b7325f665ea6d58a60349d94a52149f198b20295b497173949929436a81ee46af5125db56183706aa576224947b804143658c196a1b62a6530814618743af7c02a06e03993b74bd98635ede3642a2c216688002aa90872f40395190a3c3a7efdfaa2b3b326d4806f55039cabb5166b3c8b88dbc963a90812298ae2307e134449e848c481b568a0064db2aa7c9c16cb8464acfd538e84bb494de5b99bf8b48fdb65e8c78f3797adcf1b9f72516ab391ce69306289f5af93647177573c8f1877c9601613823f97c025b35bc6bccc57d9f40f3e0113854694317b9a5a7766cd9ca6552b7be82caa3f284fb228c906164addc486b5670772906a152a580ea73fe6b6060c8627e7690232467c3c17cd430b077216089d1b630278948718c65e608f66979d90c28dad1398866732b5437b5646c6f251c63f152046305a227b5abf91a0aab1b9ef191a97cb5929c00a92495ec3b42771f958b450797a95476e9c5331b715274b894f073d671b553d699de84c361ae253aa69caa4677f63920fbfccc195fc5ae4529b353668c04c120295a937c2129ad0a0894175f004b88081a9b4a73848b13f18502f3ba5a0c78b05e7c85cf70450cf30345721701ba5cafc94885c4449987118501973ffaa6f6a73236945600027a4b7500734e03fb2d5b0fd03a3907a0ba37a65cdc6ccf44277a046c8e4f27b2bac3b576965aeb3100cb94a3c19168a666b153c1d2e74cc25e42db45079aa1c099ae397edb2235224ab1cc852a547b29d500e7a182b945b267fabb84d941a1888a627621042814a929141637873e309c04ef92c90501e0486cfe4353959072912723996609442c1a66b2045810994227aa2c263c13fba221a987a662c7d299808b29543bc678880700971b9a9412822a27b2156ca64d305a15af882d668705ca76490687ab979815ac70ecda47f394319c54487716405c2c99d4aa30ce988686bf510d16a9790b2425be12b26b2cb92aa3de6f59ebc0497b46764771a52663225c75670e551ae8a42250f396a990bc849f07a33239eb0ecc5a3ca06268bc39237a995443a45a62f4b27ca41e336ea044469a69f0a8a77f7a9bc669730f2b150c17a2ed949798c259a49e4715f906ac8c35dc5040e7c8089fc448c9e87b37a16601fc37b4c94b5cfc2ce6a12ce0a074e29449271ab9f801a5879b2c9e7c051ef42050ad08ced647f30263c85e4ca9a6cc5bcd6afd9eb32887707711c06dfc8a2e57963db2b30b1a718299186932a7d89207c7c6a030fabb738215b939358791496d7a72008c280c9867971f73823d6a72a635ab422183b04bd85602ed935085232cd7726bde1f78b6c7221a0e9cbd4e24a51c36d6c1634983a5d004a3a91fbc395c7b2c1142a2d49763fe3b4d7940ee4ba98a5b4c71ff63151975e87003a1752257c2a4b0d1b5612155abf064b1c20755c877625a8c176cbab3aeb96142658a01794db17a513b48bbcb747005602161a480b78430d6b1800206a0057312f5dc38c04a0b0190fee88c7f6f96f5f453e3bbf5a98ada10b64145600206bb0b827e28469737931032a75d8219ea09889824ef61cd69097e9f7eb9fd43306001ca3c52629b5161c0ed6f100efe9650f7983652865a2e00049c7c840741238022170a89b7e4a001f014a62223e29d6693712428e415520487155078be8a78c6b92c628d667241174f7f2acc333bfe7db667063ce5d45b69afcc9f16b64d9a2ad48784b133963268a1ab2c9a8f76638de4280b3733c1752a09929203fb237a5dac0d5b37387181edcf3500755bb34f37b5cf7bb31266a7c49853276c95bb179595ca5833b25d4726b9014affafb2b074338885abdbe8c7915a12576565370c181f24b31cbb66ae4ca69c0452b9db632f0bc4179972922fb932c0364cc8763f6d7bbcf7531b7981442f583904937ab33bbd528754fc425e422b22eb66f45e16208ec49cdb0472829361e30af5dd24bccdca6cca7811bac40c0095fa128c60b202eda22435692aa67177f0e02c381f220249059e79b75aba5b04d39055b6cc9324641fef2bb978abe09ec9960b35bc8a94a1cd4445b702bca11a4336c261ed4738af0a7588c748bc1590f335757c8a4fc0a58ffe15c84691551f2c9f1202548e595c39b73d0c422557b34161813d93b4463a020db27c490aa6095f43cdab0b2d21b4bea66c09c9a5e56d2a79b8c7e958712b56996a67631514b7e97d849cc3a81b7a1bd4579930310a56b43a8654c7606d8c28acb8f2ac3b93b5857a43712f9193f65d2cf76fc422deb4ff85c6f4775a4b49cab655c3a5c5916707bc37525c43a914bbe22ae1c7b96143bab620189bcd98e52137950539526f5818a0a7a3919040e9790710b1eb5f73ed3359dfd1790491b492d38212c43a1ec30cdca66c46d98a80f957e9823084c6697219027a54b98d37811cc0a20bcac336eb85c3b3a2b31a26a28f6cabad7a13fa73887364d2993c2753a8dcfc0a769e2cb03025db349607e3c1a6f54861b79823943cbf091070fc3895d775a68441b41ea3d584c360546808cd3252a7b2baf7808930a7cf003718a30854d57450595a9f374236eb3a0d358396b972f05fc9ea9164abc3aa4e6b3a70679c4224479a5d84a4777041238278a4b657163b013667d7be35081c645e0fb4a07a20173f54dd92a6b64469f21f146530723c62503d2b331a7262b60540f50775eb5e06f1a0401e48072b3a736af250fea149a32f421cf560000fc7ed2e50bb6d096c2aa4f1fcc7680513699bcbedc59c8bfeabe05a9626b904fe9ac9cba19cd9704bf92c82380134f010322f90b78b23ca858215cb07b6bbdd434cd440af015844ef27b58297922a24d3d531de35734cbf552aed02963f1076785949301457035a5c51874a1b4ca2805cb0b07bd44f77a59a7c48e0a1dd7e69d4baa4f07472be82c58ee5b4fff093cdbbc6bfdd37aa8c5cb79dcbfda589cae8c8f6d3490386c531b98b83d008f440388418308211c6e48fc1153493d56f915e85aabd0052ed01b210a143c073cbef96192aa04a544330c87c5a344521f7d44835cba1b3ae1303fc215bcd99a20fa00395bc9edf74502981766f56e7b97398185915edb7c95dcc4859b9798d25f1eb5cfad85c698bcafe0b11744f1283c536188757c3ad505f05650320c2021667f4f978fb120635c036b4a34732f67a7017aa740ba7b7f269fa0e940c7d51bbe6b0cf7d4370dd4872831b3258b803a64cff331b6b880925fc260ba63930e3164d153285c5a45db620efad208104087653852e667af48aa5884a1660ce8519533851340c8286372b2eaaf7d5c20c2b84ae0b33acdf827960a73bdfa68c28bb2c8a6475998673f2c2c3ae4bf2740c925d556fdd259d2eab5b2204faac71109ec9e261a9825dc49c03c2b10b5a72b9ca003e02f948acc00393d51282e92c61f991a606a88438ddcb6be73b4341b1ada180dc1620390b033a5bc536e8b96ce9a89a7d5276913c19de78bd0c393a74c6c2bdbb0bd307d2ff5ad608bc0424230706915d563009f05422f595a0d51083b17253b12470f503e84058b32a290ded39d14d1136f0570fa43c174acb726293940f848186b85a2fc22d7cb103a08cbed438537a42cb495841b457c2901b179530105563288d6578ed81ec4d988a5b9b8c10898bef7bdef4300e694801fa3c8e9e90b7ae30eec349d6934668a4ba843203b86bb4745d5281870b9ee83547309268c9740e02001560409fcf4cb54c67bafb417be366d810c7854f9750020bd58d5134911f959fe588af8e73aefa60ed00a55e8acc8451f837be565e2e719\",\n\t\t\t\"seed\": \"6bb0b827e28469737931032a75d8219ea09889824ef61cd69097e9f7eb9fd433\",\n\t\t\t\"cipherText\": \"a807b3fa2af05596610d6300572a703fdc0a935d264e1d62c4948389598e17e96e54b0d949743cc96119d5b506e6773de362d443eff95a1f1f6380537b12c73bd839565d32c037118f4a6c7188b1414f04a44221299aec7f619939e332f1940ef54c88bec633d6235fde8f8baac2f645e720c568e9ef739a85ad3dcae4684e5ffa938b43ef419a9c92afb486be061edc8543e71c1ff10170f80c9bf3601144330352a3c44a9563c3c155f968a790d9babb9311e564069911ccbb41fbfb5bbad3049a6368202791abc6bf12d9bf8505dccc3e1ee477c8edce232b2cd6b7e7a7506efdc5e9c22e042752e8d99f3d0948a010b6b31005d325721e3093a04d583e3d6d469d14d3739dda856c9622e652368cbdc9b3f05f9ee8f05107710a842c4875d3e7b87b17588da9547de972f861cd974d222639e8f3ae850ff344cd2b979e24d4a39da1456fe280721b516d2e306a845d79ddd887bf1074111edddc4be53e1aa561ccf177c5dcbc69fe2b4e5c1e52a55a33872a9c320d0d2d19e70d3658ca4c24c6d8f3cb24a2875ab6c40fbfbfdfc6c25411b801a13f4539e7b8fcf43615c71edba747e97a7b477edcc067c3d146ea26dc4bd4c03f84362c303d1a5a2dc8be80ecf4ab7b7a6cce93a59059fbf4f009e556fd2bbc7e1615fd8c2f6ec0d085ee84d5c8f1f14f8277ba5b23ebabc13b4a4a478b3819e1772826d7b5633b5097493d3f5458687d66846e29f2ecf12b2ae25532e64915c29204703ebb6c6f3d0a88a2b4e851fea5164cdaf2c6889b64dfac0e0a0cc843d60695a4fd24ce6b8596284e50091e6df5f6fc0901c1b16d46aed3bb9946fcfeb45555297cfef0dba87ef0268db6f067f52378f3c5aef4e472f95ddaff9aeea051df08949bcc3f8cfa356f30980186b0ece604c8c22844c316dfef15eeba67a643b6cda956c64e70bb4f2e19304f546f7d6897524a79b13e5fdccd050af8f0130a782a5ce30d5edcb0f9e9c706af08ab461eb8b9939638c2eb1c5b199f160c3ddd1cae7657bbc92900a2d0e8bdcd6e08836f8b168599702993c0f7426dc3ea83b9adf5a0686ac12549866f3efa03559a68703c7dd94f4200a1368bf66a129ff245be9eee5d06c08851210d0a98f0fe965e58192bca25b32fe225f2af2c3ebd3d6ce6e9269865a5e4c6f789ed2a8c961ac0d2adbba4379e71573349d55f221a489c2dbc2998a7cce78454b24ae78a767825bb3489ff4f4433d7638d34c29db02635c8a10b3a0620b79006565d3126b1068fe5e856c0dfd665cd7c493052119627a1f4aa4be47667672688e0cd695c72bd7e7681a0cca31357844b6b62cd21ed4619bf19873f7c49a21d1db717f40359cb25c45d1d61adcccdba2cb1ac5689c80f9cb454e689b98cf02c57e19209a7c1dd9f4bc1422f472c35a580de725956e6b96595194fcea6deb50ce44fb84da51be9dd0880d34aab5265c104908ca4340bb0472d158624b0f7aac9412eac1aa8cdd0ecfe7a469eb61b62bda1aa66c07392bc146e66b844b7b8d989de26c803795c77d23cfa6bbeaac4104d31234e4094d327fea131618b260ed74ac843cdba9fce67b5460bca65293fbf16100e4cc8dc281d0967a27626edae23dd4fe32bd0be30df9cbc9e4363ce795b530ffebbe497b9837286b72b3e9d2090f2d05a2c0a086b19ae99613f5d1b3f2ba31f84160c46bacc14be992ab6aa0eebbbf77b77eb47e73dadbe2d029361f715010549a209c9e1352fbe4dd1c3b3cedb3c8f81cf1238e4d6889ff8b7fb243ba8cfe817e6a4e4d4f6e090e1e2ef2cd1f58c94fef4787bf5564d81a512bd99f81c481220864021e53e811d2db8da1eba0bcae9a55032f977d1e7c4f6d706a698a9de7dec55ece9e7780d973e9bdd99d64670300bc7cc59208ad5d898f771167f6820d6987e3d9fd34e09aa3be61ca78c8edd4db66c295c2838d0fa24ea4ae99e04763454156b2741ba68149c4ae6822a59d4c0a80784d35046eeb9e0d40f66406e38662067e5d6525b7384cf390ff96832d3c006c361a6fb6e8df6ff388ff5300ca951acc02d28d0d11254228de3166484803285e0ff3d67ade6c7d20a311959cbec840d1325e78fa86b64ee2fd53df71408041e96897b3cc1e12cac81022488c33b356017d4f51865d1bca561c71403663cf91c46e78c2fd14b504d63cc8b46250be57c49fa85cd837152b8ac63326a1df93d2f\",\n\t\t\t\"sharedSecret\": \"dd2f644699213517ffdc1623d9da69aa9a1a17111232b4c70003f22ac45851b6\"\n\t\t},\n\t\t{\n\t\t\t\"publicKey\": \"0600ac54c08819b700bb49ad72138dc1145cf443e29c150f4cbec89b4846e12ff2846245d3385755519feb0c0ab82753e485a099ceaf112fecd4b1d9916832f902bc530574960381d66b455883c5fa8959cb4a57a8adc15c09c6c0b5775b24aa9540d0d50f7a72c1cbe19234636799e049fe7378e919656e7a9e9c1b072387985e1083345a3f85189801b545b480139e206bb569ba0b2a451f9b287ed105de87b4708754f7f02793d901402bb441ca7578038504020ad04b71eee23b308698dea73caa9900d5bc276f267066abcc3665c48b2967d4274f85bac00c1a69ce32458c09c2f3b8773f9b0996ca91811432ae65954de74ce39741cd74a340806e843199bdb94b88dbaab1b6cea71867d8ac4fb82bccb6eb7dd901ad7e4a6342e4a641d9cffc32b6142a118ad89a8e965917e6417eb3be32d9a856464c18806d15aaa8617b0b37897b4a9760a134a0d196b813134a1ea3b262602d2c6066d0c133aa322fdd63bd49a830e0006b74235bcb921592dc5be0a38151024d884415370cabe2096a6dec71da9523527791e635833d0561e3d55a680b2586dac5a2a549c4e14261bc36d37b9988b1b48d832e9c1891992108f946206c032ca8d596c2bca500d11acb5794fb1729bec15f396b2f7907505608a83fb7cf73351022f36a56b02cb77ba78a02b9f18cb427e583a4d33e9806087ab40ac93b9e551132b4039ea8817a5c5957ed8a0ec6341a7b875995a40e7f407bccc39d5300608d67a50fc7024737264aa1079c7a7252375f08194d0042a11fd2a548966813bc5c81ec6e3364a30a558ae22420098aca5b4639504cc9c4348eda9393abf08b16687952a61051038ad92504eae7112ea3a0eb41604d742e2af222d075c55601b775b16964624d4f7631e3b34324867e8c73700c3aab79f88a4255c2dad953d0053400b13ad6031ab80660be956fa2a915efa6b9b9d8132427790c5a0b31cbcc437798420b7e1047b33364516b5253e2fc8c9c58b0d9eb2bad1646af79a13ca12824b52f4b3075039782b53c01b395a755c55a98ec2f29a614ffa79c7e1b7c77f8a97f5a07540165ed2a66e6118ec2c227bc0c76a6974b0ad975be3059005542da95b44436713c712c157b78e7a55bb1e7be4e8b336b646b4ed09085f647e6b0352335a97e492c8713b27be34857e31b74fc75df959131352439c23f15611db0a76ca077788df505e6b5b8b432907c415b28113fdc24549465c3fd8383974b345fd94e87a9710be84b56e30028eb8b64e71fc3270438b2722a8207c27aafdc23686958453051c0b9e3028196a7c800be5b070137fa7aa5e6620cb42a84bb53d4ba5abaccbb44a391229ab502a3435ca66aa7991872c2b8d7368bd8742e743b029ca63d0cbba53ea57011b7636b654e3a4146b9c18ed3f41176c602b25105a8964b4b77b5a9577d69b2c62883364bf553f2448f20e75665480f56a6359c361a7df9a205da525adb88e4201f3c9688c4b71631f4123b5b86fbc11f65a5cb4db5432bf4c76203b19eb33310f8b5641a00659614a84a1db0ab322a8333d8d29b678977d20545d63bcbb95098cf83c71470b2ae335ebeab6f4af393c959c70c1c8cb3cbb7a9e36a6275cc3824ac8e0587cf40121504c1be6b460b8a4cb97797d15c8a6e15a0fcc6af384366bd02627c869aea84624b0476957463a3a24979e34e7f9c8583f80f1b844ef68cc3be78bfe9e867bbe3704a5bca250720f6fca0c6f32882bc1473322f73051054986c2d95a78ceb7971b234168547da833f8c60c0be717f710c48fb62cd14981f3218819618c8e32531bbe5b37815563fa1bf0b014e939cc61bfcb2de182fae851110a6ba7b04b6befab7e5c660a4753ed07000a4d59b2e250c52324019024c9f843b6b703a6fb6533017c0d0d5895e40114d044042a04b48713827624eaaf6677dc485c9b139ca815ff7550f8fa26a1ce9826b717ebbd22013d8c735b8a828215cb88c941e129fe5cabde0091cc6d8264169a186b2b654f870d25c0ab1412d7efa32ef440cfde318ab9a9501884bd05978eb06bf9a9c5a2e288e2b182996698fbb7967cf4079fe012e3e505901bc836f755e616b602fb10d3a9ba327ba204da5b6cd570e0d431465b13b0d0b0525929207dac52859bb1e45ca438b1af1a285ab131f00206a4789f6d81b9283a90142b47c63a0f4133950ca5c6b52eef8b3ebc256b9a428\",\n\t\t\t\"privateKey\": \"060061b6785ee020a290bdd857b73a14130cc6792f5977f70539f9045925023b2e94b5354bb5db72c6edf598570bb09e078d76097f2a10609614544d6647ba9783d432afbe715268100f5bd8c416b10c15a610dd03ceb038004d7bab0792b344d3229568cd8bc7b294d51a64f20d03c8c05ff41aad5970528c4dc865319ac69e3a0a4d73daa300423515f5baa8000907b506d27447861b930e33b1751946efbaa245bb8d6d8062b1f5552213ad4b026cee80c180b16a770408dcb138fdb113f2047dac935299148d08d397a9fb36fe4b253de2a8f3e6076d354ca591643674aedddcb5d9fb136888b351f24026c668307c2776b0225eb0c33e67964b4744422cca9dd14d48d053963b88d3b85727a74ec8ba1c2773be595301fa52bb02407cd74501d51596c1b9bf40b693e676684eba27482965bb781275a4ca96630b01247da7fa27abd493e99b8f52861039b888214196ebba973ab96151368e75a15da893496cb77207790e0a989d21fb02934c27e3481e9b30b482f554edf431bc5cca946ccb34d9789ab555ff077bee330d8cab07cb917a9fb26b20680f1c694819e66b065471d799980c41ced8bb284d0106a5f9bd51f3970f4284274100b2dc865b4425d00394e3e623114cc44dd27f0938256e791f8ae094e745335234a941ca82fef16c659094b9ec2a3356cfc60bb233101ecdcc7019e0be33453fc3337187a6850061688d953174a75d7a2573d2fb0683b04f2510c32e34a4fea495291238ccb53362e9b70660c2122a06e71067b806b507b45cbbe11163d6c272fa285c4813d5773852c94a519b38f60230fe1cc648502e3fc8c4555539a725a413576e648796c33b340d6632097c4afffc7c6d5b33a1a92361e01beae843ef30551c0a04bd405009c95cc5b42e26ac8d83c96ced29516ac3664bb53fbfcb3be4b521a2820a3ab11f6a09685d0959caf0c02b3974b4c23cd9c358a5610ff14aa95d55a6d0319f15634eeb36b467a6a64260c8a9952780d4bc9324aab6f1b789447382886e056407f9992e4dc40081035521822174d429693177af547a2918c418e523b356287ee0851b1c2745fa41961739f54794431bc24517322158b6b8d3571abc2e8ea997f43801ab3a8556a16f13865d232bc31534a9380921c258a299eb85e8c487e2fa742809705c6221182b04aaf2760fd4abedc5b562f54ee0fa0d26070fe5f282b928778f730c556a90e253106bbc036103b8439b7ab0277dea8710bcc427454b054599ca2e8b4dad224fc9474ece8c24e35209d6ea9de3e594342a3f13c27ad9101d1248867d900cc25abc79141f8a49318da3001e506c8e4221b7c61ad84a5b09c48cec35af965ca5064aa9cf856f120a11aa7795edf18a63cc2b8cf34b600bbf89d51ced1baf9777896f4334c8e6263b6998b87a0f9639c4db54228ae86010eb3905664c67a1ad653ab652639f62422ba2617b34e56f1f877a72296380946036748737a8cf95025a7e7a187274c5bf4995c5e8ce1097c5ae846394e4176742079dc947f6708d767471993b965a4238be7abddcd26839ac832d67425042cf3ff34e7da7636950cf3c5c837d79961b8250af4599b814144ca66a5204211bc2ced27b5543f611d2f79b1b765210a61faa87501ffc05c0b02414176a10248c87a6b6d7a74c6c6837f1f79616c907559bb8e17941e11c0e7d2a653babcf5fb863778b4fb3f45104592fd28c7609337ade664e4a61b44eca3aa25c18e36a2e8b5cbd32d007d887404b521b76756a631a363bba2e5fc77488c71b8b640a35a39356154bf4ea4ad8a9c0f5624fb9930d9db4894a601fbd6285b6d931e0b6a743fb7a1c96ae660564da4150fc48232379152b2ab316949485626990fcb40738575a223d1a3cc0b00b4691060e8829b7c7a92203361ed5504b15341095c10e021a0d9698093a0aa807336550697c3fd354a6b48bb2549b01cb7622ebb4ff612c67168c354bcd1dd07a76a9376f5ccf91214826a79bf3f45090d2910098814af4484999b61835376d303cad957652a9a820e85bdc562d824aa05424a63ec298f63691b98a9d649b63b0a25ee9d9c1bb0a9a7e78183ab605603a5d44c14bec547b0d63365750a112ca8faaf49ada3c627ff763b1c4a950334f0d166aafc143f5e426be07c3954778002036d39f931cec9fb7db37ca9144261fb6fb3b9663e8df007267cb711677959c5e00200ab5906375d947cb945f1bacba9438831fbb71a2353b4bac7afe990d11f6fd980600ac54c08819b700bb49ad72138dc1145cf443e29c150f4cbec89b4846e12ff2846245d3385755519feb0c0ab82753e485a099ceaf112fecd4b1d9916832f902bc530574960381d66b455883c5fa8959cb4a57a8adc15c09c6c0b5775b24aa9540d0d50f7a72c1cbe19234636799e049fe7378e919656e7a9e9c1b072387985e1083345a3f85189801b545b480139e206bb569ba0b2a451f9b287ed105de87b4708754f7f02793d901402bb441ca7578038504020ad04b71eee23b308698dea73caa9900d5bc276f267066abcc3665c48b2967d4274f85bac00c1a69ce32458c09c2f3b8773f9b0996ca91811432ae65954de74ce39741cd74a340806e843199bdb94b88dbaab1b6cea71867d8ac4fb82bccb6eb7dd901ad7e4a6342e4a641d9cffc32b6142a118ad89a8e965917e6417eb3be32d9a856464c18806d15aaa8617b0b37897b4a9760a134a0d196b813134a1ea3b262602d2c6066d0c133aa322fdd63bd49a830e0006b74235bcb921592dc5be0a38151024d884415370cabe2096a6dec71da9523527791e635833d0561e3d55a680b2586dac5a2a549c4e14261bc36d37b9988b1b48d832e9c1891992108f946206c032ca8d596c2bca500d11acb5794fb1729bec15f396b2f7907505608a83fb7cf73351022f36a56b02cb77ba78a02b9f18cb427e583a4d33e9806087ab40ac93b9e551132b4039ea8817a5c5957ed8a0ec6341a7b875995a40e7f407bccc39d5300608d67a50fc7024737264aa1079c7a7252375f08194d0042a11fd2a548966813bc5c81ec6e3364a30a558ae22420098aca5b4639504cc9c4348eda9393abf08b16687952a61051038ad92504eae7112ea3a0eb41604d742e2af222d075c55601b775b16964624d4f7631e3b34324867e8c73700c3aab79f88a4255c2dad953d0053400b13ad6031ab80660be956fa2a915efa6b9b9d8132427790c5a0b31cbcc437798420b7e1047b33364516b5253e2fc8c9c58b0d9eb2bad1646af79a13ca12824b52f4b3075039782b53c01b395a755c55a98ec2f29a614ffa79c7e1b7c77f8a97f5a07540165ed2a66e6118ec2c227bc0c76a6974b0ad975be3059005542da95b44436713c712c157b78e7a55bb1e7be4e8b336b646b4ed09085f647e6b0352335a97e492c8713b27be34857e31b74fc75df959131352439c23f15611db0a76ca077788df505e6b5b8b432907c415b28113fdc24549465c3fd8383974b345fd94e87a9710be84b56e30028eb8b64e71fc3270438b2722a8207c27aafdc23686958453051c0b9e3028196a7c800be5b070137fa7aa5e6620cb42a84bb53d4ba5abaccbb44a391229ab502a3435ca66aa7991872c2b8d7368bd8742e743b029ca63d0cbba53ea57011b7636b654e3a4146b9c18ed3f41176c602b25105a8964b4b77b5a9577d69b2c62883364bf553f2448f20e75665480f56a6359c361a7df9a205da525adb88e4201f3c9688c4b71631f4123b5b86fbc11f65a5cb4db5432bf4c76203b19eb33310f8b5641a00659614a84a1db0ab322a8333d8d29b678977d20545d63bcbb95098cf83c71470b2ae335ebeab6f4af393c959c70c1c8cb3cbb7a9e36a6275cc3824ac8e0587cf40121504c1be6b460b8a4cb97797d15c8a6e15a0fcc6af384366bd02627c869aea84624b0476957463a3a24979e34e7f9c8583f80f1b844ef68cc3be78bfe9e867bbe3704a5bca250720f6fca0c6f32882bc1473322f73051054986c2d95a78ceb7971b234168547da833f8c60c0be717f710c48fb62cd14981f3218819618c8e32531bbe5b37815563fa1bf0b014e939cc61bfcb2de182fae851110a6ba7b04b6befab7e5c660a4753ed07000a4d59b2e250c52324019024c9f843b6b703a6fb6533017c0d0d5895e40114d044042a04b48713827624eaaf6677dc485c9b139ca815ff7550f8fa26a1ce9826b717ebbd22013d8c735b8a828215cb88c941e129fe5cabde0091cc6d8264169a186b2b654f870d25c0ab1412d7efa32ef440cfde318ab9a9501884bd05978eb06bf9a9c5a2e288e2b182996698fbb7967cf4079fe012e3e505901bc836f755e616b602fb10d3a9ba327ba204da5b6cd570e0d431465b13b0d0b0525929207dac52859bb1e45ca438b1af1a285ab131f00206a4789f6d81b9283a90142b47c63a0f4133950ca5c6b52eef8b3ebc256b9a428\",\n\t\t\t\"seed\": \"0ab5906375d947cb945f1bacba9438831fbb71a2353b4bac7afe990d11f6fd98\",\n\t\t\t\"cipherText\": \"3d8483216bf80957be786260759a3e3cf953bad1510c0f7b58b0e36a5f5efc635df962f80ae362986315a3864b1586e02897e7c7c46c438a2e407b96f7c0c29f4f55722a2dbe225c4526363cd2ed33297a2836f558ff3c4cbec3e9ca3821ae85d3d68f9c6b4e52b85218d498431e51ea6e3b0a40570f5bb211436cd1dca7bb87d287038ed2819b1aed4a8de27df0310fd36f4de638a59a5520cd9c1fb9a6676ebcebcaad41c059db587bd8fcdf1236e3c2610358bfb6707c41de7403f6e332ad208ef94e272c7cff396332fcc9c12aa87a9086ac7a3ea8c3a8a30fed04e7f21e77d294865ddf1c388210aed22a1ed29b6f60d6e758388851b7ad2e42473a117a688b0f8c8de9f0365f99f996b69e88d82fbf3a58ae95d7bd4ab9c18aae3e205718e9235ed3691f3fea7e73e0bd1d1e711a38bdce014b744682bfc6054b7686ee935def1bdc1236c5d2ea7b3d74c4691a794211b80dae68e3693e181df4441e5896bc0c837f5867946f1f65db6ab9dd596bd028d7a21b3b6417e23d60e89a702401e72a2afe005bcafb1fa287ff3c12701809aa29899727b0f94b3a4a637a0d3f83cac0f23a13463b50b30ffb208a0949708920c5b65ff923da209d3c1587e5de2680c844b6c60b06bc496e6cacabb562f0c3b508e8b1c9b571348aa829a5c458ccb0fdf8cf3767583e64467f067ad3a2eb7aedb28b502ea557648299b045e7074905482a1c4b114d9edfaf6fc19fe7e4ed41d3befde49df3bfa28ade6746130219ffeb1e39e6f457cd2fd62a9c968cb0a3046a857dee272af07ab34467d147d08be9e9bbe8cf197467194f2d299a5191db7ff552878a0e2dfc550a492731b9fd8332e0724e41ac7ee568313d65e643adf4980847a888adafbe3e2f7b76d43f86d59159ce0523dd432887ada00fa8339394991474e690d25376410f1168b86e2b773c7b513b96999db1396dcafcbf0b3865342d98c983d65ef45fdea3cac46753426f81db433eb4f3fecbf3413d308bbe032d3c7e07199eabcd9bc2195579fd70c25200cbb05ec5476efcec0c00d2cfbe8726f23f69bf0448a0f262566e22017021e8ef2f41a979eb6ca862796630e607308372f9dea9d59606c2f128524be0d0bfcb694f584b4a0580f06ceb2c1e2c43705609d6d77cb1a064b8e44c6f8a954f1666dbb472f172f20f513e2b1b93327cde42a564034fe035d1ec1764c762b1e761e02d90aa94f828eda73ec9aeaa9e577741567fc4f89650d70476de4eb7ec9b1612a4158518331f7959f80fb147f189cf06130bba80ca801d573490d25815d54db6547cbfa2952203ff3833f024197f417f6a8bd9e6d3a0741d66f1db2c84e6ca5b0855ec7dc5b22c5f4abcbd473ed7bd02ac7bade4c411f31db63c6f73e395517b4be4ca7e8bc326a3a4c7a85d79a7c8c61a690381ed787f5dce4cc494815fd59973118f479c7409cbfa0bc0dd4677af4a9684ce13a85c987f55b49f1fc14872d83458c0a7b0451362d203c65c589ca7f804b894a359fb60c80ef381acb48b48cfa8a592b7fa040a0e62e37134c23d0184c4d4a264e03f02925b3f84e6c1339957652950e421531ca3aebf5df7c89c938990c41c20f85cfc3bdaba65da1504f4342468ac1245696619ec811acd86cebc4b11e5cf59892ae7ecf6a74def31ef0f6b6bf2b564a7d4192b2869d59a1e7f91dec379d04583da0c812bb4dc411ebddd4fd86ac9c8a34b4875985428705f7ab725880770097cf21a64847e52c341e1d3ecb50e9a9009753e9908ee6abe90431440ed8dbe4ebb14f267e9e477632c141d3cf292a051f2dac4127dc8eb7a91f9e308e3656ac10c5c6c8831e95c766a4bf77aaabb514853285cb33f6042cb58936a70aaa155e28302de29ebd399974f2035348cae9f1e5bbb18a2f19fbf51f00f4b94b39b9421f54e606fbf38ef49c943144b3bf14ffa969fc06f2838418db6f925cf623a6af67b8f96089e66b7f8d88c9a4486fbc4bfaee21eacf7f7caec4ec56cd294b4ee1cda8131b62a762e475ce18e61b8395080337ec0d5888bd571deef4e24bd2e565fd4f170dcf08178977fe15381a622bbfb8ba6ab4ea4b5a7fb8e4ce204654da24a083de1cf3d0873204e052e6b426c97766f380d49cddbc12be173da33e9e27f0c40c13dbf63166053793f2209f34b8cccb9800c51ce77943fbb0a1d56ddc29ea52a229a25ed3cacd0e040\",\n\t\t\t\"sharedSecret\": \"c6793e91187d9298f0ba08179a11d91c8801bd1aadbf72b92c16ae57fd328e6d\"\n\t\t}\n\t],\n\t\"rsaSignatureTests\": [\n\t\t{\n\t\t\t\"publicKey\": \"02008bb1bbcb2c6915c182b0c7cc93e1d8210181ffee4be4ae81f7a98fdba2d6e37cea72e2124ebb6b05d330ab1ddfbc6d85c9d1c90fc3b65bd9634c3b722fe77ab98f33cc28af975d51609e1c308324501d615cbb82836c33c2a240e00826ddf09460cee7a975c0607579d4f7b707e19287a1c754ba485e04aab664e44cae8fcab770b9bb5c95a271786aa79d6fa11dd21bdb3a08b679bd5f29fc95ab573a3dabcbd8e70aaec0cc2a817eefbc886d3eafea96abd0d5e364b83ccf74f4d18b3546b014fa24b90134179ed952209971211c623a2743da0c3236abd512499920a75651482b43b27c18d477e8735935425933d8f09a12fbf1950cf8a381ef5f2400fcf9\",\n\t\t\t\"privateKey\": \"02008bb1bbcb2c6915c182b0c7cc93e1d8210181ffee4be4ae81f7a98fdba2d6e37cea72e2124ebb6b05d330ab1ddfbc6d85c9d1c90fc3b65bd9634c3b722fe77ab98f33cc28af975d51609e1c308324501d615cbb82836c33c2a240e00826ddf09460cee7a975c0607579d4f7b707e19287a1c754ba485e04aab664e44cae8fcab770b9bb5c95a271786aa79d6fa11dd21bdb3a08b679bd5f29fc95ab573a3dabcbd8e70aaec0cc2a817eefbc886d3eafea96abd0d5e364b83ccf74f4d18b3546b014fa24b90134179ed952209971211c623a2743da0c3236abd512499920a75651482b43b27c18d477e8735935425933d8f09a12fbf1950cf8a381ef5f2400fcf90200816022249104e1f94e289b6284b36d8f63ee1a31806852965be0d632fc25389ac02795e88eb254f4181bc2def00f7affa5627d6bf43e37e2a56c3cc20c4bbe058cf2d3e9fa759d1f78f3f5f797fd5195644e95fad1ecac235e51e72aa59476f374952b486e9db4b818157d362e3e638ee9edca329c4336df43fd3cd327f8542d1add9798af1d6a9e8cf8f54dd0b6a6f9ed9c3f5d803c220716757871e1442ef407ffe5df44c364bf57a60551b681173747b8df8e4138101f1d048cc1941a5d4c1fd3eda5bc96496eb1892477d811b845a7c9b3333e700989a1134e8f65edbf3a8332baa7195eb6aa33591b6ab41ec8215c6487979df5cf1b9736fd4fea73eee102000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e7a2e7a5cc651614fd17eb10765ef63462e5767745fc849e97095319d42f8cbb1485aba0f590b33208e666e949db0465e483a122467f771a986da6855abb148d0b5c1eefb08636d0aeb36b8ec161497cc9a64704f0976aceb33d09af5408ded1aec771b534f9a27fd9dc3303146ce98872915ed730ed9661eec46b8c0d6b6d37020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000009a632cb2e0a17ee6e363e3e056e5170480a3790023e342cb221431be37d63e692ce572390a379cf470c8a9fa4251a0af84d746b79ff91f6dcf168417137150d93049098ef747a601825982cbbd1ac1c20b3f3ee97b25e1739c31b43e78fc1cd53134dc4e82ebf98c720c34852fbd2288370421b848575f4d054e1d1e66b47f4f02000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b09e8b48e56fd2859072135f4b129f62546228914b80fed239d1f756436f3a3c4faa98b2336bf0e6ded86771cc49beb1beab0b4b2a3bf8e20385e029e083b368d4579a9322a343da9ccadbe14edc527f5ef6754273fcd088e92c4a5d30934eeaccfcf05bbe17f66acc0055b92c72db229a50f3e2db40dda0b0c17e4b9cd3e3c30200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000088861ee6e7e1a7f8c1287a40ce56b3ae159b79caf7f166057fd35fd1984aead1d313eb982942d897088d4a52b606bd13b9632d7400112b0bcdcf596b9693e42ccb982acdb43a35c0abe63fd5af1a54312604fdbb365d5f2afefaad2b798d6869d6a3aa15fb8c75170f5b5fae4f72ef7089462c136c55673f12ebeab0119e97dd02000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d8538fe6ebe9514412692fc985f8fd62b237c51c160c3d49aeeafffa057f2feff8f29040a205895b61dfa3f6188851021dc9e50152f3ea69746f5eb491af4a6dde21db9fa2c6fa61198ea02d6b600ed4267c3871af686c8db12e4bcbaaaa552e157e66fda90d34fce11cfd0f5eea6fbb236818070fb3a13751ad408e4231f499\",\n\t\t\t\"input\": \"e255f0e68147e62fd740f96071fb91e4\",\n\t\t\t\"seed\": \"05f10d85d4ce01f36500193e1c2a34d966f4539e94a9ea847bc29411d5e610b9\",\n\t\t\t\"result\": \"1d7256b9e3b864bd4659ca7073446fff5c276d1751f31953ba2143c35084c9f42df204e735634efea941911fe47de08ace8803b22d6db47294d4150b118ac193c2e0502d83da4074f6c63a627268051aac42eb294058d002138387c36361deb5ba0e0b0430768583dd4fd90eef90d3335f541f6b976d9550c0d0e1cb0b2b646e9073408b20497a796e5d8b1e976dd192d949326384a169a7b3a404911c5fc9499d74588436c1d599bf494efddab281ea28ad9b98a29f8b38f7e534b736e10e7204a10d7142f5fbb1620eb8d2ff5a6dd99b4baa577b9d6ffacaa9c053118c9c177d427204213c8be6818db34e0eba118dfa179521e3c7e9253963da4e56b12717\"\n\t\t},\n\t\t{\n\t\t\t\"publicKey\": \"02008bb1bbcb2c6915c182b0c7cc93e1d8210181ffee4be4ae81f7a98fdba2d6e37cea72e2124ebb6b05d330ab1ddfbc6d85c9d1c90fc3b65bd9634c3b722fe77ab98f33cc28af975d51609e1c308324501d615cbb82836c33c2a240e00826ddf09460cee7a975c0607579d4f7b707e19287a1c754ba485e04aab664e44cae8fcab770b9bb5c95a271786aa79d6fa11dd21bdb3a08b679bd5f29fc95ab573a3dabcbd8e70aaec0cc2a817eefbc886d3eafea96abd0d5e364b83ccf74f4d18b3546b014fa24b90134179ed952209971211c623a2743da0c3236abd512499920a75651482b43b27c18d477e8735935425933d8f09a12fbf1950cf8a381ef5f2400fcf9\",\n\t\t\t\"privateKey\": \"02008bb1bbcb2c6915c182b0c7cc93e1d8210181ffee4be4ae81f7a98fdba2d6e37cea72e2124ebb6b05d330ab1ddfbc6d85c9d1c90fc3b65bd9634c3b722fe77ab98f33cc28af975d51609e1c308324501d615cbb82836c33c2a240e00826ddf09460cee7a975c0607579d4f7b707e19287a1c754ba485e04aab664e44cae8fcab770b9bb5c95a271786aa79d6fa11dd21bdb3a08b679bd5f29fc95ab573a3dabcbd8e70aaec0cc2a817eefbc886d3eafea96abd0d5e364b83ccf74f4d18b3546b014fa24b90134179ed952209971211c623a2743da0c3236abd512499920a75651482b43b27c18d477e8735935425933d8f09a12fbf1950cf8a381ef5f2400fcf90200816022249104e1f94e289b6284b36d8f63ee1a31806852965be0d632fc25389ac02795e88eb254f4181bc2def00f7affa5627d6bf43e37e2a56c3cc20c4bbe058cf2d3e9fa759d1f78f3f5f797fd5195644e95fad1ecac235e51e72aa59476f374952b486e9db4b818157d362e3e638ee9edca329c4336df43fd3cd327f8542d1add9798af1d6a9e8cf8f54dd0b6a6f9ed9c3f5d803c220716757871e1442ef407ffe5df44c364bf57a60551b681173747b8df8e4138101f1d048cc1941a5d4c1fd3eda5bc96496eb1892477d811b845a7c9b3333e700989a1134e8f65edbf3a8332baa7195eb6aa33591b6ab41ec8215c6487979df5cf1b9736fd4fea73eee102000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e7a2e7a5cc651614fd17eb10765ef63462e5767745fc849e97095319d42f8cbb1485aba0f590b33208e666e949db0465e483a122467f771a986da6855abb148d0b5c1eefb08636d0aeb36b8ec161497cc9a64704f0976aceb33d09af5408ded1aec771b534f9a27fd9dc3303146ce98872915ed730ed9661eec46b8c0d6b6d37020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000009a632cb2e0a17ee6e363e3e056e5170480a3790023e342cb221431be37d63e692ce572390a379cf470c8a9fa4251a0af84d746b79ff91f6dcf168417137150d93049098ef747a601825982cbbd1ac1c20b3f3ee97b25e1739c31b43e78fc1cd53134dc4e82ebf98c720c34852fbd2288370421b848575f4d054e1d1e66b47f4f02000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b09e8b48e56fd2859072135f4b129f62546228914b80fed239d1f756436f3a3c4faa98b2336bf0e6ded86771cc49beb1beab0b4b2a3bf8e20385e029e083b368d4579a9322a343da9ccadbe14edc527f5ef6754273fcd088e92c4a5d30934eeaccfcf05bbe17f66acc0055b92c72db229a50f3e2db40dda0b0c17e4b9cd3e3c30200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000088861ee6e7e1a7f8c1287a40ce56b3ae159b79caf7f166057fd35fd1984aead1d313eb982942d897088d4a52b606bd13b9632d7400112b0bcdcf596b9693e42ccb982acdb43a35c0abe63fd5af1a54312604fdbb365d5f2afefaad2b798d6869d6a3aa15fb8c75170f5b5fae4f72ef7089462c136c55673f12ebeab0119e97dd02000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d8538fe6ebe9514412692fc985f8fd62b237c51c160c3d49aeeafffa057f2feff8f29040a205895b61dfa3f6188851021dc9e50152f3ea69746f5eb491af4a6dde21db9fa2c6fa61198ea02d6b600ed4267c3871af686c8db12e4bcbaaaa552e157e66fda90d34fce11cfd0f5eea6fbb236818070fb3a13751ad408e4231f499\",\n\t\t\t\"input\": \"c7193d0896f98f57c9b201af869480e3\",\n\t\t\t\"seed\": \"05f10d85d4ce01f36500193e1c2a34d966f4539e94a9ea847bc29411d5e610b9\",\n\t\t\t\"result\": \"53dd60af925f11d7923a79a62e7126fe15b1cfae4c6c422830e934ddbcfa70728b1e0256efa34623ac1f28f707e5a26d0a812cf9834ab05064cc0f2c5d858fd5ee58ca82e8d2e83d9d07ed19c21be04f4a7939dd559f95cbb30f882ee57105f4c08541948500a691a85b193329b9a62fb48101f165f360c4a6d1a909cff5850710ac32c365c492bb18abd3e7bb7df6bb665a906c7e13c306640be3257e1f0a11d09461924fcf2329fb1949cf9e2c5216558bae2d941c6aafe55f2d87d0c8033de3733c107471a856031212f50492b67cf1c3b70ef1489ed6d66ee26ff1cbb219a62c56459f9c40a01df0dc2332e12fe0b1cb4cdcf303506124408e32568130af\"\n\t\t}\n\t],\n\t\"aes256Tests\": [\n\t\t{\n\t\t\t\"plainTextBase64\": \"\",\n\t\t\t\"ivBase64\": \"fj9oCCQjyXWdqw9E9uGzkg==\",\n\t\t\t\"cipherTextBase64\": \"AX4/aAgkI8l1nasPRPbhs5K1v3ZrnLORHwT181LrcFmPztC0x+YJYFB/o+eVfoyW/IQwJl5nNTRowia/ZLbhzjw=\",\n\t\t\t\"hexKey\": \"4776d1a0aa814f2daf9fb710361ddfac7f018b4cc4ba689ab9c67967e84ca9d9\",\n\t\t\t\"keyToEncrypt256\": \"d116b21f4a47dc29cf061dcc57befebeb84160315100887eb4be68f8a0cbfd23\",\n\t\t\t\"keyToEncrypt128\": \"4c403bd7da91a15b1acdef29975ebe62\",\n\t\t\t\"encryptedKey256\": \"AX4/aAgkI8l1nasPRPbhs5L/EMNrOcGqCKhuQblhqa6Dk7tedKQBIMSqCvUP8xM6DveXwySH78afbD/tBsM25+EazEPayJpiHzc1hz1PSpCf\",\n\t\t\t\"encryptedKey128\": \"AX4/aAgkI8l1nasPRPbhs5KrA+OR4/3LLJIOL5grWi5hscGcy62A7cOO/GHp6Uu6+IWR3Yfe20TeSuEWX8SovmI=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"vQ==\",\n\t\t\t\"ivBase64\": \"ThwJYaATPDfmNkRRSlSIFA==\",\n\t\t\t\"cipherTextBase64\": \"AU4cCWGgEzw35jZEUUpUiBR7gg/rnRpb1DXX3rKuX0qdZWj81lG4toybqfyPOCRz5jQTFgFmOn+C4mSKfX3YXlI=\",\n\t\t\t\"hexKey\": \"73a52c661f3e39068916449ba9eff90f9ec39b16411d2f950b552a25f08f46a9\",\n\t\t\t\"keyToEncrypt256\": \"a89d53fa91bcb06dede817a40e6f7b17a263c6ab51b9973b9d36eac1409df0da\",\n\t\t\t\"keyToEncrypt128\": \"479eb7fef664827fb3b0aea4bad45550\",\n\t\t\t\"encryptedKey256\": \"AU4cCWGgEzw35jZEUUpUiBRFKift9fceUjUwRWROF+t07PKXzhb6ZM4EPFDlgKTNON0rFTb+H3Q1XhLiB9wDj0zQT2qkczlQ1rijq74+tFZp\",\n\t\t\t\"encryptedKey128\": \"AU4cCWGgEzw35jZEUUpUiBRncSPr8me3twdNIbdMA5McIIwnOSHQaJEb0bynStFSxOhpeKKdzOETTTnsXniHjjo=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"zvE=\",\n\t\t\t\"ivBase64\": \"H6GSen11EEjDwoVbWuN2Ig==\",\n\t\t\t\"cipherTextBase64\": \"AR+hknp9dRBIw8KFW1rjdiIx+Ia/bfo8ju8KtPqztOu6JV9APVUbISz0CBpuk5HMFDvEAliiSwvEOErKwu76P2M=\",\n\t\t\t\"hexKey\": \"4d18fbcb55e5af5f7d659687a9d53eacb482edb8b2accce5e89f85ac2106c6dd\",\n\t\t\t\"keyToEncrypt256\": \"2f4e2e52c2626e5f36171d84d9f021436522d5c491a55a892de4e8e5d4eb4a71\",\n\t\t\t\"keyToEncrypt128\": \"574e9cec3825946c3d2f232ebccf469d\",\n\t\t\t\"encryptedKey256\": \"AR+hknp9dRBIw8KFW1rjdiIcMr6P1pPzyU+QKiAQ+oIGnSPvwYMqOtN8Agh6JCuFaS9Dr2TxMx/TpRh2mwBQoHDYVHWm0bKHGZFAzCBmI5y2\",\n\t\t\t\"encryptedKey128\": \"AR+hknp9dRBIw8KFW1rjdiKJBpZuh4u/oM8pxdyCq9XCxa7sw4AdnM2VXN1zso4Zcr4Y+DiP/plIUWqbNiExLDg=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"k5L+\",\n\t\t\t\"ivBase64\": \"Qwq2EEbUN+MdnTVmfCYCeQ==\",\n\t\t\t\"cipherTextBase64\": \"AUMKthBG1DfjHZ01ZnwmAnka/iKGKs2i0JCn75gPWTZDKbJl7y4xOPUViFM7x7IJN6KDB1ObZE+fWEHPg9+bTSg=\",\n\t\t\t\"hexKey\": \"711e8930a9d03844303293b9998358002b19de0f16fc32c9e001c7c6d5a246f0\",\n\t\t\t\"keyToEncrypt256\": \"24ad03ed93a52394da93d14af4f5797c411e58a35b617b5ea5c56655f2689e48\",\n\t\t\t\"keyToEncrypt128\": \"806200924949abf0fccd84bf48a6338a\",\n\t\t\t\"encryptedKey256\": \"AUMKthBG1DfjHZ01ZnwmAnnW2gC8L3zhZvZhYXhsuZIokn7Px5cwSOE/5f800w/2prl2DoHsWy3bE1jP4p7fDEr3vFSFSQjE2qUnQLwYtUV+\",\n\t\t\t\"encryptedKey128\": \"AUMKthBG1DfjHZ01ZnwmAnk915vlRfYwHrmnMhdgERFZt+ETjE5F96Fw0+XmMP5cAh2On3TKl+R99b6yaYfl+Ec=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"2csQAA==\",\n\t\t\t\"ivBase64\": \"ucHGKLZXVk9Nabw03YmdmQ==\",\n\t\t\t\"cipherTextBase64\": \"AbnBxii2V1ZPTWm8NN2JnZmK6X7ueiZcmZofGTQkgSOEuxW96+38oqU87bFRIPnHlDIOXbgrE4CsXOrdGwnmGr8=\",\n\t\t\t\"hexKey\": \"7ddfb103f848b42a9661151f317573a1e16afd461d56a2976dffbef62c8928f5\",\n\t\t\t\"keyToEncrypt256\": \"28c982eb3c5b209b3e5f40c821de4c13cda34f244565c8304e05cd2ab2842896\",\n\t\t\t\"keyToEncrypt128\": \"38e8ae53082f5c0bbe67e901adbf8017\",\n\t\t\t\"encryptedKey256\": \"AbnBxii2V1ZPTWm8NN2JnZnMCChTUb/RwQKoV2JCXJuJYpJuchDSk/ZuAysAGwwjtgpepOAtSXQ47IBjeOc1EhVg+U7f9WBmGzPlRvDbavw4\",\n\t\t\t\"encryptedKey128\": \"AbnBxii2V1ZPTWm8NN2JnZnEkBVOq+sqz0CDEgqEYdwtRjqgYhvvttv9x0o6dgkPjP/HEIQI8/pTboGOKw1/p8Y=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"j1leGJE=\",\n\t\t\t\"ivBase64\": \"Tz9YjEzvdi7WT+JQmNIwOw==\",\n\t\t\t\"cipherTextBase64\": \"AU8/WIxM73Yu1k/iUJjSMDvuBFdj8hDShGz7qZi7lK7lIw0goQsDw9r0U57R6QncHDpEV2/9wYwknkwivDLoTas=\",\n\t\t\t\"hexKey\": \"e47bb578d532672c76acc785a1db903e3f633eceecb4ad60b887c85c2996750b\",\n\t\t\t\"keyToEncrypt256\": \"bca8c8c5dfbbbce51ba3d210436bc16dc00f05cdd3f99b5691b1dab35cb23c5e\",\n\t\t\t\"keyToEncrypt128\": \"c7b605468ee418916cd89dd1bfb94563\",\n\t\t\t\"encryptedKey256\": \"AU8/WIxM73Yu1k/iUJjSMDsAXDuvkBO5gg/nMp7zYMQgJDHKZTG9YUPesKyMTWRPe9uOsnpmRupvvEWhwUOeOVOH9flTe0bTk+aYI46KOWmY\",\n\t\t\t\"encryptedKey128\": \"AU8/WIxM73Yu1k/iUJjSMDsmIpHXjM75foN/q/5mg8AZiytVG3GKQaSb6CbBL9prweWe2JrnWtJXXroRJGxHuCA=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"xBBE08Ym\",\n\t\t\t\"ivBase64\": \"Te9456nlDVwLrA31rwqW4Q==\",\n\t\t\t\"cipherTextBase64\": \"AU3veOep5Q1cC6wN9a8KluHp9MU0Gg3jDZgbJ6AqiiUsz9gwMW+kkybNt0kmKgjYC+lvYS0XwYhkL5jNnVCA5ZQ=\",\n\t\t\t\"hexKey\": \"b9da36df3f03d6e9dfcabfda4b83674987ec3f84acea3590182292acf9872afa\",\n\t\t\t\"keyToEncrypt256\": \"6e8dd6031e4f3bbaec3d3960efbc9bd195aef5c1b16b9cdcf946ef5e4f1b6e4d\",\n\t\t\t\"keyToEncrypt128\": \"56f3ff81adcb3a59cede4c753072ea1d\",\n\t\t\t\"encryptedKey256\": \"AU3veOep5Q1cC6wN9a8KluEvhEBVd4FGBsKgYEXBcoHiKhqJ9JDMiPI07wpoXs9DGFKFaWapIBBpImTcoInft+8PJXtxm6xTHDBUSZz6LqUg\",\n\t\t\t\"encryptedKey128\": \"AU3veOep5Q1cC6wN9a8KluE0dtqabLSdmBcHEl1m2vY0rkdr0xzfN8pGTCwrjZ6XQUkXVlAWAR2a6ZktZyj97YM=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"lVIr7qIGKQ==\",\n\t\t\t\"ivBase64\": \"Rlh4+FoTpGJuVZ5lr6uSXQ==\",\n\t\t\t\"cipherTextBase64\": \"AUZYePhaE6RiblWeZa+rkl0GWvyw14Pec1T5RNkmXDCrwFscjWbHnaABY4aznoF8ZANwrQ3NKezvC6STBvnvLkk=\",\n\t\t\t\"hexKey\": \"e60ded9728bbae31146c1ff92db03dea1f47b47c000f6444197e9577596d5916\",\n\t\t\t\"keyToEncrypt256\": \"df348231ee07b0f402b9caa5ef9af617ab26115794f7e2db6eb3c87344f0836c\",\n\t\t\t\"keyToEncrypt128\": \"31043fcb416127b27cb0098ea1f09ffd\",\n\t\t\t\"encryptedKey256\": \"AUZYePhaE6RiblWeZa+rkl0uwdjiGHMTogy0H1cGYxTQfBI0rHP51rPHvPQtPqBc8rxMj0MF9wwxPqgEqa0mOwnhTCo/NgBYW9+KpV17o/4/\",\n\t\t\t\"encryptedKey128\": \"AUZYePhaE6RiblWeZa+rkl0KZaQWZckcMHzsCCcocgKjkO8Lks0crzz/xLFA9Nbc03CzIy36BaUwSZdXX8mPeso=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"Ewpqmm9X9jc=\",\n\t\t\t\"ivBase64\": \"QZX5diZe1FAmfAV0VdQ+cw==\",\n\t\t\t\"cipherTextBase64\": \"AUGV+XYmXtRQJnwFdFXUPnPXOlKToi+jXqyuUpN4xxYItkuqYRH4tiJfynKbof9fgLYEtqL5mgoebd+VqTjMOlQ=\",\n\t\t\t\"hexKey\": \"2bbddf5fb81bda956616ac39a7c59b506c812f5e6dd21a4b94567da28e3b8f7d\",\n\t\t\t\"keyToEncrypt256\": \"f37024155f1fc3edfa0889d1669999ca612f75b4f31e219a4459a472e9c2224b\",\n\t\t\t\"keyToEncrypt128\": \"63097f413e2dfe390d49d908971ddbe3\",\n\t\t\t\"encryptedKey256\": \"AUGV+XYmXtRQJnwFdFXUPnOn5z1QjeFZIZE4nGNCyvsREgeRAnKtVJ9oYJdSOV7jSdkzFQdfdKI2EWHeAoABisWre4yiFRM6V2Lyj/RuieFl\",\n\t\t\t\"encryptedKey128\": \"AUGV+XYmXtRQJnwFdFXUPnOR6ja5Od/3SWSMO3/m5mcy16vGR/lHjFObkeKMNtNLXZCgE/7KFhnajwfGiPiyvhI=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"hojmRjzpORSF\",\n\t\t\t\"ivBase64\": \"KeXcFNSJdb6XIHtpJkHoSA==\",\n\t\t\t\"cipherTextBase64\": \"ASnl3BTUiXW+lyB7aSZB6Eil90ch0X1o2QXCfETnvP66Z6AiZJjJ0Py5Nc4CcG1dDZoNV9L0Jaw9GZoh+PZOoaI=\",\n\t\t\t\"hexKey\": \"3b8681ad10e101b9b0fed20f7091ce3e1b955f1c3abc2bfbe54cf2094bdacd99\",\n\t\t\t\"keyToEncrypt256\": \"3953a715d4596bf9b38996be3ae96367113bef91b5ab30d2befef4a596287062\",\n\t\t\t\"keyToEncrypt128\": \"6d2a61be301a50a5ae8baacd00a7576e\",\n\t\t\t\"encryptedKey256\": \"ASnl3BTUiXW+lyB7aSZB6Eil53BCYQnKV6TLH2/WwOt4wzbJcYUhZheAAacPIO65JM4i9c0xdUwKPCo/4ipUv4U02g7CbV/lNAKRhRP8+2DR\",\n\t\t\t\"encryptedKey128\": \"ASnl3BTUiXW+lyB7aSZB6EjHqu6DUkx8fLCquDG86lVsTk/1M4wLgOjiRmQ0m8ewSWlAwxWy36DLljCY2TCgRps=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"25W+ya607I+yZw==\",\n\t\t\t\"ivBase64\": \"SO9CsAyXQ+g/8c67VYWvTw==\",\n\t\t\t\"cipherTextBase64\": \"AUjvQrAMl0PoP/HOu1WFr0+0xHyzAIF2hCn6VSEW5geIq+QbuDJqvlDfNgUxfCpWfULqXQ61xyfJm1u8zZffY4s=\",\n\t\t\t\"hexKey\": \"edb022605593c2f1044c64cc03fa7d3e9f77389a0ca03ca9690cce06f7cfa55e\",\n\t\t\t\"keyToEncrypt256\": \"0a2e032bb76ce8a6a57140d3255ec0a86019db820c95d5f8417ebd3556af9308\",\n\t\t\t\"keyToEncrypt128\": \"2d500e9ab4b10526a6620b914da6087e\",\n\t\t\t\"encryptedKey256\": \"AUjvQrAMl0PoP/HOu1WFr08gpEJZ1MKXUVpFPkHRryZmyzY2tkgFsWW7gg66SebHYRrflo2reBDDomx+VPovfQy1GNXmEzTODNaua57icHqw\",\n\t\t\t\"encryptedKey128\": \"AUjvQrAMl0PoP/HOu1WFr0/qk52LBBm/sRGOuKxZdgN6kbpSSexwTVCXUFlD9wCCaSvIXruxBQ0X44qHC0TewEQ=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"SJc2ubLMPbBq2lQ=\",\n\t\t\t\"ivBase64\": \"Jx5u0aV8LDtu8jY5rQke9w==\",\n\t\t\t\"cipherTextBase64\": \"AScebtGlfCw7bvI2Oa0JHvetHTKxDpxA/2HpknZyc7tpcQCYDCBB9NOpl8n4T345rjjKim0PjvQf2BDnsC2kOJw=\",\n\t\t\t\"hexKey\": \"6be6f6360ecb51a7ef266ecac0a3b676ff600291f5a255690ba2b708e547e9e1\",\n\t\t\t\"keyToEncrypt256\": \"b1ac241eada34c95771be2bf3fca41c56a5653d23e051876b071ad201630b398\",\n\t\t\t\"keyToEncrypt128\": \"434f6f118ff6f7d486a5e716b8336ca4\",\n\t\t\t\"encryptedKey256\": \"AScebtGlfCw7bvI2Oa0JHvePcyYH6XxP2wf56yqQquukwoWo883Oi/lFpxvA5I/Yu33fcSnVWROi9XXe73iD6ieIjmqSESat6GiHoni0EUHT\",\n\t\t\t\"encryptedKey128\": \"AScebtGlfCw7bvI2Oa0JHvdvMKUbxfCcQy0CIvYE41nkl/MA2BWRttZ5TvEdUuN5pywCKis1N2EKS+3Wd1fiuiw=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"VK++FveN0aSm/9p5\",\n\t\t\t\"ivBase64\": \"IrLSmPyNW0kySh2JPCjmhg==\",\n\t\t\t\"cipherTextBase64\": \"ASKy0pj8jVtJMkodiTwo5oYl5/grgxVQjw/pv59Lv7mCXlnlPliWVqjgL0CVzP06AWBLphX6vMuY+BjRDp4SeqY=\",\n\t\t\t\"hexKey\": \"81745cf6ff5495101846bf3fe7de01948d84dc378f2492a15e33a20ab55b8d24\",\n\t\t\t\"keyToEncrypt256\": \"06802625f88c62b5406efb3c739854b2dacfbf7c58b214d263971f5b3691b5ab\",\n\t\t\t\"keyToEncrypt128\": \"13e532e5118a706c990239533d3d718f\",\n\t\t\t\"encryptedKey256\": \"ASKy0pj8jVtJMkodiTwo5oYLsyBP+4Vdla71askF5aiSkLI5ow4RI3ABB74AbeXa3tWIBDBJcKJVbcZzeG7Odjmv+GyzJmcFjrRG9M8sU2Ni\",\n\t\t\t\"encryptedKey128\": \"ASKy0pj8jVtJMkodiTwo5oaGzmchtLQoRTZQ70490Jryfsi4uJL4/PY7qy/5ktq9B3YxuWUObxw2qLsseKARcr4=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"YtJO1GQcuTHahkMPyQ==\",\n\t\t\t\"ivBase64\": \"vJ0iED4s4Un+X6+yLfq0qA==\",\n\t\t\t\"cipherTextBase64\": \"AbydIhA+LOFJ/l+vsi36tKgZK6QaZlHAVzpNBmKYmpWVjTBIKxizHCqnrPHO1YrciSdn4loKLC5S6Vi5ZTS8fWU=\",\n\t\t\t\"hexKey\": \"80b1ed897ae1e96f22f8a8cdb3da28992aa4a34585b8e6607475932965f04c8b\",\n\t\t\t\"keyToEncrypt256\": \"478702828c7302f8870306adadf0bb47e1de500dc99117af74cdaed59648d11e\",\n\t\t\t\"keyToEncrypt128\": \"caad900e41c923ff242ed506c3676d3c\",\n\t\t\t\"encryptedKey256\": \"AbydIhA+LOFJ/l+vsi36tKg9LUx+2ItOaVFMsuEMx1wGk3XU/z1dFm3a58QFgMSZbei5h0gstpfJ+q7r2l3lCwGqeTru2pJVeL2ua1dyg6Fq\",\n\t\t\t\"encryptedKey128\": \"AbydIhA+LOFJ/l+vsi36tKj3RiQ+JBXGGtXBJ6JB3iuZ/pK+Aw2Pz7XR49HnnqwPFtMBQPeIa7hSgsoJl/OV7+U=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"GcSxe8JZQqsugUf6NdM=\",\n\t\t\t\"ivBase64\": \"U7aW9nHOA+HvJxfyI7NK2w==\",\n\t\t\t\"cipherTextBase64\": \"AVO2lvZxzgPh7ycX8iOzStss8HJKYQ2eC2qEKYjLD1cgGQrTd4rPRqDAqbu1Nyz/dS+eSQ7WKDdPa0SECLWwNZE=\",\n\t\t\t\"hexKey\": \"d2ade024bf8cf51b9824abea56f8e5ed7aa9c3f9719c7ac47146919476219d90\",\n\t\t\t\"keyToEncrypt256\": \"6bbe83b2e0292997738741010de051c975c136b57de7576e06edbefa24218568\",\n\t\t\t\"keyToEncrypt128\": \"15783500bb212ff19caa6fda6518214e\",\n\t\t\t\"encryptedKey256\": \"AVO2lvZxzgPh7ycX8iOzSttHab/UsuqAmtPXjBcIXHHd+lSkCkmrk75mWOmmNl6yqGkFY3FhLGAAcoMIrwqSMYWJH/D6CAmMBcSOwaqLdtcc\",\n\t\t\t\"encryptedKey128\": \"AVO2lvZxzgPh7ycX8iOzStvgXWdr1pejp/DOEXukvFWexr44JXqJC4VX3rHPAUcHut5aXCM07Pzct2E2K3zZ8zM=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"NnS0+GL8GFSeJb7ERZ/I\",\n\t\t\t\"ivBase64\": \"4XA79tFuaRmJptDFF/2IFQ==\",\n\t\t\t\"cipherTextBase64\": \"AeFwO/bRbmkZiabQxRf9iBVGedUcLG7JNEevSeoIT71IEKxDcCcqfkm4OYl7L09wxmOjA4KeB7BuNvenGEvdUiI=\",\n\t\t\t\"hexKey\": \"96dc451c1a710b9a6135021545c7497e84720363d676f40bb5bccbe1fa5619a9\",\n\t\t\t\"keyToEncrypt256\": \"8e90e7132ccdacb961ef8b505c3f6780f5d8f0764ac433e31ca7ad8aee95607c\",\n\t\t\t\"keyToEncrypt128\": \"0ab312e141cc09c07a9c8aa02c8d1868\",\n\t\t\t\"encryptedKey256\": \"AeFwO/bRbmkZiabQxRf9iBUgroH64tBjEOVj2tQo2CW8VklYR1WpuS/BrB/GNcdzuG2OSLYU1DSePojSGamuw46ng5kscHWSJx9Xoa2LGgOW\",\n\t\t\t\"encryptedKey128\": \"AeFwO/bRbmkZiabQxRf9iBWXLRLUGVgTwlQAyDd5KKNV3lG92kVK0ncDE5s+s5aW8Erwb4aJgV0oBRO9GkIqbtQ=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"Q5S80c+7nJjeNpCIz53XwQ==\",\n\t\t\t\"ivBase64\": \"l4UPMa2gzVu/GXBWv/M1kg==\",\n\t\t\t\"cipherTextBase64\": \"AZeFDzGtoM1bvxlwVr/zNZJ3jIktwL50AdO72rRYJkoFBluP62L3n0jQ0oPR7YWz+0YbE86Os1rD70eXruKYi1MMbhw6eT/HrEj2XMDHkAdh\",\n\t\t\t\"hexKey\": \"b11f3ece204d1792527f3eb5d2884e5137b21677d5274d5ff7f8e77f6ee5b508\",\n\t\t\t\"keyToEncrypt256\": \"cace8514cbcfb9b845c641f03180765b8e9760b22e38a0bb071b63ccfbaec787\",\n\t\t\t\"keyToEncrypt128\": \"c48967a0f03fcece4f23a44d10509a48\",\n\t\t\t\"encryptedKey256\": \"AZeFDzGtoM1bvxlwVr/zNZJR41uD2kPk/g2uUF5AlGRzuYdTa937G+UaQyichd0HL21PtJ9GN7L/Dpi5jdS8UPmH+1WfGM5zRbcHj0NFheij\",\n\t\t\t\"encryptedKey128\": \"AZeFDzGtoM1bvxlwVr/zNZKmWSTKu9/2EBdrLCv1rajR0RfQqtBngj0PevDl25eyGy3CHmey/1grRu49ksM8dNQ=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"Q1WAHf0xNpP5Xw8Yor0QQb4=\",\n\t\t\t\"ivBase64\": \"ZM27lXyKAHjSJJKtF4dksg==\",\n\t\t\t\"cipherTextBase64\": \"AWTNu5V8igB40iSSrReHZLILDi5by5wOFxsMt2BR+CHl2dV21A1XkiZA/XtxXIxMn5EWUwCAYsIlRdrYy6xrp7voqL0bPT62Cf42bIcTPFHD\",\n\t\t\t\"hexKey\": \"9c2bf28ac558047002691bd8dafc870637e0b57a167371a1bd4f00aaa13e9920\",\n\t\t\t\"keyToEncrypt256\": \"86f96a826837404aeb1c66c0bdf2b3bba4687606ec5a4ae65ef397f9a52c65f4\",\n\t\t\t\"keyToEncrypt128\": \"3492dd558a7293249800ee04e7ddfc32\",\n\t\t\t\"encryptedKey256\": \"AWTNu5V8igB40iSSrReHZLJSAjd2tEa6M/ba2f1fUMUt1h383FagFYl/v1368ioCDme63iw8XmD6mRufJlwhJpKHS31ywN9JclXetLTv/0Vh\",\n\t\t\t\"encryptedKey128\": \"AWTNu5V8igB40iSSrReHZLLlv7IvPyoJzAOWfZDbTDWbQGvWdpXzcRLAj1WTtnpQJNycHOd7rwUMs20OXb4reo4=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"/sOfaOKn8KodXT2if13q6jnT\",\n\t\t\t\"ivBase64\": \"F35as+uWLEin7po9pbf4jw==\",\n\t\t\t\"cipherTextBase64\": \"ARd+WrPrlixIp+6aPaW3+I/zhAQSA4dqEPW0I8zT+IKHGDb7Lqvnf28rrzM6z3hI7FznP5Wt1nVmXhho1FlGnsVZA8+xyBjXuszzxRpSWKOf\",\n\t\t\t\"hexKey\": \"53ca6016aba6c33e366b6a9a0700fcee5dc8396fb2327b0255a07a090bba9e57\",\n\t\t\t\"keyToEncrypt256\": \"808c9505f3244656285fa9476d193bc4c904019d50c6dfb4cd2e5747e329e94f\",\n\t\t\t\"keyToEncrypt128\": \"9bc7a476999641fdef39b6baf272291c\",\n\t\t\t\"encryptedKey256\": \"ARd+WrPrlixIp+6aPaW3+I/3rp4qqPKmPyoW0ugFEYIR2yw0moWSqtdN0vFNm1AgH3A/uTds+NRAxxw6vnjsCCIelwVFw1Rt4CxOaVM0fHRS\",\n\t\t\t\"encryptedKey128\": \"ARd+WrPrlixIp+6aPaW3+I+X4WySCukeiJ6VecPUJoNPdjMIt+F1t4EznwVtHpwbzSsKZ26DLbaRIU+ymxbzZ44=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"B9tDpwmcOgpwcyz0151Ix0wckg==\",\n\t\t\t\"ivBase64\": \"dpQRxquFYxR9IJnqtbdR0Q==\",\n\t\t\t\"cipherTextBase64\": \"AXaUEcarhWMUfSCZ6rW3UdF9+fKvPqe+ISZSJIgn82UOozyctBI8el9iUMbqNo+d8wPO/p/wNjWMHTZJVq/bdK/SUhm/yUNg1iyg3wbDlLen\",\n\t\t\t\"hexKey\": \"753ed47c0a55953421812ec5a2a907c55acb0bdf23b2aa9e1e15210693e93dd7\",\n\t\t\t\"keyToEncrypt256\": \"832a770a3e22e69977b89f6d6bff1ba22335e34e91c4adba7bc5175bdf77160e\",\n\t\t\t\"keyToEncrypt128\": \"97666d7e3503aaad48d912e9cb22f81b\",\n\t\t\t\"encryptedKey256\": \"AXaUEcarhWMUfSCZ6rW3UdHnHRp+mGq1PrgdMlVIRqecGAcRLww9tog4r77NiNab8L9S9VEnwYew4yto73p0PUN8eDbYg1sY7LfmQjSK/NyQ\",\n\t\t\t\"encryptedKey128\": \"AXaUEcarhWMUfSCZ6rW3UdEmZKeUkBEDfcQBu8rZIMjPyVhREvSIy3t7Zl0bJ7gfq6ClF9PVp26EI1WINcjFR2A=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"BN9COlS2a4RaMVupyfTkk9wo9sM=\",\n\t\t\t\"ivBase64\": \"Pn7yKUp72NCYu9GRMZdWlQ==\",\n\t\t\t\"cipherTextBase64\": \"AT5+8ilKe9jQmLvRkTGXVpXeR5OdGi0O8+Zw42Y8riMIII5mf+5qRx2ZeqFbEPKe60XzUsMfFmgeml6iMxD0Ad9oHQDDt3un55W7EiL8y2TO\",\n\t\t\t\"hexKey\": \"ef66c07b44bd3ee0e9954863e6125d1f0bf06c650d380d3840c687a7b0b51eb6\",\n\t\t\t\"keyToEncrypt256\": \"14f7f7e56015e4a265123f848c1f011c98a581d4c4f6bde34979dfb61d207386\",\n\t\t\t\"keyToEncrypt128\": \"e4cfae465a3f3c77ff0fbaa30ad9ed0f\",\n\t\t\t\"encryptedKey256\": \"AT5+8ilKe9jQmLvRkTGXVpUnxIJC3OpUasJNIoqj5spVwp4/JC3AzAxwbshUvQS0jw++YdIxiX6l9ivtcTaFZ8QYeWiSzLhcU4h3gh53ipVJ\",\n\t\t\t\"encryptedKey128\": \"AT5+8ilKe9jQmLvRkTGXVpVzhrlp3Ap/+6cr9nc7+sutneyU2o0YBIHwq3ntT2GN4qTjPoFvj4vLrYHM4G9G7XQ=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"BXcpT77XsFyzmzYYQb2k6PHQ0fsF\",\n\t\t\t\"ivBase64\": \"wv6dOMaCIYxprRH8R1375Q==\",\n\t\t\t\"cipherTextBase64\": \"AcL+nTjGgiGMaa0R/Edd++XargGSga6RMdlMeZtoJX5df1r3H5ceBAmoIhA8X8Zb82FlPMbGkA3DoywflrVxoMvqzzb1AhTWeMrdJAwqHhG7\",\n\t\t\t\"hexKey\": \"36b0ba9c741376740b6650f6bd1adba8dc9c91d75fb9af2e7b4fa315f4a31435\",\n\t\t\t\"keyToEncrypt256\": \"f59b90371c18c7eb3b84cc408eeae703d135237c3e75008d579f1038091a2d12\",\n\t\t\t\"keyToEncrypt128\": \"9b8ce8117ada2a519417ff0565f52408\",\n\t\t\t\"encryptedKey256\": \"AcL+nTjGgiGMaa0R/Edd++UZgty7UXCkRUuCJYRdJ/aSutylp/n3dw7VZSnbueVXLdCKCgEGYnwTgMi/YVZUIkC6ZT4z1IO3JlZJSorZYVlL\",\n\t\t\t\"encryptedKey128\": \"AcL+nTjGgiGMaa0R/Edd++XedszbDa/duwlKbrlBaXHHq9j58MKlEpwMHdU+AU5YxgckZM36f7TeEx9DJPF3NUQ=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"pz1RfTWZzs3Ya91y5GG6DdsViPx/sQ==\",\n\t\t\t\"ivBase64\": \"xglJhT8QIUACd4Ry1wF5+w==\",\n\t\t\t\"cipherTextBase64\": \"AcYJSYU/ECFAAneEctcBefv/a1UnPqweqhEHPI2imeUXKClNGIIlJ0Pis+7+EXacUw/RVo3IV7/PqJO3LABsZnf+tS3RqWLbslR/lCKBEtNe\",\n\t\t\t\"hexKey\": \"5a7c64c35f53fb8b4c59a4de6a6511a26ef22ba740736bb0b76d03bc1ac55ebf\",\n\t\t\t\"keyToEncrypt256\": \"ff10011534c4928f5affcae7b292d27d63b146b199fd212f371b31553dc2c40a\",\n\t\t\t\"keyToEncrypt128\": \"19a648e5427f7bee21618accda195c62\",\n\t\t\t\"encryptedKey256\": \"AcYJSYU/ECFAAneEctcBefve5ma7r9QkvvBy/vF8XsjjxYth/0JybNs8aP/9G0HJvoKtkf4rG99V4DCiSRFCoi15/fI2F2uNMX842JAxX1Lb\",\n\t\t\t\"encryptedKey128\": \"AcYJSYU/ECFAAneEctcBeft89yR5U62kTCBQ5gnsyF+1NqAH7G3R9V3Atbs8bbWIaZtwjI8WkT/sFtgxh/4v4es=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"2amswpiKm6+0mv7OTHI4u7CI3aTZAmE=\",\n\t\t\t\"ivBase64\": \"h7443v1X2C/E7OPNpIrA8g==\",\n\t\t\t\"cipherTextBase64\": \"AYe+ON79V9gvxOzjzaSKwPLG5/Em2Ti7d77iLhv7SQFmQVqP/NWVp9rl+ULAbpLSHLheaJgo9Vg7XV9l3oVFst16HC5rbEIEg2eNX1BOUS+w\",\n\t\t\t\"hexKey\": \"efe41d16e736a5f5cdf7efa7c63f1acdd05559d2c88b20301c79a5d1684de158\",\n\t\t\t\"keyToEncrypt256\": \"d85432f7026a9c29f294b91efcff1f10d845d85ac1e2e40f66588cb351ee6f69\",\n\t\t\t\"keyToEncrypt128\": \"13c35377c47b9b7da47b3bcae3699060\",\n\t\t\t\"encryptedKey256\": \"AYe+ON79V9gvxOzjzaSKwPIjhqJSSJof2QckorfPu8Qr86mHpRsvM2shuCeM7Y4AfegMNOQA2l3vMySXw4rwOakQbfzw4f1bwWzahi4Xkj8H\",\n\t\t\t\"encryptedKey128\": \"AYe+ON79V9gvxOzjzaSKwPJPj3aleVtMRz0yCIBbFF0Ua1CQZjYEJ0qpQy7HVhZ1YpKRRmNMnRo7nNVjNvVsEII=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"g7t2/NwpbolmzA5LMhYpX1MIQs2p+IAj\",\n\t\t\t\"ivBase64\": \"phqqwIRkPyS9YarhopioAQ==\",\n\t\t\t\"cipherTextBase64\": \"AaYaqsCEZD8kvWGq4aKYqAFqlHRsGGRGs2Rl+sc3RzBcqqANS/3IILklK0X6l4JHSi7/ch4BF0g2E08oDQvEXC9XEyIx1WieQ9Ys9zXH8yfD\",\n\t\t\t\"hexKey\": \"84a511ffe0b98e8c07b5f4b883f616c70a92d712f370afa677de73f476470b2f\",\n\t\t\t\"keyToEncrypt256\": \"b04a2c68aa8cd9eeb9bd1efaf2277564e325f231d3ddc5bb8556e54970f26bef\",\n\t\t\t\"keyToEncrypt128\": \"c25a2d420294a160b46d60a01c9cdbcf\",\n\t\t\t\"encryptedKey256\": \"AaYaqsCEZD8kvWGq4aKYqAGK/GKfq9GzIrXDzFLhuwtSiE/6pmhMakSkgxJRnkwT45AKZqsGGCfiqbFa3UlxsQRc00gqPzvKKY6UJb6NMb34\",\n\t\t\t\"encryptedKey128\": \"AaYaqsCEZD8kvWGq4aKYqAGDZhOs1jLB5lCYAoSRT30jmneCPdQYYS2ew795FyFA8Xv/S3tYcHgoM0w6W7qBYqM=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"k5cstGPanKkhhX038KI3o3Uu5bkoA6Lk+g==\",\n\t\t\t\"ivBase64\": \"qFNf0e0kQ42A+JdzTshyeg==\",\n\t\t\t\"cipherTextBase64\": \"AahTX9HtJEONgPiXc07Icnr619gdUHHawfOUJvxpl97z/vyr+bGzz2TjXC2YnsYvvel90Q46sE0SsRKR5pvL9zg0Q2zH9BJzgOtHfHBbeYaG\",\n\t\t\t\"hexKey\": \"d36c74a28046f9204c46bbbe5f324ec80b22aa0c16bd4dc119725ccc57dfafbd\",\n\t\t\t\"keyToEncrypt256\": \"85e7baea516dc5193345ec827a26baf6f2b5112947d1624f9dbaaceed7bde9e8\",\n\t\t\t\"keyToEncrypt128\": \"3b376091f644b4876f19c4947e6a6299\",\n\t\t\t\"encryptedKey256\": \"AahTX9HtJEONgPiXc07IcnpcxY04sWu8aZ17pzgmCJ2JOQ0b6SSIaz4DukHOHDqM91D/BStCRweEhYlt+I0ZGsY8kKj2TDvK8zlZqJ9UI8p6\",\n\t\t\t\"encryptedKey128\": \"AahTX9HtJEONgPiXc07IcnpoMUJLBhrRGlREttfARuY9rmyGeHdLKnxuMDUyk/QPKXeDI2DM53AuUhxtbapNkT0=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"HjEm0gX6oIlgFKyccpntlZneIjqGKwD7f5A=\",\n\t\t\t\"ivBase64\": \"xyT5ypBLQtRrWoxA8gx4Rg==\",\n\t\t\t\"cipherTextBase64\": \"Acck+cqQS0LUa1qMQPIMeEYgMExkH8efjTEpldpJMINc4lDMV/yTMUmIDdoQJlV9Ydbqw9hhFVqqpznRqj64YbQAg/mRQVgf42qqCdwRMW0X\",\n\t\t\t\"hexKey\": \"c1bbc3d50d72dc55035311c1bacca19c0f45051b06fb9deb7b211abd059ec7b4\",\n\t\t\t\"keyToEncrypt256\": \"81d87f0e726bb16ba5d8f309e4f19dca943b3ecf295ff6ce5b72a7c7634c4e84\",\n\t\t\t\"keyToEncrypt128\": \"39def12487a1bd13a248e12d8e66e282\",\n\t\t\t\"encryptedKey256\": \"Acck+cqQS0LUa1qMQPIMeEbw0hdV2jhA5AUnxguzsfp/E0mQZch2dq/rHYGiuRhIikCy2Y0Y0OnGBS1I019ak32L47XRsFxkrtjVTzRmE9pD\",\n\t\t\t\"encryptedKey128\": \"Acck+cqQS0LUa1qMQPIMeEaI72ZuoYlcPEGDqgqhlX+rV4twvATMnt2DNp+47oOVbhBun+/l3I2ySxy/02j6XIc=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"zKyb8vGSeQtc9MYd+eh5T0TIhkB+3msN0QwK\",\n\t\t\t\"ivBase64\": \"u9RkykLjM8kewpMj9aUYew==\",\n\t\t\t\"cipherTextBase64\": \"AbvUZMpC4zPJHsKTI/WlGHsKnl6xyqZIoxjuB5WMb6oNtlCpHai9POcIVei5jXf+ewt8BE8IFpXFGx9GPDAu5z9TZdQ4ZEplqA2wIscToiX3\",\n\t\t\t\"hexKey\": \"1a675b49c58dede30a3b0e9493a9d1e58e4d836818bc997a70d2c19b6399f1ca\",\n\t\t\t\"keyToEncrypt256\": \"faf6631a5658dd1c8b14523ee76d9083a32ce6925451f5dd08d7f4a593df45ca\",\n\t\t\t\"keyToEncrypt128\": \"47abfbf76f5e7579464f4debc1791acc\",\n\t\t\t\"encryptedKey256\": \"AbvUZMpC4zPJHsKTI/WlGHsKSFAmBFTOnyY2Y2iAFaaDlXojjWhhk74nnNop49xrICmoZU3Un/Prt/geQ/Pnq4Sxak0dxO3dCwPE7EVN0lN6\",\n\t\t\t\"encryptedKey128\": \"AbvUZMpC4zPJHsKTI/WlGHskWG2I2mzq8R536ALcJZMd5pC4yX/DvrKXtep7BBcT/7XvKcuYIO5I7cT77EmHsQE=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"V1X7t/SUELLXFLO7gw/twLVn9UNOx39pfKm/UA==\",\n\t\t\t\"ivBase64\": \"VfSW4hO/O++mRHZplu70dA==\",\n\t\t\t\"cipherTextBase64\": \"AVX0luITvzvvpkR2aZbu9HROFPh55tlMfuVq6Assp/x/hQj+N3P2ZBuurc1WUskGujqEN6NfwOFreETWAe7UgxJdm4qqUCsT5MbFi+cDvn0T\",\n\t\t\t\"hexKey\": \"730a5d4febd800337eb91ea1c847d6ebf8e3e7e821e5f3118126c6456bff6d6a\",\n\t\t\t\"keyToEncrypt256\": \"e893fd573462834a7c99f53848aa05d23347d34f94116fd5153c7d18cf634f31\",\n\t\t\t\"keyToEncrypt128\": \"b4c413c7da029a99d9868140b84b1b6d\",\n\t\t\t\"encryptedKey256\": \"AVX0luITvzvvpkR2aZbu9HS1YiTHj3PaK87tPtJsG/iE7Bdx+atOeu9dz+RT0E1h9MZZ7nzZV3Ff4lcbDrKYwNEnFN82cVFr2b4nEkExu2Gp\",\n\t\t\t\"encryptedKey128\": \"AVX0luITvzvvpkR2aZbu9HQYixsLSK7a9ERGgwyi7ky9FA2cfdXBY8o6z6uZmJDaz0kWWvI2Z6NRf9nln3VeN3U=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"9wbCuMVFjsBLDqT0qabkskF+k3wMqjqh2CdKQNo=\",\n\t\t\t\"ivBase64\": \"3ES3p7B83TA3Yvc9ninLmQ==\",\n\t\t\t\"cipherTextBase64\": \"AdxEt6ewfN0wN2L3PZ4py5lKNE+V9FhsWSs2ZmgO6qdqWI6PKl3CdwvsaBt38wBlmOyf1k7ZWOXQhBhyaOl57SllkzZZxN67y81xpaP+vshs\",\n\t\t\t\"hexKey\": \"a4ea92cd1e9c0f8539a62f3b46e54078bfd32c88c124846e16a6b1376f7dec4c\",\n\t\t\t\"keyToEncrypt256\": \"404f9f5de0df8262f3c63faa867f2d0c9717069d4f53b651f9267b442f1441b9\",\n\t\t\t\"keyToEncrypt128\": \"b627371ee14f5e1eec6195ccf1adafd6\",\n\t\t\t\"encryptedKey256\": \"AdxEt6ewfN0wN2L3PZ4py5kGLSAYYS9czQEuhvhKS1wLIFytAde1XEpZeZKTJSQHnYd3gKnUMZaOfS2EeHKxbB9nnFdRgIJoWbVLXOUuSJCa\",\n\t\t\t\"encryptedKey128\": \"AdxEt6ewfN0wN2L3PZ4py5lXXMRgKsFndboo4lKOcomgUu98AmhoOgAXpscBhgxibTBErTeL5WtH6jv8Wb1Tkns=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"4R+eB5ysW4gfUS42KbFndw0RmwIMuZUS2BLTPB28\",\n\t\t\t\"ivBase64\": \"kKFVge1ejdquh42sgV6lpQ==\",\n\t\t\t\"cipherTextBase64\": \"AZChVYHtXo3aroeNrIFepaW89EyHgpCXhhz9BfBpbItifturSPUaK3RTg66o+LDRX7+l8dddX9s2UUrJjYmmtRfkSfif1IYEK6VNAxUCxtrJ\",\n\t\t\t\"hexKey\": \"2e1a4690eda60001b364b21019abee4698477e22a3c5b12d319f84aa7bbc4de8\",\n\t\t\t\"keyToEncrypt256\": \"e3d1744c4adc1868c48489ab26240b9903196d6d40b38c1ffb5d4a2116be565c\",\n\t\t\t\"keyToEncrypt128\": \"126b0d568f9e37739f3ba1a359b14150\",\n\t\t\t\"encryptedKey256\": \"AZChVYHtXo3aroeNrIFepaUfaAPuEX+GU++Xgf7IqOAJwLIvyKPGlNlne1u11ra6FuKjkP9yI4/gz11xNIiWNUKHXSgAbl5E+r2BGjazk1Mj\",\n\t\t\t\"encryptedKey128\": \"AZChVYHtXo3aroeNrIFepaX1NFoWb/fAeemfIWb5kxtsqiyKu6TuoTjhd5ydBMlu4gcYiKGbJcVNc2K75smx3no=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"o8EipB1kNDEzB8oRNg/9qytfQlKv+xF2Csd5e5LFgA==\",\n\t\t\t\"ivBase64\": \"sltOqXHY9LCbhdbsuIgO3A==\",\n\t\t\t\"cipherTextBase64\": \"AbJbTqlx2PSwm4XW7LiIDtw4WhBjlm63C7h9uFErUDkyQztX8QC41ZM7JpWdM50p8kYV025FtqUp3w1PyranP8YRcf47lBTWyPuN2HL0f3M3\",\n\t\t\t\"hexKey\": \"1fe849b9f50e260cfadb7deb67ad76c63e65d27a80ebe960c0520bbe2bd66317\",\n\t\t\t\"keyToEncrypt256\": \"6a0698cd69a82f1ef925033eb2b853d3c80e1cc1e4b924d02b736e41e29c89d2\",\n\t\t\t\"keyToEncrypt128\": \"79c45fd0181fe7d8af92209d96f88de7\",\n\t\t\t\"encryptedKey256\": \"AbJbTqlx2PSwm4XW7LiIDtzVISVP9NKy9A3/thB9gdS6KY2eu8T7sPZX/p7JAdyVfzUogJm/IbndY6+eokzBv0cTNPyfAhmkskKaGgING8hd\",\n\t\t\t\"encryptedKey128\": \"AbJbTqlx2PSwm4XW7LiIDtxZOrDCOxD6jO4zs7uHCMwrQyAIsHm/9ug4pG7CukdAGYR4/FRza2O3DVCeJ43qMuo=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"yXjvlJOoeR87ZIYAwOd8Sah4LJbj6HvlrNDn0yFkZ+Y=\",\n\t\t\t\"ivBase64\": \"C0h+Sk/ZYzxf96mCJ/zYhg==\",\n\t\t\t\"cipherTextBase64\": \"AQtIfkpP2WM8X/epgif82IZ8wt2M3Us8qM9s84uWVmERgjFAI31f6p9+7WbjpY8OxQ6XGE2vQkhnoqI9Tee4K47OOXxRn2iiz4X3psb3tsr+wccLLG36MShfF86z1nOKiA==\",\n\t\t\t\"hexKey\": \"cfeaba501b248598a3915951787d671c279265c4522efd16f15c37f9707172f4\",\n\t\t\t\"keyToEncrypt256\": \"52757efdd8edf4af6b82f846732f6efa0a5c51d60e5e8e078aa1d3151ea43d5b\",\n\t\t\t\"keyToEncrypt128\": \"ffe6a05cfca0ca45405a471581606ec9\",\n\t\t\t\"encryptedKey256\": \"AQtIfkpP2WM8X/epgif82IYMG77bFJiTRij/vyEAYg+UvcAODTr2yvIrItQWFU7qy7J07QjHntQitzfcYD1EFGE4wGF/BlW6pzruvEWAldwv\",\n\t\t\t\"encryptedKey128\": \"AQtIfkpP2WM8X/epgif82IYoeSLRx3paanZTDE5PJuBQ18MaWfp/V+P3hLsLrqKECEikfuARgWAl+IktzfZcnnU=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"VxwubvAbs4/Vo/K8mqVBLxnhK7JkC80szZzShrA0uXwd\",\n\t\t\t\"ivBase64\": \"jZdZipPyAi23BB1II4mylg==\",\n\t\t\t\"cipherTextBase64\": \"AY2XWYqT8gIttwQdSCOJspZAyDC4kYAa2d3BGPEuspN4MOfUnrxGzdo3bXSahAs9RsYI1aJ88t9RMA++ts2VFre4PVDBNhFAvCCcUT9r1Tt1Yf/wWxg62XL8+SwS7/MmPA==\",\n\t\t\t\"hexKey\": \"e545b98162ac383cd6543d903aee57676ef5e6571fae567107081bb54459d6a2\",\n\t\t\t\"keyToEncrypt256\": \"883b0a2d7ed3431371c2bcf5b1eb67d3db0abe6be5904130d37df6acafe8324c\",\n\t\t\t\"keyToEncrypt128\": \"48d13db74af3054fc37809935dba3457\",\n\t\t\t\"encryptedKey256\": \"AY2XWYqT8gIttwQdSCOJspY0ovaiZDj38MVuX0gktLndKvn7hPO8W1sRpfmjPBtDMvOq77RDW20+Ivn77yusACwkxc3UCVgU+XfzzOteL1CV\",\n\t\t\t\"encryptedKey128\": \"AY2XWYqT8gIttwQdSCOJspYwskEMnUO2q7OnoP9pj0R0MsVGjpPYZu8OhTC5YcxygR8vxj7PxEHwmBjapxZf6JE=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"uFUh13aC/Rku6vOc21AyvNVH4lnwW2Lh+rdZXi8hKLHtfg==\",\n\t\t\t\"ivBase64\": \"f0GqjA1ZkFVdUHd2lQyZ5g==\",\n\t\t\t\"cipherTextBase64\": \"AX9BqowNWZBVXVB3dpUMmeZNoSpuPjV9KJt3vcGwgVh+cPmqA1JZ/Bfjx8X5PeKy9OsZhAg8snx6uHbxol27Xv4xvimNDP8xoiOSQOMUjlzdHYW2LppaTGF40+iRC2sfXQ==\",\n\t\t\t\"hexKey\": \"f8ab4e2946150a82736366a8f895b5461af09ea86c17c1968e7cdb517925b0e1\",\n\t\t\t\"keyToEncrypt256\": \"1b876cdc33c765226b76cc3dc5f4b650cbe4335ba90342f57ee23f3c9a370f1c\",\n\t\t\t\"keyToEncrypt128\": \"d2905fc759f993ff5c2051acfdc9c1e6\",\n\t\t\t\"encryptedKey256\": \"AX9BqowNWZBVXVB3dpUMmeawxdqUQwN4p8vt5MSpGbJV6lWYRCNQjfQnfp3d56jjv/fs7eChjXYJGgyL5wIvj/2EuNZ/fcMIkExazzzczAJU\",\n\t\t\t\"encryptedKey128\": \"AX9BqowNWZBVXVB3dpUMmebR+eyAth7QcH0Nn1KHScxzrxK76r9BJcN1+rXthnHSTC0URHyl6nPyzQ3FDV/Vzrw=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"syFKottS8giGK/kfbddaZ5PkCg6oz5sAU7zWR97kqn9pPl8=\",\n\t\t\t\"ivBase64\": \"m/Q13iB9xTHssaHPoKDL0w==\",\n\t\t\t\"cipherTextBase64\": \"AZv0Nd4gfcUx7LGhz6Cgy9NfoF2h6j7fv0CpxF1wzbHnYTY6p2gK1RWfrmZm96qCT1oduEoc5ymQyyTTmdHdnlZskphS2hI9injDexyzAQwH9P1qe1ooSRtSYqimx07VJQ==\",\n\t\t\t\"hexKey\": \"a6aa9c8e8636f6ac4d3651d72ba5732d7edaca02ac177b26980ab9a25694d0b5\",\n\t\t\t\"keyToEncrypt256\": \"7cc649da1c279f999e79b125382509173ef8ec48a53073a6ca2dc561362e7227\",\n\t\t\t\"keyToEncrypt128\": \"7fc79e517c8f2698e6d4bd55da696e9a\",\n\t\t\t\"encryptedKey256\": \"AZv0Nd4gfcUx7LGhz6Cgy9OBYSiktwhP02UtJD0KlzHHwgmx8ki6e5qDx12T1LCD63sln+Sc2TZ2o6I8BOcy6C4wUKbKHzbQCS5U9K7X6HF/\",\n\t\t\t\"encryptedKey128\": \"AZv0Nd4gfcUx7LGhz6Cgy9Nbafs7AznzwX6lfAaTEjLgxL8iEOwoh5VuZHgu63NKT9Y6HLwuU8gIaf1W0j4csPo=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"ln1hBG93Bqo5F6kTAhzJLvbQ4OL5D8Vby0JTVKqrUpptRWhO\",\n\t\t\t\"ivBase64\": \"/iSsliux9vHtVVgHqVt8aw==\",\n\t\t\t\"cipherTextBase64\": \"Af4krJYrsfbx7VVYB6lbfGtXHhitoXFrUAqGGgQsaRF/r7FqupWzEqycpkNIOd00SxxJmU99udburylSOSzZBoAXhvY48+9jP1/MupqdRNvowOAix+jHvFkzmdAFkllrnA==\",\n\t\t\t\"hexKey\": \"af2c22c550d54c03490ef5be9fb580c1dd1d6598bce8fbf316e93a598dfc571b\",\n\t\t\t\"keyToEncrypt256\": \"70394da55393926af9c6bce7b243555071dc3b7f867d156391242c7aa538e9cc\",\n\t\t\t\"keyToEncrypt128\": \"3cc78bb2c8e6209bd648105e9c9774ae\",\n\t\t\t\"encryptedKey256\": \"Af4krJYrsfbx7VVYB6lbfGvad89WP/7QvQ6HGOzqDStFneIdRdnVCsHCJedp7MLbamoxWvQc5oi1Xh2ypKPKz/ww2WhHc9ZzYuqSkxVzFY+/\",\n\t\t\t\"encryptedKey128\": \"Af4krJYrsfbx7VVYB6lbfGtz29UOwub5Q4+xuPMlGAtBZHJCUcmqxJ4PeteIHLIXGelJLrXlZkyDpKYHPJGceJ8=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"kV52TQ04JX4AvqmeJKmHub5NKTY1gUIiwCeYK8YRrn08GrisBg==\",\n\t\t\t\"ivBase64\": \"eo4IUEZfQSoErASUFk66Sg==\",\n\t\t\t\"cipherTextBase64\": \"AXqOCFBGX0EqBKwElBZOukqWYl6ptabVgnc2PBqzzqVr7EXwusL93JQ84d7QmNwN1rRVk1rqNPLvv9jsHjW/Lq0JFzokuLTpBfSgXJl0lldi0UxyZmdKsokAD/j2dwu+LQ==\",\n\t\t\t\"hexKey\": \"370eae688bf33db8f82dccdf70082de5808afc00e2f94130b3d23cb6b19312bf\",\n\t\t\t\"keyToEncrypt256\": \"d6f64f246d60026963b911f5c99255b7ee4443b2914b20e7102169b6c8202e4f\",\n\t\t\t\"keyToEncrypt128\": \"9f999655a305d2df9807938ba871a4ac\",\n\t\t\t\"encryptedKey256\": \"AXqOCFBGX0EqBKwElBZOukp82RMH1rSJCM82nXGtjLWZBED6r4T6FTQXt1WcPw7jFkyCuXOiiUnSvSf0zx6Sr7DPUdBSul7Iej6kGAgGQrCv\",\n\t\t\t\"encryptedKey128\": \"AXqOCFBGX0EqBKwElBZOukomato9e+/lkT+rzP0hYEH7cBw6HT5QvrI5seDN5fKGkf+keiNKDnGJYki0FB76bmg=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"qeZyzOt+UNKLZqBiyt4CJG+wvjE1/e8Q6MI248qt9NhQZOS4y10=\",\n\t\t\t\"ivBase64\": \"UtxN1o+ICkhNM5lMo9arng==\",\n\t\t\t\"cipherTextBase64\": \"AVLcTdaPiApITTOZTKPWq57f8aQ4LKtSyazrFQ5EOzg4skYTMN40pDhB/xK7mmWcyt/qJJ4843HcmzkxkNcED/9W45j7W60pKSpXN3FMJsizOmYNWhdmL2gqIwuGr5rpBA==\",\n\t\t\t\"hexKey\": \"7212d1f44fd66c2842b1412363fe1352c2319cac8658cd7bbfcf6666b48e1d8c\",\n\t\t\t\"keyToEncrypt256\": \"975659f560fcb909d017f4f4ae22c7b9d80ab426cd3395bdfce7b1447bc28d99\",\n\t\t\t\"keyToEncrypt128\": \"cbf846b6084d4891a4a2e2b7829542e7\",\n\t\t\t\"encryptedKey256\": \"AVLcTdaPiApITTOZTKPWq56333CQDfgP5q2cD7PdELqmnk16PrmQcYcGxr2fA0nxUp5sLKUkadzU7DDDUHLX/hMQQYDWMN/eC7DCo4SraaKW\",\n\t\t\t\"encryptedKey128\": \"AVLcTdaPiApITTOZTKPWq54qc3Jj82GFRmrAIKhB2vzrWZJlXS40q32BQ5zRNR9DzDsDri2sMZwSbUh5YwReIro=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"dMUklvpbU+yPx+SvJpR7/hwN4uiBKv3K7xedbeWQ/nVA7oQsoisX\",\n\t\t\t\"ivBase64\": \"Yrl95BtAR3xuPx1l57xhLQ==\",\n\t\t\t\"cipherTextBase64\": \"AWK5feQbQEd8bj8dZee8YS0NYTqXHReh+LSbo8+EG13FmX1V0g2tHmZIzyZQEp5CK23bGV4xhVzkUaXn/b40qu5oPtwTu6zQjZwOndvVRmbH3F4vAtboxnDVM2ruo5IMwQ==\",\n\t\t\t\"hexKey\": \"5b3cd721808321673330353fa214840bc4908fbcbe81c7f2f4b9908ce5c86393\",\n\t\t\t\"keyToEncrypt256\": \"6b051d424ac7a094bbc3135281e845065f8401703ddf0a52b42a81dbf6036c3c\",\n\t\t\t\"keyToEncrypt128\": \"ca0155ddadbe6d48dc60c615b7cf11f7\",\n\t\t\t\"encryptedKey256\": \"AWK5feQbQEd8bj8dZee8YS2+IgQAPix2qwrZ24sjsXMnRghHU9ewbIiewJ556FXIFkmhJvdbwMiT9Q9d6ciTMHbJIw40prDycnlctnM4PWR+\",\n\t\t\t\"encryptedKey128\": \"AWK5feQbQEd8bj8dZee8YS2TOSkys7Mr2VvBRezEkZFJ1gtO9Uh8ogigZWypmEgo/rsVcAGKPaLC69ak1SEg0PA=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"fj6JVfXMYNTIKpRauH6uKUN9A0Lb33afSfZJav+5TT4vmQizu/XqcA==\",\n\t\t\t\"ivBase64\": \"Aw4D9ahiOt78IdE0nF4plQ==\",\n\t\t\t\"cipherTextBase64\": \"AQMOA/WoYjre/CHRNJxeKZVEjb4JBVHsN/Ta8jXUsEcZJIzfEOae1eUB3FiQtB0TUT06izn2cZtPYsKHPiCuLBuQSLSEDz+q7SyEq2noHM+YnSpyBWUa6azEtK+Kc/f4Ig==\",\n\t\t\t\"hexKey\": \"35ee06d3afaad3b1491d232bd4e786518b2cd9fb34eda356f98ba8f1c90398f1\",\n\t\t\t\"keyToEncrypt256\": \"d6d0382e88ba40d00113dd6e789476c6b31501babbe3c580a8d690950f8d906e\",\n\t\t\t\"keyToEncrypt128\": \"49b9468b5f2ea730fa9db2b3fe97e94d\",\n\t\t\t\"encryptedKey256\": \"AQMOA/WoYjre/CHRNJxeKZUhmw4RLUpV34GWeFB/AHxdDa4TIZkQGnLnCkE2lEBYf45P3qFB3qoeG5ju0CRwa+kPdQlBss4HoSsmM7AgCXE0\",\n\t\t\t\"encryptedKey128\": \"AQMOA/WoYjre/CHRNJxeKZUx0c08Yf5L5O96baxHqV8UkIOaVF8ILHXUIRuwfIcREUXH6VxHJpMY9DFZtGbah0c=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"lfeTVApTD117SKI1hhr9jjEsB8yxtFu+mCtDhstcmztLNFEuGFo9ObQ=\",\n\t\t\t\"ivBase64\": \"VI2Klm+RcsTeMp7qupFOdQ==\",\n\t\t\t\"cipherTextBase64\": \"AVSNipZvkXLE3jKe6rqRTnV7UlggNfEhkh57Y2Zu6my+9J/l5BmOa3HtVYz47+7I79J8swuWTHyfdap9KLzZiIa+W8jgRGrcyezZLmAjKvOZGLhdSA8XJKJifwV0d2+nwA==\",\n\t\t\t\"hexKey\": \"f1c461e7169c07c4d5120276bc826a2e303c9ce5d78e319e8c8376926b0ff591\",\n\t\t\t\"keyToEncrypt256\": \"55c50a33426887e3b173bedf81ced84cbdf000d9ef55e66416732a6e75a4b97d\",\n\t\t\t\"keyToEncrypt128\": \"4805cc4f45f497a8ea60d7bacf80aa14\",\n\t\t\t\"encryptedKey256\": \"AVSNipZvkXLE3jKe6rqRTnWfREg+8v/Gd3LXBJugpsmuNngdt5b0WAC3c1WNAei5Vye/JdgVmeeqtGW2FBdu4wd019wDcmCR2QPC2+7Xz9K0\",\n\t\t\t\"encryptedKey128\": \"AVSNipZvkXLE3jKe6rqRTnWPTz1A0eXJmgmJx6n+no/BoUZ1Zza2JeO63hRqGDdx7geLGgEg1zRaQGk3OkvYoZk=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"wAzpgXuD7hlX6avvsXxsHJcPS9oPbYNaC/SN6JcBHfpT/sqLhM3se47l\",\n\t\t\t\"ivBase64\": \"oGt9/BkS2Ptwl81nUxg4CA==\",\n\t\t\t\"cipherTextBase64\": \"AaBrffwZEtj7cJfNZ1MYOAgNu98IHhnKJikUVxc7Q1QFfrUjgALVIxYf2kOuopIm0JXpOOw3QeFBLxdoA/he934pI8DFAvKcCgInks+DfVIU3FA/m5M4HYr5yF7MVbarrQ==\",\n\t\t\t\"hexKey\": \"200904c5e0e48800f6ce4d6c63125ad08299599472784f2c38b438c37270dee7\",\n\t\t\t\"keyToEncrypt256\": \"e51af749aa2c2168a7727a13b6fbc937c4cea278c4a868906a78a5f3676147cc\",\n\t\t\t\"keyToEncrypt128\": \"4d764fabaeb29b08f2da7e861b15fdac\",\n\t\t\t\"encryptedKey256\": \"AaBrffwZEtj7cJfNZ1MYOAhhBe6BpaPcw8ssZ3BXgboGHUtQE0ewHjOJzENJ7d1u904eFjN8Uo+8B55lylYjge/WHRV/Beu8X/eiOV/C9tkF\",\n\t\t\t\"encryptedKey128\": \"AaBrffwZEtj7cJfNZ1MYOAhQjTZeKtjrPxxRtFNATHrZydJ7wHJh92GFB5JD+BdCx9qMIykJDrhrOT+u6XWYjfc=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"GP8EDVL888oNIJKj19gEPYPwYsWjVOSy+8eR3cajmgqFgAeKRKBdSUUoPQ==\",\n\t\t\t\"ivBase64\": \"Hp7hMkFZyqRIhkUpGgp58A==\",\n\t\t\t\"cipherTextBase64\": \"AR6e4TJBWcqkSIZFKRoKefCiSuf9R1LPxxabQbUBb78RkA4XDHE3nw3h+/33Pt20CupSvkNSgwFndKhhiNXOxDQ1y7qR2s9hyFvcrJg5NZcnRgceEdIhkVtVJd/TjTwO8w==\",\n\t\t\t\"hexKey\": \"09216105c7fdecab135b49fcf75fcdbc0efaf9e81227a8dc25039ddc6a3684e6\",\n\t\t\t\"keyToEncrypt256\": \"05f59809aaff9b3bb040c9289bd79c856fd58f17ff01d4f275192f55139706bd\",\n\t\t\t\"keyToEncrypt128\": \"8c7ce96cfef15e68f1b2466630ac4118\",\n\t\t\t\"encryptedKey256\": \"AR6e4TJBWcqkSIZFKRoKefAm+xhIQwt/M2+AJbznSaGttRtcS9neuRgBiMQbB2tflCy9uJFMQuqSbsw7C4Vq9Q6yGGHAAsc0rv6hwU+i0f9S\",\n\t\t\t\"encryptedKey128\": \"AR6e4TJBWcqkSIZFKRoKefDnbWA6qLwQdNpnYEvAJqkl8XWapHmq/6h5nkmTY9zaz3prJEFDtGfX4SJmV1aea54=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"xy/lNo8C+1yjTC6D6FCyXxAIKjSgTXYturIm1RHz8ODgUUOlL4RTnql+DmY=\",\n\t\t\t\"ivBase64\": \"Fr7OgbC9O8YAECfly3Dhxg==\",\n\t\t\t\"cipherTextBase64\": \"ARa+zoGwvTvGABAn5ctw4cY1rBtvWGCj7rNNzauSKWXYwBDq8vpYslw7bOcfHmtNwRUc1m5MlmT9hqlVYFmQDAnbTcnN6CkEmuwzPAru/SWlTheJu3b2A9GaWYvmQnwtAg==\",\n\t\t\t\"hexKey\": \"f92df783515268404d0b87255da6a3d0eeee1b76f13aa647cb18d1c8c6b33bb1\",\n\t\t\t\"keyToEncrypt256\": \"23e51c707729cc78b4d56316cf76cb23f9ee242f43e8ab5d0c681efee191c7b6\",\n\t\t\t\"keyToEncrypt128\": \"07df21389345aeb00afaf8ed456b9c30\",\n\t\t\t\"encryptedKey256\": \"ARa+zoGwvTvGABAn5ctw4cbCOLFGWh+E4p41cv3tYR24jWqli1q75+8AM92nu0UcgQJsNkJ6QaLTpBovHaTajN7meR4HvPlA8MC2VVlWamx6\",\n\t\t\t\"encryptedKey128\": \"ARa+zoGwvTvGABAn5ctw4cY+4vZ6Nm9HotfQTjAwdh5z3vh/ABtGMIpgJ3RTxxd4dUcbxq/MgVP0Pt2jXkICXG8=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"Qo5bxngXtJmJhIlPGL81VsH9NJzucTnzxvolJmqufCLO4tW9cvPxSOcEkz9/\",\n\t\t\t\"ivBase64\": \"IrJWZM0JTBdnFsznnTrW+A==\",\n\t\t\t\"cipherTextBase64\": \"ASKyVmTNCUwXZxbM55061vi6jOp+Xh8QDyU5J++2MciPgw2PGC6BeYn8IMh0ttlEqT7HhlnzkQQsXmzG5gtUQTbSocfrt31zbHFGvU1CwZ77N6MTxle77zH/vWbVfAtk6Q==\",\n\t\t\t\"hexKey\": \"6a3a68c400ec66f993115cabc71aedbdd71b6fac1ed6beab78aaad732a369314\",\n\t\t\t\"keyToEncrypt256\": \"93d313c31d9443e47dafcd12bdb7bb11df9bb5fd34c2e7b6135a003cbfcd028e\",\n\t\t\t\"keyToEncrypt128\": \"1e9ea5ed421d592c05e383aacfc77363\",\n\t\t\t\"encryptedKey256\": \"ASKyVmTNCUwXZxbM55061vjbkyCqwMcvVM4YeVnEHYwBqDUd7/RO3Ls1MlkTXp0qGgwmlqeq+OPseN1aG8cw3XQgMZrbOfr2Ck8CRCaxnJau\",\n\t\t\t\"encryptedKey128\": \"ASKyVmTNCUwXZxbM55061vhqBCtu1MjN3YVdNLr4+OXmiWOqvo5p/aAVSVQEEsE6HFRGfjpgDID6HwDrUl0D0Lw=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"kwMtzMkNDKUcrEIn9iWMw9wzIdyi9JeGO9YQ/LNflxLxrJBmGsWfaFSDXkwaew==\",\n\t\t\t\"ivBase64\": \"Eyr/nZSwYyFUivIi7xTFtw==\",\n\t\t\t\"cipherTextBase64\": \"ARMq/52UsGMhVIryIu8Uxbc3F1BuLAkYAvAHucpuCt5wL6q9Oz55EHbulHsF9xjA6WxLur2t1xkD7R+MWe0lsCeqEsst46G+UHleJIBZKhU6kkh4Z/vXsQVPq0oPEtIG/g==\",\n\t\t\t\"hexKey\": \"99bbe5359e2c313104286230fb403ffdd673d48c5734f47aaf8a85811d9588c6\",\n\t\t\t\"keyToEncrypt256\": \"a3d25190e1a591023b24b9e6e4ad567aa50f58f91dbace519a731af3b7e3fd08\",\n\t\t\t\"keyToEncrypt128\": \"7dc60105788c769932e96ad82f9460ef\",\n\t\t\t\"encryptedKey256\": \"ARMq/52UsGMhVIryIu8UxbcbQNnLETtlrd6qr7Xg70V7hDfN0HOlYNQODAEq1KyF9wxqkNPpLR4A+66Px+HP0fYG/zaO3Ip9j3lCKR1dPNfL\",\n\t\t\t\"encryptedKey128\": \"ARMq/52UsGMhVIryIu8Uxbe17CtmcgFPD8x8X9V4ya89OkheVTqykd7IvsShdip6y7vk+xdyHuItk6sM2THPFvM=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"8OhDkF8TRjuJgHEhV0wWt8dnC7h7ui3pO4D7Qimbv+AprU4+WrynGGLFfhShABo=\",\n\t\t\t\"ivBase64\": \"thPdb6O5FqDlPGBOwSMpqQ==\",\n\t\t\t\"cipherTextBase64\": \"AbYT3W+juRag5TxgTsEjKalt1Lo47SBoaf9XHIIgzS3Dg5PGYp8+idF12+xANlh+49K7FJo89THk2XOMm+SDG6HTdhKFx+cfNxgwTjtQAsg8jG6F4r0quy+KNw0+HfAOEg==\",\n\t\t\t\"hexKey\": \"dc40fc24786d662ebd692d92f408298fd2486f3a36b477a25653b32416b8459c\",\n\t\t\t\"keyToEncrypt256\": \"9319931345c50cf8c2806ca06ea162a24594ec72d81414e40ab36a26b88eb53f\",\n\t\t\t\"keyToEncrypt128\": \"0296325a2b3ac0cbb227d57a71695e20\",\n\t\t\t\"encryptedKey256\": \"AbYT3W+juRag5TxgTsEjKakmLzMJw1Pz/aycvkY9Lrf+ZkE4RHWSnV01z7PQmCc6kCSibXf3EoXvaqbm92fIr6FGW7/o/RogHC9YwMGr2orJ\",\n\t\t\t\"encryptedKey128\": \"AbYT3W+juRag5TxgTsEjKanwfKZn9SN34Z9WDfozkGztKxGwz7jEutzzPStxUjMm+pgne+ZqZroJMRadj3ssqaM=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"oWr0k/LCVxalHJhz6T1o6Q04ENAnVFx5W5P2eHRaiCHw1LIVbW3pWFf2eIcS2bht\",\n\t\t\t\"ivBase64\": \"wheLmasmrsUW16C/8Zk6ow==\",\n\t\t\t\"cipherTextBase64\": \"AcIXi5mrJq7FFtegv/GZOqP30KgUNIKTz3ekiR+7mbx0feXhDAoN/tQmJkff4O5j1xBzhOQ9w4WwbqriItsN0JCiord0y46wjh+433WOZwkaMfvPBA12FtMkSlyvM0YPGZndWDAArh7TZgYOIN2jdoU=\",\n\t\t\t\"hexKey\": \"f5643e4f0bfdf5b38f043d9f6a68bfc94eb371dff5e527a99a18d41c7ae35f16\",\n\t\t\t\"keyToEncrypt256\": \"f9a1d6aafb73be9b726a57b60f6ebf9c1b4ef42f5bc579592038c0d6dc08b88f\",\n\t\t\t\"keyToEncrypt128\": \"6ea3217c1ef73041c1579c4aae36c8c0\",\n\t\t\t\"encryptedKey256\": \"AcIXi5mrJq7FFtegv/GZOqOvLaH0r31Q4LYQttdSLp9/Bxk4dOHNyKW7ipXJWatOy7CJ3wnKB8Y69r88xv0ddodi02xZkx3ukeuIrZm3gjUO\",\n\t\t\t\"encryptedKey128\": \"AcIXi5mrJq7FFtegv/GZOqOe2WN2Tq5NHdfAyOa8iqMV1Y4KL0SIBODOmEKep5UWJHfY+gDdUngzbxaeUiM9oyA=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"XPcFcJ7DgQjnasGkx959T//gEoXZUSbHaFMAiE8HQV6vCIBm0w3WNKyWA73Uv8QTwA==\",\n\t\t\t\"ivBase64\": \"KzvynTHx7UuESkBxWIm+4A==\",\n\t\t\t\"cipherTextBase64\": \"ASs78p0x8e1LhEpAcViJvuDR57c0sn03J0AukipT3Zyr+3lVLRCRXNSiIy50E7gO8bSU1//mnwdfqrClF2oiDbySb6tGYu4+n8CGaMdS0i5wvZU4My5MrV8slJq59NIdAMwO6PuMxL2yZAN6z90jpn0=\",\n\t\t\t\"hexKey\": \"84ace5a505b563aed9baddaa517f3384feafbd06f2359fddc87ef0f3b35cdca9\",\n\t\t\t\"keyToEncrypt256\": \"83ce506bbbe3fe80081daf85e3607099d0a39a72b966bc796d1b79b6c8dfb6b8\",\n\t\t\t\"keyToEncrypt128\": \"d59b9ad5281067e43bb57ad696206242\",\n\t\t\t\"encryptedKey256\": \"ASs78p0x8e1LhEpAcViJvuAkDAsfiggwwMOFQOacdUdPP2OkcsCgT1L40T7eUtyBqJ96PnBsJxqkPLbCqREpLukJmWjZGR9cYbuVRUuM8Byo\",\n\t\t\t\"encryptedKey128\": \"ASs78p0x8e1LhEpAcViJvuBdyInk9G/lc07yWovP4GV+Vrj2GQ4EPzNZ5xr8rk3pSdG/4CsLCiD97QDXRF7GU0E=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"BB0bEOUCn101XrnJBrC8mAi8a3yDda/e4x10XlHv+ACe413iXiTlM/WN7x3uJl6+/Mo=\",\n\t\t\t\"ivBase64\": \"8YaVlWclP/8SySLWULDqBA==\",\n\t\t\t\"cipherTextBase64\": \"AfGGlZVnJT//Eski1lCw6gQM+Cv3jOlCWap55F5PdVwMi1r4ZUeq2r+HEbP+oyptUIGx9bdu7yY5d+CL61AaMW9cMBHeS1dbMjZx8SVHKDaXdqMhZNG7wf2zSmkpYs8NZBpHJzQ0g47shk2trx1Ao+Y=\",\n\t\t\t\"hexKey\": \"a4cfa131ed1df30e3efd604589128a92baf10cbb57695bb6056ee99fbc4bf114\",\n\t\t\t\"keyToEncrypt256\": \"049ebbb23eeea5fe76479e80dc2e62359c88ec10fbb4dacb73605afba9d764f6\",\n\t\t\t\"keyToEncrypt128\": \"7056fb782594cb33a05d0479b7245129\",\n\t\t\t\"encryptedKey256\": \"AfGGlZVnJT//Eski1lCw6gTIvCkdcrwBrer0cjN5nB2AcPlUYjGV3dJqZRigG24HeE+gp5kcEViEGWghpUBqMW+bPgzmQlXf1XDnyFvmiKZD\",\n\t\t\t\"encryptedKey128\": \"AfGGlZVnJT//Eski1lCw6gQ4RvMFEwwqq18nQ9MjjRnkjuTNbdq2VTi30cTwodpfYdTdbeRjlqwgjVQNwsFiyH4=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"7ceSendnQJI6JG/irumHKH0lA5EA8mMOdH6g/iKCA1eEhkPVkaP43j8hhbFXzuJH6QLJ\",\n\t\t\t\"ivBase64\": \"rj2sm6jdNPSzB0jD9kx5TA==\",\n\t\t\t\"cipherTextBase64\": \"Aa49rJuo3TT0swdIw/ZMeUwXa1mDqCsjKhsxwLP7NSN6bLBXiI2cKeACqFwehKbAeI0VKWU50h9bE/yZZJgmCT6kr+pLMBUt8lB4Ju9XaGMX2whgRzbUrmHLmnDu5tsouMq6Goxu+25SPWDZIlHBOIc=\",\n\t\t\t\"hexKey\": \"46971ea216d2d68ff019ccc86291ae1d4de7e972d8b1a70f8178eab40b04e364\",\n\t\t\t\"keyToEncrypt256\": \"56b0e56b9a22b9aaf9c30ea763571e6b21107dead4c359f05a11c5fa7a94ea22\",\n\t\t\t\"keyToEncrypt128\": \"96c3f71db5428732774342a3c14ee9a7\",\n\t\t\t\"encryptedKey256\": \"Aa49rJuo3TT0swdIw/ZMeUxl13RuUqqmG3LcyhApTNG6AQlzMwh909Lz1m9eqJdp6R0yBQSkFxi9xemqFLiqmtwOfcCK4JCoyy/h3fNERp3w\",\n\t\t\t\"encryptedKey128\": \"Aa49rJuo3TT0swdIw/ZMeUwVsgGzPoF/nYQZgMSclGUrYzETztxZo6dDYzNOsbKIi1nxl9upuF6ZcZRvOvTUZrM=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"ppWFKuAwDObRUepIu6ad7VwMUTuSuAbYxhMtLGIchipIps9rvQd737FUwC48nrQxHTPM1A==\",\n\t\t\t\"ivBase64\": \"QQPnYNcW4/ajsrU9UxlCMw==\",\n\t\t\t\"cipherTextBase64\": \"AUED52DXFuP2o7K1PVMZQjOn8gUqzsI5A9a1E35HeL/CGcvgTTcTReeJTpE6jn9UZGu3rNqX6UaBLyQjRxwWwvBGowhgHJzSk1Qw7qdl05zVaZs2e1qRAZ2ss/3nwiw/vBT0EWu/3v51sNZzDHegun0=\",\n\t\t\t\"hexKey\": \"129a394449d12c9738df93bede97bcf7e5ffabc9eb38d780fb5c87f5c26302be\",\n\t\t\t\"keyToEncrypt256\": \"70f27a07691e6f7b493f7fec2395bcf692f0ce46826c684be545fb8a62def465\",\n\t\t\t\"keyToEncrypt128\": \"a9923be559567c84b5b852034f738acc\",\n\t\t\t\"encryptedKey256\": \"AUED52DXFuP2o7K1PVMZQjPFzwzT3Ksdk3CeFWO68GSE+rfwa2tvNbvnydZCdZKfnajD4XEp9+PEllGlr8InATw+ShbtDpV0D1OxuEM/3u+R\",\n\t\t\t\"encryptedKey128\": \"AUED52DXFuP2o7K1PVMZQjPAsJUdA+iYnMqlVZG63lO2MGZGrR0c0r9mKlBWopTkOhCFVIE0b/vPC37H5cNB600=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"r2X+DEDO+YzMums9UuwAoJGF6qq1nf7ForoeMu8UgTM/VKbymkkeZbDdLg1NdS+7OrwFSbE=\",\n\t\t\t\"ivBase64\": \"H8ifzt1DrLXR8ziiPh24yg==\",\n\t\t\t\"cipherTextBase64\": \"AR/In87dQ6y10fM4oj4duMqqjpNwaYhFMIPfmyshPIMMmG6QOlCRitksNo5MQgnUwQrmqsDdjxEXytt+dB2rBf3BUI1XrmjUwvN+5bVsZzNb46v57W25jGTiRPKfaDPeTNGqNfbQS2SqgMXR2fNaA+I=\",\n\t\t\t\"hexKey\": \"5c602c5b30884de10e901f7fcb8f139f0bce2476f68030f81f04964885fa8b7b\",\n\t\t\t\"keyToEncrypt256\": \"61bff358843938f53616e83b389e29bf01b6e7b59d634a56b12b7d5131a1c498\",\n\t\t\t\"keyToEncrypt128\": \"d04356d40e3b056955a5074e240105b2\",\n\t\t\t\"encryptedKey256\": \"AR/In87dQ6y10fM4oj4duMoEAtZCjQ+75FNnuuoCUGlFDi89XWRSUkpNBCudPvmzeiYh6DLTOCJpWplTLPAmxNj5frbtPHk1WCdLmg2JuGwH\",\n\t\t\t\"encryptedKey128\": \"AR/In87dQ6y10fM4oj4duMrqha2jgxjTabPr56gS8/1m1c+7zKyjb4buDy8zsiV/F7HlN7B0wMIvhGdcqcIHdD8=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"0nR298cRDEc0pqgu5E+Ih2pGI/6tVTNffi6KfGhjzEI5qfaavQqLS44t4mcKfkobxeJPkjUE\",\n\t\t\t\"ivBase64\": \"mKZ45Awqgde9v0fdRhx8Rg==\",\n\t\t\t\"cipherTextBase64\": \"AZimeOQMKoHXvb9H3UYcfEaMRO2/ropC7s1nXEcF7xEDdtep40P8mkcUsFFChVeavnxRaAZenMU7ZcmEdOeIhTrrSpL+soA26qTrsY4NhohVN1OHCoHM3R8Qq2ybvhJlcO3gzr01lI6JMmINvWOX1Qw=\",\n\t\t\t\"hexKey\": \"6ac77e8c6b68afad21357395d4a46b4ecf96da9c47377aab3e62e73f9d626dbc\",\n\t\t\t\"keyToEncrypt256\": \"a55a34fb96f927ac25dbe032c4236919cc33259035ad8ac0cb013915dc823051\",\n\t\t\t\"keyToEncrypt128\": \"d94e2056f162ce50b8ab3cae6f8a2f96\",\n\t\t\t\"encryptedKey256\": \"AZimeOQMKoHXvb9H3UYcfEZ86ywL3eMJbwg9G1yKs/LKkuHgvVsYPWAh2K6TZcn7zsRc37SwNkQBvbBgoXOFO2IE24KHithEsVcQRztsLWsH\",\n\t\t\t\"encryptedKey128\": \"AZimeOQMKoHXvb9H3UYcfEYG77pT5MCI5p9WKXReBNO/bgiQOfVMrfnt9ByC0x8fKvK4u6Gnbl1nRbbT/WWu4kY=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"sH+QnlE/WSO4CWgJdYS8hCce0v+0LdeksyVrb92kcsX/5N5KrwcSyrMxLUQQ0jjgOXrdbRO2Og==\",\n\t\t\t\"ivBase64\": \"javc1kWEstZ+Ci1gscVOfA==\",\n\t\t\t\"cipherTextBase64\": \"AY2r3NZFhLLWfgotYLHFTnzAo7yRsat57rcWI8TZJkSP/+MhOEmonNCiIb+UjFCa8jC5+Zo3s3dR5uiKbkOZ6+9TdJ5Hs5eOBqH82quoKHVWLWU+D3gBD7hAKehcyF7toNTXJUfMrRHoitcYhVzteek=\",\n\t\t\t\"hexKey\": \"f1f188159f8cbf89a82bbae62a249af6911e507a160a5aac3567ea7bf5586ac5\",\n\t\t\t\"keyToEncrypt256\": \"2646182af8267100e7ddc409d3751b914dfcce78be0ddaf0f2f2a295b7c4590c\",\n\t\t\t\"keyToEncrypt128\": \"a88f3ae3bb8e14950069172ccc217702\",\n\t\t\t\"encryptedKey256\": \"AY2r3NZFhLLWfgotYLHFTnw4x6c9FXzJIGiiRqp+k2KZHi3K5mAYfihQkN7h3CRJxDD7BF2zAPIlWQMfMUcaHStShOjJgEnKZA8StDkruDhN\",\n\t\t\t\"encryptedKey128\": \"AY2r3NZFhLLWfgotYLHFTnxtsvcXIknF42JULl6mlH3CJBO77BT/yO36bZUHq0Kl31s8hnsNHKAdU5Y3MTKxQr0=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"Ignc8/y+bq6ddr7gu72wr2VmML34fZNzmHZ9d+tTAgaGZrbK8KwUEVXWHy4NbmgJ4KvHH5kB0C8=\",\n\t\t\t\"ivBase64\": \"FpmvnQx8DepmemDZ/n3MMw==\",\n\t\t\t\"cipherTextBase64\": \"ARaZr50MfA3qZnpg2f59zDM5vw16zOj1m6LfFA7otBzhuMubNibviwRbjl4EZtdB3P9SvLsNyIMHlYYuZ1169d5sGJmRGti8AZST43zFhPxuh5fHagZs5qTzBN/iBebSHE+mdqG73wqWOu+8FQiXn5Y=\",\n\t\t\t\"hexKey\": \"7f2e983b1ff9170d733d9d31ebadc509550248549cbdd1a7e644efc860b65f9e\",\n\t\t\t\"keyToEncrypt256\": \"07567145b18de751df97086cdf86980a52579b4623c8b27685325cd021eae1b2\",\n\t\t\t\"keyToEncrypt128\": \"0d75b9e2537b850533b72d5b454d8d14\",\n\t\t\t\"encryptedKey256\": \"ARaZr50MfA3qZnpg2f59zDNnGyLjhyVk0d493DTnfIBbV6bk4v4qJ0LBSbRYYm/8T91Ygu0PTp10Q8Wv7xWGr4l5yFfjlajLwb7HLjbW/OFK\",\n\t\t\t\"encryptedKey128\": \"ARaZr50MfA3qZnpg2f59zDMNZyXOombAAtUt3u95V8NmFiEaPw5hONGwl7qBGzJ6qzg8lAEvwyzvGdUpSY4NQQs=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"qKO9UQSt+jMG/JK8EkHWdAooNJ4GMOgdrfFM2JGd16NCk5w9kPvIaUSjGcLOQHF3/NW3oG3J8amc\",\n\t\t\t\"ivBase64\": \"lenGDiSTmd2iwX1Goozjpg==\",\n\t\t\t\"cipherTextBase64\": \"AZXpxg4kk5ndosF9RqKM46arKMPaqGFCioCJY6XjZby4FnM7qOuTmpaAwWqFTAO3zt9jb0RHQlmAqlWV3NQ0npxKwOpQqO7htg/bLvYraC/AX4tf7AJne8LBWJ03CwtTg5dULnpWWCrtVqvx/LVtsiI=\",\n\t\t\t\"hexKey\": \"414f4372dbeea4697ce28b4bcbb1797a6e137a6722dea1e9383fe769ee9bb2ac\",\n\t\t\t\"keyToEncrypt256\": \"512a59379f8018ce73620d0301e7a4bf7f419dcd664578dd47a93fe38c9e456c\",\n\t\t\t\"keyToEncrypt128\": \"cd8f8b5066cfba93df5ac395cc6d9720\",\n\t\t\t\"encryptedKey256\": \"AZXpxg4kk5ndosF9RqKM46brSa0XKgBv2U6eInME1zFj+5ZiCbW9dxfNDUKC4yIzJnRynTcQ3NX52bu9BsR7boyD4+sJYFZmwJVi5DLa3JwM\",\n\t\t\t\"encryptedKey128\": \"AZXpxg4kk5ndosF9RqKM46aQu9xUKVjR1oxTgQMNwQAAIuPOKeRLVTkHyWId052RZq000O/xezp4RmIRkv1U370=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"6CHYr33CrrdZ1bAru2+6RptbELor0tab+p3aoH0CGftngabDq0dNq8dVd+pNq7K5m7pbXhH4+9cJDQ==\",\n\t\t\t\"ivBase64\": \"s2TZ+PmZREY7YZAE5bB0Qw==\",\n\t\t\t\"cipherTextBase64\": \"AbNk2fj5mURGO2GQBOWwdENUaooIddgfmqBJb3oXHjQiOnRKPIJjcTxTGf6H6AD0vpUnDNFOYpuwpmsJqueqCI4bmcdFXYAmrKg/F8RHtKfh6w6IaDkvnCzw61NGfRcTJuUMSQMOOZKBg8VJHNSw2Bw=\",\n\t\t\t\"hexKey\": \"0374c794223028ed1f8fa7779c7b10deba4a90fad0e6dbbf53fd8010d7bf492a\",\n\t\t\t\"keyToEncrypt256\": \"acd274243634eb976388a36c3acebf32216427c7ac14a67f79524c5f7d096a07\",\n\t\t\t\"keyToEncrypt128\": \"2e20cb29e016429c465b95c2609ce673\",\n\t\t\t\"encryptedKey256\": \"AbNk2fj5mURGO2GQBOWwdEMxOll8ekbh6mwgwRWK3MJOASJrEt15HYSWREqlNTrzuecodKvJZVXBibKSTFmIaFtmpPiDJRRIQ1w/0LO9eA1S\",\n\t\t\t\"encryptedKey128\": \"AbNk2fj5mURGO2GQBOWwdEOf4X7KAKNJM0N/Vfcv4mWiXzPSCBVE+YkChxvUDjVKH/L7PtG2xgnZonXoLrkjtUk=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"BGxqVaf0knrNjv6+S3sfSLtUcwWRbRQFbDudJtSslo4EHSgbvCxJNIbjS2w+9hJvOJUWMNUVud3qD2g=\",\n\t\t\t\"ivBase64\": \"l2suKwEM8hZKsEoh24ug/A==\",\n\t\t\t\"cipherTextBase64\": \"AZdrLisBDPIWSrBKIduLoPzNqy4ByT2cQI08bDEl6cGs5wi6QaUnX3TE9vWF16MefyFuiW/tS69MB4dJCwIQgAFqts6w27rSFsZfPYloUhe/qWe61J6dbG5iKsGltN5fEOqR7R4juXR4XvYrhX9c6xw=\",\n\t\t\t\"hexKey\": \"c840c5dbb598e5b0d234b25e7498a8e4856418d45657b144cb15fc1595135a28\",\n\t\t\t\"keyToEncrypt256\": \"8df23d96c65b158ca322f8f913bb02865d1be358cb9f72222848ee8328d97915\",\n\t\t\t\"keyToEncrypt128\": \"53f3216d7720682ab898b9beddfdb30e\",\n\t\t\t\"encryptedKey256\": \"AZdrLisBDPIWSrBKIduLoPwAqPoAjfdmB81yBDDZ65mmzS3rIaHQvQhsPj6X6LwMDhuWoBHWokgqX+7YEYVHD38Clr/87RUhmf+hotsu0B4/\",\n\t\t\t\"encryptedKey128\": \"AZdrLisBDPIWSrBKIduLoPwYMN7s3xrfprsMd+mHNw66vV401QzfZoNyiBgU33CAOz+1d/uyXq1hRisAbzgoF48=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"SObxeX1K3a3zm6PJcqgM0w6yQPOvvPY/pf5CTVZlXIqeo2givXFEaKNCzJlVz3T4o6ELM+XflV17kKSl\",\n\t\t\t\"ivBase64\": \"0tdA3cCFHZFzaPE/KjrKTw==\",\n\t\t\t\"cipherTextBase64\": \"AdLXQN3AhR2Rc2jxPyo6yk9s48OL5iyxzRXROS9Bh05OoYfHPlDoBBk0ToBWVy5rUnUA8YU/Ef5gpQHIqsFyDqPN2fpd5JEXP/3WsG6wEXQp3K2F3opiJsZdRJo+nG9Mq+x1Tufv99x03vIKtQqCgPU=\",\n\t\t\t\"hexKey\": \"3e8dfb61272c6c4a76bddadc5c03cbfd3f36b7e0de8f71a22735b857cb310e5e\",\n\t\t\t\"keyToEncrypt256\": \"3257c44a9c4be50f799df1b6d0bb53e48a411856cd9349ab27e0639a88554867\",\n\t\t\t\"keyToEncrypt128\": \"f691a8c97614421c83e904dd5cf61e71\",\n\t\t\t\"encryptedKey256\": \"AdLXQN3AhR2Rc2jxPyo6yk83DRuZRGyMhcbJQid1Vbm2YSr8+RhXywTN0fii3lgYi3/7JaVFnWSMTBDBm8FEGcuddL04G7N0Y0/EVNWScMz7\",\n\t\t\t\"encryptedKey128\": \"AdLXQN3AhR2Rc2jxPyo6yk+//TXjN+QJXKgRcX0yxbeyn7HcPB1Ko05D3sHGYQmd3qLQLJextEaaCc92KfZvCaw=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"3KMwaKj9CS+pES+mGIzzsFvPjSd2KvsW+AZWwoBYiPRULSjFTzmTSUrm2TGcmdbdpljzDGqAXLAsmR5nmA==\",\n\t\t\t\"ivBase64\": \"c7gjGNzibGxdBDoylZSTtQ==\",\n\t\t\t\"cipherTextBase64\": \"AXO4Ixjc4mxsXQQ6MpWUk7WDYe9zKADhmrTXloC85TvEgg51nSqcznFAeGD8ya0jvw2dBZkdJdY+qHqz6jUn8Rb6UUAyZpLlr3JR05ZpezaL0NeRZS6X3kkC6wwHPzkepq3glkCXP/BhgVCx+BdEQYs=\",\n\t\t\t\"hexKey\": \"994088a080635ac70785f3cb3023ee5aef655c7fa9484bfd7e067aaf08cb813a\",\n\t\t\t\"keyToEncrypt256\": \"ad6c5fe2d21abca23fa72ce92cb67da833ce0f3956f0ab89f25fe325171165d9\",\n\t\t\t\"keyToEncrypt128\": \"2cd8bfbb22a7e1243ec0801260a5d044\",\n\t\t\t\"encryptedKey256\": \"AXO4Ixjc4mxsXQQ6MpWUk7V2jtdDEuRaHiauCUednwkTGtGVBqGanlRCZrDK10NSLmZWxJcRwPl4dmkgCy4rkQNDqmpAN2QtKYw/faNukxpn\",\n\t\t\t\"encryptedKey128\": \"AXO4Ixjc4mxsXQQ6MpWUk7Vo0q8Z5mLMdGfjwJrdKoiBKwjxWMdsA89TinAe4g0JAn5yeYdFlRGbQ43JeKzqhhI=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"8ZVQfBm5ElAFWjnCJy8tUHKFcnrr1AJ/IA0WsoNI5lGJzICQG7UB5c9UQwYiaD3o6IAqAwCZxaRKr9197lw=\",\n\t\t\t\"ivBase64\": \"I4sMWcLSv/CiyQxy/Ia/jA==\",\n\t\t\t\"cipherTextBase64\": \"ASOLDFnC0r/woskMcvyGv4zYa4uhkj6YYf6qN33tZiub3MEkIi9eNqVH6x3Oc/r6l4zD9qDZ2NrtwpFka0pcSs0UMZFsI65N7lFTZm8jnofw5Oj/wAS1ipAuj75lPPU6Rtod+1SqhBHsYgPGc+4tBzs=\",\n\t\t\t\"hexKey\": \"d678dbdfc01b6dab1c25755b4a3ed039a60feeb8d903854cd02bba1bc801b4c3\",\n\t\t\t\"keyToEncrypt256\": \"ecff1e7a5b9eb017131105e94f6018506db298f9efb17d39a289eb69a45b7c1a\",\n\t\t\t\"keyToEncrypt128\": \"f4c975d5984174fe16d37b4d17297713\",\n\t\t\t\"encryptedKey256\": \"ASOLDFnC0r/woskMcvyGv4yx2xegq4PbBV46HmeUntnat/64gBAIQWMADh850nD0CmxYZ8uZePUEvB2wWjKTBixdgwq9GxB4sET1GAQYpO2c\",\n\t\t\t\"encryptedKey128\": \"ASOLDFnC0r/woskMcvyGv4xVLojLIAVwU6PYvnqpg/ou2sZdLWbhOtKl3YNkPDwLeu091+MUWseaIBYmEL65SYs=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"wcTixf0qyxJRsVJnu8wY1+GlwRdPVXTFXLuuEtBTPAHep5ktPmg37+HpcPrevV4JFo8TBCmtNiVS5mXm5x1H\",\n\t\t\t\"ivBase64\": \"n0xKT9MIIun9JQMBzGckUw==\",\n\t\t\t\"cipherTextBase64\": \"AZ9MSk/TCCLp/SUDAcxnJFMA296FcQphBw6n7PlnaCi7YMy5rcy+aMX/FegX0TJlAF12vGT3qLisvlXmQXb1t9oqIu88Z3h+ULzOklEaEAevxp0ql19JleO1NXu+BfNs9+4fSbdP9ibmWQuMw5ZZV4w=\",\n\t\t\t\"hexKey\": \"43e0d70e900c71cabf757800340ea73a5396b45c30597013d44c5626d03ed76c\",\n\t\t\t\"keyToEncrypt256\": \"86ccd79045ccf9e59ffe9e134e128d22e7c45a82c70345959dc1d9d807c0c169\",\n\t\t\t\"keyToEncrypt128\": \"68a73aa49b83cc1583f5e9552a81e5c7\",\n\t\t\t\"encryptedKey256\": \"AZ9MSk/TCCLp/SUDAcxnJFN5HUXm0t1MznmgtumL6KVw2DJV4VmeJ1wC9axL/8+wN8GaEJzyIem3IX9JgqU1AxH6OefcnPs8Mpc3LUotHhvX\",\n\t\t\t\"encryptedKey128\": \"AZ9MSk/TCCLp/SUDAcxnJFP/zH49aKyZ4CCnq/oQLWjQAB44yDjvlUXyrPm8LmZc+7E1b7pRI3ZCoh84YqzGZRA=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"OkiyrIRCSqrc/75GwO7qsxI17fFNn/YyLh0QIqR/f9zWMC43H1ZWvGD6CX3HhHzfKhYFR2MjjIGo1rmqw9ekdg==\",\n\t\t\t\"ivBase64\": \"To3l7QN5du9MElIaRTBhsA==\",\n\t\t\t\"cipherTextBase64\": \"AU6N5e0DeXbvTBJSGkUwYbBCiwrnsdJ3NXnTo3/hDpWGigZ6izBwPxS8m1wJvdZgzf7bHNniYZeqwilnSlrp7Rbr5AMnvwvocNy5Wh6hMDvfQFlk/9Ph2izh7gN9ETKZ6lmvs73jADudnQ+gRUd4ULVfNt3o4QJgd1+MfJCREMh4\",\n\t\t\t\"hexKey\": \"7575c15f4f158059f5e80451ba80f3b89735370357b74f31c0fb873a03dc20f7\",\n\t\t\t\"keyToEncrypt256\": \"0174ac4c72977237d55d5c02788c5920b9ee1a1129d2314d85b2011bdce8113f\",\n\t\t\t\"keyToEncrypt128\": \"6fe236eeefacda2e99776e34f7adf5e5\",\n\t\t\t\"encryptedKey256\": \"AU6N5e0DeXbvTBJSGkUwYbDH+qUP0386O2qe7KmxOR2IvKnK3g4a6ZcSOOixjAv/e5YhpoAegpfeogmS2wpKW/Ka9Jy8/+hCZlMwWEM3W5v0\",\n\t\t\t\"encryptedKey128\": \"AU6N5e0DeXbvTBJSGkUwYbAFquxGjjHDJKtR9oAKLs1u0Wbs4VnMTveh/eR+ubEywaRT4WzZ8U4qrN5uueBxbJQ=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"Ky7Xg18be5+77zPhxy2lkINxEAZ82znNkSb/hiLAVDwJwPM/ONMypvTeYDSzQ9d1WXp3gTQGfQhHduf2uJ9FPvI=\",\n\t\t\t\"ivBase64\": \"OFnYCYqi+jundgsC9mII4Q==\",\n\t\t\t\"cipherTextBase64\": \"AThZ2AmKovo7p3YLAvZiCOF2G+TsB37Fzy6MGT7ZmTMaxQ+wb+L6OWU8mIVh2QQkktINTtWDqlL29eTfhsfnxQLnkKIPOYN7Tkz7A7Xlh+LqJicNFHiMfRSKshkfcUW6tLLg5FZQ2sq33H2ImOnwPGWJTUZ82fvSFRV9+dm7o1aV\",\n\t\t\t\"hexKey\": \"3fd32d5d00f77a04510f7e582a9afaea6c4ec118a8f547133e6448300fbac8f9\",\n\t\t\t\"keyToEncrypt256\": \"c1f5948b07daad3138f58e0e372cc48f4783aac2f2ba3310bd4203569b62c0d9\",\n\t\t\t\"keyToEncrypt128\": \"03acbb80de0ba0fe06570cf4dbc94e4d\",\n\t\t\t\"encryptedKey256\": \"AThZ2AmKovo7p3YLAvZiCOFGZoI8iyssxDRCG4KwHLOzCs3x2NTLChCnkic8NyvR8G8MPeCylFJNOv76HUjUljp/6X1OKTAwqLpeGx788FF+\",\n\t\t\t\"encryptedKey128\": \"AThZ2AmKovo7p3YLAvZiCOGDH51TqEkC/BbemWVAW+8yWvWuQaCez3Cey8+u7MjhozUftIy8TwjCtrf9HVv1Ut8=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"CK8N5+biFxn120OA/jKcUMROF2yoDk/rXuspfpuv7I/StEH3rX41xiW9OjvXOAsGYQ4UZm6YHAhZwa2mHxnaac8H\",\n\t\t\t\"ivBase64\": \"sK2rf66TT7g9yX+EG5RFQg==\",\n\t\t\t\"cipherTextBase64\": \"AbCtq3+uk0+4Pcl/hBuURUK6LkT7R5W3kbgVS/cw+RKDIJ40rQMwny/SXl69uyUcbQm4b7pfLAsXWPZY0LO6H4PunlwaAzwf2YkpJVa6daYgx47rhrmnXBeixZFblPGEUw+hTLLZBKiK15V/h0ttrYo8qhmu4hIhvp17GpaWNKQ0\",\n\t\t\t\"hexKey\": \"d359fa67db54ac8628a6bbbd27fccad359ea5cbac03e3d6eb342e3cc12451f2f\",\n\t\t\t\"keyToEncrypt256\": \"8d17b32457b8579fba075a251178bce4ce8abc0f8e58801e708f69bbf43d0f37\",\n\t\t\t\"keyToEncrypt128\": \"ad88a94d11b58ea2b87e05bece98f4cf\",\n\t\t\t\"encryptedKey256\": \"AbCtq3+uk0+4Pcl/hBuURUJdSkjdZ/a/KGT4zGzyjNGCkO6O/aSbl/wO677WQpO1hAk683RklVBT3bK8YpMWlXRnpc1DhOSa++YjlBZDBD/P\",\n\t\t\t\"encryptedKey128\": \"AbCtq3+uk0+4Pcl/hBuURUJs3wF3NfkVukhW41n+dfjxxH3GfbCVkHz+moLK8dFhEnoA6eSsrEmKXl/JoY0tYXI=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"6Xp2b4rx7tw5URa9n+pCjNcl28OverJkKP+KcrbbGR8OitCseOZx7iUisR4nUtc5NAutdLyVt2VFrC5hiUzuQjkIEg==\",\n\t\t\t\"ivBase64\": \"07vsjjwiIQzyJOFf+fQepQ==\",\n\t\t\t\"cipherTextBase64\": \"AdO77I48IiEM8iThX/n0HqVbORs2BMOOi3BhKNZCCs8kHaX7fhLfPK7jQvwFbYPcI17FGW+4qwdIk/a+Q1eO+XOvgqt619J/O6WPetMOinUTbIoy0sz5lKkZqjSc0ZEgDlpoDoNOPjNFbflHnE+3lZWIcvWNNW73WOfy28GWjbSl\",\n\t\t\t\"hexKey\": \"872bdd74ae27fe1a8e75fb3396e837d3aec7eb6c30381a518e19e3823088bd31\",\n\t\t\t\"keyToEncrypt256\": \"c017af3916330dd5f2fe0806c6a8c181227b815e52559f62533075a1594bde68\",\n\t\t\t\"keyToEncrypt128\": \"e122e1c44ef779208c8d31913405229c\",\n\t\t\t\"encryptedKey256\": \"AdO77I48IiEM8iThX/n0HqWQ8g3iCj4mWMCpfC27UguMW/WuTXoGTxLXRw/q2+jFufwgAQumLn35hrnbCTEcBc7tUGTf7ID+ZH3cKUOTf0KN\",\n\t\t\t\"encryptedKey128\": \"AdO77I48IiEM8iThX/n0HqUcx5H5kFgr20SD+B9pEK0+q/H7OyU/plCrgtxJ2RNZDtnqUhZkW5zcxogPXI48xjM=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"JwCYxPzCzWKuw9Pxlxy1hU9XiCZs8gyD0y2iuB85lyNm1B97BAA//m170uD3fR7Sdx8I3grM66LTEPxFpiXfg2ydg30=\",\n\t\t\t\"ivBase64\": \"RXdqhv+WlSqnCy/RQ8XJ9Q==\",\n\t\t\t\"cipherTextBase64\": \"AUV3aob/lpUqpwsv0UPFyfUSt/EeJzx82+8gMCEXwkNEJa3uVmC4dMZJojKIJ9L35/v00QgkdXUa9gLDdjVzC89q7zPYorf/LjiXUCwmjh/INqRsiXG8LAG8rwZRFbbaqluFgUXIrnwromuyD797OpXy5LGf2tS6BzteyTX9s/fh\",\n\t\t\t\"hexKey\": \"71a5b8d64b56ad56f6b0cca43720b32d2b50eb4de2208d875272c45756802b9e\",\n\t\t\t\"keyToEncrypt256\": \"8bd08c9c7cf55b82f2947de554d2f6f7d05d5e24de6ea1fb60ac6dd454eab11c\",\n\t\t\t\"keyToEncrypt128\": \"76b754bc6ed852bff7df72ae8420f8ea\",\n\t\t\t\"encryptedKey256\": \"AUV3aob/lpUqpwsv0UPFyfVdmGXRO6SXoDsOtV1xqEOoPU2HNZtDM7FdFupSLd3d4Mt+F1+TBu1wB8j4jJeNQbtwuII7c+kW6EUm4EB0Tpsb\",\n\t\t\t\"encryptedKey128\": \"AUV3aob/lpUqpwsv0UPFyfWXwht0/GrkSoTZ/9eHgChG3dkZKM/QQtuIy1hQXieFrpXti4dek68UyD3xQd4TRmk=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"65Z/EfQfZNRvafj3la4z1L/W8v6bLaVPJKQGkdeMwRWf00CxsGNafBp6TbMWP7Q7RW9QWeNHTDafbHIZRSUQPoiyrZxL\",\n\t\t\t\"ivBase64\": \"P3zL4jpBhGQGga6+FAvAKA==\",\n\t\t\t\"cipherTextBase64\": \"AT98y+I6QYRkBoGuvhQLwChFMmyvzQUr8KT3vlPMQLeAY2mrThG0nf9ZWsHauydWs/68pwINcwjwEwl0TdAmXHiu2LM6esxa3Ql+Q4qYw7hR5zkBfd6b1q0gkhmhD5SC4nT3MEjInvu5H241/2oPOSu0FUYEyY0AcqggjoS1hMk5\",\n\t\t\t\"hexKey\": \"5893a032f8c406962e18ac6159fa7ce9dbb984622ba7fefc13c0c5ed928ff674\",\n\t\t\t\"keyToEncrypt256\": \"d34772847992ca7604c8239f7bc4f9ed0f06e03e68236d961d5bdbd0f6d95296\",\n\t\t\t\"keyToEncrypt128\": \"482ad33ef3775d131f75344bc3f42a8c\",\n\t\t\t\"encryptedKey256\": \"AT98y+I6QYRkBoGuvhQLwCiGfyo1h3PvGcyVFkFnEPIxmnvcg3XfhLfMvfkkHY9wNVMjdkZnmlwVRzox4goxaqmzSVr3qQgQAw0PBtlyoi9s\",\n\t\t\t\"encryptedKey128\": \"AT98y+I6QYRkBoGuvhQLwCj1+ZoQgxo2Bwz8BPCsFkGgPN6ifaX7u9vtJbTauDjl1p8o5mB0K1Mjh/OkQraw6bQ=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"PJ3qjXRfzLCfMfsdha7/dml4AmoJxhPzSmo4MS92imV3wrCVLMLzI1roX1QHWj0En0SnCOIgtKSJTlUv3CPLhJ3iQC2tvQ==\",\n\t\t\t\"ivBase64\": \"OHMQjqmcS3PldJpSSJwrRQ==\",\n\t\t\t\"cipherTextBase64\": \"AThzEI6pnEtz5XSaUkicK0VN/QGdtKAZFhaf80dRsT4KzYlm/ASp2mZgG0Mvrs8cWTYU9l3sXtwnW0+FCWP3v2qfXIVeyv461E92IPxMJYLINGGBaWiz7hj4p1LW6PIOjloJq4qrVPT0D69eRhLBHj3vNCANzIrXP7fxh7MemPD8\",\n\t\t\t\"hexKey\": \"7aa27113de71d3faaba1e17513a62566622189e05c993947223765c8d2b03290\",\n\t\t\t\"keyToEncrypt256\": \"5990ae16897a418612b3cae5f62226f21ae3e5004c421541fc10ac7c87dc6918\",\n\t\t\t\"keyToEncrypt128\": \"9b7ec052daf8f0833f073fcd69f905d4\",\n\t\t\t\"encryptedKey256\": \"AThzEI6pnEtz5XSaUkicK0U8W1YLc0yAQEqLCYCAIarbz0MH4q0waokcV8opxw+ZzA9pXID4unJy4lVj0Or+8EELkSxyBDfSvB7ggEF8F3ls\",\n\t\t\t\"encryptedKey128\": \"AThzEI6pnEtz5XSaUkicK0XhwzWOyDx6MygGu7hP/mNPyCG167PenqhVFKNmGRZVnpW+KpKviODiKiZ90RrpgtY=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"8joinASSnbYbNPNNgD99lrO+pcwJTbObHEQKsY++mOgNEIG5DGGa5VL3qu4RdgD5zrFpxT/4LfrAzkvO8ZXLCLCRwrqLujI=\",\n\t\t\t\"ivBase64\": \"y5H29B5tMDMgQqxmWMwR7w==\",\n\t\t\t\"cipherTextBase64\": \"AcuR9vQebTAzIEKsZljMEe8NxRkRAyny7hjvG9U8yx7+99KSyBJOuw+oosbG2bh0YrysyO002BnyP7hHGPHvX+cik39Bfn2b9/0AslLl0URI5u/sL2CTmZ4AHZJlB/Vb9hI8YuvoY57lPf/VafsManRHv3Mzj4gpS219/JoJL2gr\",\n\t\t\t\"hexKey\": \"e4879b6cf267f243b6393f435300ede3958726049b5adf7f8d4ce76ff4d59e53\",\n\t\t\t\"keyToEncrypt256\": \"fdb850e29491917681ddc434212451800cce65a2bde629324ae070ee9f132333\",\n\t\t\t\"keyToEncrypt128\": \"752d3061f5432130032df0eec3b66f70\",\n\t\t\t\"encryptedKey256\": \"AcuR9vQebTAzIEKsZljMEe86Kx5ZeZkUQ/6blTgRQdR/e3d4Gt+PXVlTA/2z5UQAlzrjGmuUnoT6sbeTKv982sopBgx27ZQSZ4rtPHQXETEj\",\n\t\t\t\"encryptedKey128\": \"AcuR9vQebTAzIEKsZljMEe/CaS9A8F5D9oRtr/77UmjEhX+G/b01/OkU6aXM/nzN+L3tfGCkU/SDJe2NuzBRt+0=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"vYUZwLcKT/rOmJSrduLolZnYhbljQJ1FMlY8Hc85zurvuhKjHYN/ZY99DqE9sgiaYf39WPM0W00lsCUmw2QQU34QHDF3funq\",\n\t\t\t\"ivBase64\": \"/2iyJAuVDd+ecwbTfQP+Fg==\",\n\t\t\t\"cipherTextBase64\": \"Af9osiQLlQ3fnnMG030D/hafQaEm8Gso5WINEE+FlFsH8j2TExNMovOWcTfmGJA/Tvcr/y4XhfP0FdAVAMRz0jXhDAUcXFPrzMwhn9Z1knMgNgfKvEnylVe7BDqJeYOU1JEWmvRdjQLxRlC4YyWQhtvDt+GLVwa+j8HLr8lBb85/\",\n\t\t\t\"hexKey\": \"1d2b092b92997da35f95bc33f9bec7b07ed87f694cf4fd5bd10140509f3ef8f5\",\n\t\t\t\"keyToEncrypt256\": \"b1f33978861feee901df8308158ab7217d2a6486a12f2f1f628856c3e1c62745\",\n\t\t\t\"keyToEncrypt128\": \"24706afa1e843497388bc185e360973e\",\n\t\t\t\"encryptedKey256\": \"Af9osiQLlQ3fnnMG030D/ha8flQdESvzjUr/aSfkEJBTOzb/wgTzob+aSCLOKXp7Y79emBNAZEGRhSxtjsp73YEByUfvM53aH4hQ/FiVpop/\",\n\t\t\t\"encryptedKey128\": \"Af9osiQLlQ3fnnMG030D/hYXOFRR5B/9jCusc2UWZBjdEX/xFNFcsF2/N6s87y258B4N2SBexcUT/wUVtTGm3cI=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"JwxyZ5xWpShVFSrvdAorz+kNN3YkHX73YryD9TCq/WWzgSXQhqbTeWNu02mlYLMIrwW5maipL5SDOzegQF1Kq3+IP2zeQRxocw==\",\n\t\t\t\"ivBase64\": \"hLkRaxd3/MbpsEF+PuNseA==\",\n\t\t\t\"cipherTextBase64\": \"AYS5EWsXd/zG6bBBfj7jbHigv8mrQKWryKYkfm/nttyF7EkoT0MzxmU7CSDkdBE0OEgH9u5kj+M8gZvHg33YQvjFEl59uu75USpE+Dm+uV73+aGRPfqnFLfBq+KeuBtpF5CcSpmTUNW2HGBkg/Lh1AdKHaRdE+FO1pBfeU4r2whD\",\n\t\t\t\"hexKey\": \"fa774040e3e0e834d169b2841582925daac1df138e76b0ceac9d9cd844cdd210\",\n\t\t\t\"keyToEncrypt256\": \"955a954bc36324873c3e577c018386d9bc53b25af0eb89c0667de1827fa8cffb\",\n\t\t\t\"keyToEncrypt128\": \"6d18033f98eb4f6388ac66407327e823\",\n\t\t\t\"encryptedKey256\": \"AYS5EWsXd/zG6bBBfj7jbHhO2tX8/yomv8wzqe5jfZcNu8VRw+gbys3IfJK1Hj3TGjysx12ygpLhRtnPQxMLaIUgvhrVziMhIulZmiefmpjW\",\n\t\t\t\"encryptedKey128\": \"AYS5EWsXd/zG6bBBfj7jbHgaY3L8iji0KqYNDcy9daMxB/EP3MpU7uw6Q3jiRS4rawQCEpIlzuHVKNh8f7ut1Ps=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"FUdto1ikZu5dDDzUMxmM29Cex+HcXoxFS2vcQ1lmCrJvST/B9rCtwTOxleC7HpjuOKngg9PfGai2D1kRyCJ+IhBJ1p7CxluFZYk=\",\n\t\t\t\"ivBase64\": \"f402tTpGmcxLufakDho8hw==\",\n\t\t\t\"cipherTextBase64\": \"AX+NNrU6RpnMS7n2pA4aPIdSNqS3xgc6iPoeD5QmOKG8WFLfFxJJVonPxd2O4kM6uiEBb0gzgY7T2vHu1vYopJoAxclzPstUbG7X6aG5VfM7qRpNfQtthAz6iAi5npQgqGRh5kkpfaN3b3EFnS+1WjFeqGpTx8uYRIZsp/mbOebB\",\n\t\t\t\"hexKey\": \"b477eb79e8e6fea4b5ba935809d4c011880081d225e7fc094d0834d5e13be765\",\n\t\t\t\"keyToEncrypt256\": \"0f4caac1782af46d54b0b5df1cb211f2bd277f386c45195f9f7bd4d4fc6af5b8\",\n\t\t\t\"keyToEncrypt128\": \"e7aa08588f454fc8dfdc586ad043d2c5\",\n\t\t\t\"encryptedKey256\": \"AX+NNrU6RpnMS7n2pA4aPIci5wWZq+qX7Jzkg0bICQNaqTuywO1Ak0MlfsL6YQbPy2YjdKEv/wzlcknnnhnln3ZTNvhAZs/kC5Z1X2A0/opI\",\n\t\t\t\"encryptedKey128\": \"AX+NNrU6RpnMS7n2pA4aPIclNmbmRtGIF+guXyKxCGX9BiEA+2EnXIuDtPvsuOPdUp2UbsYjvlQ5Ifd9sB78Wr4=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"EuBGVsFypCJ+Bx7mKPgBqIGuW7ECa9XSP3injk65OldEKU+Yk0DzQssywJUXK3txZQhmEUnjOz8yyBUgphxGhQ75dkSMgiaBSmQs\",\n\t\t\t\"ivBase64\": \"MihQAFXTS4uYoKUPRAAQOQ==\",\n\t\t\t\"cipherTextBase64\": \"ATIoUABV00uLmKClD0QAEDntkdEBCslaSrHpGu6hlkHiK5RtxdA9LKdlw9Uaiv00vD/0moLtSH7lbqQb5gKu7UvQoFAbPuENwXe3FIZhgPEOFX3xJ4yrWvTVrsU/bRHcUD6N6By1BWg9+2MiE4EfflrKSXEBdcUdn6ehT3YzmEQr\",\n\t\t\t\"hexKey\": \"21243ecf98edef480de7c0d99004ea6f98151905e346881bcc671fa0c81eb90c\",\n\t\t\t\"keyToEncrypt256\": \"b5c9fc85bf08ec4c810b1ed7ed7ed6c73bae2ae259fa496efa4ba2c079b25d1f\",\n\t\t\t\"keyToEncrypt128\": \"803aa5a90da220e23fb8aac2b84249af\",\n\t\t\t\"encryptedKey256\": \"ATIoUABV00uLmKClD0QAEDktPNJQd3YDHjgJl3qnfaatlgbtjBrm0C3AaA9JMWrWfZGADyTfGkFuCoELHTVIepFN28t0xVDbhKy35uFFEVun\",\n\t\t\t\"encryptedKey128\": \"ATIoUABV00uLmKClD0QAEDlzNDZBiFaHW/8vs1Ui3uvUmZ/vs3ml3degM8CPXm7ZkQBeACbi130IuIR8AvSj+Bk=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"+dEejUPTYpTJD+L4qvcTX//rCJojD1h0UNchHKrKjr8cExEEtuRY8xDqTtAheQNdVXATJCtMRUSQPnKKKatngmTwaZyGxyRLOWJptA==\",\n\t\t\t\"ivBase64\": \"fLRembyx4FcaSWbqGgfPaQ==\",\n\t\t\t\"cipherTextBase64\": \"AXy0Xpm8seBXGklm6hoHz2mGwe+Ac/ySHFnYgfEMz2gWfGy4YqYEyRmMWvxMiZuUfmOJvKkzIo8ojXqs9tPR50WQEqFQWt5sOXoaFDvzwus+inF5dzAjNDskB3LMfClyxWiIPSUE/Q1dNVYoMY5aYs+DW/f7UlFXX2ABsuPw+b5u\",\n\t\t\t\"hexKey\": \"8132284a962c3c97887f1d919fa97ff49266ccaac58bca1133dd54fb91a1f120\",\n\t\t\t\"keyToEncrypt256\": \"7ecddf2bf20223a6b3590e09c1a05b5e5f90a0fc77b5b889d9c92e3eb85d4d64\",\n\t\t\t\"keyToEncrypt128\": \"49985c055df453f2372df2dcf73bb131\",\n\t\t\t\"encryptedKey256\": \"AXy0Xpm8seBXGklm6hoHz2mmxphPxHFA4+2o559H8GyA8Sy3e/oq1ECuJQML/XEJTF+Des7Ie769pSOGG4/QNJIMrZDY7kYUC3ETlxSsoRS+\",\n\t\t\t\"encryptedKey128\": \"AXy0Xpm8seBXGklm6hoHz2nCfJxowLJQqNrRhCE4IEthZH5j/U1isZrEe7TlJkTHqBRdIV4o5x1ygNpESTbFGCs=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"F6m9S2v38F4DIRmcQFwoLqZX6C4uk6vFNNAmqVxE3hQYGHfqZpiGMkBsLJXPFXxRzP35ZKRHuq7nv6kxQTcUe7nTTOE/4VUjpvS9ouo=\",\n\t\t\t\"ivBase64\": \"QHOYYPP9kkIViGXtvEPXZw==\",\n\t\t\t\"cipherTextBase64\": \"AUBzmGDz/ZJCFYhl7bxD12cEvLh25TJbPKCKTDUmei5Z42xWykQK/fq9B1bjqG1/Z3y9JaaKNXKOdtEveGClX4ZwRZ/QGQRmwPK0LzHL9F1d28jvS7jqSpRvMGa5OSBcr7ZJrj0moUsZ/rbk0zE5bv+ZOlNGt0tex1vYXP/YQgZt\",\n\t\t\t\"hexKey\": \"8d7a13cd05afce1611225ec5cd76982267f8006874de3e5dce8b9e59209cf364\",\n\t\t\t\"keyToEncrypt256\": \"c1de9966a678db449279a3d6401818fda200cf68c5b8e5e663de259b4f3c2f01\",\n\t\t\t\"keyToEncrypt128\": \"6b1b44bef04d90a1b0bbf0484dfa3c5d\",\n\t\t\t\"encryptedKey256\": \"AUBzmGDz/ZJCFYhl7bxD12fwf0+lJh7cl4kzir7fEUodAP7ma/ijAg8nDkRTkT7OuA6/5QtEcXISuG3LBLsZD14SQqYgJuw/iJu9dBOcAT6A\",\n\t\t\t\"encryptedKey128\": \"AUBzmGDz/ZJCFYhl7bxD12eBbfrbNW1d2GjXJxRtITeLzkQ+AfW61dtEQDvzgna3EYGb0T0Lp1PnPl5PXfzMC3I=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"RqN2ZY1wNtu5WouTUukwjI23ZMl/V1v9PhC3bB4YvcW9dlem+UDjLX3nHFMNXWglXIhVybYG6TCbgB++0/7WpGxiHMWq99fPz1l5FEk4\",\n\t\t\t\"ivBase64\": \"llOzRV6oIGKIxP2Qp4nlOA==\",\n\t\t\t\"cipherTextBase64\": \"AZZTs0VeqCBiiMT9kKeJ5TiYyxhAcAxgZxqNfhidkeFv8Y/SD8DjVdNHi5JDplODbscsQ2s6yvEfVQ6FuudHygeAOuFrRbVN26gcHisqNfrNC0ZNT02xFMOPJQlpvgXTAmBmVsD11WC2yChwPqu5sB4saIvcIxHuto3yX5SaZZus\",\n\t\t\t\"hexKey\": \"eec6d532a8d0798600704a4a31b6e0d3a07dc61fde514d0da0538a9c0fab5d3f\",\n\t\t\t\"keyToEncrypt256\": \"8f0f72550b37adbaff47e506eff26750fc27d1c760d448d45af00e2a4e476b5d\",\n\t\t\t\"keyToEncrypt128\": \"e2115b8b0bdcade4a79348f8d8f8f646\",\n\t\t\t\"encryptedKey256\": \"AZZTs0VeqCBiiMT9kKeJ5TjCkP7WtBYxUyouptUVxhGOljDeS+TWlxGhbbIHoSUhaSMJ+0jr81nsPoXJAMSS3mPIZol84rMLaWmokARDIFYs\",\n\t\t\t\"encryptedKey128\": \"AZZTs0VeqCBiiMT9kKeJ5TjxqScQEkdrW4g4pfvqG3NjrWEpT+VyIV1ixjOi3fEnebC29WxsoehUD72L5scHXJ0=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"peDObTeYorCirkmaG4CuR4er3JfUyENt6rOegBpxfzGJb7q97GndbIOGI+gqTmjLAODjeCyamb7mmsmBHNnSi6CDcc8q84YoEETvHerBhA==\",\n\t\t\t\"ivBase64\": \"dhPVbmJD0+xWk41q1uKRtg==\",\n\t\t\t\"cipherTextBase64\": \"AXYT1W5iQ9PsVpONatbikbb0JzpLtW1O65F3pMPodElgYxte7NH45SECNhToAwtb4G91yHIEVhHqlAjqV9fB9V3c1Re5+PIi9EjDp71R/gHtB6LDw2MhDgSzQrcVgB7ZcRP+u2gxiPitt5Qb8C7Nf6x6MGiYj1zF5tb9OZp/TBVQ\",\n\t\t\t\"hexKey\": \"c0fc00ce44407be998f4a098cc80596f2ec7bcf2e741ef2b5b81f9f685b232e0\",\n\t\t\t\"keyToEncrypt256\": \"9e0372ab8d05381267b0d6bda8682f715f2c17caa173cffb52df8bc964ef8ba2\",\n\t\t\t\"keyToEncrypt128\": \"3e655295590dc46b02df826f5a6d243f\",\n\t\t\t\"encryptedKey256\": \"AXYT1W5iQ9PsVpONatbikbZ4Sv8GnyQDIhyPb0/DQ1jc5VNaAfCJuCLF6DmcAXdXZVYnWsLnWMoTdeNWNUl8o/J58tAjncNY5P/K35Fb86+c\",\n\t\t\t\"encryptedKey128\": \"AXYT1W5iQ9PsVpONatbikbaywJhxi5ETki+0btCvw+SggNADwJR2bYwyapGELdfkhUtZORVrJJdhOpc7zaq+TqI=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"ijt8mEVnXfJ+QnOqmcru4lqtPNzJkuam/zNjCfrH7z4Na3KFC5v6fDQi9tQWaCrPCT7Ux6wImsbPWwtAa94usxKpOSDVIPYSC5t6HJY5wo8=\",\n\t\t\t\"ivBase64\": \"n0e+AD8ZxyOoKUaTSgchxQ==\",\n\t\t\t\"cipherTextBase64\": \"AZ9HvgA/GccjqClGk0oHIcUcvyhYTGyx9ySqT5aAaoraC5A3Nd3Hv7z6lnnEl2jjzF4c70uFz2EQ62daplS0hx1rb5sAzdwLXZb1DicUt58pS1Hwt0XZxi3QAjanIgYzikEQ6DDAN8/LJVhpu1UMt4drdAXA8yv43c8yNOuqzSJTP0aeEadLEeiZCcA+DFOE4w==\",\n\t\t\t\"hexKey\": \"4a4d2208977a31332a823bc034ed01316e138d9cbace3fdb7aa93a73d2b48938\",\n\t\t\t\"keyToEncrypt256\": \"748914ba03039be68c7ea9d6162e6943d1b23f28331be335e797d479eaf17cab\",\n\t\t\t\"keyToEncrypt128\": \"21781cb0b49b82125e7e0e8ba8e7802a\",\n\t\t\t\"encryptedKey256\": \"AZ9HvgA/GccjqClGk0oHIcW7lEMhmnGwNA0NBtMw1ma1OQUkP2dXswUDRvfDl5sWioDXJn5aKFTZLoJ7+w+a9RW1ydtLu1DJYLq3dOP9wy8Q\",\n\t\t\t\"encryptedKey128\": \"AZ9HvgA/GccjqClGk0oHIcUmt67mk1HjcFUd6S7mHYFrOAey0HWqfodqgEvwgaVsHi9jgy4U/ItASPKHZoSTQGk=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"IHeDeadMBM0N4wv85CkYT27s2HkWUoExyTET2YnIw3NNKLCMntDmHOCoEqf958p8Ny8wM1qDzDUJlutt7G979KUZWfv/1ETtc/ErTFVAZ4gl\",\n\t\t\t\"ivBase64\": \"Zpk0UW9ah4QQu5m/mbp+5w==\",\n\t\t\t\"cipherTextBase64\": \"AWaZNFFvWoeEELuZv5m6fufHnBAgk47YsjrE25RymsLEJ8EXkGwzkUxmCBUBH+7sTaxil5APU8g588HVnHQnP0AP1AZE9+At58PouG0F1IJ3asbXYRQ/rIhtBar0OmMKdce0bnZW4PUgOTewzUfI0hGeNOZgGMIdvQwAOer5E0NdGdVds3lMqmkkF6NHclDckQ==\",\n\t\t\t\"hexKey\": \"27acbc23456b44dff348b79994d7c5fee2af67eae4116a81571ee6a4a3567236\",\n\t\t\t\"keyToEncrypt256\": \"6a70b3f706d9c87c13d8542716505f40c2f5c2423f5574d331bbec261aee948c\",\n\t\t\t\"keyToEncrypt128\": \"ae2ff32ebb5fc4591026debf2ef54183\",\n\t\t\t\"encryptedKey256\": \"AWaZNFFvWoeEELuZv5m6fucv9DN3Nf1OdLU3Svyxj2yui5J11T6HzFw4y2uVKcd8T4gxIAb0H+J3cobCQ5w/S5hd7x3LaqtsjtizewBeDdxf\",\n\t\t\t\"encryptedKey128\": \"AWaZNFFvWoeEELuZv5m6fudj89UiPPu04RtZT//1NplDSnts8MZQ4lbzgoRReQHuHNM8m9lsx0fhonG7MdaqMJk=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"64W4NDWa2q2u3QZGIRXDMJ27eM29EuqNjnZ9sDPf2T/BSapqlA/ymMtNpOxxghSqXz4D76ksD2g0JHZRuulSu2wnmmYryGefL0RZeN2VJo52og==\",\n\t\t\t\"ivBase64\": \"aCwsZdqGgaRpSc8O39uyQg==\",\n\t\t\t\"cipherTextBase64\": \"AWgsLGXahoGkaUnPDt/bskLNCo69OhWtCzphdzMNpV5s4udrj1vyNRA+0LgR+22l3+t9T78QJa1FdCZTlhnevXQT/0vZFnfUMXgt7a65z0QXfNFNjgglF5bEc8Ty2aQkgVYsnKFMyXNgJs+7ohgqVz2OUixWMEQgriyDTOzlgwaCIYPHy2R3TfZleKOfi2VPuA==\",\n\t\t\t\"hexKey\": \"b115ccee3c763a3b0c9768ef2d60ad0da4edf84bf818446ea1d89c659df181dc\",\n\t\t\t\"keyToEncrypt256\": \"0b987cd8e1764985a824d0c97dab260b9746d6ceb8c2e5c4a57f86b8b4ce098b\",\n\t\t\t\"keyToEncrypt128\": \"f260bd24c3a06a06d23ddc548706fb35\",\n\t\t\t\"encryptedKey256\": \"AWgsLGXahoGkaUnPDt/bskLu7H67WtNYUHhHUnxfieam4Rfx7VJwAb4luUh2h+MkbG9c7slXdHBDqTo8gCuxh0QnJvgU+ckSc3kMpHTgirOz\",\n\t\t\t\"encryptedKey128\": \"AWgsLGXahoGkaUnPDt/bskLzo02J77DuHS7e4r5HkgQr4mKmW7sjjQHLVOobZV14GZG3CzfFO8c30zlNJwzr5bQ=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"vb5Pg8HGI6yEmTZMBSjxSv3l3yl0xc/L1o1QaBdZs2T50hGSL0cDTqnrEl8b1BHsXOAm8B+uToMk0vH+6BExa5YUVg/pAAXFfMSxywJu+B7OwH4=\",\n\t\t\t\"ivBase64\": \"4HhBGaQL5LtzG+Si0+Vndg==\",\n\t\t\t\"cipherTextBase64\": \"AeB4QRmkC+S7cxvkotPlZ3bR+fkF4n3yHMTIn9PYAlDSsLQnGsBw/wucXjp1+cmxUr0/L8t7AL0dIBDIfrLzcORTwuieuMvVH9nFqMICl3Ng9MbD64Y56igcRpGFIoTbMRoG5sVr1kUFSjLxfHn7Obs/pYruqJ2buD7AZyXxCBdJIDx2W6IhBLu/5a+xe8iztQ==\",\n\t\t\t\"hexKey\": \"56bc59610b838592d38a54cb48c5bd6ef67221a08da75332932ec75750234003\",\n\t\t\t\"keyToEncrypt256\": \"99e44ec6662d1dbb94ac8cbd9ddd38ad883bf946e4aea946dceb133d0f37d2a1\",\n\t\t\t\"keyToEncrypt128\": \"4de52d158fe8d4da698cbdfe2debc483\",\n\t\t\t\"encryptedKey256\": \"AeB4QRmkC+S7cxvkotPlZ3Za5LduiCR2pNQkfJiSPdktRKYvYM1gwJ3YHcBhtf4rGeL1p5+ZcSEQfnYJpcdA+L/DoJzbiIieJ9kCnsH+CHQm\",\n\t\t\t\"encryptedKey128\": \"AeB4QRmkC+S7cxvkotPlZ3aKPlMiBvXy2yTRXJqg1e7Us85l9oDazkn8iTM1D3DgKyCvE771t85i3xHraw/L5Oo=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"B/xXQYKzMSkmzw0p840IIt7CUkFHURuTjdv1K9GmySqZJAmvapZY6JzB+Pu2zF7yROj+WrqfAL04ItS+Im7KImJwk8/GDXAybD8ZhVZDv81XQ31e\",\n\t\t\t\"ivBase64\": \"qS9DdzFHHtMHwfBeW1V1Fw==\",\n\t\t\t\"cipherTextBase64\": \"AakvQ3cxRx7TB8HwXltVdRcnt2skniNmG1NKfE1IwprVyn+fcglNg3FOSmdycurguwurfXD4eX15WA97ZcnEQgOgtHAWHVpDidMalO3J6Of5zX6XbXdVYg2FH0ZKCeVZSjMAOHSOOQoEIZPoLuoI8icbvSopiti3rG2IlQ5b+egj4c/kP90kEogsbqgEb02ODA==\",\n\t\t\t\"hexKey\": \"fe5d966cfc4accf6216c6de8695068fbd63516c0548110e293309981b77dbf2e\",\n\t\t\t\"keyToEncrypt256\": \"b124ad9f581aa236d005c28546f018653ce8bf8a631f6fea3dae5e335c1b7676\",\n\t\t\t\"keyToEncrypt128\": \"bb4522cfd09b80a6e872b27de4347468\",\n\t\t\t\"encryptedKey256\": \"AakvQ3cxRx7TB8HwXltVdRfD7ikm7pfbf3e2idu+H9aqrVNwuNkDfvRdjSZ20Ve1bpyJ8sYZ2ZVRB5w1M6R/cjgD2JaOFW8GiifGiW2Nfv9b\",\n\t\t\t\"encryptedKey128\": \"AakvQ3cxRx7TB8HwXltVdReP8F1ULcU22HOFfvpHeT2+kcyUUo71Pyvj66SdisYN4BisIOHlrJuuDsMn/JkhG9w=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"M556Y3igULzjFQpWP/y/C6RFJuWTYt2yCT/bo7QOmOOvMqXO15Er32hpdhsG3Qc+bV/dwuUmk0WB+bnia7Y5aQwLEom5FYl+jMQR7JMejTYBtDizKg==\",\n\t\t\t\"ivBase64\": \"l2yXdtFQxuLUkJ+Q6MbRnQ==\",\n\t\t\t\"cipherTextBase64\": \"AZdsl3bRUMbi1JCfkOjG0Z0uVib6Nt9VV+eCmybwQYukYkWP8vCABc9ddNAgqVmUYUA4VnNaezjNJuBymAuOA7tHeCGtsQmIsYtIL89gNk6usUXZV4trM+yRSffTA08DveccqMv3l7qmN58Lvj/+2S4p8Qlp2w0W9Rr+RErcNQGdES8AO57aaAEvH4NdB75VEA==\",\n\t\t\t\"hexKey\": \"3072ac715830e0ffdce12c9a7aba2cff8eb4ce8a5568b4aa2d0f59cb55036959\",\n\t\t\t\"keyToEncrypt256\": \"551be2d061205f3ee6df4538e3a2fa96a97d22f0ef86c2283d8569df4d6aabeb\",\n\t\t\t\"keyToEncrypt128\": \"b7e0a95484ead7958c6b280bfc583663\",\n\t\t\t\"encryptedKey256\": \"AZdsl3bRUMbi1JCfkOjG0Z2uEXfUVSbv44Dl1sg6pBk9Wy3/AZ0iOEnsKVkGvaP62OTdr4z7Rpe/g0WVphH0vGfjMLIlbs8ODUgws2Qh+ysJ\",\n\t\t\t\"encryptedKey128\": \"AZdsl3bRUMbi1JCfkOjG0Z0Dvv+T60ns51Dowu+2nMvCy3J7lvczyeYbcBEC3d0jKuaD5wjaOxyaRNHQljN1BR8=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"+YDxGG5DTjn3hvtCCmHBo9kbuQIJoV8dAVBzElfPV4SEGKU5cBcc8zQ1DuLmI/a8Bn/w2NGeW8Z0oye93DPGD7qOGgv9kEQ/GCOizBH4345s7G1J410=\",\n\t\t\t\"ivBase64\": \"5vr2Y6xPZBNxdKtHc/27+A==\",\n\t\t\t\"cipherTextBase64\": \"Aeb69mOsT2QTcXSrR3P9u/jrRzLuLU14flXNkRPVS3JWSLKFJaHZNAx4MwNNC7BlJbCv/Wj8KwaTryCKOR2l9+hhjLVay0BWclLyXedPS9fj1Imn1XgJf0REqr5Rvx9vooc2v2UL9Cv5Uf0XIMMeUV6+hjgpdk1iojlWs4Uv/lpytbsqdZ+zFUeHDurM+wRO0Q==\",\n\t\t\t\"hexKey\": \"7b750ed842ec32ff3e4c6c5f3e8aaccc9a3bf2a1f02d214e7715d63215f2228c\",\n\t\t\t\"keyToEncrypt256\": \"babdae3d66cd85103a443471728541beccc46e6055567d5e65cf324e7741c120\",\n\t\t\t\"keyToEncrypt128\": \"70c6c9ac35b969cb3ac21f3379772fa3\",\n\t\t\t\"encryptedKey256\": \"Aeb69mOsT2QTcXSrR3P9u/hmuPhehC5/aS3WLTXwunww3sGL/6nXgezsvycNRVMGISBprMD1JDulO9Cxq9WLGtOPhQJ3h4WaOQpdwJPDxpEa\",\n\t\t\t\"encryptedKey128\": \"Aeb69mOsT2QTcXSrR3P9u/iQrgVjUV0dGUDOwZVaZc8zxF+LfmBwiZQXz21Z/eSN6Yxd8sh0XfXoYbTE9A5Otg0=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"lHDT43hjWymfxCKWqVzSHSOAbyukKtnsjwzuE1q/54VBz+NtAMe0LEieZ2lYyEDFSwxEO4ms0hPmzi9L7SRctxa4DNSKZRMkgPgeEykoPv6dnj2oMwFz\",\n\t\t\t\"ivBase64\": \"hMzPr6blLb+rDqxTk20dSA==\",\n\t\t\t\"cipherTextBase64\": \"AYTMz6+m5S2/qw6sU5NtHUiw/4h1cqsHxBjwKZPheGKN//eCcm/bQfbVXYaexafeQg+ykTCFgkpAoBCp6dvePqNH7YzuDqogPVAWxiobAyHJRpjMx56gTMHcZFxHfhTq/qJZXFF5GURBXgC5Xtz8BeVdBc7epYi65hGJm3SkC9RjVl93bCr/izRTb1edwnyW3g==\",\n\t\t\t\"hexKey\": \"51aca3ab21272e06491e417ec13c236126f8bde90b40b1ddd2367dea2b446f62\",\n\t\t\t\"keyToEncrypt256\": \"6f21774b146c4755a0c02a1afcad30de2fea8bc662d01eed30e9e396581e7957\",\n\t\t\t\"keyToEncrypt128\": \"2276b41d19d6ffb5484a59aa06a75039\",\n\t\t\t\"encryptedKey256\": \"AYTMz6+m5S2/qw6sU5NtHUjH2yZ0NNk3ou1ejlVe6eQZLQyji+Fi6L2EcVJ4QK4XsNs+lVI2wSBJYI6aVq1sVYo64HUi+ov5qc3nT2uvo5KM\",\n\t\t\t\"encryptedKey128\": \"AYTMz6+m5S2/qw6sU5NtHUhA9vqzktcA0zxG6sAPQDPoYdnm+hCxLBQODrRHtA7S9U6jxAJmFSzSfoGaubH2VJc=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"bzCbfPLZasd9erfZWhcMtm8eMNnvrDjBtaUGNssSkgEFFCT8Fv9TL30B36+iG7vxFB+MbnfRhE2iLh8g0X55rUC4ChlbYH/N4iTdzqf+um5K71uGQ/STyg==\",\n\t\t\t\"ivBase64\": \"e+s1KEv3/Qhl9Tx3mIMobw==\",\n\t\t\t\"cipherTextBase64\": \"AXvrNShL9/0IZfU8d5iDKG/RXmuB1+FWQ4vkAUCMuWWBqIo5BvGe5s/Ess92SlucZZaXRTmuJWVPIkjapfGwUU9H0z++STSxmcWnaf8umZfHHWUqkDXZ9q8GglHKIWzGXRQim5i60X0CD4+McEcGF3TdtLe0l4eB1eiYvQp7XekhTKtsqkS5EK3KDNT7f6cgrA==\",\n\t\t\t\"hexKey\": \"4cb82a557695e8cf7f092a3801bee7325ae700d3579c2d08dc96706d9226e3de\",\n\t\t\t\"keyToEncrypt256\": \"790aca75ccd033bcdeec4817342597cc94bd0e4c407b812e5119bf366d3f3350\",\n\t\t\t\"keyToEncrypt128\": \"515de7c36e834fbfed4fbba0c29bd291\",\n\t\t\t\"encryptedKey256\": \"AXvrNShL9/0IZfU8d5iDKG/sbaBM56l7QEML+qaZZBnSaIVbVAjdL+fF77a6lx4+xMXtfX2iQ/jX76PH7M4MoAddX2N7CBJCpsLJVoUjzKLB\",\n\t\t\t\"encryptedKey128\": \"AXvrNShL9/0IZfU8d5iDKG9NjXTBMyBwdlyTZNy0yG9ceKJZyLCje5Z+PvVAMaeMxfJjDGpd5LZMbxYEHhIUXFY=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"zxv+GdRfwP+RKyEuIEqz/Qw4S4333PO4MetVaVIwS5ptgmbMLgfZdEgP8HPnyWZ5f6dA0iKIjvrTMUALk/Gl6uABdw0WVllntn50KvpZicoQaiXTeMjKBmA=\",\n\t\t\t\"ivBase64\": \"T0JqsKacH/aaMkO0Sa0fog==\",\n\t\t\t\"cipherTextBase64\": \"AU9CarCmnB/2mjJDtEmtH6JwTrHzIPUO1LJ6dOQmMuofvgLbS8fV05FEVk4PAO7jpHVzOFZHffqbMM9roFBMcIHB9AATrWealhgzUwSzR7vMR8fpLHJCtXZC2U79HeLWK0GNftf0iiSfmcDKk9OIFC9gesFd8Vlz+95PqyLTUVS8o2M8PWcQAEk0ag60DMcV5A==\",\n\t\t\t\"hexKey\": \"9ba79cfe1252e6a9e4ef7d064f23b9ca3e92c69172458dc84efc41dde621ced7\",\n\t\t\t\"keyToEncrypt256\": \"00e492526875139068f9ffe09450acf56281c31dc7f64d40b73041ebfb80bce2\",\n\t\t\t\"keyToEncrypt128\": \"99c404f20f3dc46ec916560ffcad6708\",\n\t\t\t\"encryptedKey256\": \"AU9CarCmnB/2mjJDtEmtH6I820rA3acr6MPqQjr+IlugGmE0OrLKh5EGrK/M5Y5k+TsKylWr7HbCfVGVgyGCKxXRlxke1HVmQlvuAIpWGJ1i\",\n\t\t\t\"encryptedKey128\": \"AU9CarCmnB/2mjJDtEmtH6JnvnFTnq590HH6fk0RP3mawwG0RP2O1chTEk03qMA/WyTcbJrdWi5di3xS9Mglvt0=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"odFUp76OSwtYprFwGvAxjDIiB1LUkvtWv8YQ99cYmK8sz7PmUReA4kHrsuWtpZJ38ivivqbIjlQhpI6IJ3Ta+ld05K3i3pgzhzSCOtZSUPw0/KFGOMu0a4OG\",\n\t\t\t\"ivBase64\": \"efFISXpc4D34awpjOGl+qw==\",\n\t\t\t\"cipherTextBase64\": \"AXnxSEl6XOA9+GsKYzhpfqvwXwqBj93C8PthewmV7zDdSJkM2gybsxTsFVnIwGMoP2SnqkG9Y7UHTUFN7CzsNQB+zgr3GLR61co84V4hY6jkoVSikYwuxN82jJ/jPCcuT433KRg0tkD3jSvyUclAaKoRb3K/LK63af3Q343wXvJbH8YEXITsF1mqzkVS91kfKQ==\",\n\t\t\t\"hexKey\": \"975005a2f70dfec6d4240411f760a4f614abb3b05ffb5504878c9085694a9867\",\n\t\t\t\"keyToEncrypt256\": \"77e95006f3db36f4ea60f271b66ab699172ff98a3ab428563e5b7705f9647f0f\",\n\t\t\t\"keyToEncrypt128\": \"659f40e4313862516f927c42d28be9f5\",\n\t\t\t\"encryptedKey256\": \"AXnxSEl6XOA9+GsKYzhpfqtj57klUzvl/NAhX6V94eFtmme+HlAYKQhyZxHBj+AjT8kB9BZpSy44jc5rQmCGMB7zNmWQ7JU6/dNFgMhyMQqm\",\n\t\t\t\"encryptedKey128\": \"AXnxSEl6XOA9+GsKYzhpfquaO9TzXxkx0bbmehR1CQp1/QOw6VboB84mkwjPNzAvI08EXaXKkp+aIeZ3lYVvp+Q=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"WHNeAircBRD/3Le4P7xhF7Dm7FohnQwCYtSjXLmFxE82FJnmHJSB7cah+plVcgfHvOkyp8oyTartGqJww4drDKrT613AesRuLnzCw7wSjEM933vjhoj3pVi5vw==\",\n\t\t\t\"ivBase64\": \"koFT4N+wnflnF5YUgTOf/Q==\",\n\t\t\t\"cipherTextBase64\": \"AZKBU+DfsJ35ZxeWFIEzn/2mIELuKRm//lyuqGdxy1JB9T+/z05n8fn7ebpuVWx2Y/GiVwQ7mOzINhQxg9zBYuZgqmqo9K6wNk+jP85V4JnS3ojg0tq1ZfD37Tg0LXYca47s1rsUljTsxEM0dLBggyCBgidFZ9uAwz74oFsHobzR+L/GTTM+ty2n2Te4adRE9Q==\",\n\t\t\t\"hexKey\": \"259ce5fa8059a229416296cdf549724269826ae244e678fafcc43c99501e83cf\",\n\t\t\t\"keyToEncrypt256\": \"07e326415e3a51037209ab188a7f8b1da6ee565003ada465865d8d6ffcf9efd8\",\n\t\t\t\"keyToEncrypt128\": \"7b9c2f140d41679bd34f48299c49be2f\",\n\t\t\t\"encryptedKey256\": \"AZKBU+DfsJ35ZxeWFIEzn/0fMuy9DiU8/btmOSevw+X33X+vO5dExY8WCHoJGQUtqCVNT2MEfYPR7w+i2/TUJhvVUbYZaF6mpHBLsWzwWv+A\",\n\t\t\t\"encryptedKey128\": \"AZKBU+DfsJ35ZxeWFIEzn/0EdnjM6sv58mfOY2Xm7piQTAaj8PYbeG8c90nFleDUVMtJ0ydFiXLyyHPSqkWUFxs=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"b7z7n0owVx4cJsf+cy2GaCx38fjIMVsG8qtA3Gv6pcXHjQFdprcDseYhjl76xfcUKfIHnIameqWsiu+L+5XMb7GPgPGfXaQcZUz6GgVT75Nbn0CtkY25FdeZd3Q=\",\n\t\t\t\"ivBase64\": \"P4jAdkTx9bWxnXsVqN4+7g==\",\n\t\t\t\"cipherTextBase64\": \"AT+IwHZE8fW1sZ17FajePu52Eq6pkOZekRCLHby6M3vowp8VwlOIsa4OMXWZF1SK4sNSabe3j9MUh1X+rhi/JIdLjL1OsGLnn9V5eLe5Vqvs97u37Rzq85eA4eOooSn0hf5h3rEY0JtJcDDlb5gQMs0MaAFt2HZBg5vrJF84Wb+UmfTHrpc59Gf9C3PtVtBlIw==\",\n\t\t\t\"hexKey\": \"a68a3991d6f95c2129c150fc057446748a406a72e1db33c2a0c9fb0a2a298da5\",\n\t\t\t\"keyToEncrypt256\": \"026fe7b8daf3e43120d3484e7e2ff8cf830e9310f6880644b69b8349fb6e2afb\",\n\t\t\t\"keyToEncrypt128\": \"2f945b4350b982137c049cc3a1d02bc0\",\n\t\t\t\"encryptedKey256\": \"AT+IwHZE8fW1sZ17FajePu7DNq3rfB1632sYjPrH7qjX8lPU6h95Tfqpz0GEb5U1Gil+CVWhAtD3NB/I5ToXpAOXptfA4bKDlvRhWs6aVtPV\",\n\t\t\t\"encryptedKey128\": \"AT+IwHZE8fW1sZ17FajePu4u1dQNe2ak9DQ24mPndsLfu0Fc1GgjpkfWMnu4gYOl0hdsOaVrJSFh8DdF5KRw9NY=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"4MP9Wz5BjK+ocG1NSk/PurcYd17XxwkdEtkPpWTTq1ZvoBA3ojwb7H6hLWqjYieauQfK9I6gHLC73z0S5F8s4k63RjO5ZfQztorB0XcUbbzf0N5j/56VWHnqbKlJ\",\n\t\t\t\"ivBase64\": \"DximlTFNFECHYd0+vXE5Aw==\",\n\t\t\t\"cipherTextBase64\": \"AQ8YppUxTRRAh2HdPr1xOQO2b9KHVK3iuvhEWDtWSqUAJlhVrUJvlQccqWtj1cCoHtM/CS9G26CeF9BBlhcfoPFoNg2zxDq2BuSpRq7SwKlqlE5B6HaKShMRDzXpD3IZugA8dLxU9/oqLSKEZH9fMt2jyHydcQLRlgttWCnKxR2PL2A8BwRg47Nx5LQZeAfIdw==\",\n\t\t\t\"hexKey\": \"30c208f12db6677653ed2882b252dac250e2e81ab341117d7454b95a5b8a78c4\",\n\t\t\t\"keyToEncrypt256\": \"92b829bc61fe1085b6c8a80b2a8a0f3fd7dafddc99c52ce7176f650552b8b2ab\",\n\t\t\t\"keyToEncrypt128\": \"718f1d04b349643aced191961ab90f7b\",\n\t\t\t\"encryptedKey256\": \"AQ8YppUxTRRAh2HdPr1xOQM5i+wL/j+uboCRX3hflUosW8/xFuLH9ulWt1HbyQubWtijhc2eD/ECmyOGrfsDpxvmxILqa9ffD1Cdqx3M8ozX\",\n\t\t\t\"encryptedKey128\": \"AQ8YppUxTRRAh2HdPr1xOQPldNJZquR6/2Zc7sw4SmUinDobgjYU22E+56kQ4Ntg7GaUX6hlMc0J/bFCo6BAoTs=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"coOlNDP4stlm18OQZc5WnUqjxAMvJB0WCDfMZiH7qdl1hDPrQ3U21VvxPwwIt8jch9hMLnWWBGDSA175m53fb2jripLMLZdMz4ivNyXRrUBy6mT4VvW/cqgAFn3BqA==\",\n\t\t\t\"ivBase64\": \"Eaiikapu10SVc45i5rwqGQ==\",\n\t\t\t\"cipherTextBase64\": \"ARGoopGqbtdElXOOYua8KhkbfNSHG8jul7qyFcJfmE7HCPsBcY2Q1Umtdph4pNpPRBlzPKc2qDB4QPmKaXa7Ho+7TmLky3yqbGlomjENaIvGJWjggC6q2d77y2ZKg3kGSMOD3/v8hOdu66AlRghonDo/ZYal/NEdN+KcV9YH94qvYwV3WTsePYN/bP4wEKjvBw==\",\n\t\t\t\"hexKey\": \"45bbd65036cd37c517170709e0ce7b1f7245be9966595e9c87f9aa5c9fb9e08d\",\n\t\t\t\"keyToEncrypt256\": \"cd7ab276abb9db7430e1e69533a7d05c7d687190b9aaadf1aea4eb807bbecff8\",\n\t\t\t\"keyToEncrypt128\": \"6f4c57701be697da661b631e6a12cbce\",\n\t\t\t\"encryptedKey256\": \"ARGoopGqbtdElXOOYua8KhnBtNq1lYIl6rRc1piUbRgjW3dD3NCj73tMIJ322I60XvHLi9FrPOXeRJRQDnTmNHdtBNBTyUucJgusfDqakBX2\",\n\t\t\t\"encryptedKey128\": \"ARGoopGqbtdElXOOYua8KhkCsoE+vISpeoRYqYJm5EudfqY1l3ylywknhAfF86oTRG+kWYNmu8slhMV2BpHgYOc=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"ifCFOr8hVBhvMujpssTC3ES1lIVeKPVVRpBJTArA57N3CCnX5CovWciY45f62Pe4w+dlYtebMOK0nBpr8wQoZWol9Ggx2ugkErvBuQAh61rdUoa/+2Is5lk/99IMNYc=\",\n\t\t\t\"ivBase64\": \"yddoIR92vbAmwpyxNYU4RA==\",\n\t\t\t\"cipherTextBase64\": \"AcnXaCEfdr2wJsKcsTWFOEQkCZ3MsiWlIkHLnaoK7FYYqRUJlQ+iSjbOt0MFOCGvNoNucJ3tBafgSn3Qzeg1+mc6NRuSNiBJm2H3OeD59Ex4wwYBqsVkY1XmxDTGBZxGrivrHW924W1fCROvyWmre7B8rFD+FTmi1Nwi2AVqaNMPaN0/fHYCpQFjr959e3Zr9Q==\",\n\t\t\t\"hexKey\": \"5f4a67decfcb90d0ff18ea1af0197e1cf567bb9277e8ae19b804332fec612b42\",\n\t\t\t\"keyToEncrypt256\": \"eca15af22023901b072fcc277d1153f20ce818d661a93e2201435e540c44d839\",\n\t\t\t\"keyToEncrypt128\": \"b844fd7892fecb39bc108c6056ddccf1\",\n\t\t\t\"encryptedKey256\": \"AcnXaCEfdr2wJsKcsTWFOERCMlytCHSCQ+7OYWxDMnCMgJRw17ZvEl9ar7A5mb9CSzidCxgyERf/zbi6sjkIOpjGpBGOgdNCc7RnUorof0+a\",\n\t\t\t\"encryptedKey128\": \"AcnXaCEfdr2wJsKcsTWFOERPphS5rvw4ZWAJcieSkYuCtB5gzC836rVux0Y5xEB5ZR/OZlI0MBO4y83IvhBgZiI=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"jrKtL3dqP/HpUEk/yAElEQV8qE8mESYiDQdQTLkiWUKBFH5tTIzGjbWI7wt9NNWfvcVfjGVEyWvwpIRlKPJBe6PkpHYMsAD/3HQiNwBDYlICVJeGzqdLzdb6UgZDwYAG\",\n\t\t\t\"ivBase64\": \"Q0VX4jQVgq0LLQA86Up9/Q==\",\n\t\t\t\"cipherTextBase64\": \"AUNFV+I0FYKtCy0APOlKff1mGhLGpArVJhErNWD+ldFU/zO9Ur88CNDFLRulp2jnr6iI9lK020Wt68DuiWo3C1lNQhCn5PlXDg+u26VPEe5GE06QcmNIp7ZuQCSCtqpzZgbRr8vJtqAyD+/dVge6gB1ElSVgLTSJS3iIu/siHfUGFlXfQ4p35F0sl7c5qZarJkrPYXBEl/sp1NluEoUQNjk=\",\n\t\t\t\"hexKey\": \"1b98203c9be54cc74311ea73b35739a7561a0998eb1aaa86882223e41fd4eb88\",\n\t\t\t\"keyToEncrypt256\": \"3ea26904af23f2fbcc6d687a606e794b7af1ace4a0611d979e27d8c31a29bd1f\",\n\t\t\t\"keyToEncrypt128\": \"6dae7a3bf28240141222113610f26563\",\n\t\t\t\"encryptedKey256\": \"AUNFV+I0FYKtCy0APOlKff0Mkr5O9ckbUrI8bTTTvEg5GIhJyha1My4wmKv6+QlFTwM8VlB/Viw3Ozkdbs0CbbLpepb1GDURnH3Idq3XhhIe\",\n\t\t\t\"encryptedKey128\": \"AUNFV+I0FYKtCy0APOlKff2AoZ5twWn9wdxSem5NwGLKHsTciutzczcb9DYr1gqYz1O5goaM1qQNPxKxhl/qn1o=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"SGpUZBU3pPHccyjsWAFKZb/DLEO3gukEv8gjPdwvmJLFfygNoy/PJYe2ZGETZrDMiGUTEDXWg5OmEbd0PFhu/sdwmKOmAIliZLbhDT3C6bcLRvQ/Hig6zAys08w6I/316w==\",\n\t\t\t\"ivBase64\": \"9Hwfo9jMr9gws3BtRS3QhA==\",\n\t\t\t\"cipherTextBase64\": \"AfR8H6PYzK/YMLNwbUUt0IR0ZXgP/7i1Mj6UpIoR9P2Gea4bAWyJT150aLzCPollP4DaA/Xt0P3iOWZVYTEh53Oj3jpwZ5pGJJzNvpIDvCpReTfEgOzAigxJ2OiUE48jIwiREuoYrVdoeZV0Aa5Q0LsntzDHakNSkam5KG+orbqFHSk5aOoscbO/cCFlmzyDJbB4j2uNomEO0Q+BWF/em0s=\",\n\t\t\t\"hexKey\": \"0d838bd7e7fd1adbe41cc13b3a7abcfadbe556642046dc7add0de18e26d2b8ba\",\n\t\t\t\"keyToEncrypt256\": \"b797e1a0a79a7eeabef8181bffeb1ff084a631e8759bdfb9e59b5e49b1dabbe3\",\n\t\t\t\"keyToEncrypt128\": \"53e5400f20be2e48a948bf8c6d50d9cc\",\n\t\t\t\"encryptedKey256\": \"AfR8H6PYzK/YMLNwbUUt0IR4ftGHeZ8vYUDalCp30RJWsfGEEmWTB8ucqqhCHETn8L44L+y429spXbzJMZjx+y92T0/YewAaLvTk8sQfj5FC\",\n\t\t\t\"encryptedKey128\": \"AfR8H6PYzK/YMLNwbUUt0IRViWPenBX8byFZeCI32JHvKvhHNYI/XbqfbItu84fl5tNZq60iPia37XiSKl0xPtM=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"G7Sa506GmlzfGhyGPFJIyXEHMESJVSC4FiyrfuBJz5RSH81iKSldmoIDI7eFYZAKZyiR9N5iqcWCi5IaII6o/XtJ4uZsxIK2BloVWtH40BbpOea2Zpr03yZAM0/LtsGXcOc=\",\n\t\t\t\"ivBase64\": \"24T2X0q8A+kmYCCvidZXew==\",\n\t\t\t\"cipherTextBase64\": \"AduE9l9KvAPpJmAgr4nWV3s2XZ2YTHGmPUXsXGf9sWbC6UiGTXenvqquxI4EsOxkTjOECBYZHntdVPFN1Fx7CI3qU/219xjwbpnC1d2jnpT3HGgsZuxZjiGfB6DXwW7XuRAkqugt34YRifJI6tkiuRFwwO+0bDoB61+9xAlCNX2kB/YmqGje+3P5Ev+auLyEopHZSF3sW78MIyIIDAImtUM=\",\n\t\t\t\"hexKey\": \"8aaa486430eb9f2b56b0740fcb947acf02f666cfaef31af1f908e60397c43bb9\",\n\t\t\t\"keyToEncrypt256\": \"8a6dff82421c6af861537bf1c0e0dec2043dbd716c173c5f31f8594cf514c12d\",\n\t\t\t\"keyToEncrypt128\": \"00630683c6cd0e56091000726f2e7680\",\n\t\t\t\"encryptedKey256\": \"AduE9l9KvAPpJmAgr4nWV3sEUpwvE4egK0ZpKoJXvw0s4Weqx3yrmLpI9BDnMTR4nGNMnVe5iUVFSo+9fM3FTaJHHqq7hRfQhdmMp0bzWfyP\",\n\t\t\t\"encryptedKey128\": \"AduE9l9KvAPpJmAgr4nWV3v8QgQ7MXh2ZKauV3bt44jFckHgJQY7fIjQYG5oeBp6XLhb/mC7h7p2cJYlLbM4vZQ=\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"7PFuHRMYWCh4rhL176jytE5JhYAU1NHFw6R5ChmXnLNS1OMwe56ZlNXSbgU6p/eNgOTPx+dPtqyQLAwiSdNhYfIKCy/whxLmczT3ul4cbUcasEdzp+h+ydIahBqk07TZhtsV\",\n\t\t\t\"ivBase64\": \"WqBJiejTRlJhY5VciaD4HA==\",\n\t\t\t\"cipherTextBase64\": \"AVqgSYno00ZSYWOVXImg+BwZV1Kue4F5WCtxgVcTwGyZJtW6AHBFQaEq1PWahwc9YvwOET4cybKVbim3uNPF31xllc1beP1tHXc7fM1KP7TGsD0/lqYHbZ8UqW0s2HDKjg9ACagUwDUzWj0NIX/2Ves3/JROrfTIkJDqSvBd2gy1xz5F3dL77QEjGhl8aIA4ZJJP3PrT9r4w9jLE8A1tmG0=\",\n\t\t\t\"hexKey\": \"f5ecb26c7460728863ea9cef8c5774299cf5f09a4cb3f5953bd849588629f275\",\n\t\t\t\"keyToEncrypt256\": \"f2c91e76268d111c32fe15f12a3a4180a8c445b657804715fd3fd392a9e332ce\",\n\t\t\t\"keyToEncrypt128\": \"d65577684efafbbca3593b27a75ceb67\",\n\t\t\t\"encryptedKey256\": \"AVqgSYno00ZSYWOVXImg+BxRuZMrP6hxUipwQyt87qcuyfUZa89/c/K65rxtLoOygAf+EBL0ycRKupk6Qy4eON79sznoURkfh8cDgXYRN+jo\",\n\t\t\t\"encryptedKey128\": \"AVqgSYno00ZSYWOVXImg+BxIRzMMCgsiKJBMCqq+xxnFGp7QyAij8ndPRF6C7m3Tgem3HxCkICZ5M6Cn3BY3lTc=\"\n\t\t}\n\t],\n\t\"aes128Tests\": [\n\t\t{\n\t\t\t\"plainTextBase64\": \"\",\n\t\t\t\"ivBase64\": \"eYkwIRxd6H0gHKgxFhQ2Ww==\",\n\t\t\t\"cipherTextBase64\": \"eYkwIRxd6H0gHKgxFhQ2Wzqc4nGotJCI/MQ8RBzm2dw=\",\n\t\t\t\"hexKey\": \"b78bdea9c26d7956e5c0e93e089b8e23\",\n\t\t\t\"keyToEncrypt256\": \"6dc4db67340b27f69ae81fd3ab0b5709\",\n\t\t\t\"keyToEncrypt128\": \"5b404726040421c7aa7f98b54d28c68c\",\n\t\t\t\"encryptedKey256\": \"/uaYJ2ZkabyYdzJnSMqdhw==\",\n\t\t\t\"encryptedKey128\": \"o27A8IRR71E6IimXxslPNg==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"xw==\",\n\t\t\t\"ivBase64\": \"866ni1ZETT7X6RJVLAnMUg==\",\n\t\t\t\"cipherTextBase64\": \"866ni1ZETT7X6RJVLAnMUrbLqERp0+cTqF8odB98Gtc=\",\n\t\t\t\"hexKey\": \"c5a6d584a2e4684e3b8c407c6cfbfad1\",\n\t\t\t\"keyToEncrypt256\": \"8ceeb0dcb294fab674aa35f557964450\",\n\t\t\t\"keyToEncrypt128\": \"0b941d3dc00f26c507c81426cc0cdda4\",\n\t\t\t\"encryptedKey256\": \"gKSencgTwvIUYERV+HVPjA==\",\n\t\t\t\"encryptedKey128\": \"U4HOnITq3jFTd3cB+hdmEQ==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"I5Q=\",\n\t\t\t\"ivBase64\": \"DWP1SbOFVkO0q8sIogsT1A==\",\n\t\t\t\"cipherTextBase64\": \"DWP1SbOFVkO0q8sIogsT1C5+I0ILhNOsjEYOLmnEuZw=\",\n\t\t\t\"hexKey\": \"bb66c741542ef5b9d4d3d6969073fa21\",\n\t\t\t\"keyToEncrypt256\": \"7cbe5ffd2acdcb55dc4b93a20e83617f\",\n\t\t\t\"keyToEncrypt128\": \"b46bbf08afa9a4f1207c381a9a160870\",\n\t\t\t\"encryptedKey256\": \"y4ia68iYm8xtzo9E0YLYXQ==\",\n\t\t\t\"encryptedKey128\": \"BglxRzHii6QcHwnsi0jIDw==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"Y9ZE\",\n\t\t\t\"ivBase64\": \"12IJmXAGSeYXZ/TZtsI91A==\",\n\t\t\t\"cipherTextBase64\": \"12IJmXAGSeYXZ/TZtsI91OxWaBffXpfEtHaLAFL/qIQ=\",\n\t\t\t\"hexKey\": \"6f4e21d3f5694d98b6ebacbac9a691db\",\n\t\t\t\"keyToEncrypt256\": \"a0ca246568ae2c8d70504918260f6896\",\n\t\t\t\"keyToEncrypt128\": \"49bef9a8807ddd30b289e24c5c86a1a8\",\n\t\t\t\"encryptedKey256\": \"kGokCXktNLXevtqsHiZ4oA==\",\n\t\t\t\"encryptedKey128\": \"6N9OvDVK5qpR8qwBqA4jhQ==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"PqTXqQ==\",\n\t\t\t\"ivBase64\": \"vV9CSlRkCm08OyDoF54RXQ==\",\n\t\t\t\"cipherTextBase64\": \"vV9CSlRkCm08OyDoF54RXWSJ9/GkcgZprFsX+pS8hqc=\",\n\t\t\t\"hexKey\": \"426719b0b94744cdc22c7494b50d3118\",\n\t\t\t\"keyToEncrypt256\": \"139df9f63f785e39b124d996a59d084a\",\n\t\t\t\"keyToEncrypt128\": \"99541f3d60b5940436478c10a40d5a1e\",\n\t\t\t\"encryptedKey256\": \"2M3U2hc/qMOAlWxHds46Kg==\",\n\t\t\t\"encryptedKey128\": \"52u2fDU9fQDQLpDXiImPcw==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"ZYNQHIo=\",\n\t\t\t\"ivBase64\": \"rwjKetmE9qu1lw9hQuN2Lw==\",\n\t\t\t\"cipherTextBase64\": \"rwjKetmE9qu1lw9hQuN2L60X6QHQgJ+Qx4x2YNTBFEw=\",\n\t\t\t\"hexKey\": \"68e1b7a1033e9c8b154f828ef52c4d91\",\n\t\t\t\"keyToEncrypt256\": \"f03a8d456edc3dc122b7d82a5574fc6c\",\n\t\t\t\"keyToEncrypt128\": \"69565a5cb350e8adcc9c43155e771be2\",\n\t\t\t\"encryptedKey256\": \"Q6c4OMetpzwADcvfVOfeUQ==\",\n\t\t\t\"encryptedKey128\": \"0x97OUWCjKGkunSODA4Qkg==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"8TmzZJqZ\",\n\t\t\t\"ivBase64\": \"zd88Ar7gE/qSRuwSY9M9UQ==\",\n\t\t\t\"cipherTextBase64\": \"zd88Ar7gE/qSRuwSY9M9UbanGRr3BcnrXrcW6iagGN0=\",\n\t\t\t\"hexKey\": \"8b5c76b7a95dcb83d03795c3fc892edb\",\n\t\t\t\"keyToEncrypt256\": \"ffa0399c3be6a9914f0e3f6c57fb8b6d\",\n\t\t\t\"keyToEncrypt128\": \"d319a865d2dbe2370ffb73e169c5dea7\",\n\t\t\t\"encryptedKey256\": \"e10Ffuv2zjqEBxwiS7Rwcg==\",\n\t\t\t\"encryptedKey128\": \"l0Rfthn8QBQiYi8QqFtGuA==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"xo0dBI0r/g==\",\n\t\t\t\"ivBase64\": \"ks8JxWn+K/lL4drh8LUbFg==\",\n\t\t\t\"cipherTextBase64\": \"ks8JxWn+K/lL4drh8LUbFlpbbTjHJHMdeCVcwv/bukw=\",\n\t\t\t\"hexKey\": \"28ab5ef1db09177b49ecbd6ae4063c00\",\n\t\t\t\"keyToEncrypt256\": \"35c3530c0a7211dbfb905e6b5eb4b6a6\",\n\t\t\t\"keyToEncrypt128\": \"e66599f7f906425fc8748f217d73766d\",\n\t\t\t\"encryptedKey256\": \"9DCZYBRcXapPnufKiI1r/g==\",\n\t\t\t\"encryptedKey128\": \"z1qPRweWTDrXc29IDjWeVA==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"tkg5yZ4lb/A=\",\n\t\t\t\"ivBase64\": \"61KgKbf7iEfL5xkKqJVzgQ==\",\n\t\t\t\"cipherTextBase64\": \"61KgKbf7iEfL5xkKqJVzgfbuAIdhAR+4mjmgtb1iNzk=\",\n\t\t\t\"hexKey\": \"2a0911284ba1aa0f4741638e82f40a16\",\n\t\t\t\"keyToEncrypt256\": \"3e72fab44e51bf23a8c14f19f6edf94d\",\n\t\t\t\"keyToEncrypt128\": \"35514e9e0ff6c3c8a75daebe2627ef73\",\n\t\t\t\"encryptedKey256\": \"r6AK7WSi79MdKgTJgKGSgQ==\",\n\t\t\t\"encryptedKey128\": \"CsC+BLAq0s3j/rzGHDqsag==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"FB9Hiuh/sSWd\",\n\t\t\t\"ivBase64\": \"9aLWXfl1XzNeVgZTWTZ8zg==\",\n\t\t\t\"cipherTextBase64\": \"9aLWXfl1XzNeVgZTWTZ8zpyloq/Ki95u/8qIoKZ05Aw=\",\n\t\t\t\"hexKey\": \"b728b7fd8508ed19ee9e60fc6b138919\",\n\t\t\t\"keyToEncrypt256\": \"5d404f41f565f4441fa56b154a1a5d22\",\n\t\t\t\"keyToEncrypt128\": \"1e009391badd1c4824efd17f5da14ccf\",\n\t\t\t\"encryptedKey256\": \"0f+MpSHEVrxENo+P5nxPag==\",\n\t\t\t\"encryptedKey128\": \"ThKNg8rfy798UE1ZDd7HWQ==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"sAGUJKA+0PL5nw==\",\n\t\t\t\"ivBase64\": \"jjqTueLDv2qTxVsVH9bA1w==\",\n\t\t\t\"cipherTextBase64\": \"jjqTueLDv2qTxVsVH9bA14Y33Bw+5YR5PzQ8bhfpKR4=\",\n\t\t\t\"hexKey\": \"bbf2d0932b25b3b6857b9a394b515672\",\n\t\t\t\"keyToEncrypt256\": \"c8ea613669e37911418ffecec05776a5\",\n\t\t\t\"keyToEncrypt128\": \"b332c00a4f44b16d01c210f3ffc64a18\",\n\t\t\t\"encryptedKey256\": \"Ks4QIhUqXUM2U4qD1xNWHQ==\",\n\t\t\t\"encryptedKey128\": \"iuTClqhvCYoyZ3ODxKk4mg==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"o5kbD0D71N9xHZ4=\",\n\t\t\t\"ivBase64\": \"3APYXOVq7cOKIdLEDJwuFg==\",\n\t\t\t\"cipherTextBase64\": \"3APYXOVq7cOKIdLEDJwuFkqjbv3BOdIXMV+VvUXq2Gk=\",\n\t\t\t\"hexKey\": \"2991524fc0af2c9f8aecc277148a6b86\",\n\t\t\t\"keyToEncrypt256\": \"ec630c2ea1777a3bd81ab4cd8f7efd16\",\n\t\t\t\"keyToEncrypt128\": \"b2a9a201ba178e85c8dd75e6714072d2\",\n\t\t\t\"encryptedKey256\": \"TWcQiIfBeCstk8TTq3l64A==\",\n\t\t\t\"encryptedKey128\": \"q1vbZUaL7dBSWSpLCYWlRA==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"VZYVMsBSEB2xPIEv\",\n\t\t\t\"ivBase64\": \"PoJQ+p8kptvQNX/okLOheQ==\",\n\t\t\t\"cipherTextBase64\": \"PoJQ+p8kptvQNX/okLOheakk7EyPVUjNk1AXGG436fI=\",\n\t\t\t\"hexKey\": \"a49634322facfb51125098b6a305f7fa\",\n\t\t\t\"keyToEncrypt256\": \"0bccaca6f26ccddbfecf7b18c6fa0b2d\",\n\t\t\t\"keyToEncrypt128\": \"bcc568358feb2106fb707b5c94808085\",\n\t\t\t\"encryptedKey256\": \"fuuyeUEtcTGiTlOCnLSsug==\",\n\t\t\t\"encryptedKey128\": \"Yfdh/E44QfRPnVyZ8bK2rw==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"ksd2f2wO6eayDCvvLA==\",\n\t\t\t\"ivBase64\": \"rFC8MJ+DlOGIwWOZwLr7Bg==\",\n\t\t\t\"cipherTextBase64\": \"rFC8MJ+DlOGIwWOZwLr7BryTWzDmbVxlmv6APKV9UpM=\",\n\t\t\t\"hexKey\": \"483737197809c10a0489fe482386fd0b\",\n\t\t\t\"keyToEncrypt256\": \"0441e1f4d33664a4f384ab1e87426038\",\n\t\t\t\"keyToEncrypt128\": \"9d78c1af78613e9d8fa1af64bece746f\",\n\t\t\t\"encryptedKey256\": \"YDmTNHAJdFKBGr/xAU+eUg==\",\n\t\t\t\"encryptedKey128\": \"43am33KXwV5TnuBwpJfuyg==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"axJQqwBoL/iZF7Wg9R4=\",\n\t\t\t\"ivBase64\": \"vmDAhz7cJboyqw/RFFgkew==\",\n\t\t\t\"cipherTextBase64\": \"vmDAhz7cJboyqw/RFFgkeyoMqBe7qL7ci4VptBCVvuo=\",\n\t\t\t\"hexKey\": \"20c6ef4b2882da6975334edfcb0ea26b\",\n\t\t\t\"keyToEncrypt256\": \"401b486cfb81f13465c93addf33bd299\",\n\t\t\t\"keyToEncrypt128\": \"be2947011247c6bce7717f2cf65661bc\",\n\t\t\t\"encryptedKey256\": \"jUJBwKTONQSMAtO3Vo6ATw==\",\n\t\t\t\"encryptedKey128\": \"+9U+kDV33lWwsdk9655rNg==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"kJAvx2YoNcxtZ3r8wQBP\",\n\t\t\t\"ivBase64\": \"buyEDYbbhWtaAWyJ9X0GwQ==\",\n\t\t\t\"cipherTextBase64\": \"buyEDYbbhWtaAWyJ9X0GwU1zyddEnfOvH2sbYmZ/DfA=\",\n\t\t\t\"hexKey\": \"9aeb77854c985a0b32c4f5e9b4267872\",\n\t\t\t\"keyToEncrypt256\": \"75889e0a4eef942c9f8ba4bae40483b8\",\n\t\t\t\"keyToEncrypt128\": \"5f27af4cbf0a950248a580d60fd26a82\",\n\t\t\t\"encryptedKey256\": \"hpuHsCroD4UvvunSj+kx2A==\",\n\t\t\t\"encryptedKey128\": \"aentp3WniX2Wbyu1X/rD9w==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"2VK7CgLORHuqJKfTdOEWrw==\",\n\t\t\t\"ivBase64\": \"gkFBkoIpb2kj8WrhUQVtUQ==\",\n\t\t\t\"cipherTextBase64\": \"gkFBkoIpb2kj8WrhUQVtUQvzlpVMhCkZXBsOcyTBBrDUAGa7RaZSMuqOiwFDStDV\",\n\t\t\t\"hexKey\": \"46a86da4fcb11d1420b5be7c0a7e36a9\",\n\t\t\t\"keyToEncrypt256\": \"508161f968b2f95841480bca02bd7a74\",\n\t\t\t\"keyToEncrypt128\": \"e93c3c73147a1bf85d745715b7003f98\",\n\t\t\t\"encryptedKey256\": \"nqJ2KtOuXGsdSlOOMizYWw==\",\n\t\t\t\"encryptedKey128\": \"TOYR1WAIDlor49rQRbA8qw==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"3fUroRIV2Sd7YG3BfpNmfQE=\",\n\t\t\t\"ivBase64\": \"C2v51iukYoWGhJxMtf3+Uw==\",\n\t\t\t\"cipherTextBase64\": \"C2v51iukYoWGhJxMtf3+UzC6hrTwCSdfNgwXJqtLZtPZHiOGATp7AeexiJ6UqNrv\",\n\t\t\t\"hexKey\": \"ff2d27a7aaf9496aa6b2e1912b9cf570\",\n\t\t\t\"keyToEncrypt256\": \"a36b430dcdf172b8a4fcac047bc04775\",\n\t\t\t\"keyToEncrypt128\": \"97b580e260eb87460d7aa998de40e0e4\",\n\t\t\t\"encryptedKey256\": \"kAeslBLS+yNZkTzMUlX12A==\",\n\t\t\t\"encryptedKey128\": \"d2PBce2qtsjdQDKPJWBTLA==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"lNcb7PHwopFetiglIXU8qvOD\",\n\t\t\t\"ivBase64\": \"wdLf4/W5vfaLPr0EBZyxUA==\",\n\t\t\t\"cipherTextBase64\": \"wdLf4/W5vfaLPr0EBZyxULI6JOUsrYhvmZE+FodBJqHRkDxMKaO6kBryAV8FmePL\",\n\t\t\t\"hexKey\": \"78cabcaebdcb07d502178af495904473\",\n\t\t\t\"keyToEncrypt256\": \"1d1e3238f7557ade27624ff14a754c9c\",\n\t\t\t\"keyToEncrypt128\": \"a2c803b37ab1049ca19bc74b407cbca2\",\n\t\t\t\"encryptedKey256\": \"1pLlUI9dAVhAr7kJeY2sjw==\",\n\t\t\t\"encryptedKey128\": \"AIXUP9VpSKBLnr0hrCdMtA==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"dXG55kw6MQ+nQ4h4G/GiGDPF0A==\",\n\t\t\t\"ivBase64\": \"HyzH2LmIbX7DFtJMKKSMkg==\",\n\t\t\t\"cipherTextBase64\": \"HyzH2LmIbX7DFtJMKKSMkk8+5Xdt04gLw5NMR/Qqk4KjGfP0gE/2y9l3gmgk2x4Y\",\n\t\t\t\"hexKey\": \"398b0dbddca6db9e8949ec8daba35d22\",\n\t\t\t\"keyToEncrypt256\": \"1321b4130927020eaf9bfb60b16ab391\",\n\t\t\t\"keyToEncrypt128\": \"dc21b3d8fc77081081c4cc145feca17f\",\n\t\t\t\"encryptedKey256\": \"/y2fTJw8P3t+yjJ564M8ZA==\",\n\t\t\t\"encryptedKey128\": \"EAHpmzWoByO2PW8aHoKZMw==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"utcSgh8ykItiT0B5eQk7jvjC/+k=\",\n\t\t\t\"ivBase64\": \"gAiElOj9/iNkm7WpiKTbuw==\",\n\t\t\t\"cipherTextBase64\": \"gAiElOj9/iNkm7WpiKTbu2URsK5gnLy3FEeZhb/Z9/Bzdr4/kt7+l/0iMZtjrc7X\",\n\t\t\t\"hexKey\": \"774ecadc19b32a79869ea841f3708b8d\",\n\t\t\t\"keyToEncrypt256\": \"ecd3bd7bf5f7ae4623387c96fa83fc16\",\n\t\t\t\"keyToEncrypt128\": \"e946d587bbff5bbebc412520b07e6276\",\n\t\t\t\"encryptedKey256\": \"+B16e2bJ6ZQGBluZ1SxYfA==\",\n\t\t\t\"encryptedKey128\": \"M3o4aAUjGHtYlogWHCNu/Q==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"7tmGisq42etj3U0dyUZrYG4zkI1D\",\n\t\t\t\"ivBase64\": \"W+X3Pgp8ES6dMCgyaGOByA==\",\n\t\t\t\"cipherTextBase64\": \"W+X3Pgp8ES6dMCgyaGOByD481p8mRGMLmHpPvV1zEN5BiSY757Vo9EuMpSztZUfa\",\n\t\t\t\"hexKey\": \"35e75fc97ca9f5cd0d3c5a51f3b90a69\",\n\t\t\t\"keyToEncrypt256\": \"a8b74473d488c6a4104b174c5c929f62\",\n\t\t\t\"keyToEncrypt128\": \"da6d97098ce15321052824c57c055155\",\n\t\t\t\"encryptedKey256\": \"CadCaAqq2IPHIPBtE8Ps+A==\",\n\t\t\t\"encryptedKey128\": \"aWbgpRalQ4fWAskwMT7iBQ==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"SdG5wbwq1J9eIk7J+xQNgcP/dAc4Tw==\",\n\t\t\t\"ivBase64\": \"c9uRWwO7T2vx6pShU+u46w==\",\n\t\t\t\"cipherTextBase64\": \"c9uRWwO7T2vx6pShU+u46wZZL6iWuAzF4EsY6tfiEbvfSxkht23Mg7IxiWjE3EVE\",\n\t\t\t\"hexKey\": \"faf5e0324bd46829c2a350cdbe0665e5\",\n\t\t\t\"keyToEncrypt256\": \"37afbc70854e804c97ee23d93b9a5a20\",\n\t\t\t\"keyToEncrypt128\": \"6f4f66e07453ca6b93fe17ae39135c69\",\n\t\t\t\"encryptedKey256\": \"G4pwHg4go3Hoz1jOoffGLA==\",\n\t\t\t\"encryptedKey128\": \"zcL4vChfarLdCen6mO/LPA==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"hgROaKbmR8Lq7jBVZBWqt1ANNcCtvvs=\",\n\t\t\t\"ivBase64\": \"5C+ufIZU9XdSGTS0Eap1Lg==\",\n\t\t\t\"cipherTextBase64\": \"5C+ufIZU9XdSGTS0Eap1LoRMVwq5LfKU4TobnHJ/SfR6wF+gsTyaDq/nAB2sbqJa\",\n\t\t\t\"hexKey\": \"bea8817afc9b0ab71dfcfca6e98ba0bc\",\n\t\t\t\"keyToEncrypt256\": \"3309dd341b1afe0fe0bc2dab607b78c1\",\n\t\t\t\"keyToEncrypt128\": \"59109f76a5932ce31cff86041c3c032e\",\n\t\t\t\"encryptedKey256\": \"9/jnmpc7y8R3XXOIc08BMQ==\",\n\t\t\t\"encryptedKey128\": \"uoGvGo8hKBTmBiar2OioQQ==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"vCsdqjA5Dd4WW+wq4cbj0g3nl+waJ7St\",\n\t\t\t\"ivBase64\": \"608rmvusXC8oAj2ww8fFzw==\",\n\t\t\t\"cipherTextBase64\": \"608rmvusXC8oAj2ww8fFzzgRz/5+v2xMoNcePkeiSHzODzM1bI3rJx6K+PDQ5N9u\",\n\t\t\t\"hexKey\": \"b12109d1e3231a43fc426fd86822595c\",\n\t\t\t\"keyToEncrypt256\": \"5c05ba13c18fe60fc7429d0ca59dd8d4\",\n\t\t\t\"keyToEncrypt128\": \"303191f9ce273230fa57106872bf7c03\",\n\t\t\t\"encryptedKey256\": \"ZPZlg1ACkOME4RYVmuhB1g==\",\n\t\t\t\"encryptedKey128\": \"Z4kU3w6y215SESKWnCFjtA==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"rxccYF7q1J/w9JAsc8jR+ytyvdZ+J4cvbA==\",\n\t\t\t\"ivBase64\": \"d/PCP8+6CrAmLcW3jgU+DA==\",\n\t\t\t\"cipherTextBase64\": \"d/PCP8+6CrAmLcW3jgU+DOlk5zLktyZiUFG4Nw/8/Wjv89zfKYnwH/ALoggHW7oT\",\n\t\t\t\"hexKey\": \"844c78244d764b49e392edeb68157e21\",\n\t\t\t\"keyToEncrypt256\": \"3a866862b01efe8c9518d66cd5510ff5\",\n\t\t\t\"keyToEncrypt128\": \"a3b376b79706a1ceb97636fb63773360\",\n\t\t\t\"encryptedKey256\": \"mJNynlqFcAg9kRTpTWIydw==\",\n\t\t\t\"encryptedKey128\": \"/l8/QPnpYGCqwfz9KEIrEg==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"w/y7m2cOoBOJgwvHyb5XtwGD9Psc2LdNTMw=\",\n\t\t\t\"ivBase64\": \"8dHXVp+IxeVfVvwzo4eb9A==\",\n\t\t\t\"cipherTextBase64\": \"8dHXVp+IxeVfVvwzo4eb9KL7e/sUVtpT5ysYf+/qXNu3XoVymoxKnMqn4EJf1OR5\",\n\t\t\t\"hexKey\": \"83c511b4e34e711526dfe1432070e918\",\n\t\t\t\"keyToEncrypt256\": \"96d08d1ba1d96d835fe1dc43dbdc0289\",\n\t\t\t\"keyToEncrypt128\": \"f6e6d7e4583c55051f14b0eff22f8243\",\n\t\t\t\"encryptedKey256\": \"n1HDKSP3BlRBVAsHl6wl2g==\",\n\t\t\t\"encryptedKey128\": \"5XdI3qSZeHXBza3GOiHX+g==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"PbmOmab6adbrjz/C2y+fWbc3fORK1E/ocVi8\",\n\t\t\t\"ivBase64\": \"bDt1eDPYBe+FuOEskiEi3w==\",\n\t\t\t\"cipherTextBase64\": \"bDt1eDPYBe+FuOEskiEi3xYpk5CPGc6SZYthaW0BKDmdqIyL1Imis3MYb3feNx5o\",\n\t\t\t\"hexKey\": \"d800e60dfc110cad269e48e2ed3180b6\",\n\t\t\t\"keyToEncrypt256\": \"453857310973bfd7593c7b009db0988e\",\n\t\t\t\"keyToEncrypt128\": \"90cfba6adbfb7868dd83bb3beb6904b0\",\n\t\t\t\"encryptedKey256\": \"r4KSN4+VUo0Q/EGXzhiKWA==\",\n\t\t\t\"encryptedKey128\": \"FmzRmzGpiNhUPOfG0fJhGQ==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"6M2qdyScJMuxlDxohdM+uNL49WjWx7Ntp6svSg==\",\n\t\t\t\"ivBase64\": \"dfJM36SY2O7PEAiJk2cvMw==\",\n\t\t\t\"cipherTextBase64\": \"dfJM36SY2O7PEAiJk2cvM01CrJu4Eq1W39xefd3wTuk0gc0yH1/jzn5/N5QwLi3n\",\n\t\t\t\"hexKey\": \"ff39c6baf66857ce125fb1aa72992d4c\",\n\t\t\t\"keyToEncrypt256\": \"70bd3a2f962505a83dddae6038eb432c\",\n\t\t\t\"keyToEncrypt128\": \"900e97f56d679e001e3ebdcb65bde2c3\",\n\t\t\t\"encryptedKey256\": \"EleS2SovTngWO/H76ABh/Q==\",\n\t\t\t\"encryptedKey128\": \"PB2zVNh1QC71cz0nGT8M/w==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"y+7rFVtxXjVlLOOonOOrIwIID0kWz5jRSkWxT+k=\",\n\t\t\t\"ivBase64\": \"6c+cUI7CwYxpZjWM8KKcKw==\",\n\t\t\t\"cipherTextBase64\": \"6c+cUI7CwYxpZjWM8KKcKxvxtCu21LmRiloVrSfiyO1VWnWucsXyPsXm1hP9L4oa\",\n\t\t\t\"hexKey\": \"21d3106a027c610725a0954f29910063\",\n\t\t\t\"keyToEncrypt256\": \"c5cfaf320946570d4a320b35bdc69dea\",\n\t\t\t\"keyToEncrypt128\": \"4420c130f9701c9c5db85d2b1eb4f905\",\n\t\t\t\"encryptedKey256\": \"W415M+sDYX6Y0BZDh8Rysg==\",\n\t\t\t\"encryptedKey128\": \"90nH2lkzNCVd/3A/eVJs8Q==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"RYMpW+uYF7dyKV/iCncRA7Z8RwnYXpP4t2OnY+38\",\n\t\t\t\"ivBase64\": \"sp3Waa6S7mCIZ0VGzHnnzA==\",\n\t\t\t\"cipherTextBase64\": \"sp3Waa6S7mCIZ0VGzHnnzAJVvgZRQh/uGAMbHGs1WJovwSSedCTiSbp06N2mZRbL\",\n\t\t\t\"hexKey\": \"0a97e37e53b41898d0f06b583c77fa99\",\n\t\t\t\"keyToEncrypt256\": \"eb8d0a71bcde4e9fcd06ae8c379f70f6\",\n\t\t\t\"keyToEncrypt128\": \"c4931cab4ac6965724dc86acb3ff5840\",\n\t\t\t\"encryptedKey256\": \"YkLLCgjlyH45kMvpyMpasA==\",\n\t\t\t\"encryptedKey128\": \"PyM1JnrjuvFDvPP4gj5NEQ==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"Y9NPQ349s7gRhpFriP9iu4NQWa2AhwSMW2YK2N2jcQ==\",\n\t\t\t\"ivBase64\": \"cG7PGTJ1iQxU/Rt2FXNRyA==\",\n\t\t\t\"cipherTextBase64\": \"cG7PGTJ1iQxU/Rt2FXNRyLrZ6iu1ch6gEzFwBH1Wrkya1jA5HIv+11HVnwlWRX5E\",\n\t\t\t\"hexKey\": \"dda72b18227c0b966df4c14c0b62e3f9\",\n\t\t\t\"keyToEncrypt256\": \"1ebbbc21827c298c91c61cdf5c1dc424\",\n\t\t\t\"keyToEncrypt128\": \"eddaa6152eae5003fbd01e099887c0c9\",\n\t\t\t\"encryptedKey256\": \"32/6X1wMtO4CE+/ynXp5TQ==\",\n\t\t\t\"encryptedKey128\": \"pFzAbpkqbcQr3tZlsQosxw==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"0Q3ad8sKFThJzmctXWPR0Se31HRQbU+zVMcI3wgQJwc=\",\n\t\t\t\"ivBase64\": \"WGTzakX6lvgZQmE3VmNmmQ==\",\n\t\t\t\"cipherTextBase64\": \"WGTzakX6lvgZQmE3VmNmmYqLc36fzPCVfc/AalpnjDrZWVgHV3fo2Tv2DB+eNhkLjITZYudNZM7trLgkbSzKWg==\",\n\t\t\t\"hexKey\": \"e32310672a7570ef8e654461b04fa430\",\n\t\t\t\"keyToEncrypt256\": \"620effd54b0625c5f96866f57bffee10\",\n\t\t\t\"keyToEncrypt128\": \"acd618b07150fcb75a02722baf9e7133\",\n\t\t\t\"encryptedKey256\": \"c6ID7MD6LLHeaprTicNlZQ==\",\n\t\t\t\"encryptedKey128\": \"nqtpHyiMIx1JXMuR0iECEA==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"RJgFOsXWWyZl8GoajWj6FVSQMHkS0v+uWd27EixKni3i\",\n\t\t\t\"ivBase64\": \"MJKnZ3bNnPPUHCOg9A3Qyg==\",\n\t\t\t\"cipherTextBase64\": \"MJKnZ3bNnPPUHCOg9A3Qyow8PeH5zpHNn6Slprkn1RLF9WkOMbmnSunPdmZ/c+Ob4cCzJxPlKMRG5HL1X6ESGA==\",\n\t\t\t\"hexKey\": \"bf8d169302f5e45157bc598b24290eb5\",\n\t\t\t\"keyToEncrypt256\": \"fef77205741836f0cb4fd4cd09967343\",\n\t\t\t\"keyToEncrypt128\": \"a17e1d60ebeede2a3f33edf32409d9ae\",\n\t\t\t\"encryptedKey256\": \"16GuVbywISM/uO4MtRrclA==\",\n\t\t\t\"encryptedKey128\": \"y6HDdz9Aw3xHNoSrIULPcA==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"R3ds04JjQPCNpMeYtsjvvUT4VAYQNdn+O0B8ggiOsZSgMQ==\",\n\t\t\t\"ivBase64\": \"9d7Qq+4Xl4/V86Zjc9TA8g==\",\n\t\t\t\"cipherTextBase64\": \"9d7Qq+4Xl4/V86Zjc9TA8nN5oLCpTUgXnaAzK2a7xWZ0a/4kCUHlPxQ4nFUatwU/SpCCi3xRK21vvsIo0V+bQA==\",\n\t\t\t\"hexKey\": \"095c7a8c3b5dbb3c617fdb6aded7ff4b\",\n\t\t\t\"keyToEncrypt256\": \"36ac69644c7bff57c5365a2c7e5ce7b0\",\n\t\t\t\"keyToEncrypt128\": \"237c239128bf3bbcbaf1a92f5f47f135\",\n\t\t\t\"encryptedKey256\": \"s9vuWS3G5rdrHCtOk2q3qw==\",\n\t\t\t\"encryptedKey128\": \"Jow0q31NS73GSbRE0sYLbA==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"Dn7Zr/iODASaIjeTTsHNnF6z1fvochc6eWR9yv7B+hhbXKw=\",\n\t\t\t\"ivBase64\": \"Xpo8N9U5THc5mGLvXaW4sg==\",\n\t\t\t\"cipherTextBase64\": \"Xpo8N9U5THc5mGLvXaW4sjFnj1QgHD+FM6wS6xX4EFNQwYy2KwfSoAPy+0SqcLLL4wbc7a/U1pdB2YqwNNAoVQ==\",\n\t\t\t\"hexKey\": \"b21a39012981123f28f8bafc3720d4f3\",\n\t\t\t\"keyToEncrypt256\": \"88106e017fe54284faaec3faacebe1bb\",\n\t\t\t\"keyToEncrypt128\": \"72d1d2fee968e41e1c50d80940579b5c\",\n\t\t\t\"encryptedKey256\": \"O74iZJnFOtImyvrfBsJB0w==\",\n\t\t\t\"encryptedKey128\": \"6RR46i2b2b8tOqHwH4x4Kw==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"e0TPQWuVEwdduOWQi4laFXNYB3hdp6YVN56uRUIae9+OuKnF\",\n\t\t\t\"ivBase64\": \"m+Wr/06YM0av0jcWD0mvVw==\",\n\t\t\t\"cipherTextBase64\": \"m+Wr/06YM0av0jcWD0mvV/kULSx4Pf7Wboz++MRej2hqPpn7nCOgQ9BDB1gYaf7eP3zv9lYii/VHN8Yu2UY1Ag==\",\n\t\t\t\"hexKey\": \"3accf0a512a2e030943332ed0d6630c3\",\n\t\t\t\"keyToEncrypt256\": \"4958c5290b032898583d9436d2413152\",\n\t\t\t\"keyToEncrypt128\": \"3a98414d056ea34071df2e8ea6431e50\",\n\t\t\t\"encryptedKey256\": \"+/qDYXYxZROeT8PobJiNuQ==\",\n\t\t\t\"encryptedKey128\": \"zcAWN/ESqssZgju3lr7a/Q==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"ATAQF63vWU2c1oI7y6zBtezkLD/JBiMbcS8Mv0XfJZvNgTQQsg==\",\n\t\t\t\"ivBase64\": \"UwHemADq51koSWU5iTUg5w==\",\n\t\t\t\"cipherTextBase64\": \"UwHemADq51koSWU5iTUg58gOvaQTok7jCKCn5n3ChB91EDL9NikCRQs+cuJK1tV8J7x7ki4lRZQHfSMgV5kXdg==\",\n\t\t\t\"hexKey\": \"3fdfde20b6b896cd8c68a0516d42c4b6\",\n\t\t\t\"keyToEncrypt256\": \"9526a21336f8921001c7d6b9b69b8531\",\n\t\t\t\"keyToEncrypt128\": \"f9cb0dc907b0fe00f8cdb06b73b49105\",\n\t\t\t\"encryptedKey256\": \"5KtHvcQfQAWvbyiEuLfm9w==\",\n\t\t\t\"encryptedKey128\": \"PdNxye53ljGgiANoFnm+Cg==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"3rZJtf7AnWTdKy9nkslovp9NCuVoTpnk0lQDiZYPeZu8BL2uasY=\",\n\t\t\t\"ivBase64\": \"O659wPWQ3irc1ttCwg7mHA==\",\n\t\t\t\"cipherTextBase64\": \"O659wPWQ3irc1ttCwg7mHH/NbEe/xdRl/uWBtmY8NB+65ARo6lRmXvm3gibWOUDt/MB8I22oiXYAouZPc48YhQ==\",\n\t\t\t\"hexKey\": \"4beb1ede72b083619da454264c0ac57c\",\n\t\t\t\"keyToEncrypt256\": \"6d704e9962262a66b1ef3df768b1085f\",\n\t\t\t\"keyToEncrypt128\": \"6ccb393330faf1424396c754394cfa72\",\n\t\t\t\"encryptedKey256\": \"QbcYKJQ4LCsCjYLMYIJFkA==\",\n\t\t\t\"encryptedKey128\": \"Pgr9wTtzdXfr/5KhS0wbAA==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"M0caZ1CHE1VHIQzeHVqRt40iEn+duRbYGTx5+n95W6mIzruDxHKO\",\n\t\t\t\"ivBase64\": \"CvK3eIWcb0DH39jMh0V7wA==\",\n\t\t\t\"cipherTextBase64\": \"CvK3eIWcb0DH39jMh0V7wBwyAty/6wPcW6bptL7GLLUt/2CiLtKxDM+lOi9405QJEYa4aviBZzaAXZbrqi7pLw==\",\n\t\t\t\"hexKey\": \"cde1d4694572b0ff818d81fc7b0300d9\",\n\t\t\t\"keyToEncrypt256\": \"2631b5a7911e0b50304bd09816b29ea2\",\n\t\t\t\"keyToEncrypt128\": \"12c42ca51724bee7480f7426e94031a6\",\n\t\t\t\"encryptedKey256\": \"MXnK4h81lm6WImzYOCj9Yw==\",\n\t\t\t\"encryptedKey128\": \"ff5MvrDawv9qwSaiNalh2w==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"CWCDsXOxUcFenvmdmsMDJPGf5WJ/8IlkbfCWewf3M+obxP6AMXiY7Q==\",\n\t\t\t\"ivBase64\": \"f8Ixlp6TB0OqlkXoL41bwg==\",\n\t\t\t\"cipherTextBase64\": \"f8Ixlp6TB0OqlkXoL41bwh6KaiiUcaemH2wvFHil5bE5RbfOKL20Bh0tzEBJBSZIKcOtlq9ODAjxEAvZQcdBow==\",\n\t\t\t\"hexKey\": \"2884c4fe587f0f75fd413de947a96552\",\n\t\t\t\"keyToEncrypt256\": \"9549fa189f38eab2eeb26b193ab0d704\",\n\t\t\t\"keyToEncrypt128\": \"3c1246d634aeeac221beec070d7c54d3\",\n\t\t\t\"encryptedKey256\": \"3lKTd23qTJEbxxDUA68r8w==\",\n\t\t\t\"encryptedKey128\": \"RefWHBDlOLXX7KNfRu8vWg==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"pg+zSvgiw3+ZgogOcyl2EM/9q/PK0W0Tkxpy/a3LDLcp7TtfO5zj3+s=\",\n\t\t\t\"ivBase64\": \"rEBJh2I0b+AhfD2YUzXRug==\",\n\t\t\t\"cipherTextBase64\": \"rEBJh2I0b+AhfD2YUzXRuoKJ+GuwQ2NS4iQpNhkefwBjsJoG/GSBGBlBs0NZDFqo6mSFUjveB66+zohxFZBH7Q==\",\n\t\t\t\"hexKey\": \"78c323c5859d9a2c2d937228dbf25f48\",\n\t\t\t\"keyToEncrypt256\": \"9a3f7734b8bd5f22484dd371e73a28fa\",\n\t\t\t\"keyToEncrypt128\": \"7f8d6e2e9dbc837dc0ce8fc6ac9e83ad\",\n\t\t\t\"encryptedKey256\": \"6HbwIA3nhqh+jRWzvgdxMA==\",\n\t\t\t\"encryptedKey128\": \"OFdkRjhXz0/neTh+d8obBg==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"KBGCp2Xm2U8y900HtVR4beH/iAozpH3f7aVqhmDvmBdLCJsor7JYevbw\",\n\t\t\t\"ivBase64\": \"hVLR/C338dCGKxsetLy2rw==\",\n\t\t\t\"cipherTextBase64\": \"hVLR/C338dCGKxsetLy2r4ZQLGkBkxiLVVYH+SRNlE9+vygjUrdWhugBKDwe+JrtiuGrq9GuVVm9DSJmnkhGvA==\",\n\t\t\t\"hexKey\": \"891fb5681222b2aab2b8591084698647\",\n\t\t\t\"keyToEncrypt256\": \"486cf6a7afeda4f7d457ec9d547b22e3\",\n\t\t\t\"keyToEncrypt128\": \"b99c1280ab7101d8c3d19f6669ad90a7\",\n\t\t\t\"encryptedKey256\": \"QwY0gjXyuXjz3f87ERcs3w==\",\n\t\t\t\"encryptedKey128\": \"Kd6AydQ808dxrGXhDBNilQ==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"P6m25Mns88rlXji1q455BFn0SG5625httbzOSrJ2zIdF4htU/jhN+AVRaw==\",\n\t\t\t\"ivBase64\": \"crDj3maia0BNe1Mrsi6nZg==\",\n\t\t\t\"cipherTextBase64\": \"crDj3maia0BNe1Mrsi6nZpTO6sqP+q9y/bR/oCILH7BVMsYQF9Ig/+jqhCQQr5ouWIHUOfey2EJ8lO3LVgoGkA==\",\n\t\t\t\"hexKey\": \"7187d17982d5adf5f3e29d87986f9a1e\",\n\t\t\t\"keyToEncrypt256\": \"b19ba2c1c23236fb3314603d54fc4774\",\n\t\t\t\"keyToEncrypt128\": \"7460644c1793cdf7a758f07117c54431\",\n\t\t\t\"encryptedKey256\": \"mIkQgnTSn9xw/WUWplb86w==\",\n\t\t\t\"encryptedKey128\": \"rZ919JrD5HdSY5cv7KxEmg==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"d01tB3TSQnd18kGa1pepcWJJycVVF/sXzY84EOoNA7PN2RSuZsvJL4Bmkto=\",\n\t\t\t\"ivBase64\": \"3XfxgIWM4Qoctt35t2GJ4Q==\",\n\t\t\t\"cipherTextBase64\": \"3XfxgIWM4Qoctt35t2GJ4e+lrulpQAmltfJiijOT1Hb/2ggQn3RKGJLS1Er5acoKwu8iRnoN7vYAXtLWEe+hRQ==\",\n\t\t\t\"hexKey\": \"ae94aabf866196a808eac154ea18b447\",\n\t\t\t\"keyToEncrypt256\": \"bb0835e316d82629f253efc34b841d6e\",\n\t\t\t\"keyToEncrypt128\": \"72b47708e2118146c6ecbc2840417759\",\n\t\t\t\"encryptedKey256\": \"ZeXPl/SUd5mPDU3Y3jjbGQ==\",\n\t\t\t\"encryptedKey128\": \"bXvSRQ2Fh24OHtGTnaot7Q==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"0peyms6waDELYGfHZPusx8CeLdtLSKb6NWWs9Yram0eAA1tOstX7mx65FmxM\",\n\t\t\t\"ivBase64\": \"1YKWQp2OzoiDcZmjRfMNIQ==\",\n\t\t\t\"cipherTextBase64\": \"1YKWQp2OzoiDcZmjRfMNIY9que1GocO9RiYhVLYn6S8dLBS4mm4wgeDd7W9Lp+VgYqe+no/1udOYsRfM07A3bg==\",\n\t\t\t\"hexKey\": \"0a80818222b9d3ec7ecff0f32b97a456\",\n\t\t\t\"keyToEncrypt256\": \"13d7914e988807c5f1c6ae69cfcccbb3\",\n\t\t\t\"keyToEncrypt128\": \"34c8e3dbc61b5d3728951205dd86943e\",\n\t\t\t\"encryptedKey256\": \"Y7+9WNP5DWsk64jqINivPA==\",\n\t\t\t\"encryptedKey128\": \"bDsqzpmLc3Tmyh6dz8EScQ==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"hIbqEl6BWnxcN/3t/0roXNAb03LMbnzjd272t+EF7E4xhqP0wk9kaDt5qWCV9g==\",\n\t\t\t\"ivBase64\": \"6pej/n083Q6UczG7tC5gcQ==\",\n\t\t\t\"cipherTextBase64\": \"6pej/n083Q6UczG7tC5gcfzPJR4nc4+oCkr1H+Qu0d+xMgHE9q/1uEtpKGjIqR2jQN+8mJOer8IQhH5GAcTt+A==\",\n\t\t\t\"hexKey\": \"92dcdc08e943089f3a7628c3fb3c9cac\",\n\t\t\t\"keyToEncrypt256\": \"bd9b40bae35b89fc154dc391fda534b2\",\n\t\t\t\"keyToEncrypt128\": \"8d04354f810a74430d90d5231cb85d9d\",\n\t\t\t\"encryptedKey256\": \"GCo5OfRfGhNF/CVQwQssJA==\",\n\t\t\t\"encryptedKey128\": \"j8jbIORba/P+C8bBnkbOiQ==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"YCtkiF/MbLoujtO1FeEzFId/DRPSLxNnM1s3p2BtUd/IarIB3p0NF/Ieldxd92E=\",\n\t\t\t\"ivBase64\": \"mCeHup7t5i5sGwQt3KB0WA==\",\n\t\t\t\"cipherTextBase64\": \"mCeHup7t5i5sGwQt3KB0WO1tCbfkmjc5JWojFLlsyHoJQc6b2U8LO19P5JS9S17522/mEwSYefWRso3N2a2Pmw==\",\n\t\t\t\"hexKey\": \"5db764526b1e3b1a381d36905b569bd3\",\n\t\t\t\"keyToEncrypt256\": \"a8a0d2a81eefbff18dee508ca9b92ffd\",\n\t\t\t\"keyToEncrypt128\": \"4968057e77feb625654df766bcde28f3\",\n\t\t\t\"encryptedKey256\": \"mi2XvazJqatJpDOispuMIQ==\",\n\t\t\t\"encryptedKey128\": \"ir/lPDSOrioTjKpjL6cdhg==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"E9o1qlZSw7c4lezirsmWaEy94XGQs4T1qIllC0y9UWoaGEDgk3yjvTi4Pl2Y5MYy\",\n\t\t\t\"ivBase64\": \"Cz3ellVWEugYezl1BfusdQ==\",\n\t\t\t\"cipherTextBase64\": \"Cz3ellVWEugYezl1BfusdSbA9zs041NZEleTD2Emv8YofKbvO+1c7mdGJgMrNCA7LwHKMLC1CCi/QKMxxtL6x5i3DArU5D5KbrybYvCUFQs=\",\n\t\t\t\"hexKey\": \"bfd1d1074d6bef083d703b05a3517537\",\n\t\t\t\"keyToEncrypt256\": \"7f8e479a70a7aadc761644b4d72b4d7f\",\n\t\t\t\"keyToEncrypt128\": \"ec2a935c438ce74c31642d2e2a66c96a\",\n\t\t\t\"encryptedKey256\": \"kwOAYQMWEatkUWo/5u5Ewg==\",\n\t\t\t\"encryptedKey128\": \"My0DUhZy5cojhuGQ+JN5QQ==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"CmYG1pxciSta0QCNWN401BiGX8nH67SegTSQ6jVhZ4EdF422qlY9YK7x+jkJmAIiow==\",\n\t\t\t\"ivBase64\": \"5/b1jFKLqJzH8i27koVDfA==\",\n\t\t\t\"cipherTextBase64\": \"5/b1jFKLqJzH8i27koVDfLRv9PH5d6cioeeEBhMWPfweIg4nT4ymYnkReh+rxnkM9PsYSDr+R/xF7ZNrGsIcEkrvD1JOrJvI0/uilSKYq/I=\",\n\t\t\t\"hexKey\": \"34f514a4c0b1b541d1c11d49f3583792\",\n\t\t\t\"keyToEncrypt256\": \"86ed18bc37300e881ee126ff3a9dbf11\",\n\t\t\t\"keyToEncrypt128\": \"60fbe2bb3f2dcf051524037fa3f68adc\",\n\t\t\t\"encryptedKey256\": \"srAae/Us20TH3BhsNY1EXQ==\",\n\t\t\t\"encryptedKey128\": \"K4v/UwRqZ3y8PyK1XIKiAg==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"OvYIfYQLTrZc+LsHMaw4tCVF4VQ7Ghiyx7raJauijhETAUfrtG18JMZyAWlbICheCSo=\",\n\t\t\t\"ivBase64\": \"ZaRs8M+T1pOxX40533DCfQ==\",\n\t\t\t\"cipherTextBase64\": \"ZaRs8M+T1pOxX40533DCfXtfp0CFRKQdqPM6CkX1DeEUhOWYl9QURpLwO8NP6Ni2OkrIiwpJ9CHq6Q/wtiB8M8gl3iRpds7Y06nIkOmdX8Y=\",\n\t\t\t\"hexKey\": \"a5fb9726538b0f3ae369dabda5909591\",\n\t\t\t\"keyToEncrypt256\": \"0ef8f2c0a086ae3ce8dd9d14986019d2\",\n\t\t\t\"keyToEncrypt128\": \"6ed880a780bf764203fa0b8003da844a\",\n\t\t\t\"encryptedKey256\": \"p4iGN9OuU0+VRU4+kKfQKQ==\",\n\t\t\t\"encryptedKey128\": \"kaBNRvtnGMuKqMEliDfEJw==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"x4MuHRNKlCIbeas1A8P6UvRN+gkgJRYkPQARcyF2ur5W63up8rDo+vlnPQFSvFkBRH2n\",\n\t\t\t\"ivBase64\": \"0PqbM/hsrvbv8unarpzKDw==\",\n\t\t\t\"cipherTextBase64\": \"0PqbM/hsrvbv8unarpzKD0J8ym6G+pKW6UDHRDJ943h/AwXz4CGZm0x2FyrB7DcplC7MnHuOynFlnoDs2wQjy8MutkWgGwhqlp0c/Y+cvCM=\",\n\t\t\t\"hexKey\": \"72beb658a4fe0c3ccefb3c5fd9eda0f8\",\n\t\t\t\"keyToEncrypt256\": \"67b6d5a01baf12942838df0760c3262b\",\n\t\t\t\"keyToEncrypt128\": \"fa3c6625551240d9075e0b2a05c61da5\",\n\t\t\t\"encryptedKey256\": \"CBx/874rb5ZZCsZf08jiOA==\",\n\t\t\t\"encryptedKey128\": \"Eq4Nn2TqDU+OwMvkVDvVbw==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"fUHEEt/UXASMUdlHnB3EeqMjNM2TcayEn6ly3CJ10OUN/Znl7tnr+dPa2rVSpsW30AdENA==\",\n\t\t\t\"ivBase64\": \"bVbw/jhQlFO0PpL1xvtFTA==\",\n\t\t\t\"cipherTextBase64\": \"bVbw/jhQlFO0PpL1xvtFTPPypA5ruMlSkl9sN+sc6ulWw2PQUKyCzVXtx+CWczJt8DP++lCu0nzWo/iXNQkAZeYUYBT4Jb1aeCf7jLPvZc0=\",\n\t\t\t\"hexKey\": \"1d568fe4d97972aaee11e6551a522ffc\",\n\t\t\t\"keyToEncrypt256\": \"9e83cf144dcbbecfeef488ea1ec7a1bc\",\n\t\t\t\"keyToEncrypt128\": \"dc5ee5e1e8689a7db1ad2ac55ade2105\",\n\t\t\t\"encryptedKey256\": \"eW3zbGo3s1s18TfVWRDi/g==\",\n\t\t\t\"encryptedKey128\": \"ZWQ3nWuBEUZy1wdWjmPCGg==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"sXJu2WlR3mvASS77JNLzshYhHJvBp3AfdB1fVHRcp6OrDYPALaLTZxDObc8XJzVb3pPOkbA=\",\n\t\t\t\"ivBase64\": \"H2ANzO47tOoujeWEu6xaHQ==\",\n\t\t\t\"cipherTextBase64\": \"H2ANzO47tOoujeWEu6xaHVLKbjN7Q+lLxg7PYLKZdqnAcIbfPN6V2cl0o+qhYMjxNxTO1Nv82yqbC8g79ks24kP+mdIpsKnsj5TgycEtKrc=\",\n\t\t\t\"hexKey\": \"c2d534fa04d3654a76cfc88799df9c4d\",\n\t\t\t\"keyToEncrypt256\": \"a15b7b8159f41b7ec5b014b238aeaa25\",\n\t\t\t\"keyToEncrypt128\": \"7f4708a208cec11bd564e02a345ff68c\",\n\t\t\t\"encryptedKey256\": \"bJ13ByxAwE0QnZ8S9lYkyQ==\",\n\t\t\t\"encryptedKey128\": \"nwumOUgQqFCC3x6yQQG40A==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"iqwL9C8zry7hBR7Y4f0ZEzyLJedV6q4aEH2TFLj60+WQZwy5JdJCG0WmVzPU9ZfTf36qcLpo\",\n\t\t\t\"ivBase64\": \"bqIQu5Tm/bK9PVipJmdB2A==\",\n\t\t\t\"cipherTextBase64\": \"bqIQu5Tm/bK9PVipJmdB2FyLEXBHEL1YNQlEeWL2Oiiw+bQC/oNKJSuZjX0KB+E5SF818TpxEhnVTNJPtlqYNrnBzhJbBeQnpQa5mIwNdsY=\",\n\t\t\t\"hexKey\": \"982dfa354e127ff0db9f42b38393b158\",\n\t\t\t\"keyToEncrypt256\": \"1d7d137aa7e685ff8b2ce33497050c92\",\n\t\t\t\"keyToEncrypt128\": \"07b3dfcc4661879aaf66e21bb9aa1028\",\n\t\t\t\"encryptedKey256\": \"TkMcDXMtYD5mdtLgEeXmvA==\",\n\t\t\t\"encryptedKey128\": \"Y7qRX17Hhxai9gTdJ9zwpA==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"TYdefiWYiZo75Zo5m3FKs84vSngXP/uScx5DcKwm4CIMV9+ugluF11/6Nqk1rYtyuNguSusvzQ==\",\n\t\t\t\"ivBase64\": \"dcfK4LFxVHhl4GX2nu1rHA==\",\n\t\t\t\"cipherTextBase64\": \"dcfK4LFxVHhl4GX2nu1rHKgFGfSuW7ONb9gnNpyj1A9LlzTQF811Zp9MX4TMGq3CiUs3HrDNGf6L9dmmzAMgb9XaDMthMbMF+9XISZ6p7D8=\",\n\t\t\t\"hexKey\": \"a06aad5d11955414095b79a70fbd5003\",\n\t\t\t\"keyToEncrypt256\": \"d04b9632bbb54003d411a360e38029dc\",\n\t\t\t\"keyToEncrypt128\": \"0186d8a4fa89b97c272739e358c0776a\",\n\t\t\t\"encryptedKey256\": \"WpRvrYPkIDvq8f++sQMilA==\",\n\t\t\t\"encryptedKey128\": \"wVOKWZX5Mm/wbhvsj3tNjQ==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"WGBO1MbHBXMuguHsm5Cr+nGdCbqgtjVUQrPXVlgSTZauwVYjGP0D5xI22i6asbiaaXeflBf4nbA=\",\n\t\t\t\"ivBase64\": \"aCmCX+WKwort9ypT8JchPA==\",\n\t\t\t\"cipherTextBase64\": \"aCmCX+WKwort9ypT8JchPDAhu5frlqC7zAZPAzj0Vhcq4cmG5+iSzPzKQDqGa9e26Zg8ZbPj//VqgTPGulOn3zVp9T0l0Pl9ATFVu+1LwPM=\",\n\t\t\t\"hexKey\": \"b24ee2daaefb41d7f9a55ddba02edd54\",\n\t\t\t\"keyToEncrypt256\": \"9f03d2756b2c1dd5b6198bdd4f720ee6\",\n\t\t\t\"keyToEncrypt128\": \"9997b239c5b96cdf575a924fc2436665\",\n\t\t\t\"encryptedKey256\": \"f0OLd9mjZ5/oBzY0nyxtcw==\",\n\t\t\t\"encryptedKey128\": \"gCZfwfWaZaMo3Vm27NZRpA==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"sKFkMwWnniOrG+9GAXXIuZ6uk6qfFFlL7CQ66xKqGq+auIht4A/NtR3LAys1cqHwCqt0A2dAEDWA\",\n\t\t\t\"ivBase64\": \"AaXlDWsYrsDyGb27WJaWgA==\",\n\t\t\t\"cipherTextBase64\": \"AaXlDWsYrsDyGb27WJaWgDyFC9iMKeY8Z4vNIdWrlfGTMi0ouYgmqJC03HjT9tGbR6VaZY1tJOSD7YTVAnxkmhb3NSU8qdPVzn+mluGi4Dk=\",\n\t\t\t\"hexKey\": \"78bab43df6c0bcb9d68db29085fa1c16\",\n\t\t\t\"keyToEncrypt256\": \"86b73b0260c41567e8b822328a59041f\",\n\t\t\t\"keyToEncrypt128\": \"5aaa9850a5aded6965afc2480ade0af9\",\n\t\t\t\"encryptedKey256\": \"RCG68JylOFcCstmr65gJNg==\",\n\t\t\t\"encryptedKey128\": \"QB8ZSE0CS9IkOnV86qu41g==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"ZN91yHOe/2fovEfqpEow2fliktCStt1MscEK095YFWiV4oofRynRhHzJTRGjtYw+zalG60mEGLbNjw==\",\n\t\t\t\"ivBase64\": \"zPvNbhi/QdoU93z1Wj/sjw==\",\n\t\t\t\"cipherTextBase64\": \"zPvNbhi/QdoU93z1Wj/sj+4EbIuIWBo1bwGf4CIyB2pI0OIjRIUQZK680dvhnhtpLr8UrYyd7j+9r4E+/CE1J3Ok/x/kN47RcpfUBkeEHdo=\",\n\t\t\t\"hexKey\": \"c3ee2acbeb1e0751e145b76b71a90186\",\n\t\t\t\"keyToEncrypt256\": \"ef9aee77191a345a709bf4a14c24e234\",\n\t\t\t\"keyToEncrypt128\": \"055df587c638413ed480ccb5afea0a96\",\n\t\t\t\"encryptedKey256\": \"T4N1ZfbWNwJBmmvB5fPpDQ==\",\n\t\t\t\"encryptedKey128\": \"PdphLR79Hc+202VebW0gdQ==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"fpLHIshUBfeEVgtf+R0B5jn4VYeEBeR2kmqfkMbOlgsc/FCiJUmLgFH9aWRKF2gSG/l/74lKAdP/Eyw=\",\n\t\t\t\"ivBase64\": \"+5MXLMNhR7fhdMbt0dmMxg==\",\n\t\t\t\"cipherTextBase64\": \"+5MXLMNhR7fhdMbt0dmMxlmKJmwH3z49FkCb7mo41f7GxYL77bqZv2iz/IVD31xGGPfmqBZpHv1CSXyL7GJGndwiHdk8uvSuuihHNayAiIA=\",\n\t\t\t\"hexKey\": \"e256d8a070d8a00d076ba7df52d63763\",\n\t\t\t\"keyToEncrypt256\": \"ea56fda6adae7003d2f44038d91c55d7\",\n\t\t\t\"keyToEncrypt128\": \"f12a707f838b0da19122f9becfb9a579\",\n\t\t\t\"encryptedKey256\": \"SVkvRAwLU2HpvwDO4J/mjg==\",\n\t\t\t\"encryptedKey128\": \"bxF0XqeqdGoEVBc1SLlRIw==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"XhVocPLiOdlSAclWHFAk9Ow8Tm65wGILA+/TBeZI3lOo/AEXVZmikzqLQwZyZc9+k8kHOo1g/vYeXp8j\",\n\t\t\t\"ivBase64\": \"+QrF+Fi84oERiAxJ48D0Cw==\",\n\t\t\t\"cipherTextBase64\": \"+QrF+Fi84oERiAxJ48D0C9TKHZTOENCJbU5Z/wv2b3YG7FvEQyzkncgSMxunusn1MgpXpq3S0D5HRyreAuKMMpeMAsnAuoEGkJ+4weBSre8=\",\n\t\t\t\"hexKey\": \"ce10109f69515e097ad27f344ecd04ba\",\n\t\t\t\"keyToEncrypt256\": \"0013c7e96a2747ac9d8959899a8c7a5a\",\n\t\t\t\"keyToEncrypt128\": \"9127dbe62013ad55d52326095abcf079\",\n\t\t\t\"encryptedKey256\": \"g4NdaHwbtzlw2V5AKi2HMQ==\",\n\t\t\t\"encryptedKey128\": \"KXAMvlvDBH3fRCeJeqa7iw==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"3pCHvtNAW1uQn2KSc9O4/ENVp7p1jbRJqIDTf4qErFAh42EcqK5UK4/rWxbxoKfxuFvtEQMo6IvmHSWLZw==\",\n\t\t\t\"ivBase64\": \"wmFPmg5bKL+0/BqJvYZUtA==\",\n\t\t\t\"cipherTextBase64\": \"wmFPmg5bKL+0/BqJvYZUtCngXm+GJI76UTMHKhSJowigJORzM+IHudXuj8i5ilsLNHh5ijO6Rzg/Otk/MYSuB5Gh1mXh1qBPOYFAqzqI7/8=\",\n\t\t\t\"hexKey\": \"ed6a9f46df847973d681d439edf2dd21\",\n\t\t\t\"keyToEncrypt256\": \"f6db85237f288ca0c8e0c3b6f41c6a78\",\n\t\t\t\"keyToEncrypt128\": \"db61529fb31bd697a28eb3b9d0f6db19\",\n\t\t\t\"encryptedKey256\": \"yBQ+IqUOYwPomOokUm+Isg==\",\n\t\t\t\"encryptedKey128\": \"qBlXxElTK2ftPJUKVYnWpg==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"BQT9vONoHEWfANRJWUYaiX43yO0DrMYZ3JHMiBO5W86pCAcPypOpWbgKiH8xEx41DaOnwkEtTlVxeFcPyFg=\",\n\t\t\t\"ivBase64\": \"VKfOri9eSLjdxakBuUPjPQ==\",\n\t\t\t\"cipherTextBase64\": \"VKfOri9eSLjdxakBuUPjPYwCbv4kHhze9I4ZqjK5ARWeTnITSUv1p6gaQ5OFkCOsjVSkIsvzJDHmFB5PEoeAVJa6meiY6eqMdINAAaqGUeo=\",\n\t\t\t\"hexKey\": \"6ee39cd35add079000d1e5cbf128d1a2\",\n\t\t\t\"keyToEncrypt256\": \"d910ee42aad3fbcd7b8a4614d679f04d\",\n\t\t\t\"keyToEncrypt128\": \"5f52801d60a062197debe01743ba194e\",\n\t\t\t\"encryptedKey256\": \"yyTkE2kmuOE2cKeTi3anTg==\",\n\t\t\t\"encryptedKey128\": \"PxwGn/JoE5xLwvEEvDrAig==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"cTzO9u6+nWdol+pEJLjvkjKZlOFF6sil66xR9NhZEY7BMhe3RtylyHNtsYovhU1PR9DRj4E1piuNQ+vphgVc\",\n\t\t\t\"ivBase64\": \"de8e7bjoVL23KUEEOmyfLQ==\",\n\t\t\t\"cipherTextBase64\": \"de8e7bjoVL23KUEEOmyfLSS/ude8K2m1+cxJ5mTnBnyFNXbh4j+zw6iOg8/hGmHlzjreJGzKDg0Fdg/5ixT4DhBm0CH0b8mj3tQdZrV38lo=\",\n\t\t\t\"hexKey\": \"f1d2a75ed91e5b4e5de20be3607d39c8\",\n\t\t\t\"keyToEncrypt256\": \"754a73da09d718341ae1dafdadb2e9fe\",\n\t\t\t\"keyToEncrypt128\": \"1e2e0179a375229161f95e23e5519934\",\n\t\t\t\"encryptedKey256\": \"PSP26T4I/AB/kQme0uZNwg==\",\n\t\t\t\"encryptedKey128\": \"9HQoVVEaM42IUz+aaRDBOQ==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"sBkhX+lxXSgMVPqW1iT3hri2awcdOCQY6emCUAF/Cxcd04zmJ4vBYU5DRO6h82bmfBC5TjZYs6OP2WsaJXWfXA==\",\n\t\t\t\"ivBase64\": \"QE1/ACSNnyksi37S9fptEQ==\",\n\t\t\t\"cipherTextBase64\": \"QE1/ACSNnyksi37S9fptEdZ3dt90wzESOs/2ZJNZsFDnvpwwlqKfmYmz3/cwXPEQJ0MWisBvkCTt5rka740E5D3x19k3yXIAyFuYtG2cvQ1om6qg9FojX09+Xf2yA5dp\",\n\t\t\t\"hexKey\": \"c22ee914cdfac26ba495a34f33fa7d7d\",\n\t\t\t\"keyToEncrypt256\": \"b2682185932ce2320920b64e8578f6fb\",\n\t\t\t\"keyToEncrypt128\": \"01d7cc5490b00b9aa9edd694b3c51c3f\",\n\t\t\t\"encryptedKey256\": \"wrmV+5KHavLOGLZ7U0fckQ==\",\n\t\t\t\"encryptedKey128\": \"16H8XpaX35m7q3olai00Bg==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"vrp0xJenA7f+o7HadMRojDApUSlqMmhwBPcygzqKS9LMPPWVrzvIOLe8uYrM/hR1MWTUTxoSouBZeRLNGXtR3c8=\",\n\t\t\t\"ivBase64\": \"vIj5oFkY7GVijbS7uKyYCw==\",\n\t\t\t\"cipherTextBase64\": \"vIj5oFkY7GVijbS7uKyYC/ydWH5JVEUTzNt37e3n2bA6JteIe7Lg6irjSUaCLnAIwkxfkKqg+pRT8Gsxz/OkUsHQHH3woplU8iVkif17u+LW5mao+Pf6vkXFzSUSwhAm\",\n\t\t\t\"hexKey\": \"9cf9c16ed736c0687ac8b78e0b174541\",\n\t\t\t\"keyToEncrypt256\": \"14247c687ca906c8451cfc90be50d8bc\",\n\t\t\t\"keyToEncrypt128\": \"0eee0be41c6c37a22394c2144a4fefca\",\n\t\t\t\"encryptedKey256\": \"ENMZgYNYd4vN0jqeRrOxNQ==\",\n\t\t\t\"encryptedKey128\": \"RjskOEGpDEntgDi4Z+Cj0A==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"1DZxQ9vPT0253bkujX3Fwz72vaEPKWf6TWLfyQBGAuO2iRLRK5m+IePicYJgdEt6HsILviT4oCN37yX8c/SPOLzU\",\n\t\t\t\"ivBase64\": \"L4r0tW6AbhAPcgFP5ZOOlA==\",\n\t\t\t\"cipherTextBase64\": \"L4r0tW6AbhAPcgFP5ZOOlAaxbDv9cHjGqTIicJzshfqOSPi+JKqGbQVg+SPscjEkrSW745rLghYIijqKx850c/Dg+JaW1F384fT0zey2b4Hvzzn4kzRmV/T7AHACFwQp\",\n\t\t\t\"hexKey\": \"b00880142ad8aae33ee003ee7f20da22\",\n\t\t\t\"keyToEncrypt256\": \"823ea09336c8d68116c278e60d4afbba\",\n\t\t\t\"keyToEncrypt128\": \"2f3f58c976ba61cd20dab36844039759\",\n\t\t\t\"encryptedKey256\": \"e3vQSPffleZ4dtutSDkThw==\",\n\t\t\t\"encryptedKey128\": \"8BL4S9RYw4ahPURLmp+k7Q==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"TQYQX9O3HkIIsDKCUNNdIPdAgk6rkamPssSydIfWkza/iyo75H+k4mV3jimYIJSgN+8j/cRxJvWdlkWRxJ0l7bwRgw==\",\n\t\t\t\"ivBase64\": \"N2oNCVp3XA7CxXOKBsUADQ==\",\n\t\t\t\"cipherTextBase64\": \"N2oNCVp3XA7CxXOKBsUADbw1VlIk6QoTIU+lwEy11TAl84yBip+TPw/pWKBTTPvR4DuhTidlR+Yx6bpwsrjLRUnW+sx2f8eP44DU0ls0d6m3nXBbNjA/D9bMd5/w11NW\",\n\t\t\t\"hexKey\": \"a1e3f369eb4b91cb1dd2ff9a2828b3b6\",\n\t\t\t\"keyToEncrypt256\": \"e933af192cd8e2d33ad27de307a96f8e\",\n\t\t\t\"keyToEncrypt128\": \"a94de2d76209ef5215217fbd4fa9b1b7\",\n\t\t\t\"encryptedKey256\": \"0hUo3afCrcTO7nMDfFT0EQ==\",\n\t\t\t\"encryptedKey128\": \"eTDMCW7VAfenTnmwHt1gfQ==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"mQbyBQ16ihJhr6Iqeoq1nvUVl9jQpXnAYWaKRn5/l4fkBNxepwrp8lhy8R3XBQtBGNjwsBcPimomdzejGp/5NnSY9Nk=\",\n\t\t\t\"ivBase64\": \"CnXpIKlBkxu89SuBI9qQgQ==\",\n\t\t\t\"cipherTextBase64\": \"CnXpIKlBkxu89SuBI9qQgbIrkNektvRhr8HQMQpVlPYlZWiUpfcW8Jkycz5Ec/F614iqfraBsh4texeN3ubwMJqhdiE95SXGVRH+OGlJ/RXLFGlqpTPsPBokWRmQUARR\",\n\t\t\t\"hexKey\": \"7fb83b41b4d04d3a1f67c638ed7ee2ce\",\n\t\t\t\"keyToEncrypt256\": \"d741cffcce122e7b2a9ea081b98b863a\",\n\t\t\t\"keyToEncrypt128\": \"da068902ccf3d809da2c5dac15f4bc35\",\n\t\t\t\"encryptedKey256\": \"9/o6m0L7rcxnQW2E3JaSMQ==\",\n\t\t\t\"encryptedKey128\": \"YxBPMDnuy1zC0+LO3EsQjw==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"oqR7wW/TmxJaqqFcQKcvP6bHsSBv05/rQ7q2mr3lqme56OdudeQHnOEwSN6WGcWWEcCdeXFUHjq3Z/55vCs7wGEGsZEu\",\n\t\t\t\"ivBase64\": \"M14OYE97djBrbJv+YW9F2w==\",\n\t\t\t\"cipherTextBase64\": \"M14OYE97djBrbJv+YW9F28dhTjLDrg5sOclx14fkZ6aTqPQl3x/kjF2V7J+NvK75afFUBj8z8BxlE0Vqa2XdaPAK9qn9bZLb+EDsaKkQD1dNaVpATKBzk7TA2DbzfTo2\",\n\t\t\t\"hexKey\": \"cb4a4886eb2697ad9d7678ede74f2c13\",\n\t\t\t\"keyToEncrypt256\": \"e0e51f54a539754dc234d0c87e76c04e\",\n\t\t\t\"keyToEncrypt128\": \"52dac0faf0895fee8c27242862a94c01\",\n\t\t\t\"encryptedKey256\": \"0H1mgd392uxEgP19IVr2OA==\",\n\t\t\t\"encryptedKey128\": \"9dNKT7UWHcOlK4TEnrkm4g==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"HpnPjhogJBmZEmC9lf4qqDa3y49n+UuoxASaAXqU5wbrEQYPA/4NcH3TPzNn/6u0w5LeqxRTb9xbEidrExobGm4v8h8xGA==\",\n\t\t\t\"ivBase64\": \"vn7loRZ+05Dl8RgcRjWqIw==\",\n\t\t\t\"cipherTextBase64\": \"vn7loRZ+05Dl8RgcRjWqI4B1yCLEp2tw5jIGlkPk6AThKDd0DkEur8CN6c6F5Ap+1W0ZtA7Kk48l11rMGOWmOCCWtEhIULpUmZ4zaP9EBSvVQGhwhSaNccmZtEIeve8l\",\n\t\t\t\"hexKey\": \"5eeb3b5e5c3b7b4d0aaf96ab88535680\",\n\t\t\t\"keyToEncrypt256\": \"14ebd992cdb955d0c410c3ca892929de\",\n\t\t\t\"keyToEncrypt128\": \"b7ba98aec01dcac014a299341d018e50\",\n\t\t\t\"encryptedKey256\": \"mKV1tJQDzvMqOBRRabfPJA==\",\n\t\t\t\"encryptedKey128\": \"wL7nHcuQCb+Wj/VlBYTTug==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"U/lf3Ga5AP8cezfB6lgTCJ0MYPnWji94ym6ImOdTY+4ZFLkBeyYzj2eB7UADMkFomqnI30dvO6bFcSbzaBrjd8a1tFKs+nk=\",\n\t\t\t\"ivBase64\": \"ZiSyzR9aFo1HFBdtOw1MMw==\",\n\t\t\t\"cipherTextBase64\": \"ZiSyzR9aFo1HFBdtOw1MM0/7XnHEuNb9BtY63YTkrRuWknN3/XU7D6d799KcBMPKXt+WZxrW75Fwi0AupWRAu07pEnb/vvzaoByRkWNI+Yn3Cy3s04iRaC9RgOOuu6Dt\",\n\t\t\t\"hexKey\": \"144b0c045c46874c7e32ed4637558683\",\n\t\t\t\"keyToEncrypt256\": \"e97a43a745cf3fbd1a928216394c09af\",\n\t\t\t\"keyToEncrypt128\": \"a819212974a01459fa6d6ce703ba0fcf\",\n\t\t\t\"encryptedKey256\": \"q2Vvvjbw+lvtz8dnv/1czw==\",\n\t\t\t\"encryptedKey128\": \"79fL3E/U/tN2SEK6rzkRYA==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"qKWMwzuLTeloL5r81Y9fd7+WtcNN8gjUiRMvTIQQs9UoxX/FjB6eLCtdJBxlr2/xkkj1Nb8IWsaDYkSeq0Jl84xrehOAupy7\",\n\t\t\t\"ivBase64\": \"DDwy6krNkkXoRNsJYjDHRA==\",\n\t\t\t\"cipherTextBase64\": \"DDwy6krNkkXoRNsJYjDHRBO2jzz9p5Vm+Qq5LN75Bz03d3hUlmeqrgdC3ARUxpM59c56ZlW6Ayn8GfTFputK7hlbpjbNJej25H2NQXr0+ix1Gv8z2p4OZU2cJcQ/7rVa\",\n\t\t\t\"hexKey\": \"5dddf8ff341a5762f9c30f12df2631bc\",\n\t\t\t\"keyToEncrypt256\": \"53e901e5b4e0a1da247e67b49a6908a3\",\n\t\t\t\"keyToEncrypt128\": \"49b9cba69c0c0814185548c72250f48f\",\n\t\t\t\"encryptedKey256\": \"VQxc//MDd99a9utPoUeung==\",\n\t\t\t\"encryptedKey128\": \"gGqez8eOmMALYZ6sRSP8eg==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"yc4ZbGdSK8mHZU6zTIC7gzlTcocnPY+H6Bk1DtgxKL5bi0gWD8mJsa8/vR4DEk4fHpeDeNh5MPAkkqO6C9K3CkfzKBpHSiisJQ==\",\n\t\t\t\"ivBase64\": \"864rDQYG4NEsbQGalOp1ow==\",\n\t\t\t\"cipherTextBase64\": \"864rDQYG4NEsbQGalOp1o4y773+q4SwfeDv2k2n8E1SA59cwYCvNfQDl4p2njMtpUENBSrOb9ShfOM0DEKS8YzoylDzr2DrIIvEVOcmpjjENZRW/AFaP7s61wFpmHxYN\",\n\t\t\t\"hexKey\": \"5f40c549be29abeb30769a54b63c66ae\",\n\t\t\t\"keyToEncrypt256\": \"6dfd8990f2cf210e7b5818f5d61536a9\",\n\t\t\t\"keyToEncrypt128\": \"5f746368f2903ccea30f27c27efeeb1b\",\n\t\t\t\"encryptedKey256\": \"U3y29lLyo2W5Xo1k7BCtsQ==\",\n\t\t\t\"encryptedKey128\": \"s0n7a2kx1rA6WBAGcQ4/bA==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"cuCHZR/xTKwGW5KSRR8Vdn3OacxUso/G6syNOWe/D6io9P0EwcPmEO8E+8tno4kYSfOlxgciDLVSCw0kz9a/caARj2UV7sYVs/4=\",\n\t\t\t\"ivBase64\": \"EEZJQQiVUMidzNHOgN26Cw==\",\n\t\t\t\"cipherTextBase64\": \"EEZJQQiVUMidzNHOgN26C83NgzaJxftmvWg+CsJVrtHpAA1SVcJTqSZeY8ZJQiPliQ0//bleTX2KMlzqpU8eDWlSL8UJYDWVMss2u1WIJ41r2bs7U2W3SaZWnbKPVhe6\",\n\t\t\t\"hexKey\": \"caebab2d02328c66e9a84e0b64976545\",\n\t\t\t\"keyToEncrypt256\": \"d7f448d35cdf3aaa125a6773c0778f28\",\n\t\t\t\"keyToEncrypt128\": \"b074a5749ff7b9058ccedd82086476ec\",\n\t\t\t\"encryptedKey256\": \"ZUzi2vqGvtSM8sQgySe24Q==\",\n\t\t\t\"encryptedKey128\": \"i5VxTftvaXiJRXnwxz6qjg==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"d5L0ROVJVOVVoTqR95a98n1zRr22T26plyfKqdBMks5Ev3LncYNMpihI7DW25WFy9wfnwr4GBUhCX+yBRnnEyypkLR/89tVLPGW4\",\n\t\t\t\"ivBase64\": \"iaYobCcsMvvx/f/UithomQ==\",\n\t\t\t\"cipherTextBase64\": \"iaYobCcsMvvx/f/Uithomd+C9g533zh+ETcUUoFkzGAHZVDvfjS+ku3RuI7fFCsIYa+FSjpDbnBrfMi+nU6u6xsnScehn/36+2wwPbgtJX02WEhw4KqJl/uvJre1rEHZ\",\n\t\t\t\"hexKey\": \"90c0ce4a4433729831e167d52f9e5b18\",\n\t\t\t\"keyToEncrypt256\": \"c71de7423b28eda6f9aa279f0f66dd5c\",\n\t\t\t\"keyToEncrypt128\": \"12496dd0075aeef9f5e3b99b989dab6b\",\n\t\t\t\"encryptedKey256\": \"k8Lr7t5rRQcYgr5xPJlVDA==\",\n\t\t\t\"encryptedKey128\": \"tOcZqxm/AbwnWft4X6KCtg==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"VAqZTEoL0ZqlduH0kVg87d5VPM0t3YHZyQNCbxMHJ/7qw/PbPTWd1FKPk3F6Ru/2yur5DlqN9mvcC3GVznxDUo6th2t5kiuS1EtOmg==\",\n\t\t\t\"ivBase64\": \"Hz7wwp30N7Hy+kbSA0M1oA==\",\n\t\t\t\"cipherTextBase64\": \"Hz7wwp30N7Hy+kbSA0M1oPTXcdQ1Sy+Qcpun5uHwdVNgpkEb5sKMtmTk2YOzvcU1EApAmIwRPTeJ/j2XdsTqPD9XGT+K6uxdlgrVAHrGeG69jyS/qCT10g/q6IHM753L\",\n\t\t\t\"hexKey\": \"48fd3c399fc2ab5a0f30096793f2e3d7\",\n\t\t\t\"keyToEncrypt256\": \"b4e6f1043a55ead2cb7b963e11c94cf9\",\n\t\t\t\"keyToEncrypt128\": \"a69f8045d254f21dc79aa44caf775cd8\",\n\t\t\t\"encryptedKey256\": \"fiz2V0iVTjqqKhOnu5W0Jg==\",\n\t\t\t\"encryptedKey128\": \"1u5sR3ZPwux7qkyq381NLw==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"0WPDcvW8Bpx1xbc4g0c0JnN5OCiev4dPS919lo1EHvbxe4jZAKETVi59OU52c1kJBGrPv52RSwMHpWrjq2WCQ8eWMr39HtU1y3gqEog=\",\n\t\t\t\"ivBase64\": \"yYl91PEzZNlEtUVAXPTs8g==\",\n\t\t\t\"cipherTextBase64\": \"yYl91PEzZNlEtUVAXPTs8mGqtACL05qpVsCSsXVDV4koQVrvM/ebQ89crIPeFm2muRuDJDCmWQLX4bIHhYpqlZb1+nOleeu26ZNqGT9+Lobj5tNw+9m/bv2AbCKIMRNq\",\n\t\t\t\"hexKey\": \"5c705e14aeba347b1914e1a929d51398\",\n\t\t\t\"keyToEncrypt256\": \"2a6559f89323b3873052f1f608514c6d\",\n\t\t\t\"keyToEncrypt128\": \"126a4f1fe2c1bada6531f1cee610f767\",\n\t\t\t\"encryptedKey256\": \"bagxDLV9Oetj8kVVPRn3EQ==\",\n\t\t\t\"encryptedKey128\": \"EJRSzZiebevNgdWnuOJo5A==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"+YkOqjTeT+AIH6I8xHN53yxLbxD/uhU7M/Dgf9hfH4VOPxURXktzcEZLmh8bz1FWLLDj05FDzElxIofu9wpbRZQGcQx1TNc03VycPIXG\",\n\t\t\t\"ivBase64\": \"ia+6dd2+S+EacPlBfqPooQ==\",\n\t\t\t\"cipherTextBase64\": \"ia+6dd2+S+EacPlBfqPooRZWSO4YAi0tQsngrSrv72FVwxIr7HKuY/vaPxuF0jC3OAqGzmol9kQFt0/KrSTSsFeC5qx9OX1KuYhKOPtAGRvH5l7AIarUc4sO5gPo2BUk\",\n\t\t\t\"hexKey\": \"0c9eec6310003fb549f84e885bf8ac34\",\n\t\t\t\"keyToEncrypt256\": \"bce88332de4fa42ee093b06afe16b5a2\",\n\t\t\t\"keyToEncrypt128\": \"0f72e035f2951296099f95d5b069b791\",\n\t\t\t\"encryptedKey256\": \"QfTTZv608x+ef4yooS7kHQ==\",\n\t\t\t\"encryptedKey128\": \"lf6Z8i8FB63MEXXpUvg1LQ==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"mefPqgciOnmLPUar7wODKlwBee+ObbntJVI9sdlgFToylFCSAxrENsY7kPrM/NA8/e5YTdMqBdAt3GRDbMuKgWo5APfFHeJkBzlrllO2dQ==\",\n\t\t\t\"ivBase64\": \"NUNcNWNzIW3JDbxUDbaUmA==\",\n\t\t\t\"cipherTextBase64\": \"NUNcNWNzIW3JDbxUDbaUmDJaAlDW0J7kATe9WpRxnwhZN+yvb76qscnI0VCpON4BzXby326FM1cERMdBr2ZzMHgW74YBmSTXHqnAtiDZDyLKW5Vb/0TJZO3p6QsV5kgb\",\n\t\t\t\"hexKey\": \"bce711e90341ef5671c8a1214793bc87\",\n\t\t\t\"keyToEncrypt256\": \"92df61f64234712ebfec49968312a024\",\n\t\t\t\"keyToEncrypt128\": \"498f92ddaee11f2e7c5f7a3b7e8e8bf1\",\n\t\t\t\"encryptedKey256\": \"Zd1dU5yGM8NdiWVoL8gFew==\",\n\t\t\t\"encryptedKey128\": \"S9wVCQqWuqLKi2g8/NTmIQ==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"MD4OmrTHsvEuWLHRsRedCHL7hMi6R1NwHX4IQ0cMPyWaYEdSKXeWRBtNpLCJMoMTukMq4mkRaQQPx5gihOyhwCZBvSamFV6TCeTlTtLhqcQ=\",\n\t\t\t\"ivBase64\": \"e/W4nvPfLI9dCu4yz86ghQ==\",\n\t\t\t\"cipherTextBase64\": \"e/W4nvPfLI9dCu4yz86ghQxYTN2S7M4bqa/sId7IuRS2YF3hXJn0B5IuJgepWmZj6brOHiR4ZZd8gCBhe9Xz+iK1gFEqfCmEoK8UDOagk5ESB9A7KX6b1fwC60R+Ax12YFrpUXbwbjMsORXr03UWpw==\",\n\t\t\t\"hexKey\": \"b76a65e60aa1d87671e29996f7c77966\",\n\t\t\t\"keyToEncrypt256\": \"b7b23a741ca3dbf5b3cdf7bdd3d9fadd\",\n\t\t\t\"keyToEncrypt128\": \"0d24ae115481b2f7fe796e65ea436a93\",\n\t\t\t\"encryptedKey256\": \"gacZlLK7s+hX/GLgdOwXTg==\",\n\t\t\t\"encryptedKey128\": \"yaxMmf85dn//u1lKh8L1yg==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"bcZj4db9jrIh/oJEGaPxtUX2ZmXP5awviE2kytmH4kLb5Jft9TyvEU0DyOMTN6CUJavfbu5ZnE1Lfvn/N34ee5vaXUT0nPmLzQ7gS+vQBubi\",\n\t\t\t\"ivBase64\": \"S5yCXvz8YTzRg0AatuJ88A==\",\n\t\t\t\"cipherTextBase64\": \"S5yCXvz8YTzRg0AatuJ88Aa2vvKR8lEUk5fgbLDMq6Z0F82X8Jg2XrqbxBiEcJg+c3YF7J0RtV38xC3OoHr/1pA4Hc4+i8dLdP4V9NPO0tq1B6GevlLZbk3inLiJTYzlV7spiyA7ReFAVB0vdgWE7g==\",\n\t\t\t\"hexKey\": \"cb32fa6fb1d4f07cf120ec658f2f3e4b\",\n\t\t\t\"keyToEncrypt256\": \"ed77bb0d2d607b36a78a929d5188646b\",\n\t\t\t\"keyToEncrypt128\": \"877615fdd13c877b03d04e179171b21a\",\n\t\t\t\"encryptedKey256\": \"qoUKR4aYA6fwzbJWNvhIPA==\",\n\t\t\t\"encryptedKey128\": \"tHEfkc7JCNLYIEw3mWuQAQ==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"vYJQLXpca2bgC7sfBREc6Pys+5gKl91zdfso8NMwSvUXwaUQiBD61TxzLOV7JsopM1L81FWu6FS9hxbwNPLI68y3uC7l7kg75OeRzM2smcu2rQ==\",\n\t\t\t\"ivBase64\": \"ylv6FzZdGlGfVFWg2jEmKg==\",\n\t\t\t\"cipherTextBase64\": \"ylv6FzZdGlGfVFWg2jEmKp0KBWg49Q2AFAN3TPQt9Yay+Hxwvw6qa6tbmuxeFDiz03tT3VxzDJceOlKnzvxuYlJiAjNhpfi2aw//BEWMiz6bMcxXEMiPXSzfcnZ+WOJvTRbYQm7CZJdbxNVSJ5Ul5Q==\",\n\t\t\t\"hexKey\": \"da42389eac5ae57964bd64f52ccc3859\",\n\t\t\t\"keyToEncrypt256\": \"2af78c33988e676d944ab36e0466345f\",\n\t\t\t\"keyToEncrypt128\": \"98606d939f8e1ac3226581247f59d0eb\",\n\t\t\t\"encryptedKey256\": \"2xn0wcN3mrL0zQP+w63msw==\",\n\t\t\t\"encryptedKey128\": \"P0+2KxtZ8fgfHMjlDcm3TA==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"SqI2mrCj4vhyIwkxbVP5/uQvMpum6CMcKgwxQsJNCp1+JJNyq9nnzmtWYXQh89rMMgO5zc8U5+5pIROKo5g8v4r3AMFHFKDbUlNWsME5KkE5XAw=\",\n\t\t\t\"ivBase64\": \"X30Pi67OxRHKFNw7pnAM1g==\",\n\t\t\t\"cipherTextBase64\": \"X30Pi67OxRHKFNw7pnAM1pUUklg+g7WGrr9yWteXu2qOd+jpvcGLIJkMPADCLiD0O9lHdH/DjrVGid0AT22LJQhwxZAVD2r60UnPHgPQvXD55Nxu1b+U4tB13OVI7Wd47qzRgAMxOk4gJeVrIGa6EQ==\",\n\t\t\t\"hexKey\": \"296f34c4fc4d9042d892f16d7ad8e2a1\",\n\t\t\t\"keyToEncrypt256\": \"f929363b2800c944912f4330eb225b34\",\n\t\t\t\"keyToEncrypt128\": \"c37358de080fae63ed0e5d8f85bad48f\",\n\t\t\t\"encryptedKey256\": \"rJ9cQKpsbJUWL+1ia3TTVg==\",\n\t\t\t\"encryptedKey128\": \"rWXoTnvQnWRVMaz+1lFgRQ==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"JZRrrMdhUU4T7oxe3bbSiYexub7LKI9hWnXuwgJDa+1Pw8atQ3d3oYcn1kKs4l6wdeBYH+VzEfCxSiduDqnXdGJONEsaUxBeH1sBebwIT7Zt2s9U\",\n\t\t\t\"ivBase64\": \"EzxtsZfzS/5EhPHvyvxl0A==\",\n\t\t\t\"cipherTextBase64\": \"EzxtsZfzS/5EhPHvyvxl0EhZI5qPu9k9dLVosRX7J0qt6Bjfm9Fj0Q+sV9ettLC1c+MSzo8NL7mt8GnZCJu4wWPM/7nAEHuVQrnHlGVOwprhqrN6DyaJZznST9TxRWjPZDmgUUMtmM5iKQY82EHHeQ==\",\n\t\t\t\"hexKey\": \"5d986fada8cf3cfc707134771668f8ba\",\n\t\t\t\"keyToEncrypt256\": \"e1cea3d5547733cfbcaedfe0858711a0\",\n\t\t\t\"keyToEncrypt128\": \"ddddb62b2adc4e20e7f5d2a7188bad83\",\n\t\t\t\"encryptedKey256\": \"VQ1bTrE+4EerhT7OlzkHCg==\",\n\t\t\t\"encryptedKey128\": \"YiQzOCoadLCqpG+KwKmcEA==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"GEidOk4LeRHVc/tsfLE4vEENg2NJF8mNsPjEHkFAqXM9oB9R8ldq+4w7XP6fok/4VqKsT56iqn64XdhwrRTCH53mVXmY+SSKx0xmlNXyreJBoqXvCQ==\",\n\t\t\t\"ivBase64\": \"EhKzrUmphPuFWoVzVmWBiQ==\",\n\t\t\t\"cipherTextBase64\": \"EhKzrUmphPuFWoVzVmWBiQ4KWExyBplwl+r2akaAHfFnZ+WF31RN0Tbi4JaTPCRJv5+NfAelOw3U0Fy6wHuxoq86LKBAwwGsjniU2K4ZvsopVuhOxT+mgxm7Nzh+mhZvC73FI/ttBWpyqjGLQYyolQ==\",\n\t\t\t\"hexKey\": \"1e653a42718fc824cd2bf64b8605a07c\",\n\t\t\t\"keyToEncrypt256\": \"3ce5ce1f63cbcd3456e5f7ee37a79bf7\",\n\t\t\t\"keyToEncrypt128\": \"fbfa50a6ed2198221bbc3ad36f65bfef\",\n\t\t\t\"encryptedKey256\": \"fWgUZ4rWDjUipbmd8D8K9g==\",\n\t\t\t\"encryptedKey128\": \"n7C5MU3B5tZ3Q6W5yUCY5A==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"dbd8P/qHP5y/Kdi6y7m8u4RlA0wAZ/qGtka4Hx7R/T3wqejrKr5roF5FhFNPqrzsKLevKWbGxR+zCr1k3SgKXFgzjcykvaezSTI9rRjZyZ3K2ToPGoA=\",\n\t\t\t\"ivBase64\": \"D3aJUcuhRlQJw9HbEE/1fw==\",\n\t\t\t\"cipherTextBase64\": \"D3aJUcuhRlQJw9HbEE/1f3zCgxQV7/zYVDV2a1/TDoU4mVFiEAqyBOlgMcICpdorqMgbwv48LZdeBZJN2hB4D60MuxXGM1E7EZhGlpXNitfPXYJAVY6gYZHUPeJt8ShzOGMLYwnqS1sCzhzqpGzTew==\",\n\t\t\t\"hexKey\": \"24aca4e1c5d46847e40cdee589997f2e\",\n\t\t\t\"keyToEncrypt256\": \"0ab230cee6cc08695b572f1c257ba848\",\n\t\t\t\"keyToEncrypt128\": \"ed0b7de39f0fb59c69d848cf2f34f621\",\n\t\t\t\"encryptedKey256\": \"P5B8ibTg4NFf3m/9oH8R9w==\",\n\t\t\t\"encryptedKey128\": \"zBDlKw4W2SvxOsS5We/cLQ==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"+egEayRDx7+56gqSHNV2rT4212heFf/yNi9efEvhb+HoKQIdQlebkTH5+GLqkUp8Fi5rmsyq4oXpQX8rYZLFf1qDbR3xhNmP0Zlbr+od5Pfxwr3Zh1+z\",\n\t\t\t\"ivBase64\": \"QAKilJZoz3Gmp0UeW7HyZw==\",\n\t\t\t\"cipherTextBase64\": \"QAKilJZoz3Gmp0UeW7HyZysXvL04ZDenuxxA4V7rd82gEXJhfEg6nhu6fOVQ/9+m6IVh+lYlDOxr2zWFV5FeeL9XjR2X2NIKrY53u4lMH4Nl/+KHjYsT+9AoezHT3uffE/p1wURbpoo+MSrwnAo0Ww==\",\n\t\t\t\"hexKey\": \"26c81d8ef6a36640bef0df8f39fe2b71\",\n\t\t\t\"keyToEncrypt256\": \"56b8d0faf66e46e8eb962af7c6dfdfe5\",\n\t\t\t\"keyToEncrypt128\": \"f77d4de235d7ee8a81ed153ea3642346\",\n\t\t\t\"encryptedKey256\": \"r3QMCRZkllDJMczdwcl7GA==\",\n\t\t\t\"encryptedKey128\": \"ZZ5uUuazxtgmLDRlt/T0gA==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"Mjc+R4f0MzJ18pPS6kch9+MkhLJH61nhIvr6XPlwSccT8CxmsMtSXdnPzDgSeF3QgBYP90sWYbvXf719L10caWS5uHz9nIiffXOYBO0L5lPoaFQVBaRGBA==\",\n\t\t\t\"ivBase64\": \"x6TJDWH3hy5Y2WJXFbPynQ==\",\n\t\t\t\"cipherTextBase64\": \"x6TJDWH3hy5Y2WJXFbPynaAq14cxKDrPZKZ7zgYcpkRShL75SYscu1v6nGZVojlI6z+xJRfqQWdyi8abeUIHN4q7tOICYg/pRWHFT0hIw0mLTyJxUXXz3065E0NEVHcZIjz4DSAD+3xEVHk8jaE3gw==\",\n\t\t\t\"hexKey\": \"d5ac40b0347a6c951cd34a67819ffb42\",\n\t\t\t\"keyToEncrypt256\": \"abf19b2e349c735eb9e3edaa559d5d9c\",\n\t\t\t\"keyToEncrypt128\": \"a7fc7d29268bfcce1938e9e4e84e6c5b\",\n\t\t\t\"encryptedKey256\": \"zeuQVOZ8/qS0R/U0q2WblQ==\",\n\t\t\t\"encryptedKey128\": \"ZiufPkTwixWZJLBkcjiiQQ==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"nf4QAPZf9qlynIew7+dXZ+LmtiGgP851OmalpPbj/OvBY5K4Mk9pbb/hxYpdETjVehnWbWS8sV951zniLWmZ/LKOPPWNn7e/cR/sCO/E+p0aj3tbAX4f4hk=\",\n\t\t\t\"ivBase64\": \"Rtzc8coUbOuwzPu5tBQ3jw==\",\n\t\t\t\"cipherTextBase64\": \"Rtzc8coUbOuwzPu5tBQ3j3kg48eeNZuoQlcVNSjXh11sTskiHx3EDCkWPm+Ut5q2+4PSmJkoKj7yTfcr0pVSc15ZUu7AyqKR7jsVofOKroIetRskz/VmowSr97PnNkqYx0AVlP0CeLlyaDuSfpca1A==\",\n\t\t\t\"hexKey\": \"ab9a260d8494fe26fa43eb08fe59062a\",\n\t\t\t\"keyToEncrypt256\": \"809b07d4ec716f083d8d3c1da98c21c6\",\n\t\t\t\"keyToEncrypt128\": \"49e266fed0be4cae2e772461117b2494\",\n\t\t\t\"encryptedKey256\": \"IG0/aaqszVubp1r4uytX0w==\",\n\t\t\t\"encryptedKey128\": \"Ii+djyzmIcXQR89NrrObFQ==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"NRfm05jJG58aYkohYGJg/Y/e+siJUCe7OxXimAA9IsYhSR0DVn7MSV7pmFST7pYLpCeZfKGu7nGnYp2gq62LchNHAdkL8asjs9BS/bLoPafdll1GKVskpVwN\",\n\t\t\t\"ivBase64\": \"ooWNpIumZbVs23qoRoAV0w==\",\n\t\t\t\"cipherTextBase64\": \"ooWNpIumZbVs23qoRoAV03Ck+pvdAybFBD1wtb2jzd5onthVrmbeTyaDfjiWx+KS0YM+H3LEd7ZWIqPrSjexSg3r8z2tIw/ckZveysq4IwPsAa2UVbOIkwtmW1aZ7tgChXAXHlndghxsnzNsFznuIQ==\",\n\t\t\t\"hexKey\": \"77ae1de4449c09247ee3e74b9897f864\",\n\t\t\t\"keyToEncrypt256\": \"34559811b52741387b231f45c60d2323\",\n\t\t\t\"keyToEncrypt128\": \"fb6fb894b3ce79e93e165a7dfb4d7c79\",\n\t\t\t\"encryptedKey256\": \"4k3jAh+j5DMcOq6q09a7bw==\",\n\t\t\t\"encryptedKey128\": \"VVvt8jQEfRYTolgUuEMP6g==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"PSd/uQCeVqQQxtrONK725A3HfyoaqNoDGHFtyI6TgIooWwCwSeA0BAYhJLC/C1DHPdANZ2dbsGFNE40opP28NWZGZpXFtnE+U/k82b/fNidJjxDqpG17Dsr7Uw==\",\n\t\t\t\"ivBase64\": \"ucKk3nY/ifKIb74DFu36bw==\",\n\t\t\t\"cipherTextBase64\": \"ucKk3nY/ifKIb74DFu36b791LQ+4clH11VWFJgJGYppEhjOd/Q6i9tGTmw/hBCJFbpFcWCeSYB7Qkkj1ga9NymImQCkXrlsL3bGjr+klfFZYGbUhR8DaVo5YrfsZoTI/VVlUU6WfwCLryqeBG4GUdw==\",\n\t\t\t\"hexKey\": \"0e6907d0d5b411d5946aaa1eb504a090\",\n\t\t\t\"keyToEncrypt256\": \"b191cd9aa05d64207b431b7988091601\",\n\t\t\t\"keyToEncrypt128\": \"dd73fb2da37c26708edb313dc1a32e7e\",\n\t\t\t\"encryptedKey256\": \"m5CXKTOJvLRdTBJ1ckRa9Q==\",\n\t\t\t\"encryptedKey128\": \"BwVxusQGSE4XsVJsvTEg9g==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"RvctZK/M0wMAW4j519YqayBGZ7FCy/NnoakUOFx85FKYyirWgVwP9Ueq9dym1aslMcPU36AayOhk+H3SZo3oQZn3NiPz9qwN43dgeMcxJIv8AuS7FRZYbHVGcX0=\",\n\t\t\t\"ivBase64\": \"1LFptZmHNpIU840IhbPROQ==\",\n\t\t\t\"cipherTextBase64\": \"1LFptZmHNpIU840IhbPROQJ7T+Dg43p+689kVtgB9igX+T1OXxgAXaSMFw8ve0iVr10WQMfcy4+p0Fsa3cc3aaC96EmPHl8Gi0aqPoyweqghP+viJGDdXOHcmbLn+FmdsKskWwaFnO7W5/tt3vxAHg==\",\n\t\t\t\"hexKey\": \"c18e71d522a922bd8eb4faba37c007b6\",\n\t\t\t\"keyToEncrypt256\": \"e116d9a4d7e45d092b7e0d0466306e68\",\n\t\t\t\"keyToEncrypt128\": \"bc7bcafb10f6836b26a975a6808f9c0d\",\n\t\t\t\"encryptedKey256\": \"+evaGWPXmNnWVabWMUzfIA==\",\n\t\t\t\"encryptedKey128\": \"Ake6rwK4ovemjf5xtfAypw==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"FrgvmV0OhfAyO8UCFV+2+czkvSZvb8Ee+ixNH1BVRUZ94ulvarQ4mqi129bQyXsEJLY032uTFASyoNIHp/3+51fzdZTLRpqdnEMehtoTFK7QNi1B+9RkEGQU+tOv\",\n\t\t\t\"ivBase64\": \"HaY9LZTnbLwp2Qw/wnkqtA==\",\n\t\t\t\"cipherTextBase64\": \"HaY9LZTnbLwp2Qw/wnkqtMe5FCapr+XBPIBGx5VBc5SpWbM8s7L1xsMpldkoUUCe4huEYWFDCAGUxjkZULTdmW4ATwwFp0ZqomrudviRF7RsMGwvC/SJ+2cAMo0A9EtNXpVRiDvJ6nGiMv/On5U1gA==\",\n\t\t\t\"hexKey\": \"947af6776b0c4f9ff943c887612b2c4f\",\n\t\t\t\"keyToEncrypt256\": \"08d99c9785fbf408e99a0853ca810384\",\n\t\t\t\"keyToEncrypt128\": \"c147a124c891fd8b06feeeaea9cd6c63\",\n\t\t\t\"encryptedKey256\": \"5yNSpIyhqMWhDITHXiQA7w==\",\n\t\t\t\"encryptedKey128\": \"HxbZdTZ3kU0xgV0KNGgZfQ==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"fMPf4u/d62a3lzYUv+n2OARPs0vyw/TKebJT91Jc6KUOfsLnTYUMmK92Sezlih7RezHmwO5cdNbmTUxXVfuqk7TO0QqOGxsC8NaDPH5AdVJh/elxYbwVbyHxL++NYg==\",\n\t\t\t\"ivBase64\": \"fR44k1Z1SucXuf5laytWTQ==\",\n\t\t\t\"cipherTextBase64\": \"fR44k1Z1SucXuf5laytWTUFa3jy0rSCNtjvNRzrc1JNup6baCpra2E55aCbGSA3xdDOQ4Z/bwwfQZ7crGB+mGHgJiyCEKFbeWCa5DO+/Pp2GFI/3vIqdL98PQnjbmuF/ZSMBdLTt+nK6/Pr9JAfNCw==\",\n\t\t\t\"hexKey\": \"dd146ef6c4456937a3d8c0b5a4ec4d80\",\n\t\t\t\"keyToEncrypt256\": \"bafbb7a9ad551f5261a4c5d1dac8d075\",\n\t\t\t\"keyToEncrypt128\": \"e9c3fa8a5d0a8f22e0ecf08ecdfdc3b1\",\n\t\t\t\"encryptedKey256\": \"ZpX6IFXWoC2c9gGHfMokzg==\",\n\t\t\t\"encryptedKey128\": \"TLxQ++E9Qd2j3+MkwPdcaA==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"DlVKL8xYGczpqvHowPHHfZta2n8eaqhWOmGMIWplbA5e5dRgBBZRtUtGw+avrBduTNyvmN5rf97Udey+Zp4rCE3ZExS1z+qVutwr0bbky7WFxggF6xx9Gxsio+WN+NU=\",\n\t\t\t\"ivBase64\": \"GDL6iN0EYWcupkU7IKGMaA==\",\n\t\t\t\"cipherTextBase64\": \"GDL6iN0EYWcupkU7IKGMaDjyozlKMTYAEF4ejsRwNPNGe8Z/CxoqSBI7dtUqH8RrOYtZNwZEMQnBtvS/N+r12K/CiVWFeLXolbSWO2CB544JnqyFnSuDnwxzO+BkA9DRs2CAlp49iFCuhcoFN22Y1w==\",\n\t\t\t\"hexKey\": \"b10037709cbca309db745f76d61c618b\",\n\t\t\t\"keyToEncrypt256\": \"111a6442e9e38ad7ce1f36dccb51d73b\",\n\t\t\t\"keyToEncrypt128\": \"9296e8d14191e9e607fa191829bfb9e7\",\n\t\t\t\"encryptedKey256\": \"ZkGcaEUa63q0uQG10K4Khg==\",\n\t\t\t\"encryptedKey128\": \"xBeodzJnqwF/fvO1Y5tnEQ==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"zkAxTtiXn4rCMJIKaBQ/bXL06VVvJ3XH/I6ENQmQyo1z2VdpPrHHllc+yPhmSzMcgaIcgKyEcA7nLZIGSekhFf3GajJIb3hUqXJqJfe/5DL/5aZdUz74wEz2llsPn7+c\",\n\t\t\t\"ivBase64\": \"vr6HVnuNFlYtQLHPpfTqWg==\",\n\t\t\t\"cipherTextBase64\": \"vr6HVnuNFlYtQLHPpfTqWhyqgaXZIF60Mo7ZfLE0b8aay4GEm2MyUuCnWiQkJ5z1sXHenNiHJCCz8/lipUqcV/r6jn4ZZvEv2aG7hZb64ZjtTojkOYoZsJpzZ9NZqmuiL20FvWgmbMRRtEJzzM/wCeG+1OV07dWSCtabxSevInI=\",\n\t\t\t\"hexKey\": \"d1278b714121fea72c7d540c30283c4f\",\n\t\t\t\"keyToEncrypt256\": \"576366260e4265d278b6193e4898e6d3\",\n\t\t\t\"keyToEncrypt128\": \"5c903a3fe73acc9233121ab83966cda0\",\n\t\t\t\"encryptedKey256\": \"pRfqdK8ZW1uirBergFvgLw==\",\n\t\t\t\"encryptedKey128\": \"V3b/dJgfEfN/wHS5IRzpTg==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"D8vC8RP34D/46ot6epxDMAyE4V6ASRWKeaHgmepLWr/GD7U5vbp7nmQ2Ovlx+mrkyigjfOEJWQWpnMHJo14a2NyqofmVTaBeGnKUXsZBPNSjCeFvAEeSt1tIvFGeolWACg==\",\n\t\t\t\"ivBase64\": \"WGZRt5V9SkDG1totRttwWA==\",\n\t\t\t\"cipherTextBase64\": \"WGZRt5V9SkDG1totRttwWEDBT3O5k6ohOXP80itI9IqNayLYwznzsmvIutr2HsDcwmCOOr9Weft1IUa8NpQzd3Ahs5S7c98Uc7jK+DBQBYnvFKA60vpBSBhwLm2FubSWA/1nSq2CDPMvCQOWcHKdW7yY0zBlsf3gQzccgVdPCJM=\",\n\t\t\t\"hexKey\": \"a70f56235509305bd564d1ce8f60d9ba\",\n\t\t\t\"keyToEncrypt256\": \"bfee1c50343d9ce11f3e97e61db82bff\",\n\t\t\t\"keyToEncrypt128\": \"48f27cc40191571707a90ad5c7a13653\",\n\t\t\t\"encryptedKey256\": \"ZuRgLHE6bF4qcBrNXx3PFA==\",\n\t\t\t\"encryptedKey128\": \"otyQmRWNgT+FK3n0NOw4tQ==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"bS/NgnhPK8yjIP890UXhy9gaGcpjt0nfdP/8cAGRXK7z2omtkT/HX1Nj6jPe0zT/6vg4XskV/CsdGza8iL8iqOq3EG0GMKPfbLVIlZxYZYqrulUXpL1l72P3jkmquuZ+oXY=\",\n\t\t\t\"ivBase64\": \"qrE2dSB9oMdInDDugHuBhQ==\",\n\t\t\t\"cipherTextBase64\": \"qrE2dSB9oMdInDDugHuBhfbpDcek2E0rqN1W2tM/nneK4GJhhTDsOPNWrTRDLJ//5lRjTrtBJd0vLyYGhZ0YngtW4TKOeDjqT9F65KbMzh9VrVZOoJFh/ieskxLsJOAp/CGaUgRp9FiLfenyoFEkT0dxugOkvoOe7pJjWLfIJzM=\",\n\t\t\t\"hexKey\": \"6be5dfb7053e165f8735bfb60b9d3c2a\",\n\t\t\t\"keyToEncrypt256\": \"fba529983a4c8631af27f4f0dce237ba\",\n\t\t\t\"keyToEncrypt128\": \"9aa84152137d82f20abe6d4b8d6e5bf6\",\n\t\t\t\"encryptedKey256\": \"tupxrTWxjUkQ30ItBYw1Wg==\",\n\t\t\t\"encryptedKey128\": \"c6pxrZmFkYo/03nuTlM8Eg==\"\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"YG8+cbWzVlr9HaIK4YhA2PjQ1TVk48wGdGHGCJrA1LLkI6K3lApV04jLib2WZX1qFHYnYlxdvsI8ae3T4am4bARk+CfNkx99IKDXA9mkCtG5zr+7qyA6W1u84S0MAkTY9GT0\",\n\t\t\t\"ivBase64\": \"KRCJMeES3hBuVM0996s4Cg==\",\n\t\t\t\"cipherTextBase64\": \"KRCJMeES3hBuVM0996s4CsNsDoZ8uCegT8HgcTv5eh98AzkHfLJXHChsD7ujKlXZ2ruVr0bJfuWorKfgBndfq2p1fd7Uoqz+C2rGB9kGogPw2wdIIJUi3Qw6AOs2jIzL/DeA6lBp+DMTuaEFRfJYZodyH7x6F+cjmSuqZmqKH18=\",\n\t\t\t\"hexKey\": \"a88c822d12024bff4730222f79e4cfae\",\n\t\t\t\"keyToEncrypt256\": \"de44aba95fc04c32400a995094ebc04e\",\n\t\t\t\"keyToEncrypt128\": \"11b8e5d87dc83a84678a2ade77347585\",\n\t\t\t\"encryptedKey256\": \"zppOOKsKdYql6HXy/BPhkQ==\",\n\t\t\t\"encryptedKey128\": \"Fx/ft3T73N39V98+gQ/uuA==\"\n\t\t}\n\t],\n\t\"aes128MacTests\": [\n\t\t{\n\t\t\t\"plainTextBase64\": \"\",\n\t\t\t\"ivBase64\": \"HIY4cTuAkAhcQJJHotO02w==\",\n\t\t\t\"cipherTextBase64\": \"ARyGOHE7gJAIXECSR6LTtNuN6zdinPUttnbGaeDrYgxD7JXSbdGDbx2DdTULVMkYVhUa3BwnY4ZZ32NE9UaRRBQ=\",\n\t\t\t\"hexKey\": \"4bc1c3c7372314515336a9ee511f2010\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"pQ==\",\n\t\t\t\"ivBase64\": \"j/ryZOTIEgQpDHuep9cQkg==\",\n\t\t\t\"cipherTextBase64\": \"AY/68mTkyBIEKQx7nqfXEJLbxmBks/PhMNi5exA6qTFA7xEnPvTrX5+0yySc+Ms2iBrG73nZzQ0FBqZ6QJihA3U=\",\n\t\t\t\"hexKey\": \"d49b1428cc8bc24f6de56b07982bb275\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"fmw=\",\n\t\t\t\"ivBase64\": \"8SqPc4BuqD0GDH6z2qZn0w==\",\n\t\t\t\"cipherTextBase64\": \"AfEqj3OAbqg9Bgx+s9qmZ9MCd02qMaXliSeJfdkh8E/YaikG8nAC+cEHz2+BsqgtapcTIR26zE57PCFBAtpic0Y=\",\n\t\t\t\"hexKey\": \"5008ac0d3da17ac3ce15b5b379a3d7b6\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"v14a\",\n\t\t\t\"ivBase64\": \"OMGjfbwjimxNp8RrO7OwVA==\",\n\t\t\t\"cipherTextBase64\": \"ATjBo328I4psTafEazuzsFQkj2r1zWTtlAKlStvUBC1nmJ17pzH7Msz1wW0JDSx0fyJagnMi3YZyvabh6FqjHDc=\",\n\t\t\t\"hexKey\": \"652faab76dc0254d2985453e8bdaaf55\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"lh+Ljg==\",\n\t\t\t\"ivBase64\": \"Bp3ALw6jvdqCKj7Kw3yi6g==\",\n\t\t\t\"cipherTextBase64\": \"AQadwC8Oo73agio+ysN8ourNshRMBj8zNwJfuPG3z7kgNBniGYFLXBFXbKKZXbQG1V+zdMvt5tuBAp4lOuuVUx0=\",\n\t\t\t\"hexKey\": \"d4240a0d5b556d1dc7489b05556754a4\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"29WWBYE=\",\n\t\t\t\"ivBase64\": \"UHeLNGVE3sWSm+ErLyU/Tw==\",\n\t\t\t\"cipherTextBase64\": \"AVB3izRlRN7FkpvhKy8lP0/KfmRnU407lJS0SawRNUC4+P5te5YTFT2Ut5w3dfkK29SkeJnJYJtDgOSHTGgbq9g=\",\n\t\t\t\"hexKey\": \"02405f87171742123873a032680b64f6\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"1bVjctu1\",\n\t\t\t\"ivBase64\": \"soBz73BECrBXi0wH1f32mA==\",\n\t\t\t\"cipherTextBase64\": \"AbKAc+9wRAqwV4tMB9X99pjSApw1ViSoSIzkYcGsiosDLL3MX88eZzQRpHNn+ix6r2RL/PiMudg5hqWkT6Xfc/g=\",\n\t\t\t\"hexKey\": \"d939a3201e4251ba8f26d326f3c0678f\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"7cNfimtBxQ==\",\n\t\t\t\"ivBase64\": \"MMpA7DmMjlwmROh6JhQ8ag==\",\n\t\t\t\"cipherTextBase64\": \"ATDKQOw5jI5cJkToeiYUPGoJO111QAYjiKsCGLH2//BkGDzwxoV5QWsGwf2E2to900HxHwEhPh6LmdHPq/71U2Y=\",\n\t\t\t\"hexKey\": \"aca96cf67c7c5d26adc413a6c945d0b9\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"ZcfUD18sVq0=\",\n\t\t\t\"ivBase64\": \"KG14fgPsIouuG1tCrJfFkA==\",\n\t\t\t\"cipherTextBase64\": \"AShteH4D7CKLrhtbQqyXxZDJPtENpU72nHJabPlJNwRmqeEVYJxOMOY6WcsC/1MC3viYr0HTdmVhOdNrUphomw8=\",\n\t\t\t\"hexKey\": \"03ff51e5a3c8c469aa41dff7b65283fd\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"QYbdZr6R+rqa\",\n\t\t\t\"ivBase64\": \"ZmHRnRu6r345U6OG6RSiaw==\",\n\t\t\t\"cipherTextBase64\": \"AWZh0Z0buq9+OVOjhukUomst4VFTy3WkI8WrS+VcAEhDewOXxKdgy603lBIYXOxVvo0SOHKCo+cbgWU3nQSGgK4=\",\n\t\t\t\"hexKey\": \"a76e622dd3299cb8949054a0cbfeeb37\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"UWOnb0JrDphtUw==\",\n\t\t\t\"ivBase64\": \"wQ/nh1PRUP+hl4zvz1saOA==\",\n\t\t\t\"cipherTextBase64\": \"AcEP54dT0VD/oZeM789bGjgN+mgB6n2nabZFgjasnGE6MRez9Pfx9Unz2kwdJU51sqHS4NPIwYwHJ/w2wLFfJOU=\",\n\t\t\t\"hexKey\": \"af77d2921a71626ad271985dbee10022\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"n3/R8KP7vFGYo9s=\",\n\t\t\t\"ivBase64\": \"yDhdMnFWD24z4QJoqZTNJw==\",\n\t\t\t\"cipherTextBase64\": \"Acg4XTJxVg9uM+ECaKmUzSfv2UDPviApkMiWqFuzmWDwVcg82W36NX5yJaiQtElb4I0fsZI8DUYtSlhbbJrPt3E=\",\n\t\t\t\"hexKey\": \"607f8181583b539410ce25b449f30676\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"Ji4KDlTJn1/NcHOm\",\n\t\t\t\"ivBase64\": \"SNDQ4+oNSYllDMUMsHYu+w==\",\n\t\t\t\"cipherTextBase64\": \"AUjQ0OPqDUmJZQzFDLB2LvsJfzhrMi7rofFWMcBzW0ltPq7g60Y63vV6k6LYS2WzSZ92pdVQcYBg2hEv4Xz45Zg=\",\n\t\t\t\"hexKey\": \"dd7c813d80cbfb561b926c4b5780c5b4\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"Aqyl64iTKbxEGsVfTQ==\",\n\t\t\t\"ivBase64\": \"mZCLgD3t5P3DZMlJ1CLEEw==\",\n\t\t\t\"cipherTextBase64\": \"AZmQi4A97eT9w2TJSdQixBNpeMI5mXqPJ8byoQ9LpaDUwkrP93c6v/U3YjvWV+n69kGbSkvPceGWSZbc0QaBKUE=\",\n\t\t\t\"hexKey\": \"822850905d798ffcf0e7fd07eb4decc3\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"cIrQCwzmaXbqThhEXug=\",\n\t\t\t\"ivBase64\": \"pWqJayX8JBU8I3c3m3YzMA==\",\n\t\t\t\"cipherTextBase64\": \"AaVqiWsl/CQVPCN3N5t2MzCYExJc1eVUVw0KpqueK2W/GGgarsb/jzt0h41uPuC+t+Zh0asH242xWlkmpWbtGiE=\",\n\t\t\t\"hexKey\": \"f69edcce257a284f21d8b51125e0790f\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"/Ly4GmtuCdpbfzaiYE2O\",\n\t\t\t\"ivBase64\": \"rLufSRZ+oXDjf17BjTpQEA==\",\n\t\t\t\"cipherTextBase64\": \"Aay7n0kWfqFw439ewY06UBDl1MSxSR290hEfCuWTRr/6Njd+d1oYyERrYh80O7+FO61Nx7NeGthxiaRlq8doPRc=\",\n\t\t\t\"hexKey\": \"7f7ba5619406f86b3c2ae2617bebb14e\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"bocqNMqPsqUUJJvRKClYXg==\",\n\t\t\t\"ivBase64\": \"Ul06MQ9FD+UO4yl0/X8Uew==\",\n\t\t\t\"cipherTextBase64\": \"AVJdOjEPRQ/lDuMpdP1/FHu7c9af1I+IQ9krdT9CbHBu5yoBMJ5s6IOpXYMx8TxuC+xX5WRDiUhjLuNExHa3KoDzyHt3hI2gRNWgsE9XGCrx\",\n\t\t\t\"hexKey\": \"b231fbf111c28466042b33c6f40fa63c\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"Zh7OxcpVQUbIpk/NRAEdRGs=\",\n\t\t\t\"ivBase64\": \"aneu6FuTMb/YARUHSKrs3w==\",\n\t\t\t\"cipherTextBase64\": \"AWp3ruhbkzG/2AEVB0iq7N/H1sIAPBpxcnhWAPEcnyJnoJSr0jeakshEyUmUuTmJ3BwMYNTKTG9XiiUbgpp+V+wIOEe4CtPjzo+DDmYUOf7S\",\n\t\t\t\"hexKey\": \"a9ead720e6dc383fb1203290d6a20eba\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"Wxb8RyKgNCKj0y1NftqAnpLt\",\n\t\t\t\"ivBase64\": \"lPp0REgCoKnV7hIYJNZGiQ==\",\n\t\t\t\"cipherTextBase64\": \"AZT6dERIAqCp1e4SGCTWRokndXwNVZi4Iwc8+FSOGDtUcyOX8aMpOoaxHAHjSSHqtP9OdwPEa+FdXocucv5z2/3CUG4uca7/xf3j1lqTFGyr\",\n\t\t\t\"hexKey\": \"63aaed5654c4f9459d9f5e572ab00f79\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"7S2V7kAP7JVzkS23kUkQtZ+goA==\",\n\t\t\t\"ivBase64\": \"Ap0xZXnITZllvrXeKx7Ixw==\",\n\t\t\t\"cipherTextBase64\": \"AQKdMWV5yE2ZZb613iseyMepFdp+66XdewHXKh2fOVVdpXvGNBABOW0pr3chmBqdMTCO1l3v5p0y2uA8B9dbxjn0GMqv92JDgUUuorxD6ou3\",\n\t\t\t\"hexKey\": \"a0e90923ee5c42068fbb8aa08c11179f\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"QTLX3LwJZ/QtqKPoZ5C+TUhhI5M=\",\n\t\t\t\"ivBase64\": \"dPis0GOt6yE8naL2jDx7bw==\",\n\t\t\t\"cipherTextBase64\": \"AXT4rNBjreshPJ2i9ow8e29RpL4AVqvDIlkz9rSmmSuTR98NqdYAMu/dnKawDj5pcpkOa4hvnVc2Pn/Q3vV0bWBasAt0Q1Cu2JKj+AWTme5T\",\n\t\t\t\"hexKey\": \"2a8cda6d1b11579a57d65ce081cd95a6\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"GQW/VgubLMlt0xaiwhXdgwLEqSSD\",\n\t\t\t\"ivBase64\": \"ToMpp9878dm2wK5/LFNQFg==\",\n\t\t\t\"cipherTextBase64\": \"AU6DKaffO/HZtsCufyxTUBZB77JiiK66KtFKK3C5a2zDRkhgTGfDDCzA5lRYvPFG4FldEFj2LMdUOnMfVmg/fGxK1GPU/cbttagsHadA11BL\",\n\t\t\t\"hexKey\": \"caa97625b8480817344e0bf5c058b9a0\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"wzlZrklvPksRd76n3nET0GERn0FzSA==\",\n\t\t\t\"ivBase64\": \"Dyj+0rUApDIwhxVwCSo6gA==\",\n\t\t\t\"cipherTextBase64\": \"AQ8o/tK1AKQyMIcVcAkqOoBYZhNr3P+K8pB+A+ipdbiyDcUJm7K6pSHFMJ3LmBar/H50pSEizsd6UC+Wxrt/B/okMWdIBF34QA1oJagEXt23\",\n\t\t\t\"hexKey\": \"9d2efa42a223244dac12f8ce3e1ce943\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"DfPkD5hS9KTC3/A0715ZlLcravIEHNQ=\",\n\t\t\t\"ivBase64\": \"/G/ykgqNjCFb2q4a4tjRlQ==\",\n\t\t\t\"cipherTextBase64\": \"Afxv8pIKjYwhW9quGuLY0ZU0V2+i83Xua97MKfz0Ay+4bokKYsRMbcPQsVhlsuLgfpMI2Xc6riQpeUVsrxwGqbhnFgCV0LHACb3N5wgnDSY4\",\n\t\t\t\"hexKey\": \"63ab54ad22b46064bb3c7ac818515379\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"rKGf+Ufo9Q5EJnsKB0iPfV5DSd8U735P\",\n\t\t\t\"ivBase64\": \"E1u77bIZDfnr7Z3roR2EqQ==\",\n\t\t\t\"cipherTextBase64\": \"ARNbu+2yGQ356+2d66EdhKlne3C1nHZBH0F0qDNFtLIL0RBnwMDBDwSHGAO9uMdNQBiilPHG9LeBAn+x2pC+nGMHPkmhTeLO0REdt1ZPJqNz\",\n\t\t\t\"hexKey\": \"6e8612325c75a12c4cf355ceea874d39\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"BMeZL5Vtu3MPoE0bNr9zs8TiPHDsAkDyqg==\",\n\t\t\t\"ivBase64\": \"pPR6SSPLtpR7XcaGd2Yf2g==\",\n\t\t\t\"cipherTextBase64\": \"AaT0ekkjy7aUe13GhndmH9qfPsG59DR8EoKsEnpd+8lEVYQFH+psCRovyMOOTjrdK4FN2hDpLwWaNwy1M+PccZco2q4kEQDL5lScgi7zlv3w\",\n\t\t\t\"hexKey\": \"7fac2d23ff242987ec75157f9006f41c\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"tkh94n0B/H+sUf9xpMB5RhmG31TQafy8dfw=\",\n\t\t\t\"ivBase64\": \"vOhYWcBoK38QJ1+1wj4rkA==\",\n\t\t\t\"cipherTextBase64\": \"AbzoWFnAaCt/ECdftcI+K5BVpkCwJWdUfI05RxdQxRc9nrh6WvMDhntSNcv+XrBHpGE611MyDJuxRvU0s3WKFVdlgUJVvU3MpkXqkLm95oh9\",\n\t\t\t\"hexKey\": \"160623628d3b5bda63032f539a0ac37a\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"x4POSC286qLRU4yKl1uF5MjPdS6VwrmmxWhc\",\n\t\t\t\"ivBase64\": \"zl5QOb0/3ZhPftjKpd/wZw==\",\n\t\t\t\"cipherTextBase64\": \"Ac5eUDm9P92YT37YyqXf8GeiMwuM0ZvWdm6myLqXsFyEIMa0cP+D0v015vnLwsXGmcMCmMnBCOXtPpTW6UgUzmgDxWjJpbqDYskQR+y6meKe\",\n\t\t\t\"hexKey\": \"79f99da922c9cd54fcdced69fc404009\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"LVsaJFgnd+nSLwHMUCYi/m0xYkK/faKC5F+wVA==\",\n\t\t\t\"ivBase64\": \"z0qE8rT1/WClYbwOtQDrzw==\",\n\t\t\t\"cipherTextBase64\": \"Ac9KhPK09f1gpWG8DrUA68+K6aDBe7714pZH9W1Knm75Gc7NWuT38jlysE1SpUWFLSLqMI6QKyxv4rk+fh1I9hUNRjCmgpTwztUEgjqkr9Ku\",\n\t\t\t\"hexKey\": \"dd8b987a39a0828ad018a23bfacb0c82\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"0/kJgeGozlPi3O2XhzgxB7xprhHxW/3PeQo2O/I=\",\n\t\t\t\"ivBase64\": \"lqteL/FieN+IqAR9A1EqTw==\",\n\t\t\t\"cipherTextBase64\": \"AZarXi/xYnjfiKgEfQNRKk/72gf5cqNJ/osxVdKQ+fbV2km4k4ZLKr6lv3nT6wkvWnddqndPtcGVZQ+H62Kdt3fMj0qhxMwTTQs4yO2SDrlV\",\n\t\t\t\"hexKey\": \"9e6dfda20d834c236b2792f2d4f80897\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"mS2kWdZax9XrFdiWfVFD/yiv4zrU3gfTFpqOWocZ\",\n\t\t\t\"ivBase64\": \"9PzH3Gi0Y0+LeYcIb6BYnQ==\",\n\t\t\t\"cipherTextBase64\": \"AfT8x9xotGNPi3mHCG+gWJ0KfyK0NU1er9CrAQIJL66GbaxOrl4Mfwq7wxy3S223UGF+3YuiGStIr8Rsh1fjbQz+zQsWAhkG0By7zplHkXZ7\",\n\t\t\t\"hexKey\": \"3258892fbef3103a857f4aaa656552aa\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"GCenwUlCqwjjJGf3iX1AY9B0GRJqw803DAr8UP8prA==\",\n\t\t\t\"ivBase64\": \"/GyIrHK3/3PXNIaK1sgAFg==\",\n\t\t\t\"cipherTextBase64\": \"AfxsiKxyt/9z1zSGitbIABZGi3gxvhNIx2MhLRV+OPJ9m47cJc2kbgETnmGWE2oIqDwpZVJ5uTZ0fNp00d9de6/wgaf1EEc9e2EsmjqDVqx3\",\n\t\t\t\"hexKey\": \"274b3cde7c70a217bd4ab1c735e7d7df\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"UBDkTQ4MM8CLw53qFA2dj4U3tDkGwu0MQGDFssmzMok=\",\n\t\t\t\"ivBase64\": \"LjUqN9R9iqBxxHEwKqHw6g==\",\n\t\t\t\"cipherTextBase64\": \"AS41KjfUfYqgccRxMCqh8OpwKNDEcsU4AERtM1fdNT1JXPIgj8yOM1HLjG7zvb44GGNpOUZbG//BPRczd8TfX+jl4/nCjb3uJ4EefZfU6wHs7gjiNvo9ZW2dYTn+pkxoeQ==\",\n\t\t\t\"hexKey\": \"ccb579e9e348472fb49a14323f22250f\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"v1Murc5chJeh1eNYpu0e20pcU+pf0ykCIMGxjWN+lXXc\",\n\t\t\t\"ivBase64\": \"IuPYE38tDYbff6cmwZWDlw==\",\n\t\t\t\"cipherTextBase64\": \"ASLj2BN/LQ2G33+nJsGVg5cRf4F8zMEMLgH1XKI49kc/fzlf6qyWLDPR1Ro2KQ/LW9t+2uHl6oPMRYbjs3xsNQUqrUhQtujByCS13krfq6KmlwI61XjPq0CHL4GhmrnXew==\",\n\t\t\t\"hexKey\": \"f77ef6f6b56d19d1cb9ee426a81436f2\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"PgWBAQ+cdg+MzXTM4bevRyYdHGwiOHd5DHqCm+TMRpuZ8A==\",\n\t\t\t\"ivBase64\": \"8ItikBBCFikoE9M5nE/azg==\",\n\t\t\t\"cipherTextBase64\": \"AfCLYpAQQhYpKBPTOZxP2s57zQS2wHiLnS/jIKZ0CXY7fAaelB+KBbTaSmfbF5Eb14Croln6vR01EfPZWbHewmHpAea9BwY1epPLctA0XZQX1ljp7l2Z3fIXzNNoOXrPwA==\",\n\t\t\t\"hexKey\": \"4222a538041057ee048773224c260232\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"lm1jiCSdLwzyC2dYCBzayOyQ9ux1iDGNVrHMd8SeDNCNSj4=\",\n\t\t\t\"ivBase64\": \"sBWuk1d4pXQApLBIhbAE3g==\",\n\t\t\t\"cipherTextBase64\": \"AbAVrpNXeKV0AKSwSIWwBN6CEGSDH+DJtxEg9cjblbF5ZJc7Jr/AFzrX1ZEBNhGu89u2DiuTLmBXhS0YLNEMWzdeOTkw6JVQ6XaDW++loaGw1LyhLfr0nvnBYfzfinUwHQ==\",\n\t\t\t\"hexKey\": \"442614ad1b8365157ed0fa52c83ff86b\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"2fNV2wm/FosU58Sw6XwctR1ohk8ZAI9vZ12f1/jRQbC9BATQ\",\n\t\t\t\"ivBase64\": \"iGPiBGw1fRVgJl8loEkUHg==\",\n\t\t\t\"cipherTextBase64\": \"AYhj4gRsNX0VYCZfJaBJFB75Yp/sk+bLVOcECnuT3oNWhSvQWnNnppveYBb0CwIZecH/ae6J62wjM8aQZi+Oca+yB7J2Vt4A/hle28eGSKPtuH4pr8/5BLfjJzgXRbJzsA==\",\n\t\t\t\"hexKey\": \"e173323c0d0a0a6bcc7965f4e4eee4a3\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"DIzX/UskKK4iEVyG44RAJFRi7oflGyTKeNqdrVnH8vSZoLJhFg==\",\n\t\t\t\"ivBase64\": \"3F+fh4fOmLPTqefwD4m15A==\",\n\t\t\t\"cipherTextBase64\": \"Adxfn4eHzpiz06nn8A+JteRFm2BMvgxnOPYb43vKk3y8XPqJ5muAtLmdWVpK50Q+pVPwG01B1LV/Xqqye9JG7++KyUp3aNDzgzRBSAaUFhAH4dVrSbjJQ0vZFANMJx/qcA==\",\n\t\t\t\"hexKey\": \"e5fcb4de1c40d0062d332422bfbd76a8\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"huW/lnH2MBZo+7T9Kb7EQ9NpgLSjwhdiw+egGOAK2+8RYQuff3s=\",\n\t\t\t\"ivBase64\": \"8tyzDF+kkb50pFXvATs4QA==\",\n\t\t\t\"cipherTextBase64\": \"AfLcswxfpJG+dKRV7wE7OEAMSRUP3rZzX2tnJ97/Ifv5WTHxJI8lMV/uwmESy2GQO/dpb66JKSJN+SyqH9tumhlaelmIBVLimbGpALQlb6RVW5KRloPuQ727iS9CATM7rA==\",\n\t\t\t\"hexKey\": \"4a8fd8bae4db8f1701a5e8dfe2b0d44f\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"OwIDkTAcA8t1n6KQ1TNr5vb6mWanshsP45qjFo65FEJPY7nMHQMF\",\n\t\t\t\"ivBase64\": \"A1Mx7qLmW0mKaSrlzEtBdg==\",\n\t\t\t\"cipherTextBase64\": \"AQNTMe6i5ltJimkq5cxLQXZaHrAx6MO+V4K3NNjTSYfyI3rAiWYPkVDzedDoU0WMrjXVgyGunUopr/vIs1alRF2pV+YwyA+D3TDZkRFPF355XEhLrMgarujyAQh//Xfvgw==\",\n\t\t\t\"hexKey\": \"f1f5cb828053fbd23306c63199bde970\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"pH/wmBCet68C+8hIKZx2l7lWVcAi9bkeedehxwnAmFvBiFGzYKKGZQ==\",\n\t\t\t\"ivBase64\": \"ECZpGdeWipm8Ut1Qin6Rtg==\",\n\t\t\t\"cipherTextBase64\": \"ARAmaRnXloqZvFLdUIp+kbZyEGaDy5gdwh2MX7j4okJlwPiuslssiDmULbMRQMAlDvPal06lbjJImQbHZDuM7rAhaiVxlmw78CudG7oOzUYUlDh+dSDAtXchd8J/B1NJMQ==\",\n\t\t\t\"hexKey\": \"cf526f7363edfca91a451e35f5f74680\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"D0JTs+VfvOEXwjurFLFB/XzgSuQRwswy6GyLEOnTBXx4T51hQ9/F0tM=\",\n\t\t\t\"ivBase64\": \"byKRuNhU1xC0YzDztSX6dQ==\",\n\t\t\t\"cipherTextBase64\": \"AW8ikbjYVNcQtGMw87Ul+nW8JKjCQpYMD0+XGGMN0DlHDeCj+a0vqhSf9mrZYyBvygBrh+qMVD8Qfpj+1f82IYDOBVeM1cpkBNvna3ct0meWx5WykGOxiaOjrD3zg7rKRQ==\",\n\t\t\t\"hexKey\": \"cb944f8475dd29b3a77270023c4f3b3d\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"+vW4+VFrG3I3ySs+HWjl1unfYDTFhZTOUfqHISae4vbkoOKuHMXQGcxl\",\n\t\t\t\"ivBase64\": \"IXE+On8vYU9CZHw6CgvmPg==\",\n\t\t\t\"cipherTextBase64\": \"ASFxPjp/L2FPQmR8OgoL5j6jUqp6kDwqGKDL79u7ktlmeyiHhH70ZndNOPNqQ/tNNyw1FMt21BYU6HqqxzPAx6lKhAjicBJZjdYfeODuaUpZAcRS3CQIiv9K7pOm6lSjbw==\",\n\t\t\t\"hexKey\": \"6745147491c20dfb8655e72556c1d8ef\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"OtI/CGkkkxGeU2ZZ/sSiMUcPpESv7432n2zmeXXjUnebmnZg+2sArv6X9w==\",\n\t\t\t\"ivBase64\": \"ETAZh7p0cnM79jFxWFKipw==\",\n\t\t\t\"cipherTextBase64\": \"AREwGYe6dHJzO/YxcVhSoqelkGNBUUyXjeQ93xSH8SJwZFDwzKLCCXwURB738TX8BwfFwg0c1ZTri818lvGkyPN6UlWJzMH3+pQTRNgTcn7Mwsx4BPkHq9IvmhOEHOJO4A==\",\n\t\t\t\"hexKey\": \"33059552acf2e07bde9507126dfddb83\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"JPZkhc46Dq8CzN10vfKULMnGTRznY8yYvgmtPp8oeEZuH38nwi2PVBrQDx0=\",\n\t\t\t\"ivBase64\": \"k3ipgxpiEnMr7TiFykEZvA==\",\n\t\t\t\"cipherTextBase64\": \"AZN4qYMaYhJzK+04hcpBGbxVmN/UbQM4vInrcN/umK1FdDsaRvIfFeAdVgXmI8XMAeVeZBLb8wU5PtdB+7JrEz+fq4RmTvka+QxjD6VMvAAaW8ttWynfc9gmxYSUMRziCA==\",\n\t\t\t\"hexKey\": \"096c2db5e4cb7acd20702cace689fd25\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"cMPBarl9b0PnGiHpzGD6fOinyCN2QmzkPCuuWp+b0eIkbhaxBzDZAufgOkWS\",\n\t\t\t\"ivBase64\": \"j8+iVjs+TiNE2QFZ9LUHoA==\",\n\t\t\t\"cipherTextBase64\": \"AY/PolY7Pk4jRNkBWfS1B6D7kU4oS+R5hOQS19ChxnjFMfhnRPbMGiCy+GsBUX6v+Jfpg/NRtKZvs/nPW3eJ1OCy1aonu+IpNX5tV5inl7IUpw6k+qv0QuyGh4AkCsT0/A==\",\n\t\t\t\"hexKey\": \"87204fce8c455b372ebf5ebf8d75f2f6\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"mlkCvqAdGUVG+L3Cv7aNn+hrAbqeyoVZaqVX2sw4ibvH6FnHx4Jp/nGhJYx51w==\",\n\t\t\t\"ivBase64\": \"HYksVmSI8f58ezCCfXrexw==\",\n\t\t\t\"cipherTextBase64\": \"AR2JLFZkiPH+fHswgn163sdouwOz2FNLO0YoJDPw/ywq40KmVyuyRNUzLK084Ub3aWtOYx+FKOh9S7hJjaOkrHiDbPd/fj9UciWKFYDtn4ZbNypIU/jMoE7B5JEjGJ6ixA==\",\n\t\t\t\"hexKey\": \"da2f2c4f5f757a6ad7531e78a09deba7\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"QoAZbu9FW/fxtQbQ46WWnzcRW0rFqpBkPXHgBvYesi4mpUA25bJjqd8r08wM4Hk=\",\n\t\t\t\"ivBase64\": \"ZSuc/TYoHf21lrp7qhQT1Q==\",\n\t\t\t\"cipherTextBase64\": \"AWUrnP02KB39tZa6e6oUE9WNYz0xUGhBd9gYbkOGaZpN8i95YE6tRaqvulA4oPxTf9d5FktnrAUyjQ/6YfuM3w0gvH4aHSus9lEivHb5QwyXg84Xj9uTnQUx+cKZLtVIdA==\",\n\t\t\t\"hexKey\": \"39f46a261349807bbb6f296b94513d1b\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"cGVHW0jr2qTCJ+9Fpbcjj/pATW2xtbi6K7TQaVtc0VeL4PXGtsibmpjTWuTKHYdH\",\n\t\t\t\"ivBase64\": \"OZ3ZEMWNkDOsDmvJF+8c7g==\",\n\t\t\t\"cipherTextBase64\": \"ATmd2RDFjZAzrA5ryRfvHO5WQepyarNpkj90OYWfwoGdxqte9ZUOkjj5RwnliOi9zDh5ek/2g87bUpeFc53v/KSBI8E4hCg9hDGvWNE04JpeIUmoxdeF7UuNqPNL/hoN5KC6TKS3DQA7YMdw1IAFgzU=\",\n\t\t\t\"hexKey\": \"e58e0f7d44a3199dc3db992ed9f69c36\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"Iz28PWjU/4KYI+lFpSCgHkqW3kah4VLkkQR5z8rI0afv9pOgwa+JDqVLYiuJTNhpZA==\",\n\t\t\t\"ivBase64\": \"QrjYOCPcEg8PvY1Gj7RaHA==\",\n\t\t\t\"cipherTextBase64\": \"AUK42Dgj3BIPD72NRo+0WhyRd+jdyGw/A8RH9h19y3/Hq/6YfsOrQlhyg6GlANRQRXksgS3i3kDWr1gAhOGIRUmphoNWz614T2xGBdSefrnidXNIwiUnuqqoIN3doqCxKRST38Z4EovXE75VHD2CmcE=\",\n\t\t\t\"hexKey\": \"03e1dee32531e09f63d744ceeb72f4cb\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"Pm8ZrbAKCPLIiWJ4RLzVBzp97Ik5YDO0Cn++O5UcagRAhjy9VUQUy/UQ/dpME1a21Qo=\",\n\t\t\t\"ivBase64\": \"v0fEIii0p/2wHdIx05NhQQ==\",\n\t\t\t\"cipherTextBase64\": \"Ab9HxCIotKf9sB3SMdOTYUE3rwlOqtbQYdoChwWdxsLmmDilTYH0VaKHykN8e8LwXLBfWs2dRbxasVb3sm07OnAa/7z3YnsNoWesIebp8pVLpAI9OvmpRSyEtjR3IhOLS3CtDYgkuYr6GRdlErIA7Vc=\",\n\t\t\t\"hexKey\": \"ca7225d5f03f31168a60f0616260a8c0\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"JLW+e+QemctdEdonCy/ebt7fif1QYtzvBSFGzVFg2NOIcfDv/MNhUUCkvP9RXZwoAWrM\",\n\t\t\t\"ivBase64\": \"B69Xxxpi53Hx47Auog6log==\",\n\t\t\t\"cipherTextBase64\": \"AQevV8caYudx8eOwLqIOpaKxb63ulnslpn6qKUsW7AqefJEHRPkaiWlcStJd7vnniZsc+2OczQUfEYZka/2M40BT+APJYe5Bk/sNhr7N1mq6Clu3WsY2qDwhORzQKbM31OcGkBwaUK0u4weEINEfiJs=\",\n\t\t\t\"hexKey\": \"73e460e9f9b3ac541b95cd866a691c5f\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"+DTmRbMb3whhFEcl315cN1Rd2hcH0hyBdgJY6edza9VLnFmnKp171GjWiDFBARdGbjr7Eg==\",\n\t\t\t\"ivBase64\": \"X/SL5pxhPVwNjqtpEwghsA==\",\n\t\t\t\"cipherTextBase64\": \"AV/0i+acYT1cDY6raRMIIbCLQhA3hZrhN7pwFqbmkAlfKyfBInawnuVaXu0mK/GRZQBXejBAyHmhhxGHX9k2JTBwKF8ISQSKO5Mjhg3lLvvt8wakDXQpygddX/viDO+Qrl7SMAUR8AgSkLaxTFFxQ9Q=\",\n\t\t\t\"hexKey\": \"d05dc54a27719031818ff99fb4b8f29e\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"h1HNOeCKXQTY8EZDKDu/oDNe6plxwFUR/SwH5B+zdOP6pgsUDx53KR+UoI7nUo2p0qikdh4=\",\n\t\t\t\"ivBase64\": \"3+2zFV+bj3ebdg9O9hdcTw==\",\n\t\t\t\"cipherTextBase64\": \"Ad/tsxVfm493m3YPTvYXXE8dsjFe2T53uSOjsN/A/jNB55FLpuSkoIqE7zX5EPG9htpprMFfv00qqcYZ4M1iEhP4bPuhY/UsI68lBDH7LB1L5tgF7WWYURbqB/VyA7OZPKf6VDOf46P2wA10tq9YbVA=\",\n\t\t\t\"hexKey\": \"dd3c3cfcf7b9282ae5ec105f74b01608\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"K3vAKodZBYmnzi1Qh0AOjR8g9h6FhDVRoVkWgG/ceIErGKlTcE4SfMakv7LMRMcWwhwU8d/J\",\n\t\t\t\"ivBase64\": \"Wby4q2PwvXlOcbUgHzynoA==\",\n\t\t\t\"cipherTextBase64\": \"AVm8uKtj8L15TnG1IB88p6CYlYJfw7w1O+nRYjqGQaXryBVL5aUKWObIKOH7lRzkhe6UJjWwTBuiUUQsGSAF7irgHVEYgc094qt6QwVHooeJTjCYOOq10QBkXKEMHM9EvmE+1j2SlGDCeO6a0VP1+tQ=\",\n\t\t\t\"hexKey\": \"7a5d91e2386cbf4d3710fd13eb8b4281\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"MSmexUi+2PKcrk6ebhkNvX4i5qztMBDvplLwnB4547ij9uivKenuLgqfoxLvGpXclOObByO2jQ==\",\n\t\t\t\"ivBase64\": \"exDkrFYXcUqB4rquFUSUEQ==\",\n\t\t\t\"cipherTextBase64\": \"AXsQ5KxWF3FKgeK6rhVElBGHV3tH3Iyt0tov6f5fLXFx1RRoTcOgqjgCO0N0M9bUeImmWJAU9wFrUxHkzDdlkgqbU2OTtqr1kULE+RmH1WpYm7BYmwd+dt1RQFL+P7WHdX6tPK3Fjeaw2If+cNouU3g=\",\n\t\t\t\"hexKey\": \"63aafe48117df3f4663e836df9403a53\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"9DjQbZXOF1/zxRD5n+BMn7SeSfuGlQvZQoqYB9DDQDj100A8aF5vXpsc5yB1z238uaD0c9zaIhc=\",\n\t\t\t\"ivBase64\": \"VMtVGtRIKLgbjieGPuVMaQ==\",\n\t\t\t\"cipherTextBase64\": \"AVTLVRrUSCi4G44nhj7lTGlOftEm+FQGi4mb5uE3k54cHHlL1TRAhfdE+sNBrXgTakvXGbHeEfgTh08qNDx9Wh6gtGo8JFD0sknLcAdO6khWkKveUBa2bxBhga2E8BXshWWcUC5ql5c0r8KI3GGS0KE=\",\n\t\t\t\"hexKey\": \"72a975705fb5826068926431b3ee8e3d\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"M8/s8Og7SRvbde1CtzhvE7blka9Yxqmx/crbMsAPtAIhmg8SBl1+9GnjeCyI1kwD1siPdOJ//MN9\",\n\t\t\t\"ivBase64\": \"RysUPDNEf8jvhh6Q7bTV/w==\",\n\t\t\t\"cipherTextBase64\": \"AUcrFDwzRH/I74YekO201f+f8rx25uCB0rG/u9vomXGQ6addYiR4o3NcGl+Cnlw/C/kl9eA5Z1jCmBAxd6XGn4lOWpkPJvTxjHGDFJIPVTmv0upfwmsFZNDxE3+4haZ/6XqBId79iS+jTTSabZas6tE=\",\n\t\t\t\"hexKey\": \"4fc306281308bded7e882eff0e33248f\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"hARy6WQYD3e/mbgG97MPFAjQkKPzSHb+xttpk1Qbj21nWMKYNsoAmru5jHSuEWQanG9WL+3yHslqMw==\",\n\t\t\t\"ivBase64\": \"sEy0K6327Zr5RBqOD+QhFg==\",\n\t\t\t\"cipherTextBase64\": \"AbBMtCut9u2a+UQajg/kIRb5z6tGBxdUhCsX4H1g4GUZHkqH8MBW683qIiHxRcMQS4BBbbhqzh7D29GM31r17gUx/mY2ezYw/d6TVNvVqGdLnTHV9nQrQbKg9fUPOSiTMLNVCdesXbyElYKBAWup5/Q=\",\n\t\t\t\"hexKey\": \"65dcf6261ce9b11967b0dbe1165127a0\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"rnk3wgFq/v+JUo7MtTQEna1eEYv12PvUWJJtqAfQPKG2JexHE/bB/M7k8UsyuJwcAl/1kGVgTTpKjFU=\",\n\t\t\t\"ivBase64\": \"9dfnH7lznx/iojiJFhOveA==\",\n\t\t\t\"cipherTextBase64\": \"AfXX5x+5c58f4qI4iRYTr3hmuP1DWXWlo8zsaZdTArLHEOd6vD32QNiPW2M4EGQLTzUoXXYfp27Eje9UdlQqTXI0okTqJFjhDZQ6zeYtI+/ClaCAQ21Ozh/Km0HylV4TtwBQOx3vjURCAgqxqM1vn/o=\",\n\t\t\t\"hexKey\": \"f1a418bf9ed36e5032c3e849af3aca95\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"W8NRbkTC0YJuiSleBDqcZ3vuKOGi0PIP/NhO4JfZm+KR0xTLX5DXBnnvqTCZWsq+w2IbmlqP+cdMDuHQ\",\n\t\t\t\"ivBase64\": \"80nS+l8aWyYsu725zLsiHQ==\",\n\t\t\t\"cipherTextBase64\": \"AfNJ0vpfGlsmLLu9ucy7Ih2kSAgnXwQoNVweiKyxSL/wCBRkNEzavws4eec9cWzqDXoam+LRCxVXIdnf+//sjB/X6E/X2MVRG9O9xHvDnzRKbnxemWcdQwYQVzzE8StJwiBpmNfuJLr11D2v95N2PkI=\",\n\t\t\t\"hexKey\": \"4094004b2ac08edd922fc8932d4048f0\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"0haRGKZXk+yeVFqCe9LhBWgpfxgXzwdNl/iSVQ/CTd1AE3tpTvhepKXoNTLsPncd3c2JspxSwch9ZCIVmQ==\",\n\t\t\t\"ivBase64\": \"TE0cw3s5o4TukCv7DC0WwA==\",\n\t\t\t\"cipherTextBase64\": \"AUxNHMN7OaOE7pAr+wwtFsB7zBEjqD29jRvF9cSvcriix7E6iCHIWzZ36qcRCPqjmMY9rFkfNnQNBjXn41FZHg9q141wsNtjczuewReaQoL6fnNyVA9yWxKHVCIo5+mD5ZYyoA/QGzj6CfEDDsV30TI=\",\n\t\t\t\"hexKey\": \"cc1017d9ae87bbf18ffd368b7eaec48e\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"QFaWXs+4nloVw7TXQSr7eHsBaQOiseqNKUj28FWjJfNKJbDKVF79tzKzt2AnUCYUB/4Omns9iVtDy/G5UzQ=\",\n\t\t\t\"ivBase64\": \"HuwUCZJa2Yi2siNcJ2RiLw==\",\n\t\t\t\"cipherTextBase64\": \"AR7sFAmSWtmItrIjXCdkYi+ghfMfF8SrHfsXDiAKxl/yzgOS1I2n1kgf5653QD3Tuqmbe9eesk2K+1dkUkjNuAakGiqnxjfof2AsNVbm8P9e6RWQzTtYCWrYxo+EKb546Tzyah9JfequuyTPeq8MGn8=\",\n\t\t\t\"hexKey\": \"d53547f7e2183ea7e882ab12d53da8ac\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"NhIrWq1+HdC0spzrVYImwFVP1AohcyWrTBAM7E31+earRRpouEm8pYF6YVWzHcCHv+TFUqwML66q8HpIqrlR\",\n\t\t\t\"ivBase64\": \"bCuSRiQENHLX9zuvxF6Qdw==\",\n\t\t\t\"cipherTextBase64\": \"AWwrkkYkBDRy1/c7r8RekHfsqX79mZMvr1rb9ixIDM3Knq0+izV6VByZNjvVswzRm4aHBvmeKVRvUou9bMs/tUV8lM/iaHWY5BBr9iwEOFC8YWD9LRoKetJi5YEIuHDHchSC760OinKKW3SMn3ln7RY=\",\n\t\t\t\"hexKey\": \"25525e5df2ade1bdf9b35fdf995db1fa\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"y+zn1CnHjL3AluNxtCJ56NCmjmdR6mfrct9fVkGHBGJCA1V3s/4yyLDJZhGGElWwUxAX8b/MJ7ITMP3M/E/kBg==\",\n\t\t\t\"ivBase64\": \"WEjwEFX1YATSXX64cXxZbQ==\",\n\t\t\t\"cipherTextBase64\": \"AVhI8BBV9WAE0l1+uHF8WW2//EYkppIn3+BWtpygXaTekDirL+Zxj3Vi4+L/fBw47mH1Ep6nT4rTRqy6VpEGRrjaYKi0tzKHqnSc3nBQ/0JVdcROBP8vaoYpU8Qo1xVKo7KkFzhE+bNcJqzl0rJYgn/NDJdkm+ufDfNMCxt3kNOa\",\n\t\t\t\"hexKey\": \"46a9e97cf6b808469eef0439da504a47\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"i3AeoXBH6wtS9WWHLj8oPwe/rX/Ns+ZtYHoONbCs4P+NQ3PKdDym16emrgJWI7QIC2d1i5h11lLa8hkkJxWmTew=\",\n\t\t\t\"ivBase64\": \"99Pbvo1lgZYghf8Qzk7DTA==\",\n\t\t\t\"cipherTextBase64\": \"AffT276NZYGWIIX/EM5Ow0zY7agDN6hsYHsqtforcFeVEx29+F5dS5ap5h38VmGVUiiw3SQvIQ25HiZi6OBwTxUcvN+eBtfj/wGMBrfCDn0GmRKyKDyLcfXeuAd/V6mpF+J9S3K64CXtLLpKFFD20WNr3bPCWrgjSTXHw/sZpSnw\",\n\t\t\t\"hexKey\": \"d82dbe070c4bcf227b77c5ee1e0edb36\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"duDgEUFLjPoAO8yYpc462CtZr96elu/tNcyyhJ7xvFCCNSWy5ra1POg1sWQMY3itUyCc+uxNa3OLHgpNCrjB/Dm/\",\n\t\t\t\"ivBase64\": \"CfcstUmpU+uIlrvkHi6XJg==\",\n\t\t\t\"cipherTextBase64\": \"AQn3LLVJqVPriJa75B4ulyah0gbC737oA3U7pdLyifOvJqXkdwAWAVmnrbQ3qgj+qGuUMRcFrCmySa1AfY3W9A4emWtWDPPeIYGQg+4hilbGRtuvCvYbcoC7g/UHKxbtSVa3C8Sw7sP50I4jnHqCXuW4Q3wTWPc/E9dDQ6Qh2/Rh\",\n\t\t\t\"hexKey\": \"4df93a3bc70f0506f2c46d59f99e9190\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"TOyJ8XWfbDivJyzLyUBBu1wSEQYIcXGvNq4bk4aS3rvQ1zKvIntq096u10vRp67ax5W2Se4VYW4sASFpRCx+AZeltw==\",\n\t\t\t\"ivBase64\": \"1OpgLupUPuFJtOqvKOp7LQ==\",\n\t\t\t\"cipherTextBase64\": \"AdTqYC7qVD7hSbTqryjqey3ZWxAvB/akhwmsqnXRwEFvnl9yc23VLn2+MIegRdQpIDwW24cgRBYj17eCKcseQglk+Z0Y1wqY8+ybKGNUJGaV31H60yrEc5EUZTvsnqu5D4Frylz2MRvh6alRxvjkVWnnGVqpbjanzUqt+SEpA30G\",\n\t\t\t\"hexKey\": \"1d9cf11cc45c03aedaa60c25f3c5d9a9\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"AjFje02j0JDmRI4hvUTut/Um9Nx4F5LNWdSgiP7Ldx1eV4wZoRVReWKVnqdKx3imXOmJrzzoqTzkhRaj4vVxM8jsaAc=\",\n\t\t\t\"ivBase64\": \"rhTeERF6xHJfn+jGRw/96Q==\",\n\t\t\t\"cipherTextBase64\": \"Aa4U3hEResRyX5/oxkcP/enImChECJArCtd6uf58011D5Qfyl7ZS2ZbWwWjmygGLDXFBMJ5BB5KdMRoUUrORdxyf+wh3FbV5XrNiIH05klEGxra7KHfAnnh5/L6NWlxMhwQXeUEOLIJHuINac/ejt/Yy0SNLVJIuA0wCrbminJJc\",\n\t\t\t\"hexKey\": \"6d36a61fa4588a194e44627feeb28a4f\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"yq8MgJX0L8hYCLmKmhvxftwczE1YMdLIE1wWd1uTgfs9OFfX73g1xUgB0+AzEu6L0tBILnmNRZ7hntg3+xubhq3xp51E\",\n\t\t\t\"ivBase64\": \"PqtJEMySueOVN4CjqKWb4g==\",\n\t\t\t\"cipherTextBase64\": \"AT6rSRDMkrnjlTeAo6ilm+LJdXL7dYZP2Amo6Otn5/UQ+ivPBTqXgGJrt+gYlCTk4ifEQpAGBFtqRNcvpWpAIfKRrtox26imHfNo9SovB7UtiAUwENyKgmCYDpHopBv2sYqtNBnTG1nR414XRvOYyOUE9dbfJ0A+FItVjAdqcAGw\",\n\t\t\t\"hexKey\": \"16d1dfbf862592fa9a3220dc9c3b2175\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"m3EN1a4/3OufH7/NBvctbsNYCnWS8+tRohQ6EgN81Nbq2fUlBMLn4EuF8Ns2RsnmQf4NB1yA3Aj+fRXkJ4GKoPxOsBsxoA==\",\n\t\t\t\"ivBase64\": \"uwBeu9QSefZbyv5cfYogFA==\",\n\t\t\t\"cipherTextBase64\": \"AbsAXrvUEnn2W8r+XH2KIBQoPE5mJKr6KfsqLKBkJg5TMOPJ+oHJTtBfkenwYnu+qDYXRrQR8NErjtnJdg8GzwMr1646P5UgqnSC9P6vLU/uNrVNt6mpGVMNw3u2QJOPiKaub8K/FN/esXkmf6+jgzhry906fHhBwUlhPYGs1FpO\",\n\t\t\t\"hexKey\": \"38dcb274c7113a91202956c0934fa75d\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"YOfgOm3DF3v/idH+3k3QzwJEX3wopJb2Ud+ihIzuFRaeIix2xKywOeGd7Ac8Lg33IV0y536YNljs3GE0YfQCDy7dBMnJAJ4=\",\n\t\t\t\"ivBase64\": \"HZmAwJzUedNg3XlbEhk7mg==\",\n\t\t\t\"cipherTextBase64\": \"AR2ZgMCc1HnTYN15WxIZO5pEAEiEXdvPKGWSZMpFhoPMz4jg9L7Zghx9PuOHLPE2bg9R6x/KeR5tP1p7n1Riy2kDoAka1xrk3uKxt75Bl7T8Daf57Uzinm090I0ICaC/cASs9sFx+CQPy4+3DxpddqAObA5aLBwzxzTw9g3a8Rbb\",\n\t\t\t\"hexKey\": \"b30205892ef9e24062e518b155265981\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"TF3zTfYKt1a0MNlFKUjUAEA++SKIVLu2GlWpipvgiqWpWA7JbShJMXbyqjDWQna1k3v4J8vFVZehzrSx6Yjcerrzkl6dihDD\",\n\t\t\t\"ivBase64\": \"BshL+BIYGAhsbR0D44GZkQ==\",\n\t\t\t\"cipherTextBase64\": \"AQbIS/gSGBgIbG0dA+OBmZFx6qtBCbco2Bc+gJT+D612x4bbuj33EvpeRaXupPdr7VXPmYgux5XfmV53QIPqUZO4Ht3lfX14BaXiLhQ/wwAlmAWY+E464+v4H63UJ83WyW0Hn9wsbyielmwYi+tsiZJgaqgSiS6YCKvgLuEMKmrn\",\n\t\t\t\"hexKey\": \"082bc9ca3052d41fa3fc9ce80d7f4413\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"vtuh8ZRaK8LemolBVpDxL1/OZAFEHPDQ3STsilOOrmyuLzDaMJ7zcgYDD0K+gKbrFEEymRHiC6U0gjviSJs4pONhXqwDXh9YJw==\",\n\t\t\t\"ivBase64\": \"wJeHVhYeihNToj1ANaZ7vw==\",\n\t\t\t\"cipherTextBase64\": \"AcCXh1YWHooTU6I9QDWme79YEP6i+dk9z/im03JNADDM+6kJvw8KndQpk2FFMxeC/ozIsvdip/01otKuxlqeqr96ukVZZq28C1cy3M54KAoz5lv1dU/D4Pv6btnkwePpHUr1VI6C2A0ICs3uVr2T1JqOh+DpiRn5gx30eXX8ln7B\",\n\t\t\t\"hexKey\": \"5eb2dc47feebc69ff5783394a3e403b6\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"gK+zRgmNFX9JxHkDUN3LoVd64LHvXBWLtwUCjZeY/L5umMaGPg0OkwRH/t6W5rkT7+78CMPd+rskS/FUnV7FDS2Oj2EObtDshwg=\",\n\t\t\t\"ivBase64\": \"ZlireABeUkc0ql5cneMglQ==\",\n\t\t\t\"cipherTextBase64\": \"AWZYq3gAXlJHNKpeXJ3jIJWdpAz3fvG/RplGw9L+pG9PrBjcUo2JyfZL/vei05utJGCBxVpp0DHNvnPmVSjFGjzofOb+WFEuIIS0gWhC1QbaA6gqCJbWMU6Bk7Xe+fsSJbC/TmmZfux6jk65BoeD43/nRpGyUudBmGNOLRGx1oNf\",\n\t\t\t\"hexKey\": \"89a1fa662ef06b0f816d4d372a2c6675\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"sHJjFpULKc0AIplBuANuXfACAEopxM6yciy5r6WEH1E92vKyfmFGKZl028S+R4xo+cK0EhbkB5LcJIeWJ67VgcT7TnMcSfwaMKqu\",\n\t\t\t\"ivBase64\": \"ftRa+3eTdxc1PLh/XONAHg==\",\n\t\t\t\"cipherTextBase64\": \"AX7UWvt3k3cXNTy4f1zjQB5niwH/n8HM4biT4SqXswBxu+WYR90isC6rMUD9MWNG5KdVeHXq2489ZA78t6AcQXDl4MpFKdHR8Hmr/CbOQ5f812+xTTYjG2Blg3Kp3D6SEET+31T6mvlf6a91Lf+mXI4LyvnnA8qU/BXGpS0ktlS4\",\n\t\t\t\"hexKey\": \"6210baa74320848bd72548a3fd61c42f\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"iZ/VRdPu4n6NoOliazQWwgJ6SShoVEHe6WufxCj6bxEOb7sUuz+umC/tLaq8ElDxe8g2FN61nyghxWRp+E1+L95eWkOuzI+a0mCOoA==\",\n\t\t\t\"ivBase64\": \"3z7YpDXIdHqyG3DevbZqmw==\",\n\t\t\t\"cipherTextBase64\": \"Ad8+2KQ1yHR6shtw3r22aptNnk9b07ISmil7flMgBgAo0WUPVknBe4H/QP9aaXTo0PIKMnuRnbzHXCQMlM3JnIhxQcK0Sgm5I685MtisNOKP2i44u+z3ziYrZoPrBZ1mIly4wi9sJgqyA/kuDJlf41PsiniBYr247+tFySO3ztuC\",\n\t\t\t\"hexKey\": \"57c86424671a516b6150b2e01e98d8de\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"CLLOSgv+D0yhaszfgjKP3DI38fiClkJRoApoobQIWOjnqKlwSMkewG/zwijy8gtCrVDO/rVWRYwsaTm9vEhpPE3Vxmet05FXXVh6Izc=\",\n\t\t\t\"ivBase64\": \"beeNWjx0AbjL+NDdu2Nq8A==\",\n\t\t\t\"cipherTextBase64\": \"AW3njVo8dAG4y/jQ3btjavChShB1FBQxz9K8T4jHTX+sDFQ/qwpmKeXzajiXfvTiyB+UAeAW1BGKPUZF9V3rjUoSRS2Qzd1KbEKJwQ8Rz9+w/qOcAfnqCHyiPqpK/QGMdf43CNanSmak75M4O5AL42Iti5aqH9nU8L6H50PhXZFp\",\n\t\t\t\"hexKey\": \"d9bd3c883fbbc032f63679be5938fda3\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"SP9E3M/TidROzfkL9vaR+smU2ROZw9AoO/T3dOTutZyLV6F03IjvlD9yass/rEJpn04xxUwnX+5W476KMVSLz2uJ+lgoji/u0NPq0Xnb\",\n\t\t\t\"ivBase64\": \"vGcuvPTcGDmLsHz/kvK5YQ==\",\n\t\t\t\"cipherTextBase64\": \"AbxnLrz03Bg5i7B8/5LyuWHxBLQEsICNoZyDglFmjQKxSGV/xY5ScCNiZmQuf8l9PAPtdZ9Y+M9pvKscN+F+FeqQRIZMWbvmkIHXlSN06YEnr5wEk/Z0gjMZ//AvYVtzdbhuvEYafeC6PZp+MKP2gLVhvnKK6ODpmQoC4s5Cb70F\",\n\t\t\t\"hexKey\": \"ab42db800d26fce9631ef3490d66eea6\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"nPW+kN2o7MyTjagDhl1pnmgIhpnpxL8nx1qxqVOL4xd5uJ38yQkYk68/Ijek7so4qmcsY0y2HQvNOPUfNfNt5G2CKkaoxD5O83qgGOoZaw==\",\n\t\t\t\"ivBase64\": \"3MGf6oc/pd+vgiSWQsaxtg==\",\n\t\t\t\"cipherTextBase64\": \"AdzBn+qHP6Xfr4IklkLGsbYH/1Vj4EQDAPjZTP8a+t50T12cw/mOPi5xT2mBBJPbUHgkE5Q1p88pH5eOMWNlUWIEewAsh+vQ8LcsUAZ2ZzASg4i8HBV0FLIfff0yU9lT7Jz9EzP/lycjrJWJdlzUHF4R1qUvZoMQfakuKWJVBrD8\",\n\t\t\t\"hexKey\": \"97dcfa519793d2d713ff6271d77cbe6c\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"BhWYcR7VmYJ0SYqsaPQ+ltOulfHcogwT8BPFn6nkckGh2LZ2I+AwhGrJ38OUJeKX5zari8VGfEf878hCTVxaYdnXbPb2er7oUz2NHqo2ycU=\",\n\t\t\t\"ivBase64\": \"7K4xeqITB4eZJs67T9E0IQ==\",\n\t\t\t\"cipherTextBase64\": \"AeyuMXqiEweHmSbOu0/RNCGlWJIivUJrT7fwLSy7bW0huHcJnrXUKZ4ft7VAPIcB8niIlYnbusBzLdqY9l40c1KA/WfUtkz6lMM6b9QSXIVRIXavSN7Izq5mgZjkydOTNxC2ALXUy7NarrksKoWMzEiyeCajKszEoLh3BSwxfNtwxSDCGxFUNW0XCOewKXJwBA==\",\n\t\t\t\"hexKey\": \"c1e9920c0f3f505c2cc5df12a2f75de2\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"KzQ7Ss+6XXcwjaCEAhhjhm4zWRWIvHGzxA8d8/lFzTKUr/Ml8yotZXdPcb/Q2t/VExKwZ8BREH6JeQBrskdxlyNuguH3d3JnFm41YIaiweGp\",\n\t\t\t\"ivBase64\": \"156Wq0sxvndJzZLr+xEkGg==\",\n\t\t\t\"cipherTextBase64\": \"AdeelqtLMb53Sc2S6/sRJBoNZsJWDHuzcbDYTabjO2dHLgVHcC2fFy/nyfZ5lUl5gmGvAtN9T7w+nrIp302TuMtyj3r0CfK4LEB7ePwZLoxzZaOlNb0dnvUd/wO2vVv3/qhJBjPBoEPaWfIyylo169gqB+vZ+Tm/ygCU1wSWOp5I3tq6iHnH+YS0g/paQhv+aQ==\",\n\t\t\t\"hexKey\": \"1248f2f0720a2cc668439ffb6ed95bcd\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"qBtBQFDeDPsfgnm9aOByOiOYhVwrvCEasNToqiy38cB+3kJtQsseheb5+c+mIHJD0iX9e6nzdgRfcia2soN/Uv04IrR724V8DzsMwbaTEYp34Q==\",\n\t\t\t\"ivBase64\": \"Fh2XTS1qwaJGRp7IJyn5gA==\",\n\t\t\t\"cipherTextBase64\": \"ARYdl00tasGiRkaeyCcp+YBFdm5ZpzhFk/ejnHqvuhEr16l41Z7wD9BbXe4M0UBPJtvOHCJHshSe8VU6zAGYbSKjBR+b1YyPrxmTA21P2OBo5I0TJ03gmmrWE6rlFkjKpr8+9l/2pQ4RKhoWE8dKab1blDbTE1zXRRGeB64+OULX6Gw5XuG/zCflFM8vKpOuXg==\",\n\t\t\t\"hexKey\": \"590c1ba3494972180e99601a8553a026\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"DvWZ4bu8hwKziO2TA8QxCLwPptF6JYtPsyYjroNc9Ah+UZv8MLtoG7AcUuDzI9esXM2VFy0Kl12tIa7y0mczY4HmOW+ufDAEwIKVBAmkoiRJmVQ=\",\n\t\t\t\"ivBase64\": \"wkCA3rQIfrxXOqYFsYl80g==\",\n\t\t\t\"cipherTextBase64\": \"AcJAgN60CH68VzqmBbGJfNI9Xh46uS3PP4aTcAXAA5VQ1/FQywC/K4K+KBjTBij02YTSozeXro7aIE19lr13yk20UXa3McKt8axiXocfFXxaSbCUXZIw0ROR65pu0vNqk7c/qNphLKPhb93g0z1XKf+PsML9MjedBxeT8SGre7EE0mIQlgJ4e5sjlulVneuTfw==\",\n\t\t\t\"hexKey\": \"b4f81b57bb9d8511e017aaf3896a83a4\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"7aCDlOOTeu4pR1SQg2UEFGmiKvUNSRJpl8VexXWVvHfQtocaJjP4MOANqYVJgFRWnzqL7R/o5X7INE23TCOrqSSJuFjnLPSbHxTnjqVagmId4TPl\",\n\t\t\t\"ivBase64\": \"w35rcT3n1X8GqK11a5tTIg==\",\n\t\t\t\"cipherTextBase64\": \"AcN+a3E959V/BqitdWubUyIxxGDD/jJom/L7b7yf03MTqAj66FY2dlyF+yb5TLw0VAgqctjK1/fJaEFKNVwn6o362HMiCmcFMCYa/clbZwv4bUboWL1l46hVraYAfEWNKs5yTs4TXkbuInL+qdg9iT9GuF2t8pOYCuqRAsd0pIS3Cc4p3x+GT7NZLWZWpakdvw==\",\n\t\t\t\"hexKey\": \"f8de3c51737ee01ad7a4998b30762986\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"jDaJxTf0jkPe/MWAH/23qE7NL4hkNudTnBojxFDs7vgjv/nuEHXcyA3RXYz0mKhmJy/qLOCddw6FNNthS5NyioQ/0ydngVPHyNIBoz2RDQ1IkDxw7g==\",\n\t\t\t\"ivBase64\": \"xP92Tzs1roCeBN765tNvzw==\",\n\t\t\t\"cipherTextBase64\": \"AcT/dk87Na6AngTe+ubTb8/zs8srEBDfGBr1YbrNqilbrS995+xk2NE0IuPjOmqCowlrCZI1Y6UkCcmlII0VXpnb1SN3244ae5UYpgWxu/mMEIfPsMu0q6bnOR9wfLjAZJHql7r4KTXIymk80lALTEPYV4tDTRuDauE7Bh5v46IijHlt6SoiSYBGQXzbUDUTQA==\",\n\t\t\t\"hexKey\": \"9a934d83cc2aba685e31ff03b2c4d5b1\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"ZTw3jlPE6FgkSoGuHssezABnqa6xAHmjKsiIUPOoGM6AzmqAhhKDvHcIudYwaEMu+SrH7/Quacw9cdOO+fMeoNwUkL2r+8TGoq2/da3zRO3Zw7Jzf+w=\",\n\t\t\t\"ivBase64\": \"su7kFRtU1vd+9TW92WxXaQ==\",\n\t\t\t\"cipherTextBase64\": \"AbLu5BUbVNb3fvU1vdlsV2kWBY4MnOdJOqFTtD/3uwCJnlJvWODHaHSjli7KC5+Oe36QkUhGJo5p2gybGM0/t3GfgePgyZizmGVh3De13vpNt260jqStmrQrhCa3eZLtoZlV4umKmdFnRHZJRieRqmfCkHx/s/StwvZjazqj6LezbWra9w+mu0iF4D3vZaaarw==\",\n\t\t\t\"hexKey\": \"2687fe88c1dbd78e7d9f1f2bc55df682\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"iYIY5M05ADlVnsfpR4cf3tkY7F/Kn2yxzzv4M740YHD7H4wKUeR7R0iXkvGIfqam+y4GUvGPZluWsllOx+rdRnk3ROyRK5QtXKZ2v5NmmHUcLXr3pn9s\",\n\t\t\t\"ivBase64\": \"rfOQaQJQ7geT13sAK1GzKA==\",\n\t\t\t\"cipherTextBase64\": \"Aa3zkGkCUO4Hk9d7ACtRsygJTbyXD8LWjRjfCBVLRt53GocO6QHqLzqK/X1+hCeSOu9LZnRhWyuOI+qtPDKiR00aoCjtrpfeijY5sJWbfwQcnAN02F1yvj04tlV3az1gDIO3R6QkvZeWaL6a3v7BSG6k/S7gZyq0rD3Aw1i5HsNzVVxZuB7YP5VCrrC7K24sKg==\",\n\t\t\t\"hexKey\": \"179991c84cb9207da8a0842b9670ba1b\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"z4gutP075b4cK4JXAaupAxYuMbgwFyZShtrsYmxqtyQLWOu1t2Az28WzBh25hSgtYDYgEAqVDNtVsDtaKczhSmE63YVH4QPogH2DR07gFYHvoldG2RFO1g==\",\n\t\t\t\"ivBase64\": \"gpGUgRK/Osocw4unMnp8RA==\",\n\t\t\t\"cipherTextBase64\": \"AYKRlIESvzrKHMOLpzJ6fET/hi1xjBVcMAHlyzUCBuqcdlz3614+xkQpA8nFBdORzyTjOiMlQGhCDLvnEC69U86WzId01VWM8C+s6MhXl9mWDg2rT4G/AFURjd1K1V/exaT0IuIwRfHQ0uoIHtaB1ffU+l/d7CsBjP77BB3ZBGZZ5WA7kCQXAl0kkyU2cBb1sA==\",\n\t\t\t\"hexKey\": \"867ac0ba4a1a3b042d200be0c335976c\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"BmJyuO+ZmiTu4kmKxJFFgH9TGSvUtjIQxn5zHw7y0KkJsjf881tFSVDIoG7Qd41yrCs4YIDPiHDbDcJ8Xy4h8AVMi4lTDhySnKWcYhsSN1CwNsSQP5mY0TA=\",\n\t\t\t\"ivBase64\": \"8TXwd71VbJhb89h/OyeJmA==\",\n\t\t\t\"cipherTextBase64\": \"AfE18He9VWyYW/PYfzsniZjdUAuwb1EYa7IDbZcz85m8ainCnIaaBnsrojPOSuxEyq4J50yJxnTZL+Zww6wxJb5QBOHoShld9KOvv0frwEuJKs/WIaYvqp61QrIMHmYxpHF+/Ls3aHX05flw41dS8/Q+SA0H/Y4Lc74odSxojwZ0UHjKaEGRygfPQ6IjurTIxw==\",\n\t\t\t\"hexKey\": \"4aa869ead1e06f2147a097a5a922a54a\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"b36/YbO/Ivb8FJO9GIVflDaWohroxzQ4MYeLf0HOXiZ9SHBrDZyFnBalWmKEoA4fOCM8C0aL1X3405pACzbZFerfIbNP3VEcLw6ZI3ceuvyt7g4yUH/OC1Jy\",\n\t\t\t\"ivBase64\": \"17OohdpgOt1mLvgvT5qKXw==\",\n\t\t\t\"cipherTextBase64\": \"AdezqIXaYDrdZi74L0+ail9iRglCF0ME1D3uurZvMZydBWwKolE1TzJm5gqGf3PU9uz0UWvRyRE81ZRObKly8mtKpx8VqbrlgPxP0S1QMl9keQBHQnZzEyEydGFaJmaAiOYBPvCCUmFV/u3hz/rn2QoGxZ+uIL001u+/9lXyK/ahW19E+TNNYe2wUB5K2Y8Y/g==\",\n\t\t\t\"hexKey\": \"1770dd361a295fe380dee7ad3b65e2b7\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"GF3tanYkpR6SqD7eJecHHD3961E2vFrQFFVFcCnEBc5CI2PG9Vp6NxaXtXOv47zvWbukfEn3iC/hfAVaMigjWk0WiNsD++4mNoNQbJbOOHtZ4mtpLMABkm3v4Q==\",\n\t\t\t\"ivBase64\": \"UNCsf84u+jaEHjEG6Qa8pg==\",\n\t\t\t\"cipherTextBase64\": \"AVDQrH/OLvo2hB4xBukGvKbJSrPAIxUuR67gVJZQh5zcu4nMwc/tpuEObUBPIgrsUH73/4MklDJulou74VHR6semT/19zMHpljss9nkm2k+V7QTjUR3XzzhRlDfS/WwjHtnGRtSyShob3Oej7ng6kURfwXGo8ahYASgapccFJNqEPCDAISSFI8rFA76KCrlgpA==\",\n\t\t\t\"hexKey\": \"0fc59d02629cf848b5484b61e0559e80\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"EHvdnUC5BnAg1BljdpdJUVSt5OZYd+CHOkRdV4ATdpsZLnEQSOhcwub+bHcyHfnNeFjJncpweXJ6ID5dmtjSs9WXZNsE76OKiJdqpSNPeRMlPqvTCnd30nG0M+s=\",\n\t\t\t\"ivBase64\": \"qSyNB2nbfNlsD8mhRwc1qg==\",\n\t\t\t\"cipherTextBase64\": \"AaksjQdp23zZbA/JoUcHNap/lBJN7JklemZDoejVDcBHKdCJhzNdd6YIX8FFF+qpCmu8M2vUc/WJN4QAqBUukUKPNU4iQhFTs/YiHjfpZqk+O12ckWZE3Nw3QA01+A7KylnL+DRpubZAs7yHTOsyfWFuMK4LKWZJ/cH3hRJKZ5JSAdHiq3edhK7pWU2TNCZmiA==\",\n\t\t\t\"hexKey\": \"e1fc29bf2a081cdc56a2f83ad9f508ca\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"8e+C7uDxb2c4rF9Y35KZIk37Xk8sMKwN1GqXtbbX4t+ne70esnEGv4gaEpTzVysEpBwQe6Zbho0tRrkF/v16XMGXsSqClCBcX+WTF+2kzpoH/iR/8a9wSG/bS0A1\",\n\t\t\t\"ivBase64\": \"hKs/0C8wtRCWmxWBJTPuJQ==\",\n\t\t\t\"cipherTextBase64\": \"AYSrP9AvMLUQlpsVgSUz7iXTk1oYzAo52EjneWwHLAajSQg43il+qKHePKt7AIrCZxYN4c4vveaJur9bnWowcjkt/JV7BjsbPEbyH2ntyxN25iw5EKw130wP4XR7LO2+NFyneDj0IwAO9C0+UFrtsteZCr2y7scJmH7ktRm8ZQI/l9DhU1ae5EDVtI9hHy/ZiA==\",\n\t\t\t\"hexKey\": \"e1c3f784f3ef70cb441fc43f03dc5971\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"NLBIS5gBV2mrQDYZPpYGTajIFIGg+p74j0gOlcL6dshi7xGokYXSw6O3FXHxe+VXXkhbuVqhH7O79QHEjqB4P77SqDQZRnTVGi4hKLdh9McqATy0wu0w6XwTQxJBcg==\",\n\t\t\t\"ivBase64\": \"4oJtsEj8i7jWeZvCiY2cOQ==\",\n\t\t\t\"cipherTextBase64\": \"AeKCbbBI/Iu41nmbwomNnDn0DM7pRFgeSju40DAGWUBWQxlslNy9yAORM3F0wBZ+1CyW+0zqKLQ2//qVjMKDihagNUu45DGjcblMgwJDZOzhYghBVBpiF8hW0x6nZk1JTWOLORQWIvVougybra7vhIuPuQwQd/rKlw8tSo7vdmgO9XN55y3gdPq9jOw3VDP/ng==\",\n\t\t\t\"hexKey\": \"6b706832a390a45b5695f74a48fcc095\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"WguQ2MgbTL7MqKNpse7Lb8fHtf67zM7cFDIT0eaWBmsklildbnUVVmkzV1Fdkb9iGRoJt8HrOTGJOWQgG64bAs6cJMuhnKohYrecNU5kj2Hslu9q8gUrUm8/3xKmjA4=\",\n\t\t\t\"ivBase64\": \"u8lpPiiv+zz5KXhDwgkBBg==\",\n\t\t\t\"cipherTextBase64\": \"AbvJaT4or/s8+Sl4Q8IJAQZZ2orszebPoLcrrKBYDAWQbMgNHaG3hNO1dFuj3HPE4Npyy7igJMpt/ny6TBA/IoRMvdkVGszFxZRlCdflU8pe5+Frl5YvMoAwNJ+zzZaExLGSbVae9FTtp6a4Q9hoj0EscEd9R04oZ4UVgRw8P44EKj5kwEAJaZ6dbt1bgAfP3g==\",\n\t\t\t\"hexKey\": \"d0a87c31af37c0f82f63fbd919af5ee8\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"D3a43hlqy1jgG2c7Vszp9gfc0Yqv0NMVaLHgsoeK/i4B3Tc2dx/4gz1QRKCpE7wErrYUMU8ezN+9bw4wC/x5PkcWK4VL2ersSF9Gcd9dvu0GV4+PWn9fRFhkW4EGk2Nr\",\n\t\t\t\"ivBase64\": \"G8yOul1FQzKDG9HTFashiw==\",\n\t\t\t\"cipherTextBase64\": \"ARvMjrpdRUMygxvR0xWrIYukCrTSqxt8rkAVYZyruWpQwpRzMZvIl24XdbqjUnci1e+X2EMqa6+pJJyNbbSLes30uNHDEIKFVkY+zw+ZvMuMvm8N+l7GxAnKl5W5Y7V7dJcJFUQ400zLd9lG3kh6EuMKJ7BOhrpI8BghevdxLPRFN2X1VMRdLbCmibCVcqI/axSORqsaAIj+a4n/ImbEfEA=\",\n\t\t\t\"hexKey\": \"f126c9873bd3ca4dd349017c0c247724\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"AInA32c5mDQ4y7dTrDd/I9u9yv6AVG983o93ixm1oYHrI8iKfGjAoWYI3flLEOaoKWRaI6LdDh2uHfIjy01YW5PTkr/SWcIikYTVckcKH6Fm3MzJrZ1zQEONQHNrtwOevQ==\",\n\t\t\t\"ivBase64\": \"KNojLMm8PV2QWsbJmKOgiA==\",\n\t\t\t\"cipherTextBase64\": \"ASjaIyzJvD1dkFrGyZijoIhmvp7YUPo3ie8RmNlo28F08Tf3Aoez5y6JLCNioGHTMVRcLYEt7D0uKM8U41qw+qpL8/bjAtfbSJIrDNFX6h6O/+2vej3gjolHLboEbxx0UqSpnOTJ641Kbte/SIvqDPNI+hjoffyXmmCU5yPTT0/pSqLmje8Zdt7rIFyFPbAEpzYgset0z5uoBJ9HP9EOjJg=\",\n\t\t\t\"hexKey\": \"4e7b87fb06f7d059c1b8fe115da9cf09\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"QfukP0W+lFXtu7J+BsMtEqHhAK31OObNHf2sOvK1qBnEwIldbedF7rkHX2v7QXWHNPh2JQfTmhRuae3MDaTELp4SY/0cI7g27zXfqIKLBgR2xRam1lFbkHEwdrXd+KOHcWQ=\",\n\t\t\t\"ivBase64\": \"WTFluX3uVbUh9oCnHmavMw==\",\n\t\t\t\"cipherTextBase64\": \"AVkxZbl97lW1IfaApx5mrzPeU4XCYmsxN5W0poUu9Hs+5aiQ7TP0GCz2KVCqNwIWWOIvUNlNiNiv28UyW4iqqdRdUnYssvovG3vT+bUgmC68Kl9qGJI6GisCqIuZvfIClv6Grs5QU34WAXLRrfoqwyKVjDuMjxCW1P0IbvBLoJ8cgjumd38gXglXY9MH8EQYlhFLLfbJbdK97yB6ts5s7n4=\",\n\t\t\t\"hexKey\": \"34685b0fad34709ce7b4640167c6077a\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t},\n\t\t{\n\t\t\t\"plainTextBase64\": \"iuPm5a3hM6OjuaUAYP47QeOjp0640otrDGnp0Qsk+4KyuChCXv0GtLMO85POrCTfFYigMzsV/+KtZpyRzygJ4C1CyFQMr1Yze0zPOXfXvPtzEqatCiiXjHaas2oBx7UvYdk2\",\n\t\t\t\"ivBase64\": \"I3uj9fze7UvnoFWUb3QVcg==\",\n\t\t\t\"cipherTextBase64\": \"ASN7o/X83u1L56BVlG90FXIiyxc0q0da1GcAiuQiGJvVUijbM9uT0XQCxPTtkzKf8W4BaDcMwuHcZ4I/zzcZbJfCmv2I8qTyLJBu2GinFpo3W1EkknxY91rKraMbXIxQEbZN5nReb8Zcw5G8MY2vQ8TQMDh7THmB4/PST7DwqZPLpvaO7Ks67vJsZSbkgHxyVO6ZetgYzCxOOVz8SGH4lrw=\",\n\t\t\t\"hexKey\": \"de2194fc4f7e4788c14b47f06d388d4d\",\n\t\t\t\"keyToEncrypt256\": null,\n\t\t\t\"keyToEncrypt128\": null,\n\t\t\t\"encryptedKey256\": null,\n\t\t\t\"encryptedKey128\": null\n\t\t}\n\t],\n\t\"encodingTests\": [\n\t\t{\n\t\t\t\"string\": \"Iñtërnâtiônàlizætiøn☃💩\",\n\t\t\t\"encodedString\": \"ScOxdMOrcm7DonRpw7Ruw6BsaXrDpnRpw7hu4piD8J+SqQ==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"Ādam\",\n\t\t\t\"encodedString\": \"xIBkYW0=\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"\\u0013';Ocw³ÇÛïăėīĿœŧŻƏƣƷǋǟǳȇțȯɃɗɫɿʓʧʻˏˣ˷̟̳͇̋͛ͯΉΟδψϜϰЄИЬрєѨѼҐҤҸӌӠӴԈԜԱՅ՛կփׂ֚֮מ؁ؕةؽّ٥ٹڍڡڵۉ۝۱܅ܚܮ݂ݘݬހޔިߊߞ߲ࠈ\",\n\t\t\t\"encodedString\": \"Eyc7T2N3wovCn8Kzw4fDm8OvxIPEl8SrxL/Fk8WnxbvGj8ajxrfHi8efx7PIh8ibyK/Jg8mXyavJv8qTyqfKu8uPy6PLt8yLzJ/Ms82HzZvNr86Jzp/OtM+Iz5zPsNCE0JjQrNGA0ZTRqNG80pDSpNK404zToNO01IjUnNSx1YXVm9Wv1oPWmtau14LXntiB2JXYqdi92ZHZpdm52o3aodq124nbndux3IXcmtyu3YLdmN2s3oDelN6o34rfnt+y4KCI\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"ࠜ࠲ࡇ࡛ࡷࢋࢦࢺ࣎࣢ࣶऊञलॆग़८ংছরৎৱਈਢ਼੩ઈઞવ્ૻକପୂ୨இபை௳ఌఢషౖ౸ಌಢಸೝഁഗഫി൙൯අගධා෫ญมีํຈຝຳ໋༂༖༪༾ནཧཿྒྷྨྼ࿒ဋဟဳ၇ၛၯႃ႗ႫႿმჯᄃᄗᄫᄿᅓᅧᅻᆏᆣᆷ\",\n\t\t\t\"encodedString\": \"4KCc4KCy4KGH4KGb4KG34KKL4KKm4KK64KOO4KOi4KO24KSK4KSe4KSy4KWG4KWa4KWu4KaC4Kab4Kaw4KeO4Kex4KiI4Kii4Ki84Kmp4KqI4Kqe4Kq14KuN4Ku74KyV4Kyq4K2C4K2o4K6H4K6q4K+I4K+z4LCM4LCi4LC34LGW4LG44LKM4LKi4LK44LOd4LSB4LSX4LSr4LS/4LWZ4LWv4LaF4Lac4Law4LeP4Ler4LiN4Lih4Li14LmN4LqI4Lqd4Lqz4LuL4LyC4LyW4Lyq4Ly+4L2T4L2n4L2/4L6T4L6o4L684L+S4YCL4YCf4YCz4YGH4YGb4YGv4YKD4YKX4YKr4YK/4YOb4YOv4YSD4YSX4YSr4YS/4YWT4YWn4YW74YaP4Yaj4Ya3\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"ᇋᇟᇳሇማሯቃቜቲኆኝኲዌዡድጉጠጴፈ፞፲ᎉᎣᎷᏋᏟᏳᐋᐟᐳᑇᑛᑯᒃᒗᒫᒿᓓᓧᓻᔏᔣᔷᕋᕟᕳᖇᖛᖯᗃᗗᗫᗿᘓᘧᘻᙏᙣᙷᚋᚢᚶᛊᛞᛲᜍᜪᝇᝧញឝឱៅ៙៵᠏ᠩᠽᡑᡥᢀᢔᢨᣁᣕᣩᤇᤛᤴ᥏ᥣᦄᦘᦰᧄ᧡᧵ᨉ᨟ᨳ\",\n\t\t\t\"encodedString\": \"4YeL4Yef4Yez4YiH4Yib4Yiv4YmD4Ymc4Ymy4YqG4Yqd4Yqy4YuM4Yuh4Yu14YyJ4Yyg4Yy04Y2I4Y2e4Y2y4Y6J4Y6j4Y634Y+L4Y+f4Y+z4ZCL4ZCf4ZCz4ZGH4ZGb4ZGv4ZKD4ZKX4ZKr4ZK/4ZOT4ZOn4ZO74ZSP4ZSj4ZS34ZWL4ZWf4ZWz4ZaH4Zab4Zav4ZeD4ZeX4Zer4Ze/4ZiT4Zin4Zi74ZmP4Zmj4Zm34ZqL4Zqi4Zq24ZuK4Zue4Zuy4ZyN4Zyq4Z2H4Z2n4Z6J4Z6d4Z6x4Z+F4Z+Z4Z+14aCP4aCp4aC94aGR4aGl4aKA4aKU4aKo4aOB4aOV4aOp4aSH4aSb4aS04aWP4aWj4aaE4aaY4aaw4aeE4aeh4ae14aiJ4aif4aiz\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"ᩇᩛᩰ᪆᪦᪼ᬁᬕᬩᬽ᭔᭨᭼ᮑᮥ᮹ᯍᯡ᯽ᰑᰥ᰼᱓ᱧᱻᲖᲪ᳀᳜ᳰᴉᴝᴱᵅᵙᵭᶁᶕᶩᶽ᷹᷑ᷥḍḡḵṉṝṱẅẙậềổứỽἑἩἽὕὭᾃᾗᾫ῀ῗῬ ‘‬⁀⁔⁩ⁿₔ₫₿⃢℅ℙℭ⅁⅕Ⅹⅽ↕↩↽⇑⇥⇹∍∡∵≉≝≱⊅⊙⊭\",\n\t\t\t\"encodedString\": \"4amH4amb4amw4aqG4aqm4aq84ayB4ayV4ayp4ay94a2U4a2o4a284a6R4a6l4a654a+N4a+h4a+94bCR4bCl4bC84bGT4bGn4bG74bKW4bKq4bOA4bOc4bOw4bSJ4bSd4bSx4bWF4bWZ4bWt4baB4baV4bap4ba94beR4bel4be54biN4bih4bi14bmJ4bmd4bmx4bqF4bqZ4bqt4buB4buV4bup4bu94byR4byp4by94b2V4b2t4b6D4b6X4b6r4b+A4b+X4b+s4oCE4oCY4oCs4oGA4oGU4oGp4oG/4oKU4oKr4oK/4oOi4oSF4oSZ4oSt4oWB4oWV4oWp4oW94oaV4oap4oa94oeR4oel4oe54oiN4oih4oi14omJ4omd4omx4oqF4oqZ4oqt\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"⋁⋕⋩⋽⌑⌥⌹⍍⍡⍵⎉⎝⎱⏅⏙⏭␁␕⑂⑫⑿⒓⒧ⒻⓏⓣ⓷┋┟┳╇╛╯▃▗▫▿◓◧◻☏☣☷♋♟♳⚇⚛⚯⛃⛗⛫⛿✓✧✻❏❣❷➋➟➳⟇⟛⟯⠃⠗⠫⠿⡓⡧⡻⢏⢣⢷⣋⣟⣳⤇⤛⤯⥃⥗⥫⥿⦓⦧⦻⧏⧣⧷⨋⨟⨳⩇⩛⩯⪃⪗⪫\",\n\t\t\t\"encodedString\": \"4ouB4ouV4oup4ou94oyR4oyl4oy54o2N4o2h4o214o6J4o6d4o6x4o+F4o+Z4o+t4pCB4pCV4pGC4pGr4pG/4pKT4pKn4pK74pOP4pOj4pO34pSL4pSf4pSz4pWH4pWb4pWv4paD4paX4par4pa/4peT4pen4pe74piP4pij4pi34pmL4pmf4pmz4pqH4pqb4pqv4puD4puX4pur4pu/4pyT4pyn4py74p2P4p2j4p234p6L4p6f4p6z4p+H4p+b4p+v4qCD4qCX4qCr4qC/4qGT4qGn4qG74qKP4qKj4qK34qOL4qOf4qOz4qSH4qSb4qSv4qWD4qWX4qWr4qW/4qaT4qan4qa74qeP4qej4qe34qiL4qif4qiz4qmH4qmb4qmv4qqD4qqX4qqr\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"⪿⫓⫧⫻⬏⬣⬷⭋⭟⭳⮉⮞⮲⯆⯚⯮ⰂⰖⰪⰾⱒⱦⱺⲎⲢⲶⳊⳞⳲⴋⴟⴻⵏⵣⶌⶪⷁⷘⷭ⸁⸕⸩⸽⹑⺇⺜⺰⻄⻘⻬⼌⼠⼴⽈⽜⽰⾄⾘⾬⿀⿔〆〚〮ぃしにみんォソパュヹㄒㄦㄻㅏㅣㅷㆋㆠㆴ㇈㇜ㇼ㈐㈥㈹㉍㉡㉵㊉㊝㊱㋅㋙㋭㌁㌕\",\n\t\t\t\"encodedString\": \"4qq/4quT4qun4qu74qyP4qyj4qy34q2L4q2f4q2z4q6J4q6e4q6y4q+G4q+a4q+u4rCC4rCW4rCq4rC+4rGS4rGm4rG64rKO4rKi4rK24rOK4rOe4rOy4rSL4rSf4rS74rWP4rWj4raM4raq4reB4reY4ret4riB4riV4rip4ri94rmR4rqH4rqc4rqw4ruE4ruY4rus4ryM4ryg4ry04r2I4r2c4r2w4r6E4r6Y4r6s4r+A4r+U44CG44Ca44Cu44GD44GX44Gr44G/44KT44Kp44K944OR44Ol44O544SS44Sm44S744WP44Wj44W344aL44ag44a044eI44ec44e844iQ44il44i544mN44mh44m144qJ44qd44qx44uF44uZ44ut44yB44yV\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"㌩㌽㍑㍥㍹㎍㎡㎵㏉㏝㏱㐅㐙㐭㑁㑕㑩㑽㒑㒥㒹㓍㓡㓵㔉㔝㔱㕅㕙㕭㖁㖕㖩㖽㗑㗥㗹㘍㘡㘵㙉㙝㙱㚅㚙㚭㛁㛕㛩㛽㜑㜥㜹㝍㝡㝵㞉㞝㞱㟅㟙㟭㠁㠕㠩㠽㡑㡥㡹㢍㢡㢵㣉㣝㣱㤅㤙㤭㥁㥕㥩㥽㦑㦥㦹㧍㧡㧵㨉㨝㨱㩅㩙㩭㪁㪕㪩㪽㫑㫥\",\n\t\t\t\"encodedString\": \"44yp44y9442R442l4425446N446h446144+J44+d44+x45CF45CZ45Ct45GB45GV45Gp45G945KR45Kl45K545ON45Oh45O145SJ45Sd45Sx45WF45WZ45Wt45aB45aV45ap45a945eR45el45e545iN45ih45i145mJ45md45mx45qF45qZ45qt45uB45uV45up45u945yR45yl45y5452N452h4521456J456d456x45+F45+Z45+t46CB46CV46Cp46C946GR46Gl46G546KN46Kh46K146OJ46Od46Ox46SF46SZ46St46WB46WV46Wp46W946aR46al46a546eN46eh46e146iJ46id46ix46mF46mZ46mt46qB46qV46qp46q946uR46ul\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"㫹㬍㬡㬵㭉㭝㭱㮅㮙㮭㯁㯕㯩㯽㰑㰥㰹㱍㱡㱵㲉㲝㲱㳅㳙㳭㴁㴕㴩㴽㵑㵥㵹㶍㶡㶵㷉㷝㷱㸅㸙㸭㹁㹕㹩㹽㺑㺥㺹㻍㻡㻵㼉㼝㼱㽅㽙㽭㾁㾕㾩㾽㿑㿥㿹䀍䀡䀵䁉䁝䁱䂅䂙䂭䃁䃕䃩䃽䄑䄥䄹䅍䅡䅵䆉䆝䆱䇅䇙䇭䈁䈕䈩䈽䉑䉥䉹䊍䊡䊵\",\n\t\t\t\"encodedString\": \"46u546yN46yh46y1462J462d462x466F466Z466t46+B46+V46+p46+947CR47Cl47C547GN47Gh47G147KJ47Kd47Kx47OF47OZ47Ot47SB47SV47Sp47S947WR47Wl47W547aN47ah47a147eJ47ed47ex47iF47iZ47it47mB47mV47mp47m947qR47ql47q547uN47uh47u147yJ47yd47yx472F472Z472t476B476V476p476947+R47+l47+55ICN5ICh5IC15IGJ5IGd5IGx5IKF5IKZ5IKt5IOB5IOV5IOp5IO95ISR5ISl5IS55IWN5IWh5IW15IaJ5Iad5Iax5IeF5IeZ5Iet5IiB5IiV5Iip5Ii95ImR5Iml5Im55IqN5Iqh5Iq1\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"䋉䋝䋱䌅䌙䌭䍁䍕䍩䍽䎑䎥䎹䏍䏡䏵䐉䐝䐱䑅䑙䑭䒁䒕䒩䒽䓑䓥䓹䔍䔡䔵䕉䕝䕱䖅䖙䖭䗁䗕䗩䗽䘑䘥䘹䙍䙡䙵䚉䚝䚱䛅䛙䛭䜁䜕䜩䜽䝑䝥䝹䞍䞡䞵䟉䟝䟱䠅䠙䠭䡁䡕䡩䡽䢑䢥䢹䣍䣡䣵䤉䤝䤱䥅䥙䥭䦁䦕䦩䦽䧑䧥䧹䨍䨡䨵䩉䩝䩱䪅\",\n\t\t\t\"encodedString\": \"5IuJ5Iud5Iux5IyF5IyZ5Iyt5I2B5I2V5I2p5I295I6R5I6l5I655I+N5I+h5I+15JCJ5JCd5JCx5JGF5JGZ5JGt5JKB5JKV5JKp5JK95JOR5JOl5JO55JSN5JSh5JS15JWJ5JWd5JWx5JaF5JaZ5Jat5JeB5JeV5Jep5Je95JiR5Jil5Ji55JmN5Jmh5Jm15JqJ5Jqd5Jqx5JuF5JuZ5Jut5JyB5JyV5Jyp5Jy95J2R5J2l5J255J6N5J6h5J615J+J5J+d5J+x5KCF5KCZ5KCt5KGB5KGV5KGp5KG95KKR5KKl5KK55KON5KOh5KO15KSJ5KSd5KSx5KWF5KWZ5KWt5KaB5KaV5Kap5Ka95KeR5Kel5Ke55KiN5Kih5Ki15KmJ5Kmd5Kmx5KqF\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"䪙䪭䫁䫕䫩䫽䬑䬥䬹䭍䭡䭵䮉䮝䮱䯅䯙䯭䰁䰕䰩䰽䱑䱥䱹䲍䲡䲵䳉䳝䳱䴅䴙䴭䵁䵕䵩䵽䶑䶥䶹䷍䷡䷵三丝丱久乙乭亁井亩亽仑以仹伍伡伵佉佝佱侅侙侭俁俕俩俽們倥倹偍偡偵傉傝傱僅僙僭儁儕儩儽兑入兹再冡况凉凝凱刅则刭剁剕\",\n\t\t\t\"encodedString\": \"5KqZ5Kqt5KuB5KuV5Kup5Ku95KyR5Kyl5Ky55K2N5K2h5K215K6J5K6d5K6x5K+F5K+Z5K+t5LCB5LCV5LCp5LC95LGR5LGl5LG55LKN5LKh5LK15LOJ5LOd5LOx5LSF5LSZ5LSt5LWB5LWV5LWp5LW95LaR5Lal5La55LeN5Leh5Le15LiJ5Lid5Lix5LmF5LmZ5Lmt5LqB5LqV5Lqp5Lq95LuR5Lul5Lu55LyN5Lyh5Ly15L2J5L2d5L2x5L6F5L6Z5L6t5L+B5L+V5L+p5L+95YCR5YCl5YC55YGN5YGh5YG15YKJ5YKd5YKx5YOF5YOZ5YOt5YSB5YSV5YSp5YS95YWR5YWl5YW55YaN5Yah5Ya15YeJ5Yed5Yex5YiF5YiZ5Yit5YmB5YmV\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"剩剽劑劥効勍勡勵匉匝匱卅卙卭厁厕厩厽发句叹名吡吵呉呝呱咅咙咭品哕哩哽唑唥唹啍啡啵喉喝喱嗅嗙嗭嘁嘕嘩嘽噑噥噹嚍嚡嚵囉囝囱圅圙圭坁坕坩坽垑垥垹埍埡埵堉堝報塅塙塭墁墕墩墽壑壥壹复夡夵奉奝奱妅妙妭姁姕姩姽娑娥\",\n\t\t\t\"encodedString\": \"5Ymp5Ym95YqR5Yql5Yq55YuN5Yuh5Yu15YyJ5Yyd5Yyx5Y2F5Y2Z5Y2t5Y6B5Y6V5Y6p5Y695Y+R5Y+l5Y+55ZCN5ZCh5ZC15ZGJ5ZGd5ZGx5ZKF5ZKZ5ZKt5ZOB5ZOV5ZOp5ZO95ZSR5ZSl5ZS55ZWN5ZWh5ZW15ZaJ5Zad5Zax5ZeF5ZeZ5Zet5ZiB5ZiV5Zip5Zi95ZmR5Zml5Zm55ZqN5Zqh5Zq15ZuJ5Zud5Zux5ZyF5ZyZ5Zyt5Z2B5Z2V5Z2p5Z295Z6R5Z6l5Z655Z+N5Z+h5Z+15aCJ5aCd5aCx5aGF5aGZ5aGt5aKB5aKV5aKp5aK95aOR5aOl5aO55aSN5aSh5aS15aWJ5aWd5aWx5aaF5aaZ5aat5aeB5aeV5aep5ae95aiR5ail\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"娹婍婡婵媉媝媱嫅嫙嫭嬁嬕嬩嬽孑孥孹宍审宵寉寝寱尅尙尭屁展屩屽岑岥岹峍峡峵崉崝崱嵅嵙嵭嶁嶕嶩嶽巑工巹帍帡帵幉幝幱庅庙庭廁廕廩廽弑弥弹彍彡彵徉徝徱必忙忭态怕怩怽恑恥恹悍悡悵惉惝惱愅愙愭慁慕慩慽憑憥憹懍懡懵\",\n\t\t\t\"encodedString\": \"5ai55amN5amh5am15aqJ5aqd5aqx5auF5auZ5aut5ayB5ayV5ayp5ay95a2R5a2l5a255a6N5a6h5a615a+J5a+d5a+x5bCF5bCZ5bCt5bGB5bGV5bGp5bG95bKR5bKl5bK55bON5bOh5bO15bSJ5bSd5bSx5bWF5bWZ5bWt5baB5baV5bap5ba95beR5bel5be55biN5bih5bi15bmJ5bmd5bmx5bqF5bqZ5bqt5buB5buV5bup5bu95byR5byl5by55b2N5b2h5b215b6J5b6d5b6x5b+F5b+Z5b+t5oCB5oCV5oCp5oC95oGR5oGl5oG55oKN5oKh5oK15oOJ5oOd5oOx5oSF5oSZ5oSt5oWB5oWV5oWp5oW95oaR5oal5oa55oeN5oeh5oe1\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"戉戝戱扅扙扭抁投抩抽拑拥拹挍挡挵捉捝捱掅掙掭揁揕揩揽搑搥搹摍摡摵撉撝撱擅擙擭攁攕攩攽救敥敹斍斡斵旉旝旱昅昙昭晁晕晩晽暑暥暹曍曡曵有朝朱杅杙杭极枕枩枽柑查柹栍校栵桉桝桱梅梙梭棁棕棩棽椑椥椹楍楡極榉榝榱槅\",\n\t\t\t\"encodedString\": \"5oiJ5oid5oix5omF5omZ5omt5oqB5oqV5oqp5oq95ouR5oul5ou55oyN5oyh5oy15o2J5o2d5o2x5o6F5o6Z5o6t5o+B5o+V5o+p5o+95pCR5pCl5pC55pGN5pGh5pG15pKJ5pKd5pKx5pOF5pOZ5pOt5pSB5pSV5pSp5pS95pWR5pWl5pW55paN5pah5pa15peJ5ped5pex5piF5piZ5pit5pmB5pmV5pmp5pm95pqR5pql5pq55puN5puh5pu15pyJ5pyd5pyx5p2F5p2Z5p2t5p6B5p6V5p6p5p695p+R5p+l5p+55qCN5qCh5qC15qGJ5qGd5qGx5qKF5qKZ5qKt5qOB5qOV5qOp5qO95qSR5qSl5qS55qWN5qWh5qW15qaJ5qad5qax5qeF\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"槙槭樁樕権樽橑橥橹檍檡檵櫉櫝櫱欅欙欭歁歕歩歽殑殥殹母毡毵氉氝氱汅汙汭沁沕沩沽泑泥泹洍洡洵浉浝浱涅涙涭淁淕淩淽渑渥渹湍湡湵溉溝溱滅滙滭漁漕漩漽潑潥潹澍澡澵濉濝濱瀅瀙瀭灁灕灩災炑炥点烍烡烵焉焝焱煅煙煭熁熕\",\n\t\t\t\"encodedString\": \"5qeZ5qet5qiB5qiV5qip5qi95qmR5qml5qm55qqN5qqh5qq15quJ5qud5qux5qyF5qyZ5qyt5q2B5q2V5q2p5q295q6R5q6l5q655q+N5q+h5q+15rCJ5rCd5rCx5rGF5rGZ5rGt5rKB5rKV5rKp5rK95rOR5rOl5rO55rSN5rSh5rS15rWJ5rWd5rWx5raF5raZ5rat5reB5reV5rep5re95riR5ril5ri55rmN5rmh5rm15rqJ5rqd5rqx5ruF5ruZ5rut5ryB5ryV5ryp5ry95r2R5r2l5r255r6N5r6h5r615r+J5r+d5r+x54CF54CZ54Ct54GB54GV54Gp54G954KR54Kl54K554ON54Oh54O154SJ54Sd54Sx54WF54WZ54Wt54aB54aV\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"熩熽燑燥燹爍爡爵牉牝牱犅犙犭狁狕狩狽猑猥猹獍獡獵玉玝玱珅珙班琁琕琩琽瑑瑥瑹璍璡璵瓉瓝瓱甅甙甭畁畕畩畽疑疥疹痍痡痵瘉瘝瘱癅癙癭皁皕皩皽监盥盹眍眡眵睉睝睱瞅瞙瞭矁矕矩矽砑砥砹硍硡硵碉碝碱磅磙磭礁礕礩礽祑祥\",\n\t\t\t\"encodedString\": \"54ap54a954eR54el54e554iN54ih54i154mJ54md54mx54qF54qZ54qt54uB54uV54up54u954yR54yl54y5542N542h5421546J546d546x54+F54+Z54+t55CB55CV55Cp55C955GR55Gl55G555KN55Kh55K155OJ55Od55Ox55SF55SZ55St55WB55WV55Wp55W955aR55al55a555eN55eh55e155iJ55id55ix55mF55mZ55mt55qB55qV55qp55q955uR55ul55u555yN55yh55y1552J552d552x556F556Z556t55+B55+V55+p55+956CR56Cl56C556GN56Gh56G156KJ56Kd56Kx56OF56OZ56Ot56SB56SV56Sp56S956WR56Wl\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"祹禍禡禵秉秝秱稅稙稭穁穕穩穽窑窥窹竍竡竵笉笝笱筅筙筭箁箕箩箽篑篥篹簍簡簵籉籝籱粅粙粭糁糕糩糽紑紥紹絍絡絵綉綝綱緅緙緭縁縕縩總繑繥繹纍纡纵绉绝绱缅缙缭罁罕罩罽羑羥羹翍翡翵耉耝耱聅聙聭肁肕肩肽胑胥胹脍脡脵\",\n\t\t\t\"encodedString\": \"56W556aN56ah56a156eJ56ed56ex56iF56iZ56it56mB56mV56mp56m956qR56ql56q556uN56uh56u156yJ56yd56yx562F562Z562t566B566V566p566956+R56+l56+557CN57Ch57C157GJ57Gd57Gx57KF57KZ57Kt57OB57OV57Op57O957SR57Sl57S557WN57Wh57W157aJ57ad57ax57eF57eZ57et57iB57iV57ip57i957mR57ml57m557qN57qh57q157uJ57ud57ux57yF57yZ57yt572B572V572p5729576R576l576557+N57+h57+16ICJ6ICd6ICx6IGF6IGZ6IGt6IKB6IKV6IKp6IK96IOR6IOl6IO56ISN6ISh6IS1\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"腉腝腱膅膙膭臁臕臩臽舑舥船艍艡艵芉芝花苅苙苭茁茕茩茽荑荥荹莍莡莵菉菝菱萅萙萭葁葕葩葽蒑蒥蒹蓍蓡蓵蔉蔝蔱蕅蕙蕭薁薕薩薽藑藥藹蘍蘡蘵虉虝虱蚅蚙蚭蛁蛕蛩蛽蜑蜥蜹蝍蝡蝵螉螝螱蟅蟙蟭蠁蠕蠩蠽衑补衹袍袡袵裉裝裱褅\",\n\t\t\t\"encodedString\": \"6IWJ6IWd6IWx6IaF6IaZ6Iat6IeB6IeV6Iep6Ie96IiR6Iil6Ii56ImN6Imh6Im16IqJ6Iqd6Iqx6IuF6IuZ6Iut6IyB6IyV6Iyp6Iy96I2R6I2l6I256I6N6I6h6I616I+J6I+d6I+x6JCF6JCZ6JCt6JGB6JGV6JGp6JG96JKR6JKl6JK56JON6JOh6JO16JSJ6JSd6JSx6JWF6JWZ6JWt6JaB6JaV6Jap6Ja96JeR6Jel6Je56JiN6Jih6Ji16JmJ6Jmd6Jmx6JqF6JqZ6Jqt6JuB6JuV6Jup6Ju96JyR6Jyl6Jy56J2N6J2h6J216J6J6J6d6J6x6J+F6J+Z6J+t6KCB6KCV6KCp6KC96KGR6KGl6KG56KKN6KKh6KK16KOJ6KOd6KOx6KSF\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"褙褭襁襕襩襽覑覥覹觍觡觵訉訝許詅詙詭誁誕誩誽諑諥諹謍謡謵證譝譱讅讙训证试诩诽谑谥谹豍象豵貉貝貱賅賙賭贁贕贩贽赑赥赹趍趡趵跉距跱踅踙踭蹁蹕蹩蹽躑躥躹軍軡軵載輝輱轅轙轭辁辕辩辽近迥迹逍逡逵遉遝遱邅邙邭郁郕\",\n\t\t\t\"encodedString\": \"6KSZ6KSt6KWB6KWV6KWp6KW96KaR6Kal6Ka56KeN6Keh6Ke16KiJ6Kid6Kix6KmF6KmZ6Kmt6KqB6KqV6Kqp6Kq96KuR6Kul6Ku56KyN6Kyh6Ky16K2J6K2d6K2x6K6F6K6Z6K6t6K+B6K+V6K+p6K+96LCR6LCl6LC56LGN6LGh6LG16LKJ6LKd6LKx6LOF6LOZ6LOt6LSB6LSV6LSp6LS96LWR6LWl6LW56LaN6Lah6La16LeJ6Led6Lex6LiF6LiZ6Lit6LmB6LmV6Lmp6Lm96LqR6Lql6Lq56LuN6Luh6Lu16LyJ6Lyd6Lyx6L2F6L2Z6L2t6L6B6L6V6L6p6L696L+R6L+l6L+56YCN6YCh6YC16YGJ6YGd6YGx6YKF6YKZ6YKt6YOB6YOV\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"郩都鄑鄥鄹配酡酵醉醝醱釅釙釭鈁鈕鈩鈽鉑鉥鉹銍銡銵鋉鋝鋱錅錙錭鍁鍕鍩鍽鎑鎥鎹鏍鏡鏵鐉鐝鐱鑅鑙鑭钁钕钩钽铑铥铹锍锡锵镉镝镱閅閙閭闁闕闩闽阑阥阹降陡陵隉隝隱雅雙雭霁霕霩霽靑靥靹鞍鞡鞵韉韝韱項頙頭顁顕顩顽频颥\",\n\t\t\t\"encodedString\": \"6YOp6YO96YSR6YSl6YS56YWN6YWh6YW16YaJ6Yad6Yax6YeF6YeZ6Yet6YiB6YiV6Yip6Yi96YmR6Yml6Ym56YqN6Yqh6Yq16YuJ6Yud6Yux6YyF6YyZ6Yyt6Y2B6Y2V6Y2p6Y296Y6R6Y6l6Y656Y+N6Y+h6Y+16ZCJ6ZCd6ZCx6ZGF6ZGZ6ZGt6ZKB6ZKV6ZKp6ZK96ZOR6ZOl6ZO56ZSN6ZSh6ZS16ZWJ6ZWd6ZWx6ZaF6ZaZ6Zat6ZeB6ZeV6Zep6Ze96ZiR6Zil6Zi56ZmN6Zmh6Zm16ZqJ6Zqd6Zqx6ZuF6ZuZ6Zut6ZyB6ZyV6Zyp6Zy96Z2R6Z2l6Z256Z6N6Z6h6Z616Z+J6Z+d6Z+x6aCF6aCZ6aCt6aGB6aGV6aGp6aG96aKR6aKl\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"颹飍飡飵餉餝餱饅饙饭馁馕馩馽駑駥駹騍騡騵驉驝驱骅骙骭髁髕髩髽鬑鬥鬹魍魡魵鮉鮝鮱鯅鯙鯭鰁鰕鰩鰽鱑鱥鱹鲍鲡鲵鳉鳝鳱鴅鴙鴭鵁鵕鵩鵽鶑鶥鶹鷍鷡鷵鸉鸝鸱鹅鹙鹭麁麕麩麽黑黥黹鼍鼡鼵齉齝齱龅龙龭鿁鿕鿩鿽ꀑꀥꀹꁍꁡꁵ\",\n\t\t\t\"encodedString\": \"6aK56aON6aOh6aO16aSJ6aSd6aSx6aWF6aWZ6aWt6aaB6aaV6aap6aa96aeR6ael6ae56aiN6aih6ai16amJ6amd6amx6aqF6aqZ6aqt6auB6auV6aup6au96ayR6ayl6ay56a2N6a2h6a216a6J6a6d6a6x6a+F6a+Z6a+t6bCB6bCV6bCp6bC96bGR6bGl6bG56bKN6bKh6bK16bOJ6bOd6bOx6bSF6bSZ6bSt6bWB6bWV6bWp6bW96baR6bal6ba56beN6beh6be16biJ6bid6bix6bmF6bmZ6bmt6bqB6bqV6bqp6bq96buR6bul6bu56byN6byh6by16b2J6b2d6b2x6b6F6b6Z6b6t6b+B6b+V6b+p6b+96oCR6oCl6oC56oGN6oGh6oG1\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"ꂉꂝꂱꃅꃙꃭꄁꄕꄩꄽꅑꅥꅹꆍꆡꆵꇉꇝꇱꈅꈙꈭꉁꉕꉩꉽꊑꊥꊹꋍꋡꋵꌉꌝꌱꍅꍙꍭꎁꎕꎩꎽꏑꏥꏹꐍꐡꐵꑉꑝꑱꒅ꒜꒰꓄ꓡꓵꔉꔝꔱꕅꕙꕭꖁꖕꖩꖽꗑꗥꗹ꘍꘡ꙉꙝ꙱ꚅꚙꚭꛁꛕꛩ꜅ꜙꜭꝁꝕꝩꝽꞑꞥꞹꟓꠀꠔ꠨ꡅꡙꡭꢉꢝ\",\n\t\t\t\"encodedString\": \"6oKJ6oKd6oKx6oOF6oOZ6oOt6oSB6oSV6oSp6oS96oWR6oWl6oW56oaN6oah6oa16oeJ6oed6oex6oiF6oiZ6oit6omB6omV6omp6om96oqR6oql6oq56ouN6ouh6ou16oyJ6oyd6oyx6o2F6o2Z6o2t6o6B6o6V6o6p6o696o+R6o+l6o+56pCN6pCh6pC16pGJ6pGd6pGx6pKF6pKc6pKw6pOE6pOh6pO16pSJ6pSd6pSx6pWF6pWZ6pWt6paB6paV6pap6pa96peR6pel6pe56piN6pih6pmJ6pmd6pmx6pqF6pqZ6pqt6puB6puV6pup6pyF6pyZ6pyt6p2B6p2V6p2p6p296p6R6p6l6p656p+T6qCA6qCU6qCo6qGF6qGZ6qGt6qKJ6qKd\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"ꢱꣅ꣧ꣻꤏꤣꤷꥋꥪꦁꦕꦩꦽ꧒ꧪꧾꨓꨧꩄ꩜ꩰꪄꪘꪬꫀꫬꬌꬬꭁꭕꭩꮁꮕꮩꮽꯑꯥ각강갩갽걑걥걹겍겡겵곉곝곱괅괙괭굁굕굩굽궑궥궹귍귡귵급긝긱깅깙깭꺁꺕꺩꺽껑껥껹꼍꼡꼵꽉꽝꽱꾅꾙꾭꿁꿕꿩꿽뀑뀥뀹끍끡끵낉낝낱냅냙\",\n\t\t\t\"encodedString\": \"6qKx6qOF6qOn6qO76qSP6qSj6qS36qWL6qWq6qaB6qaV6qap6qa96qeS6qeq6qe+6qiT6qin6qmE6qmc6qmw6qqE6qqY6qqs6quA6qus6qyM6qys6q2B6q2V6q2p6q6B6q6V6q6p6q696q+R6q+l6rCB6rCV6rCp6rC96rGR6rGl6rG56rKN6rKh6rK16rOJ6rOd6rOx6rSF6rSZ6rSt6rWB6rWV6rWp6rW96raR6ral6ra56reN6reh6re16riJ6rid6rix6rmF6rmZ6rmt6rqB6rqV6rqp6rq96ruR6rul6ru56ryN6ryh6ry16r2J6r2d6r2x6r6F6r6Z6r6t6r+B6r+V6r+p6r+964CR64Cl64C564GN64Gh64G164KJ64Kd64Kx64OF64OZ\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"냭넁넕넩넽녑녥녹농놡놵뇉뇝뇱눅눙눭뉁뉕뉩뉽늑능늹닍닡답댉댝댱덅덙덭뎁뎕뎩뎽돑돥돹됍됡됵둉둝둱뒅뒙뒭듁듕듩듽딑딥딹땍땡땵떉떝떱뗅뗙뗭똁똕똩똽뙑뙥뙹뚍뚡뚵뛉뛝뛱뜅뜙뜭띁띕띩락랑랥랹럍럡럵렉렝렱롅롙롭뢁뢕뢩\",\n\t\t\t\"encodedString\": \"64Ot64SB64SV64Sp64S964WR64Wl64W564aN64ah64a164eJ64ed64ex64iF64iZ64it64mB64mV64mp64m964qR64ql64q564uN64uh64u164yJ64yd64yx642F642Z642t646B646V646p646964+R64+l64+565CN65Ch65C165GJ65Gd65Gx65KF65KZ65Kt65OB65OV65Op65O965SR65Sl65S565WN65Wh65W165aJ65ad65ax65eF65eZ65et65iB65iV65ip65i965mR65ml65m565qN65qh65q165uJ65ud65ux65yF65yZ65yt652B652V652p6529656R656l656565+N65+h65+166CJ66Cd66Cx66GF66GZ66Gt66KB66KV66Kp\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"뢽룑룥룹뤍뤡뤵륉륝륱릅릙릭링맕맩맽먑먥먹멍멡멵몉몝몱뫅뫙뫭묁묕묩묽뭑뭥뭹뮍뮡뮵믉믝믱밅밙밭뱁뱕뱩뱽벑벥벹볍볡복봉봝봱뵅뵙뵭북붕붩붽뷑뷥뷹븍븡븵빉빝빱뺅뺙뺭뻁뻕뻩뻽뼑뼥뼹뽍뽡뽵뾉뾝뾱뿅뿙뿭쀁쀕쀩쀽쁑쁥쁹\",\n\t\t\t\"encodedString\": \"66K966OR66Ol66O566SN66Sh66S166WJ66Wd66Wx66aF66aZ66at66eB66eV66ep66e966iR66il66i566mN66mh66m166qJ66qd66qx66uF66uZ66ut66yB66yV66yp66y9662R662l6625666N666h666166+J66+d66+x67CF67CZ67Ct67GB67GV67Gp67G967KR67Kl67K567ON67Oh67O167SJ67Sd67Sx67WF67WZ67Wt67aB67aV67ap67a967eR67el67e567iN67ih67i167mJ67md67mx67qF67qZ67qt67uB67uV67up67u967yR67yl67y5672N672h6721676J676d676x67+F67+Z67+t7ICB7ICV7ICp7IC97IGR7IGl7IG5\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"삍삡삵색생샱섅섙섭셁셕셩셽솑솥솹쇍쇡쇵숉숝숱쉅쉙쉭슁슕슩슽싑싥싹쌍쌡쌵썉썝썱쎅쎙쎭쏁쏕쏩쏽쐑쐥쐹쑍쑡쑵쒉쒝쒱쓅쓙쓭씁씕씩씽앑앥앹얍얡억엉엝엱옅옙옭왁왕왩왽욑욥욹웍웡웵윉윝윱읅읙읭잁잕잩잽쟑쟥쟹젍젡젵졉\",\n\t\t\t\"encodedString\": \"7IKN7IKh7IK17IOJ7IOd7IOx7ISF7ISZ7ISt7IWB7IWV7IWp7IW97IaR7Ial7Ia57IeN7Ieh7Ie17IiJ7Iid7Iix7ImF7ImZ7Imt7IqB7IqV7Iqp7Iq97IuR7Iul7Iu57IyN7Iyh7Iy17I2J7I2d7I2x7I6F7I6Z7I6t7I+B7I+V7I+p7I+97JCR7JCl7JC57JGN7JGh7JG17JKJ7JKd7JKx7JOF7JOZ7JOt7JSB7JSV7JSp7JS97JWR7JWl7JW57JaN7Jah7Ja17JeJ7Jed7Jex7JiF7JiZ7Jit7JmB7JmV7Jmp7Jm97JqR7Jql7Jq57JuN7Juh7Ju17JyJ7Jyd7Jyx7J2F7J2Z7J2t7J6B7J6V7J6p7J697J+R7J+l7J+57KCN7KCh7KC17KGJ\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"졝족종좙좭죁죕죩죽중줥줹쥍쥡쥵즉증즱짅짙짭쨁쨕쨩쨽쩑쩥쩹쪍쪡쪵쫉쫝쫱쬅쬙쬭쭁쭕쭩쭽쮑쮥쮹쯍쯡쯵찉찝찱책챙챭첁첕첩첽쳑쳥쳹촍촡촵쵉쵝쵱춅춙춭췁췕췩췽츑츥츹칍칡칵캉캝캱컅컙컭켁켕켩켽콑콥콹쾍쾡쾵쿉쿝쿱퀅퀙\",\n\t\t\t\"encodedString\": \"7KGd7KGx7KKF7KKZ7KKt7KOB7KOV7KOp7KO97KSR7KSl7KS57KWN7KWh7KW17KaJ7Kad7Kax7KeF7KeZ7Ket7KiB7KiV7Kip7Ki97KmR7Kml7Km57KqN7Kqh7Kq17KuJ7Kud7Kux7KyF7KyZ7Kyt7K2B7K2V7K2p7K297K6R7K6l7K657K+N7K+h7K+17LCJ7LCd7LCx7LGF7LGZ7LGt7LKB7LKV7LKp7LK97LOR7LOl7LO57LSN7LSh7LS17LWJ7LWd7LWx7LaF7LaZ7Lat7LeB7LeV7Lep7Le97LiR7Lil7Li57LmN7Lmh7Lm17LqJ7Lqd7Lqx7LuF7LuZ7Lut7LyB7LyV7Lyp7Ly97L2R7L2l7L257L6N7L6h7L617L+J7L+d7L+x7YCF7YCZ\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"퀭큁큕큩큽킑킥킹탍탡탵턉턝턱텅텙텭톁톕톩톽퇑퇥퇹툍툡툵퉉퉝퉱튅튙튭틁틕틩틽팑팥팹퍍퍡퍵펉펝펱폅폙폭퐁퐕퐩퐽푑푥푹풍풡풵퓉퓝퓱픅픙픭핁핕합핽햑향햹헍헡헵혉혝혱홅홙홭횁횕횩횽훑훥훹휍휡휵흉흝흱힅힙ힹퟑퟥퟹ\",\n\t\t\t\"encodedString\": \"7YCt7YGB7YGV7YGp7YG97YKR7YKl7YK57YON7YOh7YO17YSJ7YSd7YSx7YWF7YWZ7YWt7YaB7YaV7Yap7Ya97YeR7Yel7Ye57YiN7Yih7Yi17YmJ7Ymd7Ymx7YqF7YqZ7Yqt7YuB7YuV7Yup7Yu97YyR7Yyl7Yy57Y2N7Y2h7Y217Y6J7Y6d7Y6x7Y+F7Y+Z7Y+t7ZCB7ZCV7ZCp7ZC97ZGR7ZGl7ZG57ZKN7ZKh7ZK17ZOJ7ZOd7ZOx7ZSF7ZSZ7ZSt7ZWB7ZWV7ZWp7ZW97ZaR7Zal7Za57ZeN7Zeh7Ze17ZiJ7Zid7Zix7ZmF7ZmZ7Zmt7ZqB7ZqV7Zqp7Zq97ZuR7Zul7Zu57ZyN7Zyh7Zy17Z2J7Z2d7Z2x7Z6F7Z6Z7Z657Z+R7Z+l7Z+5\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"\",\n\t\t\t\"encodedString\": \"7oCR7oCl7oC57oGN7oGh7oG17oKJ7oKd7oKx7oOF7oOZ7oOt7oSB7oSV7oSp7oS97oWR7oWl7oW57oaN7oah7oa17oeJ7oed7oex7oiF7oiZ7oit7omB7omV7omp7om97oqR7oql7oq57ouN7ouh7ou17oyJ7oyd7oyx7o2F7o2Z7o2t7o6B7o6V7o6p7o697o+R7o+l7o+57pCN7pCh7pC17pGJ7pGd7pGx7pKF7pKZ7pKt7pOB7pOV7pOp7pO97pSR7pSl7pS57pWN7pWh7pW17paJ7pad7pax7peF7peZ7pet7piB7piV7pip7pi97pmR7pml7pm57pqN7pqh7pq17puJ7pud7pux7pyF7pyZ7pyt7p2B7p2V7p2p7p297p6R7p6l7p657p+N\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"\",\n\t\t\t\"encodedString\": \"7p+h7p+17qCJ7qCd7qCx7qGF7qGZ7qGt7qKB7qKV7qKp7qK97qOR7qOl7qO57qSN7qSh7qS17qWJ7qWd7qWx7qaF7qaZ7qat7qeB7qeV7qep7qe97qiR7qil7qi57qmN7qmh7qm17qqJ7qqd7qqx7quF7quZ7qut7qyB7qyV7qyp7qy97q2R7q2l7q257q6N7q6h7q617q+J7q+d7q+x7rCF7rCZ7rCt7rGB7rGV7rGp7rG97rKR7rKl7rK57rON7rOh7rO17rSJ7rSd7rSx7rWF7rWZ7rWt7raB7raV7rap7ra97reR7rel7re57riN7rih7ri17rmJ7rmd7rmx7rqF7rqZ7rqt7ruB7ruV7rup7ru97ryR7ryl7ry57r2N7r2h7r217r6J7r6d\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"\",\n\t\t\t\"encodedString\": \"7r6x7r+F7r+Z7r+t74CB74CV74Cp74C974GR74Gl74G574KN74Kh74K174OJ74Od74Ox74SF74SZ74St74WB74WV74Wp74W974aR74al74a574eN74eh74e174iJ74id74ix74mF74mZ74mt74qB74qV74qp74q974uR74ul74u574yN74yh74y1742J742d742x746F746Z746t74+B74+V74+p74+975CR75Cl75C575GN75Gh75G175KJ75Kd75Kx75OF75OZ75Ot75SB75SV75Sp75S975WR75Wl75W575aN75ah75a175eJ75ed75ex75iF75iZ75it75mB75mV75mp75m975qR75ql75q575uN75uh75u175yJ75yd75yx752F752Z752t\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"螺拉魯淚率掠黎劣鈴暈慄吝度凞﨩悔祝贈嗢摒画覆頋ﬅשׁסּﭗﭫﭿﮓﮧ﮻ﯟﯳﰇﰛﰯﱃﱗﱫﱿﲓﲧﲻﳏﳣﳷﴋﴟﴳ﵇ﵛﵯﶃﶙﶭﷁ﷼︐︪︾﹒﹨ﺁﺕﺩﺽﻑﻥﻹ０ＤＸｌ｠ｴﾈﾜﾰￇ\",\n\t\t\t\"encodedString\": \"756B756V756p756975+R75+l75+576CN76Ch76C176GJ76Gd76Gx76KF76KZ76Kt76OB76OV76Op76O976SR76Sl76S576WN76Wh76W176aJ76ad76ax76eF76eZ76et76iB76iV76ip76i976mR76ml76m776qP76qj76q376uL76yF76yq762B762X762r762/766T766n766776+f76+z77CH77Cb77Cv77GD77GX77Gr77G/77KT77Kn77K777OP77Oj77O377SL77Sf77Sz77WH77Wb77Wv77aD77aZ77at77eB77e877iQ77iq77i+77mS77mo77qB77qV77qp77q977uR77ul77u577yQ77yk77y4772M772g7720776I776c776w77+H\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"￤𐀅𐀚𐀯𐁅𐁛𐂑𐂥𐂹𐃍𐃡𐃵𐄒𐄦𐄽𐅑𐅥𐅹𐆍𐇔𐇨𐇼𐊒𐊩𐊽𐋠𐋴𐌌𐌠𐌽𐍖𐍪𐎃𐎗𐎬𐏀𐐂𐐖𐐪𐐾𐑒𐑦𐑺𐒎𐒤𐒾𐓒𐓪𐔂𐔖𐔲𐕆𐕚𐕹𐖏𐖦𐖼𐘓𐘧𐘻𐙏𐙣𐙷𐚋𐚟𐚳𐛇𐛛𐛯𐜃𐜗𐜫𐝈𐝦𐞓𐞧𐠁𐠘𐠬𐡆𐡛𐡯𐢃𐢗𐣣𐣽𐤑𐤨𐦁𐦕𐦩𐧁𐧗𐧫𐧿𐨛𐨯𐩐𐩫𐩿\",\n\t\t\t\"encodedString\": \"77+k8JCAhfCQgJrwkICv8JCBhfCQgZvwkIKR8JCCpfCQgrnwkION8JCDofCQg7XwkISS8JCEpvCQhL3wkIWR8JCFpfCQhbnwkIaN8JCHlPCQh6jwkIe88JCKkvCQiqnwkIq98JCLoPCQi7TwkIyM8JCMoPCQjL3wkI2W8JCNqvCQjoPwkI6X8JCOrPCQj4DwkJCC8JCQlvCQkKrwkJC+8JCRkvCQkabwkJG68JCSjvCQkqTwkJK+8JCTkvCQk6rwkJSC8JCUlvCQlLLwkJWG8JCVmvCQlbnwkJaP8JCWpvCQlrzwkJiT8JCYp/CQmLvwkJmP8JCZo/CQmbfwkJqL8JCan/CQmrPwkJuH8JCbm/CQm6/wkJyD8JCcl/CQnKvwkJ2I8JCdpvCQnpPwkJ6n8JCggfCQoJjwkKCs8JChhvCQoZvwkKGv8JCig/CQopfwkKOj8JCjvfCQpJHwkKSo8JCmgfCQppXwkKap8JCngfCQp5fwkKer8JCnv/CQqJvwkKiv8JCpkPCQqavwkKm/\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"𐪓𐫇𐫛𐫳𐬐𐬤𐬻𐭏𐭥𐭾𐮙𐰉𐰝𐰱𐱅𐲐𐲤𐳅𐳙𐳭𐴈𐴜𐴸𐹲𐺇𐺛𐻽𐼑𐼥𐽁𐽕𐽿𐾹𐿡𐿵𑀒𑀦𑀺𑁒𑁦𑂃𑂗𑂫𑂿𑃟𑄀𑄔𑄨𑄽𑅙𑅭𑆊𑆞𑆲𑇆𑇚𑇯𑈎𑈣𑈷𑊋𑊡𑊻𑋏𑋣𑌂𑌛𑌰𑍋𑍱𑐐𑐤𑐸𑑌𑑡𑒓𑒧𑒻𑓗𑖑𑖥𑖻𑗏𑘅𑘙𑘭𑙁𑙦𑚍𑚡𑚵𑜅𑜙𑜳𑠀𑠔𑠨𑢠𑢴𑣈\",\n\t\t\t\"encodedString\": \"8JCqk/CQq4fwkKub8JCrs/CQrJDwkKyk8JCsu/CQrY/wkK2l8JCtvvCQrpnwkLCJ8JCwnfCQsLHwkLGF8JCykPCQsqTwkLOF8JCzmfCQs63wkLSI8JC0nPCQtLjwkLmy8JC6h/CQupvwkLu98JC8kfCQvKXwkL2B8JC9lfCQvb/wkL658JC/ofCQv7XwkYCS8JGApvCRgLrwkYGS8JGBpvCRgoPwkYKX8JGCq/CRgr/wkYOf8JGEgPCRhJTwkYSo8JGEvfCRhZnwkYWt8JGGivCRhp7wkYay8JGHhvCRh5rwkYev8JGIjvCRiKPwkYi38JGKi/CRiqHwkYq78JGLj/CRi6PwkYyC8JGMm/CRjLDwkY2L8JGNsfCRkJDwkZCk8JGQuPCRkYzwkZGh8JGSk/CRkqfwkZK78JGTl/CRlpHwkZal8JGWu/CRl4/wkZiF8JGYmfCRmK3wkZmB8JGZpvCRmo3wkZqh8JGatfCRnIXwkZyZ8JGcs/CRoIDwkaCU8JGgqPCRoqDwkaK08JGjiA==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"𑣜𑣰𑤕𑤪𑥁𑦤𑦺𑧎𑧤𑨓𑨧𑨻𑩗𑩫𑩿𑪓𑪴𑫈𑫜𑫰𑰁𑰖𑰪𑰿𑱝𑱴𑲈𑲞𑲳𑴒𑴦𑴿𑵡𑵷𑶋𑶨𑻲𑼍𑼢𑼶𑽍𑿆𑿚𑿮𒀏𒀣𒀷𒁋𒁟𒁳𒂇𒂛𒂯𒃃𒃗𒃫𒃿𒄓𒄧𒄻𒅏𒅣𒅷𒆋𒆟𒆳𒇇𒇛𒇯𒈃𒈗𒈫𒈿𒉓𒉧𒉻𒊏𒊣𒊷𒋋𒋟𒋳𒌇𒌛𒌯𒍃𒍗𒍫𒍿𒎓𒐍𒐡𒐵𒑉𒑝𒑲𒒑𒒥𒒹𒓍\",\n\t\t\t\"encodedString\": \"8JGjnPCRo7DwkaSV8JGkqvCRpYHwkaak8JGmuvCRp47wkaek8JGok/CRqKfwkai78JGpl/CRqavwkam/8JGqk/CRqrTwkauI8JGrnPCRq7DwkbCB8JGwlvCRsKrwkbC/8JGxnfCRsbTwkbKI8JGynvCRsrPwkbSS8JG0pvCRtL/wkbWh8JG1t/CRtovwkbao8JG7svCRvI3wkbyi8JG8tvCRvY3wkb+G8JG/mvCRv67wkoCP8JKAo/CSgLfwkoGL8JKBn/CSgbPwkoKH8JKCm/CSgq/wkoOD8JKDl/CSg6vwkoO/8JKEk/CShKfwkoS78JKFj/CShaPwkoW38JKGi/CShp/wkoaz8JKHh/CSh5vwkoev8JKIg/CSiJfwkoir8JKIv/CSiZPwkomn8JKJu/CSio/wkoqj8JKKt/CSi4vwkouf8JKLs/CSjIfwkoyb8JKMr/CSjYPwko2X8JKNq/CSjb/wko6T8JKQjfCSkKHwkpC18JKRifCSkZ3wkpGy8JKSkfCSkqXwkpK58JKTjQ==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"𒓡𒓵𒔉𒔝𒔱𒾑𒾥𒾹𒿍𒿡𓀂𓀖𓀪𓀾𓁒𓁦𓁺𓂎𓂢𓂶𓃊𓃞𓃲𓄆𓄚𓄮𓅂𓅖𓅪𓅾𓆒𓆦𓆺𓇎𓇢𓇶𓈊𓈞𓈲𓉆𓉚𓉮𓊂𓊖𓊪𓊾𓋒𓋦𓋺𓌎𓌢𓌶𓍊𓍞𓍲𓎆𓎚𓎮𓏂𓏖𓏪𓏾𓐒𓐦𓐺𓑎𔐌𔐠𔐴𔑈𔑜𔑰𔒄𔒘𔒬𔓀𔓔𔓨𔓼𔔐𔔤𔔸𔕌𔕠𔕴𔖈𔖜𔖰𔗄𔗘𔗬𔘀𔘔𔘨𔘼𖠉𖠝𖠱𖡅𖡙\",\n\t\t\t\"encodedString\": \"8JKTofCSk7XwkpSJ8JKUnfCSlLHwkr6R8JK+pfCSvrnwkr+N8JK/ofCTgILwk4CW8JOAqvCTgL7wk4GS8JOBpvCTgbrwk4KO8JOCovCTgrbwk4OK8JODnvCTg7Lwk4SG8JOEmvCThK7wk4WC8JOFlvCTharwk4W+8JOGkvCThqbwk4a68JOHjvCTh6Lwk4e28JOIivCTiJ7wk4iy8JOJhvCTiZrwk4mu8JOKgvCTipbwk4qq8JOKvvCTi5Lwk4um8JOLuvCTjI7wk4yi8JOMtvCTjYrwk42e8JONsvCTjobwk46a8JOOrvCTj4Lwk4+W8JOPqvCTj77wk5CS8JOQpvCTkLrwk5GO8JSQjPCUkKDwlJC08JSRiPCUkZzwlJGw8JSShPCUkpjwlJKs8JSTgPCUk5TwlJOo8JSTvPCUlJDwlJSk8JSUuPCUlYzwlJWg8JSVtPCUlojwlJac8JSWsPCUl4TwlJeY8JSXrPCUmIDwlJiU8JSYqPCUmLzwlqCJ8JagnfCWoLHwlqGF8JahmQ==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"𖡭𖢁𖢕𖢩𖢽𖣑𖣥𖣹𖤍𖤡𖤵𖥉𖥝𖥱𖦅𖦙𖦭𖧁𖧕𖧩𖧽𖨑𖨥𖩀𖩔𖩩𖪁𖪕𖪩𖪽𖫘𖫬𖬌𖬠𖬴𖭒𖭨𖮁𖹅𖹙𖹭𖺁𖺕𖼎𖼢𖼶𖽊𖽢𖽶𖾑𖿰𗀒𗀦𗀺𗁎𗁢𗁶𗂊𗂞𗂲𗃆𗃚𗃮𗄂𗄖𗄪𗄾𗅒𗅦𗅺𗆎𗆢𗆶𗇊𗇞𗇲𗈆𗈚𗈮𗉂𗉖𗉪𗉾𗊒𗊦𗊺𗋎𗋢𗋶𗌊𗌞𗌲𗍆𗍚𗍮𗎂𗎖𗎪𗎾𗏒\",\n\t\t\t\"encodedString\": \"8JahrfCWooHwlqKV8JaiqfCWor3wlqOR8JajpfCWo7nwlqSN8JakofCWpLXwlqWJ8JalnfCWpbHwlqaF8JammfCWpq3wlqeB8JanlfCWp6nwlqe98JaokfCWqKXwlqmA8JaplPCWqanwlqqB8JaqlfCWqqnwlqq98JarmPCWq6zwlqyM8JasoPCWrLTwlq2S8JatqPCWroHwlrmF8Ja5mfCWua3wlrqB8Ja6lfCWvI7wlryi8Ja8tvCWvYrwlr2i8Ja9tvCWvpHwlr+w8JeAkvCXgKbwl4C68JeBjvCXgaLwl4G28JeCivCXgp7wl4Ky8JeDhvCXg5rwl4Ou8JeEgvCXhJbwl4Sq8JeEvvCXhZLwl4Wm8JeFuvCXho7wl4ai8JeGtvCXh4rwl4ee8JeHsvCXiIbwl4ia8JeIrvCXiYLwl4mW8JeJqvCXib7wl4qS8JeKpvCXirrwl4uO8JeLovCXi7bwl4yK8JeMnvCXjLLwl42G8JeNmvCXja7wl46C8JeOlvCXjqrwl46+8JePkg==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"𗏦𗏺𗐎𗐢𗐶𗑊𗑞𗑲𗒆𗒚𗒮𗓂𗓖𗓪𗓾𗔒𗔦𗔺𗕎𗕢𗕶𗖊𗖞𗖲𗗆𗗚𗗮𗘂𗘖𗘪𗘾𗙒𗙦𗙺𗚎𗚢𗚶𗛊𗛞𗛲𗜆𗜚𗜮𗝂𗝖𗝪𗝾𗞒𗞦𗞺𗟎𗟢𗟶𗠊𗠞𗠲𗡆𗡚𗡮𗢂𗢖𗢪𗢾𗣒𗣦𗣺𗤎𗤢𗤶𗥊𗥞𗥲𗦆𗦚𗦮𗧂𗧖𗧪𗧾𗨒𗨦𗨺𗩎𗩢𗩶𗪊𗪞𗪲𗫆𗫚𗫮𗬂𗬖𗬪𗬾𗭒𗭦𗭺𗮎𗮢\",\n\t\t\t\"encodedString\": \"8JePpvCXj7rwl5CO8JeQovCXkLbwl5GK8JeRnvCXkbLwl5KG8JeSmvCXkq7wl5OC8JeTlvCXk6rwl5O+8JeUkvCXlKbwl5S68JeVjvCXlaLwl5W28JeWivCXlp7wl5ay8JeXhvCXl5rwl5eu8JeYgvCXmJbwl5iq8JeYvvCXmZLwl5mm8JeZuvCXmo7wl5qi8JeatvCXm4rwl5ue8JebsvCXnIbwl5ya8JecrvCXnYLwl52W8JedqvCXnb7wl56S8JeepvCXnrrwl5+O8JefovCXn7bwl6CK8JegnvCXoLLwl6GG8JehmvCXoa7wl6KC8JeilvCXoqrwl6K+8JejkvCXo6bwl6O68JekjvCXpKLwl6S28JelivCXpZ7wl6Wy8JemhvCXpprwl6au8JengvCXp5bwl6eq8JenvvCXqJLwl6im8JeouvCXqY7wl6mi8JeptvCXqorwl6qe8JeqsvCXq4bwl6ua8JerrvCXrILwl6yW8JesqvCXrL7wl62S8JetpvCXrbrwl66O8Jeuog==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"𗮶𗯊𗯞𗯲𗰆𗰚𗰮𗱂𗱖𗱪𗱾𗲒𗲦𗲺𗳎𗳢𗳶𗴊𗴞𗴲𗵆𗵚𗵮𗶂𗶖𗶪𗶾𗷒𗷦𗷺𗸎𗸢𗸶𗹊𗹞𗹲𗺆𗺚𗺮𗻂𗻖𗻪𗻾𗼒𗼦𗼺𗽎𗽢𗽶𗾊𗾞𗾲𗿆𗿚𗿮𘀂𘀖𘀪𘀾𘁒𘁦𘁺𘂎𘂢𘂶𘃊𘃞𘃲𘄆𘄚𘄮𘅂𘅖𘅪𘅾𘆒𘆦𘆺𘇎𘇢𘇶𘈊𘈞𘈲𘉆𘉚𘉮𘊂𘊖𘊪𘊾𘋒𘋦𘋺𘌎𘌢𘌶𘍊𘍞𘍲\",\n\t\t\t\"encodedString\": \"8JeutvCXr4rwl6+e8JevsvCXsIbwl7Ca8JewrvCXsYLwl7GW8JexqvCXsb7wl7KS8JeypvCXsrrwl7OO8JezovCXs7bwl7SK8Je0nvCXtLLwl7WG8Je1mvCXta7wl7aC8Je2lvCXtqrwl7a+8Je3kvCXt6bwl7e68Je4jvCXuKLwl7i28Je5ivCXuZ7wl7my8Je6hvCXuprwl7qu8Je7gvCXu5bwl7uq8Je7vvCXvJLwl7ym8Je8uvCXvY7wl72i8Je9tvCXvorwl76e8Je+svCXv4bwl7+a8Je/rvCYgILwmICW8JiAqvCYgL7wmIGS8JiBpvCYgbrwmIKO8JiCovCYgrbwmIOK8JiDnvCYg7LwmISG8JiEmvCYhK7wmIWC8JiFlvCYharwmIW+8JiGkvCYhqbwmIa68JiHjvCYh6LwmIe28JiIivCYiJ7wmIiy8JiJhvCYiZrwmImu8JiKgvCYipbwmIqq8JiKvvCYi5LwmIum8JiLuvCYjI7wmIyi8JiMtvCYjYrwmI2e8JiNsg==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"𘎆𘎚𘎮𘏂𘏖𘏪𘏾𘐒𘐦𘐺𘑎𘑢𘑶𘒊𘒞𘒲𘓆𘓚𘓮𘔂𘔖𘔪𘔾𘕒𘕦𘕺𘖎𘖢𘖶𘗊𘗞𘗲𘘆𘘚𘘮𘙂𘙖𘙪𘙾𘚒𘚦𘚺𘛎𘛢𘛶𘜊𘜞𘜲𘝆𘝚𘝮𘞂𘞖𘞪𘞾𘟒𘟦𘠂𘠖𘠪𘠾𘡒𘡦𘡺𘢎𘢢𘢶𘣊𘣞𘣲𘤆𘤚𘤮𘥂𘥖𘥪𘥾𘦒𘦦𘦺𘧎𘧢𘧶𘨊𘨞𘨲𘩆𘩚𘩮𘪂𘪖𘪪𘪾𘫒𘫦𘫺𘬎𘬢𘬶𘭊\",\n\t\t\t\"encodedString\": \"8JiOhvCYjprwmI6u8JiPgvCYj5bwmI+q8JiPvvCYkJLwmJCm8JiQuvCYkY7wmJGi8JiRtvCYkorwmJKe8JiSsvCYk4bwmJOa8JiTrvCYlILwmJSW8JiUqvCYlL7wmJWS8JiVpvCYlbrwmJaO8JiWovCYlrbwmJeK8JiXnvCYl7LwmJiG8JiYmvCYmK7wmJmC8JiZlvCYmarwmJm+8JiakvCYmqbwmJq68JibjvCYm6LwmJu28JicivCYnJ7wmJyy8JidhvCYnZrwmJ2u8JiegvCYnpbwmJ6q8JievvCYn5LwmJ+m8JiggvCYoJbwmKCq8JigvvCYoZLwmKGm8JihuvCYoo7wmKKi8JiitvCYo4rwmKOe8JijsvCYpIbwmKSa8JikrvCYpYLwmKWW8JilqvCYpb7wmKaS8JimpvCYprrwmKeO8JinovCYp7bwmKiK8JionvCYqLLwmKmG8JipmvCYqa7wmKqC8JiqlvCYqqrwmKq+8JirkvCYq6bwmKu68JisjvCYrKLwmKy28Jitig==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"𘭞𘭲𘮆𘮚𘮮𘯂𘯖𘯪𘯾𘰒𘰦𘰺𘱎𘱢𘱶𘲊𘲞𘲲𘳆𘴄𛀂𛀖𛀪𛀾𛁒𛁦𛁺𛂎𛂢𛂶𛃊𛃞𛃲𛄆𛄚𛅲𛆆𛆚𛆮𛇂𛇖𛇪𛇾𛈒𛈦𛈺𛉎𛉢𛉶𛊊𛊞𛊲𛋆𛋚𛋮𛰆𛰚𛰮𛱂𛱖𛱪𛲆𛲣𜼓𜼧𜼽𜽚𜽮𜾂𜾖𜾪𜾾𝀎𝀢𝀶𝁊𝁞𝁲𝂆𝂚𝂮𝃂𝃖𝃪𝄈𝄜𝄲𝅆𝅚𝅮𝆂𝆖𝆪𝆺𝅥𝅮𝇒𝇦𝈏𝈣𝈷𝋅\",\n\t\t\t\"encodedString\": \"8JitnvCYrbLwmK6G8JiumvCYrq7wmK+C8JivlvCYr6rwmK++8JiwkvCYsKbwmLC68JixjvCYsaLwmLG28JiyivCYsp7wmLKy8JizhvCYtITwm4CC8JuAlvCbgKrwm4C+8JuBkvCbgabwm4G68JuCjvCbgqLwm4K28JuDivCbg57wm4Oy8JuEhvCbhJrwm4Wy8JuGhvCbhprwm4au8JuHgvCbh5bwm4eq8JuHvvCbiJLwm4im8JuIuvCbiY7wm4mi8JuJtvCbiorwm4qe8JuKsvCbi4bwm4ua8JuLrvCbsIbwm7Ca8JuwrvCbsYLwm7GW8JuxqvCbsobwm7Kj8Jy8k/CcvKfwnLy98Jy9mvCcva7wnL6C8Jy+lvCcvqrwnL6+8J2AjvCdgKLwnYC28J2BivCdgZ7wnYGy8J2ChvCdgprwnYKu8J2DgvCdg5bwnYOq8J2EiPCdhJzwnYSy8J2FhvCdhZrwnYWu8J2GgvCdhpbwnYaq8J2GvvCdh5LwnYem8J2Ij/CdiKPwnYi38J2LhQ==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"𝋥𝌅𝌙𝌭𝍁𝍕𝍲𝐍𝐡𝐵𝑉𝑞𝑲𝒆𝒚𝒶𝓍𝓡𝓵𝔊𝔢𝔶𝕐𝕥𝕹𝖍𝖡𝖵𝗉𝗝𝗱𝘅𝘙𝘭𝙁𝙕𝙩𝙽𝚑𝚥𝚻𝛏𝛣𝛷𝜋𝜟𝜳𝝇𝝛𝝯𝞃𝞗𝞫𝞿𝟕𝟩𝟽𝠑𝠥𝠹𝡍𝡡𝡵𝢉𝢝𝢱𝣅𝣙𝣭𝤁𝤕𝤩𝤽𝥑𝥥𝥹𝦍𝦡𝦵𝧉𝧝𝧱𝨅𝨙𝨭𝩁𝩕𝩩𝩽𝪡𝼅𝼙𞀉𞀟𞀺𞁎𞁢𞄇𞄛𞄲\",\n\t\t\t\"encodedString\": \"8J2LpfCdjIXwnYyZ8J2MrfCdjYHwnY2V8J2NsvCdkI3wnZCh8J2QtfCdkYnwnZGe8J2RsvCdkobwnZKa8J2StvCdk43wnZOh8J2TtfCdlIrwnZSi8J2UtvCdlZDwnZWl8J2VufCdlo3wnZah8J2WtfCdl4nwnZed8J2XsfCdmIXwnZiZ8J2YrfCdmYHwnZmV8J2ZqfCdmb3wnZqR8J2apfCdmrvwnZuP8J2bo/Cdm7fwnZyL8J2cn/CdnLPwnZ2H8J2dm/Cdna/wnZ6D8J2el/CdnqvwnZ6/8J2flfCdn6nwnZ+98J2gkfCdoKXwnaC58J2hjfCdoaHwnaG18J2iifCdop3wnaKx8J2jhfCdo5nwnaOt8J2kgfCdpJXwnaSp8J2kvfCdpZHwnaWl8J2lufCdpo3wnaah8J2mtfCdp4nwnaed8J2nsfCdqIXwnaiZ8J2orfCdqYHwnamV8J2pqfCdqb3wnaqh8J28hfCdvJnwnoCJ8J6An/CegLrwnoGO8J6BovCehIfwnoSb8J6Esg==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"𞅈𞊠𞋅𞋙𞋭𞓖𞓪𞟤𞟻𞠐𞠤𞠸𞡌𞡠𞡴𞢈𞢜𞢰𞣄𞤃𞤗𞤫𞤿𞥗𞲀𞲔𞲨𞴈𞴜𞴰𞸇𞸛𞸵𞹡𞹻𞺒𞺭🀃🀗🀫🁃🁗🁫🁿🂓🂵🃊🃟🃳🄑🄥🄹🅍🅡🅵🆉🆝🇩🇽🈞🈲🉑🌍🌡🌵🍉🍝🍱🎅🎙🎭🏁🏕🏩🏽🐑🐥🐹👍👡👵💉💝💱📅📙📭🔁🔕🔩🔽🕑🕥🕹🖍🖡🖵🗉🗝🗱\",\n\t\t\t\"encodedString\": \"8J6FiPCeiqDwnouF8J6LmfCei63wnpOW8J6TqvCen6Twnp+78J6gkPCeoKTwnqC48J6hjPCeoaDwnqG08J6iiPCeopzwnqKw8J6jhPCepIPwnqSX8J6kq/CepL/wnqWX8J6ygPCespTwnrKo8J60iPCetJzwnrSw8J64h/CeuJvwnri18J65ofCeubvwnrqS8J66rfCfgIPwn4CX8J+Aq/CfgYPwn4GX8J+Bq/Cfgb/wn4KT8J+CtfCfg4rwn4Of8J+Ds/CfhJHwn4Sl8J+EufCfhY3wn4Wh8J+FtfCfhonwn4ad8J+HqfCfh73wn4ie8J+IsvCfiZHwn4yN8J+MofCfjLXwn42J8J+NnfCfjbHwn46F8J+OmfCfjq3wn4+B8J+PlfCfj6nwn4+98J+QkfCfkKXwn5C58J+RjfCfkaHwn5G18J+SifCfkp3wn5Kx8J+ThfCfk5nwn5Ot8J+UgfCflJXwn5Sp8J+UvfCflZHwn5Wl8J+VufCflo3wn5ah8J+WtfCfl4nwn5ed8J+XsQ==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"😅😙😭🙁🙕🙩🙽🚑🚥🚹🛍🛥🛼🜓🜧🜻🝏🝣🝻🞏🞣🞷🟋🟥🠐🠤🠸🡔🡮🢂🢞🤂🤖🤪🤾🥒🥦🥺🦎🦢🦶🧊🧞🧲🨆🨚🨮🩂🩢🩸🪖🪪🪿🫛🬁🬕🬩🬽🭑🭥🭹🮍🮢🮶🯊𠀉𠀝𠀱𠁅𠁙𠁭𠂁𠂕𠂩𠂽𠃑𠃥𠃹𠄍𠄡𠄵𠅉𠅝𠅱𠆅𠆙𠆭𠇁𠇕𠇩𠇽𠈑𠈥𠈹𠉍𠉡𠉵𠊉𠊝𠊱\",\n\t\t\t\"encodedString\": \"8J+YhfCfmJnwn5it8J+ZgfCfmZXwn5mp8J+ZvfCfmpHwn5ql8J+aufCfm43wn5ul8J+bvPCfnJPwn5yn8J+cu/CfnY/wn52j8J+du/Cfno/wn56j8J+et/Cfn4vwn5+l8J+gkPCfoKTwn6C48J+hlPCfoa7wn6KC8J+invCfpILwn6SW8J+kqvCfpL7wn6WS8J+lpvCfpbrwn6aO8J+movCfprbwn6eK8J+nnvCfp7Lwn6iG8J+omvCfqK7wn6mC8J+povCfqbjwn6qW8J+qqvCfqr/wn6ub8J+sgfCfrJXwn6yp8J+svfCfrZHwn62l8J+tufCfro3wn66i8J+utvCfr4rwoICJ8KCAnfCggLHwoIGF8KCBmfCgga3woIKB8KCClfCggqnwoIK98KCDkfCgg6XwoIO58KCEjfCghKHwoIS18KCFifCghZ3woIWx8KCGhfCghpnwoIat8KCHgfCgh5XwoIep8KCHvfCgiJHwoIil8KCIufCgiY3woImh8KCJtfCgionwoIqd8KCKsQ==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"𠋅𠋙𠋭𠌁𠌕𠌩𠌽𠍑𠍥𠍹𠎍𠎡𠎵𠏉𠏝𠏱𠐅𠐙𠐭𠑁𠑕𠑩𠑽𠒑𠒥𠒹𠓍𠓡𠓵𠔉𠔝𠔱𠕅𠕙𠕭𠖁𠖕𠖩𠖽𠗑𠗥𠗹𠘍𠘡𠘵𠙉𠙝𠙱𠚅𠚙𠚭𠛁𠛕𠛩𠛽𠜑𠜥𠜹𠝍𠝡𠝵𠞉𠞝𠞱𠟅𠟙𠟭𠠁𠠕𠠩𠠽𠡑𠡥𠡹𠢍𠢡𠢵𠣉𠣝𠣱𠤅𠤙𠤭𠥁𠥕𠥩𠥽𠦑𠦥𠦹𠧍𠧡𠧵𠨉𠨝𠨱𠩅𠩙𠩭𠪁\",\n\t\t\t\"encodedString\": \"8KCLhfCgi5nwoIut8KCMgfCgjJXwoIyp8KCMvfCgjZHwoI2l8KCNufCgjo3woI6h8KCOtfCgj4nwoI+d8KCPsfCgkIXwoJCZ8KCQrfCgkYHwoJGV8KCRqfCgkb3woJKR8KCSpfCgkrnwoJON8KCTofCgk7XwoJSJ8KCUnfCglLHwoJWF8KCVmfCgla3woJaB8KCWlfCglqnwoJa98KCXkfCgl6XwoJe58KCYjfCgmKHwoJi18KCZifCgmZ3woJmx8KCahfCgmpnwoJqt8KCbgfCgm5XwoJup8KCbvfCgnJHwoJyl8KCcufCgnY3woJ2h8KCdtfCgnonwoJ6d8KCesfCgn4XwoJ+Z8KCfrfCgoIHwoKCV8KCgqfCgoL3woKGR8KChpfCgobnwoKKN8KCiofCgorXwoKOJ8KCjnfCgo7HwoKSF8KCkmfCgpK3woKWB8KCllfCgpanwoKW98KCmkfCgpqXwoKa58KCnjfCgp6HwoKe18KCoifCgqJ3woKix8KCphfCgqZnwoKmt8KCqgQ==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"𠪕𠪩𠪽𠫑𠫥𠫹𠬍𠬡𠬵𠭉𠭝𠭱𠮅𠮙𠮭𠯁𠯕𠯩𠯽𠰑𠰥𠰹𠱍𠱡𠱵𠲉𠲝𠲱𠳅𠳙𠳭𠴁𠴕𠴩𠴽𠵑𠵥𠵹𠶍𠶡𠶵𠷉𠷝𠷱𠸅𠸙𠸭𠹁𠹕𠹩𠹽𠺑𠺥𠺹𠻍𠻡𠻵𠼉𠼝𠼱𠽅𠽙𠽭𠾁𠾕𠾩𠾽𠿑𠿥𠿹𡀍𡀡𡀵𡁉𡁝𡁱𡂅𡂙𡂭𡃁𡃕𡃩𡃽𡄑𡄥𡄹𡅍𡅡𡅵𡆉𡆝𡆱𡇅𡇙𡇭𡈁𡈕𡈩𡈽𡉑\",\n\t\t\t\"encodedString\": \"8KCqlfCgqqnwoKq98KCrkfCgq6XwoKu58KCsjfCgrKHwoKy18KCtifCgrZ3woK2x8KCuhfCgrpnwoK6t8KCvgfCgr5XwoK+p8KCvvfCgsJHwoLCl8KCwufCgsY3woLGh8KCxtfCgsonwoLKd8KCysfCgs4XwoLOZ8KCzrfCgtIHwoLSV8KC0qfCgtL3woLWR8KC1pfCgtbnwoLaN8KC2ofCgtrXwoLeJ8KC3nfCgt7HwoLiF8KC4mfCguK3woLmB8KC5lfCguanwoLm98KC6kfCguqXwoLq58KC7jfCgu6HwoLu18KC8ifCgvJ3woLyx8KC9hfCgvZnwoL2t8KC+gfCgvpXwoL6p8KC+vfCgv5HwoL+l8KC/ufChgI3woYCh8KGAtfChgYnwoYGd8KGBsfChgoXwoYKZ8KGCrfChg4HwoYOV8KGDqfChg73woYSR8KGEpfChhLnwoYWN8KGFofChhbXwoYaJ8KGGnfChhrHwoYeF8KGHmfChh63woYiB8KGIlfChiKnwoYi98KGJkQ==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"𡉥𡉹𡊍𡊡𡊵𡋉𡋝𡋱𡌅𡌙𡌭𡍁𡍕𡍩𡍽𡎑𡎥𡎹𡏍𡏡𡏵𡐉𡐝𡐱𡑅𡑙𡑭𡒁𡒕𡒩𡒽𡓑𡓥𡓹𡔍𡔡𡔵𡕉𡕝𡕱𡖅𡖙𡖭𡗁𡗕𡗩𡗽𡘑𡘥𡘹𡙍𡙡𡙵𡚉𡚝𡚱𡛅𡛙𡛭𡜁𡜕𡜩𡜽𡝑𡝥𡝹𡞍𡞡𡞵𡟉𡟝𡟱𡠅𡠙𡠭𡡁𡡕𡡩𡡽𡢑𡢥𡢹𡣍𡣡𡣵𡤉𡤝𡤱𡥅𡥙𡥭𡦁𡦕𡦩𡦽𡧑𡧥𡧹𡨍𡨡\",\n\t\t\t\"encodedString\": \"8KGJpfChibnwoYqN8KGKofChirXwoYuJ8KGLnfChi7HwoYyF8KGMmfChjK3woY2B8KGNlfChjanwoY298KGOkfChjqXwoY658KGPjfChj6HwoY+18KGQifChkJ3woZCx8KGRhfChkZnwoZGt8KGSgfChkpXwoZKp8KGSvfChk5HwoZOl8KGTufChlI3woZSh8KGUtfChlYnwoZWd8KGVsfChloXwoZaZ8KGWrfChl4HwoZeV8KGXqfChl73woZiR8KGYpfChmLnwoZmN8KGZofChmbXwoZqJ8KGanfChmrHwoZuF8KGbmfChm63woZyB8KGclfChnKnwoZy98KGdkfChnaXwoZ258KGejfChnqHwoZ618KGfifChn53woZ+x8KGghfChoJnwoaCt8KGhgfChoZXwoaGp8KGhvfChopHwoaKl8KGiufCho43woaOh8KGjtfChpInwoaSd8KGksfChpYXwoaWZ8KGlrfChpoHwoaaV8KGmqfChpr3woaeR8KGnpfChp7nwoaiN8KGooQ==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"𡨵𡩉𡩝𡩱𡪅𡪙𡪭𡫁𡫕𡫩𡫽𡬑𡬥𡬹𡭍𡭡𡭵𡮉𡮝𡮱𡯅𡯙𡯭𡰁𡰕𡰩𡰽𡱑𡱥𡱹𡲍𡲡𡲵𡳉𡳝𡳱𡴅𡴙𡴭𡵁𡵕𡵩𡵽𡶑𡶥𡶹𡷍𡷡𡷵𡸉𡸝𡸱𡹅𡹙𡹭𡺁𡺕𡺩𡺽𡻑𡻥𡻹𡼍𡼡𡼵𡽉𡽝𡽱𡾅𡾙𡾭𡿁𡿕𡿩𡿽𢀑𢀥𢀹𢁍𢁡𢁵𢂉𢂝𢂱𢃅𢃙𢃭𢄁𢄕𢄩𢄽𢅑𢅥𢅹𢆍𢆡𢆵𢇉𢇝𢇱\",\n\t\t\t\"encodedString\": \"8KGotfChqYnwoamd8KGpsfChqoXwoaqZ8KGqrfChq4HwoauV8KGrqfChq73woayR8KGspfChrLnwoa2N8KGtofChrbXwoa6J8KGunfChrrHwoa+F8KGvmfChr63wobCB8KGwlfChsKnwobC98KGxkfChsaXwobG58KGyjfChsqHwobK18KGzifChs53wobOx8KG0hfChtJnwobSt8KG1gfChtZXwobWp8KG1vfChtpHwobal8KG2ufCht43wobeh8KG3tfChuInwobid8KG4sfChuYXwobmZ8KG5rfChuoHwobqV8KG6qfChur3wobuR8KG7pfChu7nwobyN8KG8ofChvLXwob2J8KG9nfChvbHwob6F8KG+mfChvq3wob+B8KG/lfChv6nwob+98KKAkfCigKXwooC58KKBjfCigaHwooG18KKCifCigp3wooKx8KKDhfCig5nwooOt8KKEgfCihJXwooSp8KKEvfCihZHwooWl8KKFufCiho3wooah8KKGtfCih4nwooed8KKHsQ==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"𢈅𢈙𢈭𢉁𢉕𢉩𢉽𢊑𢊥𢊹𢋍𢋡𢋵𢌉𢌝𢌱𢍅𢍙𢍭𢎁𢎕𢎩𢎽𢏑𢏥𢏹𢐍𢐡𢐵𢑉𢑝𢑱𢒅𢒙𢒭𢓁𢓕𢓩𢓽𢔑𢔥𢔹𢕍𢕡𢕵𢖉𢖝𢖱𢗅𢗙𢗭𢘁𢘕𢘩𢘽𢙑𢙥𢙹𢚍𢚡𢚵𢛉𢛝𢛱𢜅𢜙𢜭𢝁𢝕𢝩𢝽𢞑𢞥𢞹𢟍𢟡𢟵𢠉𢠝𢠱𢡅𢡙𢡭𢢁𢢕𢢩𢢽𢣑𢣥𢣹𢤍𢤡𢤵𢥉𢥝𢥱𢦅𢦙𢦭𢧁\",\n\t\t\t\"encodedString\": \"8KKIhfCiiJnwooit8KKJgfCiiZXwoomp8KKJvfCiipHwooql8KKKufCii43woouh8KKLtfCijInwooyd8KKMsfCijYXwoo2Z8KKNrfCijoHwoo6V8KKOqfCijr3woo+R8KKPpfCij7nwopCN8KKQofCikLXwopGJ8KKRnfCikbHwopKF8KKSmfCikq3wopOB8KKTlfCik6nwopO98KKUkfCilKXwopS58KKVjfCilaHwopW18KKWifCilp3wopax8KKXhfCil5nwopet8KKYgfCimJXwopip8KKYvfCimZHwopml8KKZufCimo3wopqh8KKatfCim4nwopud8KKbsfCinIXwopyZ8KKcrfCinYHwop2V8KKdqfCinb3wop6R8KKepfCinrnwop+N8KKfofCin7XwoqCJ8KKgnfCioLHwoqGF8KKhmfCioa3woqKB8KKilfCioqnwoqK98KKjkfCio6XwoqO58KKkjfCipKHwoqS18KKlifCipZ3woqWx8KKmhfCippnwoqat8KKngQ==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"𢧕𢧩𢧽𢨑𢨥𢨹𢩍𢩡𢩵𢪉𢪝𢪱𢫅𢫙𢫭𢬁𢬕𢬩𢬽𢭑𢭥𢭹𢮍𢮡𢮵𢯉𢯝𢯱𢰅𢰙𢰭𢱁𢱕𢱩𢱽𢲑𢲥𢲹𢳍𢳡𢳵𢴉𢴝𢴱𢵅𢵙𢵭𢶁𢶕𢶩𢶽𢷑𢷥𢷹𢸍𢸡𢸵𢹉𢹝𢹱𢺅𢺙𢺭𢻁𢻕𢻩𢻽𢼑𢼥𢼹𢽍𢽡𢽵𢾉𢾝𢾱𢿅𢿙𢿭𣀁𣀕𣀩𣀽𣁑𣁥𣁹𣂍𣂡𣂵𣃉𣃝𣃱𣄅𣄙𣄭𣅁𣅕𣅩𣅽𣆑\",\n\t\t\t\"encodedString\": \"8KKnlfCip6nwoqe98KKokfCiqKXwoqi58KKpjfCiqaHwoqm18KKqifCiqp3woqqx8KKrhfCiq5nwoqut8KKsgfCirJXwoqyp8KKsvfCirZHwoq2l8KKtufCiro3woq6h8KKutfCir4nwoq+d8KKvsfCisIXworCZ8KKwrfCisYHworGV8KKxqfCisb3worKR8KKypfCisrnworON8KKzofCis7XworSJ8KK0nfCitLHworWF8KK1mfCita3woraB8KK2lfCitqnwora98KK3kfCit6Xwore58KK4jfCiuKHwori18KK5ifCiuZ3wormx8KK6hfCiupnworqt8KK7gfCiu5Xworup8KK7vfCivJHworyl8KK8ufCivY3wor2h8KK9tfCivonwor6d8KK+sfCiv4Xwor+Z8KK/rfCjgIHwo4CV8KOAqfCjgL3wo4GR8KOBpfCjgbnwo4KN8KOCofCjgrXwo4OJ8KODnfCjg7Hwo4SF8KOEmfCjhK3wo4WB8KOFlfCjhanwo4W98KOGkQ==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"𣆥𣆹𣇍𣇡𣇵𣈉𣈝𣈱𣉅𣉙𣉭𣊁𣊕𣊩𣊽𣋑𣋥𣋹𣌍𣌡𣌵𣍉𣍝𣍱𣎅𣎙𣎭𣏁𣏕𣏩𣏽𣐑𣐥𣐹𣑍𣑡𣑵𣒉𣒝𣒱𣓅𣓙𣓭𣔁𣔕𣔩𣔽𣕑𣕥𣕹𣖍𣖡𣖵𣗉𣗝𣗱𣘅𣘙𣘭𣙁𣙕𣙩𣙽𣚑𣚥𣚹𣛍𣛡𣛵𣜉𣜝𣜱𣝅𣝙𣝭𣞁𣞕𣞩𣞽𣟑𣟥𣟹𣠍𣠡𣠵𣡉𣡝𣡱𣢅𣢙𣢭𣣁𣣕𣣩𣣽𣤑𣤥𣤹𣥍𣥡\",\n\t\t\t\"encodedString\": \"8KOGpfCjhrnwo4eN8KOHofCjh7Xwo4iJ8KOInfCjiLHwo4mF8KOJmfCjia3wo4qB8KOKlfCjiqnwo4q98KOLkfCji6Xwo4u58KOMjfCjjKHwo4y18KONifCjjZ3wo42x8KOOhfCjjpnwo46t8KOPgfCjj5Xwo4+p8KOPvfCjkJHwo5Cl8KOQufCjkY3wo5Gh8KORtfCjkonwo5Kd8KOSsfCjk4Xwo5OZ8KOTrfCjlIHwo5SV8KOUqfCjlL3wo5WR8KOVpfCjlbnwo5aN8KOWofCjlrXwo5eJ8KOXnfCjl7Hwo5iF8KOYmfCjmK3wo5mB8KOZlfCjmanwo5m98KOakfCjmqXwo5q58KObjfCjm6Hwo5u18KOcifCjnJ3wo5yx8KOdhfCjnZnwo52t8KOegfCjnpXwo56p8KOevfCjn5Hwo5+l8KOfufCjoI3wo6Ch8KOgtfCjoYnwo6Gd8KOhsfCjooXwo6KZ8KOirfCjo4Hwo6OV8KOjqfCjo73wo6SR8KOkpfCjpLnwo6WN8KOloQ==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"𣥵𣦉𣦝𣦱𣧅𣧙𣧭𣨁𣨕𣨩𣨽𣩑𣩥𣩹𣪍𣪡𣪵𣫉𣫝𣫱𣬅𣬙𣬭𣭁𣭕𣭩𣭽𣮑𣮥𣮹𣯍𣯡𣯵𣰉𣰝𣰱𣱅𣱙𣱭𣲁𣲕𣲩𣲽𣳑𣳥𣳹𣴍𣴡𣴵𣵉𣵝𣵱𣶅𣶙𣶭𣷁𣷕𣷩𣷽𣸑𣸥𣸹𣹍𣹡𣹵𣺉𣺝𣺱𣻅𣻙𣻭𣼁𣼕𣼩𣼽𣽑𣽥𣽹𣾍𣾡𣾵𣿉𣿝𣿱𤀅𤀙𤀭𤁁𤁕𤁩𤁽𤂑𤂥𤂹𤃍𤃡𤃵𤄉𤄝𤄱\",\n\t\t\t\"encodedString\": \"8KOltfCjponwo6ad8KOmsfCjp4Xwo6eZ8KOnrfCjqIHwo6iV8KOoqfCjqL3wo6mR8KOppfCjqbnwo6qN8KOqofCjqrXwo6uJ8KOrnfCjq7Hwo6yF8KOsmfCjrK3wo62B8KOtlfCjranwo6298KOukfCjrqXwo6658KOvjfCjr6Hwo6+18KOwifCjsJ3wo7Cx8KOxhfCjsZnwo7Gt8KOygfCjspXwo7Kp8KOyvfCjs5Hwo7Ol8KOzufCjtI3wo7Sh8KO0tfCjtYnwo7Wd8KO1sfCjtoXwo7aZ8KO2rfCjt4Hwo7eV8KO3qfCjt73wo7iR8KO4pfCjuLnwo7mN8KO5ofCjubXwo7qJ8KO6nfCjurHwo7uF8KO7mfCju63wo7yB8KO8lfCjvKnwo7y98KO9kfCjvaXwo7258KO+jfCjvqHwo7618KO/ifCjv53wo7+x8KSAhfCkgJnwpICt8KSBgfCkgZXwpIGp8KSBvfCkgpHwpIKl8KSCufCkg43wpIOh8KSDtfCkhInwpISd8KSEsQ==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"𤅅𤅙𤅭𤆁𤆕𤆩𤆽𤇑𤇥𤇹𤈍𤈡𤈵𤉉𤉝𤉱𤊅𤊙𤊭𤋁𤋕𤋩𤋽𤌑𤌥𤌹𤍍𤍡𤍵𤎉𤎝𤎱𤏅𤏙𤏭𤐁𤐕𤐩𤐽𤑑𤑥𤑹𤒍𤒡𤒵𤓉𤓝𤓱𤔅𤔙𤔭𤕁𤕕𤕩𤕽𤖑𤖥𤖹𤗍𤗡𤗵𤘉𤘝𤘱𤙅𤙙𤙭𤚁𤚕𤚩𤚽𤛑𤛥𤛹𤜍𤜡𤜵𤝉𤝝𤝱𤞅𤞙𤞭𤟁𤟕𤟩𤟽𤠑𤠥𤠹𤡍𤡡𤡵𤢉𤢝𤢱𤣅𤣙𤣭𤤁\",\n\t\t\t\"encodedString\": \"8KSFhfCkhZnwpIWt8KSGgfCkhpXwpIap8KSGvfCkh5HwpIel8KSHufCkiI3wpIih8KSItfCkiYnwpImd8KSJsfCkioXwpIqZ8KSKrfCki4HwpIuV8KSLqfCki73wpIyR8KSMpfCkjLnwpI2N8KSNofCkjbXwpI6J8KSOnfCkjrHwpI+F8KSPmfCkj63wpJCB8KSQlfCkkKnwpJC98KSRkfCkkaXwpJG58KSSjfCkkqHwpJK18KSTifCkk53wpJOx8KSUhfCklJnwpJSt8KSVgfCklZXwpJWp8KSVvfCklpHwpJal8KSWufCkl43wpJeh8KSXtfCkmInwpJid8KSYsfCkmYXwpJmZ8KSZrfCkmoHwpJqV8KSaqfCkmr3wpJuR8KSbpfCkm7nwpJyN8KScofCknLXwpJ2J8KSdnfCknbHwpJ6F8KSemfCknq3wpJ+B8KSflfCkn6nwpJ+98KSgkfCkoKXwpKC58KShjfCkoaHwpKG18KSiifCkop3wpKKx8KSjhfCko5nwpKOt8KSkgQ==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"𤤕𤤩𤤽𤥑𤥥𤥹𤦍𤦡𤦵𤧉𤧝𤧱𤨅𤨙𤨭𤩁𤩕𤩩𤩽𤪑𤪥𤪹𤫍𤫡𤫵𤬉𤬝𤬱𤭅𤭙𤭭𤮁𤮕𤮩𤮽𤯑𤯥𤯹𤰍𤰡𤰵𤱉𤱝𤱱𤲅𤲙𤲭𤳁𤳕𤳩𤳽𤴑𤴥𤴹𤵍𤵡𤵵𤶉𤶝𤶱𤷅𤷙𤷭𤸁𤸕𤸩𤸽𤹑𤹥𤹹𤺍𤺡𤺵𤻉𤻝𤻱𤼅𤼙𤼭𤽁𤽕𤽩𤽽𤾑𤾥𤾹𤿍𤿡𤿵𥀉𥀝𥀱𥁅𥁙𥁭𥂁𥂕𥂩𥂽𥃑\",\n\t\t\t\"encodedString\": \"8KSklfCkpKnwpKS98KSlkfCkpaXwpKW58KSmjfCkpqHwpKa18KSnifCkp53wpKex8KSohfCkqJnwpKit8KSpgfCkqZXwpKmp8KSpvfCkqpHwpKql8KSqufCkq43wpKuh8KSrtfCkrInwpKyd8KSssfCkrYXwpK2Z8KStrfCkroHwpK6V8KSuqfCkrr3wpK+R8KSvpfCkr7nwpLCN8KSwofCksLXwpLGJ8KSxnfCksbHwpLKF8KSymfCksq3wpLOB8KSzlfCks6nwpLO98KS0kfCktKXwpLS58KS1jfCktaHwpLW18KS2ifCktp3wpLax8KS3hfCkt5nwpLet8KS4gfCkuJXwpLip8KS4vfCkuZHwpLml8KS5ufCkuo3wpLqh8KS6tfCku4nwpLud8KS7sfCkvIXwpLyZ8KS8rfCkvYHwpL2V8KS9qfCkvb3wpL6R8KS+pfCkvrnwpL+N8KS/ofCkv7XwpYCJ8KWAnfClgLHwpYGF8KWBmfClga3wpYKB8KWClfClgqnwpYK98KWDkQ==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"𥃥𥃹𥄍𥄡𥄵𥅉𥅝𥅱𥆅𥆙𥆭𥇁𥇕𥇩𥇽𥈑𥈥𥈹𥉍𥉡𥉵𥊉𥊝𥊱𥋅𥋙𥋭𥌁𥌕𥌩𥌽𥍑𥍥𥍹𥎍𥎡𥎵𥏉𥏝𥏱𥐅𥐙𥐭𥑁𥑕𥑩𥑽𥒑𥒥𥒹𥓍𥓡𥓵𥔉𥔝𥔱𥕅𥕙𥕭𥖁𥖕𥖩𥖽𥗑𥗥𥗹𥘍𥘡𥘵𥙉𥙝𥙱𥚅𥚙𥚭𥛁𥛕𥛩𥛽𥜑𥜥𥜹𥝍𥝡𥝵𥞉𥞝𥞱𥟅𥟙𥟭𥠁𥠕𥠩𥠽𥡑𥡥𥡹𥢍𥢡\",\n\t\t\t\"encodedString\": \"8KWDpfClg7nwpYSN8KWEofClhLXwpYWJ8KWFnfClhbHwpYaF8KWGmfClhq3wpYeB8KWHlfClh6nwpYe98KWIkfCliKXwpYi58KWJjfCliaHwpYm18KWKifClip3wpYqx8KWLhfCli5nwpYut8KWMgfCljJXwpYyp8KWMvfCljZHwpY2l8KWNufCljo3wpY6h8KWOtfClj4nwpY+d8KWPsfClkIXwpZCZ8KWQrfClkYHwpZGV8KWRqfClkb3wpZKR8KWSpfClkrnwpZON8KWTofClk7XwpZSJ8KWUnfCllLHwpZWF8KWVmfClla3wpZaB8KWWlfCllqnwpZa98KWXkfCll6XwpZe58KWYjfClmKHwpZi18KWZifClmZ3wpZmx8KWahfClmpnwpZqt8KWbgfClm5XwpZup8KWbvfClnJHwpZyl8KWcufClnY3wpZ2h8KWdtfClnonwpZ6d8KWesfCln4XwpZ+Z8KWfrfCloIHwpaCV8KWgqfCloL3wpaGR8KWhpfClobnwpaKN8KWioQ==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"𥢵𥣉𥣝𥣱𥤅𥤙𥤭𥥁𥥕𥥩𥥽𥦑𥦥𥦹𥧍𥧡𥧵𥨉𥨝𥨱𥩅𥩙𥩭𥪁𥪕𥪩𥪽𥫑𥫥𥫹𥬍𥬡𥬵𥭉𥭝𥭱𥮅𥮙𥮭𥯁𥯕𥯩𥯽𥰑𥰥𥰹𥱍𥱡𥱵𥲉𥲝𥲱𥳅𥳙𥳭𥴁𥴕𥴩𥴽𥵑𥵥𥵹𥶍𥶡𥶵𥷉𥷝𥷱𥸅𥸙𥸭𥹁𥹕𥹩𥹽𥺑𥺥𥺹𥻍𥻡𥻵𥼉𥼝𥼱𥽅𥽙𥽭𥾁𥾕𥾩𥾽𥿑𥿥𥿹𦀍𦀡𦀵𦁉𦁝𦁱\",\n\t\t\t\"encodedString\": \"8KWitfClo4nwpaOd8KWjsfClpIXwpaSZ8KWkrfClpYHwpaWV8KWlqfClpb3wpaaR8KWmpfClprnwpaeN8KWnofClp7XwpaiJ8KWonfClqLHwpamF8KWpmfClqa3wpaqB8KWqlfClqqnwpaq98KWrkfClq6Xwpau58KWsjfClrKHwpay18KWtifClrZ3wpa2x8KWuhfClrpnwpa6t8KWvgfClr5Xwpa+p8KWvvfClsJHwpbCl8KWwufClsY3wpbGh8KWxtfClsonwpbKd8KWysfCls4XwpbOZ8KWzrfCltIHwpbSV8KW0qfCltL3wpbWR8KW1pfCltbnwpbaN8KW2ofCltrXwpbeJ8KW3nfClt7HwpbiF8KW4mfCluK3wpbmB8KW5lfCluanwpbm98KW6kfCluqXwpbq58KW7jfClu6Hwpbu18KW8ifClvJ3wpbyx8KW9hfClvZnwpb2t8KW+gfClvpXwpb6p8KW+vfClv5Hwpb+l8KW/ufCmgI3wpoCh8KaAtfCmgYnwpoGd8KaBsQ==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"𦂅𦂙𦂭𦃁𦃕𦃩𦃽𦄑𦄥𦄹𦅍𦅡𦅵𦆉𦆝𦆱𦇅𦇙𦇭𦈁𦈕𦈩𦈽𦉑𦉥𦉹𦊍𦊡𦊵𦋉𦋝𦋱𦌅𦌙𦌭𦍁𦍕𦍩𦍽𦎑𦎥𦎹𦏍𦏡𦏵𦐉𦐝𦐱𦑅𦑙𦑭𦒁𦒕𦒩𦒽𦓑𦓥𦓹𦔍𦔡𦔵𦕉𦕝𦕱𦖅𦖙𦖭𦗁𦗕𦗩𦗽𦘑𦘥𦘹𦙍𦙡𦙵𦚉𦚝𦚱𦛅𦛙𦛭𦜁𦜕𦜩𦜽𦝑𦝥𦝹𦞍𦞡𦞵𦟉𦟝𦟱𦠅𦠙𦠭𦡁\",\n\t\t\t\"encodedString\": \"8KaChfCmgpnwpoKt8KaDgfCmg5XwpoOp8KaDvfCmhJHwpoSl8KaEufCmhY3wpoWh8KaFtfCmhonwpoad8KaGsfCmh4XwpoeZ8KaHrfCmiIHwpoiV8KaIqfCmiL3wpomR8KaJpfCmibnwpoqN8KaKofCmirXwpouJ8KaLnfCmi7HwpoyF8KaMmfCmjK3wpo2B8KaNlfCmjanwpo298KaOkfCmjqXwpo658KaPjfCmj6Hwpo+18KaQifCmkJ3wppCx8KaRhfCmkZnwppGt8KaSgfCmkpXwppKp8KaSvfCmk5HwppOl8KaTufCmlI3wppSh8KaUtfCmlYnwppWd8KaVsfCmloXwppaZ8KaWrfCml4HwppeV8KaXqfCml73wppiR8KaYpfCmmLnwppmN8KaZofCmmbXwppqJ8KaanfCmmrHwppuF8KabmfCmm63wppyB8KaclfCmnKnwppy98KadkfCmnaXwpp258KaejfCmnqHwpp618KafifCmn53wpp+x8KaghfCmoJnwpqCt8KahgQ==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"𦡕𦡩𦡽𦢑𦢥𦢹𦣍𦣡𦣵𦤉𦤝𦤱𦥅𦥙𦥭𦦁𦦕𦦩𦦽𦧑𦧥𦧹𦨍𦨡𦨵𦩉𦩝𦩱𦪅𦪙𦪭𦫁𦫕𦫩𦫽𦬑𦬥𦬹𦭍𦭡𦭵𦮉𦮝𦮱𦯅𦯙𦯭𦰁𦰕𦰩𦰽𦱑𦱥𦱹𦲍𦲡𦲵𦳉𦳝𦳱𦴅𦴙𦴭𦵁𦵕𦵩𦵽𦶑𦶥𦶹𦷍𦷡𦷵𦸉𦸝𦸱𦹅𦹙𦹭𦺁𦺕𦺩𦺽𦻑𦻥𦻹𦼍𦼡𦼵𦽉𦽝𦽱𦾅𦾙𦾭𦿁𦿕𦿩𦿽𧀑\",\n\t\t\t\"encodedString\": \"8KahlfCmoanwpqG98KaikfCmoqXwpqK58KajjfCmo6HwpqO18KakifCmpJ3wpqSx8KalhfCmpZnwpqWt8KamgfCmppXwpqap8KamvfCmp5Hwpqel8KanufCmqI3wpqih8KaotfCmqYnwpqmd8KapsfCmqoXwpqqZ8KaqrfCmq4HwpquV8KarqfCmq73wpqyR8KaspfCmrLnwpq2N8KatofCmrbXwpq6J8KaunfCmrrHwpq+F8KavmfCmr63wprCB8KawlfCmsKnwprC98KaxkfCmsaXwprG58KayjfCmsqHwprK18KazifCms53wprOx8Ka0hfCmtJnwprSt8Ka1gfCmtZXwprWp8Ka1vfCmtpHwpral8Ka2ufCmt43wpreh8Ka3tfCmuInwprid8Ka4sfCmuYXwprmZ8Ka5rfCmuoHwprqV8Ka6qfCmur3wpruR8Ka7pfCmu7nwpryN8Ka8ofCmvLXwpr2J8Ka9nfCmvbHwpr6F8Ka+mfCmvq3wpr+B8Ka/lfCmv6nwpr+98KeAkQ==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"𧀥𧀹𧁍𧁡𧁵𧂉𧂝𧂱𧃅𧃙𧃭𧄁𧄕𧄩𧄽𧅑𧅥𧅹𧆍𧆡𧆵𧇉𧇝𧇱𧈅𧈙𧈭𧉁𧉕𧉩𧉽𧊑𧊥𧊹𧋍𧋡𧋵𧌉𧌝𧌱𧍅𧍙𧍭𧎁𧎕𧎩𧎽𧏑𧏥𧏹𧐍𧐡𧐵𧑉𧑝𧑱𧒅𧒙𧒭𧓁𧓕𧓩𧓽𧔑𧔥𧔹𧕍𧕡𧕵𧖉𧖝𧖱𧗅𧗙𧗭𧘁𧘕𧘩𧘽𧙑𧙥𧙹𧚍𧚡𧚵𧛉𧛝𧛱𧜅𧜙𧜭𧝁𧝕𧝩𧝽𧞑𧞥𧞹𧟍𧟡\",\n\t\t\t\"encodedString\": \"8KeApfCngLnwp4GN8KeBofCngbXwp4KJ8KeCnfCngrHwp4OF8KeDmfCng63wp4SB8KeElfCnhKnwp4S98KeFkfCnhaXwp4W58KeGjfCnhqHwp4a18KeHifCnh53wp4ex8KeIhfCniJnwp4it8KeJgfCniZXwp4mp8KeJvfCnipHwp4ql8KeKufCni43wp4uh8KeLtfCnjInwp4yd8KeMsfCnjYXwp42Z8KeNrfCnjoHwp46V8KeOqfCnjr3wp4+R8KePpfCnj7nwp5CN8KeQofCnkLXwp5GJ8KeRnfCnkbHwp5KF8KeSmfCnkq3wp5OB8KeTlfCnk6nwp5O98KeUkfCnlKXwp5S58KeVjfCnlaHwp5W18KeWifCnlp3wp5ax8KeXhfCnl5nwp5et8KeYgfCnmJXwp5ip8KeYvfCnmZHwp5ml8KeZufCnmo3wp5qh8KeatfCnm4nwp5ud8KebsfCnnIXwp5yZ8KecrfCnnYHwp52V8KedqfCnnb3wp56R8KeepfCnnrnwp5+N8KefoQ==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"𧟵𧠉𧠝𧠱𧡅𧡙𧡭𧢁𧢕𧢩𧢽𧣑𧣥𧣹𧤍𧤡𧤵𧥉𧥝𧥱𧦅𧦙𧦭𧧁𧧕𧧩𧧽𧨑𧨥𧨹𧩍𧩡𧩵𧪉𧪝𧪱𧫅𧫙𧫭𧬁𧬕𧬩𧬽𧭑𧭥𧭹𧮍𧮡𧮵𧯉𧯝𧯱𧰅𧰙𧰭𧱁𧱕𧱩𧱽𧲑𧲥𧲹𧳍𧳡𧳵𧴉𧴝𧴱𧵅𧵙𧵭𧶁𧶕𧶩𧶽𧷑𧷥𧷹𧸍𧸡𧸵𧹉𧹝𧹱𧺅𧺙𧺭𧻁𧻕𧻩𧻽𧼑𧼥𧼹𧽍𧽡𧽵𧾉𧾝𧾱\",\n\t\t\t\"encodedString\": \"8KeftfCnoInwp6Cd8KegsfCnoYXwp6GZ8KehrfCnooHwp6KV8KeiqfCnor3wp6OR8KejpfCno7nwp6SN8KekofCnpLXwp6WJ8KelnfCnpbHwp6aF8KemmfCnpq3wp6eB8KenlfCnp6nwp6e98KeokfCnqKXwp6i58KepjfCnqaHwp6m18KeqifCnqp3wp6qx8KerhfCnq5nwp6ut8KesgfCnrJXwp6yp8KesvfCnrZHwp62l8KetufCnro3wp66h8KeutfCnr4nwp6+d8KevsfCnsIXwp7CZ8KewrfCnsYHwp7GV8KexqfCnsb3wp7KR8KeypfCnsrnwp7ON8KezofCns7Xwp7SJ8Ke0nfCntLHwp7WF8Ke1mfCnta3wp7aB8Ke2lfCntqnwp7a98Ke3kfCnt6Xwp7e58Ke4jfCnuKHwp7i18Ke5ifCnuZ3wp7mx8Ke6hfCnupnwp7qt8Ke7gfCnu5Xwp7up8Ke7vfCnvJHwp7yl8Ke8ufCnvY3wp72h8Ke9tfCnvonwp76d8Ke+sQ==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"𧿅𧿙𧿭𨀁𨀕𨀩𨀽𨁑𨁥𨁹𨂍𨂡𨂵𨃉𨃝𨃱𨄅𨄙𨄭𨅁𨅕𨅩𨅽𨆑𨆥𨆹𨇍𨇡𨇵𨈉𨈝𨈱𨉅𨉙𨉭𨊁𨊕𨊩𨊽𨋑𨋥𨋹𨌍𨌡𨌵𨍉𨍝𨍱𨎅𨎙𨎭𨏁𨏕𨏩𨏽𨐑𨐥𨐹𨑍𨑡𨑵𨒉𨒝𨒱𨓅𨓙𨓭𨔁𨔕𨔩𨔽𨕑𨕥𨕹𨖍𨖡𨖵𨗉𨗝𨗱𨘅𨘙𨘭𨙁𨙕𨙩𨙽𨚑𨚥𨚹𨛍𨛡𨛵𨜉𨜝𨜱𨝅𨝙𨝭𨞁\",\n\t\t\t\"encodedString\": \"8Ke/hfCnv5nwp7+t8KiAgfCogJXwqICp8KiAvfCogZHwqIGl8KiBufCogo3wqIKh8KiCtfCog4nwqIOd8KiDsfCohIXwqISZ8KiErfCohYHwqIWV8KiFqfCohb3wqIaR8KiGpfCohrnwqIeN8KiHofCoh7XwqIiJ8KiInfCoiLHwqImF8KiJmfCoia3wqIqB8KiKlfCoiqnwqIq98KiLkfCoi6XwqIu58KiMjfCojKHwqIy18KiNifCojZ3wqI2x8KiOhfCojpnwqI6t8KiPgfCoj5XwqI+p8KiPvfCokJHwqJCl8KiQufCokY3wqJGh8KiRtfCokonwqJKd8KiSsfCok4XwqJOZ8KiTrfColIHwqJSV8KiUqfColL3wqJWR8KiVpfColbnwqJaN8KiWofColrXwqJeJ8KiXnfCol7HwqJiF8KiYmfComK3wqJmB8KiZlfComanwqJm98KiakfComqXwqJq58KibjfCom6HwqJu18KicifConJ3wqJyx8KidhfConZnwqJ2t8KiegQ==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"𨞕𨞩𨞽𨟑𨟥𨟹𨠍𨠡𨠵𨡉𨡝𨡱𨢅𨢙𨢭𨣁𨣕𨣩𨣽𨤑𨤥𨤹𨥍𨥡𨥵𨦉𨦝𨦱𨧅𨧙𨧭𨨁𨨕𨨩𨨽𨩑𨩥𨩹𨪍𨪡𨪵𨫉𨫝𨫱𨬅𨬙𨬭𨭁𨭕𨭩𨭽𨮑𨮥𨮹𨯍𨯡𨯵𨰉𨰝𨰱𨱅𨱙𨱭𨲁𨲕𨲩𨲽𨳑𨳥𨳹𨴍𨴡𨴵𨵉𨵝𨵱𨶅𨶙𨶭𨷁𨷕𨷩𨷽𨸑𨸥𨸹𨹍𨹡𨹵𨺉𨺝𨺱𨻅𨻙𨻭𨼁𨼕𨼩𨼽𨽑\",\n\t\t\t\"encodedString\": \"8KielfConqnwqJ698KifkfCon6XwqJ+58KigjfCooKHwqKC18KihifCooZ3wqKGx8KiihfCoopnwqKKt8KijgfCoo5XwqKOp8KijvfCopJHwqKSl8KikufCopY3wqKWh8KiltfCoponwqKad8KimsfCop4XwqKeZ8KinrfCoqIHwqKiV8KioqfCoqL3wqKmR8KippfCoqbnwqKqN8KiqofCoqrXwqKuJ8KirnfCoq7HwqKyF8KismfCorK3wqK2B8KitlfCoranwqK298KiukfCorqXwqK658KivjfCor6HwqK+18KiwifCosJ3wqLCx8KixhfCosZnwqLGt8KiygfCospXwqLKp8KiyvfCos5HwqLOl8KizufCotI3wqLSh8Ki0tfCotYnwqLWd8Ki1sfCotoXwqLaZ8Ki2rfCot4HwqLeV8Ki3qfCot73wqLiR8Ki4pfCouLnwqLmN8Ki5ofCoubXwqLqJ8Ki6nfCourHwqLuF8Ki7mfCou63wqLyB8Ki8lfCovKnwqLy98Ki9kQ==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"𨽥𨽹𨾍𨾡𨾵𨿉𨿝𨿱𩀅𩀙𩀭𩁁𩁕𩁩𩁽𩂑𩂥𩂹𩃍𩃡𩃵𩄉𩄝𩄱𩅅𩅙𩅭𩆁𩆕𩆩𩆽𩇑𩇥𩇹𩈍𩈡𩈵𩉉𩉝𩉱𩊅𩊙𩊭𩋁𩋕𩋩𩋽𩌑𩌥𩌹𩍍𩍡𩍵𩎉𩎝𩎱𩏅𩏙𩏭𩐁𩐕𩐩𩐽𩑑𩑥𩑹𩒍𩒡𩒵𩓉𩓝𩓱𩔅𩔙𩔭𩕁𩕕𩕩𩕽𩖑𩖥𩖹𩗍𩗡𩗵𩘉𩘝𩘱𩙅𩙙𩙭𩚁𩚕𩚩𩚽𩛑𩛥𩛹𩜍𩜡\",\n\t\t\t\"encodedString\": \"8Ki9pfCovbnwqL6N8Ki+ofCovrXwqL+J8Ki/nfCov7HwqYCF8KmAmfCpgK3wqYGB8KmBlfCpganwqYG98KmCkfCpgqXwqYK58KmDjfCpg6HwqYO18KmEifCphJ3wqYSx8KmFhfCphZnwqYWt8KmGgfCphpXwqYap8KmGvfCph5HwqYel8KmHufCpiI3wqYih8KmItfCpiYnwqYmd8KmJsfCpioXwqYqZ8KmKrfCpi4HwqYuV8KmLqfCpi73wqYyR8KmMpfCpjLnwqY2N8KmNofCpjbXwqY6J8KmOnfCpjrHwqY+F8KmPmfCpj63wqZCB8KmQlfCpkKnwqZC98KmRkfCpkaXwqZG58KmSjfCpkqHwqZK18KmTifCpk53wqZOx8KmUhfCplJnwqZSt8KmVgfCplZXwqZWp8KmVvfCplpHwqZal8KmWufCpl43wqZeh8KmXtfCpmInwqZid8KmYsfCpmYXwqZmZ8KmZrfCpmoHwqZqV8KmaqfCpmr3wqZuR8KmbpfCpm7nwqZyN8KmcoQ==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"𩜵𩝉𩝝𩝱𩞅𩞙𩞭𩟁𩟕𩟩𩟽𩠑𩠥𩠹𩡍𩡡𩡵𩢉𩢝𩢱𩣅𩣙𩣭𩤁𩤕𩤩𩤽𩥑𩥥𩥹𩦍𩦡𩦵𩧉𩧝𩧱𩨅𩨙𩨭𩩁𩩕𩩩𩩽𩪑𩪥𩪹𩫍𩫡𩫵𩬉𩬝𩬱𩭅𩭙𩭭𩮁𩮕𩮩𩮽𩯑𩯥𩯹𩰍𩰡𩰵𩱉𩱝𩱱𩲅𩲙𩲭𩳁𩳕𩳩𩳽𩴑𩴥𩴹𩵍𩵡𩵵𩶉𩶝𩶱𩷅𩷙𩷭𩸁𩸕𩸩𩸽𩹑𩹥𩹹𩺍𩺡𩺵𩻉𩻝𩻱\",\n\t\t\t\"encodedString\": \"8KmctfCpnYnwqZ2d8KmdsfCpnoXwqZ6Z8KmerfCpn4HwqZ+V8KmfqfCpn73wqaCR8KmgpfCpoLnwqaGN8KmhofCpobXwqaKJ8KminfCporHwqaOF8KmjmfCpo63wqaSB8KmklfCppKnwqaS98KmlkfCppaXwqaW58KmmjfCppqHwqaa18KmnifCpp53wqaex8KmohfCpqJnwqait8KmpgfCpqZXwqamp8KmpvfCpqpHwqaql8KmqufCpq43wqauh8KmrtfCprInwqayd8KmssfCprYXwqa2Z8KmtrfCproHwqa6V8KmuqfCprr3wqa+R8KmvpfCpr7nwqbCN8KmwofCpsLXwqbGJ8KmxnfCpsbHwqbKF8KmymfCpsq3wqbOB8KmzlfCps6nwqbO98Km0kfCptKXwqbS58Km1jfCptaHwqbW18Km2ifCptp3wqbax8Km3hfCpt5nwqbet8Km4gfCpuJXwqbip8Km4vfCpuZHwqbml8Km5ufCpuo3wqbqh8Km6tfCpu4nwqbud8Km7sQ==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"𩼅𩼙𩼭𩽁𩽕𩽩𩽽𩾑𩾥𩾹𩿍𩿡𩿵𪀉𪀝𪀱𪁅𪁙𪁭𪂁𪂕𪂩𪂽𪃑𪃥𪃹𪄍𪄡𪄵𪅉𪅝𪅱𪆅𪆙𪆭𪇁𪇕𪇩𪇽𪈑𪈥𪈹𪉍𪉡𪉵𪊉𪊝𪊱𪋅𪋙𪋭𪌁𪌕𪌩𪌽𪍑𪍥𪍹𪎍𪎡𪎵𪏉𪏝𪏱𪐅𪐙𪐭𪑁𪑕𪑩𪑽𪒑𪒥𪒹𪓍𪓡𪓵𪔉𪔝𪔱𪕅𪕙𪕭𪖁𪖕𪖩𪖽𪗑𪗥𪗹𪘍𪘡𪘵𪙉𪙝𪙱𪚅𪚙𪚭𪛁\",\n\t\t\t\"encodedString\": \"8Km8hfCpvJnwqbyt8Km9gfCpvZXwqb2p8Km9vfCpvpHwqb6l8Km+ufCpv43wqb+h8Km/tfCqgInwqoCd8KqAsfCqgYXwqoGZ8KqBrfCqgoHwqoKV8KqCqfCqgr3wqoOR8KqDpfCqg7nwqoSN8KqEofCqhLXwqoWJ8KqFnfCqhbHwqoaF8KqGmfCqhq3wqoeB8KqHlfCqh6nwqoe98KqIkfCqiKXwqoi58KqJjfCqiaHwqom18KqKifCqip3wqoqx8KqLhfCqi5nwqout8KqMgfCqjJXwqoyp8KqMvfCqjZHwqo2l8KqNufCqjo3wqo6h8KqOtfCqj4nwqo+d8KqPsfCqkIXwqpCZ8KqQrfCqkYHwqpGV8KqRqfCqkb3wqpKR8KqSpfCqkrnwqpON8KqTofCqk7XwqpSJ8KqUnfCqlLHwqpWF8KqVmfCqla3wqpaB8KqWlfCqlqnwqpa98KqXkfCql6Xwqpe58KqYjfCqmKHwqpi18KqZifCqmZ3wqpmx8KqahfCqmpnwqpqt8KqbgQ==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"𪛕𪜉𪜝𪜱𪝅𪝙𪝭𪞁𪞕𪞩𪞽𪟑𪟥𪟹𪠍𪠡𪠵𪡉𪡝𪡱𪢅𪢙𪢭𪣁𪣕𪣩𪣽𪤑𪤥𪤹𪥍𪥡𪥵𪦉𪦝𪦱𪧅𪧙𪧭𪨁𪨕𪨩𪨽𪩑𪩥𪩹𪪍𪪡𪪵𪫉𪫝𪫱𪬅𪬙𪬭𪭁𪭕𪭩𪭽𪮑𪮥𪮹𪯍𪯡𪯵𪰉𪰝𪰱𪱅𪱙𪱭𪲁𪲕𪲩𪲽𪳑𪳥𪳹𪴍𪴡𪴵𪵉𪵝𪵱𪶅𪶙𪶭𪷁𪷕𪷩𪷽𪸑𪸥𪸹𪹍𪹡𪹵𪺉𪺝𪺱\",\n\t\t\t\"encodedString\": \"8KqblfCqnInwqpyd8KqcsfCqnYXwqp2Z8KqdrfCqnoHwqp6V8KqeqfCqnr3wqp+R8KqfpfCqn7nwqqCN8KqgofCqoLXwqqGJ8KqhnfCqobHwqqKF8KqimfCqoq3wqqOB8KqjlfCqo6nwqqO98KqkkfCqpKXwqqS58KqljfCqpaHwqqW18KqmifCqpp3wqqax8KqnhfCqp5nwqqet8KqogfCqqJXwqqip8KqovfCqqZHwqqml8KqpufCqqo3wqqqh8KqqtfCqq4nwqqud8KqrsfCqrIXwqqyZ8KqsrfCqrYHwqq2V8KqtqfCqrb3wqq6R8KqupfCqrrnwqq+N8KqvofCqr7XwqrCJ8KqwnfCqsLHwqrGF8KqxmfCqsa3wqrKB8KqylfCqsqnwqrK98KqzkfCqs6XwqrO58Kq0jfCqtKHwqrS18Kq1ifCqtZ3wqrWx8Kq2hfCqtpnwqrat8Kq3gfCqt5Xwqrep8Kq3vfCquJHwqril8Kq4ufCquY3wqrmh8Kq5tfCquonwqrqd8Kq6sQ==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"𪻅𪻙𪻭𪼁𪼕𪼩𪼽𪽑𪽥𪽹𪾍𪾡𪾵𪿉𪿝𪿱𫀅𫀙𫀭𫁁𫁕𫁩𫁽𫂑𫂥𫂹𫃍𫃡𫃵𫄉𫄝𫄱𫅅𫅙𫅭𫆁𫆕𫆩𫆽𫇑𫇥𫇹𫈍𫈡𫈵𫉉𫉝𫉱𫊅𫊙𫊭𫋁𫋕𫋩𫋽𫌑𫌥𫌹𫍍𫍡𫍵𫎉𫎝𫎱𫏅𫏙𫏭𫐁𫐕𫐩𫐽𫑑𫑥𫑹𫒍𫒡𫒵𫓉𫓝𫓱𫔅𫔙𫔭𫕁𫕕𫕩𫕽𫖑𫖥𫖹𫗍𫗡𫗵𫘉𫘝𫘱𫙅𫙙𫙭𫚁\",\n\t\t\t\"encodedString\": \"8Kq7hfCqu5nwqrut8Kq8gfCqvJXwqryp8Kq8vfCqvZHwqr2l8Kq9ufCqvo3wqr6h8Kq+tfCqv4nwqr+d8Kq/sfCrgIXwq4CZ8KuArfCrgYHwq4GV8KuBqfCrgb3wq4KR8KuCpfCrgrnwq4ON8KuDofCrg7Xwq4SJ8KuEnfCrhLHwq4WF8KuFmfCrha3wq4aB8KuGlfCrhqnwq4a98KuHkfCrh6Xwq4e58KuIjfCriKHwq4i18KuJifCriZ3wq4mx8KuKhfCripnwq4qt8KuLgfCri5Xwq4up8KuLvfCrjJHwq4yl8KuMufCrjY3wq42h8KuNtfCrjonwq46d8KuOsfCrj4Xwq4+Z8KuPrfCrkIHwq5CV8KuQqfCrkL3wq5GR8KuRpfCrkbnwq5KN8KuSofCrkrXwq5OJ8KuTnfCrk7Hwq5SF8KuUmfCrlK3wq5WB8KuVlfCrlanwq5W98KuWkfCrlqXwq5a58KuXjfCrl6Hwq5e18KuYifCrmJ3wq5ix8KuZhfCrmZnwq5mt8KuagQ==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"𫚕𫚩𫚽𫛑𫛥𫛹𫜍𫜡𫜵𫝏𫝣𫝷𫞋𫞟𫞳𫟇𫟛𫟯𫠃𫠗𫠭𫡁𫡕𫡩𫡽𫢑𫢥𫢹𫣍𫣡𫣵𫤉𫤝𫤱𫥅𫥙𫥭𫦁𫦕𫦩𫦽𫧑𫧥𫧹𫨍𫨡𫨵𫩉𫩝𫩱𫪅𫪙𫪭𫫁𫫕𫫩𫫽𫬑𫬥𫬹𫭍𫭡𫭵𫮉𫮝𫮱𫯅𫯙𫯭𫰁𫰕𫰩𫰽𫱑𫱥𫱹𫲍𫲡𫲵𫳉𫳝𫳱𫴅𫴙𫴭𫵁𫵕𫵩𫵽𫶑𫶥𫶹𫷍𫷡𫷵𫸉𫸝𫸱𫹅𫹙\",\n\t\t\t\"encodedString\": \"8KualfCrmqnwq5q98KubkfCrm6Xwq5u58KucjfCrnKHwq5y18Kudj/CrnaPwq5238Kuei/Crnp/wq56z8Kufh/Crn5vwq5+v8Kugg/CroJfwq6Ct8KuhgfCroZXwq6Gp8KuhvfCropHwq6Kl8KuiufCro43wq6Oh8KujtfCrpInwq6Sd8KuksfCrpYXwq6WZ8KulrfCrpoHwq6aV8KumqfCrpr3wq6eR8KunpfCrp7nwq6iN8KuoofCrqLXwq6mJ8KupnfCrqbHwq6qF8KuqmfCrqq3wq6uB8KurlfCrq6nwq6u98KuskfCrrKXwq6y58KutjfCrraHwq6218KuuifCrrp3wq66x8KuvhfCrr5nwq6+t8KuwgfCrsJXwq7Cp8KuwvfCrsZHwq7Gl8KuxufCrso3wq7Kh8KuytfCrs4nwq7Od8KuzsfCrtIXwq7SZ8Ku0rfCrtYHwq7WV8Ku1qfCrtb3wq7aR8Ku2pfCrtrnwq7eN8Ku3ofCrt7Xwq7iJ8Ku4nfCruLHwq7mF8Ku5mQ==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"𫹭𫺁𫺕𫺩𫺽𫻑𫻥𫻹𫼍𫼡𫼵𫽉𫽝𫽱𫾅𫾙𫾭𫿁𫿕𫿩𫿽𬀑𬀥𬀹𬁍𬁡𬁵𬂉𬂝𬂱𬃅𬃙𬃭𬄁𬄕𬄩𬄽𬅑𬅥𬅹𬆍𬆡𬆵𬇉𬇝𬇱𬈅𬈙𬈭𬉁𬉕𬉩𬉽𬊑𬊥𬊹𬋍𬋡𬋵𬌉𬌝𬌱𬍅𬍙𬍭𬎁𬎕𬎩𬎽𬏑𬏥𬏹𬐍𬐡𬐵𬑉𬑝𬑱𬒅𬒙𬒭𬓁𬓕𬓩𬓽𬔑𬔥𬔹𬕍𬕡𬕵𬖉𬖝𬖱𬗅𬗙𬗭𬘁𬘕𬘩\",\n\t\t\t\"encodedString\": \"8Ku5rfCruoHwq7qV8Ku6qfCrur3wq7uR8Ku7pfCru7nwq7yN8Ku8ofCrvLXwq72J8Ku9nfCrvbHwq76F8Ku+mfCrvq3wq7+B8Ku/lfCrv6nwq7+98KyAkfCsgKXwrIC58KyBjfCsgaHwrIG18KyCifCsgp3wrIKx8KyDhfCsg5nwrIOt8KyEgfCshJXwrISp8KyEvfCshZHwrIWl8KyFufCsho3wrIah8KyGtfCsh4nwrIed8KyHsfCsiIXwrIiZ8KyIrfCsiYHwrImV8KyJqfCsib3wrIqR8KyKpfCsirnwrIuN8KyLofCsi7XwrIyJ8KyMnfCsjLHwrI2F8KyNmfCsja3wrI6B8KyOlfCsjqnwrI698KyPkfCsj6XwrI+58KyQjfCskKHwrJC18KyRifCskZ3wrJGx8KyShfCskpnwrJKt8KyTgfCsk5XwrJOp8KyTvfCslJHwrJSl8KyUufCslY3wrJWh8KyVtfCslonwrJad8KyWsfCsl4XwrJeZ8KyXrfCsmIHwrJiV8KyYqQ==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"𬘽𬙑𬙥𬙹𬚍𬚡𬚵𬛉𬛝𬛱𬜅𬜙𬜭𬝁𬝕𬝩𬝽𬞑𬞥𬞹𬟍𬟡𬟵𬠉𬠝𬠱𬡅𬡙𬡭𬢁𬢕𬢩𬢽𬣑𬣥𬣹𬤍𬤡𬤵𬥉𬥝𬥱𬦅𬦙𬦭𬧁𬧕𬧩𬧽𬨑𬨥𬨹𬩍𬩡𬩵𬪉𬪝𬪱𬫅𬫙𬫭𬬁𬬕𬬩𬬽𬭑𬭥𬭹𬮍𬮡𬮵𬯉𬯝𬯱𬰅𬰙𬰭𬱁𬱕𬱩𬱽𬲑𬲥𬲹𬳍𬳡𬳵𬴉𬴝𬴱𬵅𬵙𬵭𬶁𬶕𬶩𬶽𬷑𬷥𬷹\",\n\t\t\t\"encodedString\": \"8KyYvfCsmZHwrJml8KyZufCsmo3wrJqh8KyatfCsm4nwrJud8KybsfCsnIXwrJyZ8KycrfCsnYHwrJ2V8KydqfCsnb3wrJ6R8KyepfCsnrnwrJ+N8KyfofCsn7XwrKCJ8KygnfCsoLHwrKGF8KyhmfCsoa3wrKKB8KyilfCsoqnwrKK98KyjkfCso6XwrKO58KykjfCspKHwrKS18KylifCspZ3wrKWx8KymhfCsppnwrKat8KyngfCsp5XwrKep8KynvfCsqJHwrKil8KyoufCsqY3wrKmh8KyptfCsqonwrKqd8KyqsfCsq4XwrKuZ8KyrrfCsrIHwrKyV8KysqfCsrL3wrK2R8KytpfCsrbnwrK6N8KyuofCsrrXwrK+J8KyvnfCsr7HwrLCF8KywmfCssK3wrLGB8KyxlfCssanwrLG98KyykfCssqXwrLK58KyzjfCss6HwrLO18Ky0ifCstJ3wrLSx8Ky1hfCstZnwrLWt8Ky2gfCstpXwrLap8Ky2vfCst5HwrLel8Ky3uQ==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"𬸍𬸡𬸵𬹉𬹝𬹱𬺅𬺙𬺻𬻏𬻣𬻷𬼋𬼟𬼳𬽇𬽛𬽯𬾃𬾗𬾫𬾿𬿓𬿧𬿻𭀏𭀣𭀷𭁋𭁟𭁳𭂇𭂛𭂯𭃃𭃗𭃫𭃿𭄓𭄧𭄻𭅏𭅣𭅷𭆋𭆟𭆳𭇇𭇛𭇯𭈃𭈗𭈫𭈿𭉓𭉧𭉻𭊏𭊣𭊷𭋋𭋟𭋳𭌇𭌛𭌯𭍃𭍗𭍫𭍿𭎓𭎧𭎻𭏏𭏣𭏷𭐋𭐟𭐳𭑇𭑛𭑯𭒃𭒗𭒫𭒿𭓓𭓧𭓻𭔏𭔣𭔷𭕋𭕟𭕳𭖇𭖛𭖯𭗃𭗗\",\n\t\t\t\"encodedString\": \"8Ky4jfCsuKHwrLi18Ky5ifCsuZ3wrLmx8Ky6hfCsupnwrLq78Ky7j/Csu6PwrLu38Ky8i/CsvJ/wrLyz8Ky9h/CsvZvwrL2v8Ky+g/CsvpfwrL6r8Ky+v/Csv5PwrL+n8Ky/u/CtgI/wrYCj8K2At/CtgYvwrYGf8K2Bs/CtgofwrYKb8K2Cr/Ctg4PwrYOX8K2Dq/Ctg7/wrYST8K2Ep/CthLvwrYWP8K2Fo/CthbfwrYaL8K2Gn/CthrPwrYeH8K2Hm/Cth6/wrYiD8K2Il/CtiKvwrYi/8K2Jk/CtiafwrYm78K2Kj/CtiqPwrYq38K2Li/Cti5/wrYuz8K2Mh/CtjJvwrYyv8K2Ng/CtjZfwrY2r8K2Nv/CtjpPwrY6n8K2Ou/Ctj4/wrY+j8K2Pt/CtkIvwrZCf8K2Qs/CtkYfwrZGb8K2Rr/CtkoPwrZKX8K2Sq/Ctkr/wrZOT8K2Tp/Ctk7vwrZSP8K2Uo/CtlLfwrZWL8K2Vn/CtlbPwrZaH8K2Wm/Ctlq/wrZeD8K2Xlw==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"𭗫𭗿𭘓𭘧𭘻𭙏𭙣𭙷𭚋𭚟𭚳𭛇𭛛𭛯𭜃𭜗𭜫𭜿𭝓𭝧𭝻𭞏𭞣𭞷𭟋𭟟𭟳𭠇𭠛𭠯𭡃𭡗𭡫𭡿𭢓𭢧𭢻𭣏𭣣𭣷𭤋𭤟𭤳𭥇𭥛𭥯𭦃𭦗𭦫𭦿𭧓𭧧𭧻𭨏𭨣𭨷𭩋𭩟𭩳𭪇𭪛𭪯𭫃𭫗𭫫𭫿𭬓𭬧𭬻𭭏𭭣𭭷𭮋𭮟𭮳𭯇𭯛𭯯𭰃𭰗𭰫𭰿𭱓𭱧𭱻𭲏𭲣𭲷𭳋𭳟𭳳𭴇𭴛𭴯𭵃𭵗𭵫𭵿𭶓𭶧\",\n\t\t\t\"encodedString\": \"8K2Xq/Ctl7/wrZiT8K2Yp/CtmLvwrZmP8K2Zo/CtmbfwrZqL8K2an/CtmrPwrZuH8K2bm/Ctm6/wrZyD8K2cl/CtnKvwrZy/8K2dk/CtnafwrZ278K2ej/CtnqPwrZ638K2fi/Ctn5/wrZ+z8K2gh/CtoJvwraCv8K2hg/CtoZfwraGr8K2hv/CtopPwraKn8K2iu/Cto4/wraOj8K2jt/CtpIvwraSf8K2ks/CtpYfwraWb8K2lr/CtpoPwraaX8K2mq/Ctpr/wraeT8K2np/Ctp7vwraiP8K2oo/CtqLfwramL8K2pn/CtqbPwraqH8K2qm/Ctqq/wrauD8K2rl/Ctq6vwrau/8K2sk/CtrKfwray78K2tj/CtraPwra238K2ui/Ctrp/wra6z8K2vh/Ctr5vwra+v8K2wg/CtsJfwrbCr8K2wv/CtsZPwrbGn8K2xu/Ctso/wrbKj8K2yt/Cts4vwrbOf8K2zs/CttIfwrbSb8K20r/CttYPwrbWX8K21q/Cttb/wrbaT8K22pw==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"𭶻𭷏𭷣𭷷𭸋𭸟𭸳𭹇𭹛𭹯𭺃𭺗𭺫𭺿𭻓𭻧𭻻𭼏𭼣𭼷𭽋𭽟𭽳𭾇𭾛𭾯𭿃𭿗𭿫𭿿𮀓𮀧𮀻𮁏𮁣𮁷𮂋𮂟𮂳𮃇𮃛𮃯𮄃𮄗𮄫𮄿𮅓𮅧𮅻𮆏𮆣𮆷𮇋𮇟𮇳𮈇𮈛𮈯𮉃𮉗𮉫𮉿𮊓𮊧𮊻𮋏𮋣𮋷𮌋𮌟𮌳𮍇𮍛𮍯𮎃𮎗𮎫𮎿𮏓𮏧𮏻𮐏𮐣𮐷𮑋𮑟𮑳𮒇𮒛𮒯𮓃𮓗𮓫𮓿𮔓𮔧𮔻𮕏𮕣𮕷\",\n\t\t\t\"encodedString\": \"8K22u/Ctt4/wrbej8K23t/CtuIvwrbif8K24s/CtuYfwrbmb8K25r/CtuoPwrbqX8K26q/Ctur/wrbuT8K27p/Ctu7vwrbyP8K28o/CtvLfwrb2L8K29n/CtvbPwrb6H8K2+m/Ctvq/wrb+D8K2/l/Ctv6vwrb+/8K6Ak/CugKfwroC78K6Bj/CugaPwroG38K6Ci/Cugp/wroKz8K6Dh/Cug5vwroOv8K6Eg/CuhJfwroSr8K6Ev/CuhZPwroWn8K6Fu/Cuho/wroaj8K6Gt/Cuh4vwroef8K6Hs/CuiIfwroib8K6Ir/CuiYPwromX8K6Jq/Cuib/wroqT8K6Kp/CuirvwrouP8K6Lo/Cui7fwroyL8K6Mn/CujLPwro2H8K6Nm/Cuja/wro6D8K6Ol/Cujqvwro6/8K6Pk/Cuj6fwro+78K6Qj/CukKPwrpC38K6Ri/CukZ/wrpGz8K6Sh/CukpvwrpKv8K6Tg/Cuk5fwrpOr8K6Tv/CulJPwrpSn8K6Uu/CulY/wrpWj8K6Vtw==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"𮖋𮖟𮖳𮗇𮗛𮗯𮘃𮘗𮘫𮘿𮙓𮙧𮙻𮚏𮚣𮚷𮛋𮛟𮛳𮜇𮜛𮜯𮝃𮝗𮝫𮝿𮞓𮞧𮞻𮟏𮟣𮟷𮠋𮠟𮠳𮡇𮡛𮡯𮢃𮢗𮢫𮢿𮣓𮣧𮣻𮤏𮤣𮤷𮥋𮥟𮥳𮦇𮦛𮦯𮧃𮧗𮧫𮧿𮨓𮨧𮨻𮩏𮩣𮩷𮪋𮪟𮪳𮫇𮫛𮫯𮬃𮬗𮬫𮬿𮭓𮭧𮭻𮮏𮮣𮮷𮯋𮯟𠔜勉叱噑姬㞁㡼志成摷朡㰘流㶖㺬㿼𥘦糒\",\n\t\t\t\"encodedString\": \"8K6Wi/Culp/wrpaz8K6Xh/Cul5vwrpev8K6Yg/CumJfwrpir8K6Yv/CumZPwrpmn8K6Zu/Cumo/wrpqj8K6at/Cum4vwrpuf8K6bs/CunIfwrpyb8K6cr/CunYPwrp2X8K6dq/Cunb/wrp6T8K6ep/Cunrvwrp+P8K6fo/Cun7fwrqCL8K6gn/CuoLPwrqGH8K6hm/Cuoa/wrqKD8K6il/CuoqvwrqK/8K6jk/Cuo6fwrqO78K6kj/CupKPwrqS38K6li/CupZ/wrqWz8K6mh/Cuppvwrqav8K6ng/Cup5fwrqer8K6nv/CuqJPwrqin8K6ou/CuqY/wrqmj8K6pt/Cuqovwrqqf8K6qs/Cuq4fwrqub8K6rr/CurIPwrqyX8K6sq/CurL/wrq2T8K6tp/Curbvwrq6P8K6uo/Currfwrq+L8K6vn/CvoJLwr6Cm8K+guvCvoY7wr6Gi8K+htvCvoorwr6Ke8K+isvCvo4bwr6Oa8K+jrvCvpILwr6SW8K+kqvCvpL7wr6WS8K+lpg==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"者䑫菌虩㒻軔䧦駂鼏󠀯󠁃󠁗󠁫󠁿󠄓󠄧󠄻󠅏󠅣󠅷󠆋󠆟󠆳󠇇󠇛󠇯󰀓󰀧󰀻󰁏󰁣󰁷󰂋󰂟󰂳󰃇󰃛󰃯󰄃󰄗󰄫󰄿󰅓󰅧󰅻󰆏󰆣󰆷󰇋󰇟󰇳󰈇󰈛󰈯󰉃󰉗󰉫󰉿󰊓󰊧󰊻󰋏󰋣󰋷󰌋󰌟󰌳󰍇󰍛󰍯󰎃󰎗󰎫󰎿󰏓󰏧󰏻󰐏󰐣󰐷󰑋󰑟󰑳󰒇󰒛󰒯󰓃󰓗󰓫󰓿󰔓󰔧󰔻󰕏󰕣󰕷󰖋󰖟󰖳󰗇\",\n\t\t\t\"encodedString\": \"8K+luvCvpo7wr6ai8K+mtvCvp4rwr6ee8K+nsvCvqIbwr6ia86CAr/OggYPzoIGX86CBq/Oggb/zoIST86CEp/OghLvzoIWP86CFo/OghbfzoIaL86CGn/OghrPzoIeH86CHm/Ogh6/zsICT87CAp/OwgLvzsIGP87CBo/OwgbfzsIKL87CCn/OwgrPzsIOH87CDm/Owg6/zsISD87CEl/OwhKvzsIS/87CFk/OwhafzsIW787CGj/OwhqPzsIa387CHi/Owh5/zsIez87CIh/OwiJvzsIiv87CJg/OwiZfzsImr87CJv/OwipPzsIqn87CKu/Owi4/zsIuj87CLt/OwjIvzsIyf87CMs/OwjYfzsI2b87CNr/OwjoPzsI6X87COq/Owjr/zsI+T87CPp/Owj7vzsJCP87CQo/OwkLfzsJGL87CRn/OwkbPzsJKH87CSm/Owkq/zsJOD87CTl/Owk6vzsJO/87CUk/OwlKfzsJS787CVj/OwlaPzsJW387CWi/Owlp/zsJaz87CXhw==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"󰗛󰗯󰘃󰘗󰘫󰘿󰙓󰙧󰙻󰚏󰚣󰚷󰛋󰛟󰛳󰜇󰜛󰜯󰝃󰝗󰝫󰝿󰞓󰞧󰞻󰟏󰟣󰟷󰠋󰠟󰠳󰡇󰡛󰡯󰢃󰢗󰢫󰢿󰣓󰣧󰣻󰤏󰤣󰤷󰥋󰥟󰥳󰦇󰦛󰦯󰧃󰧗󰧫󰧿󰨓󰨧󰨻󰩏󰩣󰩷󰪋󰪟󰪳󰫇󰫛󰫯󰬃󰬗󰬫󰬿󰭓󰭧󰭻󰮏󰮣󰮷󰯋󰯟󰯳󰰇󰰛󰰯󰱃󰱗󰱫󰱿󰲓󰲧󰲻󰳏󰳣󰳷󰴋󰴟󰴳󰵇󰵛󰵯󰶃󰶗\",\n\t\t\t\"encodedString\": \"87CXm/Owl6/zsJiD87CYl/OwmKvzsJi/87CZk/OwmafzsJm787Caj/OwmqPzsJq387Cbi/Owm5/zsJuz87Cch/OwnJvzsJyv87Cdg/OwnZfzsJ2r87Cdv/OwnpPzsJ6n87Ceu/Own4/zsJ+j87Cft/OwoIvzsKCf87Cgs/OwoYfzsKGb87Chr/OwooPzsKKX87Ciq/Owor/zsKOT87Cjp/Owo7vzsKSP87Cko/OwpLfzsKWL87Cln/OwpbPzsKaH87Cmm/Owpq/zsKeD87Cnl/Owp6vzsKe/87Cok/OwqKfzsKi787Cpj/OwqaPzsKm387Cqi/Owqp/zsKqz87Crh/Owq5vzsKuv87Csg/OwrJfzsKyr87Csv/OwrZPzsK2n87Ctu/Owro/zsK6j87Cut/Owr4vzsK+f87Cvs/OwsIfzsLCb87Cwr/OwsYPzsLGX87Cxq/Owsb/zsLKT87Cyp/OwsrvzsLOP87Czo/Ows7fzsLSL87C0n/OwtLPzsLWH87C1m/Owta/zsLaD87C2lw==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"󰶫󰶿󰷓󰷧󰷻󰸏󰸣󰸷󰹋󰹟󰹳󰺇󰺛󰺯󰻃󰻗󰻫󰻿󰼓󰼧󰼻󰽏󰽣󰽷󰾋󰾟󰾳󰿇󰿛󰿯󱀃󱀗󱀫󱀿󱁓󱁧󱁻󱂏󱂣󱂷󱃋󱃟󱃳󱄇󱄛󱄯󱅃󱅗󱅫󱅿󱆓󱆧󱆻󱇏󱇣󱇷󱈋󱈟󱈳󱉇󱉛󱉯󱊃󱊗󱊫󱊿󱋓󱋧󱋻󱌏󱌣󱌷󱍋󱍟󱍳󱎇󱎛󱎯󱏃󱏗󱏫󱏿󱐓󱐧󱐻󱑏󱑣󱑷󱒋󱒟󱒳󱓇󱓛󱓯󱔃󱔗󱔫󱔿󱕓󱕧\",\n\t\t\t\"encodedString\": \"87C2q/Owtr/zsLeT87C3p/Owt7vzsLiP87C4o/OwuLfzsLmL87C5n/OwubPzsLqH87C6m/Owuq/zsLuD87C7l/Owu6vzsLu/87C8k/OwvKfzsLy787C9j/OwvaPzsL2387C+i/Owvp/zsL6z87C/h/Owv5vzsL+v87GAg/OxgJfzsYCr87GAv/OxgZPzsYGn87GBu/Oxgo/zsYKj87GCt/Oxg4vzsYOf87GDs/OxhIfzsYSb87GEr/OxhYPzsYWX87GFq/Oxhb/zsYaT87GGp/OxhrvzsYeP87GHo/Oxh7fzsYiL87GIn/OxiLPzsYmH87GJm/Oxia/zsYqD87GKl/OxiqvzsYq/87GLk/Oxi6fzsYu787GMj/OxjKPzsYy387GNi/OxjZ/zsY2z87GOh/OxjpvzsY6v87GPg/Oxj5fzsY+r87GPv/OxkJPzsZCn87GQu/OxkY/zsZGj87GRt/OxkovzsZKf87GSs/Oxk4fzsZOb87GTr/OxlIPzsZSX87GUq/OxlL/zsZWT87GVpw==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"󱕻󱖏󱖣󱖷󱗋󱗟󱗳󱘇󱘛󱘯󱙃󱙗󱙫󱙿󱚓󱚧󱚻󱛏󱛣󱛷󱜋󱜟󱜳󱝇󱝛󱝯󱞃󱞗󱞫󱞿󱟓󱟧󱟻󱠏󱠣󱠷󱡋󱡟󱡳󱢇󱢛󱢯󱣃󱣗󱣫󱣿󱤓󱤧󱤻󱥏󱥣󱥷󱦋󱦟󱦳󱧇󱧛󱧯󱨃󱨗󱨫󱨿󱩓󱩧󱩻󱪏󱪣󱪷󱫋󱫟󱫳󱬇󱬛󱬯󱭃󱭗󱭫󱭿󱮓󱮧󱮻󱯏󱯣󱯷󱰋󱰟󱰳󱱇󱱛󱱯󱲃󱲗󱲫󱲿󱳓󱳧󱳻󱴏󱴣󱴷\",\n\t\t\t\"encodedString\": \"87GVu/Oxlo/zsZaj87GWt/Oxl4vzsZef87GXs/OxmIfzsZib87GYr/OxmYPzsZmX87GZq/Oxmb/zsZqT87Gap/OxmrvzsZuP87Gbo/Oxm7fzsZyL87Gcn/OxnLPzsZ2H87Gdm/Oxna/zsZ6D87Gel/OxnqvzsZ6/87Gfk/Oxn6fzsZ+787Ggj/OxoKPzsaC387Ghi/OxoZ/zsaGz87Gih/OxopvzsaKv87Gjg/Oxo5fzsaOr87Gjv/OxpJPzsaSn87Gku/OxpY/zsaWj87Glt/Oxpovzsaaf87Gms/Oxp4fzsaeb87Gnr/OxqIPzsaiX87Goq/OxqL/zsamT87Gpp/OxqbvzsaqP87Gqo/OxqrfzsauL87Grn/Oxq7PzsayH87Gsm/OxrK/zsa2D87Gtl/Oxravzsa2/87Guk/Oxrqfzsa6787Gvj/Oxr6Pzsa+387Gwi/OxsJ/zsbCz87Gxh/OxsZvzsbGv87Gyg/OxspfzsbKr87Gyv/Oxs5PzsbOn87Gzu/OxtI/zsbSj87G0tw==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"󱵋󱵟󱵳󱶇󱶛󱶯󱷃󱷗󱷫󱷿󱸓󱸧󱸻󱹏󱹣󱹷󱺋󱺟󱺳󱻇󱻛󱻯󱼃󱼗󱼫󱼿󱽓󱽧󱽻󱾏󱾣󱾷󱿋󱿟󱿳󲀇󲀛󲀯󲁃󲁗󲁫󲁿󲂓󲂧󲂻󲃏󲃣󲃷󲄋󲄟󲄳󲅇󲅛󲅯󲆃󲆗󲆫󲆿󲇓󲇧󲇻󲈏󲈣󲈷󲉋󲉟󲉳󲊇󲊛󲊯󲋃󲋗󲋫󲋿󲌓󲌧󲌻󲍏󲍣󲍷󲎋󲎟󲎳󲏇󲏛󲏯󲐃󲐗󲐫󲐿󲑓󲑧󲑻󲒏󲒣󲒷󲓋󲓟󲓳󲔇\",\n\t\t\t\"encodedString\": \"87G1i/OxtZ/zsbWz87G2h/Oxtpvzsbav87G3g/Oxt5fzsber87G3v/OxuJPzsbin87G4u/OxuY/zsbmj87G5t/Oxuovzsbqf87G6s/Oxu4fzsbub87G7r/OxvIPzsbyX87G8q/OxvL/zsb2T87G9p/Oxvbvzsb6P87G+o/Oxvrfzsb+L87G/n/Oxv7PzsoCH87KAm/OygK/zsoGD87KBl/OygavzsoG/87KCk/OygqfzsoK787KDj/Oyg6PzsoO387KEi/OyhJ/zsoSz87KFh/OyhZvzsoWv87KGg/Oyhpfzsoar87KGv/Oyh5Pzsoen87KHu/OyiI/zsoij87KIt/OyiYvzsomf87KJs/Oyiofzsoqb87KKr/Oyi4PzsouX87KLq/Oyi7/zsoyT87KMp/OyjLvzso2P87KNo/Oyjbfzso6L87KOn/OyjrPzso+H87KPm/Oyj6/zspCD87KQl/OykKvzspC/87KRk/OykafzspG787KSj/OykqPzspK387KTi/Oyk5/zspOz87KUhw==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"󲔛󲔯󲕃󲕗󲕫󲕿󲖓󲖧󲖻󲗏󲗣󲗷󲘋󲘟󲘳󲙇󲙛󲙯󲚃󲚗󲚫󲚿󲛓󲛧󲛻󲜏󲜣󲜷󲝋󲝟󲝳󲞇󲞛󲞯󲟃󲟗󲟫󲟿󲠓󲠧󲠻󲡏󲡣󲡷󲢋󲢟󲢳󲣇󲣛󲣯󲤃󲤗󲤫󲤿󲥓󲥧󲥻󲦏󲦣󲦷󲧋󲧟󲧳󲨇󲨛󲨯󲩃󲩗󲩫󲩿󲪓󲪧󲪻󲫏󲫣󲫷󲬋󲬟󲬳󲭇󲭛󲭯󲮃󲮗󲮫󲮿󲯓󲯧󲯻󲰏󲰣󲰷󲱋󲱟󲱳󲲇󲲛󲲯󲳃󲳗\",\n\t\t\t\"encodedString\": \"87KUm/OylK/zspWD87KVl/OylavzspW/87KWk/Oylqfzspa787KXj/Oyl6Pzspe387KYi/OymJ/zspiz87KZh/OymZvzspmv87Kag/Oympfzspqr87Kav/Oym5Pzspun87Kbu/OynI/zspyj87Kct/OynYvzsp2f87Kds/Oynofzsp6b87Ker/Oyn4Pzsp+X87Kfq/Oyn7/zsqCT87Kgp/OyoLvzsqGP87Kho/OyobfzsqKL87Kin/OyorPzsqOH87Kjm/Oyo6/zsqSD87Kkl/OypKvzsqS/87Klk/OypafzsqW787Kmj/OypqPzsqa387Kni/Oyp5/zsqez87Koh/OyqJvzsqiv87Kpg/OyqZfzsqmr87Kpv/OyqpPzsqqn87Kqu/Oyq4/zsquj87Krt/OyrIvzsqyf87Kss/OyrYfzsq2b87Ktr/OyroPzsq6X87Kuq/Oyrr/zsq+T87Kvp/Oyr7vzsrCP87Kwo/OysLfzsrGL87Kxn/OysbPzsrKH87Kym/Oysq/zsrOD87Kzlw==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"󲳫󲳿󲴓󲴧󲴻󲵏󲵣󲵷󲶋󲶟󲶳󲷇󲷛󲷯󲸃󲸗󲸫󲸿󲹓󲹧󲹻󲺏󲺣󲺷󲻋󲻟󲻳󲼇󲼛󲼯󲽃󲽗󲽫󲽿󲾓󲾧󲾻󲿏󲿣󲿷󳀋󳀟󳀳󳁇󳁛󳁯󳂃󳂗󳂫󳂿󳃓󳃧󳃻󳄏󳄣󳄷󳅋󳅟󳅳󳆇󳆛󳆯󳇃󳇗󳇫󳇿󳈓󳈧󳈻󳉏󳉣󳉷󳊋󳊟󳊳󳋇󳋛󳋯󳌃󳌗󳌫󳌿󳍓󳍧󳍻󳎏󳎣󳎷󳏋󳏟󳏳󳐇󳐛󳐯󳑃󳑗󳑫󳑿󳒓󳒧\",\n\t\t\t\"encodedString\": \"87Kzq/Oys7/zsrST87K0p/OytLvzsrWP87K1o/OytbfzsraL87K2n/OytrPzsreH87K3m/Oyt6/zsriD87K4l/OyuKvzsri/87K5k/Oyuafzsrm787K6j/OyuqPzsrq387K7i/Oyu5/zsruz87K8h/OyvJvzsryv87K9g/OyvZfzsr2r87K9v/OyvpPzsr6n87K+u/Oyv4/zsr+j87K/t/OzgIvzs4Cf87OAs/OzgYfzs4Gb87OBr/OzgoPzs4KX87OCq/Ozgr/zs4OT87ODp/Ozg7vzs4SP87OEo/OzhLfzs4WL87OFn/OzhbPzs4aH87OGm/Ozhq/zs4eD87OHl/Ozh6vzs4e/87OIk/OziKfzs4i787OJj/OziaPzs4m387OKi/Ozip/zs4qz87OLh/Ozi5vzs4uv87OMg/OzjJfzs4yr87OMv/OzjZPzs42n87ONu/Ozjo/zs46j87OOt/Ozj4vzs4+f87OPs/OzkIfzs5Cb87OQr/OzkYPzs5GX87ORq/Ozkb/zs5KT87OSpw==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"󳒻󳓏󳓣󳓷󳔋󳔟󳔳󳕇󳕛󳕯󳖃󳖗󳖫󳖿󳗓󳗧󳗻󳘏󳘣󳘷󳙋󳙟󳙳󳚇󳚛󳚯󳛃󳛗󳛫󳛿󳜓󳜧󳜻󳝏󳝣󳝷󳞋󳞟󳞳󳟇󳟛󳟯󳠃󳠗󳠫󳠿󳡓󳡧󳡻󳢏󳢣󳢷󳣋󳣟󳣳󳤇󳤛󳤯󳥃󳥗󳥫󳥿󳦓󳦧󳦻󳧏󳧣󳧷󳨋󳨟󳨳󳩇󳩛󳩯󳪃󳪗󳪫󳪿󳫓󳫧󳫻󳬏󳬣󳬷󳭋󳭟󳭳󳮇󳮛󳮯󳯃󳯗󳯫󳯿󳰓󳰧󳰻󳱏󳱣󳱷\",\n\t\t\t\"encodedString\": \"87OSu/Ozk4/zs5Oj87OTt/OzlIvzs5Sf87OUs/OzlYfzs5Wb87OVr/OzloPzs5aX87OWq/Ozlr/zs5eT87OXp/Ozl7vzs5iP87OYo/OzmLfzs5mL87OZn/OzmbPzs5qH87Oam/Ozmq/zs5uD87Obl/Ozm6vzs5u/87Ock/OznKfzs5y787Odj/OznaPzs52387Oei/Oznp/zs56z87Ofh/Ozn5vzs5+v87Ogg/OzoJfzs6Cr87Ogv/OzoZPzs6Gn87Ohu/Ozoo/zs6Kj87Oit/Ozo4vzs6Of87Ojs/OzpIfzs6Sb87Okr/OzpYPzs6WX87Olq/Ozpb/zs6aT87Omp/Ozprvzs6eP87Ono/Ozp7fzs6iL87Oon/OzqLPzs6mH87Opm/Ozqa/zs6qD87Oql/Ozqqvzs6q/87Ork/Ozq6fzs6u787Osj/OzrKPzs6y387Oti/OzrZ/zs62z87Ouh/Ozrpvzs66v87Ovg/Ozr5fzs6+r87Ovv/OzsJPzs7Cn87Owu/OzsY/zs7Gj87Oxtw==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"󳲋󳲟󳲳󳳇󳳛󳳯󳴃󳴗󳴫󳴿󳵓󳵧󳵻󳶏󳶣󳶷󳷋󳷟󳷳󳸇󳸛󳸯󳹃󳹗󳹫󳹿󳺓󳺧󳺻󳻏󳻣󳻷󳼋󳼟󳼳󳽇󳽛󳽯󳾃󳾗󳾫󳾿󳿓󳿧󳿻󴀏󴀣󴀷󴁋󴁟󴁳󴂇󴂛󴂯󴃃󴃗󴃫󴃿󴄓󴄧󴄻󴅏󴅣󴅷󴆋󴆟󴆳󴇇󴇛󴇯󴈃󴈗󴈫󴈿󴉓󴉧󴉻󴊏󴊣󴊷󴋋󴋟󴋳󴌇󴌛󴌯󴍃󴍗󴍫󴍿󴎓󴎧󴎻󴏏󴏣󴏷󴐋󴐟󴐳󴑇\",\n\t\t\t\"encodedString\": \"87Oyi/Ozsp/zs7Kz87Ozh/Ozs5vzs7Ov87O0g/OztJfzs7Sr87O0v/OztZPzs7Wn87O1u/Ozto/zs7aj87O2t/Ozt4vzs7ef87O3s/OzuIfzs7ib87O4r/OzuYPzs7mX87O5q/Ozub/zs7qT87O6p/Ozurvzs7uP87O7o/Ozu7fzs7yL87O8n/OzvLPzs72H87O9m/Ozva/zs76D87O+l/Ozvqvzs76/87O/k/Ozv6fzs7+787SAj/O0gKPztIC387SBi/O0gZ/ztIGz87SCh/O0gpvztIKv87SDg/O0g5fztIOr87SDv/O0hJPztISn87SEu/O0hY/ztIWj87SFt/O0hovztIaf87SGs/O0h4fztIeb87SHr/O0iIPztIiX87SIq/O0iL/ztImT87SJp/O0ibvztIqP87SKo/O0irfztIuL87SLn/O0i7PztIyH87SMm/O0jK/ztI2D87SNl/O0javztI2/87SOk/O0jqfztI6787SPj/O0j6PztI+387SQi/O0kJ/ztJCz87SRhw==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"󴑛󴑯󴒃󴒗󴒫󴒿󴓓󴓧󴓻󴔏󴔣󴔷󴕋󴕟󴕳󴖇󴖛󴖯󴗃󴗗󴗫󴗿󴘓󴘧󴘻󴙏󴙣󴙷󴚋󴚟󴚳󴛇󴛛󴛯󴜃󴜗󴜫󴜿󴝓󴝧󴝻󴞏󴞣󴞷󴟋󴟟󴟳󴠇󴠛󴠯󴡃󴡗󴡫󴡿󴢓󴢧󴢻󴣏󴣣󴣷󴤋󴤟󴤳󴥇󴥛󴥯󴦃󴦗󴦫󴦿󴧓󴧧󴧻󴨏󴨣󴨷󴩋󴩟󴩳󴪇󴪛󴪯󴫃󴫗󴫫󴫿󴬓󴬧󴬻󴭏󴭣󴭷󴮋󴮟󴮳󴯇󴯛󴯯󴰃󴰗\",\n\t\t\t\"encodedString\": \"87SRm/O0ka/ztJKD87SSl/O0kqvztJK/87STk/O0k6fztJO787SUj/O0lKPztJS387SVi/O0lZ/ztJWz87SWh/O0lpvztJav87SXg/O0l5fztJer87SXv/O0mJPztJin87SYu/O0mY/ztJmj87SZt/O0movztJqf87Sas/O0m4fztJub87Sbr/O0nIPztJyX87Scq/O0nL/ztJ2T87Sdp/O0nbvztJ6P87Seo/O0nrfztJ+L87Sfn/O0n7PztKCH87Sgm/O0oK/ztKGD87Shl/O0oavztKG/87Sik/O0oqfztKK787Sjj/O0o6PztKO387Ski/O0pJ/ztKSz87Slh/O0pZvztKWv87Smg/O0ppfztKar87Smv/O0p5PztKen87Snu/O0qI/ztKij87Sot/O0qYvztKmf87Sps/O0qofztKqb87Sqr/O0q4PztKuX87Srq/O0q7/ztKyT87Ssp/O0rLvztK2P87Sto/O0rbfztK6L87Sun/O0rrPztK+H87Svm/O0r6/ztLCD87Swlw==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"󴰫󴰿󴱓󴱧󴱻󴲏󴲣󴲷󴳋󴳟󴳳󴴇󴴛󴴯󴵃󴵗󴵫󴵿󴶓󴶧󴶻󴷏󴷣󴷷󴸋󴸟󴸳󴹇󴹛󴹯󴺃󴺗󴺫󴺿󴻓󴻧󴻻󴼏󴼣󴼷󴽋󴽟󴽳󴾇󴾛󴾯󴿃󴿗󴿫󴿿󵀓󵀧󵀻󵁏󵁣󵁷󵂋󵂟󵂳󵃇󵃛󵃯󵄃󵄗󵄫󵄿󵅓󵅧󵅻󵆏󵆣󵆷󵇋󵇟󵇳󵈇󵈛󵈯󵉃󵉗󵉫󵉿󵊓󵊧󵊻󵋏󵋣󵋷󵌋󵌟󵌳󵍇󵍛󵍯󵎃󵎗󵎫󵎿󵏓󵏧\",\n\t\t\t\"encodedString\": \"87Swq/O0sL/ztLGT87Sxp/O0sbvztLKP87Syo/O0srfztLOL87Szn/O0s7PztLSH87S0m/O0tK/ztLWD87S1l/O0tavztLW/87S2k/O0tqfztLa787S3j/O0t6PztLe387S4i/O0uJ/ztLiz87S5h/O0uZvztLmv87S6g/O0upfztLqr87S6v/O0u5PztLun87S7u/O0vI/ztLyj87S8t/O0vYvztL2f87S9s/O0vofztL6b87S+r/O0v4PztL+X87S/q/O0v7/ztYCT87WAp/O1gLvztYGP87WBo/O1gbfztYKL87WCn/O1grPztYOH87WDm/O1g6/ztYSD87WEl/O1hKvztYS/87WFk/O1hafztYW787WGj/O1hqPztYa387WHi/O1h5/ztYez87WIh/O1iJvztYiv87WJg/O1iZfztYmr87WJv/O1ipPztYqn87WKu/O1i4/ztYuj87WLt/O1jIvztYyf87WMs/O1jYfztY2b87WNr/O1joPztY6X87WOq/O1jr/ztY+T87WPpw==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"󵏻󵐏󵐣󵐷󵑋󵑟󵑳󵒇󵒛󵒯󵓃󵓗󵓫󵓿󵔓󵔧󵔻󵕏󵕣󵕷󵖋󵖟󵖳󵗇󵗛󵗯󵘃󵘗󵘫󵘿󵙓󵙧󵙻󵚏󵚣󵚷󵛋󵛟󵛳󵜇󵜛󵜯󵝃󵝗󵝫󵝿󵞓󵞧󵞻󵟏󵟣󵟷󵠋󵠟󵠳󵡇󵡛󵡯󵢃󵢗󵢫󵢿󵣓󵣧󵣻󵤏󵤣󵤷󵥋󵥟󵥳󵦇󵦛󵦯󵧃󵧗󵧫󵧿󵨓󵨧󵨻󵩏󵩣󵩷󵪋󵪟󵪳󵫇󵫛󵫯󵬃󵬗󵬫󵬿󵭓󵭧󵭻󵮏󵮣󵮷\",\n\t\t\t\"encodedString\": \"87WPu/O1kI/ztZCj87WQt/O1kYvztZGf87WRs/O1kofztZKb87WSr/O1k4PztZOX87WTq/O1k7/ztZST87WUp/O1lLvztZWP87WVo/O1lbfztZaL87WWn/O1lrPztZeH87WXm/O1l6/ztZiD87WYl/O1mKvztZi/87WZk/O1mafztZm787Waj/O1mqPztZq387Wbi/O1m5/ztZuz87Wch/O1nJvztZyv87Wdg/O1nZfztZ2r87Wdv/O1npPztZ6n87Weu/O1n4/ztZ+j87Wft/O1oIvztaCf87Wgs/O1oYfztaGb87Whr/O1ooPztaKX87Wiq/O1or/ztaOT87Wjp/O1o7vztaSP87Wko/O1pLfztaWL87Wln/O1pbPztaaH87Wmm/O1pq/ztaeD87Wnl/O1p6vztae/87Wok/O1qKfztai787Wpj/O1qaPztam387Wqi/O1qp/ztaqz87Wrh/O1q5vztauv87Wsg/O1rJfztayr87Wsv/O1rZPzta2n87Wtu/O1ro/zta6j87Wutw==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"󵯋󵯟󵯳󵰇󵰛󵰯󵱃󵱗󵱫󵱿󵲓󵲧󵲻󵳏󵳣󵳷󵴋󵴟󵴳󵵇󵵛󵵯󵶃󵶗󵶫󵶿󵷓󵷧󵷻󵸏󵸣󵸷󵹋󵹟󵹳󵺇󵺛󵺯󵻃󵻗󵻫󵻿󵼓󵼧󵼻󵽏󵽣󵽷󵾋󵾟󵾳󵿇󵿛󵿯󶀃󶀗󶀫󶀿󶁓󶁧󶁻󶂏󶂣󶂷󶃋󶃟󶃳󶄇󶄛󶄯󶅃󶅗󶅫󶅿󶆓󶆧󶆻󶇏󶇣󶇷󶈋󶈟󶈳󶉇󶉛󶉯󶊃󶊗󶊫󶊿󶋓󶋧󶋻󶌏󶌣󶌷󶍋󶍟󶍳󶎇\",\n\t\t\t\"encodedString\": \"87Wvi/O1r5/zta+z87Wwh/O1sJvztbCv87Wxg/O1sZfztbGr87Wxv/O1spPztbKn87Wyu/O1s4/ztbOj87Wzt/O1tIvztbSf87W0s/O1tYfztbWb87W1r/O1toPztbaX87W2q/O1tr/ztbeT87W3p/O1t7vztbiP87W4o/O1uLfztbmL87W5n/O1ubPztbqH87W6m/O1uq/ztbuD87W7l/O1u6vztbu/87W8k/O1vKfztby787W9j/O1vaPztb2387W+i/O1vp/ztb6z87W/h/O1v5vztb+v87aAg/O2gJfztoCr87aAv/O2gZPztoGn87aBu/O2go/ztoKj87aCt/O2g4vztoOf87aDs/O2hIfztoSb87aEr/O2hYPztoWX87aFq/O2hb/ztoaT87aGp/O2hrvztoeP87aHo/O2h7fztoiL87aIn/O2iLPztomH87aJm/O2ia/ztoqD87aKl/O2iqvztoq/87aLk/O2i6fztou787aMj/O2jKPztoy387aNi/O2jZ/zto2z87aOhw==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"󶎛󶎯󶏃󶏗󶏫󶏿󶐓󶐧󶐻󶑏󶑣󶑷󶒋󶒟󶒳󶓇󶓛󶓯󶔃󶔗󶔫󶔿󶕓󶕧󶕻󶖏󶖣󶖷󶗋󶗟󶗳󶘇󶘛󶘯󶙃󶙗󶙫󶙿󶚓󶚧󶚻󶛏󶛣󶛷󶜋󶜟󶜳󶝇󶝛󶝯󶞃󶞗󶞫󶞿󶟓󶟧󶟻󶠏󶠣󶠷󶡋󶡟󶡳󶢇󶢛󶢯󶣃󶣗󶣫󶣿󶤓󶤧󶤻󶥏󶥣󶥷󶦋󶦟󶦳󶧇󶧛󶧯󶨃󶨗󶨫󶨿󶩓󶩧󶩻󶪏󶪣󶪷󶫋󶫟󶫳󶬇󶬛󶬯󶭃󶭗\",\n\t\t\t\"encodedString\": \"87aOm/O2jq/zto+D87aPl/O2j6vzto+/87aQk/O2kKfztpC787aRj/O2kaPztpG387aSi/O2kp/ztpKz87aTh/O2k5vztpOv87aUg/O2lJfztpSr87aUv/O2lZPztpWn87aVu/O2lo/ztpaj87aWt/O2l4vztpef87aXs/O2mIfztpib87aYr/O2mYPztpmX87aZq/O2mb/ztpqT87aap/O2mrvztpuP87abo/O2m7fztpyL87acn/O2nLPztp2H87adm/O2na/ztp6D87ael/O2nqvztp6/87afk/O2n6fztp+787agj/O2oKPztqC387ahi/O2oZ/ztqGz87aih/O2opvztqKv87ajg/O2o5fztqOr87ajv/O2pJPztqSn87aku/O2pY/ztqWj87alt/O2povztqaf87ams/O2p4fztqeb87anr/O2qIPztqiX87aoq/O2qL/ztqmT87app/O2qbvztqqP87aqo/O2qrfztquL87arn/O2q7PztqyH87asm/O2rK/ztq2D87atlw==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"󶭫󶭿󶮓󶮧󶮻󶯏󶯣󶯷󶰋󶰟󶰳󶱇󶱛󶱯󶲃󶲗󶲫󶲿󶳓󶳧󶳻󶴏󶴣󶴷󶵋󶵟󶵳󶶇󶶛󶶯󶷃󶷗󶷫󶷿󶸓󶸧󶸻󶹏󶹣󶹷󶺋󶺟󶺳󶻇󶻛󶻯󶼃󶼗󶼫󶼿󶽓󶽧󶽻󶾏󶾣󶾷󶿋󶿟󶿳󷀇󷀛󷀯󷁃󷁗󷁫󷁿󷂓󷂧󷂻󷃏󷃣󷃷󷄋󷄟󷄳󷅇󷅛󷅯󷆃󷆗󷆫󷆿󷇓󷇧󷇻󷈏󷈣󷈷󷉋󷉟󷉳󷊇󷊛󷊯󷋃󷋗󷋫󷋿󷌓󷌧\",\n\t\t\t\"encodedString\": \"87atq/O2rb/ztq6T87aup/O2rrvztq+P87avo/O2r7fztrCL87awn/O2sLPztrGH87axm/O2sa/ztrKD87ayl/O2sqvztrK/87azk/O2s6fztrO787a0j/O2tKPztrS387a1i/O2tZ/ztrWz87a2h/O2tpvztrav87a3g/O2t5fztrer87a3v/O2uJPztrin87a4u/O2uY/ztrmj87a5t/O2uovztrqf87a6s/O2u4fztrub87a7r/O2vIPztryX87a8q/O2vL/ztr2T87a9p/O2vbvztr6P87a+o/O2vrfztr+L87a/n/O2v7Pzt4CH87eAm/O3gK/zt4GD87eBl/O3gavzt4G/87eCk/O3gqfzt4K787eDj/O3g6Pzt4O387eEi/O3hJ/zt4Sz87eFh/O3hZvzt4Wv87eGg/O3hpfzt4ar87eGv/O3h5Pzt4en87eHu/O3iI/zt4ij87eIt/O3iYvzt4mf87eJs/O3iofzt4qb87eKr/O3i4Pzt4uX87eLq/O3i7/zt4yT87eMpw==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"󷌻󷍏󷍣󷍷󷎋󷎟󷎳󷏇󷏛󷏯󷐃󷐗󷐫󷐿󷑓󷑧󷑻󷒏󷒣󷒷󷓋󷓟󷓳󷔇󷔛󷔯󷕃󷕗󷕫󷕿󷖓󷖧󷖻󷗏󷗣󷗷󷘋󷘟󷘳󷙇󷙛󷙯󷚃󷚗󷚫󷚿󷛓󷛧󷛻󷜏󷜣󷜷󷝋󷝟󷝳󷞇󷞛󷞯󷟃󷟗󷟫󷟿󷠓󷠧󷠻󷡏󷡣󷡷󷢋󷢟󷢳󷣇󷣛󷣯󷤃󷤗󷤫󷤿󷥓󷥧󷥻󷦏󷦣󷦷󷧋󷧟󷧳󷨇󷨛󷨯󷩃󷩗󷩫󷩿󷪓󷪧󷪻󷫏󷫣󷫷\",\n\t\t\t\"encodedString\": \"87eMu/O3jY/zt42j87eNt/O3jovzt46f87eOs/O3j4fzt4+b87ePr/O3kIPzt5CX87eQq/O3kL/zt5GT87eRp/O3kbvzt5KP87eSo/O3krfzt5OL87eTn/O3k7Pzt5SH87eUm/O3lK/zt5WD87eVl/O3lavzt5W/87eWk/O3lqfzt5a787eXj/O3l6Pzt5e387eYi/O3mJ/zt5iz87eZh/O3mZvzt5mv87eag/O3mpfzt5qr87eav/O3m5Pzt5un87ebu/O3nI/zt5yj87ect/O3nYvzt52f87eds/O3nofzt56b87eer/O3n4Pzt5+X87efq/O3n7/zt6CT87egp/O3oLvzt6GP87eho/O3obfzt6KL87ein/O3orPzt6OH87ejm/O3o6/zt6SD87ekl/O3pKvzt6S/87elk/O3pafzt6W787emj/O3pqPzt6a387eni/O3p5/zt6ez87eoh/O3qJvzt6iv87epg/O3qZfzt6mr87epv/O3qpPzt6qn87equ/O3q4/zt6uj87ertw==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"󷬋󷬟󷬳󷭇󷭛󷭯󷮃󷮗󷮫󷮿󷯓󷯧󷯻󷰏󷰣󷰷󷱋󷱟󷱳󷲇󷲛󷲯󷳃󷳗󷳫󷳿󷴓󷴧󷴻󷵏󷵣󷵷󷶋󷶟󷶳󷷇󷷛󷷯󷸃󷸗󷸫󷸿󷹓󷹧󷹻󷺏󷺣󷺷󷻋󷻟󷻳󷼇󷼛󷼯󷽃󷽗󷽫󷽿󷾓󷾧󷾻󷿏󷿣󷿷󸀋󸀟󸀳󸁇󸁛󸁯󸂃󸂗󸂫󸂿󸃓󸃧󸃻󸄏󸄣󸄷󸅋󸅟󸅳󸆇󸆛󸆯󸇃󸇗󸇫󸇿󸈓󸈧󸈻󸉏󸉣󸉷󸊋󸊟󸊳󸋇\",\n\t\t\t\"encodedString\": \"87esi/O3rJ/zt6yz87eth/O3rZvzt62v87eug/O3rpfzt66r87euv/O3r5Pzt6+n87evu/O3sI/zt7Cj87ewt/O3sYvzt7Gf87exs/O3sofzt7Kb87eyr/O3s4Pzt7OX87ezq/O3s7/zt7ST87e0p/O3tLvzt7WP87e1o/O3tbfzt7aL87e2n/O3trPzt7eH87e3m/O3t6/zt7iD87e4l/O3uKvzt7i/87e5k/O3uafzt7m787e6j/O3uqPzt7q387e7i/O3u5/zt7uz87e8h/O3vJvzt7yv87e9g/O3vZfzt72r87e9v/O3vpPzt76n87e+u/O3v4/zt7+j87e/t/O4gIvzuICf87iAs/O4gYfzuIGb87iBr/O4goPzuIKX87iCq/O4gr/zuIOT87iDp/O4g7vzuISP87iEo/O4hLfzuIWL87iFn/O4hbPzuIaH87iGm/O4hq/zuIeD87iHl/O4h6vzuIe/87iIk/O4iKfzuIi787iJj/O4iaPzuIm387iKi/O4ip/zuIqz87iLhw==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"󸋛󸋯󸌃󸌗󸌫󸌿󸍓󸍧󸍻󸎏󸎣󸎷󸏋󸏟󸏳󸐇󸐛󸐯󸑃󸑗󸑫󸑿󸒓󸒧󸒻󸓏󸓣󸓷󸔋󸔟󸔳󸕇󸕛󸕯󸖃󸖗󸖫󸖿󸗓󸗧󸗻󸘏󸘣󸘷󸙋󸙟󸙳󸚇󸚛󸚯󸛃󸛗󸛫󸛿󸜓󸜧󸜻󸝏󸝣󸝷󸞋󸞟󸞳󸟇󸟛󸟯󸠃󸠗󸠫󸠿󸡓󸡧󸡻󸢏󸢣󸢷󸣋󸣟󸣳󸤇󸤛󸤯󸥃󸥗󸥫󸥿󸦓󸦧󸦻󸧏󸧣󸧷󸨋󸨟󸨳󸩇󸩛󸩯󸪃󸪗\",\n\t\t\t\"encodedString\": \"87iLm/O4i6/zuIyD87iMl/O4jKvzuIy/87iNk/O4jafzuI2787iOj/O4jqPzuI6387iPi/O4j5/zuI+z87iQh/O4kJvzuJCv87iRg/O4kZfzuJGr87iRv/O4kpPzuJKn87iSu/O4k4/zuJOj87iTt/O4lIvzuJSf87iUs/O4lYfzuJWb87iVr/O4loPzuJaX87iWq/O4lr/zuJeT87iXp/O4l7vzuJiP87iYo/O4mLfzuJmL87iZn/O4mbPzuJqH87iam/O4mq/zuJuD87ibl/O4m6vzuJu/87ick/O4nKfzuJy787idj/O4naPzuJ2387iei/O4np/zuJ6z87ifh/O4n5vzuJ+v87igg/O4oJfzuKCr87igv/O4oZPzuKGn87ihu/O4oo/zuKKj87iit/O4o4vzuKOf87ijs/O4pIfzuKSb87ikr/O4pYPzuKWX87ilq/O4pb/zuKaT87imp/O4prvzuKeP87ino/O4p7fzuKiL87ion/O4qLPzuKmH87ipm/O4qa/zuKqD87iqlw==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"󸪫󸪿󸫓󸫧󸫻󸬏󸬣󸬷󸭋󸭟󸭳󸮇󸮛󸮯󸯃󸯗󸯫󸯿󸰓󸰧󸰻󸱏󸱣󸱷󸲋󸲟󸲳󸳇󸳛󸳯󸴃󸴗󸴫󸴿󸵓󸵧󸵻󸶏󸶣󸶷󸷋󸷟󸷳󸸇󸸛󸸯󸹃󸹗󸹫󸹿󸺓󸺧󸺻󸻏󸻣󸻷󸼋󸼟󸼳󸽇󸽛󸽯󸾃󸾗󸾫󸾿󸿓󸿧󸿻󹀏󹀣󹀷󹁋󹁟󹁳󹂇󹂛󹂯󹃃󹃗󹃫󹃿󹄓󹄧󹄻󹅏󹅣󹅷󹆋󹆟󹆳󹇇󹇛󹇯󹈃󹈗󹈫󹈿󹉓󹉧\",\n\t\t\t\"encodedString\": \"87iqq/O4qr/zuKuT87irp/O4q7vzuKyP87iso/O4rLfzuK2L87itn/O4rbPzuK6H87ium/O4rq/zuK+D87ivl/O4r6vzuK+/87iwk/O4sKfzuLC787ixj/O4saPzuLG387iyi/O4sp/zuLKz87izh/O4s5vzuLOv87i0g/O4tJfzuLSr87i0v/O4tZPzuLWn87i1u/O4to/zuLaj87i2t/O4t4vzuLef87i3s/O4uIfzuLib87i4r/O4uYPzuLmX87i5q/O4ub/zuLqT87i6p/O4urvzuLuP87i7o/O4u7fzuLyL87i8n/O4vLPzuL2H87i9m/O4va/zuL6D87i+l/O4vqvzuL6/87i/k/O4v6fzuL+787mAj/O5gKPzuYC387mBi/O5gZ/zuYGz87mCh/O5gpvzuYKv87mDg/O5g5fzuYOr87mDv/O5hJPzuYSn87mEu/O5hY/zuYWj87mFt/O5hovzuYaf87mGs/O5h4fzuYeb87mHr/O5iIPzuYiX87mIq/O5iL/zuYmT87mJpw==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"󹉻󹊏󹊣󹊷󹋋󹋟󹋳󹌇󹌛󹌯󹍃󹍗󹍫󹍿󹎓󹎧󹎻󹏏󹏣󹏷󹐋󹐟󹐳󹑇󹑛󹑯󹒃󹒗󹒫󹒿󹓓󹓧󹓻󹔏󹔣󹔷󹕋󹕟󹕳󹖇󹖛󹖯󹗃󹗗󹗫󹗿󹘓󹘧󹘻󹙏󹙣󹙷󹚋󹚟󹚳󹛇󹛛󹛯󹜃󹜗󹜫󹜿󹝓󹝧󹝻󹞏󹞣󹞷󹟋󹟟󹟳󹠇󹠛󹠯󹡃󹡗󹡫󹡿󹢓󹢧󹢻󹣏󹣣󹣷󹤋󹤟󹤳󹥇󹥛󹥯󹦃󹦗󹦫󹦿󹧓󹧧󹧻󹨏󹨣󹨷\",\n\t\t\t\"encodedString\": \"87mJu/O5io/zuYqj87mKt/O5i4vzuYuf87mLs/O5jIfzuYyb87mMr/O5jYPzuY2X87mNq/O5jb/zuY6T87mOp/O5jrvzuY+P87mPo/O5j7fzuZCL87mQn/O5kLPzuZGH87mRm/O5ka/zuZKD87mSl/O5kqvzuZK/87mTk/O5k6fzuZO787mUj/O5lKPzuZS387mVi/O5lZ/zuZWz87mWh/O5lpvzuZav87mXg/O5l5fzuZer87mXv/O5mJPzuZin87mYu/O5mY/zuZmj87mZt/O5movzuZqf87mas/O5m4fzuZub87mbr/O5nIPzuZyX87mcq/O5nL/zuZ2T87mdp/O5nbvzuZ6P87meo/O5nrfzuZ+L87mfn/O5n7PzuaCH87mgm/O5oK/zuaGD87mhl/O5oavzuaG/87mik/O5oqfzuaK787mjj/O5o6PzuaO387mki/O5pJ/zuaSz87mlh/O5pZvzuaWv87mmg/O5ppfzuaar87mmv/O5p5Pzuaen87mnu/O5qI/zuaij87motw==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"󹩋󹩟󹩳󹪇󹪛󹪯󹫃󹫗󹫫󹫿󹬓󹬧󹬻󹭏󹭣󹭷󹮋󹮟󹮳󹯇󹯛󹯯󹰃󹰗󹰫󹰿󹱓󹱧󹱻󹲏󹲣󹲷󹳋󹳟󹳳󹴇󹴛󹴯󹵃󹵗󹵫󹵿󹶓󹶧󹶻󹷏󹷣󹷷󹸋󹸟󹸳󹹇󹹛󹹯󹺃󹺗󹺫󹺿󹻓󹻧󹻻󹼏󹼣󹼷󹽋󹽟󹽳󹾇󹾛󹾯󹿃󹿗󹿫󹿿󺀓󺀧󺀻󺁏󺁣󺁷󺂋󺂟󺂳󺃇󺃛󺃯󺄃󺄗󺄫󺄿󺅓󺅧󺅻󺆏󺆣󺆷󺇋󺇟󺇳󺈇\",\n\t\t\t\"encodedString\": \"87mpi/O5qZ/zuamz87mqh/O5qpvzuaqv87mrg/O5q5fzuaur87mrv/O5rJPzuayn87msu/O5rY/zua2j87mtt/O5rovzua6f87mus/O5r4fzua+b87mvr/O5sIPzubCX87mwq/O5sL/zubGT87mxp/O5sbvzubKP87myo/O5srfzubOL87mzn/O5s7PzubSH87m0m/O5tK/zubWD87m1l/O5tavzubW/87m2k/O5tqfzuba787m3j/O5t6Pzube387m4i/O5uJ/zubiz87m5h/O5uZvzubmv87m6g/O5upfzubqr87m6v/O5u5Pzubun87m7u/O5vI/zubyj87m8t/O5vYvzub2f87m9s/O5vofzub6b87m+r/O5v4Pzub+X87m/q/O5v7/zuoCT87qAp/O6gLvzuoGP87qBo/O6gbfzuoKL87qCn/O6grPzuoOH87qDm/O6g6/zuoSD87qEl/O6hKvzuoS/87qFk/O6hafzuoW787qGj/O6hqPzuoa387qHi/O6h5/zuoez87qIhw==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"󺈛󺈯󺉃󺉗󺉫󺉿󺊓󺊧󺊻󺋏󺋣󺋷󺌋󺌟󺌳󺍇󺍛󺍯󺎃󺎗󺎫󺎿󺏓󺏧󺏻󺐏󺐣󺐷󺑋󺑟󺑳󺒇󺒛󺒯󺓃󺓗󺓫󺓿󺔓󺔧󺔻󺕏󺕣󺕷󺖋󺖟󺖳󺗇󺗛󺗯󺘃󺘗󺘫󺘿󺙓󺙧󺙻󺚏󺚣󺚷󺛋󺛟󺛳󺜇󺜛󺜯󺝃󺝗󺝫󺝿󺞓󺞧󺞻󺟏󺟣󺟷󺠋󺠟󺠳󺡇󺡛󺡯󺢃󺢗󺢫󺢿󺣓󺣧󺣻󺤏󺤣󺤷󺥋󺥟󺥳󺦇󺦛󺦯󺧃󺧗\",\n\t\t\t\"encodedString\": \"87qIm/O6iK/zuomD87qJl/O6iavzuom/87qKk/O6iqfzuoq787qLj/O6i6Pzuou387qMi/O6jJ/zuoyz87qNh/O6jZvzuo2v87qOg/O6jpfzuo6r87qOv/O6j5Pzuo+n87qPu/O6kI/zupCj87qQt/O6kYvzupGf87qRs/O6kofzupKb87qSr/O6k4PzupOX87qTq/O6k7/zupST87qUp/O6lLvzupWP87qVo/O6lbfzupaL87qWn/O6lrPzupeH87qXm/O6l6/zupiD87qYl/O6mKvzupi/87qZk/O6mafzupm787qaj/O6mqPzupq387qbi/O6m5/zupuz87qch/O6nJvzupyv87qdg/O6nZfzup2r87qdv/O6npPzup6n87qeu/O6n4/zup+j87qft/O6oIvzuqCf87qgs/O6oYfzuqGb87qhr/O6ooPzuqKX87qiq/O6or/zuqOT87qjp/O6o7vzuqSP87qko/O6pLfzuqWL87qln/O6pbPzuqaH87qmm/O6pq/zuqeD87qnlw==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"󺧫󺧿󺨓󺨧󺨻󺩏󺩣󺩷󺪋󺪟󺪳󺫇󺫛󺫯󺬃󺬗󺬫󺬿󺭓󺭧󺭻󺮏󺮣󺮷󺯋󺯟󺯳󺰇󺰛󺰯󺱃󺱗󺱫󺱿󺲓󺲧󺲻󺳏󺳣󺳷󺴋󺴟󺴳󺵇󺵛󺵯󺶃󺶗󺶫󺶿󺷓󺷧󺷻󺸏󺸣󺸷󺹋󺹟󺹳󺺇󺺛󺺯󺻃󺻗󺻫󺻿󺼓󺼧󺼻󺽏󺽣󺽷󺾋󺾟󺾳󺿇󺿛󺿯󻀃󻀗󻀫󻀿󻁓󻁧󻁻󻂏󻂣󻂷󻃋󻃟󻃳󻄇󻄛󻄯󻅃󻅗󻅫󻅿󻆓󻆧\",\n\t\t\t\"encodedString\": \"87qnq/O6p7/zuqiT87qop/O6qLvzuqmP87qpo/O6qbfzuqqL87qqn/O6qrPzuquH87qrm/O6q6/zuqyD87qsl/O6rKvzuqy/87qtk/O6rafzuq2787quj/O6rqPzuq6387qvi/O6r5/zuq+z87qwh/O6sJvzurCv87qxg/O6sZfzurGr87qxv/O6spPzurKn87qyu/O6s4/zurOj87qzt/O6tIvzurSf87q0s/O6tYfzurWb87q1r/O6toPzuraX87q2q/O6tr/zureT87q3p/O6t7vzuriP87q4o/O6uLfzurmL87q5n/O6ubPzurqH87q6m/O6uq/zuruD87q7l/O6u6vzuru/87q8k/O6vKfzury787q9j/O6vaPzur2387q+i/O6vp/zur6z87q/h/O6v5vzur+v87uAg/O7gJfzu4Cr87uAv/O7gZPzu4Gn87uBu/O7go/zu4Kj87uCt/O7g4vzu4Of87uDs/O7hIfzu4Sb87uEr/O7hYPzu4WX87uFq/O7hb/zu4aT87uGpw==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"󻆻󻇏󻇣󻇷󻈋󻈟󻈳󻉇󻉛󻉯󻊃󻊗󻊫󻊿󻋓󻋧󻋻󻌏󻌣󻌷󻍋󻍟󻍳󻎇󻎛󻎯󻏃󻏗󻏫󻏿󻐓󻐧󻐻󻑏󻑣󻑷󻒋󻒟󻒳󻓇󻓛󻓯󻔃󻔗󻔫󻔿󻕓󻕧󻕻󻖏󻖣󻖷󻗋󻗟󻗳󻘇󻘛󻘯󻙃󻙗󻙫󻙿󻚓󻚧󻚻󻛏󻛣󻛷󻜋󻜟󻜳󻝇󻝛󻝯󻞃󻞗󻞫󻞿󻟓󻟧󻟻󻠏󻠣󻠷󻡋󻡟󻡳󻢇󻢛󻢯󻣃󻣗󻣫󻣿󻤓󻤧󻤻󻥏󻥣󻥷\",\n\t\t\t\"encodedString\": \"87uGu/O7h4/zu4ej87uHt/O7iIvzu4if87uIs/O7iYfzu4mb87uJr/O7ioPzu4qX87uKq/O7ir/zu4uT87uLp/O7i7vzu4yP87uMo/O7jLfzu42L87uNn/O7jbPzu46H87uOm/O7jq/zu4+D87uPl/O7j6vzu4+/87uQk/O7kKfzu5C787uRj/O7kaPzu5G387uSi/O7kp/zu5Kz87uTh/O7k5vzu5Ov87uUg/O7lJfzu5Sr87uUv/O7lZPzu5Wn87uVu/O7lo/zu5aj87uWt/O7l4vzu5ef87uXs/O7mIfzu5ib87uYr/O7mYPzu5mX87uZq/O7mb/zu5qT87uap/O7mrvzu5uP87ubo/O7m7fzu5yL87ucn/O7nLPzu52H87udm/O7na/zu56D87uel/O7nqvzu56/87ufk/O7n6fzu5+787ugj/O7oKPzu6C387uhi/O7oZ/zu6Gz87uih/O7opvzu6Kv87ujg/O7o5fzu6Or87ujv/O7pJPzu6Sn87uku/O7pY/zu6Wj87ultw==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"󻦋󻦟󻦳󻧇󻧛󻧯󻨃󻨗󻨫󻨿󻩓󻩧󻩻󻪏󻪣󻪷󻫋󻫟󻫳󻬇󻬛󻬯󻭃󻭗󻭫󻭿󻮓󻮧󻮻󻯏󻯣󻯷󻰋󻰟󻰳󻱇󻱛󻱯󻲃󻲗󻲫󻲿󻳓󻳧󻳻󻴏󻴣󻴷󻵋󻵟󻵳󻶇󻶛󻶯󻷃󻷗󻷫󻷿󻸓󻸧󻸻󻹏󻹣󻹷󻺋󻺟󻺳󻻇󻻛󻻯󻼃󻼗󻼫󻼿󻽓󻽧󻽻󻾏󻾣󻾷󻿋󻿟󻿳󼀇󼀛󼀯󼁃󼁗󼁫󼁿󼂓󼂧󼂻󼃏󼃣󼃷󼄋󼄟󼄳󼅇\",\n\t\t\t\"encodedString\": \"87umi/O7pp/zu6az87unh/O7p5vzu6ev87uog/O7qJfzu6ir87uov/O7qZPzu6mn87upu/O7qo/zu6qj87uqt/O7q4vzu6uf87urs/O7rIfzu6yb87usr/O7rYPzu62X87utq/O7rb/zu66T87uup/O7rrvzu6+P87uvo/O7r7fzu7CL87uwn/O7sLPzu7GH87uxm/O7sa/zu7KD87uyl/O7sqvzu7K/87uzk/O7s6fzu7O787u0j/O7tKPzu7S387u1i/O7tZ/zu7Wz87u2h/O7tpvzu7av87u3g/O7t5fzu7er87u3v/O7uJPzu7in87u4u/O7uY/zu7mj87u5t/O7uovzu7qf87u6s/O7u4fzu7ub87u7r/O7vIPzu7yX87u8q/O7vL/zu72T87u9p/O7vbvzu76P87u+o/O7vrfzu7+L87u/n/O7v7PzvICH87yAm/O8gK/zvIGD87yBl/O8gavzvIG/87yCk/O8gqfzvIK787yDj/O8g6PzvIO387yEi/O8hJ/zvISz87yFhw==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"󼅛󼅯󼆃󼆗󼆫󼆿󼇓󼇧󼇻󼈏󼈣󼈷󼉋󼉟󼉳󼊇󼊛󼊯󼋃󼋗󼋫󼋿󼌓󼌧󼌻󼍏󼍣󼍷󼎋󼎟󼎳󼏇󼏛󼏯󼐃󼐗󼐫󼐿󼑓󼑧󼑻󼒏󼒣󼒷󼓋󼓟󼓳󼔇󼔛󼔯󼕃󼕗󼕫󼕿󼖓󼖧󼖻󼗏󼗣󼗷󼘋󼘟󼘳󼙇󼙛󼙯󼚃󼚗󼚫󼚿󼛓󼛧󼛻󼜏󼜣󼜷󼝋󼝟󼝳󼞇󼞛󼞯󼟃󼟗󼟫󼟿󼠓󼠧󼠻󼡏󼡣󼡷󼢋󼢟󼢳󼣇󼣛󼣯󼤃󼤗\",\n\t\t\t\"encodedString\": \"87yFm/O8ha/zvIaD87yGl/O8hqvzvIa/87yHk/O8h6fzvIe787yIj/O8iKPzvIi387yJi/O8iZ/zvImz87yKh/O8ipvzvIqv87yLg/O8i5fzvIur87yLv/O8jJPzvIyn87yMu/O8jY/zvI2j87yNt/O8jovzvI6f87yOs/O8j4fzvI+b87yPr/O8kIPzvJCX87yQq/O8kL/zvJGT87yRp/O8kbvzvJKP87ySo/O8krfzvJOL87yTn/O8k7PzvJSH87yUm/O8lK/zvJWD87yVl/O8lavzvJW/87yWk/O8lqfzvJa787yXj/O8l6PzvJe387yYi/O8mJ/zvJiz87yZh/O8mZvzvJmv87yag/O8mpfzvJqr87yav/O8m5PzvJun87ybu/O8nI/zvJyj87yct/O8nYvzvJ2f87yds/O8nofzvJ6b87yer/O8n4PzvJ+X87yfq/O8n7/zvKCT87ygp/O8oLvzvKGP87yho/O8obfzvKKL87yin/O8orPzvKOH87yjm/O8o6/zvKSD87yklw==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"󼤫󼤿󼥓󼥧󼥻󼦏󼦣󼦷󼧋󼧟󼧳󼨇󼨛󼨯󼩃󼩗󼩫󼩿󼪓󼪧󼪻󼫏󼫣󼫷󼬋󼬟󼬳󼭇󼭛󼭯󼮃󼮗󼮫󼮿󼯓󼯧󼯻󼰏󼰣󼰷󼱋󼱟󼱳󼲇󼲛󼲯󼳃󼳗󼳫󼳿󼴓󼴧󼴻󼵏󼵣󼵷󼶋󼶟󼶳󼷇󼷛󼷯󼸃󼸗󼸫󼸿󼹓󼹧󼹻󼺏󼺣󼺷󼻋󼻟󼻳󼼇󼼛󼼯󼽃󼽗󼽫󼽿󼾓󼾧󼾻󼿏󼿣󼿷󽀋󽀟󽀳󽁇󽁛󽁯󽂃󽂗󽂫󽂿󽃓󽃧\",\n\t\t\t\"encodedString\": \"87ykq/O8pL/zvKWT87ylp/O8pbvzvKaP87ymo/O8prfzvKeL87ynn/O8p7PzvKiH87yom/O8qK/zvKmD87ypl/O8qavzvKm/87yqk/O8qqfzvKq787yrj/O8q6PzvKu387ysi/O8rJ/zvKyz87yth/O8rZvzvK2v87yug/O8rpfzvK6r87yuv/O8r5PzvK+n87yvu/O8sI/zvLCj87ywt/O8sYvzvLGf87yxs/O8sofzvLKb87yyr/O8s4PzvLOX87yzq/O8s7/zvLST87y0p/O8tLvzvLWP87y1o/O8tbfzvLaL87y2n/O8trPzvLeH87y3m/O8t6/zvLiD87y4l/O8uKvzvLi/87y5k/O8uafzvLm787y6j/O8uqPzvLq387y7i/O8u5/zvLuz87y8h/O8vJvzvLyv87y9g/O8vZfzvL2r87y9v/O8vpPzvL6n87y+u/O8v4/zvL+j87y/t/O9gIvzvYCf872As/O9gYfzvYGb872Br/O9goPzvYKX872Cq/O9gr/zvYOT872Dpw==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"󽃻󽄏󽄣󽄷󽅋󽅟󽅳󽆇󽆛󽆯󽇃󽇗󽇫󽇿󽈓󽈧󽈻󽉏󽉣󽉷󽊋󽊟󽊳󽋇󽋛󽋯󽌃󽌗󽌫󽌿󽍓󽍧󽍻󽎏󽎣󽎷󽏋󽏟󽏳󽐇󽐛󽐯󽑃󽑗󽑫󽑿󽒓󽒧󽒻󽓏󽓣󽓷󽔋󽔟󽔳󽕇󽕛󽕯󽖃󽖗󽖫󽖿󽗓󽗧󽗻󽘏󽘣󽘷󽙋󽙟󽙳󽚇󽚛󽚯󽛃󽛗󽛫󽛿󽜓󽜧󽜻󽝏󽝣󽝷󽞋󽞟󽞳󽟇󽟛󽟯󽠃󽠗󽠫󽠿󽡓󽡧󽡻󽢏󽢣󽢷\",\n\t\t\t\"encodedString\": \"872Du/O9hI/zvYSj872Et/O9hYvzvYWf872Fs/O9hofzvYab872Gr/O9h4PzvYeX872Hq/O9h7/zvYiT872Ip/O9iLvzvYmP872Jo/O9ibfzvYqL872Kn/O9irPzvYuH872Lm/O9i6/zvYyD872Ml/O9jKvzvYy/872Nk/O9jafzvY27872Oj/O9jqPzvY63872Pi/O9j5/zvY+z872Qh/O9kJvzvZCv872Rg/O9kZfzvZGr872Rv/O9kpPzvZKn872Su/O9k4/zvZOj872Tt/O9lIvzvZSf872Us/O9lYfzvZWb872Vr/O9loPzvZaX872Wq/O9lr/zvZeT872Xp/O9l7vzvZiP872Yo/O9mLfzvZmL872Zn/O9mbPzvZqH872am/O9mq/zvZuD872bl/O9m6vzvZu/872ck/O9nKfzvZy7872dj/O9naPzvZ23872ei/O9np/zvZ6z872fh/O9n5vzvZ+v872gg/O9oJfzvaCr872gv/O9oZPzvaGn872hu/O9oo/zvaKj872itw==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"󽣋󽣟󽣳󽤇󽤛󽤯󽥃󽥗󽥫󽥿󽦓󽦧󽦻󽧏󽧣󽧷󽨋󽨟󽨳󽩇󽩛󽩯󽪃󽪗󽪫󽪿󽫓󽫧󽫻󽬏󽬣󽬷󽭋󽭟󽭳󽮇󽮛󽮯󽯃󽯗󽯫󽯿󽰓󽰧󽰻󽱏󽱣󽱷󽲋󽲟󽲳󽳇󽳛󽳯󽴃󽴗󽴫󽴿󽵓󽵧󽵻󽶏󽶣󽶷󽷋󽷟󽷳󽸇󽸛󽸯󽹃󽹗󽹫󽹿󽺓󽺧󽺻󽻏󽻣󽻷󽼋󽼟󽼳󽽇󽽛󽽯󽾃󽾗󽾫󽾿󽿓󽿧󽿻󾀏󾀣󾀷󾁋󾁟󾁳󾂇\",\n\t\t\t\"encodedString\": \"872ji/O9o5/zvaOz872kh/O9pJvzvaSv872lg/O9pZfzvaWr872lv/O9ppPzvaan872mu/O9p4/zvaej872nt/O9qIvzvaif872os/O9qYfzvamb872pr/O9qoPzvaqX872qq/O9qr/zvauT872rp/O9q7vzvayP872so/O9rLfzva2L872tn/O9rbPzva6H872um/O9rq/zva+D872vl/O9r6vzva+/872wk/O9sKfzvbC7872xj/O9saPzvbG3872yi/O9sp/zvbKz872zh/O9s5vzvbOv8720g/O9tJfzvbSr8720v/O9tZPzvbWn8721u/O9to/zvbaj8722t/O9t4vzvbef8723s/O9uIfzvbib8724r/O9uYPzvbmX8725q/O9ub/zvbqT8726p/O9urvzvbuP8727o/O9u7fzvbyL8728n/O9vLPzvb2H8729m/O9va/zvb6D872+l/O9vqvzvb6/872/k/O9v6fzvb+7876Aj/O+gKPzvoC3876Bi/O+gZ/zvoGz876Chw==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"󾂛󾂯󾃃󾃗󾃫󾃿󾄓󾄧󾄻󾅏󾅣󾅷󾆋󾆟󾆳󾇇󾇛󾇯󾈃󾈗󾈫󾈿󾉓󾉧󾉻󾊏󾊣󾊷󾋋󾋟󾋳󾌇󾌛󾌯󾍃󾍗󾍫󾍿󾎓󾎧󾎻󾏏󾏣󾏷󾐋󾐟󾐳󾑇󾑛󾑯󾒃󾒗󾒫󾒿󾓓󾓧󾓻󾔏󾔣󾔷󾕋󾕟󾕳󾖇󾖛󾖯󾗃󾗗󾗫󾗿󾘓󾘧󾘻󾙏󾙣󾙷󾚋󾚟󾚳󾛇󾛛󾛯󾜃󾜗󾜫󾜿󾝓󾝧󾝻󾞏󾞣󾞷󾟋󾟟󾟳󾠇󾠛󾠯󾡃󾡗\",\n\t\t\t\"encodedString\": \"876Cm/O+gq/zvoOD876Dl/O+g6vzvoO/876Ek/O+hKfzvoS7876Fj/O+haPzvoW3876Gi/O+hp/zvoaz876Hh/O+h5vzvoev876Ig/O+iJfzvoir876Iv/O+iZPzvomn876Ju/O+io/zvoqj876Kt/O+i4vzvouf876Ls/O+jIfzvoyb876Mr/O+jYPzvo2X876Nq/O+jb/zvo6T876Op/O+jrvzvo+P876Po/O+j7fzvpCL876Qn/O+kLPzvpGH876Rm/O+ka/zvpKD876Sl/O+kqvzvpK/876Tk/O+k6fzvpO7876Uj/O+lKPzvpS3876Vi/O+lZ/zvpWz876Wh/O+lpvzvpav876Xg/O+l5fzvper876Xv/O+mJPzvpin876Yu/O+mY/zvpmj876Zt/O+movzvpqf876as/O+m4fzvpub876br/O+nIPzvpyX876cq/O+nL/zvp2T876dp/O+nbvzvp6P876eo/O+nrfzvp+L876fn/O+n7PzvqCH876gm/O+oK/zvqGD876hlw==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"󾡫󾡿󾢓󾢧󾢻󾣏󾣣󾣷󾤋󾤟󾤳󾥇󾥛󾥯󾦃󾦗󾦫󾦿󾧓󾧧󾧻󾨏󾨣󾨷󾩋󾩟󾩳󾪇󾪛󾪯󾫃󾫗󾫫󾫿󾬓󾬧󾬻󾭏󾭣󾭷󾮋󾮟󾮳󾯇󾯛󾯯󾰃󾰗󾰫󾰿󾱓󾱧󾱻󾲏󾲣󾲷󾳋󾳟󾳳󾴇󾴛󾴯󾵃󾵗󾵫󾵿󾶓󾶧󾶻󾷏󾷣󾷷󾸋󾸟󾸳󾹇󾹛󾹯󾺃󾺗󾺫󾺿󾻓󾻧󾻻󾼏󾼣󾼷󾽋󾽟󾽳󾾇󾾛󾾯󾿃󾿗󾿫󾿿󿀓󿀧\",\n\t\t\t\"encodedString\": \"876hq/O+ob/zvqKT876ip/O+orvzvqOP876jo/O+o7fzvqSL876kn/O+pLPzvqWH876lm/O+pa/zvqaD876ml/O+pqvzvqa/876nk/O+p6fzvqe7876oj/O+qKPzvqi3876pi/O+qZ/zvqmz876qh/O+qpvzvqqv876rg/O+q5fzvqur876rv/O+rJPzvqyn876su/O+rY/zvq2j876tt/O+rovzvq6f876us/O+r4fzvq+b876vr/O+sIPzvrCX876wq/O+sL/zvrGT876xp/O+sbvzvrKP876yo/O+srfzvrOL876zn/O+s7PzvrSH8760m/O+tK/zvrWD8761l/O+tavzvrW/8762k/O+tqfzvra78763j/O+t6Pzvre38764i/O+uJ/zvriz8765h/O+uZvzvrmv8766g/O+upfzvrqr8766v/O+u5Pzvrun8767u/O+vI/zvryj8768t/O+vYvzvr2f8769s/O+vofzvr6b876+r/O+v4Pzvr+X876/q/O+v7/zv4CT87+Apw==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"󿀻󿁏󿁣󿁷󿂋󿂟󿂳󿃇󿃛󿃯󿄃󿄗󿄫󿄿󿅓󿅧󿅻󿆏󿆣󿆷󿇋󿇟󿇳󿈇󿈛󿈯󿉃󿉗󿉫󿉿󿊓󿊧󿊻󿋏󿋣󿋷󿌋󿌟󿌳󿍇󿍛󿍯󿎃󿎗󿎫󿎿󿏓󿏧󿏻󿐏󿐣󿐷󿑋󿑟󿑳󿒇󿒛󿒯󿓃󿓗󿓫󿓿󿔓󿔧󿔻󿕏󿕣󿕷󿖋󿖟󿖳󿗇󿗛󿗯󿘃󿘗󿘫󿘿󿙓󿙧󿙻󿚏󿚣󿚷󿛋󿛟󿛳󿜇󿜛󿜯󿝃󿝗󿝫󿝿󿞓󿞧󿞻󿟏󿟣󿟷\",\n\t\t\t\"encodedString\": \"87+Au/O/gY/zv4Gj87+Bt/O/govzv4Kf87+Cs/O/g4fzv4Ob87+Dr/O/hIPzv4SX87+Eq/O/hL/zv4WT87+Fp/O/hbvzv4aP87+Go/O/hrfzv4eL87+Hn/O/h7Pzv4iH87+Im/O/iK/zv4mD87+Jl/O/iavzv4m/87+Kk/O/iqfzv4q787+Lj/O/i6Pzv4u387+Mi/O/jJ/zv4yz87+Nh/O/jZvzv42v87+Og/O/jpfzv46r87+Ov/O/j5Pzv4+n87+Pu/O/kI/zv5Cj87+Qt/O/kYvzv5Gf87+Rs/O/kofzv5Kb87+Sr/O/k4Pzv5OX87+Tq/O/k7/zv5ST87+Up/O/lLvzv5WP87+Vo/O/lbfzv5aL87+Wn/O/lrPzv5eH87+Xm/O/l6/zv5iD87+Yl/O/mKvzv5i/87+Zk/O/mafzv5m787+aj/O/mqPzv5q387+bi/O/m5/zv5uz87+ch/O/nJvzv5yv87+dg/O/nZfzv52r87+dv/O/npPzv56n87+eu/O/n4/zv5+j87+ftw==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"󿠋󿠟󿠳󿡇󿡛󿡯󿢃󿢗󿢫󿢿󿣓󿣧󿣻󿤏󿤣󿤷󿥋󿥟󿥳󿦇󿦛󿦯󿧃󿧗󿧫󿧿󿨓󿨧󿨻󿩏󿩣󿩷󿪋󿪟󿪳󿫇󿫛󿫯󿬃󿬗󿬫󿬿󿭓󿭧󿭻󿮏󿮣󿮷󿯋󿯟󿯳󿰇󿰛󿰯󿱃󿱗󿱫󿱿󿲓󿲧󿲻󿳏󿳣󿳷󿴋󿴟󿴳󿵇󿵛󿵯󿶃󿶗󿶫󿶿󿷓󿷧󿷻󿸏󿸣󿸷󿹋󿹟󿹳󿺇󿺛󿺯󿻃󿻗󿻫󿻿󿼓󿼧󿼻󿽏󿽣󿽷󿾋󿾟󿾳󿿇\",\n\t\t\t\"encodedString\": \"87+gi/O/oJ/zv6Cz87+hh/O/oZvzv6Gv87+ig/O/opfzv6Kr87+iv/O/o5Pzv6On87+ju/O/pI/zv6Sj87+kt/O/pYvzv6Wf87+ls/O/pofzv6ab87+mr/O/p4Pzv6eX87+nq/O/p7/zv6iT87+op/O/qLvzv6mP87+po/O/qbfzv6qL87+qn/O/qrPzv6uH87+rm/O/q6/zv6yD87+sl/O/rKvzv6y/87+tk/O/rafzv62787+uj/O/rqPzv66387+vi/O/r5/zv6+z87+wh/O/sJvzv7Cv87+xg/O/sZfzv7Gr87+xv/O/spPzv7Kn87+yu/O/s4/zv7Oj87+zt/O/tIvzv7Sf87+0s/O/tYfzv7Wb87+1r/O/toPzv7aX87+2q/O/tr/zv7eT87+3p/O/t7vzv7iP87+4o/O/uLfzv7mL87+5n/O/ubPzv7qH87+6m/O/uq/zv7uD87+7l/O/u6vzv7u/87+8k/O/vKfzv7y787+9j/O/vaPzv72387++i/O/vp/zv76z87+/hw==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"󿿛󿿯􀀅􀀙􀀭􀁁􀁕􀁩􀁽􀂑􀂥􀂹􀃍􀃡􀃵􀄉􀄝􀄱􀅅􀅙􀅭􀆁􀆕􀆩􀆽􀇑􀇥􀇹􀈍􀈡􀈵􀉉􀉝􀉱􀊅􀊙􀊭􀋁􀋕􀋩􀋽􀌑􀌥􀌹􀍍􀍡􀍵􀎉􀎝􀎱􀏅􀏙􀏭􀐁􀐕􀐩􀐽􀑑􀑥􀑹􀒍􀒡􀒵􀓉􀓝􀓱􀔅􀔙􀔭􀕁􀕕􀕩􀕽􀖑􀖥􀖹􀗍􀗡􀗵􀘉􀘝􀘱􀙅􀙙􀙭􀚁􀚕􀚩􀚽􀛑􀛥􀛹􀜍􀜡􀜵􀝉􀝝􀝱􀞅􀞙\",\n\t\t\t\"encodedString\": \"87+/m/O/v6/0gICF9ICAmfSAgK30gIGB9ICBlfSAgan0gIG99ICCkfSAgqX0gIK59ICDjfSAg6H0gIO19ICEifSAhJ30gISx9ICFhfSAhZn0gIWt9ICGgfSAhpX0gIap9ICGvfSAh5H0gIel9ICHufSAiI30gIih9ICItfSAiYn0gImd9ICJsfSAioX0gIqZ9ICKrfSAi4H0gIuV9ICLqfSAi730gIyR9ICMpfSAjLn0gI2N9ICNofSAjbX0gI6J9ICOnfSAjrH0gI+F9ICPmfSAj630gJCB9ICQlfSAkKn0gJC99ICRkfSAkaX0gJG59ICSjfSAkqH0gJK19ICTifSAk530gJOx9ICUhfSAlJn0gJSt9ICVgfSAlZX0gJWp9ICVvfSAlpH0gJal9ICWufSAl430gJeh9ICXtfSAmIn0gJid9ICYsfSAmYX0gJmZ9ICZrfSAmoH0gJqV9ICaqfSAmr30gJuR9ICbpfSAm7n0gJyN9ICcofSAnLX0gJ2J9ICdnfSAnbH0gJ6F9ICemQ==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"􀞭􀟁􀟕􀟩􀟽􀠑􀠥􀠹􀡍􀡡􀡵􀢉􀢝􀢱􀣅􀣙􀣭􀤁􀤕􀤩􀤽􀥑􀥥􀥹􀦍􀦡􀦵􀧉􀧝􀧱􀨅􀨙􀨭􀩁􀩕􀩩􀩽􀪑􀪥􀪹􀫍􀫡􀫵􀬉􀬝􀬱􀭅􀭙􀭭􀮁􀮕􀮩􀮽􀯑􀯥􀯹􀰍􀰡􀰵􀱉􀱝􀱱􀲅􀲙􀲭􀳁􀳕􀳩􀳽􀴑􀴥􀴹􀵍􀵡􀵵􀶉􀶝􀶱􀷅􀷙􀷭􀸁􀸕􀸩􀸽􀹑􀹥􀹹􀺍􀺡􀺵􀻉􀻝􀻱􀼅􀼙􀼭􀽁􀽕􀽩\",\n\t\t\t\"encodedString\": \"9ICerfSAn4H0gJ+V9ICfqfSAn730gKCR9ICgpfSAoLn0gKGN9IChofSAobX0gKKJ9ICinfSAorH0gKOF9ICjmfSAo630gKSB9ICklfSApKn0gKS99IClkfSApaX0gKW59ICmjfSApqH0gKa19ICnifSAp530gKex9ICohfSAqJn0gKit9ICpgfSAqZX0gKmp9ICpvfSAqpH0gKql9ICqufSAq430gKuh9ICrtfSArIn0gKyd9ICssfSArYX0gK2Z9ICtrfSAroH0gK6V9ICuqfSArr30gK+R9ICvpfSAr7n0gLCN9ICwofSAsLX0gLGJ9ICxnfSAsbH0gLKF9ICymfSAsq30gLOB9ICzlfSAs6n0gLO99IC0kfSAtKX0gLS59IC1jfSAtaH0gLW19IC2ifSAtp30gLax9IC3hfSAt5n0gLet9IC4gfSAuJX0gLip9IC4vfSAuZH0gLml9IC5ufSAuo30gLqh9IC6tfSAu4n0gLud9IC7sfSAvIX0gLyZ9IC8rfSAvYH0gL2V9IC9qQ==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"􀽽􀾑􀾥􀾹􀿍􀿡􀿵􁀉􁀝􁀱􁁅􁁙􁁭􁂁􁂕􁂩􁂽􁃑􁃥􁃹􁄍􁄡􁄵􁅉􁅝􁅱􁆅􁆙􁆭􁇁􁇕􁇩􁇽􁈑􁈥􁈹􁉍􁉡􁉵􁊉􁊝􁊱􁋅􁋙􁋭􁌁􁌕􁌩􁌽􁍑􁍥􁍹􁎍􁎡􁎵􁏉􁏝􁏱􁐅􁐙􁐭􁑁􁑕􁑩􁑽􁒑􁒥􁒹􁓍􁓡􁓵􁔉􁔝􁔱􁕅􁕙􁕭􁖁􁖕􁖩􁖽􁗑􁗥􁗹􁘍􁘡􁘵􁙉􁙝􁙱􁚅􁚙􁚭􁛁􁛕􁛩􁛽􁜑􁜥􁜹\",\n\t\t\t\"encodedString\": \"9IC9vfSAvpH0gL6l9IC+ufSAv430gL+h9IC/tfSBgIn0gYCd9IGAsfSBgYX0gYGZ9IGBrfSBgoH0gYKV9IGCqfSBgr30gYOR9IGDpfSBg7n0gYSN9IGEofSBhLX0gYWJ9IGFnfSBhbH0gYaF9IGGmfSBhq30gYeB9IGHlfSBh6n0gYe99IGIkfSBiKX0gYi59IGJjfSBiaH0gYm19IGKifSBip30gYqx9IGLhfSBi5n0gYut9IGMgfSBjJX0gYyp9IGMvfSBjZH0gY2l9IGNufSBjo30gY6h9IGOtfSBj4n0gY+d9IGPsfSBkIX0gZCZ9IGQrfSBkYH0gZGV9IGRqfSBkb30gZKR9IGSpfSBkrn0gZON9IGTofSBk7X0gZSJ9IGUnfSBlLH0gZWF9IGVmfSBla30gZaB9IGWlfSBlqn0gZa99IGXkfSBl6X0gZe59IGYjfSBmKH0gZi19IGZifSBmZ30gZmx9IGahfSBmpn0gZqt9IGbgfSBm5X0gZup9IGbvfSBnJH0gZyl9IGcuQ==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"􁝍􁝡􁝵􁞉􁞝􁞱􁟅􁟙􁟭􁠁􁠕􁠩􁠽􁡑􁡥􁡹􁢍􁢡􁢵􁣉􁣝􁣱􁤅􁤙􁤭􁥁􁥕􁥩􁥽􁦑􁦥􁦹􁧍􁧡􁧵􁨉􁨝􁨱􁩅􁩙􁩭􁪁􁪕􁪩􁪽􁫑􁫥􁫹􁬍􁬡􁬵􁭉􁭝􁭱􁮅􁮙􁮭􁯁􁯕􁯩􁯽􁰑􁰥􁰹􁱍􁱡􁱵􁲉􁲝􁲱􁳅􁳙􁳭􁴁􁴕􁴩􁴽􁵑􁵥􁵹􁶍􁶡􁶵􁷉􁷝􁷱􁸅􁸙􁸭􁹁􁹕􁹩􁹽􁺑􁺥􁺹􁻍􁻡􁻵􁼉\",\n\t\t\t\"encodedString\": \"9IGdjfSBnaH0gZ219IGeifSBnp30gZ6x9IGfhfSBn5n0gZ+t9IGggfSBoJX0gaCp9IGgvfSBoZH0gaGl9IGhufSBoo30gaKh9IGitfSBo4n0gaOd9IGjsfSBpIX0gaSZ9IGkrfSBpYH0gaWV9IGlqfSBpb30gaaR9IGmpfSBprn0gaeN9IGnofSBp7X0gaiJ9IGonfSBqLH0gamF9IGpmfSBqa30gaqB9IGqlfSBqqn0gaq99IGrkfSBq6X0gau59IGsjfSBrKH0gay19IGtifSBrZ30ga2x9IGuhfSBrpn0ga6t9IGvgfSBr5X0ga+p9IGvvfSBsJH0gbCl9IGwufSBsY30gbGh9IGxtfSBson0gbKd9IGysfSBs4X0gbOZ9IGzrfSBtIH0gbSV9IG0qfSBtL30gbWR9IG1pfSBtbn0gbaN9IG2ofSBtrX0gbeJ9IG3nfSBt7H0gbiF9IG4mfSBuK30gbmB9IG5lfSBuan0gbm99IG6kfSBuqX0gbq59IG7jfSBu6H0gbu19IG8iQ==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"􁼝􁼱􁽅􁽙􁽭􁾁􁾕􁾩􁾽􁿑􁿥􁿹􂀍􂀡􂀵􂁉􂁝􂁱􂂅􂂙􂂭􂃁􂃕􂃩􂃽􂄑􂄥􂄹􂅍􂅡􂅵􂆉􂆝􂆱􂇅􂇙􂇭􂈁􂈕􂈩􂈽􂉑􂉥􂉹􂊍􂊡􂊵􂋉􂋝􂋱􂌅􂌙􂌭􂍁􂍕􂍩􂍽􂎑􂎥􂎹􂏍􂏡􂏵􂐉􂐝􂐱􂑅􂑙􂑭􂒁􂒕􂒩􂒽􂓑􂓥􂓹􂔍􂔡􂔵􂕉􂕝􂕱􂖅􂖙􂖭􂗁􂗕􂗩􂗽􂘑􂘥􂘹􂙍􂙡􂙵􂚉􂚝􂚱􂛅􂛙\",\n\t\t\t\"encodedString\": \"9IG8nfSBvLH0gb2F9IG9mfSBva30gb6B9IG+lfSBvqn0gb699IG/kfSBv6X0gb+59IKAjfSCgKH0goC19IKBifSCgZ30goGx9IKChfSCgpn0goKt9IKDgfSCg5X0goOp9IKDvfSChJH0goSl9IKEufSChY30goWh9IKFtfSChon0goad9IKGsfSCh4X0goeZ9IKHrfSCiIH0goiV9IKIqfSCiL30gomR9IKJpfSCibn0goqN9IKKofSCirX0gouJ9IKLnfSCi7H0goyF9IKMmfSCjK30go2B9IKNlfSCjan0go299IKOkfSCjqX0go659IKPjfSCj6H0go+19IKQifSCkJ30gpCx9IKRhfSCkZn0gpGt9IKSgfSCkpX0gpKp9IKSvfSCk5H0gpOl9IKTufSClI30gpSh9IKUtfSClYn0gpWd9IKVsfSCloX0gpaZ9IKWrfSCl4H0gpeV9IKXqfSCl730gpiR9IKYpfSCmLn0gpmN9IKZofSCmbX0gpqJ9IKanfSCmrH0gpuF9IKbmQ==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"􂛭􂜁􂜕􂜩􂜽􂝑􂝥􂝹􂞍􂞡􂞵􂟉􂟝􂟱􂠅􂠙􂠭􂡁􂡕􂡩􂡽􂢑􂢥􂢹􂣍􂣡􂣵􂤉􂤝􂤱􂥅􂥙􂥭􂦁􂦕􂦩􂦽􂧑􂧥􂧹􂨍􂨡􂨵􂩉􂩝􂩱􂪅􂪙􂪭􂫁􂫕􂫩􂫽􂬑􂬥􂬹􂭍􂭡􂭵􂮉􂮝􂮱􂯅􂯙􂯭􂰁􂰕􂰩􂰽􂱑􂱥􂱹􂲍􂲡􂲵􂳉􂳝􂳱􂴅􂴙􂴭􂵁􂵕􂵩􂵽􂶑􂶥􂶹􂷍􂷡􂷵􂸉􂸝􂸱􂹅􂹙􂹭􂺁􂺕􂺩\",\n\t\t\t\"encodedString\": \"9IKbrfSCnIH0gpyV9IKcqfSCnL30gp2R9IKdpfSCnbn0gp6N9IKeofSCnrX0gp+J9IKfnfSCn7H0gqCF9IKgmfSCoK30gqGB9IKhlfSCoan0gqG99IKikfSCoqX0gqK59IKjjfSCo6H0gqO19IKkifSCpJ30gqSx9IKlhfSCpZn0gqWt9IKmgfSCppX0gqap9IKmvfSCp5H0gqel9IKnufSCqI30gqih9IKotfSCqYn0gqmd9IKpsfSCqoX0gqqZ9IKqrfSCq4H0gquV9IKrqfSCq730gqyR9IKspfSCrLn0gq2N9IKtofSCrbX0gq6J9IKunfSCrrH0gq+F9IKvmfSCr630grCB9IKwlfSCsKn0grC99IKxkfSCsaX0grG59IKyjfSCsqH0grK19IKzifSCs530grOx9IK0hfSCtJn0grSt9IK1gfSCtZX0grWp9IK1vfSCtpH0gral9IK2ufSCt430greh9IK3tfSCuIn0grid9IK4sfSCuYX0grmZ9IK5rfSCuoH0grqV9IK6qQ==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"􂺽􂻑􂻥􂻹􂼍􂼡􂼵􂽉􂽝􂽱􂾅􂾙􂾭􂿁􂿕􂿩􂿽􃀑􃀥􃀹􃁍􃁡􃁵􃂉􃂝􃂱􃃅􃃙􃃭􃄁􃄕􃄩􃄽􃅑􃅥􃅹􃆍􃆡􃆵􃇉􃇝􃇱􃈅􃈙􃈭􃉁􃉕􃉩􃉽􃊑􃊥􃊹􃋍􃋡􃋵􃌉􃌝􃌱􃍅􃍙􃍭􃎁􃎕􃎩􃎽􃏑􃏥􃏹􃐍􃐡􃐵􃑉􃑝􃑱􃒅􃒙􃒭􃓁􃓕􃓩􃓽􃔑􃔥􃔹􃕍􃕡􃕵􃖉􃖝􃖱􃗅􃗙􃗭􃘁􃘕􃘩􃘽􃙑􃙥􃙹\",\n\t\t\t\"encodedString\": \"9IK6vfSCu5H0grul9IK7ufSCvI30gryh9IK8tfSCvYn0gr2d9IK9sfSCvoX0gr6Z9IK+rfSCv4H0gr+V9IK/qfSCv730g4CR9IOApfSDgLn0g4GN9IOBofSDgbX0g4KJ9IOCnfSDgrH0g4OF9IODmfSDg630g4SB9IOElfSDhKn0g4S99IOFkfSDhaX0g4W59IOGjfSDhqH0g4a19IOHifSDh530g4ex9IOIhfSDiJn0g4it9IOJgfSDiZX0g4mp9IOJvfSDipH0g4ql9IOKufSDi430g4uh9IOLtfSDjIn0g4yd9IOMsfSDjYX0g42Z9IONrfSDjoH0g46V9IOOqfSDjr30g4+R9IOPpfSDj7n0g5CN9IOQofSDkLX0g5GJ9IORnfSDkbH0g5KF9IOSmfSDkq30g5OB9IOTlfSDk6n0g5O99IOUkfSDlKX0g5S59IOVjfSDlaH0g5W19IOWifSDlp30g5ax9IOXhfSDl5n0g5et9IOYgfSDmJX0g5ip9IOYvfSDmZH0g5ml9IOZuQ==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"􃚍􃚡􃚵􃛉􃛝􃛱􃜅􃜙􃜭􃝁􃝕􃝩􃝽􃞑􃞥􃞹􃟍􃟡􃟵􃠉􃠝􃠱􃡅􃡙􃡭􃢁􃢕􃢩􃢽􃣑􃣥􃣹􃤍􃤡􃤵􃥉􃥝􃥱􃦅􃦙􃦭􃧁􃧕􃧩􃧽􃨑􃨥􃨹􃩍􃩡􃩵􃪉􃪝􃪱􃫅􃫙􃫭􃬁􃬕􃬩􃬽􃭑􃭥􃭹􃮍􃮡􃮵􃯉􃯝􃯱􃰅􃰙􃰭􃱁􃱕􃱩􃱽􃲑􃲥􃲹􃳍􃳡􃳵􃴉􃴝􃴱􃵅􃵙􃵭􃶁􃶕􃶩􃶽􃷑􃷥􃷹􃸍􃸡􃸵􃹉\",\n\t\t\t\"encodedString\": \"9IOajfSDmqH0g5q19IObifSDm530g5ux9IOchfSDnJn0g5yt9IOdgfSDnZX0g52p9IOdvfSDnpH0g56l9IOeufSDn430g5+h9IOftfSDoIn0g6Cd9IOgsfSDoYX0g6GZ9IOhrfSDooH0g6KV9IOiqfSDor30g6OR9IOjpfSDo7n0g6SN9IOkofSDpLX0g6WJ9IOlnfSDpbH0g6aF9IOmmfSDpq30g6eB9IOnlfSDp6n0g6e99IOokfSDqKX0g6i59IOpjfSDqaH0g6m19IOqifSDqp30g6qx9IOrhfSDq5n0g6ut9IOsgfSDrJX0g6yp9IOsvfSDrZH0g62l9IOtufSDro30g66h9IOutfSDr4n0g6+d9IOvsfSDsIX0g7CZ9IOwrfSDsYH0g7GV9IOxqfSDsb30g7KR9IOypfSDsrn0g7ON9IOzofSDs7X0g7SJ9IO0nfSDtLH0g7WF9IO1mfSDta30g7aB9IO2lfSDtqn0g7a99IO3kfSDt6X0g7e59IO4jfSDuKH0g7i19IO5iQ==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"􃹝􃹱􃺅􃺙􃺭􃻁􃻕􃻩􃻽􃼑􃼥􃼹􃽍􃽡􃽵􃾉􃾝􃾱􃿅􃿙􃿭􄀁􄀕􄀩􄀽􄁑􄁥􄁹􄂍􄂡􄂵􄃉􄃝􄃱􄄅􄄙􄄭􄅁􄅕􄅩􄅽􄆑􄆥􄆹􄇍􄇡􄇵􄈉􄈝􄈱􄉅􄉙􄉭􄊁􄊕􄊩􄊽􄋑􄋥􄋹􄌍􄌡􄌵􄍉􄍝􄍱􄎅􄎙􄎭􄏁􄏕􄏩􄏽􄐑􄐥􄐹􄑍􄑡􄑵􄒉􄒝􄒱􄓅􄓙􄓭􄔁􄔕􄔩􄔽􄕑􄕥􄕹􄖍􄖡􄖵􄗉􄗝􄗱􄘅􄘙\",\n\t\t\t\"encodedString\": \"9IO5nfSDubH0g7qF9IO6mfSDuq30g7uB9IO7lfSDu6n0g7u99IO8kfSDvKX0g7y59IO9jfSDvaH0g7219IO+ifSDvp30g76x9IO/hfSDv5n0g7+t9ISAgfSEgJX0hICp9ISAvfSEgZH0hIGl9ISBufSEgo30hIKh9ISCtfSEg4n0hIOd9ISDsfSEhIX0hISZ9ISErfSEhYH0hIWV9ISFqfSEhb30hIaR9ISGpfSEhrn0hIeN9ISHofSEh7X0hIiJ9ISInfSEiLH0hImF9ISJmfSEia30hIqB9ISKlfSEiqn0hIq99ISLkfSEi6X0hIu59ISMjfSEjKH0hIy19ISNifSEjZ30hI2x9ISOhfSEjpn0hI6t9ISPgfSEj5X0hI+p9ISPvfSEkJH0hJCl9ISQufSEkY30hJGh9ISRtfSEkon0hJKd9ISSsfSEk4X0hJOZ9ISTrfSElIH0hJSV9ISUqfSElL30hJWR9ISVpfSElbn0hJaN9ISWofSElrX0hJeJ9ISXnfSEl7H0hJiF9ISYmQ==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"􄘭􄙁􄙕􄙩􄙽􄚑􄚥􄚹􄛍􄛡􄛵􄜉􄜝􄜱􄝅􄝙􄝭􄞁􄞕􄞩􄞽􄟑􄟥􄟹􄠍􄠡􄠵􄡉􄡝􄡱􄢅􄢙􄢭􄣁􄣕􄣩􄣽􄤑􄤥􄤹􄥍􄥡􄥵􄦉􄦝􄦱􄧅􄧙􄧭􄨁􄨕􄨩􄨽􄩑􄩥􄩹􄪍􄪡􄪵􄫉􄫝􄫱􄬅􄬙􄬭􄭁􄭕􄭩􄭽􄮑􄮥􄮹􄯍􄯡􄯵􄰉􄰝􄰱􄱅􄱙􄱭􄲁􄲕􄲩􄲽􄳑􄳥􄳹􄴍􄴡􄴵􄵉􄵝􄵱􄶅􄶙􄶭􄷁􄷕􄷩\",\n\t\t\t\"encodedString\": \"9ISYrfSEmYH0hJmV9ISZqfSEmb30hJqR9ISapfSEmrn0hJuN9ISbofSEm7X0hJyJ9IScnfSEnLH0hJ2F9ISdmfSEna30hJ6B9ISelfSEnqn0hJ699ISfkfSEn6X0hJ+59ISgjfSEoKH0hKC19IShifSEoZ30hKGx9ISihfSEopn0hKKt9ISjgfSEo5X0hKOp9ISjvfSEpJH0hKSl9ISkufSEpY30hKWh9ISltfSEpon0hKad9ISmsfSEp4X0hKeZ9ISnrfSEqIH0hKiV9ISoqfSEqL30hKmR9ISppfSEqbn0hKqN9ISqofSEqrX0hKuJ9ISrnfSEq7H0hKyF9ISsmfSErK30hK2B9IStlfSEran0hK299ISukfSErqX0hK659ISvjfSEr6H0hK+19ISwifSEsJ30hLCx9ISxhfSEsZn0hLGt9ISygfSEspX0hLKp9ISyvfSEs5H0hLOl9ISzufSEtI30hLSh9IS0tfSEtYn0hLWd9IS1sfSEtoX0hLaZ9IS2rfSEt4H0hLeV9IS3qQ==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"􄷽􄸑􄸥􄸹􄹍􄹡􄹵􄺉􄺝􄺱􄻅􄻙􄻭􄼁􄼕􄼩􄼽􄽑􄽥􄽹􄾍􄾡􄾵􄿉􄿝􄿱􅀅􅀙􅀭􅁁􅁕􅁩􅁽􅂑􅂥􅂹􅃍􅃡􅃵􅄉􅄝􅄱􅅅􅅙􅅭􅆁􅆕􅆩􅆽􅇑􅇥􅇹􅈍􅈡􅈵􅉉􅉝􅉱􅊅􅊙􅊭􅋁􅋕􅋩􅋽􅌑􅌥􅌹􅍍􅍡􅍵􅎉􅎝􅎱􅏅􅏙􅏭􅐁􅐕􅐩􅐽􅑑􅑥􅑹􅒍􅒡􅒵􅓉􅓝􅓱􅔅􅔙􅔭􅕁􅕕􅕩􅕽􅖑􅖥􅖹\",\n\t\t\t\"encodedString\": \"9IS3vfSEuJH0hLil9IS4ufSEuY30hLmh9IS5tfSEuon0hLqd9IS6sfSEu4X0hLuZ9IS7rfSEvIH0hLyV9IS8qfSEvL30hL2R9IS9pfSEvbn0hL6N9IS+ofSEvrX0hL+J9IS/nfSEv7H0hYCF9IWAmfSFgK30hYGB9IWBlfSFgan0hYG99IWCkfSFgqX0hYK59IWDjfSFg6H0hYO19IWEifSFhJ30hYSx9IWFhfSFhZn0hYWt9IWGgfSFhpX0hYap9IWGvfSFh5H0hYel9IWHufSFiI30hYih9IWItfSFiYn0hYmd9IWJsfSFioX0hYqZ9IWKrfSFi4H0hYuV9IWLqfSFi730hYyR9IWMpfSFjLn0hY2N9IWNofSFjbX0hY6J9IWOnfSFjrH0hY+F9IWPmfSFj630hZCB9IWQlfSFkKn0hZC99IWRkfSFkaX0hZG59IWSjfSFkqH0hZK19IWTifSFk530hZOx9IWUhfSFlJn0hZSt9IWVgfSFlZX0hZWp9IWVvfSFlpH0hZal9IWWuQ==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"􅗍􅗡􅗵􅘉􅘝􅘱􅙅􅙙􅙭􅚁􅚕􅚩􅚽􅛑􅛥􅛹􅜍􅜡􅜵􅝉􅝝􅝱􅞅􅞙􅞭􅟁􅟕􅟩􅟽􅠑􅠥􅠹􅡍􅡡􅡵􅢉􅢝􅢱􅣅􅣙􅣭􅤁􅤕􅤩􅤽􅥑􅥥􅥹􅦍􅦡􅦵􅧉􅧝􅧱􅨅􅨙􅨭􅩁􅩕􅩩􅩽􅪑􅪥􅪹􅫍􅫡􅫵􅬉􅬝􅬱􅭅􅭙􅭭􅮁􅮕􅮩􅮽􅯑􅯥􅯹􅰍􅰡􅰵􅱉􅱝􅱱􅲅􅲙􅲭􅳁􅳕􅳩􅳽􅴑􅴥􅴹􅵍􅵡􅵵􅶉\",\n\t\t\t\"encodedString\": \"9IWXjfSFl6H0hZe19IWYifSFmJ30hZix9IWZhfSFmZn0hZmt9IWagfSFmpX0hZqp9IWavfSFm5H0hZul9IWbufSFnI30hZyh9IWctfSFnYn0hZ2d9IWdsfSFnoX0hZ6Z9IWerfSFn4H0hZ+V9IWfqfSFn730haCR9IWgpfSFoLn0haGN9IWhofSFobX0haKJ9IWinfSForH0haOF9IWjmfSFo630haSB9IWklfSFpKn0haS99IWlkfSFpaX0haW59IWmjfSFpqH0haa19IWnifSFp530haex9IWohfSFqJn0hait9IWpgfSFqZX0hamp9IWpvfSFqpH0haql9IWqufSFq430hauh9IWrtfSFrIn0hayd9IWssfSFrYX0ha2Z9IWtrfSFroH0ha6V9IWuqfSFrr30ha+R9IWvpfSFr7n0hbCN9IWwofSFsLX0hbGJ9IWxnfSFsbH0hbKF9IWymfSFsq30hbOB9IWzlfSFs6n0hbO99IW0kfSFtKX0hbS59IW1jfSFtaH0hbW19IW2iQ==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"􅶝􅶱􅷅􅷙􅷭􅸁􅸕􅸩􅸽􅹑􅹥􅹹􅺍􅺡􅺵􅻉􅻝􅻱􅼅􅼙􅼭􅽁􅽕􅽩􅽽􅾑􅾥􅾹􅿍􅿡􅿵􆀉􆀝􆀱􆁅􆁙􆁭􆂁􆂕􆂩􆂽􆃑􆃥􆃹􆄍􆄡􆄵􆅉􆅝􆅱􆆅􆆙􆆭􆇁􆇕􆇩􆇽􆈑􆈥􆈹􆉍􆉡􆉵􆊉􆊝􆊱􆋅􆋙􆋭􆌁􆌕􆌩􆌽􆍑􆍥􆍹􆎍􆎡􆎵􆏉􆏝􆏱􆐅􆐙􆐭􆑁􆑕􆑩􆑽􆒑􆒥􆒹􆓍􆓡􆓵􆔉􆔝􆔱􆕅􆕙\",\n\t\t\t\"encodedString\": \"9IW2nfSFtrH0hbeF9IW3mfSFt630hbiB9IW4lfSFuKn0hbi99IW5kfSFuaX0hbm59IW6jfSFuqH0hbq19IW7ifSFu530hbux9IW8hfSFvJn0hbyt9IW9gfSFvZX0hb2p9IW9vfSFvpH0hb6l9IW+ufSFv430hb+h9IW/tfSGgIn0hoCd9IaAsfSGgYX0hoGZ9IaBrfSGgoH0hoKV9IaCqfSGgr30hoOR9IaDpfSGg7n0hoSN9IaEofSGhLX0hoWJ9IaFnfSGhbH0hoaF9IaGmfSGhq30hoeB9IaHlfSGh6n0hoe99IaIkfSGiKX0hoi59IaJjfSGiaH0hom19IaKifSGip30hoqx9IaLhfSGi5n0hout9IaMgfSGjJX0hoyp9IaMvfSGjZH0ho2l9IaNufSGjo30ho6h9IaOtfSGj4n0ho+d9IaPsfSGkIX0hpCZ9IaQrfSGkYH0hpGV9IaRqfSGkb30hpKR9IaSpfSGkrn0hpON9IaTofSGk7X0hpSJ9IaUnfSGlLH0hpWF9IaVmQ==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"􆕭􆖁􆖕􆖩􆖽􆗑􆗥􆗹􆘍􆘡􆘵􆙉􆙝􆙱􆚅􆚙􆚭􆛁􆛕􆛩􆛽􆜑􆜥􆜹􆝍􆝡􆝵􆞉􆞝􆞱􆟅􆟙􆟭􆠁􆠕􆠩􆠽􆡑􆡥􆡹􆢍􆢡􆢵􆣉􆣝􆣱􆤅􆤙􆤭􆥁􆥕􆥩􆥽􆦑􆦥􆦹􆧍􆧡􆧵􆨉􆨝􆨱􆩅􆩙􆩭􆪁􆪕􆪩􆪽􆫑􆫥􆫹􆬍􆬡􆬵􆭉􆭝􆭱􆮅􆮙􆮭􆯁􆯕􆯩􆯽􆰑􆰥􆰹􆱍􆱡􆱵􆲉􆲝􆲱􆳅􆳙􆳭􆴁􆴕􆴩\",\n\t\t\t\"encodedString\": \"9IaVrfSGloH0hpaV9IaWqfSGlr30hpeR9IaXpfSGl7n0hpiN9IaYofSGmLX0hpmJ9IaZnfSGmbH0hpqF9IaamfSGmq30hpuB9IablfSGm6n0hpu99IackfSGnKX0hpy59IadjfSGnaH0hp219IaeifSGnp30hp6x9IafhfSGn5n0hp+t9IaggfSGoJX0hqCp9IagvfSGoZH0hqGl9IahufSGoo30hqKh9IaitfSGo4n0hqOd9IajsfSGpIX0hqSZ9IakrfSGpYH0hqWV9IalqfSGpb30hqaR9IampfSGprn0hqeN9IanofSGp7X0hqiJ9IaonfSGqLH0hqmF9IapmfSGqa30hqqB9IaqlfSGqqn0hqq99IarkfSGq6X0hqu59IasjfSGrKH0hqy19IatifSGrZ30hq2x9IauhfSGrpn0hq6t9IavgfSGr5X0hq+p9IavvfSGsJH0hrCl9IawufSGsY30hrGh9IaxtfSGson0hrKd9IaysfSGs4X0hrOZ9IazrfSGtIH0hrSV9Ia0qQ==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"􆴽􆵑􆵥􆵹􆶍􆶡􆶵􆷉􆷝􆷱􆸅􆸙􆸭􆹁􆹕􆹩􆹽􆺑􆺥􆺹􆻍􆻡􆻵􆼉􆼝􆼱􆽅􆽙􆽭􆾁􆾕􆾩􆾽􆿑􆿥􆿹􇀍􇀡􇀵􇁉􇁝􇁱􇂅􇂙􇂭􇃁􇃕􇃩􇃽􇄑􇄥􇄹􇅍􇅡􇅵􇆉􇆝􇆱􇇅􇇙􇇭􇈁􇈕􇈩􇈽􇉑􇉥􇉹􇊍􇊡􇊵􇋉􇋝􇋱􇌅􇌙􇌭􇍁􇍕􇍩􇍽􇎑􇎥􇎹􇏍􇏡􇏵􇐉􇐝􇐱􇑅􇑙􇑭􇒁􇒕􇒩􇒽􇓑􇓥􇓹\",\n\t\t\t\"encodedString\": \"9Ia0vfSGtZH0hrWl9Ia1ufSGto30hrah9Ia2tfSGt4n0hred9Ia3sfSGuIX0hriZ9Ia4rfSGuYH0hrmV9Ia5qfSGub30hrqR9Ia6pfSGurn0hruN9Ia7ofSGu7X0hryJ9Ia8nfSGvLH0hr2F9Ia9mfSGva30hr6B9Ia+lfSGvqn0hr699Ia/kfSGv6X0hr+59IeAjfSHgKH0h4C19IeBifSHgZ30h4Gx9IeChfSHgpn0h4Kt9IeDgfSHg5X0h4Op9IeDvfSHhJH0h4Sl9IeEufSHhY30h4Wh9IeFtfSHhon0h4ad9IeGsfSHh4X0h4eZ9IeHrfSHiIH0h4iV9IeIqfSHiL30h4mR9IeJpfSHibn0h4qN9IeKofSHirX0h4uJ9IeLnfSHi7H0h4yF9IeMmfSHjK30h42B9IeNlfSHjan0h4299IeOkfSHjqX0h4659IePjfSHj6H0h4+19IeQifSHkJ30h5Cx9IeRhfSHkZn0h5Gt9IeSgfSHkpX0h5Kp9IeSvfSHk5H0h5Ol9IeTuQ==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"􇔍􇔡􇔵􇕉􇕝􇕱􇖅􇖙􇖭􇗁􇗕􇗩􇗽􇘑􇘥􇘹􇙍􇙡􇙵􇚉􇚝􇚱􇛅􇛙􇛭􇜁􇜕􇜩􇜽􇝑􇝥􇝹􇞍􇞡􇞵􇟉􇟝􇟱􇠅􇠙􇠭􇡁􇡕􇡩􇡽􇢑􇢥􇢹􇣍􇣡􇣵􇤉􇤝􇤱􇥅􇥙􇥭􇦁􇦕􇦩􇦽􇧑􇧥􇧹􇨍􇨡􇨵􇩉􇩝􇩱􇪅􇪙􇪭􇫁􇫕􇫩􇫽􇬑􇬥􇬹􇭍􇭡􇭵􇮉􇮝􇮱􇯅􇯙􇯭􇰁􇰕􇰩􇰽􇱑􇱥􇱹􇲍􇲡􇲵􇳉\",\n\t\t\t\"encodedString\": \"9IeUjfSHlKH0h5S19IeVifSHlZ30h5Wx9IeWhfSHlpn0h5at9IeXgfSHl5X0h5ep9IeXvfSHmJH0h5il9IeYufSHmY30h5mh9IeZtfSHmon0h5qd9IeasfSHm4X0h5uZ9IebrfSHnIH0h5yV9IecqfSHnL30h52R9IedpfSHnbn0h56N9IeeofSHnrX0h5+J9IefnfSHn7H0h6CF9IegmfSHoK30h6GB9IehlfSHoan0h6G99IeikfSHoqX0h6K59IejjfSHo6H0h6O19IekifSHpJ30h6Sx9IelhfSHpZn0h6Wt9IemgfSHppX0h6ap9IemvfSHp5H0h6el9IenufSHqI30h6ih9IeotfSHqYn0h6md9IepsfSHqoX0h6qZ9IeqrfSHq4H0h6uV9IerqfSHq730h6yR9IespfSHrLn0h62N9IetofSHrbX0h66J9IeunfSHrrH0h6+F9IevmfSHr630h7CB9IewlfSHsKn0h7C99IexkfSHsaX0h7G59IeyjfSHsqH0h7K19IeziQ==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"􇳝􇳱􇴅􇴙􇴭􇵁􇵕􇵩􇵽􇶑􇶥􇶹􇷍􇷡􇷵􇸉􇸝􇸱􇹅􇹙􇹭􇺁􇺕􇺩􇺽􇻑􇻥􇻹􇼍􇼡􇼵􇽉􇽝􇽱􇾅􇾙􇾭􇿁􇿕􇿩􇿽􈀑􈀥􈀹􈁍􈁡􈁵􈂉􈂝􈂱􈃅􈃙􈃭􈄁􈄕􈄩􈄽􈅑􈅥􈅹􈆍􈆡􈆵􈇉􈇝􈇱􈈅􈈙􈈭􈉁􈉕􈉩􈉽􈊑􈊥􈊹􈋍􈋡􈋵􈌉􈌝􈌱􈍅􈍙􈍭􈎁􈎕􈎩􈎽􈏑􈏥􈏹􈐍􈐡􈐵􈑉􈑝􈑱􈒅􈒙\",\n\t\t\t\"encodedString\": \"9IeznfSHs7H0h7SF9Ie0mfSHtK30h7WB9Ie1lfSHtan0h7W99Ie2kfSHtqX0h7a59Ie3jfSHt6H0h7e19Ie4ifSHuJ30h7ix9Ie5hfSHuZn0h7mt9Ie6gfSHupX0h7qp9Ie6vfSHu5H0h7ul9Ie7ufSHvI30h7yh9Ie8tfSHvYn0h72d9Ie9sfSHvoX0h76Z9Ie+rfSHv4H0h7+V9Ie/qfSHv730iICR9IiApfSIgLn0iIGN9IiBofSIgbX0iIKJ9IiCnfSIgrH0iIOF9IiDmfSIg630iISB9IiElfSIhKn0iIS99IiFkfSIhaX0iIW59IiGjfSIhqH0iIa19IiHifSIh530iIex9IiIhfSIiJn0iIit9IiJgfSIiZX0iImp9IiJvfSIipH0iIql9IiKufSIi430iIuh9IiLtfSIjIn0iIyd9IiMsfSIjYX0iI2Z9IiNrfSIjoH0iI6V9IiOqfSIjr30iI+R9IiPpfSIj7n0iJCN9IiQofSIkLX0iJGJ9IiRnfSIkbH0iJKF9IiSmQ==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"􈒭􈓁􈓕􈓩􈓽􈔑􈔥􈔹􈕍􈕡􈕵􈖉􈖝􈖱􈗅􈗙􈗭􈘁􈘕􈘩􈘽􈙑􈙥􈙹􈚍􈚡􈚵􈛉􈛝􈛱􈜅􈜙􈜭􈝁􈝕􈝩􈝽􈞑􈞥􈞹􈟍􈟡􈟵􈠉􈠝􈠱􈡅􈡙􈡭􈢁􈢕􈢩􈢽􈣑􈣥􈣹􈤍􈤡􈤵􈥉􈥝􈥱􈦅􈦙􈦭􈧁􈧕􈧩􈧽􈨑􈨥􈨹􈩍􈩡􈩵􈪉􈪝􈪱􈫅􈫙􈫭􈬁􈬕􈬩􈬽􈭑􈭥􈭹􈮍􈮡􈮵􈯉􈯝􈯱􈰅􈰙􈰭􈱁􈱕􈱩\",\n\t\t\t\"encodedString\": \"9IiSrfSIk4H0iJOV9IiTqfSIk730iJSR9IiUpfSIlLn0iJWN9IiVofSIlbX0iJaJ9IiWnfSIlrH0iJeF9IiXmfSIl630iJiB9IiYlfSImKn0iJi99IiZkfSImaX0iJm59IiajfSImqH0iJq19IibifSIm530iJux9IichfSInJn0iJyt9IidgfSInZX0iJ2p9IidvfSInpH0iJ6l9IieufSIn430iJ+h9IiftfSIoIn0iKCd9IigsfSIoYX0iKGZ9IihrfSIooH0iKKV9IiiqfSIor30iKOR9IijpfSIo7n0iKSN9IikofSIpLX0iKWJ9IilnfSIpbH0iKaF9IimmfSIpq30iKeB9IinlfSIp6n0iKe99IiokfSIqKX0iKi59IipjfSIqaH0iKm19IiqifSIqp30iKqx9IirhfSIq5n0iKut9IisgfSIrJX0iKyp9IisvfSIrZH0iK2l9IitufSIro30iK6h9IiutfSIr4n0iK+d9IivsfSIsIX0iLCZ9IiwrfSIsYH0iLGV9IixqQ==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"􈱽􈲑􈲥􈲹􈳍􈳡􈳵􈴉􈴝􈴱􈵅􈵙􈵭􈶁􈶕􈶩􈶽􈷑􈷥􈷹􈸍􈸡􈸵􈹉􈹝􈹱􈺅􈺙􈺭􈻁􈻕􈻩􈻽􈼑􈼥􈼹􈽍􈽡􈽵􈾉􈾝􈾱􈿅􈿙􈿭􉀁􉀕􉀩􉀽􉁑􉁥􉁹􉂍􉂡􉂵􉃉􉃝􉃱􉄅􉄙􉄭􉅁􉅕􉅩􉅽􉆑􉆥􉆹􉇍􉇡􉇵􉈉􉈝􉈱􉉅􉉙􉉭􉊁􉊕􉊩􉊽􉋑􉋥􉋹􉌍􉌡􉌵􉍉􉍝􉍱􉎅􉎙􉎭􉏁􉏕􉏩􉏽􉐑􉐥􉐹\",\n\t\t\t\"encodedString\": \"9IixvfSIspH0iLKl9IiyufSIs430iLOh9IiztfSItIn0iLSd9Ii0sfSItYX0iLWZ9Ii1rfSItoH0iLaV9Ii2qfSItr30iLeR9Ii3pfSIt7n0iLiN9Ii4ofSIuLX0iLmJ9Ii5nfSIubH0iLqF9Ii6mfSIuq30iLuB9Ii7lfSIu6n0iLu99Ii8kfSIvKX0iLy59Ii9jfSIvaH0iL219Ii+ifSIvp30iL6x9Ii/hfSIv5n0iL+t9ImAgfSJgJX0iYCp9ImAvfSJgZH0iYGl9ImBufSJgo30iYKh9ImCtfSJg4n0iYOd9ImDsfSJhIX0iYSZ9ImErfSJhYH0iYWV9ImFqfSJhb30iYaR9ImGpfSJhrn0iYeN9ImHofSJh7X0iYiJ9ImInfSJiLH0iYmF9ImJmfSJia30iYqB9ImKlfSJiqn0iYq99ImLkfSJi6X0iYu59ImMjfSJjKH0iYy19ImNifSJjZ30iY2x9ImOhfSJjpn0iY6t9ImPgfSJj5X0iY+p9ImPvfSJkJH0iZCl9ImQuQ==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"􉑍􉑡􉑵􉒉􉒝􉒱􉓅􉓙􉓭􉔁􉔕􉔩􉔽􉕑􉕥􉕹􉖍􉖡􉖵􉗉􉗝􉗱􉘅􉘙􉘭􉙁􉙕􉙩􉙽􉚑􉚥􉚹􉛍􉛡􉛵􉜉􉜝􉜱􉝅􉝙􉝭􉞁􉞕􉞩􉞽􉟑􉟥􉟹􉠍􉠡􉠵􉡉􉡝􉡱􉢅􉢙􉢭􉣁􉣕􉣩􉣽􉤑􉤥􉤹􉥍􉥡􉥵􉦉􉦝􉦱􉧅􉧙􉧭􉨁􉨕􉨩􉨽􉩑􉩥􉩹􉪍􉪡􉪵􉫉􉫝􉫱􉬅􉬙􉬭􉭁􉭕􉭩􉭽􉮑􉮥􉮹􉯍􉯡􉯵􉰉\",\n\t\t\t\"encodedString\": \"9ImRjfSJkaH0iZG19ImSifSJkp30iZKx9ImThfSJk5n0iZOt9ImUgfSJlJX0iZSp9ImUvfSJlZH0iZWl9ImVufSJlo30iZah9ImWtfSJl4n0iZed9ImXsfSJmIX0iZiZ9ImYrfSJmYH0iZmV9ImZqfSJmb30iZqR9ImapfSJmrn0iZuN9ImbofSJm7X0iZyJ9ImcnfSJnLH0iZ2F9ImdmfSJna30iZ6B9ImelfSJnqn0iZ699ImfkfSJn6X0iZ+59ImgjfSJoKH0iaC19ImhifSJoZ30iaGx9ImihfSJopn0iaKt9ImjgfSJo5X0iaOp9ImjvfSJpJH0iaSl9ImkufSJpY30iaWh9ImltfSJpon0iaad9ImmsfSJp4X0iaeZ9ImnrfSJqIH0iaiV9ImoqfSJqL30iamR9ImppfSJqbn0iaqN9ImqofSJqrX0iauJ9ImrnfSJq7H0iayF9ImsmfSJrK30ia2B9ImtlfSJran0ia299ImukfSJrqX0ia659ImvjfSJr6H0ia+19ImwiQ==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"􉰝􉰱􉱅􉱙􉱭􉲁􉲕􉲩􉲽􉳑􉳥􉳹􉴍􉴡􉴵􉵉􉵝􉵱􉶅􉶙􉶭􉷁􉷕􉷩􉷽􉸑􉸥􉸹􉹍􉹡􉹵􉺉􉺝􉺱􉻅􉻙􉻭􉼁􉼕􉼩􉼽􉽑􉽥􉽹􉾍􉾡􉾵􉿉􉿝􉿱􊀅􊀙􊀭􊁁􊁕􊁩􊁽􊂑􊂥􊂹􊃍􊃡􊃵􊄉􊄝􊄱􊅅􊅙􊅭􊆁􊆕􊆩􊆽􊇑􊇥􊇹􊈍􊈡􊈵􊉉􊉝􊉱􊊅􊊙􊊭􊋁􊋕􊋩􊋽􊌑􊌥􊌹􊍍􊍡􊍵􊎉􊎝􊎱􊏅􊏙\",\n\t\t\t\"encodedString\": \"9ImwnfSJsLH0ibGF9ImxmfSJsa30ibKB9ImylfSJsqn0ibK99ImzkfSJs6X0ibO59Im0jfSJtKH0ibS19Im1ifSJtZ30ibWx9Im2hfSJtpn0ibat9Im3gfSJt5X0ibep9Im3vfSJuJH0ibil9Im4ufSJuY30ibmh9Im5tfSJuon0ibqd9Im6sfSJu4X0ibuZ9Im7rfSJvIH0ibyV9Im8qfSJvL30ib2R9Im9pfSJvbn0ib6N9Im+ofSJvrX0ib+J9Im/nfSJv7H0ioCF9IqAmfSKgK30ioGB9IqBlfSKgan0ioG99IqCkfSKgqX0ioK59IqDjfSKg6H0ioO19IqEifSKhJ30ioSx9IqFhfSKhZn0ioWt9IqGgfSKhpX0ioap9IqGvfSKh5H0ioel9IqHufSKiI30ioih9IqItfSKiYn0iomd9IqJsfSKioX0ioqZ9IqKrfSKi4H0iouV9IqLqfSKi730ioyR9IqMpfSKjLn0io2N9IqNofSKjbX0io6J9IqOnfSKjrH0io+F9IqPmQ==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"􊏭􊐁􊐕􊐩􊐽􊑑􊑥􊑹􊒍􊒡􊒵􊓉􊓝􊓱􊔅􊔙􊔭􊕁􊕕􊕩􊕽􊖑􊖥􊖹􊗍􊗡􊗵􊘉􊘝􊘱􊙅􊙙􊙭􊚁􊚕􊚩􊚽􊛑􊛥􊛹􊜍􊜡􊜵􊝉􊝝􊝱􊞅􊞙􊞭􊟁􊟕􊟩􊟽􊠑􊠥􊠹􊡍􊡡􊡵􊢉􊢝􊢱􊣅􊣙􊣭􊤁􊤕􊤩􊤽􊥑􊥥􊥹􊦍􊦡􊦵􊧉􊧝􊧱􊨅􊨙􊨭􊩁􊩕􊩩􊩽􊪑􊪥􊪹􊫍􊫡􊫵􊬉􊬝􊬱􊭅􊭙􊭭􊮁􊮕􊮩\",\n\t\t\t\"encodedString\": \"9IqPrfSKkIH0ipCV9IqQqfSKkL30ipGR9IqRpfSKkbn0ipKN9IqSofSKkrX0ipOJ9IqTnfSKk7H0ipSF9IqUmfSKlK30ipWB9IqVlfSKlan0ipW99IqWkfSKlqX0ipa59IqXjfSKl6H0ipe19IqYifSKmJ30ipix9IqZhfSKmZn0ipmt9IqagfSKmpX0ipqp9IqavfSKm5H0ipul9IqbufSKnI30ipyh9IqctfSKnYn0ip2d9IqdsfSKnoX0ip6Z9IqerfSKn4H0ip+V9IqfqfSKn730iqCR9IqgpfSKoLn0iqGN9IqhofSKobX0iqKJ9IqinfSKorH0iqOF9IqjmfSKo630iqSB9IqklfSKpKn0iqS99IqlkfSKpaX0iqW59IqmjfSKpqH0iqa19IqnifSKp530iqex9IqohfSKqJn0iqit9IqpgfSKqZX0iqmp9IqpvfSKqpH0iqql9IqqufSKq430iquh9IqrtfSKrIn0iqyd9IqssfSKrYX0iq2Z9IqtrfSKroH0iq6V9IquqQ==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"􊮽􊯑􊯥􊯹􊰍􊰡􊰵􊱉􊱝􊱱􊲅􊲙􊲭􊳁􊳕􊳩􊳽􊴑􊴥􊴹􊵍􊵡􊵵􊶉􊶝􊶱􊷅􊷙􊷭􊸁􊸕􊸩􊸽􊹑􊹥􊹹􊺍􊺡􊺵􊻉􊻝􊻱􊼅􊼙􊼭􊽁􊽕􊽩􊽽􊾑􊾥􊾹􊿍􊿡􊿵􋀉􋀝􋀱􋁅􋁙􋁭􋂁􋂕􋂩􋂽􋃑􋃥􋃹􋄍􋄡􋄵􋅉􋅝􋅱􋆅􋆙􋆭􋇁􋇕􋇩􋇽􋈑􋈥􋈹􋉍􋉡􋉵􋊉􋊝􋊱􋋅􋋙􋋭􋌁􋌕􋌩􋌽􋍑􋍥􋍹\",\n\t\t\t\"encodedString\": \"9IquvfSKr5H0iq+l9IqvufSKsI30irCh9IqwtfSKsYn0irGd9IqxsfSKsoX0irKZ9IqyrfSKs4H0irOV9IqzqfSKs730irSR9Iq0pfSKtLn0irWN9Iq1ofSKtbX0iraJ9Iq2nfSKtrH0ireF9Iq3mfSKt630iriB9Iq4lfSKuKn0iri99Iq5kfSKuaX0irm59Iq6jfSKuqH0irq19Iq7ifSKu530irux9Iq8hfSKvJn0iryt9Iq9gfSKvZX0ir2p9Iq9vfSKvpH0ir6l9Iq+ufSKv430ir+h9Iq/tfSLgIn0i4Cd9IuAsfSLgYX0i4GZ9IuBrfSLgoH0i4KV9IuCqfSLgr30i4OR9IuDpfSLg7n0i4SN9IuEofSLhLX0i4WJ9IuFnfSLhbH0i4aF9IuGmfSLhq30i4eB9IuHlfSLh6n0i4e99IuIkfSLiKX0i4i59IuJjfSLiaH0i4m19IuKifSLip30i4qx9IuLhfSLi5n0i4ut9IuMgfSLjJX0i4yp9IuMvfSLjZH0i42l9IuNuQ==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"􋎍􋎡􋎵􋏉􋏝􋏱􋐅􋐙􋐭􋑁􋑕􋑩􋑽􋒑􋒥􋒹􋓍􋓡􋓵􋔉􋔝􋔱􋕅􋕙􋕭􋖁􋖕􋖩􋖽􋗑􋗥􋗹􋘍􋘡􋘵􋙉􋙝􋙱􋚅􋚙􋚭􋛁􋛕􋛩􋛽􋜑􋜥􋜹􋝍􋝡􋝵􋞉􋞝􋞱􋟅􋟙􋟭􋠁􋠕􋠩􋠽􋡑􋡥􋡹􋢍􋢡􋢵􋣉􋣝􋣱􋤅􋤙􋤭􋥁􋥕􋥩􋥽􋦑􋦥􋦹􋧍􋧡􋧵􋨉􋨝􋨱􋩅􋩙􋩭􋪁􋪕􋪩􋪽􋫑􋫥􋫹􋬍􋬡􋬵􋭉\",\n\t\t\t\"encodedString\": \"9IuOjfSLjqH0i4619IuPifSLj530i4+x9IuQhfSLkJn0i5Ct9IuRgfSLkZX0i5Gp9IuRvfSLkpH0i5Kl9IuSufSLk430i5Oh9IuTtfSLlIn0i5Sd9IuUsfSLlYX0i5WZ9IuVrfSLloH0i5aV9IuWqfSLlr30i5eR9IuXpfSLl7n0i5iN9IuYofSLmLX0i5mJ9IuZnfSLmbH0i5qF9IuamfSLmq30i5uB9IublfSLm6n0i5u99IuckfSLnKX0i5y59IudjfSLnaH0i5219IueifSLnp30i56x9IufhfSLn5n0i5+t9IuggfSLoJX0i6Cp9IugvfSLoZH0i6Gl9IuhufSLoo30i6Kh9IuitfSLo4n0i6Od9IujsfSLpIX0i6SZ9IukrfSLpYH0i6WV9IulqfSLpb30i6aR9IumpfSLprn0i6eN9IunofSLp7X0i6iJ9IuonfSLqLH0i6mF9IupmfSLqa30i6qB9IuqlfSLqqn0i6q99IurkfSLq6X0i6u59IusjfSLrKH0i6y19IutiQ==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"􋭝􋭱􋮅􋮙􋮭􋯁􋯕􋯩􋯽􋰑􋰥􋰹􋱍􋱡􋱵􋲉􋲝􋲱􋳅􋳙􋳭􋴁􋴕􋴩􋴽􋵑􋵥􋵹􋶍􋶡􋶵􋷉􋷝􋷱􋸅􋸙􋸭􋹁􋹕􋹩􋹽􋺑􋺥􋺹􋻍􋻡􋻵􋼉􋼝􋼱􋽅􋽙􋽭􋾁􋾕􋾩􋾽􋿑􋿥􋿹􌀍􌀡􌀵􌁉􌁝􌁱􌂅􌂙􌂭􌃁􌃕􌃩􌃽􌄑􌄥􌄹􌅍􌅡􌅵􌆉􌆝􌆱􌇅􌇙􌇭􌈁􌈕􌈩􌈽􌉑􌉥􌉹􌊍􌊡􌊵􌋉􌋝􌋱􌌅􌌙\",\n\t\t\t\"encodedString\": \"9IutnfSLrbH0i66F9IuumfSLrq30i6+B9IuvlfSLr6n0i6+99IuwkfSLsKX0i7C59IuxjfSLsaH0i7G19IuyifSLsp30i7Kx9IuzhfSLs5n0i7Ot9Iu0gfSLtJX0i7Sp9Iu0vfSLtZH0i7Wl9Iu1ufSLto30i7ah9Iu2tfSLt4n0i7ed9Iu3sfSLuIX0i7iZ9Iu4rfSLuYH0i7mV9Iu5qfSLub30i7qR9Iu6pfSLurn0i7uN9Iu7ofSLu7X0i7yJ9Iu8nfSLvLH0i72F9Iu9mfSLva30i76B9Iu+lfSLvqn0i7699Iu/kfSLv6X0i7+59IyAjfSMgKH0jIC19IyBifSMgZ30jIGx9IyChfSMgpn0jIKt9IyDgfSMg5X0jIOp9IyDvfSMhJH0jISl9IyEufSMhY30jIWh9IyFtfSMhon0jIad9IyGsfSMh4X0jIeZ9IyHrfSMiIH0jIiV9IyIqfSMiL30jImR9IyJpfSMibn0jIqN9IyKofSMirX0jIuJ9IyLnfSMi7H0jIyF9IyMmQ==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"􌌭􌍁􌍕􌍩􌍽􌎑􌎥􌎹􌏍􌏡􌏵􌐉􌐝􌐱􌑅􌑙􌑭􌒁􌒕􌒩􌒽􌓑􌓥􌓹􌔍􌔡􌔵􌕉􌕝􌕱􌖅􌖙􌖭􌗁􌗕􌗩􌗽􌘑􌘥􌘹􌙍􌙡􌙵􌚉􌚝􌚱􌛅􌛙􌛭􌜁􌜕􌜩􌜽􌝑􌝥􌝹􌞍􌞡􌞵􌟉􌟝􌟱􌠅􌠙􌠭􌡁􌡕􌡩􌡽􌢑􌢥􌢹􌣍􌣡􌣵􌤉􌤝􌤱􌥅􌥙􌥭􌦁􌦕􌦩􌦽􌧑􌧥􌧹􌨍􌨡􌨵􌩉􌩝􌩱􌪅􌪙􌪭􌫁􌫕􌫩\",\n\t\t\t\"encodedString\": \"9IyMrfSMjYH0jI2V9IyNqfSMjb30jI6R9IyOpfSMjrn0jI+N9IyPofSMj7X0jJCJ9IyQnfSMkLH0jJGF9IyRmfSMka30jJKB9IySlfSMkqn0jJK99IyTkfSMk6X0jJO59IyUjfSMlKH0jJS19IyVifSMlZ30jJWx9IyWhfSMlpn0jJat9IyXgfSMl5X0jJep9IyXvfSMmJH0jJil9IyYufSMmY30jJmh9IyZtfSMmon0jJqd9IyasfSMm4X0jJuZ9IybrfSMnIH0jJyV9IycqfSMnL30jJ2R9IydpfSMnbn0jJ6N9IyeofSMnrX0jJ+J9IyfnfSMn7H0jKCF9IygmfSMoK30jKGB9IyhlfSMoan0jKG99IyikfSMoqX0jKK59IyjjfSMo6H0jKO19IykifSMpJ30jKSx9IylhfSMpZn0jKWt9IymgfSMppX0jKap9IymvfSMp5H0jKel9IynufSMqI30jKih9IyotfSMqYn0jKmd9IypsfSMqoX0jKqZ9IyqrfSMq4H0jKuV9IyrqQ==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"􌫽􌬑􌬥􌬹􌭍􌭡􌭵􌮉􌮝􌮱􌯅􌯙􌯭􌰁􌰕􌰩􌰽􌱑􌱥􌱹􌲍􌲡􌲵􌳉􌳝􌳱􌴅􌴙􌴭􌵁􌵕􌵩􌵽􌶑􌶥􌶹􌷍􌷡􌷵􌸉􌸝􌸱􌹅􌹙􌹭􌺁􌺕􌺩􌺽􌻑􌻥􌻹􌼍􌼡􌼵􌽉􌽝􌽱􌾅􌾙􌾭􌿁􌿕􌿩􌿽􍀑􍀥􍀹􍁍􍁡􍁵􍂉􍂝􍂱􍃅􍃙􍃭􍄁􍄕􍄩􍄽􍅑􍅥􍅹􍆍􍆡􍆵􍇉􍇝􍇱􍈅􍈙􍈭􍉁􍉕􍉩􍉽􍊑􍊥􍊹\",\n\t\t\t\"encodedString\": \"9IyrvfSMrJH0jKyl9IysufSMrY30jK2h9IyttfSMron0jK6d9IyusfSMr4X0jK+Z9IyvrfSMsIH0jLCV9IywqfSMsL30jLGR9IyxpfSMsbn0jLKN9IyyofSMsrX0jLOJ9IyznfSMs7H0jLSF9Iy0mfSMtK30jLWB9Iy1lfSMtan0jLW99Iy2kfSMtqX0jLa59Iy3jfSMt6H0jLe19Iy4ifSMuJ30jLix9Iy5hfSMuZn0jLmt9Iy6gfSMupX0jLqp9Iy6vfSMu5H0jLul9Iy7ufSMvI30jLyh9Iy8tfSMvYn0jL2d9Iy9sfSMvoX0jL6Z9Iy+rfSMv4H0jL+V9Iy/qfSMv730jYCR9I2ApfSNgLn0jYGN9I2BofSNgbX0jYKJ9I2CnfSNgrH0jYOF9I2DmfSNg630jYSB9I2ElfSNhKn0jYS99I2FkfSNhaX0jYW59I2GjfSNhqH0jYa19I2HifSNh530jYex9I2IhfSNiJn0jYit9I2JgfSNiZX0jYmp9I2JvfSNipH0jYql9I2KuQ==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"􍋍􍋡􍋵􍌉􍌝􍌱􍍅􍍙􍍭􍎁􍎕􍎩􍎽􍏑􍏥􍏹􍐍􍐡􍐵􍑉􍑝􍑱􍒅􍒙􍒭􍓁􍓕􍓩􍓽􍔑􍔥􍔹􍕍􍕡􍕵􍖉􍖝􍖱􍗅􍗙􍗭􍘁􍘕􍘩􍘽􍙑􍙥􍙹􍚍􍚡􍚵􍛉􍛝􍛱􍜅􍜙􍜭􍝁􍝕􍝩􍝽􍞑􍞥􍞹􍟍􍟡􍟵􍠉􍠝􍠱􍡅􍡙􍡭􍢁􍢕􍢩􍢽􍣑􍣥􍣹􍤍􍤡􍤵􍥉􍥝􍥱􍦅􍦙􍦭􍧁􍧕􍧩􍧽􍨑􍨥􍨹􍩍􍩡􍩵􍪉\",\n\t\t\t\"encodedString\": \"9I2LjfSNi6H0jYu19I2MifSNjJ30jYyx9I2NhfSNjZn0jY2t9I2OgfSNjpX0jY6p9I2OvfSNj5H0jY+l9I2PufSNkI30jZCh9I2QtfSNkYn0jZGd9I2RsfSNkoX0jZKZ9I2SrfSNk4H0jZOV9I2TqfSNk730jZSR9I2UpfSNlLn0jZWN9I2VofSNlbX0jZaJ9I2WnfSNlrH0jZeF9I2XmfSNl630jZiB9I2YlfSNmKn0jZi99I2ZkfSNmaX0jZm59I2ajfSNmqH0jZq19I2bifSNm530jZux9I2chfSNnJn0jZyt9I2dgfSNnZX0jZ2p9I2dvfSNnpH0jZ6l9I2eufSNn430jZ+h9I2ftfSNoIn0jaCd9I2gsfSNoYX0jaGZ9I2hrfSNooH0jaKV9I2iqfSNor30jaOR9I2jpfSNo7n0jaSN9I2kofSNpLX0jaWJ9I2lnfSNpbH0jaaF9I2mmfSNpq30jaeB9I2nlfSNp6n0jae99I2okfSNqKX0jai59I2pjfSNqaH0jam19I2qiQ==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"􍪝􍪱􍫅􍫙􍫭􍬁􍬕􍬩􍬽􍭑􍭥􍭹􍮍􍮡􍮵􍯉􍯝􍯱􍰅􍰙􍰭􍱁􍱕􍱩􍱽􍲑􍲥􍲹􍳍􍳡􍳵􍴉􍴝􍴱􍵅􍵙􍵭􍶁􍶕􍶩􍶽􍷑􍷥􍷹􍸍􍸡􍸵􍹉􍹝􍹱􍺅􍺙􍺭􍻁􍻕􍻩􍻽􍼑􍼥􍼹􍽍􍽡􍽵􍾉􍾝􍾱􍿅􍿙􍿭􎀁􎀕􎀩􎀽􎁑􎁥􎁹􎂍􎂡􎂵􎃉􎃝􎃱􎄅􎄙􎄭􎅁􎅕􎅩􎅽􎆑􎆥􎆹􎇍􎇡􎇵􎈉􎈝􎈱􎉅􎉙\",\n\t\t\t\"encodedString\": \"9I2qnfSNqrH0jauF9I2rmfSNq630jayB9I2slfSNrKn0jay99I2tkfSNraX0ja259I2ujfSNrqH0ja619I2vifSNr530ja+x9I2whfSNsJn0jbCt9I2xgfSNsZX0jbGp9I2xvfSNspH0jbKl9I2yufSNs430jbOh9I2ztfSNtIn0jbSd9I20sfSNtYX0jbWZ9I21rfSNtoH0jbaV9I22qfSNtr30jbeR9I23pfSNt7n0jbiN9I24ofSNuLX0jbmJ9I25nfSNubH0jbqF9I26mfSNuq30jbuB9I27lfSNu6n0jbu99I28kfSNvKX0jby59I29jfSNvaH0jb219I2+ifSNvp30jb6x9I2/hfSNv5n0jb+t9I6AgfSOgJX0joCp9I6AvfSOgZH0joGl9I6BufSOgo30joKh9I6CtfSOg4n0joOd9I6DsfSOhIX0joSZ9I6ErfSOhYH0joWV9I6FqfSOhb30joaR9I6GpfSOhrn0joeN9I6HofSOh7X0joiJ9I6InfSOiLH0jomF9I6JmQ==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"􎉭􎊁􎊕􎊩􎊽􎋑􎋥􎋹􎌍􎌡􎌵􎍉􎍝􎍱􎎅􎎙􎎭􎏁􎏕􎏩􎏽􎐑􎐥􎐹􎑍􎑡􎑵􎒉􎒝􎒱􎓅􎓙􎓭􎔁􎔕􎔩􎔽􎕑􎕥􎕹􎖍􎖡􎖵􎗉􎗝􎗱􎘅􎘙􎘭􎙁􎙕􎙩􎙽􎚑􎚥􎚹􎛍􎛡􎛵􎜉􎜝􎜱􎝅􎝙􎝭􎞁􎞕􎞩􎞽􎟑􎟥􎟹􎠍􎠡􎠵􎡉􎡝􎡱􎢅􎢙􎢭􎣁􎣕􎣩􎣽􎤑􎤥􎤹􎥍􎥡􎥵􎦉􎦝􎦱􎧅􎧙􎧭􎨁􎨕􎨩\",\n\t\t\t\"encodedString\": \"9I6JrfSOioH0joqV9I6KqfSOir30jouR9I6LpfSOi7n0joyN9I6MofSOjLX0jo2J9I6NnfSOjbH0jo6F9I6OmfSOjq30jo+B9I6PlfSOj6n0jo+99I6QkfSOkKX0jpC59I6RjfSOkaH0jpG19I6SifSOkp30jpKx9I6ThfSOk5n0jpOt9I6UgfSOlJX0jpSp9I6UvfSOlZH0jpWl9I6VufSOlo30jpah9I6WtfSOl4n0jped9I6XsfSOmIX0jpiZ9I6YrfSOmYH0jpmV9I6ZqfSOmb30jpqR9I6apfSOmrn0jpuN9I6bofSOm7X0jpyJ9I6cnfSOnLH0jp2F9I6dmfSOna30jp6B9I6elfSOnqn0jp699I6fkfSOn6X0jp+59I6gjfSOoKH0jqC19I6hifSOoZ30jqGx9I6ihfSOopn0jqKt9I6jgfSOo5X0jqOp9I6jvfSOpJH0jqSl9I6kufSOpY30jqWh9I6ltfSOpon0jqad9I6msfSOp4X0jqeZ9I6nrfSOqIH0jqiV9I6oqQ==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"􎨽􎩑􎩥􎩹􎪍􎪡􎪵􎫉􎫝􎫱􎬅􎬙􎬭􎭁􎭕􎭩􎭽􎮑􎮥􎮹􎯍􎯡􎯵􎰉􎰝􎰱􎱅􎱙􎱭􎲁􎲕􎲩􎲽􎳑􎳥􎳹􎴍􎴡􎴵􎵉􎵝􎵱􎶅􎶙􎶭􎷁􎷕􎷩􎷽􎸑􎸥􎸹􎹍􎹡􎹵􎺉􎺝􎺱􎻅􎻙􎻭􎼁􎼕􎼩􎼽􎽑􎽥􎽹􎾍􎾡􎾵􎿉􎿝􎿱􏀅􏀙􏀭􏁁􏁕􏁩􏁽􏂑􏂥􏂹􏃍􏃡􏃵􏄉􏄝􏄱􏅅􏅙􏅭􏆁􏆕􏆩􏆽􏇑􏇥􏇹\",\n\t\t\t\"encodedString\": \"9I6ovfSOqZH0jqml9I6pufSOqo30jqqh9I6qtfSOq4n0jqud9I6rsfSOrIX0jqyZ9I6srfSOrYH0jq2V9I6tqfSOrb30jq6R9I6upfSOrrn0jq+N9I6vofSOr7X0jrCJ9I6wnfSOsLH0jrGF9I6xmfSOsa30jrKB9I6ylfSOsqn0jrK99I6zkfSOs6X0jrO59I60jfSOtKH0jrS19I61ifSOtZ30jrWx9I62hfSOtpn0jrat9I63gfSOt5X0jrep9I63vfSOuJH0jril9I64ufSOuY30jrmh9I65tfSOuon0jrqd9I66sfSOu4X0jruZ9I67rfSOvIH0jryV9I68qfSOvL30jr2R9I69pfSOvbn0jr6N9I6+ofSOvrX0jr+J9I6/nfSOv7H0j4CF9I+AmfSPgK30j4GB9I+BlfSPgan0j4G99I+CkfSPgqX0j4K59I+DjfSPg6H0j4O19I+EifSPhJ30j4Sx9I+FhfSPhZn0j4Wt9I+GgfSPhpX0j4ap9I+GvfSPh5H0j4el9I+HuQ==\"\n\t\t},\n\t\t{\n\t\t\t\"string\": \"􏈍􏈡􏈵􏉉􏉝􏉱􏊅􏊙􏊭􏋁􏋕􏋩􏋽􏌑􏌥􏌹􏍍􏍡􏍵􏎉􏎝􏎱􏏅􏏙􏏭􏐁􏐕􏐩􏐽􏑑􏑥􏑹􏒍􏒡􏒵􏓉􏓝􏓱􏔅􏔙􏔭􏕁􏕕􏕩􏕽􏖑􏖥􏖹􏗍􏗡􏗵􏘉􏘝􏘱􏙅􏙙􏙭􏚁􏚕􏚩􏚽􏛑􏛥􏛹􏜍􏜡􏜵􏝉􏝝􏝱􏞅􏞙􏞭􏟁􏟕􏟩􏟽􏠑􏠥􏠹􏡍􏡡􏡵􏢉􏢝􏢱􏣅􏣙􏣭􏤁􏤕􏤩􏤽􏥑􏥥􏥹􏦍􏦡􏦵􏧉\",\n\t\t\t\"encodedString\": \"9I+IjfSPiKH0j4i19I+JifSPiZ30j4mx9I+KhfSPipn0j4qt9I+LgfSPi5X0j4up9I+LvfSPjJH0j4yl9I+MufSPjY30j42h9I+NtfSPjon0j46d9I+OsfSPj4X0j4+Z9I+PrfSPkIH0j5CV9I+QqfSPkL30j5GR9I+RpfSPkbn0j5KN9I+SofSPkrX0j5OJ9I+TnfSPk7H0j5SF9I+UmfSPlK30j5WB9I+VlfSPlan0j5W99I+WkfSPlqX0j5a59I+XjfSPl6H0j5e19I+YifSPmJ30j5ix9I+ZhfSPmZn0j5mt9I+agfSPmpX0j5qp9I+avfSPm5H0j5ul9I+bufSPnI30j5yh9I+ctfSPnYn0j52d9I+dsfSPnoX0j56Z9I+erfSPn4H0j5+V9I+fqfSPn730j6CR9I+gpfSPoLn0j6GN9I+hofSPobX0j6KJ9I+infSPorH0j6OF9I+jmfSPo630j6SB9I+klfSPpKn0j6S99I+lkfSPpaX0j6W59I+mjfSPpqH0j6a19I+niQ==\"\n\t\t}\n\t],\n\t\"bcrypt128Tests\": [\n\t\t{\n\t\t\t\"password\": \"?\",\n\t\t\t\"keyHex\": \"23c569a93f0ac035f234cef6ba0e75c8\",\n\t\t\t\"saltHex\": \"70a3a46809da33a4adf06c6b641d2889\"\n\t\t},\n\t\t{\n\t\t\t\"password\": \"%\",\n\t\t\t\"keyHex\": \"d0826126bc730b0b56cb3916a34c2a92\",\n\t\t\t\"saltHex\": \"70a3a46809da33a4adf06c6b641d2889\"\n\t\t},\n\t\t{\n\t\t\t\"password\": \"€uropa\",\n\t\t\t\"keyHex\": \"99a05f635111b1c61345a596ada2ab1c\",\n\t\t\t\"saltHex\": \"70a3a46809da33a4adf06c6b641d2889\"\n\t\t},\n\t\t{\n\t\t\t\"password\": \"?uropa\",\n\t\t\t\"keyHex\": \"c7d889fa7cfab2a6b8f8d4857c4a7729\",\n\t\t\t\"saltHex\": \"70a3a46809da33a4adf06c6b641d2889\"\n\t\t},\n\t\t{\n\t\t\t\"password\": \"This passphrase is relatively long, I hope I won't forget it\",\n\t\t\t\"keyHex\": \"fe79147a4a43d7818c7ab4a9015a4652\",\n\t\t\t\"saltHex\": \"70a3a46809da33a4adf06c6b641d2889\"\n\t\t},\n\t\t{\n\t\t\t\"password\": \"This passphrase is relatively long, I hope I won't forget it!\",\n\t\t\t\"keyHex\": \"eff5a87268689f4734241ba8167e39dc\",\n\t\t\t\"saltHex\": \"70a3a46809da33a4adf06c6b641d2889\"\n\t\t}\n\t],\n\t\"bcrypt256Tests\": [\n\t\t{\n\t\t\t\"password\": \"?\",\n\t\t\t\"keyHex\": \"757697e258bb8534a523480c52a413c674c2a4b315d1dd1ae4dc340e230aa281\",\n\t\t\t\"saltHex\": \"0cf4cb1e6e733fee1d662a1c8c124be0\"\n\t\t},\n\t\t{\n\t\t\t\"password\": \"%\",\n\t\t\t\"keyHex\": \"f3ab0b8e0d93f9df85a124fe4577d9d192098c2e168cb0d5bf895682d0cc04f7\",\n\t\t\t\"saltHex\": \"0cf4cb1e6e733fee1d662a1c8c124be0\"\n\t\t},\n\t\t{\n\t\t\t\"password\": \"€uropa\",\n\t\t\t\"keyHex\": \"41f0026080e20d118aa9576bc80f5cc1c6bfb5f18921010375ef141f6d2b643f\",\n\t\t\t\"saltHex\": \"0cf4cb1e6e733fee1d662a1c8c124be0\"\n\t\t},\n\t\t{\n\t\t\t\"password\": \"?uropa\",\n\t\t\t\"keyHex\": \"85edd807ee13e9848c48dfec99f41800447965dd1da4252a5ec46723ca2a466a\",\n\t\t\t\"saltHex\": \"0cf4cb1e6e733fee1d662a1c8c124be0\"\n\t\t},\n\t\t{\n\t\t\t\"password\": \"This passphrase is relatively long, I hope I won't forget it\",\n\t\t\t\"keyHex\": \"f7261eceed9e6f19c06451bc7f0df82ef71c3963f7acae30225adcd19dac15ad\",\n\t\t\t\"saltHex\": \"0cf4cb1e6e733fee1d662a1c8c124be0\"\n\t\t},\n\t\t{\n\t\t\t\"password\": \"This passphrase is relatively long, I hope I won't forget it!\",\n\t\t\t\"keyHex\": \"52dfed73d1d0fe0800a3d6cdf96548ce4a478f29405569d77445a6ce5b7facef\",\n\t\t\t\"saltHex\": \"0cf4cb1e6e733fee1d662a1c8c124be0\"\n\t\t}\n\t],\n\t\"argon2idTests\": [\n\t\t{\n\t\t\t\"password\": \"?\",\n\t\t\t\"keyHex\": \"80b6498c2a7cfa5fe3e269b5105be923eb2e2e268877be382a7f79278408800f\",\n\t\t\t\"saltHex\": \"94963f84e8297bccdd0867f4ef27902d\"\n\t\t},\n\t\t{\n\t\t\t\"password\": \"%\",\n\t\t\t\"keyHex\": \"93e2ba40f0af9209d34ebe126ff4a2243f4eedc49f6303d4470f89c5ea338132\",\n\t\t\t\"saltHex\": \"94963f84e8297bccdd0867f4ef27902d\"\n\t\t},\n\t\t{\n\t\t\t\"password\": \"€uropa\",\n\t\t\t\"keyHex\": \"3b77614ea5eb3c1e48cac2eaf22721a99dffa1ae16748c44acdd6aae51fb02f7\",\n\t\t\t\"saltHex\": \"94963f84e8297bccdd0867f4ef27902d\"\n\t\t},\n\t\t{\n\t\t\t\"password\": \"?uropa\",\n\t\t\t\"keyHex\": \"f10c316d509adaf3fe48c5ba5a95706df9d8625cb4021c5318ff2dbf6eb38242\",\n\t\t\t\"saltHex\": \"94963f84e8297bccdd0867f4ef27902d\"\n\t\t},\n\t\t{\n\t\t\t\"password\": \"This passphrase is relatively long, I hope I won't forget it\",\n\t\t\t\"keyHex\": \"576077f6c5ffd26def74de30d8078a057192f9c9d1e03e3d13a16e95cff9e06c\",\n\t\t\t\"saltHex\": \"94963f84e8297bccdd0867f4ef27902d\"\n\t\t},\n\t\t{\n\t\t\t\"password\": \"This passphrase is relatively long, I hope I won't forget it!\",\n\t\t\t\"keyHex\": \"9e9b7a75d26f51cc531722ea7ca6b85990f470d44754ad03ba656af9bbb7c96e\",\n\t\t\t\"saltHex\": \"94963f84e8297bccdd0867f4ef27902d\"\n\t\t}\n\t],\n\t\"compressionTests\": [\n\t\t{\n\t\t\t\"uncompressedText\": \"\",\n\t\t\t\"compressedBase64TextJava\": \"\",\n\t\t\t\"compressedBase64TextJavaScript\": \"\",\n\t\t\t\"compressedBase64TextRust\": \"\"\n\t\t},\n\t\t{\n\t\t\t\"uncompressedText\": \"a\",\n\t\t\t\"compressedBase64TextJava\": \"EGE=\",\n\t\t\t\"compressedBase64TextJavaScript\": \"EGE=\",\n\t\t\t\"compressedBase64TextRust\": \"EGE=\"\n\t\t},\n\t\t{\n\t\t\t\"uncompressedText\": \"ab\",\n\t\t\t\"compressedBase64TextJava\": \"IGFi\",\n\t\t\t\"compressedBase64TextJavaScript\": \"IGFi\",\n\t\t\t\"compressedBase64TextRust\": \"IGFi\"\n\t\t},\n\t\t{\n\t\t\t\"uncompressedText\": \"aba\",\n\t\t\t\"compressedBase64TextJava\": \"MGFiYQ==\",\n\t\t\t\"compressedBase64TextJavaScript\": \"MGFiYQ==\",\n\t\t\t\"compressedBase64TextRust\": \"MGFiYQ==\"\n\t\t},\n\t\t{\n\t\t\t\"uncompressedText\": \"abab\",\n\t\t\t\"compressedBase64TextJava\": \"QGFiYWI=\",\n\t\t\t\"compressedBase64TextJavaScript\": \"QGFiYWI=\",\n\t\t\t\"compressedBase64TextRust\": \"QGFiYWI=\"\n\t\t},\n\t\t{\n\t\t\t\"uncompressedText\": \"ababa\",\n\t\t\t\"compressedBase64TextJava\": \"UGFiYWJh\",\n\t\t\t\"compressedBase64TextJavaScript\": \"UGFiYWJh\",\n\t\t\t\"compressedBase64TextRust\": \"UGFiYWJh\"\n\t\t},\n\t\t{\n\t\t\t\"uncompressedText\": \"ababab\",\n\t\t\t\"compressedBase64TextJava\": \"YGFiYWJhYg==\",\n\t\t\t\"compressedBase64TextJavaScript\": \"YGFiYWJhYg==\",\n\t\t\t\"compressedBase64TextRust\": \"YGFiYWJhYg==\"\n\t\t},\n\t\t{\n\t\t\t\"uncompressedText\": \"abababa\",\n\t\t\t\"compressedBase64TextJava\": \"cGFiYWJhYmE=\",\n\t\t\t\"compressedBase64TextJavaScript\": \"cGFiYWJhYmE=\",\n\t\t\t\"compressedBase64TextRust\": \"cGFiYWJhYmE=\"\n\t\t},\n\t\t{\n\t\t\t\"uncompressedText\": \"abababab\",\n\t\t\t\"compressedBase64TextJava\": \"gGFiYWJhYmFi\",\n\t\t\t\"compressedBase64TextJavaScript\": \"gGFiYWJhYmFi\",\n\t\t\t\"compressedBase64TextRust\": \"gGFiYWJhYmFi\"\n\t\t},\n\t\t{\n\t\t\t\"uncompressedText\": \"ababababa\",\n\t\t\t\"compressedBase64TextJava\": \"kGFiYWJhYmFiYQ==\",\n\t\t\t\"compressedBase64TextJavaScript\": \"kGFiYWJhYmFiYQ==\",\n\t\t\t\"compressedBase64TextRust\": \"kGFiYWJhYmFiYQ==\"\n\t\t},\n\t\t{\n\t\t\t\"uncompressedText\": \"ababababab\",\n\t\t\t\"compressedBase64TextJava\": \"oGFiYWJhYmFiYWI=\",\n\t\t\t\"compressedBase64TextJavaScript\": \"oGFiYWJhYmFiYWI=\",\n\t\t\t\"compressedBase64TextRust\": \"oGFiYWJhYmFiYWI=\"\n\t\t},\n\t\t{\n\t\t\t\"uncompressedText\": \"abababababa\",\n\t\t\t\"compressedBase64TextJava\": \"sGFiYWJhYmFiYWJh\",\n\t\t\t\"compressedBase64TextJavaScript\": \"sGFiYWJhYmFiYWJh\",\n\t\t\t\"compressedBase64TextRust\": \"sGFiYWJhYmFiYWJh\"\n\t\t},\n\t\t{\n\t\t\t\"uncompressedText\": \"abababababab\",\n\t\t\t\"compressedBase64TextJava\": \"wGFiYWJhYmFiYWJhYg==\",\n\t\t\t\"compressedBase64TextJavaScript\": \"wGFiYWJhYmFiYWJhYg==\",\n\t\t\t\"compressedBase64TextRust\": \"wGFiYWJhYmFiYWJhYg==\"\n\t\t},\n\t\t{\n\t\t\t\"uncompressedText\": \"ababababababa\",\n\t\t\t\"compressedBase64TextJava\": \"0GFiYWJhYmFiYWJhYmE=\",\n\t\t\t\"compressedBase64TextJavaScript\": \"0GFiYWJhYmFiYWJhYmE=\",\n\t\t\t\"compressedBase64TextRust\": \"0GFiYWJhYmFiYWJhYmE=\"\n\t\t},\n\t\t{\n\t\t\t\"uncompressedText\": \"ababababababab\",\n\t\t\t\"compressedBase64TextJava\": \"4GFiYWJhYmFiYWJhYmFi\",\n\t\t\t\"compressedBase64TextJavaScript\": \"4GFiYWJhYmFiYWJhYmFi\",\n\t\t\t\"compressedBase64TextRust\": \"ImFiAgBgYWJhYmFi\"\n\t\t},\n\t\t{\n\t\t\t\"uncompressedText\": \"abababababababa\",\n\t\t\t\"compressedBase64TextJava\": \"JGFiAgBQYWJhYmE=\",\n\t\t\t\"compressedBase64TextJavaScript\": \"8ABhYmFiYWJhYmFiYWJhYmE=\",\n\t\t\t\"compressedBase64TextRust\": \"I2FiAgBgYmFiYWJh\"\n\t\t},\n\t\t{\n\t\t\t\"uncompressedText\": \"abababababababab\",\n\t\t\t\"compressedBase64TextJava\": \"JWFiAgBQYmFiYWI=\",\n\t\t\t\"compressedBase64TextJavaScript\": \"8AFhYmFiYWJhYmFiYWJhYmFi\",\n\t\t\t\"compressedBase64TextRust\": \"JGFiAgBgYWJhYmFi\"\n\t\t},\n\t\t{\n\t\t\t\"uncompressedText\": \"ababababababababa\",\n\t\t\t\"compressedBase64TextJava\": \"JmFiAgBQYWJhYmE=\",\n\t\t\t\"compressedBase64TextJavaScript\": \"8AJhYmFiYWJhYmFiYWJhYmFiYQ==\",\n\t\t\t\"compressedBase64TextRust\": \"JWFiAgBgYmFiYWJh\"\n\t\t},\n\t\t{\n\t\t\t\"uncompressedText\": \"ababababababababab\",\n\t\t\t\"compressedBase64TextJava\": \"J2FiAgBQYmFiYWI=\",\n\t\t\t\"compressedBase64TextJavaScript\": \"8ANhYmFiYWJhYmFiYWJhYmFiYWI=\",\n\t\t\t\"compressedBase64TextRust\": \"JmFiAgBgYWJhYmFi\"\n\t\t},\n\t\t{\n\t\t\t\"uncompressedText\": \"abababababababababa\",\n\t\t\t\"compressedBase64TextJava\": \"KGFiAgBQYWJhYmE=\",\n\t\t\t\"compressedBase64TextJavaScript\": \"IWFiAgDAYmFiYWJhYmFiYWJh\",\n\t\t\t\"compressedBase64TextRust\": \"J2FiAgBgYmFiYWJh\"\n\t\t},\n\t\t{\n\t\t\t\"uncompressedText\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Tempor orci eu lobortis elementum nibh. Nibh tellus molestie nunc non blandit. Varius quam quisque id diam vel quam. Sit amet aliquam id diam maecenas ultricies mi eget. Erat pellentesque adipiscing commodo elit at imperdiet dui accumsan. Suspendisse ultrices gravida dictum fusce ut placerat orci nulla. Et malesuada fames ac turpis egestas integer eget aliquet nibh. Vitae purus faucibus ornare suspendisse. Ullamcorper eget nulla facilisi etiam dignissim diam quis enim. Volutpat maecenas volutpat blandit aliquam. Cursus turpis massa tincidunt dui ut ornare. A diam maecenas sed enim ut sem viverra.\\n\\nSit amet nisl suscipit adipiscing bibendum est ultricies integer. Pretium vulputate sapien nec sagittis aliquam malesuada. Convallis aenean et tortor at risus viverra adipiscing at in. Euismod lacinia at quis risus sed. Dis parturient montes nascetur ridiculus mus mauris vitae ultricies. Varius duis at consectetur lorem donec. Urna nunc id cursus metus. Sed faucibus turpis in eu mi bibendum neque egestas congue. Gravida in fermentum et sollicitudin ac orci. Sed sed risus pretium quam. Nunc scelerisque viverra mauris in aliquam sem fringilla. Lectus vestibulum mattis ullamcorper velit sed. Amet commodo nulla facilisi nullam vehicula ipsum. Iaculis eu non diam phasellus vestibulum lorem. Felis bibendum ut tristique et egestas. Lobortis mattis aliquam faucibus purus in massa. Nisi vitae suscipit tellus mauris a diam maecenas sed. Velit sed ullamcorper morbi tincidunt ornare massa.\\n\\nUt pharetra sit amet aliquam id diam maecenas ultricies mi. Dolor sit amet consectetur adipiscing elit pellentesque habitant morbi tristique. Consectetur adipiscing elit pellentesque habitant. Vel orci porta non pulvinar. Gravida cum sociis natoque penatibus et magnis. Eget egestas purus viverra accumsan in nisl nisi scelerisque. Erat nam at lectus urna duis convallis. Bibendum est ultricies integer quis auctor. Enim ut tellus elementum sagittis vitae et leo duis. Tellus elementum sagittis vitae et leo duis. Sem fringilla ut morbi tincidunt.\\n\\nEgestas diam in arcu cursus euismod quis viverra. Amet luctus venenatis lectus magna fringilla urna porttitor. Egestas sed sed risus pretium quam. Turpis massa tincidunt dui ut ornare. Convallis tellus id interdum velit laoreet id donec ultrices. Egestas sed sed risus pretium quam vulputate dignissim suspendisse. Rhoncus urna neque viverra justo nec ultrices. Sapien pellentesque habitant morbi tristique senectus et. Phasellus vestibulum lorem sed risus ultricies tristique nulla aliquet. Odio ut enim blandit volutpat maecenas volutpat blandit. Vulputate eu scelerisque felis imperdiet proin fermentum leo vel. Vitae ultricies leo integer malesuada nunc vel risus. Auctor elit sed vulputate mi sit amet mauris commodo quis.\\n\\nTurpis in eu mi bibendum neque egestas congue quisque egestas. Tincidunt praesent semper feugiat nibh. Ante in nibh mauris cursus mattis molestie a. Urna porttitor rhoncus dolor purus. Feugiat in fermentum posuere urna nec tincidunt. Pellentesque massa placerat duis ultricies lacus sed turpis tincidunt. Amet dictum sit amet justo donec enim diam vulputate ut. Egestas purus viverra accumsan in. Elementum sagittis vitae et leo. Euismod quis viverra nibh cras pulvinar mattis nunc. Ultricies mi eget mauris pharetra et ultrices. Mauris vitae ultricies leo integer malesuada nunc vel. Justo laoreet sit amet cursus sit. Vestibulum lectus mauris ultrices eros in cursus. Nunc congue nisi vitae suscipit tellus mauris a.\",\n\t\t\t\"compressedBase64TextJava\": \"8ldMb3JlbSBpcHN1bSBkb2xvciBzaXQgYW1ldCwgY29uc2VjdGV0dXIgYWRpcGlzY2luZyBlbGl0LCBzZWQgZG8gZWl1c21vZCB0ZW1wb3IgaW5jaWRpZHVudCB1dCBsYWJvcmUgZXRbAPICZSBtYWduYSBhbGlxdWEuIFQ0APNgb3JjaSBldSBsb2JvcnRpcyBlbGVtZW50dW0gbmliaC4gTmliaCB0ZWxsdXMgbW9sZXN0aWUgbnVuYyBub24gYmxhbmRpdC4gVmFyaXVzIHF1YW0gcXVpc3F1ZSBpZCBkaWFtIHZlbCBxdWFtLiBT3wADhgAVbSMA8RptYWVjZW5hcyB1bHRyaWNpZXMgbWkgZWdldC4gRXJhdCBwZWxsZW50ZVkABxABUGNvbW1vCwEQbDoBkHQgaW1wZXJkafYA8wl1aSBhY2N1bXNhbi4gU3VzcGVuZGlzc2VkAOBlcyBncmF2aWRhIGRpY/EA4GZ1c2NlIHV0IHBsYWNldgABHgHwEm51bGxhLiBFdCBtYWxlc3VhZGEgZmFtZXMgYWMgdHVycDYB4Gdlc3RhcyBpbnRlZ2VyEAAD5QAjZXRJAfYOVml0YWUgcHVydXMgZmF1Y2lidXMgb3JuYXJlIHOeALQuIFVsbGFtY29ycEgAAYEAwCBmYWNpbGlzaSBldFUBgGRpZ25pc3NpCgADdAHgIGVuaW0uIFZvbHV0cGGvAANVARR2EgADrwECmgCkYW0uIEN1cnN1c8YAcW1hc3NhIHRIAgBGAjBkdWkPAQKlADIuIEHPAQVXAACGAgBzAAAkAOVzZW0gdml2ZXJyYS4KCugBQG5pc2zeADBjaXB3AAbIAsNiaWJlbmR1bSBlc3SRAQD1AQNAAfAVLiBQcmV0aXVtIHZ1bHB1dGF0ZSBzYXBpZW4gbmVjIHNhZ2l0rQICzQIAkwADmQHwDS4gQ29udmFsbGlzIGFlbmVhbiBldCB0b3J0b3IfAiByae8AA6kACJAAoWF0IGluLiBFdWlSA3BsYWNpbmlhMwABWgECOADwB3NlZC4gRGlzIHBhcnR1cmllbnQgbW+WAlEgbmFzY6wDYXJpZGljdS4DADIDQGF1cmlxAAD8AQXcAgUvAyBkdagAGXTtAxFsFQSyZG9uZWMuIFVybmFuA0JpZCBjrQGmbWV0dXMuIFNlZEgCA4cCIGluzAMmbWlfASBuZTEDBJ8Ck2Nvbmd1ZS4gR/kCY2luIGZlcvAD8ABldCBzb2xsaWNpdHVkaW7eAgAAAwJqAADsAQIFARNwmgECQQIQTgoEYnNjZWxlcvUDBFwBA/oAAEgAAXIEEW0jAmFmcmluZ2lQA4BMZWN0dXMgdlIEQGJ1bHXGAQHVAQBvAwQAAxB28AQA7wRQLiBBbWUpAQLvAwsTAwEPAFBtIHZlaHwBEmFTBWAuIElhY3UKAiFlda0EASkDYHBoYXNlbKABB3oAAXQBQC4gRmUuAAU8AZF1dCB0cmlzdGlDARB01QMA5QM0LiBMLQUDsgAEhwIF1wMC5gMiaW5SAzAuIE64AwIFAgUNAwRUBQIoAQCFBBBhAwEDswMBawIUVv4ACRQBV21vcmJppgMCnwMDawDVCgpVdCBwaGFyZXRyYU8GBYQBD3AFCjkuIESFBgmXAgd0BQGWAAmRBWFoYWJpdGEOAwGcAAQ2AQGPAw/HBgUK1AUEQwAB9gABeQJhIHBvcnRhugGGcHVsdmluYXK6AvAAY3VtIHNvY2lpcyBuYXRvogFAcGVuYUsCEHOsAQDtBlBpcy4gRYkFBP8CApcBBKICBB0GMiBpbqgEEG6mAQfMAgN7BjBuYW2kAxJssAIQdZIDAbgDFGNqBD8uIELOBAoCnQWTYXVjdG9yLiBFMgUDAAIGcAcF1gQCKQIQZXMAEG/HBhBzrgcBswIPLQATGFNpAwCdBQOWAQTYBUIuCgpFywIC0QUApAM0cmN1YAQTZQQFAfkEAy0BA38DI2x1tAMRbmwBFHMVAQBuARZh3QMCJQEAvwEidGn0AANvAABGBAAEAA9KBAESVEoHATIDBqwAAAABAMMAAuUCAVACA98FA0ABIWlkdQcQckwGAi4EcWxhb3JlZXTsAgBGBQNfBgB3BQT3AACEAAAEAA6IAAdxBgZiBwmfB1RSaG9uYwkCAl8FAyUBYSBqdXN0b6IGAusFAHMAElO3Bg8vAxJCIHNlbmYCX2V0LiBQqgQGABEFA7wAAmkAADsHBqsEAQ4FAvMDAEgAQE9kaW9DARBleQIEAggFEwgFcgQFEgADIwA1LiBWfAcoZXUYAyEgZigFBmsJOXByb0oGALgCNHZlbPQIBqQAABkAA+MHB00JEG5EBgAlCgHTADEuIEEqAwLTCQCmAQYECCZtadMEA2EGBBIGAK4CMy4KCkYCDwkHEwGZAwA7BAMhBDQuIFQkA2AgcHJhZXPhByBzZVMKcCBmZXVnaWHSCAAWC0JBbnRlOAQkYmjDBQSfBwLGBgUsCxNhxgcFDwMjIHJCAgLzCwGVBAB8BgJgAAlJAXJwb3N1ZXJlUAMA+ggFnAk4LiBQEgsCNgMFuAoBoAQHdwEQYbECAEsBAygIB0cAAVcHAwELBH4MA8kCAYQIAVUKAigEBogBEHWXCwPUAwHAAAT8CQVyCwJOCQVMDA/cBAIGbwkAvQEFQwABVAEhY3JbAAL3BQRUAQApAgAgCwsjDASBAQX3BidldPQDEk1hBwJVBQcUAQ+LAgoxLiBKzAMETAQFGgED5QERcyADBrsIBQgFAe8JAmYAYWVzIGVyb4wCAjYAAy4JAoUJAHMGDxQICVBpcyBhLg==\",\n\t\t\t\"compressedBase64TextJavaScript\": \"8VhMb3JlbSBpcHN1bSBkb2xvciBzaXQgYW1ldCwgY29uc2VjdGV0dXIgYWRpcGlzY2luZyBlbGl0LCBzZWQgZG8gZWl1c21vZCB0ZW1wb3IgaW5jaWRpZHVudCB1dCBsYWJvcmUgZXQgWwDyAmUgbWFnbmEgYWxpcXVhLiBUNADzYG9yY2kgZXUgbG9ib3J0aXMgZWxlbWVudHVtIG5pYmguIE5pYmggdGVsbHVzIG1vbGVzdGllIG51bmMgbm9uIGJsYW5kaXQuIFZhcml1cyBxdWFtIHF1aXNxdWUgaWQgZGlhbSB2ZWwgcXVhbS4gU98AA4YAFW0jAPEabWFlY2VuYXMgdWx0cmljaWVzIG1pIGVnZXQuIEVyYXQgcGVsbGVudGVZAAcQAVBjb21tbwsBEGxbAPMWdCBpbXBlcmRpZXQgZHVpIGFjY3Vtc2FuLiBTdXNwZW5kaXNzZWQA4GVzIGdyYXZpZGEgZGlj8QBQZnVzY2U7AVBwbGFjZXYAAR4B8BJudWxsYS4gRXQgbWFsZXN1YWRhIGZhbWVzIGFjIHR1cnA2AeFnZXN0YXMgaW50ZWdlcroAAuUAI2V0SQH2DlZpdGFlIHB1cnVzIGZhdWNpYnVzIG9ybmFyZSBzngC0LiBVbGxhbWNvcnBIAAGBAPAJIGZhY2lsaXNpIGV0aWFtIGRpZ25pc3NpCgADdAHgIGVuaW0uIFZvbHV0cGGvAANVARR2EgADrwECmgCkYW0uIEN1cnN1c8YAcW1hc3NhIHRIAiJ1bkMBI3V0pQBBLiBBIM8BBawBAIYCAHMAADMB8ABzZW0gdml2ZXJyYS4KClONARFt+wAgc2zeADBjaXATAAbIAsNiaWJlbmR1bSBlc3SRAQD1AQNAAfAVLiBQcmV0aXVtIHZ1bHB1dGF0ZSBzYXBpZW4gbmVjIHNhZ2l0rQICzQIWbZkB8AMuIENvbnZhbGxpcyBhZW5lYW4BA8B0b3J0b3IgYXQgcmnvAAOpAAhYA6FhdCBpbi4gRXVpUgNwbGFjaW5pYTMAQ3F1aXM4APAHc2VkLiBEaXMgcGFydHVyaWVudCBtb5YCUSBuYXNjrANhcmlkaWN1LgMAMgNxYXVyaXMgdvwBBdwCFC4vAxBkXAApYXTtAxFsFQSyZG9uZWMuIFVybmFuA0JpZCBjrQGmbWV0dXMuIFNlZEgCA4cCIGluzAM1bWkgXwFQbmVxdWWPAgGfApNjb25ndWUuIEf5AmNpbiBmZXLwA/AAZXQgc29sbGljaXR1ZGlu3gIAAAMCagAA7AECPQETcJoBAOsDMC4gTgoEcXNjZWxlcmmcAwRcARJt+gAASAABcgQgbSAjAmFmcmluZ2lQA4BMZWN0dXMgdlIEQGJ1bHXGAQHVAQBvAwQAAxB28AQA7wQwLiBBUAIE7wMLEwMBDwBQbSB2ZWh8ARJhUwVgLiBJYWN1CgIwZXUgrQQBvgJCcGhhc84EB3oAAXQBQC4gRmUuAAU8AZF1dCB0cmlzdGlDARR0RgE0LiBMLQUhbWGyAASHAgXXAwLmAzFpbiBSAwBFBSNzaQUCMnN1cw0DBFQFAigBAIUEEGEDAQOzAwFrAhRW/gAYIBQBV21vcmJppgMDRAQCawDVCgpVdCBwaGFyZXRyYU8GBPEDIyBpkwUFxAMFlAJpIG1pLiBEhQYJlwIHdAUBlgAJkQVhaGFiaXRhDgMBnAAENgEBjwMPxwYFCtQFBEMAYC4gVmVsIHkCYSBwb3J0YboBhnB1bHZpbmFyugLwAGN1bSBzb2NpaXMgbmF0b6IBUXBlbmF0VgUQZfwEAB8FVS4gRWdluQEDfQUEogIEHQaAIGluIG5pc2wFACdpIMwCA3sGMG5hbQgEEmywAhB1kgMBuAMUY2oEPy4gQs4ECgERB9AgYXVjdG9yLiBFbmltMgUDAAIGcAcF1gQCLgRgZXQgbGVvxwYQc64HAYEHDy0AE0VTZW0gaQMAawALMgJDLgoKRbAGARMDAKQDNHJjdWAEE2UEBQH5BAMtAQN/AyNsdbQDEW5sASNzIBUBAlsIB3QAACUBAL8BInRp9AADbwAARgQABAAPSgQBElRKBwHHAgfeAgDHBweEBgbfBQNAASFpZHUHEHJMBgIuBHFsYW9yZWV07AIARgUDXwYhZXMOAgEIBQCEAAAEAA6IAAdxBgZiBwmfB4FSaG9uY3VzIAkCAl8FAyUBYSBqdXN0b6IGAlcDAHMAElO3Bg8vAxJCIHNlbmYCAPgIH1CqBAYAEQUDkwYCaQAAOwcGqwQBDgUC8wMASABAT2RpbwYCAasHBAIIBRMIBQoEBRIAAyMANS4gVnwHKGV1GAMhIGYoBQZrCTlwcm9KBgC4AlJ2ZWwuIPQIBqQAABkAA+MHBrQHAuAGMnZlbNMAMS4gQSoDAesKAeoABgQIJm1p0wQDYQYEEgYArgIzLgoKRgIPCQcTAZkDADsEEmWgAjUuIFT8CFBwcmFlc+EHIHNlUwp0IGZldWdpYc0JQkFudGU4BDRiaCCKAAOfBwIUBgUsCxNhxgcFDwMjIHJCAgGYCwKVBAB8BgJgAAlJAXRwb3N1ZXJlbAIWYxgDOC4gUBILAjYDBbgKAaAEB3cBEGGxAgDxAgMoCAXjCQPYAwMBCwR+DAPJAgGECAFVCgL5CQaIARB1lwsCNAECwAAE/AkFcgsCTgkFTAwP3AQCBm8JAL0BBUMAAHgMZCBjcmFzIPcFEyBoBwB3DAAgCwsjDASBAQX3BhRlUwoAgQMSTWEHAlUFBxQBIWVvOQQArgsG2AsAYgAAsAwxLiBKzAMETAQFGgEDhAkgc2n0DAa7CAUIBQHvCQJmAGBlcyBlcm8UDANaBQMuCQKFCQJuBgKWAAkUCMB1cyBtYXVyaXMgYS4=\",\n\t\t\t\"compressedBase64TextRust\": \"8ldMb3JlbSBpcHN1bSBkb2xvciBzaXQgYW1ldCwgY29uc2VjdGV0dXIgYWRpcGlzY2luZyBlbGl0LCBzZWQgZG8gZWl1c21vZCB0ZW1wb3IgaW5jaWRpZHVudCB1dCBsYWJvcmUgZXRbAPICZSBtYWduYSBhbGlxdWEuIFQ0APNgb3JjaSBldSBsb2JvcnRpcyBlbGVtZW50dW0gbmliaC4gTmliaCB0ZWxsdXMgbW9sZXN0aWUgbnVuYyBub24gYmxhbmRpdC4gVmFyaXVzIHF1YW0gcXVpc3F1ZSBpZCBkaWFtIHZlbCBxdWFtLiBT3wADhgAVbSMA8RptYWVjZW5hcyB1bHRyaWNpZXMgbWkgZWdldC4gRXJhdCBwZWxsZW50ZVkABxABUGNvbW1vCwEQbFsAkHQgaW1wZXJkafYA8wl1aSBhY2N1bXNhbi4gU3VzcGVuZGlzc2VkAOBlcyBncmF2aWRhIGRpY/EAUGZ1c2NlOwFQcGxhY2V2AAEeAfEkbnVsbGEuIEV0IG1hbGVzdWFkYSBmYW1lcyBhYyB0dXJwaXMgZWdlc3RhcyBpbnRlZ2VyugAC5QAjZXRJAfYOVml0YWUgcHVydXMgZmF1Y2lidXMgb3JuYXJlIHOeALQuIFVsbGFtY29ycEgAAYEAwCBmYWNpbGlzaSBldFUBgGRpZ25pc3NpCgBQYW0gcXW8AcBuaW0uIFZvbHV0cGGvAANVARR2EgADrwECmgCkYW0uIEN1cnN1c8YAcW1hc3NhIHRIAiJ1bkMBEHUGAQClADIuIEHPAQVXAACGAkBlbmltMwHwAHNlbSB2aXZlcnJhLgoKU2QAEW37ACBzbN4AMGNpcBMABrgBw2JpYmVuZHVtIGVzdJEBAPUBA0AB8BUuIFByZXRpdW0gdnVscHV0YXRlIHNhcGllbiBuZWMgc2FnaXStAgLNAgCTAAOZAfANLiBDb252YWxsaXMgYWVuZWFuIGV0IHRvcnRvch8CIHJp7wADqQAISAKhYXQgaW4uIEV1aVIDcGxhY2luaWEzAAFaAQI4APAHc2VkLiBEaXMgcGFydHVyaWVudCBtb5YC8QEgbmFzY2V0dXIgcmlkaWN1LgMABABAYXVyaXEAAPwBBdwCBS8DEGS2ASlhdO0DEWwVBPIGZG9uZWMuIFVybmEgbnVuYyBpZCBjrQGmbWV0dXMuIFNlZEgCA4cCIGluzAMmbWlfASBuZTEDBJ8Ck2Nvbmd1ZS4gR/kCY2luIGZlcvAD8ABldCBzb2xsaWNpdHVkaW7eAgAAAwJqAADsAQIFARNwmgECQQIQTpwAYnNjZWxlcvUDBFwBA/oAAEgAAXIEEW0jAmFmcmluZ2lQA4BMZWN0dXMgdlIEQGJ1bHXGAQHVAQBvAwQAAxB28AQCeAEQQVACBO8DCxMDAQ8AUG0gdmVofAESYVMFYC4gSWFjdQoCYmV1IG5vbr4CYHBoYXNlbKABB3oAAXQBQC4gRmUuAAU8AZF1dCB0cmlzdGlDARB0jwR0c3Rhcy4gTC0FA7IABIcCBdcDAuYDImluUgMwLiBOuAMCBQIFDQMEVAUCKAEAhQQQYQMBA7MDAfMAFFb+AAkUAVdtb3JiaaYDAp8DA2sA1QoKVXQgcGhhcmV0cmFPBgWEAQ9wBQo5LiBEhQYJlwIHLAMBlgAJkQVhaGFiaXRhDgMBnAAENgEBjwMPxwYFCtQFBEMAAfYAAXkCYSBwb3J0YboBhnB1bHZpbmFyugLwAGN1bSBzb2NpaXMgbmF0b6IBQHBlbmFLAhBzrAEA7QZmaXMuIEVnuQEDfQUEogIEHQYyIGluqAQQbqYBB8wCA3sGMG5hbQgEEmywAhB1kgMBuAMUY2oEPy4gQs4ECgKdBZNhdWN0b3IuIEUyBQMAAgZwBwXWBAIpAhBlcwAQb4QFEHOuBwGzAg8tABMYU2kDAJ0FA5YBBNgFQi4KCkXLAgITAwCkAzRyY3VgBBNlBAUB+QQDLQEDfwMjbHW0AxFubAEUcxUBAG4BFmHdAwIlAQC/ASJ0afQAA28AAEYEAAQAD0oEARJUSgcBMgMGrAAAAAEAwwAC5QIBUAID3wUDQAEhaWQ1BhByTAYCLgRwbGFvcmVldDIFAUYFA18GAHcFBPcAAIQAAAQADogAB3EGBmIHCZ8HVFJob25jCQICXwUDJQFhIGp1c3RvogYC6wUAcwASU7cGDy8DEkIgc2VuZgJfZXQuIFCqBAYAEQUDvAACaQAAOwcGqwQBDgUC8wMASABAT2Rpb0MBEGV5AgQCCAUTCAVyBAUSAAMjADUuIFZ8ByhldRgDISBmKAUGawk5cHJvSgYAuAI0dmVs9AgGpAAAGQAArgEAIwkFtAcC4AYydmVs0wAxLiBBKgMC0wkApgEGBAgmbWnTBANhBgQSBgCuAjMuCgpGAg8JBxMBmQMAOwQDIAc0LiBUJANgIHByYWVz4Qcgc2VTCnQgZmV1Z2lhzQlCQW50ZTgEJGJowwUEnwcCxgYFLAsTYcYHBQ8DIyByQgIRZG4FASwGAHwGAmAACUkBcnBvc3VlcmVQAwD6CAWcCTguIFCBBQI2AwW4CgGgBAd3ARBhsQIASwEDKAgHRwABVwcDAQsEfgwDyQICPgMBNwIBnQYGiAEQdZcLA9QDAcAABPwJBXILAk4JBUwMD9wEAgZvCQC9AQVDAAFUASFjcrAFAvcFBFQBACkCACALCyMMBIEBBfcGJ2V09AMfTYMJAg+LAgwxLiBKzAMETAQFGgED5QERcyADBrsIBQgFAWwAAnoBYWVzIGVyb4wCAjYAAy4JAoUJAHMGDxQICGByaXMgYS4=\"\n\t\t},\n\t\t{\n\t\t\t\"uncompressedText\": \"ö()€ Τούτανοτα Тутасота 图塔诺塔 ツタノタ نخاعö()€ Τούτανοτα Тутасота 图塔诺塔 ツタノタ ö()€ Τούτανοτα Тутасота 图塔诺塔 ツタノタ نخاعنخاع\",\n\t\t\t\"compressedBase64TextJava\": \"8AfDtigp4oKsIM6kzr/Pjc+EzrHOvc6/CADQINCi0YPRgtCw0YHQvggA/xQg5Zu+5aGU6K+65aGUIOODhOOCv+ODjuOCvyDZhtiu2KfYuU4AMw9GADMElACA2YbYrtin2Lk=\",\n\t\t\t\"compressedBase64TextJavaScript\": \"8AfDtigp4oKsIM6kzr/Pjc+EzrHOvc6/CADQINCi0YPRgtCw0YHQvggA/xQg5Zu+5aGU6K+65aGUIOODhOOCv+ODjuOCvyDZhtiu2KfYuU4AMw9GADPwAdmG2K7Yp9i52YbYrtin2Lk=\",\n\t\t\t\"compressedBase64TextRust\": \"8AfDtigp4oKsIM6kzr/Pjc+EzrHOvc6/CADQINCi0YPRgtCw0YHQvggA/xQg5Zu+5aGU6K+65aGUIOODhOOCv+ODjuOCvyDZhtiu2KfYuU4AMw+UADuA2YbYrtin2Lk=\"\n\t\t}\n\t],\n\t\"byteArrayEncodingTests\": [\n\t\t{\n\t\t\t\"encodedByteArrayAsHex\": \"000101\",\n\t\t\t\"byteArraysAsHex\": [\"01\"],\n\t\t\t\"encodingError\": null\n\t\t},\n\t\t{\n\t\t\t\"encodedByteArrayAsHex\": \"000102000202020003020202000402020202\",\n\t\t\t\"byteArraysAsHex\": [\"02\", \"0202\", \"020202\", \"02020202\"],\n\t\t\t\"encodingError\": null\n\t\t},\n\t\t{\n\t\t\t\"encodedByteArrayAsHex\": \"00ffn\t\t\t\"byteArraysAsHex\": [\n\t\t\t\t\"050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505\"\n\t\t\t],\n\t\t\t\"encodingError\": null\n\t\t},\n\t\t{\n\t\t\t\"encodedByteArrayAsHexn\t\t\t\"byteArraysAsHex\": [\n\t\t\t\t\"06060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606\"\n\t\t\t],\n\t\t\t\"encodingError\": null\n\t\t},\n\t\t{\n\t\t\t\"encodedByteArrayAsHex\": \"n\t\t\t\"byteArraysAsHex\": [\n\t\t\t\tn\t\t\t],\n\t\t\t\"encodingError\": null\n\t\t},\n\t\t{\n\t\t\t\"encodedByteArrayAsHex\": null,\n\t\t\t\"byteArraysAsHex\": [\n\t\t\t\tn\t\t\t],\n\t\t\t\"encodingError\": \"byte array is to long for encoding\"\n\t\t}\n\t],\n\t\"hkdfTests\": [\n\t\t{\n\t\t\t\"saltHex\": \"1a3abce2a90efad29126cc993edc96e4\",\n\t\t\t\"inputKeyMaterialHex\": \"9bdac8dd34deeb8b5fed52be033b78239f1a526ac691aba6afb0ae72007d58ad1ada230906608612a01845dba044c9692f5260cb9195f6ead786cc1879cc26d8\",\n\t\t\t\"infoHex\": \"25b2f8c3d1380704\",\n\t\t\t\"lengthInBytes\": 8,\n\t\t\t\"hkdfHex\": \"3488f295d4242605\"\n\t\t},\n\t\t{\n\t\t\t\"saltHex\": \"b27d36b958ece733277afa2b04e0bb57\",\n\t\t\t\"inputKeyMaterialHex\": \"b9086c2dcfc54e392cd0f96fed4516fcb628d46af02f785c9c77735a04a5cc22358af23a9318cc97338162e7323d656fb1987d34b832e68675a3e7273f6e9386\",\n\t\t\t\"infoHex\": \"096ad0639d8d997a\",\n\t\t\t\"lengthInBytes\": 9,\n\t\t\t\"hkdfHex\": \"6f06ba0c9ea8332083\"\n\t\t},\n\t\t{\n\t\t\t\"saltHex\": \"94f8ed5bf13e687d2d4130360e972691\",\n\t\t\t\"inputKeyMaterialHex\": \"e1cf5c821defbd8622e0baa382dacaacb0d293da88eec2815746e88dc1661fd2b243f50a23e978318684ad5bf95e01ab6266e92a5bb5a9e2da90124a6f358018\",\n\t\t\t\"infoHex\": \"8260d3c5e403cbf4\",\n\t\t\t\"lengthInBytes\": 10,\n\t\t\t\"hkdfHex\": \"7ef89bee23331d23b148\"\n\t\t},\n\t\t{\n\t\t\t\"saltHex\": \"02253eefbdf86854c86b7efc08058c14\",\n\t\t\t\"inputKeyMaterialHex\": \"138ca2ac4ba26f1764638f0645ce93e26b87ca414304490121332bfe6d5b1bc654ab35407976cdcdc0833ce4c925346381191674f44f34a41dff08386a821ea0\",\n\t\t\t\"infoHex\": \"dba0691f8fb0f5cd\",\n\t\t\t\"lengthInBytes\": 11,\n\t\t\t\"hkdfHex\": \"ecaa159a84cbb5d45e656e\"\n\t\t}\n\t],\n\t\"pqcryptEncryptionTests\": [\n\t\t{\n\t\t\t\"privateKyberKey\": \"06005f0773ca36c9398a88a1d66ac7229ab33956cb48556f8c0968f4adf356014cf68ac92660fb9660b037c8b08b05d37a462aa01e8eec20bf56b352648c0148371d613ffcc137fa75c17aa2bdbd042b0eb5bd8b847669931d17cb96d6f0a21e63b0e3ea07e150cce2095817176adce74842730d6bc8b43267bf01e373bf805b158a6e8edc0712f6aaa16c233c74a9a1607da3754e6a0486c86615e308a680578db67934bfe64ae5604cb2bc52af9399baa93774c46105905c4c65639d36692ff22de72baa42d72452c3cea8131b5be0cc5792285312aed92c9a8e47b301f510893b48d6f019b6b27b40250ef17806b63220d8078850074b355864b52909a58922aa3131f31287a86a4362479e002d75ebf8a7ad037b603130fb37adfe169b67aca996c75042054d15f70768b751d3b34339850e9898173258b2e301b9f72311f5f52fe7f2198d8284e291435eb1986f1baeb5eb918261180860397e750303a39725a59af61cc1f3ab5bf92c855e4365e599abf8667679e7c88531544352817cf09624cb7238018a634c5dd7b415aab611464bc258393f2a3ab8e9e04b9c332d4f84acfdb451fb2a73bc3695ce081e2e873a52807f0043a56956951fe4b9d9b6b12ddc9735f8311a15a427b438aae69b9073687a339406e56dfec48e585c20a711b717969e1969bac7d860bba8b7890620e6f017c8363721272b6d703bb791c5a24b461648b022a535cd7acdfb140fc6a11e2f5206bdd6216877707f7c3769e33750836f34c85a376bae9e0946ecea113cb801eb6025d5e0cc0169b7a7a2c1ac310f4470c565fc2f3d08c1f8ec1d0d0aa9bffc1ff2a914a2a8bb7229a7f59ca248208c1932675ab36fadb392e297c26b9a461a326085e26b35d66107fbc23ab40b2795990f63366d440e051c3637e64885b87cc914af1fb34dc9b59a0a575a920956748646040a68e8e77210f0379af6584530b50703675774c8de7b42cd447c822334ca553d641a06ff92bb041309d225a39341c5a111525e3a1713277cd8d521dfa6cd41b661c9b181dfac327c8485c6e59f78d5b854c837c8199374049eb225085454b0fcf9aabfd65e0a7ab577e82e61c7628c7890f9647d76147f73a39f6cb15e74a1562536ba0fd1ca13679e8770707ad33e9ce30e94d1823ff040ca82c1f8aaca1e276e5762c8ed3159db4a428877667c7490348c7bae9377a339c7683880abc9a685060ce591a25089a336474b11f0a1b6528a9da003eab55f08ba628507609599a32c5706d96623429732eae09c56323b3e55869de8c1c3fa65d79891a9f1bbea841d62c6688ddb65964a4b9da60ca475cb1bfba8b48563e7b782a24c82b0939fb038930ee515b7cb5b229265cf2070399657a6e76f2ebbcc76ac2b87874c5e2a76a2c0a8abc9b46a157db3b37084a36fc7105c05e46de8d555e352cce1b2918c7c6a2c1120a50a444b607ae8611755d847d2c02e6ba61181ab4a601968175b7a9afc30a4a299115974fd8c971870c0c7b42b31d17f32f43a246206e754bad4226051ba6d3e5b9b42c802e02995688a8d0179b4324b585e0618ec31599ca781bba98ae1c350e0f0a6d46b667314b681f3860fc12696f00aa32a23763c09c3e286ffa8239eb00816fa0a10955b08950de0437f9f62b4a547ac583b8b88caa2e0014f9c79c423d0af90408dc53c7390c3942eda828607608ca0c2902b71fe2614e3f52818a25a21065c13e2c3c0981ab54b2ce3fa49cfc001d029c6afb51ac557192ed4b25c51770b422cbcdb7ed3c0c0fe7c25664608a5315b1ca2747a354c3991194b7467098b25c58b0f0075530a0c2930151253e10ab7303e9c122e99685176817d5b6c50b40899d0f78ac5372565824decb804edf5bb6055597b786a552a0034217972e239d6444006657d882cc775320187e956e3d577cf89362710aabeb756efc44fc5d3861b7549fa886be6b591979942684448f2571fad06cd1fb1b95e05bfacac379abb9c6cba44ee698c69e61270517b4192621f580c11a79366ab2b02a909e9452e01001d8bcb2672554fd3b6a121a941c24724bdd91634146271885abbd25348113248e97091293434645c4240c89f953d49a837bca9ab975107c2e07ab8d0458750b65a0b4b41d69654c091f79a4a844087a2a238d6abcd002011e241806e501cf2d0ebc5daac356d0f2bcbf51b176b4a9e78c1350499db196c002031d7acfa83d3c0fa2c05b867953870f88348fc2368d16f72ef8618fd317774fd0600063644ba7b644f43056decc4d0597f32ba80cdf25f3a92c335216c608a4b6fd4062ba2861b2628317b7f82a6794515ca2d823bf93620c1fb0f309b3bbd5b85a5281e0dd507a58392d21c6c5e845dabe693a0692e2436aadd88cbb33b805b6866ad285e722a91d432360825151890b42c2aa94da9cb2818c546bcb3bf09bb91d5a33f2a4e245313beea60f7ecaef732c897cc8f549384c0a6cac9d9c774576f604867cb592d59e2542ec82149bb7d4c55735b5585106c8524a10479b27bcea4949c5561f7132680016d42f1a249633f169433cc034d503259ab47b09c4ac8e1b36db6287423db18b02410c5cb8da4909a32c67319d86a7697b3d9b5a75ab24fc80a882c0cae384839d8ec6cc35055711159367463fa5a421cc4331416277e27c8a6f2bbf4a5931008cd49fc56325a5a4228868f72a45ff6c8f26495ba00bf5b1158b1e24e80268e467684b0b69bade8525c346e121c16927b8f0daa8582a554f0056a82306800fc1822b4bd8015628f1a5d21835c790335cd8c5d7e00a6ef2012efb5307276193c340deeca8290b136f1275a1d555cfc96a715708889bc33b3d49c5c627b98b98f3ee1240bf55270e4c8cf6155ea042606775f39c2bed4679980d1421ae03203e17d7bd341d16517333b74eb93882691af2cbc9353580d90183fb3c03cc7e091d0f192b9a6af89949213e56a86a81203ccad16d7baf1a55af5a77f00adb8b559c1d576480b3010f1a5012c49cb3d6b85234878dba266bad84a75fb81471c2d99d2060c92032fa81bd4e931bd61cc10d582a34285a20327c9b6724ad118d8c9abd7d59890724e95118fc39c38f1a9c9413b262c6b32e03abd4fb1b0e9d12f550c8bf8dc408ff565cf8a84313156e5bbc108259e4cea464625cd625767c36539844b55d28b66818b9959463aeb75ad29b446889c48fda958e7305b2f99c9208c4e2ef93213326675d860a78503226a1d7499c5f9c877752aa895e81407352cd4c45e4f2c18499b86906c94453a1fbd45a69581379bf0b403701d580188c14b46e496b018f1ca88ba5280e559f2f54cfee5aed72aa86fa80409992670464009e252a2a74fcad2ab22062b8a0283453a88b43410160972f73c948b195ebe975fa2f05852f1219fb207a1a2bbaf83b67ec6948a092ee7e3a85ab9cb72822b6285c1d0bc3561cacca6b838a05498578c51cd432c078352ca51094ad419c1da431728a5588b5f91cc125ef3b172a74d331acc7ec5b83f3c2d9f783574237c68ca25beb0667df47f8238a2c9ea74937a5f46f9360c91419137379d01a971a48f17ca1dcf02a3ab5a6a667945e0f790caa08f84169c0192401a01b10c86a38ffc1240365c6d4116e3483b6ff3637c86b462dac9a12a090c000002383c3c8057a2da2cc028a6de908b0e045a652aba96bc52fa73084cc58cec512f99948ef809b289398dd4f01b94e00219733d99a2305ba96caadc70cc257eaa1aaf08c74f9225cbce6b47c4f512d93b74ba799460fc1cb0e8ce038692ab412569e99a5fe91b5ebaa70f370a7c380910e2107ddcc82c017245c9a04383096c40699df72fbb4cb515c55734993614b931c5842648634e71957d42b1349ce5ba1247104cb65c35990924045120248738ca1b146510a86bb66bf10e5458907b731e335a09a2902b9937cd632b97f5861a4ab43f73ba495082254a15ac98909173c92e59354588117c0746b2340518529a2797a755e600c32e16a73b5b0cdfea3bd968327987126644195b1965cc3b8e2679c6a528bb58d4c749b039773a32108761e8b1cb390c245a6b07a996c7c2383c8367284e45c30a81481a124efae433800b616e4a63ce4c67aac470bde0b8f5e08183c18e18d58cdb872f01c17bf9b674d0d626fa2c49771a8e45453c2b3998872551ac4794ba2673724accc1aa3a6859a758c293506c92953817218242dbfc498ce1936ee301747709772925b3bb80bb124f89022951f62f5eca2ad868b8ec5bbc3db2c6732c30fa625c5ee68762f52dcc842e0d3a5096e75afc46411345b310933e27e72a5d4b87e4fa8fb5e85cc6818adc83253ae36ee8172b6c9bc09dcaacc83a6b9e26caab2c949050904ca4122bf72e2a483ce0e92b2ca2bc23e20b5dcb2de1cbae4be1b58caaa174c4432780c45ac24663b6800020aff9bba44ca2aa03186de9f34013fb6b4deb8a0f7abb1b4e32057c0b3572b3d1\",\n\t\t\t\"publicKyberKey\": \"0600063644ba7b644f43056decc4d0597f32ba80cdf25f3a92c335216c608a4b6fd4062ba2861b2628317b7f82a6794515ca2d823bf93620c1fb0f309b3bbd5b85a5281e0dd507a58392d21c6c5e845dabe693a0692e2436aadd88cbb33b805b6866ad285e722a91d432360825151890b42c2aa94da9cb2818c546bcb3bf09bb91d5a33f2a4e245313beea60f7ecaef732c897cc8f549384c0a6cac9d9c774576f604867cb592d59e2542ec82149bb7d4c55735b5585106c8524a10479b27bcea4949c5561f7132680016d42f1a249633f169433cc034d503259ab47b09c4ac8e1b36db6287423db18b02410c5cb8da4909a32c67319d86a7697b3d9b5a75ab24fc80a882c0cae384839d8ec6cc35055711159367463fa5a421cc4331416277e27c8a6f2bbf4a5931008cd49fc56325a5a4228868f72a45ff6c8f26495ba00bf5b1158b1e24e80268e467684b0b69bade8525c346e121c16927b8f0daa8582a554f0056a82306800fc1822b4bd8015628f1a5d21835c790335cd8c5d7e00a6ef2012efb5307276193c340deeca8290b136f1275a1d555cfc96a715708889bc33b3d49c5c627b98b98f3ee1240bf55270e4c8cf6155ea042606775f39c2bed4679980d1421ae03203e17d7bd341d16517333b74eb93882691af2cbc9353580d90183fb3c03cc7e091d0f192b9a6af89949213e56a86a81203ccad16d7baf1a55af5a77f00adb8b559c1d576480b3010f1a5012c49cb3d6b85234878dba266bad84a75fb81471c2d99d2060c92032fa81bd4e931bd61cc10d582a34285a20327c9b6724ad118d8c9abd7d59890724e95118fc39c38f1a9c9413b262c6b32e03abd4fb1b0e9d12f550c8bf8dc408ff565cf8a84313156e5bbc108259e4cea464625cd625767c36539844b55d28b66818b9959463aeb75ad29b446889c48fda958e7305b2f99c9208c4e2ef93213326675d860a78503226a1d7499c5f9c877752aa895e81407352cd4c45e4f2c18499b86906c94453a1fbd45a69581379bf0b403701d580188c14b46e496b018f1ca88ba5280e559f2f54cfee5aed72aa86fa80409992670464009e252a2a74fcad2ab22062b8a0283453a88b43410160972f73c948b195ebe975fa2f05852f1219fb207a1a2bbaf83b67ec6948a092ee7e3a85ab9cb72822b6285c1d0bc3561cacca6b838a05498578c51cd432c078352ca51094ad419c1da431728a5588b5f91cc125ef3b172a74d331acc7ec5b83f3c2d9f783574237c68ca25beb0667df47f8238a2c9ea74937a5f46f9360c91419137379d01a971a48f17ca1dcf02a3ab5a6a667945e0f790caa08f84169c0192401a01b10c86a38ffc1240365c6d4116e3483b6ff3637c86b462dac9a12a090c000002383c3c8057a2da2cc028a6de908b0e045a652aba96bc52fa73084cc58cec512f99948ef809b289398dd4f01b94e00219733d99a2305ba96caadc70cc257eaa1aaf08c74f9225cbce6b47c4f512d93b74ba799460fc1cb0e8ce038692ab412569e99a5fe91b5ebaa70f370a7c380910e2107ddcc82c017245c9a04383096c40699df72fbb4cb515c55734993614b931c5842648634e71957d42b1349ce5ba1247104cb65c35990924045120248738ca1b146510a86bb66bf10e5458907b731e335a09a2902b9937cd632b97f5861a4ab43f73ba495082254a15ac98909173c92e59354588117c0746b2340518529a2797a755e600c32e16a73b5b0cdfea3bd968327987126644195b1965cc3b8e2679c6a528bb58d4c749b039773a32108761e8b1cb390c245a6b07a996c7c2383c8367284e45c30a81481a124efae433800b616e4a63ce4c67aac470bde0b8f5e08183c18e18d58cdb872f01c17bf9b674d0d626fa2c49771a8e45453c2b3998872551ac4794ba2673724accc1aa3a6859a758c293506c92953817218242dbfc498ce1936ee301747709772925b3bb80bb124f89022951f62f5eca2ad868b8ec5bbc3db2c6732c30fa625c5ee68762f52dcc842e0d3a5096e75afc46411345b310933e27e72a5d4b87e4fa8fb5e85cc6818adc83253ae36ee8172b6c9bc09dcaacc83a6b9e26caab2c949050904ca4122bf72e2a483ce0e92b2ca2bc23e20b5dcb2de1cbae4be1b58caaa174c4432780c45ac24663b6800020aff9bba44ca2aa03186de9f34013fb6b4deb8a0f7abb1b4e32057c0b3572b3d1\",\n\t\t\t\"publicX25519Key\": \"0c4b7ca49446c5442ea66dee51446fed3f88c16e24fed22b10cb913617ebbf1c\",\n\t\t\t\"privateX25519Key\": \"d820c8a0e08738e3fcd2015f7d80c14b0372ada43de3f0f9f6e416c34fac077e\",\n\t\t\t\"epheremalPublicX25519Key\": \"2b2a6d584e0219e50835472a564d57b166e7a51477df29858db1972c8f900f64\",\n\t\t\t\"epheremalPrivateX25519Key\": \"f078949143f018a681c0c083512cd6ea4661ee88db2573d26a722424d7b7fd4e\",\n\t\t\t\"pqMessage\": \"00200c4b7ca49446c5442ea66dee51446fed3f88c16e24fed22b10cb913617ebbf1c00202b2a6d584e0219e50835472a564d57b166e7a51477df29858db1972c8f900f6406201ed00ac67c236156ef37b7083c89e826710f4f62e7258d09189803e1f9423cdc186bad163104d0991e95cbc7aa63aff8457598d3beafa82e36dc7c9778602b82f64bfcf9d934016876dce6f546803a1b412687b6f67cbcc8384fb186f686e014f2b2a01f7bd0aca5f0e9f5a4dfeee0ca79d7ac45f92e301676b2b3560a8b7ec1bfae1ababfb44c3f05e44dce04a9853e5c3bd45bb5fe45badbbb002633caf8b9570371be43a6c763918e13bcab97b3580528e760253fac7039cef51cf884d2f46cfbecb2c5f882f2ecedb7cb1606b414a4b2d94116b931f63c1642065352e6ddfa5c32e06a0a75fdb93d2f48847e4fbee4ad6a59e121c68e519a8187497d74ceaf744673e4b1a1d87b9489a7b9a29d0e5ed2a10443a517b205abeae72819ea4909e04eca51acfe8d2a9ca93433ab550d2dccd8e25ae76e5dc4e7d7a0446dd57c08e480e8750b635326340de612e9dc12dc686621f1637c574674ddcb795ed6ac4012de5b0c099bb3cfdebcf6056c5a3b984dfd6b9bf33f59b639916b97fca91635dd46006cebc5327969641230d2d4bf90b6628c8b1ebe02f9e45bd4fd1a586dced04ef4c27947d7e5e26c2e0cfe6fa12e6a9948219af8ec92519ddfcfd8cfd28c44794e44550b232baaf2e9638911a657525ee7ef79dd2864801f68f6e086c32ec3137cadb7f8f0d1c82158a03e19cdea0ed1a890143e976ca2eb9e742774f1734190f54378446c61568548c1341b3524b9b92c9b76f50fdbc7e7a9d10534839be673af7b6f3b0bd1d44af72ba8f5a847af3a5f483a311e95119d27fee9a6d204219074044821c7407ee8cfdeef0d3586d43a16cee5d5b86e031e6e83aedff36e87e1ee12b5e11fc74b43a0d44ddf84f291cd5b2bd6be34e75e7e30dec3ec58ba89dd58bd6122f0e34cf200e5e96c4af5a1f04bad698ee8af38763c17371ad4dc9799c532f560f998b716a501f43e40112e6c33c196a72f977f2b479f05566715440564ac262ce6820ceb165065bfd085bdaacfd7c887585ab03c47015af42c91e7ea0783a1fdfe602fcf0081af9c26360da4392d9e6a9ce5848f0f77ab81f04ea562622c9eb39309c00885fc39e76fd049c69417bd8de01d2c1f7a139a21040d20e68bde7bec545f5d0e07eef77c79e0904129d368ac5f38d7da740f2cb0596f5e4988af7e7cfdda762f73ba71c17d5f732c7961bc22ddd3ea9a1f7001e5b44daa60b6393bb723b7fb3388b4991da3a1de251d611a49917c393e9c9c27c80c588a1c7413ac24cc25ef1640dd3351dfd45fcd69ab6e325b251baf995eb2a905574a39cb8a39c355a4ae17dbb964f105a5606a95c4c005a78176c5a4ad536686c8ae241a3f838eeb8066aedd27a684b8ca2b51e3b3402d60722ccc69e060c8f093a34f3ee45c773f98947b28becc10f9e24c465600a4fc4a1a13a269e88725819f3ff7c9bf1535e98dc0ea00e81b31cece9d9a57da4fdfb0bba28c7177a893407d089faedcd64c70453a1e4c1a6bb891eabb7dff4a3ca213b1a7d1362adefe40337fd8bc00a2752fd6148f3147ff3dd9149e04ea3f66ee42e123f8a33f5c894f9e69d0e3b4c99587ba8d7e435b6179e1a1211c1e43f927b4f089efb276772b415142ec01d4af65fbeb98b88afe4bd26d249018343829c6d531ecc608c1354006bf03edbcc0afcc414d38e77171f8559e292398751250e9e75938123fcf287bd225069b7343beace6e06e1065bfabfa2612eab044687d8cfd08cecfd73e1265797de7dfe4d4730bf7af0019f3fb3ae522d15f37ba45bdcc71555b6c2390714a028ac14c1aa591732347b30d07d7cfe81a7d5ace37af6f3ab6b9f8cb094c424843a914a6ffd02f71eb37ba16b1564bb107e49d4ef09ac4fa7876f09f47b402fc30caab51c414cae242bb7470a29ba77bfeff07c00c35de31de204a29c956f285acc42ebf879d7f0a2ca57103c1228b325a0f6c4eb67b03b046f578c0784e4b7c76cd55ba32c5ab4751039350b89e33b901cc3cc561bbae3b418dacb19b529017fd89fec4620fd19f41e1c0ba7d6e8302a3c1ffa4998ccbb43bdd0680948d6f52c16a1ca3823b1f42fe2e787be38b86823e881a2444078c27a5c8017647a1ef1e6333b836461c5a9516c3508c5ed7dc9e605c093fa70bdecc9bace1b49bba234c192bc69e686b3804b7adf4e27e26ee5c8866fba47c94818818df8fb4327790ca0300610131d7acfa83d3c0fa2c05b867953870f81edd1d41941476814e440b57e2ef571f385425358eddc6775555f000c40974ff463aad28f918708ea6a5b2c663ade4b33267b7bea4dbbe0c88a6b6270e560d743db3e9463806d34c0f5e9e08d2242dca\",\n\t\t\t\"seed\": \"31d7acfa83d3c0fa2c05b867953870f88348fc2368d16f72ef8618fd317774fd\",\n\t\t\t\"bucketKey\": \"e64c82d846e52895fe0b06805c0534e3327f586705163afde5322f2a8ff2796a\"\n\t\t}\n\t],\n\t\"x25519Tests\": [\n\t\t{\n\t\t\t\"alicePrivateKeyHex\": \"10e3dbb585ca132b9ef9d30d61fa73cf708b18d7e8bbb830c0cc52f04e74d765\",\n\t\t\t\"alicePublicKeyHex\": \"bfd34e7839d7f227a3a8fa0f9f7bc600b90f6016be6058e1eba80c9417913c69\",\n\t\t\t\"ephemeralPrivateKeyHex\": \"202b4bd5e0648b0284141a5c3539223e407ab9f63edaa215be460d1265623441\",\n\t\t\t\"ephemeralPublicKeyHex\": \"4493ab3651a09ab84c2e9d2f268cfaed0135b36eb05cdf92fbe6668d823fd266\",\n\t\t\t\"bobPrivateKeyHex\": \"a00e59a9402a8c6dfeda87d06c5ae1dda2c1e97e201ef79f2afd4577e4d87454\",\n\t\t\t\"bobPublicKeyHex\": \"68fc5bb72c1e8df2415896fe2b2264e576eaecf390424875ea192b9b8fd86849\",\n\t\t\t\"ephemeralSharedSecretHex\": \"0760ab785d92c8a155ed386bb52dae6fb191e616c08c1fe9b8b53a960282a650\",\n\t\t\t\"authSharedSecretHex\": \"2b3fd15a9877cf44262e63bba959e26f188a730ab94d1bb0e0199741b4cd1156\"\n\t\t}\n\t]\n}\n","import o from \"@tutao/otest\"\nimport {\n\taesDecrypt,\n\taesEncrypt,\n\tbitArrayToUint8Array,\n\tbytesToKyberPrivateKey,\n\tbytesToKyberPublicKey,\n\tdecapsulateKyber,\n\tdecryptKey,\n\teccDecapsulate,\n\teccEncapsulate,\n\tencapsulateKyber,\n\tencryptKey,\n\tgenerateKeyFromPassphraseArgon2id,\n\tgenerateKeyFromPassphraseBcrypt,\n\thexToRsaPrivateKey,\n\thexToRsaPublicKey,\n\thkdf,\n\tKeyLength,\n\tKeyPairType,\n\tkyberPrivateKeyToBytes,\n\tkyberPublicKeyToBytes,\n\tLibOQSExports,\n\tPQKeyPairs,\n\tPQPublicKeys,\n\trandom,\n\tRandomizer,\n\trsaDecrypt,\n\trsaEncrypt,\n\tuint8ArrayToBitArray,\n} from \"@tutao/tutanota-crypto\"\nimport {\n\tbase64ToUint8Array,\n\tbyteArraysToBytes,\n\tbytesToByteArrays,\n\thexToUint8Array,\n\tneverNull,\n\tstringToUtf8Uint8Array,\n\tuint8ArrayToBase64,\n\tuint8ArrayToHex,\n\tutf8Uint8ArrayToString,\n} from \"@tutao/tutanota-utils\"\nimport testData from \"./CompatibilityTestData.json\"\nimport { uncompress } from \"../../../../../src/common/api/worker/Compression.js\"\nimport { matchers, object, when } from \"testdouble\"\nimport { PQFacade } from \"../../../../../src/common/api/worker/facades/PQFacade.js\"\nimport { WASMKyberFacade } from \"../../../../../src/common/api/worker/facades/KyberFacade.js\"\nimport { loadArgon2WASM, loadLibOQSWASM } from \"../WASMTestUtils.js\"\n\nconst originalRandom = random.generateRandomData\n\nconst liboqs = await loadLibOQSWASM()\n\no.spec(\"crypto compatibility\", function () {\n\to.afterEach(function () {\n\t\trandom.generateRandomData = originalRandom\n\t})\n\n\to(\"rsa encryption\", () => {\n\t\tfor (const td of testData.rsaEncryptionTests) {\n\t\t\trandom.generateRandomData = (number) => hexToUint8Array(td.seed)\n\n\t\t\tlet publicKey = hexToRsaPublicKey(td.publicKey)\n\t\t\tlet encryptedData = rsaEncrypt(publicKey, hexToUint8Array(td.input), hexToUint8Array(td.seed))\n\t\t\to(uint8ArrayToHex(encryptedData)).equals(td.result)\n\t\t\tlet privateKey = hexToRsaPrivateKey(td.privateKey)\n\t\t\tlet data = rsaDecrypt(privateKey, encryptedData)\n\t\t\to(uint8ArrayToHex(data)).equals(td.input)\n\t\t}\n\t})\n\to(\"kyber\", async () => {\n\t\tfor (const td of testData.kyberEncryptionTests) {\n\t\t\tconst publicKey = bytesToKyberPublicKey(hexToUint8Array(td.publicKey))\n\t\t\tconst privateKey = bytesToKyberPrivateKey(hexToUint8Array(td.privateKey))\n\t\t\to(uint8ArrayToHex(kyberPublicKeyToBytes(publicKey))).deepEquals(td.publicKey)\n\t\t\to(uint8ArrayToHex(kyberPrivateKeyToBytes(privateKey))).deepEquals(td.privateKey)\n\n\t\t\tconst seed = hexToUint8Array(td.seed)\n\n\t\t\tconst randomizer = object<Randomizer>()\n\t\t\twhen(randomizer.generateRandomData(matchers.anything())).thenReturn(seed)\n\n\t\t\tconst encapsulation = encapsulateKyber(liboqs, publicKey, randomizer)\n\t\t\to(encapsulation.sharedSecret).deepEquals(hexToUint8Array(td.sharedSecret))\n\t\t\to(encapsulation.ciphertext).deepEquals(hexToUint8Array(td.cipherText))\n\n\t\t\tconst decapsulatedSharedSecret = decapsulateKyber(liboqs, privateKey, hexToUint8Array(td.cipherText))\n\t\t\to(decapsulatedSharedSecret).deepEquals(hexToUint8Array(td.sharedSecret))\n\t\t}\n\t})\n\to(\"kyber - fallback\", async () => {\n\t\tfor (const td of testData.kyberEncryptionTests) {\n\t\t\tconst publicKey = bytesToKyberPublicKey(hexToUint8Array(td.publicKey))\n\t\t\tconst privateKey = bytesToKyberPrivateKey(hexToUint8Array(td.privateKey))\n\t\t\to(uint8ArrayToHex(kyberPublicKeyToBytes(publicKey))).deepEquals(td.publicKey)\n\t\t\to(uint8ArrayToHex(kyberPrivateKeyToBytes(privateKey))).deepEquals(td.privateKey)\n\n\t\t\tconst seed = hexToUint8Array(td.seed)\n\n\t\t\tconst randomizer = object<Randomizer>()\n\t\t\twhen(randomizer.generateRandomData(matchers.anything())).thenReturn(seed)\n\t\t\tconst liboqsFallback = (await (await import(\"liboqs.wasm\")).loadWasm({ forceFallback: true })) as LibOQSExports\n\t\t\tconst encapsulation = encapsulateKyber(liboqsFallback, publicKey, randomizer)\n\t\t\to(encapsulation.sharedSecret).deepEquals(hexToUint8Array(td.sharedSecret))\n\t\t\to(encapsulation.ciphertext).deepEquals(hexToUint8Array(td.cipherText))\n\n\t\t\tconst decapsulatedSharedSecret = decapsulateKyber(liboqsFallback, privateKey, hexToUint8Array(td.cipherText))\n\t\t\to(decapsulatedSharedSecret).deepEquals(hexToUint8Array(td.sharedSecret))\n\t\t}\n\t})\n\to(\"aes 256\", function () {\n\t\tfor (const td of testData.aes256Tests) {\n\t\t\tlet key = uint8ArrayToBitArray(hexToUint8Array(td.hexKey))\n\t\t\t// encrypt data\n\t\t\tlet encryptedBytes = aesEncrypt(key, base64ToUint8Array(td.plainTextBase64), base64ToUint8Array(td.ivBase64), true)\n\t\t\to(uint8ArrayToBase64(encryptedBytes)).equals(td.cipherTextBase64)\n\t\t\tlet decryptedBytes = uint8ArrayToBase64(aesDecrypt(key, encryptedBytes, true))\n\t\t\to(decryptedBytes).equals(td.plainTextBase64)\n\t\t\t// encrypt 128 key\n\t\t\tconst keyToEncrypt128 = uint8ArrayToBitArray(hexToUint8Array(td.keyToEncrypt128))\n\t\t\tconst encryptedKey128 = aesEncrypt(key, bitArrayToUint8Array(keyToEncrypt128), base64ToUint8Array(td.ivBase64), false)\n\t\t\to(uint8ArrayToBase64(encryptedKey128)).equals(td.encryptedKey128)\n\t\t\tconst decryptedKey128 = decryptKey(key, encryptedKey128)\n\t\t\to(uint8ArrayToHex(bitArrayToUint8Array(decryptedKey128))).equals(td.keyToEncrypt128)\n\t\t\t// encrypt 256 key\n\t\t\tconst keyToEncrypt256 = uint8ArrayToBitArray(hexToUint8Array(td.keyToEncrypt256))\n\t\t\tconst encryptedKey256 = aesEncrypt(key, bitArrayToUint8Array(keyToEncrypt256), base64ToUint8Array(td.ivBase64), false)\n\t\t\to(uint8ArrayToBase64(encryptedKey256)).equals(td.encryptedKey256)\n\t\t\tconst decryptedKey256 = decryptKey(key, encryptedKey256)\n\t\t\to(uint8ArrayToHex(bitArrayToUint8Array(decryptedKey256))).equals(td.keyToEncrypt256)\n\t\t}\n\t})\n\n\t/*\n  o(\"aes 256 webcrypto\", browser(function (done, timeout) {\n      timeout(2000)\n      Promise.all(\n          compatibilityTestData.aes256Tests.map(td => {\n              let key = uint8ArrayToBitArray(hexToUint8Array(td.hexKey))\n              return aes256EncryptFile(key, base64ToUint8Array(td.plainTextBase64), base64ToUint8Array(td.ivBase64), true).then(encryptedBytes => {\n                  o(uint8ArrayToBase64(encryptedBytes)).deepEquals(td.cipherTextBase64)\n                      return aes256Decrypt(key, encryptedBytes)\n              }).then(decryptedBytes => {\n                  let decrypted = uint8ArrayToBase64(decryptedBytes)\n                  o(decrypted).deepEquals(td.plainTextBase64)\n              })\n          })\n      ).then(() => done())\n  }))\n  */\n\n\to(\"aes128 128 bit key encryption\", function () {\n\t\tfor (const td of testData.aes128Tests) {\n\t\t\tlet key = uint8ArrayToBitArray(hexToUint8Array(td.hexKey))\n\t\t\tconst keyToEncrypt128 = uint8ArrayToBitArray(hexToUint8Array(td.keyToEncrypt128))\n\t\t\tconst encryptedKey128 = encryptKey(key, keyToEncrypt128)\n\t\t\to(uint8ArrayToBase64(encryptedKey128)).equals(td.encryptedKey128)\n\t\t\tconst decryptedKey128 = decryptKey(key, encryptedKey128)\n\t\t\to(uint8ArrayToHex(bitArrayToUint8Array(decryptedKey128))).equals(td.keyToEncrypt128)\n\t\t}\n\t})\n\n\to(\"aes128 256 bit key encryption\", function () {\n\t\tfor (const td of testData.aes128Tests) {\n\t\t\tlet key = uint8ArrayToBitArray(hexToUint8Array(td.hexKey))\n\t\t\tconst keyToEncrypt256 = uint8ArrayToBitArray(hexToUint8Array(td.keyToEncrypt256))\n\t\t\tconst encryptedKey256 = encryptKey(key, keyToEncrypt256)\n\t\t\to(uint8ArrayToBase64(encryptedKey256)).equals(td.encryptedKey256)\n\t\t\tconst decryptedKey256 = decryptKey(key, encryptedKey256)\n\t\t\to(uint8ArrayToHex(bitArrayToUint8Array(decryptedKey256))).equals(td.keyToEncrypt256)\n\t\t}\n\t})\n\n\to(\"aes 128\", function () {\n\t\tfor (const td of testData.aes128Tests) {\n\t\t\tlet key = uint8ArrayToBitArray(hexToUint8Array(td.hexKey))\n\t\t\tlet encryptedBytes = aesEncrypt(key, base64ToUint8Array(td.plainTextBase64), base64ToUint8Array(td.ivBase64), true, false)\n\t\t\to(uint8ArrayToBase64(encryptedBytes)).equals(td.cipherTextBase64)\n\t\t\tlet decryptedBytes = uint8ArrayToBase64(aesDecrypt(key, encryptedBytes))\n\t\t\to(decryptedBytes).equals(td.plainTextBase64)\n\t\t}\n\t})\n\to(\"aes 128 mac\", function () {\n\t\tfor (const td of testData.aes128MacTests) {\n\t\t\tlet key = uint8ArrayToBitArray(hexToUint8Array(td.hexKey))\n\t\t\tlet encryptedBytes = aesEncrypt(key, base64ToUint8Array(td.plainTextBase64), base64ToUint8Array(td.ivBase64), true, true)\n\t\t\to(uint8ArrayToBase64(encryptedBytes)).equals(td.cipherTextBase64)\n\t\t\tlet decryptedBytes = uint8ArrayToBase64(aesDecrypt(key, encryptedBytes))\n\t\t\to(decryptedBytes).equals(td.plainTextBase64)\n\t\t}\n\t})\n\to(\"unicodeEncoding\", function () {\n\t\tfor (const td of testData.encodingTests) {\n\t\t\tlet encoded = stringToUtf8Uint8Array(td.string)\n\t\t\to(uint8ArrayToBase64(encoded)).equals(neverNull(td.encodedString))\n\t\t\tlet decoded = utf8Uint8ArrayToString(encoded)\n\t\t\to(decoded).equals(td.string)\n\t\t}\n\t})\n\to(\"bcrypt 128\", function () {\n\t\tfor (const td of testData.bcrypt128Tests) {\n\t\t\tlet key = generateKeyFromPassphraseBcrypt(td.password, hexToUint8Array(td.saltHex), KeyLength.b128)\n\t\t\to(uint8ArrayToHex(bitArrayToUint8Array(key))).equals(td.keyHex)\n\t\t}\n\t})\n\to(\"bcrypt 256\", function () {\n\t\tfor (const td of testData.bcrypt256Tests) {\n\t\t\tlet key = generateKeyFromPassphraseBcrypt(td.password, hexToUint8Array(td.saltHex), KeyLength.b256)\n\t\t\to(uint8ArrayToHex(bitArrayToUint8Array(key))).equals(td.keyHex)\n\t\t}\n\t})\n\to(\"argon2id\", async function () {\n\t\tconst argon2 = await loadArgon2WASM()\n\t\tfor (let td of testData.argon2idTests) {\n\t\t\tlet key = await generateKeyFromPassphraseArgon2id(argon2, td.password, hexToUint8Array(td.saltHex))\n\t\t\to(uint8ArrayToHex(bitArrayToUint8Array(key))).equals(td.keyHex)\n\t\t}\n\t})\n\to(\"argon2id - fallback\", async function () {\n\t\tconst argon2 = await (await import(\"argon2.wasm\")).loadWasm({ forceFallback: true })\n\t\tfor (let td of testData.argon2idTests) {\n\t\t\tlet key = await generateKeyFromPassphraseArgon2id(argon2, td.password, hexToUint8Array(td.saltHex))\n\t\t\to(uint8ArrayToHex(bitArrayToUint8Array(key))).equals(td.keyHex)\n\t\t}\n\t})\n\to(\"compression\", function () {\n\t\tfor (const td of testData.compressionTests) {\n\t\t\to(utf8Uint8ArrayToString(uncompress(base64ToUint8Array(td.compressedBase64TextJava)))).equals(td.uncompressedText)\n\t\t\to(utf8Uint8ArrayToString(uncompress(base64ToUint8Array(td.compressedBase64TextJavaScript)))).equals(td.uncompressedText)\n\t\t}\n\t})\n\to(\"x25519\", function () {\n\t\tfor (const td of testData.x25519Tests) {\n\t\t\tconst alicePrivateKeyBytes = hexToUint8Array(td.alicePrivateKeyHex)\n\t\t\tconst alicePublicKeyBytes = hexToUint8Array(td.alicePublicKeyHex)\n\t\t\tconst aliceKeyPair = { priv: alicePrivateKeyBytes, pub: alicePublicKeyBytes }\n\t\t\tconst ephemeralPrivateKeyBytes = hexToUint8Array(td.ephemeralPrivateKeyHex)\n\t\t\tconst ephemeralPublicKeyBytes = hexToUint8Array(td.ephemeralPublicKeyHex)\n\t\t\tconst ephemeralKeyPair = { priv: ephemeralPrivateKeyBytes, pub: ephemeralPublicKeyBytes }\n\t\t\tconst bobPrivateKeyBytes = hexToUint8Array(td.bobPrivateKeyHex)\n\t\t\tconst bobPublicKeyBytes = hexToUint8Array(td.bobPublicKeyHex)\n\t\t\tconst bobKeyPair = { priv: bobPrivateKeyBytes, pub: bobPublicKeyBytes }\n\n\t\t\tconst aliceToBob = eccEncapsulate(aliceKeyPair.priv, ephemeralKeyPair.priv, bobKeyPair.pub)\n\t\t\tconst bobToAlice = eccDecapsulate(aliceKeyPair.pub, ephemeralKeyPair.pub, bobKeyPair.priv)\n\t\t\to(aliceToBob).deepEquals(bobToAlice)\n\t\t\to(td.ephemeralSharedSecretHex).equals(uint8ArrayToHex(aliceToBob.ephemeralSharedSecret))\n\t\t\to(td.authSharedSecretHex).equals(uint8ArrayToHex(aliceToBob.authSharedSecret))\n\t\t}\n\t})\n\n\to(\"byteArrayEncoding\", function () {\n\t\tfor (const td of testData.byteArrayEncodingTests) {\n\t\t\tconst byteArrays = td.byteArraysAsHex.map((byteArrayAsHex) => hexToUint8Array(byteArrayAsHex))\n\t\t\tif (td.encodedByteArrayAsHex) {\n\t\t\t\to(td.encodedByteArrayAsHex).equals(uint8ArrayToHex(byteArraysToBytes(byteArrays)))\n\n\t\t\t\tconst decodedByteArrays = bytesToByteArrays(hexToUint8Array(td.encodedByteArrayAsHex), td.byteArraysAsHex.length)\n\t\t\t\tfor (let i = 0; i < td.byteArraysAsHex.length; i++) {\n\t\t\t\t\to(td.byteArraysAsHex[i]).equals(uint8ArrayToHex(decodedByteArrays[i]))\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttry {\n\t\t\t\t\tbyteArraysToBytes(byteArrays)\n\t\t\t\t\tthrow new Error(\" encoding error no thrown\")\n\t\t\t\t} catch (e) {\n\t\t\t\t\to(td.encodingError).equals(e.message)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t})\n\n\to(\"hkdf\", function () {\n\t\tfor (const td of testData.hkdfTests) {\n\t\t\tconst salt = hexToUint8Array(td.saltHex)\n\t\t\tconst inputKeyMaterialHex = hexToUint8Array(td.inputKeyMaterialHex)\n\t\t\tconst info = hexToUint8Array(td.infoHex)\n\t\t\tconst lengthInBytes = td.lengthInBytes\n\t\t\to(uint8ArrayToHex(hkdf(salt, inputKeyMaterialHex, info, lengthInBytes))).equals(td.hkdfHex)\n\t\t}\n\t})\n\n\to(\"pqcrypt\", async function () {\n\t\tfor (const td of testData.pqcryptEncryptionTests) {\n\t\t\trandom.generateRandomData = (number) => hexToUint8Array(td.seed).slice(0, number)\n\n\t\t\tconst bucketKey = hexToUint8Array(td.bucketKey)\n\n\t\t\tconst eccKeyPair = {\n\t\t\t\tpublicKey: hexToUint8Array(td.publicX25519Key),\n\t\t\t\tprivateKey: hexToUint8Array(td.privateX25519Key),\n\t\t\t}\n\n\t\t\tconst ephemeralKeyPair = {\n\t\t\t\tpublicKey: hexToUint8Array(td.epheremalPublicX25519Key),\n\t\t\t\tprivateKey: hexToUint8Array(td.epheremalPrivateX25519Key),\n\t\t\t}\n\n\t\t\tconst kyberKeyPair = {\n\t\t\t\tpublicKey: bytesToKyberPublicKey(hexToUint8Array(td.publicKyberKey)),\n\t\t\t\tprivateKey: bytesToKyberPrivateKey(hexToUint8Array(td.privateKyberKey)),\n\t\t\t}\n\n\t\t\tconst pqPublicKeys: PQPublicKeys = {\n\t\t\t\tkeyPairType: KeyPairType.TUTA_CRYPT,\n\t\t\t\teccPublicKey: eccKeyPair.publicKey,\n\t\t\t\tkyberPublicKey: kyberKeyPair.publicKey,\n\t\t\t}\n\t\t\tconst pqKeyPairs: PQKeyPairs = { keyPairType: KeyPairType.TUTA_CRYPT, eccKeyPair, kyberKeyPair }\n\t\t\tconst pqFacade = new PQFacade(new WASMKyberFacade(liboqs))\n\n\t\t\tconst encapsulation = await pqFacade.encapsulateAndEncode(eccKeyPair, ephemeralKeyPair, pqPublicKeys, bucketKey)\n\t\t\to(encapsulation).deepEquals(hexToUint8Array(td.pqMessage))\n\n\t\t\tconst decapsulation = await pqFacade.decapsulateEncoded(encapsulation, pqKeyPairs)\n\t\t\to(decapsulation.decryptedSymKeyBytes).deepEquals(bucketKey)\n\t\t\to(decapsulation.senderIdentityPubKey).deepEquals(eccKeyPair.publicKey)\n\t\t}\n\t})\n\n\to(\"pqcrypt - kyber fallback\", async function () {\n\t\tfor (const td of testData.pqcryptEncryptionTests) {\n\t\t\trandom.generateRandomData = (number) => hexToUint8Array(td.seed).slice(0, number)\n\n\t\t\tconst bucketKey = hexToUint8Array(td.bucketKey)\n\n\t\t\tconst eccKeyPair = {\n\t\t\t\tpublicKey: hexToUint8Array(td.publicX25519Key),\n\t\t\t\tprivateKey: hexToUint8Array(td.privateX25519Key),\n\t\t\t}\n\n\t\t\tconst ephemeralKeyPair = {\n\t\t\t\tpublicKey: hexToUint8Array(td.epheremalPublicX25519Key),\n\t\t\t\tprivateKey: hexToUint8Array(td.epheremalPrivateX25519Key),\n\t\t\t}\n\n\t\t\tconst kyberKeyPair = {\n\t\t\t\tpublicKey: bytesToKyberPublicKey(hexToUint8Array(td.publicKyberKey)),\n\t\t\t\tprivateKey: bytesToKyberPrivateKey(hexToUint8Array(td.privateKyberKey)),\n\t\t\t}\n\n\t\t\tconst pqPublicKeys: PQPublicKeys = {\n\t\t\t\tkeyPairType: KeyPairType.TUTA_CRYPT,\n\t\t\t\teccPublicKey: eccKeyPair.publicKey,\n\t\t\t\tkyberPublicKey: kyberKeyPair.publicKey,\n\t\t\t}\n\t\t\tconst pqKeyPairs: PQKeyPairs = { keyPairType: KeyPairType.TUTA_CRYPT, eccKeyPair, kyberKeyPair }\n\t\t\tconst liboqsFallback = (await (await import(\"liboqs.wasm\")).loadWasm({ forceFallback: true })) as LibOQSExports\n\t\t\tconst pqFacade = new PQFacade(new WASMKyberFacade(liboqsFallback))\n\n\t\t\tconst encapsulation = await pqFacade.encapsulateAndEncode(eccKeyPair, ephemeralKeyPair, pqPublicKeys, bucketKey)\n\t\t\to(encapsulation).deepEquals(hexToUint8Array(td.pqMessage))\n\n\t\t\tconst decapsulation = await pqFacade.decapsulateEncoded(encapsulation, pqKeyPairs)\n\t\t\to(decapsulation.decryptedSymKeyBytes).deepEquals(bucketKey)\n\t\t\to(decapsulation.senderIdentityPubKey).deepEquals(eccKeyPair.publicKey)\n\t\t}\n\t})\n\n\t/**\n\t * Creates the Javascript compatibility test data for compression. See CompatibilityTest.writeCompressionTestData() in Java for\n\t * instructions how to update the test data.\n\t */\n\t// o(\"createCompressionTestData\", function () {\n\t// \tconsole.log(\"List<String> javaScriptCompressed = List.of(\")\n\t// \tconsole.log(\n\t// \t\ttestData.compressionTests\n\t// \t\t\t.map((td) => {\n\t// \t\t\t\tlet compressed = uint8ArrayToBase64(compress(stringToUtf8Uint8Array(td.uncompressedText)))\n\t// \t\t\t\treturn '\\t\\t\"' + compressed + '\"'\n\t// \t\t\t})\n\t// \t\t\t.join(\",\\n\"),\n\t// \t)\n\t// \tconsole.log(\");\")\n\t// })\n})\n","import o from \"@tutao/otest\"\nimport {\n\tAccessBlockedError,\n\tAccessDeactivatedError,\n\tAccessExpiredError,\n\tBadGatewayError,\n\tBadRequestError,\n\tConnectionError,\n\thandleRestError,\n\tInternalServerError,\n\tInvalidDataError,\n\tInvalidSoftwareVersionError,\n\tLimitReachedError,\n\tLockedError,\n\tMethodNotAllowedError,\n\tNotAuthenticatedError,\n\tNotAuthorizedError,\n\tNotFoundError,\n\tPreconditionFailedError,\n\tResourceError,\n\tSessionExpiredError,\n\tTooManyRequestsError,\n} from \"../../../../../src/common/api/common/error/RestError.js\"\nimport { TutanotaError } from \"@tutao/tutanota-error\"\n\no.spec(\"RestErrorTest\", function () {\n\to(\"handleRestError should create the correct error classes\", () => {\n\t\to(handleRestError(400) instanceof BadRequestError).equals(true)\n\t\to(handleRestError(401) instanceof NotAuthenticatedError).equals(true)\n\t\to(handleRestError(403) instanceof NotAuthorizedError).equals(true)\n\t\to(handleRestError(404) instanceof NotFoundError).equals(true)\n\t\to(handleRestError(405) instanceof MethodNotAllowedError).equals(true)\n\t\to(handleRestError(412) instanceof PreconditionFailedError).equals(true)\n\t\to(handleRestError(423) instanceof LockedError).equals(true)\n\t\to(handleRestError(429) instanceof TooManyRequestsError).equals(true)\n\t\to(handleRestError(440) instanceof SessionExpiredError).equals(true)\n\t\to(handleRestError(470) instanceof AccessDeactivatedError).equals(true)\n\t\to(handleRestError(471) instanceof AccessExpiredError).equals(true)\n\t\to(handleRestError(472) instanceof AccessBlockedError).equals(true)\n\t\to(handleRestError(473) instanceof InvalidDataError).equals(true)\n\t\to(handleRestError(474) instanceof InvalidSoftwareVersionError).equals(true)\n\t\to(handleRestError(475) instanceof LimitReachedError).equals(true)\n\t\to(handleRestError(500) instanceof InternalServerError).equals(true)\n\t\to(handleRestError(502) instanceof BadGatewayError).equals(true)\n\t\tlet resourceError = handleRestError(123, \"/path\", \"errorId\")\n\t\to(resourceError instanceof ResourceError).equals(true)\n\t\to(resourceError.message).equals(\"123: errorId /path\")\n\t})\n\to(\"handleRestError should correctly initialize PreconditionFailedError class\", () => {\n\t\tconst preconditionFailedError = handleRestError(412, \"/path\", null, \"reason\") as PreconditionFailedError\n\t\to(preconditionFailedError.data).equals(\"reason\")\n\t\to(preconditionFailedError.message).equals(\"412: reason /path\")\n\t})\n\n\tfunction createErrorTest(type, name, message) {\n\t\to(`error ${name} should have correct message and type`, () => {\n\t\t\to(new type().name).equals(name)\n\t\t\to(new type(message).message).equals(message)(`expected message '${message}' for ${name} but was '${new type().message}'`)\n\t\t\to(new type() instanceof type).equals(true)\n\t\t\to(new type() instanceof TutanotaError).equals(true)\n\t\t\tlet thrown = false\n\n\t\t\ttry {\n\t\t\t\tthrow new type()\n\t\t\t} catch (e) {\n\t\t\t\tthrown = true\n\t\t\t}\n\n\t\t\to(thrown).equals(true)(`throws ${type}`)\n\t\t})\n\t}\n\n\tcreateErrorTest(BadRequestError, \"BadRequestError\", 400)\n\tcreateErrorTest(NotAuthenticatedError, \"NotAuthenticatedError\", 401)\n\tcreateErrorTest(NotAuthorizedError, \"NotAuthorizedError\", 403)\n\tcreateErrorTest(MethodNotAllowedError, \"MethodNotAllowedError\", 405)\n\tcreateErrorTest(NotFoundError, \"NotFoundError\", 404)\n\tcreateErrorTest(PreconditionFailedError, \"PreconditionFailedError\", 412)\n\tcreateErrorTest(LockedError, \"LockedError\", 423)\n\tcreateErrorTest(TooManyRequestsError, \"TooManyRequestsError\", 429)\n\tcreateErrorTest(SessionExpiredError, \"SessionExpiredError\", 440)\n\tcreateErrorTest(AccessDeactivatedError, \"AccessDeactivatedError\", 470)\n\tcreateErrorTest(AccessExpiredError, \"AccessExpiredError\", 471)\n\tcreateErrorTest(AccessBlockedError, \"AccessBlockedError\", 472)\n\tcreateErrorTest(InvalidDataError, \"InvalidDataError\", 473)\n\tcreateErrorTest(InvalidSoftwareVersionError, \"InvalidSoftwareVersionError\", 474)\n\tcreateErrorTest(LimitReachedError, \"LimitReachedError\", 475)\n\tcreateErrorTest(InternalServerError, \"InternalServerError\", 500)\n\tcreateErrorTest(BadGatewayError, \"BadGatewayError\", 502)\n\tcreateErrorTest(ResourceError, \"ResourceError\", undefined)\n\tcreateErrorTest(ConnectionError, \"ConnectionError\", undefined)\n})\n","import o from \"@tutao/otest\"\nimport { ProgrammingError } from \"../../../../../src/common/api/common/error/ProgrammingError.js\"\nimport { TutanotaError } from \"@tutao/tutanota-error\"\n\no.spec(\"TutanotaErrorTest\", function () {\n\to(\"error name should be correct\", () => {\n\t\to(new ProgrammingError().name).equals(\"ProgrammingError\")\n\t\to(new ProgrammingError() instanceof ProgrammingError).equals(true)\n\t\to(new ProgrammingError() instanceof TutanotaError).equals(true)\n\t})\n})\n","//\n// NOTE: some of the mocking is this file is pretty old and we should replace spy() with something more modern\n//\nimport o from \"@tutao/otest\"\nimport {\n\tCUSTOM_MAX_ID,\n\tCUSTOM_MIN_ID,\n\telementIdPart,\n\tfirstBiggerThanSecond,\n\tGENERATED_MAX_ID,\n\tGENERATED_MIN_ID,\n\tgetElementId,\n\tgetListId,\n\tlistIdPart,\n\tstringToCustomId,\n} from \"../../../../../src/common/api/common/utils/EntityUtils.js\"\nimport { arrayOf, clone, deepEqual, downcast, isSameTypeRef, last, neverNull, TypeRef } from \"@tutao/tutanota-utils\"\nimport {\n\tBucketKeyTypeRef,\n\tCustomerTypeRef,\n\tEntityUpdate,\n\tEntityUpdateTypeRef,\n\tExternalUserReferenceTypeRef,\n\tGroupKeyTypeRef,\n\tGroupMembershipTypeRef,\n\tGroupRootTypeRef,\n\tInstanceSessionKeyTypeRef,\n\tMailAddressToGroupTypeRef,\n\tPermissionTypeRef,\n\tRootInstanceTypeRef,\n\tUserTypeRef,\n} from \"../../../../../src/common/api/entities/sys/TypeRefs.js\"\nimport { CacheMode, EntityRestClient, typeRefToPath } from \"../../../../../src/common/api/worker/rest/EntityRestClient.js\"\nimport { QueuedBatch } from \"../../../../../src/common/api/worker/EventQueue.js\"\nimport {\n\tCacheStorage,\n\tDefaultEntityRestCache,\n\texpandId,\n\tEXTEND_RANGE_MIN_CHUNK_SIZE,\n} from \"../../../../../src/common/api/worker/rest/DefaultEntityRestCache.js\"\nimport {\n\tBodyTypeRef,\n\tCalendarEventTypeRef,\n\tContactTypeRef,\n\tMail,\n\tMailBoxTypeRef,\n\tMailDetailsBlob,\n\tMailDetailsBlobTypeRef,\n\tMailDetailsTypeRef,\n\tMailTypeRef,\n} from \"../../../../../src/common/api/entities/tutanota/TypeRefs.js\"\nimport { OfflineStorage, OfflineStorageCleaner } from \"../../../../../src/common/api/worker/offline/OfflineStorage.js\"\nimport { assertThrows, mockAttribute, spy, unmockAttribute, verify } from \"@tutao/tutanota-test-utils\"\nimport { NoZoneDateProvider } from \"../../../../../src/common/api/common/utils/NoZoneDateProvider.js\"\nimport { RestClient } from \"../../../../../src/common/api/worker/rest/RestClient.js\"\nimport { NotAuthorizedError, NotFoundError } from \"../../../../../src/common/api/common/error/RestError.js\"\nimport { EphemeralCacheStorage } from \"../../../../../src/common/api/worker/rest/EphemeralCacheStorage.js\"\nimport { GroupType, OperationType } from \"../../../../../src/common/api/common/TutanotaConstants.js\"\nimport { OfflineStorageMigrator } from \"../../../../../src/common/api/worker/offline/OfflineStorageMigrator.js\"\nimport { createEventElementId } from \"../../../../../src/common/api/common/utils/CommonCalendarUtils.js\"\nimport { InterWindowEventFacadeSendDispatcher } from \"../../../../../src/common/native/common/generatedipc/InterWindowEventFacadeSendDispatcher.js\"\nimport { func, instance, matchers, object, replace, when } from \"testdouble\"\nimport { SqlCipherFacade } from \"../../../../../src/common/native/common/generatedipc/SqlCipherFacade.js\"\nimport { createTestEntity } from \"../../../TestUtils.js\"\n\nconst { anything } = matchers\n\nconst offlineDatabaseTestKey = new Uint8Array([3957386659, 354339016, 3786337319, 3366334248])\n\nasync function getOfflineStorage(userId: Id): Promise<CacheStorage> {\n\tconst { PerWindowSqlCipherFacade } = await import(\"../../../../../src/common/desktop/db/PerWindowSqlCipherFacade.js\")\n\tconst { OfflineDbRefCounter } = await import(\"../../../../../src/common/desktop/db/OfflineDbRefCounter.js\")\n\tconst { DesktopSqlCipher } = await import(\"../../../../../src/common/desktop/db/DesktopSqlCipher.js\")\n\n\tconst odbRefCounter = new OfflineDbRefCounter({\n\t\tasync create(userid: string, key: Uint8Array, retry?: boolean): Promise<SqlCipherFacade> {\n\t\t\tconst db = new DesktopSqlCipher(__NODE_GYP_better_sqlite3, \":memory:\", false)\n\t\t\t//integrity check breaks for in memory database\n\t\t\tawait db.openDb(userId, key)\n\t\t\treturn db\n\t\t},\n\n\t\tasync delete(userId: string): Promise<void> {},\n\t})\n\tconst migratorMock = instance(OfflineStorageMigrator)\n\n\tconst sqlCipherFacade = new PerWindowSqlCipherFacade(odbRefCounter)\n\tawait sqlCipherFacade.openDb(userId, offlineDatabaseTestKey)\n\tconst interWindowEventSender = instance(InterWindowEventFacadeSendDispatcher)\n\tconst offlineStorageCleanerMock = object<OfflineStorageCleaner>()\n\tconst offlineStorage = new OfflineStorage(sqlCipherFacade, interWindowEventSender, new NoZoneDateProvider(), migratorMock, offlineStorageCleanerMock)\n\tawait offlineStorage.init({ userId, databaseKey: offlineDatabaseTestKey, timeRangeDays: 42, forceNewDatabase: false })\n\treturn offlineStorage\n}\n\nasync function getEphemeralStorage(): Promise<EphemeralCacheStorage> {\n\treturn new EphemeralCacheStorage()\n}\n\ntestEntityRestCache(\"ephemeral\", getEphemeralStorage)\nnode(() => testEntityRestCache(\"offline\", getOfflineStorage))()\n\nexport function testEntityRestCache(name: string, getStorage: (userId: Id) => Promise<CacheStorage>) {\n\tconst groupId = \"groupId\"\n\tconst batchId = \"batchId\"\n\to.spec(`EntityRestCache ${name}`, function () {\n\t\tlet storage: CacheStorage\n\t\tlet cache: DefaultEntityRestCache\n\n\t\t// The entity client will assert to throwing if an unexpected method is called\n\t\t// You can mock it's attributes if you want to assert that a given method will be called\n\t\tlet entityRestClient: EntityRestClient\n\t\tlet userId: Id | null\n\n\t\tlet createUpdate = function (typeRef: TypeRef<any>, listId: Id, id: Id, operation: OperationType): EntityUpdate {\n\t\t\tlet eu = createTestEntity(EntityUpdateTypeRef)\n\t\t\teu.application = typeRef.app\n\t\t\teu.type = typeRef.type\n\t\t\teu.instanceListId = listId\n\t\t\teu.instanceId = id\n\t\t\teu.operation = operation\n\t\t\treturn eu\n\t\t}\n\n\t\tlet createId = function (idText) {\n\t\t\t//return idText\n\t\t\treturn Array(13 - idText.length).join(\"-\") + idText\n\t\t}\n\n\t\tlet createMailDetailsBlobInstance = function (archiveId, id, bodyText): MailDetailsBlob {\n\t\t\tlet body = createTestEntity(BodyTypeRef, { text: bodyText })\n\t\t\tlet mailDetails = createTestEntity(MailDetailsTypeRef, { _id: createId(id), body: body })\n\t\t\treturn createTestEntity(MailDetailsBlobTypeRef, { _id: [archiveId, mailDetails._id], details: mailDetails })\n\t\t}\n\n\t\tlet createMailInstance = function (listId, id, subject): Mail {\n\t\t\tlet mail = createTestEntity(MailTypeRef)\n\t\t\tmail._id = [listId, createId(id)]\n\t\t\tmail.subject = subject ?? \"\"\n\t\t\tmail.mailDetails = [\"mailDetailsListId\", \"mailDetailsElementId\"]\n\t\t\treturn mail\n\t\t}\n\n\t\tfunction mockRestClient(): EntityRestClient {\n\t\t\tlet notToBeCalled = function (name: string) {\n\t\t\t\treturn function (...args) {\n\t\t\t\t\tthrow new Error(name + \" should not have been called. arguments: \" + String(args))\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst restClient = object<RestClient>()\n\t\t\twhen(restClient.getServerTimestampMs()).thenReturn(Date.now())\n\n\t\t\treturn downcast({\n\t\t\t\tload: notToBeCalled(\"load\"),\n\t\t\t\tloadRange: notToBeCalled(\"loadRange\"),\n\t\t\t\tloadMultiple: notToBeCalled(\"loadMultiple\"),\n\t\t\t\tsetup: notToBeCalled(\"setup\"),\n\t\t\t\tsetupMultiple: notToBeCalled(\"setupMultiple\"),\n\t\t\t\tupdate: notToBeCalled(\"update\"),\n\t\t\t\terase: notToBeCalled(\"erase\"),\n\t\t\t\tentityEventsReceived: (e) => Promise.resolve(e),\n\t\t\t\tgetRestClient: () => restClient,\n\t\t\t})\n\t\t}\n\n\t\to.beforeEach(async function () {\n\t\t\tuserId = \"userId\"\n\t\t\tstorage = await getStorage(userId)\n\t\t\tentityRestClient = mockRestClient()\n\t\t\tcache = new DefaultEntityRestCache(entityRestClient, storage)\n\t\t})\n\n\t\to.spec(\"entityEventsReceived\", function () {\n\t\t\tconst path = typeRefToPath(ContactTypeRef)\n\t\t\tconst contactListId1 = \"contactListId1\"\n\t\t\tconst contactListId2 = \"contactListId2\"\n\t\t\tconst id1 = \"id1\"\n\t\t\tconst id2 = \"id2\"\n\t\t\tconst id3 = \"id3\"\n\t\t\tconst id4 = \"id4\"\n\t\t\tconst id5 = \"id5\"\n\t\t\tconst id6 = \"id6\"\n\t\t\tconst id7 = \"id7\"\n\n\t\t\t//Calendarevents\n\t\t\tconst calendarEventListId = \"calendarEventListId\"\n\t\t\tlet timestamp = Date.now()\n\t\t\tconst calendarEventIds = [0, 1, 2, 3, 4, 5, 6].map((n) => createEventElementId(timestamp, n))\n\n\t\t\to(\"writes batch meta on entity update\", async function () {\n\t\t\t\tconst contact1 = createTestEntity(ContactTypeRef, { _id: [contactListId1, id1] })\n\t\t\t\tconst contact2 = createTestEntity(ContactTypeRef, { _id: [contactListId1, id2] })\n\n\t\t\t\tconst batch = [\n\t\t\t\t\tcreateUpdate(ContactTypeRef, contactListId1, id1, OperationType.CREATE),\n\t\t\t\t\tcreateUpdate(ContactTypeRef, contactListId1, id2, OperationType.CREATE),\n\t\t\t\t]\n\n\t\t\t\tconst loadMultiple = func<typeof entityRestClient.loadMultiple>()\n\t\t\t\twhen(loadMultiple(ContactTypeRef, contactListId1, [id1, id2])).thenResolve([contact1, contact2])\n\t\t\t\treplace(entityRestClient, \"loadMultiple\", loadMultiple)\n\n\t\t\t\tconst putLastBatchIdForGroup = func<typeof storage.putLastBatchIdForGroup>()\n\t\t\t\twhen(putLastBatchIdForGroup(groupId, batchId)).thenResolve(undefined)\n\t\t\t\treplace(storage, \"putLastBatchIdForGroup\", putLastBatchIdForGroup)\n\n\t\t\t\tawait cache.entityEventsReceived(makeBatch(batch))\n\t\t\t\tawait cache.getLastEntityEventBatchForGroup(groupId)\n\t\t\t\tverify(putLastBatchIdForGroup(groupId, batchId))\n\t\t\t})\n\n\t\t\to.spec(\"postMultiple\", function () {\n\t\t\t\to.beforeEach(async function () {\n\t\t\t\t\tawait storage.setNewRangeForList(ContactTypeRef, contactListId1, id1, id7)\n\t\t\t\t\tawait storage.setNewRangeForList(ContactTypeRef, contactListId2, id1, id7)\n\t\t\t\t\t//when using offline calendar ids are always in cache range\n\t\t\t\t})\n\t\t\t\to(\"entity events received should call loadMultiple when receiving updates from a postMultiple\", async function () {\n\t\t\t\t\tconst contact1 = createTestEntity(ContactTypeRef, { _id: [contactListId1, id1] })\n\t\t\t\t\tconst contact2 = createTestEntity(ContactTypeRef, { _id: [contactListId1, id2] })\n\n\t\t\t\t\tconst batch = [\n\t\t\t\t\t\tcreateUpdate(ContactTypeRef, contactListId1, id1, OperationType.CREATE),\n\t\t\t\t\t\tcreateUpdate(ContactTypeRef, contactListId1, id2, OperationType.CREATE),\n\t\t\t\t\t]\n\t\t\t\t\tconst loadMultiple = spy(function (typeRef, listId, ids) {\n\t\t\t\t\t\to(isSameTypeRef(typeRef, ContactTypeRef)).equals(true)\n\t\t\t\t\t\to(listId).equals(contactListId1)\n\t\t\t\t\t\to(ids).deepEquals([\"id1\", \"id2\"])\n\t\t\t\t\t\treturn Promise.resolve([contact1, contact2])\n\t\t\t\t\t})\n\t\t\t\t\tconst mock = mockAttribute(entityRestClient, entityRestClient.loadMultiple, loadMultiple)\n\t\t\t\t\tconst updates = await cache.entityEventsReceived(makeBatch(batch))\n\t\t\t\t\tunmockAttribute(mock)\n\t\t\t\t\to(loadMultiple.callCount).equals(1)(\"loadMultiple is called\")\n\t\t\t\t\to(await storage.get(ContactTypeRef, contactListId1, id1)).notEquals(null)\n\t\t\t\t\to(await storage.get(ContactTypeRef, contactListId1, id2)).notEquals(null)\n\t\t\t\t\to(updates).deepEquals(batch)\n\t\t\t\t})\n\n\t\t\t\tif (name === \"offline\") {\n\t\t\t\t\t// in the other case storage is an EphemeralCache which doesn't use custom handlers or caches calendar events.\n\t\t\t\t\to(\"entity events received should call loadMultiple when receiving updates from a postMultiple with CustomCacheHandler\", async function () {\n\t\t\t\t\t\tconst event1 = createTestEntity(CalendarEventTypeRef, { _id: [calendarEventListId, calendarEventIds[0]] })\n\t\t\t\t\t\tconst event2 = createTestEntity(CalendarEventTypeRef, { _id: [calendarEventListId, calendarEventIds[1]] })\n\t\t\t\t\t\t// We only consider events to be in the range if we do actually have correct range\n\t\t\t\t\t\tawait storage.setNewRangeForList(CalendarEventTypeRef, calendarEventListId, CUSTOM_MIN_ID, CUSTOM_MAX_ID)\n\n\t\t\t\t\t\tconst batch = [\n\t\t\t\t\t\t\tcreateUpdate(CalendarEventTypeRef, calendarEventListId, calendarEventIds[0], OperationType.CREATE),\n\t\t\t\t\t\t\tcreateUpdate(ContactTypeRef, calendarEventListId, calendarEventIds[1], OperationType.CREATE),\n\t\t\t\t\t\t]\n\t\t\t\t\t\tconst loadMultiple = spy(function (typeRef, listId, ids) {\n\t\t\t\t\t\t\to(isSameTypeRef(typeRef, CalendarEventTypeRef)).equals(true)\n\t\t\t\t\t\t\to(listId).equals(calendarEventListId)\n\t\t\t\t\t\t\to(ids).deepEquals([calendarEventIds[0], calendarEventIds[1]])\n\t\t\t\t\t\t\treturn Promise.resolve([event1, event2])\n\t\t\t\t\t\t})\n\t\t\t\t\t\tconst mock = mockAttribute(entityRestClient, entityRestClient.loadMultiple, loadMultiple)\n\t\t\t\t\t\tconst updates = await cache.entityEventsReceived(makeBatch(batch))\n\t\t\t\t\t\tunmockAttribute(mock)\n\t\t\t\t\t\to(loadMultiple.callCount).equals(1)(\"loadMultiple is called\")\n\t\t\t\t\t\to(await storage.get(CalendarEventTypeRef, calendarEventListId, calendarEventIds[0])).notEquals(null)\n\t\t\t\t\t\to(await storage.get(CalendarEventTypeRef, calendarEventListId, calendarEventIds[1])).notEquals(null)\n\t\t\t\t\t\to(updates).deepEquals(batch)\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\to(\"post multiple with different update type and list ids should make multiple load calls\", async function () {\n\t\t\t\t\tconst batch = [\n\t\t\t\t\t\tcreateUpdate(ContactTypeRef, contactListId1, id1, OperationType.CREATE),\n\t\t\t\t\t\tcreateUpdate(ContactTypeRef, contactListId1, id2, OperationType.CREATE),\n\t\t\t\t\t\tcreateUpdate(ContactTypeRef, contactListId2, id3, OperationType.CREATE),\n\t\t\t\t\t\tcreateUpdate(ContactTypeRef, contactListId2, id4, OperationType.CREATE),\n\t\t\t\t\t\tcreateUpdate(CustomerTypeRef, null as any, id5, OperationType.CREATE),\n\t\t\t\t\t\tcreateUpdate(ContactTypeRef, contactListId1, id2, OperationType.UPDATE),\n\t\t\t\t\t\tcreateUpdate(CalendarEventTypeRef, calendarEventListId, calendarEventIds[0], OperationType.CREATE),\n\t\t\t\t\t\tcreateUpdate(CalendarEventTypeRef, calendarEventListId, calendarEventIds[1], OperationType.CREATE),\n\t\t\t\t\t]\n\t\t\t\t\tconst load = spy(function (typeRef, id) {\n\t\t\t\t\t\tconst { listId, elementId } = expandId(id)\n\n\t\t\t\t\t\tif (isSameTypeRef(typeRef, ContactTypeRef)) {\n\t\t\t\t\t\t\to(elementId).equals(id2)\n\t\t\t\t\t\t\treturn Promise.resolve(\n\t\t\t\t\t\t\t\tcreateTestEntity(ContactTypeRef, {\n\t\t\t\t\t\t\t\t\t_id: [neverNull(listId), elementId],\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t} else if (isSameTypeRef(typeRef, CustomerTypeRef)) {\n\t\t\t\t\t\t\to([\"id5\", \"id6\", \"id7\"].includes(elementId)).equals(true)\n\t\t\t\t\t\t\treturn Promise.resolve(\n\t\t\t\t\t\t\t\tcreateTestEntity(CustomerTypeRef, {\n\t\t\t\t\t\t\t\t\t_id: elementId,\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthrow new Error(\"load: should not be reached\" + typeRef)\n\t\t\t\t\t})\n\t\t\t\t\tconst loadMultiple = spy(function (typeRef, listId, ids) {\n\t\t\t\t\t\tif (isSameTypeRef(typeRef, ContactTypeRef) || isSameTypeRef(typeRef, CalendarEventTypeRef)) {\n\t\t\t\t\t\t\tif (listId === contactListId1) {\n\t\t\t\t\t\t\t\to(ids).deepEquals([\"id1\", \"id2\"])\n\t\t\t\t\t\t\t\treturn Promise.resolve([\n\t\t\t\t\t\t\t\t\tcreateTestEntity(ContactTypeRef, {\n\t\t\t\t\t\t\t\t\t\t_id: [listId, id1],\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\tcreateTestEntity(ContactTypeRef, {\n\t\t\t\t\t\t\t\t\t\t_id: [listId, id2],\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t} else if (listId === calendarEventListId) {\n\t\t\t\t\t\t\t\to(ids).deepEquals([calendarEventIds[0], calendarEventIds[1]])\n\t\t\t\t\t\t\t\treturn Promise.resolve([\n\t\t\t\t\t\t\t\t\tcreateTestEntity(CalendarEventTypeRef, {\n\t\t\t\t\t\t\t\t\t\t_id: [calendarEventListId, calendarEventIds[0]],\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\tcreateTestEntity(CalendarEventTypeRef, {\n\t\t\t\t\t\t\t\t\t\t_id: [calendarEventListId, calendarEventIds[1]],\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t} else if (listId === contactListId2) {\n\t\t\t\t\t\t\t\to(ids).deepEquals([\"id3\", \"id4\"])\n\t\t\t\t\t\t\t\treturn Promise.resolve([\n\t\t\t\t\t\t\t\t\tcreateTestEntity(ContactTypeRef, {\n\t\t\t\t\t\t\t\t\t\t_id: [listId, \"id3\"],\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\tcreateTestEntity(ContactTypeRef, {\n\t\t\t\t\t\t\t\t\t\t_id: [listId, \"id4\"],\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthrow new Error(`load multiple: should not be reached, typeref is ${typeRef}, listid is ${listId} `)\n\t\t\t\t\t})\n\n\t\t\t\t\tif (name === \"offline\") {\n\t\t\t\t\t\tawait storage.setNewRangeForList(CalendarEventTypeRef, calendarEventListId, CUSTOM_MIN_ID, CUSTOM_MAX_ID)\n\t\t\t\t\t}\n\n\t\t\t\t\tconst loadMock = mockAttribute(entityRestClient, entityRestClient.load, load)\n\t\t\t\t\tconst loadMultipleMock = mockAttribute(entityRestClient, entityRestClient.loadMultiple, loadMultiple)\n\t\t\t\t\tconst filteredUpdates = await cache.entityEventsReceived(makeBatch(batch))\n\t\t\t\t\tunmockAttribute(loadMock)\n\t\t\t\t\tunmockAttribute(loadMultipleMock)\n\t\t\t\t\to(load.callCount).equals(1)(\"One load for the customer create\")\n\t\t\t\t\to(await storage.get(ContactTypeRef, contactListId1, id1)).notEquals(null)\n\t\t\t\t\to(await storage.get(ContactTypeRef, contactListId1, id2)).notEquals(null)\n\t\t\t\t\to(await storage.get(ContactTypeRef, contactListId2, id3)).notEquals(null)\n\t\t\t\t\to(await storage.get(ContactTypeRef, contactListId2, id4)).notEquals(null)\n\t\t\t\t\tif (name === \"offline\") {\n\t\t\t\t\t\to(loadMultiple.callCount).equals(3)(\"Three load multiple, one for each contact list and one for the calendar list\")\n\t\t\t\t\t\to(await storage.get(CalendarEventTypeRef, calendarEventListId, calendarEventIds[0])).notEquals(null)(\n\t\t\t\t\t\t\t\"when using offline storage event 0 should be cached\",\n\t\t\t\t\t\t)\n\t\t\t\t\t\to(await storage.get(CalendarEventTypeRef, calendarEventListId, calendarEventIds[1])).notEquals(null)(\n\t\t\t\t\t\t\t\"when using offline storage event 1 should be cached\",\n\t\t\t\t\t\t)\n\t\t\t\t\t} else {\n\t\t\t\t\t\to(loadMultiple.callCount).equals(2)(\"two load multiple, one for each contact list and none for the calendar list\")\n\t\t\t\t\t\to(await storage.get(CalendarEventTypeRef, calendarEventListId, calendarEventIds[0])).equals(null)(\n\t\t\t\t\t\t\t\"when using offline storage event 0 should not be cached\",\n\t\t\t\t\t\t)\n\t\t\t\t\t\to(await storage.get(CalendarEventTypeRef, calendarEventListId, calendarEventIds[1])).equals(null)(\n\t\t\t\t\t\t\t\"when using offline storage event 1 should not be cached\",\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t\to(await storage.get(CustomerTypeRef, null, id5)).equals(null)\n\t\t\t\t\to(filteredUpdates.length).equals(batch.length)\n\t\t\t\t\tfor (const update of batch) {\n\t\t\t\t\t\to(filteredUpdates.includes(update)).equals(true)\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\to(\"returns empty [] when loadMultiple throwing an error \", async function () {\n\t\t\t\t\tconst batch = [\n\t\t\t\t\t\tcreateUpdate(ContactTypeRef, contactListId1, id1, OperationType.CREATE),\n\t\t\t\t\t\tcreateUpdate(ContactTypeRef, contactListId1, id2, OperationType.CREATE),\n\t\t\t\t\t\tcreateUpdate(ContactTypeRef, contactListId2, id3, OperationType.CREATE),\n\t\t\t\t\t\tcreateUpdate(ContactTypeRef, contactListId2, id4, OperationType.CREATE),\n\t\t\t\t\t]\n\t\t\t\t\tconst loadMultiple = spy(function (typeRef, listId, ids) {\n\t\t\t\t\t\to(isSameTypeRef(typeRef, ContactTypeRef)).equals(true)\n\n\t\t\t\t\t\tif (listId === contactListId1) {\n\t\t\t\t\t\t\to(ids).deepEquals([\"id1\", \"id2\"])\n\t\t\t\t\t\t\treturn Promise.resolve([\n\t\t\t\t\t\t\t\tcreateTestEntity(ContactTypeRef, {\n\t\t\t\t\t\t\t\t\t_id: [listId, id1],\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\tcreateTestEntity(ContactTypeRef, {\n\t\t\t\t\t\t\t\t\t_id: [listId, id2],\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t])\n\t\t\t\t\t\t} else if (listId === contactListId2) {\n\t\t\t\t\t\t\to(ids).deepEquals([\"id3\", \"id4\"])\n\t\t\t\t\t\t\treturn Promise.reject(new NotAuthorizedError(\"bam\"))\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\tconst loadMultipleMock = mockAttribute(entityRestClient, entityRestClient.loadMultiple, loadMultiple)\n\t\t\t\t\tconst updates = await cache.entityEventsReceived(makeBatch(batch))\n\t\t\t\t\tunmockAttribute(loadMultipleMock)\n\n\t\t\t\t\to(loadMultiple.callCount).equals(2)\n\t\t\t\t\to(await storage.get(ContactTypeRef, contactListId1, id1)).notEquals(null)\n\t\t\t\t\to(await storage.get(ContactTypeRef, contactListId1, id2)).notEquals(null)\n\t\t\t\t\to(await storage.get(ContactTypeRef, contactListId2, id3)).equals(null)\n\t\t\t\t\to(await storage.get(ContactTypeRef, contactListId2, id4)).equals(null)\n\t\t\t\t\to(updates).deepEquals(batch.slice(0, 2))\n\t\t\t\t})\n\t\t\t})\n\t\t\to.spec(\"post  multiple cache range\", function () {\n\t\t\t\to(\"update is not in cache range\", async function () {\n\t\t\t\t\tconst batch = [\n\t\t\t\t\t\tcreateUpdate(ContactTypeRef, contactListId1, id1, OperationType.CREATE),\n\t\t\t\t\t\tcreateUpdate(ContactTypeRef, contactListId1, id2, OperationType.CREATE),\n\t\t\t\t\t]\n\t\t\t\t\tconst updates = await cache.entityEventsReceived(makeBatch(batch))\n\n\t\t\t\t\to(await storage.get(ContactTypeRef, contactListId1, id1)).equals(null)\n\t\t\t\t\to(await storage.get(ContactTypeRef, contactListId1, id2)).equals(null)\n\t\t\t\t\to(updates).deepEquals(batch)\n\t\t\t\t})\n\n\t\t\t\to(\"updates partially not loaded by loadMultiple\", async function () {\n\t\t\t\t\tawait storage.setNewRangeForList(ContactTypeRef, contactListId1, id1, id2)\n\n\t\t\t\t\tconst batch = [\n\t\t\t\t\t\tcreateUpdate(ContactTypeRef, contactListId1, id1, OperationType.CREATE),\n\t\t\t\t\t\tcreateUpdate(ContactTypeRef, contactListId1, id2, OperationType.CREATE),\n\t\t\t\t\t]\n\t\t\t\t\tconst loadMultiple = spy(function (typeRef, listId, ids) {\n\t\t\t\t\t\tif (isSameTypeRef(typeRef, ContactTypeRef)) {\n\t\t\t\t\t\t\tif (listId === contactListId1) {\n\t\t\t\t\t\t\t\to(ids).deepEquals([\"id1\", \"id2\"])\n\t\t\t\t\t\t\t\treturn Promise.resolve([createTestEntity(ContactTypeRef, { _id: [listId, id1] })])\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthrow new Error(\"should not be reached\")\n\t\t\t\t\t})\n\t\t\t\t\tconst loadMultipleMock = mockAttribute(entityRestClient, entityRestClient.loadMultiple, loadMultiple)\n\t\t\t\t\tconst filteredUpdates = await cache.entityEventsReceived(makeBatch(batch))\n\t\t\t\t\tunmockAttribute(loadMultipleMock)\n\n\t\t\t\t\to(loadMultiple.callCount).equals(1)\n\t\t\t\t\to(await storage.get(ContactTypeRef, contactListId1, id1)).notEquals(null)\n\t\t\t\t\to(await storage.get(ContactTypeRef, contactListId1, id2)).equals(null)\n\t\t\t\t\to(filteredUpdates.length).equals(batch.length - 1)\n\t\t\t\t\tfor (const update of batch.slice(0, 1)) {\n\t\t\t\t\t\to(filteredUpdates.includes(update)).equals(true)\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\to(\"update are partially in cache range \", async function () {\n\t\t\t\t\tawait storage.setNewRangeForList(ContactTypeRef, contactListId1, id1, id1)\n\t\t\t\t\tawait storage.setNewRangeForList(ContactTypeRef, contactListId2, id4, id4)\n\n\t\t\t\t\tconst batch = [\n\t\t\t\t\t\tcreateUpdate(ContactTypeRef, contactListId1, id1, OperationType.CREATE),\n\t\t\t\t\t\tcreateUpdate(ContactTypeRef, contactListId1, id2, OperationType.CREATE),\n\t\t\t\t\t\tcreateUpdate(ContactTypeRef, contactListId2, id3, OperationType.CREATE),\n\t\t\t\t\t\tcreateUpdate(ContactTypeRef, contactListId2, id4, OperationType.CREATE),\n\t\t\t\t\t]\n\t\t\t\t\tconst loadMultiple = spy(function (typeRef, listId, ids) {\n\t\t\t\t\t\tif (isSameTypeRef(typeRef, ContactTypeRef)) {\n\t\t\t\t\t\t\tif (listId === contactListId1) {\n\t\t\t\t\t\t\t\to(ids).deepEquals([\"id1\"])\n\t\t\t\t\t\t\t\treturn Promise.resolve([\n\t\t\t\t\t\t\t\t\tcreateTestEntity(ContactTypeRef, {\n\t\t\t\t\t\t\t\t\t\t_id: [listId, id1],\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t} else if (listId === contactListId2) {\n\t\t\t\t\t\t\t\to(ids).deepEquals([\"id4\"])\n\t\t\t\t\t\t\t\treturn Promise.resolve([\n\t\t\t\t\t\t\t\t\tcreateTestEntity(ContactTypeRef, {\n\t\t\t\t\t\t\t\t\t\t_id: [listId, \"id4\"],\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthrow new Error(\"should not be reached\")\n\t\t\t\t\t})\n\t\t\t\t\tconst loadMultipleMock = mockAttribute(entityRestClient, entityRestClient.loadMultiple, loadMultiple)\n\t\t\t\t\tconst filteredUpdates = await cache.entityEventsReceived(makeBatch(batch))\n\t\t\t\t\tunmockAttribute(loadMultipleMock)\n\t\t\t\t\to(loadMultiple.callCount).equals(2) // twice for contact creations (per list id)\n\t\t\t\t\to(await storage.get(ContactTypeRef, contactListId1, id1)).notEquals(null)\n\t\t\t\t\to(await storage.get(ContactTypeRef, contactListId1, id2)).equals(null)\n\t\t\t\t\to(await storage.get(ContactTypeRef, contactListId2, id3)).equals(null)\n\t\t\t\t\to(await storage.get(ContactTypeRef, contactListId2, id4)).notEquals(null)\n\t\t\t\t\to(filteredUpdates.length).equals(batch.length)\n\t\t\t\t\tfor (const update of batch) {\n\t\t\t\t\t\to(filteredUpdates.includes(update)).equals(true)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\to(\"update  partially results in NotAuthorizedError \", async function () {\n\t\t\t\t\tawait storage.setNewRangeForList(ContactTypeRef, contactListId1, id1, id1)\n\t\t\t\t\tawait storage.setNewRangeForList(ContactTypeRef, contactListId2, id4, id4)\n\n\t\t\t\t\tconst batch = [\n\t\t\t\t\t\tcreateUpdate(ContactTypeRef, contactListId1, id1, OperationType.CREATE),\n\t\t\t\t\t\tcreateUpdate(ContactTypeRef, contactListId1, id2, OperationType.CREATE),\n\t\t\t\t\t\tcreateUpdate(ContactTypeRef, contactListId2, id3, OperationType.CREATE),\n\t\t\t\t\t\tcreateUpdate(ContactTypeRef, contactListId2, id4, OperationType.CREATE),\n\t\t\t\t\t]\n\t\t\t\t\tconst loadMultiple = spy(function (typeRef, listId, ids) {\n\t\t\t\t\t\tif (isSameTypeRef(typeRef, ContactTypeRef)) {\n\t\t\t\t\t\t\tif (listId === contactListId1) {\n\t\t\t\t\t\t\t\to(ids).deepEquals([\"id1\"])\n\t\t\t\t\t\t\t\treturn Promise.resolve([\n\t\t\t\t\t\t\t\t\tcreateTestEntity(ContactTypeRef, {\n\t\t\t\t\t\t\t\t\t\t_id: [listId, id1],\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t} else if (listId === contactListId2) {\n\t\t\t\t\t\t\t\to(ids).deepEquals([\"id4\"])\n\t\t\t\t\t\t\t\treturn Promise.reject(new NotAuthorizedError(\"bam\"))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthrow new Error(\"should not be reached\")\n\t\t\t\t\t})\n\t\t\t\t\tconst loadMultipleMock = mockAttribute(entityRestClient, entityRestClient.loadMultiple, loadMultiple)\n\t\t\t\t\tconst filteredUpdates = await cache.entityEventsReceived(makeBatch(batch))\n\t\t\t\t\to(loadMultiple.callCount).equals(2) // twice for contact creations (per list id)\n\t\t\t\t\to(await storage.get(ContactTypeRef, contactListId1, id1)).notEquals(null)\n\t\t\t\t\to(await storage.get(ContactTypeRef, contactListId1, id2)).equals(null)\n\t\t\t\t\to(await storage.get(ContactTypeRef, contactListId2, id3)).equals(null)\n\t\t\t\t\to(await storage.get(ContactTypeRef, contactListId2, id4)).equals(null)\n\t\t\t\t\to(filteredUpdates.length).equals(batch.length - 1)\n\t\t\t\t\tfor (const update of batch.slice(0, 3)) {\n\t\t\t\t\t\to(filteredUpdates.includes(update)).equals(true)\n\t\t\t\t\t}\n\t\t\t\t\tunmockAttribute(loadMultipleMock)\n\t\t\t\t})\n\t\t\t})\n\t\t\to(\"element create notifications are not loaded from server\", async function () {\n\t\t\t\tawait cache.entityEventsReceived(makeBatch([createUpdate(MailBoxTypeRef, null as any, \"id1\", OperationType.CREATE)]))\n\t\t\t})\n\n\t\t\to(\"element update notifications are not put into cache\", async function () {\n\t\t\t\tawait cache.entityEventsReceived(makeBatch([createUpdate(MailBoxTypeRef, null as any, \"id1\", OperationType.UPDATE)]))\n\t\t\t})\n\n\t\t\t// element notifications\n\t\t\to(\"Update event for cached entity is received, it should be redownloaded\", async function () {\n\t\t\t\tconst archiveId = \"archiveId\"\n\t\t\t\tconst mailDetailsId = \"detailsId1\"\n\t\t\t\tlet mailDetailsBlob = createMailDetailsBlobInstance(archiveId, mailDetailsId, \"hello\")\n\t\t\t\tawait storage.put(mailDetailsBlob)\n\n\t\t\t\tconst load = spy(async () => createMailDetailsBlobInstance(archiveId, mailDetailsId, \"goodbye\"))\n\t\t\t\tconst loadMock = mockAttribute(entityRestClient, entityRestClient.load, load)\n\t\t\t\tawait cache.entityEventsReceived(makeBatch([createUpdate(MailDetailsBlobTypeRef, archiveId, createId(mailDetailsId), OperationType.UPDATE)]))\n\t\t\t\to(load.callCount).equals(1) // entity is loaded from server\n\t\t\t\to(isSameTypeRef(load.args[0], MailDetailsBlobTypeRef)).equals(true)\n\t\t\t\to(load.args[1]).deepEquals([archiveId, createId(mailDetailsId)])\n\t\t\t\tconst blob = await cache.load(MailDetailsBlobTypeRef, [archiveId, createId(mailDetailsId)])\n\t\t\t\to(blob.details.body.text).equals(\"goodbye\")\n\t\t\t\to(load.callCount).equals(1) // entity is provided from cache\n\n\t\t\t\tunmockAttribute(loadMock)\n\t\t\t})\n\n\t\t\t// element notifications\n\t\t\to(\"When update event for cached entity is received but it can't be downloaded it is removed from cache\", async function () {\n\t\t\t\tconst archiveId = \"archiveId\"\n\t\t\t\tconst mailDetailsId = \"detailsId1\"\n\t\t\t\tlet mailDetailsBlob = createMailDetailsBlobInstance(archiveId, mailDetailsId, \"hello\")\n\t\t\t\tawait storage.put(mailDetailsBlob)\n\n\t\t\t\tconst load = spy(async () => {\n\t\t\t\t\tthrow new NotFoundError(\"test!\")\n\t\t\t\t})\n\t\t\t\tconst loadMock = mockAttribute(entityRestClient, entityRestClient.load, load)\n\t\t\t\tawait cache.entityEventsReceived(makeBatch([createUpdate(MailDetailsBlobTypeRef, archiveId, createId(mailDetailsId), OperationType.UPDATE)]))\n\t\t\t\to(load.callCount).equals(1) // entity is loaded from server\n\t\t\t\to(await storage.get(mailDetailsBlob._type, archiveId, createId(mailDetailsId))).equals(null)(\"the blob is deleted from the cache\")\n\n\t\t\t\tunmockAttribute(loadMock)\n\t\t\t})\n\n\t\t\to(\"element should be deleted from the cache when a delete event is received\", async function () {\n\t\t\t\tconst archiveId = \"archiveId\"\n\t\t\t\tconst mailDetailsId = \"detailsId1\"\n\t\t\t\tlet mailDetailsBlob = createMailDetailsBlobInstance(archiveId, mailDetailsId, \"hello\")\n\t\t\t\tawait storage.put(mailDetailsBlob)\n\n\t\t\t\tconst load = spy(function () {\n\t\t\t\t\treturn Promise.reject(new NotFoundError(\"not found\"))\n\t\t\t\t})\n\t\t\t\tconst loadMock = mockAttribute(entityRestClient, entityRestClient.load, load)\n\t\t\t\tawait cache.entityEventsReceived(makeBatch([createUpdate(MailDetailsBlobTypeRef, archiveId, createId(mailDetailsId), OperationType.DELETE)]))\n\t\t\t\t// entity is not loaded from server when it is deleted\n\t\t\t\to(load.callCount).equals(0)\n\t\t\t\tawait assertThrows(NotFoundError, () => cache.load(MailDetailsBlobTypeRef, [archiveId, createId(mailDetailsId)]))\n\t\t\t\tunmockAttribute(loadMock)\n\n\t\t\t\t// we tried to reload the mail body using the rest client, because it was removed from the cache\n\t\t\t\to(load.callCount).equals(1)\n\t\t\t})\n\n\t\t\to(\"Mail should not be loaded when a move event is received\", async function () {\n\t\t\t\tconst instance = createMailInstance(\"listId1\", \"id1\", \"henlo\")\n\t\t\t\tawait storage.put(instance)\n\n\t\t\t\tconst newListId = \"listid2\"\n\t\t\t\tconst newInstance = clone(instance)\n\t\t\t\tnewInstance._id = [newListId, getElementId(instance)]\n\n\t\t\t\t// The moved mail will not be loaded from the server\n\t\t\t\tawait cache.entityEventsReceived(\n\t\t\t\t\tmakeBatch([\n\t\t\t\t\t\tcreateUpdate(MailTypeRef, getListId(instance), getElementId(instance), OperationType.DELETE),\n\t\t\t\t\t\tcreateUpdate(MailTypeRef, newListId, getElementId(instance), OperationType.CREATE),\n\t\t\t\t\t]),\n\t\t\t\t)\n\n\t\t\t\tconst load = spy(() => Promise.reject(new Error(\"error from test\")))\n\t\t\t\tconst loadMock = mockAttribute(entityRestClient, entityRestClient.load, load)\n\t\t\t\tconst thrown = await assertThrows(Error, () => cache.load(MailTypeRef, [getListId(instance), getElementId(instance)]))\n\t\t\t\to(thrown.message).equals(\"error from test\")\n\t\t\t\to(load.callCount).equals(1)(\"load is called once\")\n\t\t\t\tconst result2 = await cache.load(MailTypeRef, [newListId, getElementId(instance)])\n\t\t\t\to(result2).deepEquals(newInstance)(\"Cached instance is a newInstance\")\n\t\t\t\tunmockAttribute(loadMock)\n\t\t\t})\n\t\t\to(\"Mail should not be loaded when a move event is received - update bucket key\", async function () {\n\t\t\t\tconst instance = createMailInstance(\"listId1\", \"id1\", \"henlo\")\n\t\t\t\tinstance.bucketKey = createTestEntity(BucketKeyTypeRef, {\n\t\t\t\t\tbucketEncSessionKeys: [\n\t\t\t\t\t\tcreateTestEntity(InstanceSessionKeyTypeRef, {\n\t\t\t\t\t\t\tinstanceList: \"listId1\",\n\t\t\t\t\t\t\tinstanceId: getElementId(instance),\n\t\t\t\t\t\t}),\n\t\t\t\t\t],\n\t\t\t\t})\n\t\t\t\tawait storage.put(instance)\n\n\t\t\t\tconst newListId = \"listId2\"\n\n\t\t\t\t// The moved mail will not be loaded from the server\n\t\t\t\tawait cache.entityEventsReceived(\n\t\t\t\t\tmakeBatch([\n\t\t\t\t\t\tcreateUpdate(MailTypeRef, getListId(instance), getElementId(instance), OperationType.DELETE),\n\t\t\t\t\t\tcreateUpdate(MailTypeRef, newListId, getElementId(instance), OperationType.CREATE),\n\t\t\t\t\t]),\n\t\t\t\t)\n\n\t\t\t\tconst load = spy(() => Promise.reject(new Error(\"error from test\")))\n\t\t\t\tconst loadMock = mockAttribute(entityRestClient, entityRestClient.load, load)\n\t\t\t\tconst thrown = await assertThrows(Error, () => cache.load(MailTypeRef, [getListId(instance), getElementId(instance)]))\n\t\t\t\to(thrown.message).equals(\"error from test\")\n\t\t\t\to(load.callCount).equals(1)(\"load is called once\")\n\t\t\t\tconst result2 = await cache.load(MailTypeRef, [newListId, getElementId(instance)])\n\t\t\t\to(result2.bucketKey?.bucketEncSessionKeys[0].instanceList).deepEquals(newListId)(\"Cached instance has updated InstanceSessionKey\")\n\t\t\t\tunmockAttribute(loadMock)\n\t\t\t})\n\n\t\t\to(\"id is in range but instance doesn't exist after moving lower range\", async function () {\n\t\t\t\tconst listId = \"listId1\"\n\n\t\t\t\tconst mails = [1, 2, 3].map((i) => createMailInstance(listId, \"id\" + i, \"mail\" + i))\n\t\t\t\tconst newListId = \"listId2\"\n\n\t\t\t\tconst loadRange = spy(() => Promise.resolve(mails))\n\t\t\t\tconst loadRangeMock = mockAttribute(entityRestClient, entityRestClient.loadRange, loadRange)\n\t\t\t\tstorage.lockRangesDbAccess = spy(storage.lockRangesDbAccess)\n\t\t\t\tstorage.unlockRangesDbAccess = spy(storage.unlockRangesDbAccess)\n\n\t\t\t\tawait cache.loadRange(MailTypeRef, listId, GENERATED_MIN_ID, 3, false)\n\n\t\t\t\t// Verify that we lock/unlock the ranges database when loading the range\n\t\t\t\to(storage.lockRangesDbAccess.invocations).deepEquals([[listId]])\n\t\t\t\to(storage.unlockRangesDbAccess.invocations).deepEquals([[listId]])\n\n\t\t\t\to(loadRange.callCount).equals(1)\n\t\t\t\tunmockAttribute(loadRangeMock)\n\n\t\t\t\t// Move mail event: we don't try to load the mail again, we just update our cached mail\n\t\t\t\tawait cache.entityEventsReceived(\n\t\t\t\t\tmakeBatch([\n\t\t\t\t\t\tcreateUpdate(MailTypeRef, getListId(mails[0]), getElementId(mails[0]), OperationType.DELETE),\n\t\t\t\t\t\tcreateUpdate(MailTypeRef, newListId, getElementId(mails[0]), OperationType.CREATE),\n\t\t\t\t\t]),\n\t\t\t\t)\n\n\t\t\t\t// id3 was moved to another list, which means it is no longer cached, which means we should try to load it again (causing NotFoundError)\n\t\t\t\tconst load = spy(() => Promise.reject(new Error(\"This is not the mail you're looking for\")))\n\t\t\t\tconst loadMock = mockAttribute(entityRestClient, entityRestClient.load, load)\n\t\t\t\tconst thrown = await assertThrows(Error, () => cache.load(MailTypeRef, [listId, getElementId(mails[0])]))\n\t\t\t\to(thrown.message).equals(\"This is not the mail you're looking for\")\n\t\t\t\to(load.callCount).equals(1)\n\t\t\t\tunmockAttribute(loadMock)\n\t\t\t})\n\n\t\t\to(\"id is in range but instance doesn't exist after moving upper range\", async function () {\n\t\t\t\tconst mails = [\n\t\t\t\t\tcreateMailInstance(\"listId1\", \"id1\", \"mail 1\"),\n\t\t\t\t\tcreateMailInstance(\"listId1\", \"id2\", \"mail 2\"),\n\t\t\t\t\tcreateMailInstance(\"listId1\", \"id3\", \"mail 3\"),\n\t\t\t\t]\n\n\t\t\t\tconst loadRange = spy(async () => Promise.resolve(mails))\n\t\t\t\tconst loadRangeMock = mockAttribute(entityRestClient, entityRestClient.loadRange, loadRange)\n\n\t\t\t\tawait cache.loadRange(MailTypeRef, \"listId1\", GENERATED_MIN_ID, 3, false)\n\t\t\t\to(loadRange.callCount).equals(1)\n\n\t\t\t\tunmockAttribute(loadRangeMock)\n\n\t\t\t\t// Move mail event: we don't try to load the mail again, we just update our cached mail\n\t\t\t\tawait cache.entityEventsReceived(\n\t\t\t\t\tmakeBatch([\n\t\t\t\t\t\tcreateUpdate(MailTypeRef, \"listId1\", getElementId(mails[2]), OperationType.DELETE),\n\t\t\t\t\t\tcreateUpdate(MailTypeRef, \"listId2\", getElementId(mails[2]), OperationType.CREATE),\n\t\t\t\t\t]),\n\t\t\t\t)\n\n\t\t\t\t// id3 was moved to another list, which means it is no longer cached, which means we should try to load it again when requested (causing NotFoundError)\n\t\t\t\tconst load = spy(async function () {\n\t\t\t\t\tthrow new Error(\"This is not the mail you're looking for\")\n\t\t\t\t})\n\t\t\t\tconst loadMock = mockAttribute(entityRestClient, entityRestClient.load, load)\n\t\t\t\tconst thrown = await assertThrows(Error, () => cache.load(MailTypeRef, [\"listId1\", getElementId(mails[2])]))\n\t\t\t\to(thrown.message).equals(\"This is not the mail you're looking for\")\n\t\t\t\t//load was called when we tried to load the moved mail when we tried to load the moved mail\n\t\t\t\to(load.callCount).equals(1)\n\t\t\t\tunmockAttribute(loadMock)\n\t\t\t})\n\n\t\t\to(\"delete Mail deletes MailDetailsBlob\", async function () {\n\t\t\t\tconst mailDetailsBlob = createTestEntity(MailDetailsBlobTypeRef, { _id: [\"archiveId\", \"blobId\"] })\n\t\t\t\tconst mail = createMailInstance(\"listId1\", \"id1\", \"mail 1\")\n\t\t\t\tmail.mailDetails = mailDetailsBlob._id\n\n\t\t\t\tawait storage.put(mail)\n\t\t\t\tawait storage.put(mailDetailsBlob)\n\n\t\t\t\tawait cache.entityEventsReceived(makeBatch([createUpdate(MailTypeRef, mail._id[0], mail._id[1], OperationType.DELETE)]))\n\n\t\t\t\to(await storage.get(MailTypeRef, mail._id[0], mail._id[1])).equals(null)\n\t\t\t\to(await storage.get(MailDetailsBlobTypeRef, mailDetailsBlob._id[0], mailDetailsBlob._id[1])).equals(null)\n\t\t\t})\n\n\t\t\t// list element notifications\n\n\t\t\tif (name === \"offline\") {\n\t\t\t\to(\"when the list is not cache, list element create notifications are still put into cache\", async function () {\n\t\t\t\t\tconst mail = createMailInstance(\"listId1\", \"id1\", \"i am a mail\")\n\t\t\t\t\tconst load = func<EntityRestClient[\"load\"]>()\n\t\t\t\t\twhen(load(MailTypeRef, mail._id)).thenResolve(mail)\n\t\t\t\t\tmockAttribute(entityRestClient, entityRestClient.load, load)\n\n\t\t\t\t\tawait cache.entityEventsReceived(makeBatch([createUpdate(MailTypeRef, getListId(mail), getElementId(mail), OperationType.CREATE)]))\n\n\t\t\t\t\to(await storage.get(MailTypeRef, getListId(mail), getElementId(mail))).deepEquals(mail)\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\t// With ephemeral cache we do not automatically download all mails because we don't need to.\n\t\t\t\to(\"when the list is not cached, mail create notifications are not put into cache\", async function () {\n\t\t\t\t\tawait cache.entityEventsReceived(makeBatch([createUpdate(MailTypeRef, \"listId1\", createId(\"id1\"), OperationType.CREATE)]))\n\t\t\t\t})\n\t\t\t}\n\n\t\t\to(\"list element update notifications are not put into cache\", async function () {\n\t\t\t\tawait cache.entityEventsReceived(makeBatch([createUpdate(MailTypeRef, \"listId1\", createId(\"id1\"), OperationType.UPDATE)]))\n\t\t\t})\n\n\t\t\to(\"list element is updated in cache\", async function () {\n\t\t\t\tlet initialMail = createMailInstance(\"listId1\", createId(\"id1\"), \"hello\")\n\t\t\t\tawait storage.put(initialMail)\n\n\t\t\t\tlet mailUpdate = createMailInstance(\"listId1\", createId(\"id1\"), \"goodbye\")\n\t\t\t\tconst load = spy(function (typeRef, id) {\n\t\t\t\t\to(isSameTypeRef(typeRef, MailTypeRef)).equals(true)\n\t\t\t\t\to(id).deepEquals([\"listId1\", createId(\"id1\")])\n\t\t\t\t\treturn Promise.resolve(mailUpdate)\n\t\t\t\t})\n\n\t\t\t\tconst loadMock = mockAttribute(entityRestClient, entityRestClient.load, load)\n\t\t\t\tawait cache.entityEventsReceived(makeBatch([createUpdate(MailTypeRef, \"listId1\", createId(\"id1\"), OperationType.UPDATE)]))\n\t\t\t\to(load.callCount).equals(1) // entity is loaded from server\n\n\t\t\t\tconst mail = await cache.load(MailTypeRef, [\"listId1\", createId(\"id1\")])\n\t\t\t\to(mail.subject).equals(\"goodbye\")\n\t\t\t\to(load.callCount).equals(1) // entity is provided from cache\n\n\t\t\t\tunmockAttribute(loadMock)\n\t\t\t})\n\n\t\t\to(\"when deleted from a range, then the remaining range will still be retrieved from the cache\", async function () {\n\t\t\t\tconst originalMails = await setupMailList(true, true)\n\t\t\t\t// no load should be called\n\t\t\t\tawait cache.entityEventsReceived(makeBatch([createUpdate(MailTypeRef, \"listId1\", createId(\"id2\"), OperationType.DELETE)]))\n\t\t\t\tconst mails = await cache.loadRange(MailTypeRef, \"listId1\", GENERATED_MIN_ID, 4, false)\n\t\t\t\t// The entity is provided from the cache\n\t\t\t\to(mails).deepEquals([originalMails[0], originalMails[2]])\n\t\t\t})\n\n\t\t\to.spec(\"membership changes\", function () {\n\t\t\t\to(\"no membership change does not delete an entity and lastUpdateBatchIdPerGroup\", async function () {\n\t\t\t\t\tconst userId = \"userId\"\n\t\t\t\t\tconst calendarGroupId = \"calendarGroupId\"\n\t\t\t\t\tconst initialUser = createTestEntity(UserTypeRef, {\n\t\t\t\t\t\t_id: userId,\n\t\t\t\t\t\tmemberships: [\n\t\t\t\t\t\t\tcreateTestEntity(GroupMembershipTypeRef, {\n\t\t\t\t\t\t\t\t_id: \"mailShipId\",\n\t\t\t\t\t\t\t\tgroupType: GroupType.Mail,\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tcreateTestEntity(GroupMembershipTypeRef, {\n\t\t\t\t\t\t\t\t_id: \"calendarShipId\",\n\t\t\t\t\t\t\t\tgroup: calendarGroupId,\n\t\t\t\t\t\t\t\tgroupType: GroupType.Calendar,\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t],\n\t\t\t\t\t})\n\n\t\t\t\t\tentityRestClient.load = func<EntityRestClient[\"load\"]>()\n\t\t\t\t\twhen(entityRestClient.load(UserTypeRef, userId)).thenResolve(initialUser)\n\n\t\t\t\t\tawait storage.put(initialUser)\n\n\t\t\t\t\tconst eventId: IdTuple = [\"eventListId\", \"eventId\"]\n\t\t\t\t\tconst event = createTestEntity(CalendarEventTypeRef, {\n\t\t\t\t\t\t_id: eventId,\n\t\t\t\t\t\t_ownerGroup: calendarGroupId,\n\t\t\t\t\t})\n\n\t\t\t\t\tawait storage.put(event)\n\t\t\t\t\tawait storage.putLastBatchIdForGroup(calendarGroupId, \"1\")\n\t\t\t\t\tstorage.getUserId = () => userId\n\n\t\t\t\t\tawait cache.entityEventsReceived(makeBatch([createUpdate(UserTypeRef, \"\", userId, OperationType.UPDATE)]))\n\n\t\t\t\t\to(await storage.get(CalendarEventTypeRef, listIdPart(eventId), elementIdPart(eventId))).notEquals(null)(\"Event has been evicted from cache\")\n\t\t\t\t\to(await storage.getLastBatchIdForGroup(calendarGroupId)).notEquals(null)\n\t\t\t\t})\n\n\t\t\t\to(\"membership change deletes an element entity and lastUpdateBatchIdPerGroup\", async function () {\n\t\t\t\t\tconst userId = \"userId\"\n\t\t\t\t\tconst calendarGroupId = \"calendarGroupId\"\n\t\t\t\t\tconst initialUser = createTestEntity(UserTypeRef, {\n\t\t\t\t\t\t_id: userId,\n\t\t\t\t\t\tmemberships: [\n\t\t\t\t\t\t\tcreateTestEntity(GroupMembershipTypeRef, {\n\t\t\t\t\t\t\t\t_id: \"mailShipId\",\n\t\t\t\t\t\t\t\tgroupType: GroupType.Mail,\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tcreateTestEntity(GroupMembershipTypeRef, {\n\t\t\t\t\t\t\t\t_id: \"calendarShipId\",\n\t\t\t\t\t\t\t\tgroup: calendarGroupId,\n\t\t\t\t\t\t\t\tgroupType: GroupType.Calendar,\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t],\n\t\t\t\t\t})\n\n\t\t\t\t\tawait storage.put(initialUser)\n\n\t\t\t\t\tconst updatedUser = createTestEntity(UserTypeRef, {\n\t\t\t\t\t\t_id: userId,\n\t\t\t\t\t\tmemberships: [\n\t\t\t\t\t\t\tcreateTestEntity(GroupMembershipTypeRef, {\n\t\t\t\t\t\t\t\t_id: \"mailShipId\",\n\t\t\t\t\t\t\t\tgroupType: GroupType.Mail,\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t],\n\t\t\t\t\t})\n\n\t\t\t\t\tentityRestClient.load = func<EntityRestClient[\"load\"]>()\n\t\t\t\t\twhen(entityRestClient.load(UserTypeRef, userId)).thenResolve(updatedUser)\n\n\t\t\t\t\tconst groupRootId = \"groupRootId\"\n\t\t\t\t\tconst groupRoot = createTestEntity(GroupRootTypeRef, {\n\t\t\t\t\t\t_id: groupRootId,\n\t\t\t\t\t\t_ownerGroup: calendarGroupId,\n\t\t\t\t\t})\n\n\t\t\t\t\tawait storage.put(groupRoot)\n\t\t\t\t\tawait storage.putLastBatchIdForGroup(calendarGroupId, \"1\")\n\t\t\t\t\tstorage.getUserId = () => userId\n\n\t\t\t\t\tawait cache.entityEventsReceived(makeBatch([createUpdate(UserTypeRef, \"\", userId, OperationType.UPDATE)]))\n\n\t\t\t\t\to(await storage.get(CalendarEventTypeRef, null, groupRootId)).equals(null)(\"GroupRoot has been evicted from cache\")\n\t\t\t\t\to(await storage.getLastBatchIdForGroup(calendarGroupId)).equals(null)\n\t\t\t\t})\n\n\t\t\t\to(\"membership change deletes a list entity and lastUpdateBatchIdPerGroup\", async function () {\n\t\t\t\t\tconst userId = \"userId\"\n\t\t\t\t\tconst calendarGroupId = \"calendarGroupId\"\n\t\t\t\t\tconst initialUser = createTestEntity(UserTypeRef, {\n\t\t\t\t\t\t_id: userId,\n\t\t\t\t\t\tmemberships: [\n\t\t\t\t\t\t\tcreateTestEntity(GroupMembershipTypeRef, {\n\t\t\t\t\t\t\t\t_id: \"mailShipId\",\n\t\t\t\t\t\t\t\tgroupType: GroupType.Mail,\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tcreateTestEntity(GroupMembershipTypeRef, {\n\t\t\t\t\t\t\t\t_id: \"calendarShipId\",\n\t\t\t\t\t\t\t\tgroup: calendarGroupId,\n\t\t\t\t\t\t\t\tgroupType: GroupType.Calendar,\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t],\n\t\t\t\t\t})\n\n\t\t\t\t\tawait storage.put(initialUser)\n\n\t\t\t\t\tconst updatedUser = createTestEntity(UserTypeRef, {\n\t\t\t\t\t\t_id: userId,\n\t\t\t\t\t\tmemberships: [\n\t\t\t\t\t\t\tcreateTestEntity(GroupMembershipTypeRef, {\n\t\t\t\t\t\t\t\t_id: \"mailShipId\",\n\t\t\t\t\t\t\t\tgroupType: GroupType.Mail,\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t],\n\t\t\t\t\t})\n\n\t\t\t\t\tentityRestClient.load = func<EntityRestClient[\"load\"]>()\n\t\t\t\t\twhen(entityRestClient.load(UserTypeRef, userId)).thenResolve(updatedUser)\n\n\t\t\t\t\tconst eventId: IdTuple = [\"eventListId\", \"eventId\"]\n\t\t\t\t\tconst event = createTestEntity(CalendarEventTypeRef, {\n\t\t\t\t\t\t_id: eventId,\n\t\t\t\t\t\t_ownerGroup: calendarGroupId,\n\t\t\t\t\t})\n\n\t\t\t\t\tawait storage.put(event)\n\t\t\t\t\tawait storage.putLastBatchIdForGroup?.(calendarGroupId, \"1\")\n\t\t\t\t\tstorage.getUserId = () => userId\n\n\t\t\t\t\tawait cache.entityEventsReceived(makeBatch([createUpdate(UserTypeRef, \"\", userId, OperationType.UPDATE)]))\n\n\t\t\t\t\to(await storage.get(CalendarEventTypeRef, listIdPart(eventId), elementIdPart(eventId))).equals(null)(\"Event has been evicted from cache\")\n\t\t\t\t\tconst deletedRange = await storage.getRangeForList(CalendarEventTypeRef, listIdPart(eventId))\n\t\t\t\t\to(deletedRange).equals(null)\n\t\t\t\t\tif (storage.getLastBatchIdForGroup) o(await storage.getLastBatchIdForGroup(calendarGroupId)).equals(null)\n\t\t\t\t})\n\n\t\t\t\to(\"membership change but for another user does nothing\", async function () {\n\t\t\t\t\tconst userId = \"userId\"\n\t\t\t\t\tconst calendarGroupId = \"calendarGroupId\"\n\t\t\t\t\tconst initialUser = createTestEntity(UserTypeRef, {\n\t\t\t\t\t\t_id: userId,\n\t\t\t\t\t\tmemberships: [\n\t\t\t\t\t\t\tcreateTestEntity(GroupMembershipTypeRef, {\n\t\t\t\t\t\t\t\t_id: \"mailShipId\",\n\t\t\t\t\t\t\t\tgroupType: GroupType.Mail,\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tcreateTestEntity(GroupMembershipTypeRef, {\n\t\t\t\t\t\t\t\t_id: \"calendarShipId\",\n\t\t\t\t\t\t\t\tgroup: calendarGroupId,\n\t\t\t\t\t\t\t\tgroupType: GroupType.Calendar,\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t],\n\t\t\t\t\t})\n\n\t\t\t\t\tawait storage.put(initialUser)\n\n\t\t\t\t\tconst updatedUser = createTestEntity(UserTypeRef, {\n\t\t\t\t\t\t_id: userId,\n\t\t\t\t\t\tmemberships: [\n\t\t\t\t\t\t\tcreateTestEntity(GroupMembershipTypeRef, {\n\t\t\t\t\t\t\t\t_id: \"mailShipId\",\n\t\t\t\t\t\t\t\tgroupType: GroupType.Mail,\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t],\n\t\t\t\t\t})\n\n\t\t\t\t\tentityRestClient.load = func<EntityRestClient[\"load\"]>()\n\t\t\t\t\twhen(entityRestClient.load(UserTypeRef, userId)).thenResolve(updatedUser)\n\n\t\t\t\t\tconst eventId: IdTuple = [\"eventListId\", \"eventId\"]\n\t\t\t\t\tconst event = createTestEntity(CalendarEventTypeRef, {\n\t\t\t\t\t\t_id: eventId,\n\t\t\t\t\t\t_ownerGroup: calendarGroupId,\n\t\t\t\t\t})\n\n\t\t\t\t\tawait storage.put(event)\n\t\t\t\t\tstorage.getUserId = () => \"anotherUserId\"\n\n\t\t\t\t\tawait cache.entityEventsReceived(makeBatch([createUpdate(UserTypeRef, \"\", userId, OperationType.UPDATE)]))\n\n\t\t\t\t\to(await storage.get(CalendarEventTypeRef, listIdPart(eventId), elementIdPart(eventId))).notEquals(null)(\"Event has been evicted from cache\")\n\t\t\t\t})\n\t\t\t})\n\t\t}) // entityEventsReceived\n\n\t\to(\"when reading from the cache, the entities will be cloned\", async function () {\n\t\t\tconst archiveId = \"archiveId\"\n\t\t\tconst mailDetailsBlob = createMailDetailsBlobInstance(archiveId, \"id1\", \"hello\")\n\t\t\tawait storage.put(mailDetailsBlob)\n\n\t\t\tconst mailDetailsBlob1 = await cache.load(MailDetailsBlobTypeRef, [archiveId, createId(\"id1\")])\n\t\t\to(mailDetailsBlob1 == mailDetailsBlob).equals(false)\n\t\t\tconst mailDetailsBlob2 = await cache.load(MailDetailsBlobTypeRef, [archiveId, createId(\"id1\")])\n\t\t\to(mailDetailsBlob1 == mailDetailsBlob2).equals(false)\n\t\t})\n\n\t\to(\"when reading from the cache, the entities will be cloned pt.2\", async function () {\n\t\t\tlet mail = createMailInstance(\"listId1\", \"id1\", \"hello\")\n\t\t\tawait storage.put(mail)\n\t\t\tconst mail1 = await cache.load(MailTypeRef, [\"listId1\", createId(\"id1\")])\n\t\t\to(mail1 == mail).equals(false)\n\t\t\tconst mail2 = await cache.load(MailTypeRef, [\"listId1\", createId(\"id1\")])\n\t\t\to(mail1 == mail2).equals(false)\n\t\t})\n\n\t\tasync function setupMailList(loadedUntilMinId: boolean, loadedUntilMaxId: boolean): Promise<Mail[]> {\n\t\t\tlet mail1 = createMailInstance(\"listId1\", \"id1\", \"hello1\")\n\t\t\tlet mail2 = createMailInstance(\"listId1\", \"id2\", \"hello2\")\n\t\t\tlet mail3 = createMailInstance(\"listId1\", \"id3\", \"hello3\")\n\t\t\tlet startId = loadedUntilMaxId ? GENERATED_MAX_ID : createId(\"id4\")\n\t\t\tlet count = loadedUntilMinId ? 4 : 3\n\t\t\tconst loadRange = spy(function (typeRef, listId, start, countParam, reverse) {\n\t\t\t\to(isSameTypeRef(typeRef, MailTypeRef)).equals(true)\n\t\t\t\to(listId).equals(\"listId1\")\n\t\t\t\to(start).equals(startId)\n\t\t\t\to(countParam).equals(count)\n\t\t\t\to(reverse).equals(true)\n\t\t\t\treturn Promise.resolve([mail3, mail2, mail1])\n\t\t\t})\n\t\t\tconst mock = mockAttribute(entityRestClient, entityRestClient.loadRange, loadRange)\n\t\t\t// load the mails in reverse because this is the mail use case. return them in reverse to have the intuitive order\n\t\t\tconst mails = await cache.loadRange(MailTypeRef, \"listId1\", startId, count, true)\n\t\t\to(mails).deepEquals(clone([mail3, mail2, mail1]))\n\t\t\to(loadRange.callCount).equals(1) // entities are loaded from server\n\t\t\tunmockAttribute(mock)\n\t\t\treturn clone([mail1, mail2, mail3])\n\t\t}\n\n\t\to(\"when reading from the cache, the entities will be cloned (range requests)\", async function () {\n\t\t\tconst originalMails = await setupMailList(true, true)\n\n\t\t\t// the range request will be provided from the cache\n\t\t\tconst mails = await cache.loadRange(MailTypeRef, \"listId1\", GENERATED_MIN_ID, 3, false)\n\t\t\to(mails).deepEquals(originalMails)\n\t\t\to(mails[0] == originalMails[0]).equals(false)\n\t\t\to(mails[1] == originalMails[1]).equals(false)\n\t\t\to(mails[2] == originalMails[2]).equals(false)\n\t\t})\n\n\t\to(\"list elements are provided from cache - range min to max loaded\", async function () {\n\t\t\tconst originalMails = await setupMailList(true, true)\n\n\t\t\tlet mails\n\n\t\t\tmails = await cache.loadRange(MailTypeRef, \"listId1\", GENERATED_MIN_ID, 3, false)\n\t\t\to(mails).deepEquals(originalMails)\n\n\t\t\tmails = await cache.loadRange(MailTypeRef, \"listId1\", GENERATED_MIN_ID, 1, false)\n\t\t\to(mails).deepEquals(originalMails.slice(0, 1))\n\n\t\t\tmails = await cache.loadRange(MailTypeRef, \"listId1\", GENERATED_MIN_ID, 4, false)\n\t\t\to(mails).deepEquals(originalMails)\n\n\t\t\tmails = await cache.loadRange(MailTypeRef, \"listId1\", createId(\"id1\"), 2, false)\n\t\t\to(mails).deepEquals(originalMails.slice(1, 3))\n\n\t\t\tmails = await cache.loadRange(MailTypeRef, \"listId1\", GENERATED_MAX_ID, 3, true)\n\t\t\to(mails).deepEquals([originalMails[2], originalMails[1], originalMails[0]])\n\n\t\t\tmails = await cache.loadRange(MailTypeRef, \"listId1\", createId(\"id2\"), 1, true)\n\t\t\to(mails).deepEquals(originalMails.slice(0, 1))\n\n\t\t\tmails = await cache.loadRange(MailTypeRef, \"listId1\", createId(\"id2\"), 3, true)\n\t\t\to(mails).deepEquals(originalMails.slice(0, 1))\n\t\t})\n\n\t\to(\"list elements are provided from cache - range min to id3 loaded\", async function () {\n\t\t\tconst originalMails = await setupMailList(true, false)\n\t\t\tlet mails\n\t\t\tmails = await cache.loadRange(MailTypeRef, \"listId1\", GENERATED_MIN_ID, 3, false)\n\t\t\to(mails).deepEquals(originalMails)\n\t\t\tmails = await cache.loadRange(MailTypeRef, \"listId1\", GENERATED_MIN_ID, 1, false)\n\t\t\to(mails).deepEquals(originalMails.slice(0, 1))\n\t\t\tmails = await cache.loadRange(MailTypeRef, \"listId1\", createId(\"id1\"), 2, false)\n\t\t\to(mails).deepEquals(originalMails.slice(1, 3))\n\t\t\tmails = await cache.loadRange(MailTypeRef, \"listId1\", createId(\"id2\"), 1, true)\n\t\t\to(mails).deepEquals(originalMails.slice(0, 1))\n\t\t\tmails = await cache.loadRange(MailTypeRef, \"listId1\", createId(\"id2\"), 3, true)\n\t\t\to(mails).deepEquals(originalMails.slice(0, 1))\n\t\t\tmails = await cache.loadRange(MailTypeRef, \"listId1\", createId(\"id0\"), 3, true)\n\t\t\to(mails).deepEquals([])\n\t\t})\n\n\t\to(\"list elements are provided from cache - range max to id1 loaded\", async function () {\n\t\t\tconst originalMails = await setupMailList(false, true)\n\t\t\tlet mails\n\t\t\tmails = await cache.loadRange(MailTypeRef, \"listId1\", GENERATED_MAX_ID, 3, true)\n\t\t\to(mails).deepEquals([originalMails[2], originalMails[1], originalMails[0]])\n\t\t\tmails = await cache.loadRange(MailTypeRef, \"listId1\", GENERATED_MAX_ID, 2, true)\n\t\t\to(mails).deepEquals([originalMails[2], originalMails[1]])\n\t\t\tmails = await cache.loadRange(MailTypeRef, \"listId1\", createId(\"id5\"), 1, false)\n\t\t\to(mails).deepEquals([])\n\n\t\t\tmails = await cache.loadRange(MailTypeRef, \"listId1\", createId(\"id2\"), 1, true)\n\t\t\to(mails).deepEquals(originalMails.slice(0, 1))\n\t\t\tmails = await cache.loadRange(MailTypeRef, \"listId1\", createId(\"id1\"), 2, false)\n\t\t\to(mails).deepEquals(originalMails.slice(1, 3))\n\t\t})\n\n\t\to(\"load list elements partly from server - range min to id3 loaded\", async function () {\n\t\t\tlet mail4 = createMailInstance(\"listId1\", \"id4\", \"subject4\")\n\t\t\tconst cachedMails = await setupMailList(true, false)\n\t\t\tconst loadRange = spy(function (typeRef, listId, start, count, reverse) {\n\t\t\t\to(isSameTypeRef(typeRef, MailTypeRef)).equals(true)\n\t\t\t\to(listId).equals(\"listId1\")\n\t\t\t\to(start).equals(getElementId(cachedMails[2]))\n\t\t\t\to(count).equals(1)\n\t\t\t\to(reverse).equals(false)\n\t\t\t\treturn Promise.resolve([mail4])\n\t\t\t})\n\n\t\t\tconst loadRangeMock = mockAttribute(entityRestClient, entityRestClient.loadRange, loadRange)\n\n\t\t\tconst result = await cache.loadRange(MailTypeRef, \"listId1\", GENERATED_MIN_ID, 4, false)\n\n\t\t\to(result).deepEquals([cachedMails[0], cachedMails[1], cachedMails[2], clone(mail4)])\n\t\t\to((await storage.get(MailTypeRef, getListId(mail4), getElementId(mail4)))!).deepEquals(mail4)\n\t\t\to(loadRange.callCount).equals(1) // entities are provided from server\n\n\t\t\tunmockAttribute(loadRangeMock)\n\t\t})\n\n\t\to(\"load list elements partly from server - range min to id3 loaded - range request id2 count 2\", async function () {\n\t\t\tlet mail4 = createMailInstance(\"listId1\", \"id4\", \"subject4\")\n\t\t\tconst cachedMails = await setupMailList(true, false)\n\t\t\tconst loadRange = spy(function (typeRef, listId, start, count, reverse) {\n\t\t\t\to(isSameTypeRef(typeRef, MailTypeRef)).equals(true)\n\t\t\t\to(listId).equals(\"listId1\")\n\t\t\t\to(start).equals(getElementId(cachedMails[2]))\n\t\t\t\to(count).equals(1)\n\t\t\t\to(reverse).equals(false)\n\t\t\t\treturn Promise.resolve([mail4])\n\t\t\t})\n\n\t\t\tconst loadRangeMock = mockAttribute(entityRestClient, entityRestClient.loadRange, loadRange)\n\n\t\t\tconst result = await cache.loadRange(MailTypeRef, \"listId1\", createId(\"id2\"), 2, false)\n\n\t\t\to(result).deepEquals([cachedMails[2], clone(mail4)])\n\t\t\to((await storage.get(MailTypeRef, getListId(mail4), getElementId(mail4)))!).deepEquals(mail4)\n\t\t\to(loadRange.callCount).equals(1) // entities are provided from server\n\n\t\t\tunmockAttribute(loadRangeMock)\n\t\t})\n\n\t\to(\"when part of a range is already in cache, load range should only try to load what it doesn't have already\", async function () {\n\t\t\tlet mail0 = createMailInstance(\"listId1\", \"id0\", \"subject0\")\n\t\t\tconst cachedMails = await setupMailList(false, true)\n\t\t\tconst loadRange = spy(function (typeRef, listId, start, count, reverse) {\n\t\t\t\to(isSameTypeRef(typeRef, MailTypeRef)).equals(true)\n\t\t\t\to(listId).equals(\"listId1\")\n\t\t\t\to(start).equals(getElementId(cachedMails[0]))\n\t\t\t\to(count).equals(3)\n\t\t\t\to(reverse).equals(true)\n\t\t\t\treturn Promise.resolve([mail0])\n\t\t\t})\n\n\t\t\tconst loadRangeMock = mockAttribute(entityRestClient, entityRestClient.loadRange, loadRange)\n\t\t\tconst result = await cache.loadRange(MailTypeRef, \"listId1\", createId(\"id2\"), 4, true)\n\n\t\t\to((await storage.get(MailTypeRef, getListId(mail0), getElementId(mail0)))!).deepEquals(mail0)\n\t\t\to(result).deepEquals([cachedMails[0], clone(mail0)])\n\t\t\to(loadRange.callCount).equals(1) // entities are provided from server\n\t\t\tunmockAttribute(loadRangeMock)\n\t\t})\n\n\t\to(\"load list elements partly from server - range max to id2 loaded - loadMore\", async function () {\n\t\t\tlet mail0 = createMailInstance(\"listId1\", \"id0\", \"subject0\")\n\t\t\tconst cachedMails = await setupMailList(false, true)\n\t\t\tconst loadRange = spy(function (typeRef, listId, start, count, reverse) {\n\t\t\t\to(isSameTypeRef(typeRef, MailTypeRef)).equals(true)\n\t\t\t\to(listId).equals(\"listId1\")\n\t\t\t\to(start).equals(cachedMails[0]._id[1])\n\t\t\t\to(count).equals(4)\n\t\t\t\to(reverse).equals(true)\n\t\t\t\treturn Promise.resolve([mail0])\n\t\t\t})\n\n\t\t\tconst mock = mockAttribute(entityRestClient, entityRestClient.loadRange, loadRange)\n\t\t\tconst result = await cache.loadRange(MailTypeRef, \"listId1\", createId(\"id1\"), 4, true)\n\n\t\t\to((await storage.get(MailTypeRef, getListId(mail0), getElementId(mail0)))!).deepEquals(mail0)\n\t\t\to(result).deepEquals([clone(mail0)])\n\t\t\to(loadRange.callCount).equals(1) // entities are provided from server\n\t\t\tunmockAttribute(mock)\n\t\t})\n\n\t\to(\"load range starting outside of stored range - not reverse\", async function () {\n\t\t\tconst listId = \"listId1\"\n\t\t\tconst mail5 = createMailInstance(listId, \"id5\", \"subject5\")\n\t\t\tconst mail6 = createMailInstance(listId, \"id6\", \"subject6\")\n\n\t\t\tconst cachedMails = await setupMailList(true, false)\n\t\t\tconst loadRange = spy(function (typeRef, listId, start, count, reverse) {\n\t\t\t\to(isSameTypeRef(typeRef, MailTypeRef)).equals(true)\n\t\t\t\to(listId).equals(listId)\n\t\t\t\to(start).equals(createId(\"id4\"))\n\t\t\t\to(count).equals(EXTEND_RANGE_MIN_CHUNK_SIZE)\n\t\t\t\t// the cache actually loads from the end of the range which is id4\n\t\t\t\t//TODO  shouldn't it be id3?\n\t\t\t\to(reverse).equals(false)\n\t\t\t\treturn Promise.resolve([mail5, mail6])\n\t\t\t})\n\n\t\t\tconst loadRangeMock = mockAttribute(entityRestClient, entityRestClient.loadRange, loadRange)\n\t\t\tconst result = await cache.loadRange(MailTypeRef, listId, createId(\"id5\"), 4, false)\n\n\t\t\to(loadRange.callCount).equals(1) // entities are provided from server\n\t\t\to(result).deepEquals([clone(mail6)])\n\n\t\t\t// further range reads are fully taken from range\n\t\t\tconst result2 = await cache.loadRange(MailTypeRef, listId, createId(\"id1\"), 4, false)\n\n\t\t\to(loadRange.callCount).equals(1) // entities are provided from cache\n\t\t\to(result2).deepEquals([cachedMails[1], cachedMails[2], clone(mail5), clone(mail6)])\n\t\t\tunmockAttribute(loadRangeMock)\n\t\t})\n\n\t\to(\"load range starting outside of stored range - reverse\", async function () {\n\t\t\tlet mailFirst = createMailInstance(\"listId1\", \"ic5\", \"subject\") // use ids smaller than \"id1\"\n\t\t\tlet mailSecond = createMailInstance(\"listId1\", \"ic8\", \"subject\")\n\t\t\tawait setupMailList(false, false)\n\t\t\tconst loadRange = spy(function (typeRef, listId, start, count, reverse) {\n\t\t\t\to(isSameTypeRef(typeRef, MailTypeRef)).equals(true)\n\t\t\t\to(listId).equals(\"listId1\")\n\t\t\t\t// the cache actually loads from the end of the range which is id1\n\t\t\t\to(start).equals(createId(\"id1\"))\n\t\t\t\to(count).equals(EXTEND_RANGE_MIN_CHUNK_SIZE)\n\t\t\t\to(reverse).equals(true)\n\t\t\t\treturn Promise.resolve([mailSecond, mailFirst])\n\t\t\t})\n\t\t\tconst mock = mockAttribute(entityRestClient, entityRestClient.loadRange, loadRange)\n\t\t\tconst result = await cache.loadRange(MailTypeRef, \"listId1\", createId(\"ic6\"), 4, true)\n\n\t\t\to(result).deepEquals([clone(mailFirst)])\n\t\t\to((await storage.get(MailTypeRef, getListId(mailFirst), getElementId(mailFirst)))!).deepEquals(mailFirst)\n\t\t\to(loadRange.callCount).equals(1) // entities are provided from server\n\t\t\tunmockAttribute(mock)\n\t\t})\n\n\t\to(\"reverse load range starting outside of stored range - no new elements\", async function () {\n\t\t\tawait setupMailList(false, false)\n\t\t\tconst loadRange = spy(function (typeRef, listId, start, count, reverse) {\n\t\t\t\to(isSameTypeRef(typeRef, MailTypeRef)).equals(true)\n\t\t\t\to(listId).equals(\"listId1\")\n\t\t\t\t// the cache actually loads from the end of the range which is id1\n\t\t\t\to(start).equals(createId(\"id1\"))\n\t\t\t\to(count).equals(EXTEND_RANGE_MIN_CHUNK_SIZE)\n\t\t\t\to(reverse).equals(true)\n\t\t\t\treturn Promise.resolve([])\n\t\t\t})\n\t\t\tconst mock = mockAttribute(entityRestClient, entityRestClient.loadRange, loadRange)\n\t\t\tconst result = await cache.loadRange(MailTypeRef, \"listId1\", createId(\"ic6\"), 4, true)\n\t\t\to(result).deepEquals([])\n\t\t\to(loadRange.callCount).equals(1) // entities are provided from server\n\t\t\tunmockAttribute(mock)\n\t\t})\n\n\t\to(\"no elements in range\", async function () {\n\t\t\tconst loadRange = spy(function (typeRef, listId, start, count, reverse) {\n\t\t\t\to(isSameTypeRef(typeRef, MailTypeRef)).equals(true)\n\t\t\t\to(listId).equals(\"listId1\")\n\t\t\t\to(start).equals(GENERATED_MAX_ID)\n\t\t\t\to(count).equals(100)\n\t\t\t\to(reverse).equals(true)\n\t\t\t\treturn Promise.resolve([])\n\t\t\t})\n\n\t\t\tconst mock = mockAttribute(entityRestClient, entityRestClient.loadRange, loadRange)\n\n\t\t\tconst result = await cache.loadRange(MailTypeRef, \"listId1\", GENERATED_MAX_ID, 100, true)\n\n\t\t\to(result).deepEquals([])\n\n\t\t\tconst result2 = await cache.loadRange(MailTypeRef, \"listId1\", GENERATED_MAX_ID, 100, true)\n\n\t\t\to(result2).deepEquals([])\n\t\t\to(loadRange.callCount).equals(1) // entities are only initially tried to be loaded from server\n\t\t\tunmockAttribute(mock)\n\t\t})\n\n\t\to(\"custom id range is not stored\", async function () {\n\t\t\tlet ref = clone(createTestEntity(ExternalUserReferenceTypeRef))\n\t\t\tref._id = [\"listId1\", stringToCustomId(\"custom\")]\n\t\t\tconst loadRange = spy(function (typeRef, listId, start, count, reverse) {\n\t\t\t\to(isSameTypeRef(typeRef, ExternalUserReferenceTypeRef)).equals(true)\n\t\t\t\to(listId).equals(\"listId1\")\n\t\t\t\to(start).equals(CUSTOM_MIN_ID)\n\t\t\t\to(count).equals(1)\n\t\t\t\to(reverse).equals(false)\n\t\t\t\treturn Promise.resolve([ref])\n\t\t\t})\n\n\t\t\tconst mock = mockAttribute(entityRestClient, entityRestClient.loadRange, loadRange)\n\t\t\tconst result1 = await cache.loadRange(ExternalUserReferenceTypeRef, \"listId1\", CUSTOM_MIN_ID, 1, false)\n\n\t\t\to(result1).deepEquals([ref])\n\t\t\tconst result2 = await cache.loadRange(ExternalUserReferenceTypeRef, \"listId1\", CUSTOM_MIN_ID, 1, false)\n\n\t\t\to(result2).deepEquals([ref])\n\t\t\to(loadRange.callCount).equals(2) // entities are always provided from server\n\t\t\tunmockAttribute(mock)\n\t\t})\n\n\t\to(\"when custom id type is cacheable, the range is cached\", async function () {\n\t\t\tlet ref = clone(createTestEntity(GroupKeyTypeRef))\n\t\t\tref._id = [\"listId1\", stringToCustomId(\"1\")]\n\t\t\tconst loadRange = spy(function (typeRef, listId, start, count, reverse) {\n\t\t\t\to(isSameTypeRef(typeRef, GroupKeyTypeRef)).equals(true)\n\t\t\t\to(listId).equals(\"listId1\")\n\t\t\t\to(start).equals(CUSTOM_MIN_ID)\n\t\t\t\to(count).equals(1)\n\t\t\t\to(reverse).equals(false)\n\t\t\t\treturn Promise.resolve([ref])\n\t\t\t})\n\n\t\t\tconst mock = mockAttribute(entityRestClient, entityRestClient.loadRange, loadRange)\n\t\t\tconst result1 = await cache.loadRange(GroupKeyTypeRef, \"listId1\", CUSTOM_MIN_ID, 1, false)\n\t\t\to(loadRange.callCount).equals(1) // second call deliviers custom id items from cache.\n\n\t\t\to(result1).deepEquals([ref])\n\t\t\tconst result2 = await cache.loadRange(GroupKeyTypeRef, \"listId1\", CUSTOM_MIN_ID, 1, false)\n\n\t\t\to(result2).deepEquals([ref])\n\t\t\to(loadRange.callCount).equals(1) // second call delivers custom id it\tems from cache.\n\t\t\tunmockAttribute(mock)\n\t\t})\n\n\t\to(\"Load towards the range with start being before the existing range. Range will be extended. Reverse. \", async function () {\n\t\t\tconst ids = [createId(\"1\"), createId(\"2\"), createId(\"3\"), createId(\"4\"), createId(\"5\")]\n\t\t\tconst listId1 = \"listId1\"\n\t\t\tconst mail1 = createMailInstance(listId1, ids[0], \"hello1\")\n\t\t\tconst mail2 = createMailInstance(listId1, ids[1], \"hello2\")\n\t\t\tconst mail3 = createMailInstance(listId1, ids[2], \"hello3\")\n\n\t\t\tawait storage.setNewRangeForList(MailTypeRef, listId1, ids[0], ids[2])\n\t\t\tfor (const mail of [mail1, mail2, mail3]) {\n\t\t\t\tawait storage.put(mail)\n\t\t\t}\n\t\t\tconst moreMails = new Map()\n\t\t\tmoreMails.set(ids[3], createMailInstance(listId1, ids[3], \"hello4\"))\n\t\t\tmoreMails.set(ids[4], createMailInstance(listId1, ids[4], \"hello5\"))\n\n\t\t\tconst loadRange = spy(function (...an) {\n\t\t\t\treturn Promise.resolve([moreMails.get(ids[3]), moreMails.get(ids[4])])\n\t\t\t})\n\n\t\t\tconst mock = mockAttribute(entityRestClient, entityRestClient.loadRange, loadRange)\n\n\t\t\tconst originalUpper = (await storage.getRangeForList(MailTypeRef, listId1))?.upper\n\n\t\t\tconst result1 = await cache.loadRange(MailTypeRef, listId1, GENERATED_MAX_ID, 5, true)\n\n\t\t\to(loadRange.callCount).equals(1)(\"entities are provided from server\")\n\t\t\to(loadRange.args[2]).equals(originalUpper)(\"starts extending range beginning with upperId\")\n\t\t\to(await storage.isElementIdInCacheRange(MailTypeRef, listId1, GENERATED_MAX_ID)).equals(true)(\"MAX ID is in cache range\")\n\t\t\tconst expectedResult = [moreMails.get(ids[4]), moreMails.get(ids[3]), mail3, mail2, mail1]\n\t\t\to(result1).deepEquals(expectedResult)(\"Returns all elements in reverse order\")\n\n\t\t\t// further requests are resolved from the cache\n\t\t\tconst result2 = await cache.loadRange(MailTypeRef, listId1, GENERATED_MAX_ID, 5, true)\n\n\t\t\to(result2).deepEquals(expectedResult)\n\t\t\to(loadRange.callCount).equals(1) // entities are provided from cache\n\t\t\tunmockAttribute(mock)\n\t\t})\n\n\t\to(\"Load towards the range with start being before the existing range. Range will be extended. Not Reverse.\", async function () {\n\t\t\tconst ids = [createId(\"1\"), createId(\"2\"), createId(\"3\"), createId(\"4\"), createId(\"5\")]\n\t\t\tconst listId1 = \"listId1\"\n\n\t\t\tconst mail1 = createMailInstance(listId1, ids[0], \"hello1\")\n\t\t\tconst mail2 = createMailInstance(listId1, ids[1], \"hello2\")\n\t\t\tconst mail3 = createMailInstance(listId1, ids[2], \"hello3\")\n\t\t\tconst mail4 = createMailInstance(listId1, ids[3], \"hello4\")\n\t\t\tconst mail5 = createMailInstance(listId1, ids[4], \"hello5\")\n\n\t\t\tawait storage.setNewRangeForList(MailTypeRef, listId1, ids[2], ids[4])\n\n\t\t\tfor (const mail of [mail3, mail4, mail5]) {\n\t\t\t\tawait storage.put(mail)\n\t\t\t}\n\n\t\t\tconst loadRange = spy(function (...any) {\n\t\t\t\treturn Promise.resolve([mail2, mail1])\n\t\t\t})\n\n\t\t\tconst mock = mockAttribute(entityRestClient, entityRestClient.loadRange, loadRange)\n\n\t\t\tconst originalLower = (await storage.getRangeForList(MailTypeRef, listId1))?.lower\n\n\t\t\tconst result1 = await cache.loadRange(MailTypeRef, listId1, GENERATED_MIN_ID, 5, false)\n\n\t\t\to(loadRange.callCount).equals(1)(\"entities are provided from server\")\n\t\t\to(loadRange.args[2]).equals(originalLower)(\"starts extending range beginning with lowerId\")\n\t\t\to(await storage.isElementIdInCacheRange(MailTypeRef, listId1, GENERATED_MIN_ID)).equals(true)(\"MIN ID is in cache range\")\n\t\t\tconst expectedResult = [mail1, mail2, mail3, mail4, mail5]\n\t\t\to(result1).deepEquals(expectedResult)(\"Returns all elements in reverse order\")\n\n\t\t\t// further requests are resolved from the cache\n\t\t\tconst result2 = await cache.loadRange(MailTypeRef, listId1, GENERATED_MIN_ID, 5, false)\n\n\t\t\to(result2).deepEquals(expectedResult)\n\t\t\to(loadRange.callCount).equals(1)(\"server is called only once at the end\") // entities are provided from cache\n\t\t\tunmockAttribute(mock)\n\t\t})\n\n\t\to(\n\t\t\t\"When there is a non-reverse range request that loads away from the existing range, the range will grow to include startId + the rest from the server\",\n\t\t\tasync function () {\n\t\t\t\tconst clientMock = object<EntityRestClient>()\n\t\t\t\tconst cache = new DefaultEntityRestCache(clientMock, storage)\n\n\t\t\t\tconst listId = \"listId\"\n\n\t\t\t\tconst id1 = createId(\"1\")\n\t\t\t\tconst id2 = createId(\"2\")\n\t\t\t\tconst id3 = createId(\"3\")\n\t\t\t\tconst id4 = createId(\"4\")\n\t\t\t\tconst id5 = createId(\"5\")\n\t\t\t\tconst id6 = createId(\"6\")\n\n\t\t\t\tconst mail1 = createMailInstance(listId, id1, \"hello1\")\n\t\t\t\tconst mail2 = createMailInstance(listId, id2, \"hello2\")\n\t\t\t\tconst mail3 = createMailInstance(listId, id3, \"hello3\")\n\t\t\t\tconst mail4 = createMailInstance(listId, id4, \"hello4\")\n\t\t\t\tconst mail5 = createMailInstance(listId, id5, \"hello5\")\n\t\t\t\tconst mail6 = createMailInstance(listId, id6, \"hello6\")\n\n\t\t\t\tawait storage.setNewRangeForList(MailTypeRef, listId, id1, id2)\n\t\t\t\tawait storage.put(mail1)\n\t\t\t\tawait storage.put(mail2)\n\n\t\t\t\twhen(clientMock.loadRange(anything(), listId, id2, EXTEND_RANGE_MIN_CHUNK_SIZE, false, {})).thenResolve([mail3, mail4, mail5, mail6])\n\n\t\t\t\tconst result = await cache.loadRange(MailTypeRef, listId, id3, 2, false)\n\n\t\t\t\to(result).deepEquals([mail4, mail5])\n\n\t\t\t\to((await storage.getRangeForList(MailTypeRef, listId))!).deepEquals({\n\t\t\t\t\tlower: id1,\n\t\t\t\t\tupper: GENERATED_MAX_ID,\n\t\t\t\t})\n\n\t\t\t\to(await storage.getIdsInRange(MailTypeRef, listId)).deepEquals([id1, id2, id3, id4, id5, id6])\n\t\t\t},\n\t\t)\n\n\t\to(\n\t\t\t\"When there is a non-reverse range request that loads in the direction of the existing range, the range will grow to include the startId\",\n\t\t\tasync function () {\n\t\t\t\tconst clientMock = object<EntityRestClient>()\n\t\t\t\tconst cache = new DefaultEntityRestCache(clientMock, storage)\n\n\t\t\t\tconst listId = \"listId1\"\n\n\t\t\t\tconst mails = arrayOf(100, (idx) => createMailInstance(listId, createId(`${idx}`), `hola ${idx}`))\n\n\t\t\t\tawait storage.setNewRangeForList(MailTypeRef, listId, getElementId(mails[98]), getElementId(mails[99]))\n\t\t\t\tawait storage.put(mails[98])\n\t\t\t\tawait storage.put(mails[99])\n\n\t\t\t\twhen(clientMock.loadRange(anything(), listId, getElementId(mails[98]), EXTEND_RANGE_MIN_CHUNK_SIZE, true, {})).thenResolve(\n\t\t\t\t\tmails.slice(58, 98).reverse(),\n\t\t\t\t)\n\n\t\t\t\twhen(clientMock.loadRange(anything(), listId, getElementId(mails[58]), EXTEND_RANGE_MIN_CHUNK_SIZE, true, {})).thenResolve(\n\t\t\t\t\tmails.slice(18, 58).reverse(),\n\t\t\t\t)\n\n\t\t\t\twhen(clientMock.loadRange(anything(), listId, getElementId(mails[18]), EXTEND_RANGE_MIN_CHUNK_SIZE, true, {})).thenResolve(\n\t\t\t\t\tmails.slice(0, 18).reverse(),\n\t\t\t\t)\n\n\t\t\t\tconst result = await cache.loadRange(MailTypeRef, listId, GENERATED_MIN_ID, 2, false)\n\n\t\t\t\to(result).deepEquals([mails[0], mails[1]])\n\n\t\t\t\to((await storage.getRangeForList(MailTypeRef, listId))!).deepEquals({\n\t\t\t\t\tlower: GENERATED_MIN_ID,\n\t\t\t\t\tupper: getElementId(mails[99]),\n\t\t\t\t})\n\t\t\t\to(await storage.getIdsInRange(MailTypeRef, listId)).deepEquals(mails.map(getElementId))\n\t\t\t},\n\t\t)\n\n\t\to(\n\t\t\t\"When there is a reverse range request that loads in the direction of the existing range, the range will grow to include the startId\",\n\t\t\tasync function () {\n\t\t\t\tconst clientMock = object<EntityRestClient>()\n\t\t\t\tconst cache = new DefaultEntityRestCache(clientMock, storage)\n\n\t\t\t\tconst listId = \"listId1\"\n\t\t\t\tconst mails = arrayOf(100, (idx) => createMailInstance(listId, createId(`${idx}`), `hola ${idx}`))\n\n\t\t\t\tawait storage.setNewRangeForList(MailTypeRef, listId, getElementId(mails[0]), getElementId(mails[1]))\n\t\t\t\tawait storage.put(mails[0])\n\t\t\t\tawait storage.put(mails[1])\n\n\t\t\t\twhen(clientMock.loadRange(anything(), listId, getElementId(mails[1]), EXTEND_RANGE_MIN_CHUNK_SIZE, false, {})).thenResolve(mails.slice(2, 42))\n\n\t\t\t\twhen(clientMock.loadRange(anything(), listId, getElementId(mails[41]), EXTEND_RANGE_MIN_CHUNK_SIZE, false, {})).thenResolve(mails.slice(42, 82))\n\n\t\t\t\twhen(clientMock.loadRange(anything(), listId, getElementId(mails[81]), EXTEND_RANGE_MIN_CHUNK_SIZE, false, {})).thenResolve(mails.slice(82))\n\n\t\t\t\tconst result = await cache.loadRange(MailTypeRef, listId, GENERATED_MAX_ID, 2, true)\n\n\t\t\t\to(result).deepEquals([mails[mails.length - 1], mails[mails.length - 2]])\n\n\t\t\t\to((await storage.getRangeForList(MailTypeRef, listId))!).deepEquals({\n\t\t\t\t\tlower: getElementId(mails[0]),\n\t\t\t\t\tupper: GENERATED_MAX_ID,\n\t\t\t\t})\n\t\t\t\to(await storage.getIdsInRange(MailTypeRef, listId)).deepEquals(mails.map(getElementId))\n\t\t\t},\n\t\t)\n\n\t\to(\n\t\t\t\"The range request starts on one end of the existing range, and would finish on the other end, so it loads from either direction of the range\",\n\t\t\tasync function () {\n\t\t\t\tconst clientMock = object<EntityRestClient>()\n\t\t\t\tconst cache = new DefaultEntityRestCache(clientMock, storage)\n\n\t\t\t\tconst id1 = createId(\"1\")\n\t\t\t\tconst id2 = createId(\"2\")\n\t\t\t\tconst id3 = createId(\"3\")\n\t\t\t\tconst id4 = createId(\"4\")\n\t\t\t\tconst id5 = createId(\"5\")\n\t\t\t\tconst id6 = createId(\"6\")\n\n\t\t\t\tconst listId = \"listId\"\n\n\t\t\t\tconst mail1 = createMailInstance(listId, id1, \"ok\")\n\t\t\t\tconst mail2 = createMailInstance(listId, id2, \"ok\")\n\t\t\t\tconst mail3 = createMailInstance(listId, id3, \"ok\")\n\t\t\t\tconst mail4 = createMailInstance(listId, id4, \"ok\")\n\t\t\t\tconst mail5 = createMailInstance(listId, id5, \"ok\")\n\n\t\t\t\tawait storage.setNewRangeForList(MailTypeRef, listId, id2, id3)\n\t\t\t\tawait storage.put(mail2)\n\t\t\t\tawait storage.put(mail3)\n\n\t\t\t\t// First it will try to load in the direction of start id from the existing range\n\t\t\t\twhen(clientMock.loadRange(anything(), listId, id2, EXTEND_RANGE_MIN_CHUNK_SIZE, true, {})).thenResolve([mail1])\n\n\t\t\t\t// It will then fall into the \"load from within the range\" case\n\t\t\t\t// It will try to load starting from the end of the range\n\t\t\t\twhen(clientMock.loadRange(anything(), listId, id3, 7, false, {})).thenResolve([mail4, mail5])\n\n\t\t\t\tconst result = await cache.loadRange(MailTypeRef, listId, GENERATED_MIN_ID, 10, false)\n\n\t\t\t\to((await storage.getRangeForList(MailTypeRef, listId))!).deepEquals({\n\t\t\t\t\tlower: GENERATED_MIN_ID,\n\t\t\t\t\tupper: GENERATED_MAX_ID,\n\t\t\t\t})\n\n\t\t\t\to(await storage.getIdsInRange(MailTypeRef, listId)).deepEquals([id1, id2, id3, id4, id5])\n\n\t\t\t\to(result).deepEquals([mail1, mail2, mail3, mail4, mail5])\n\t\t\t},\n\t\t)\n\n\t\to(\"loadMultiple should load necessary elements from the server, and get the rest from the cache\", async function () {\n\t\t\tconst listId = \"listId\"\n\t\t\tconst inCache = [createMailInstance(listId, \"1\", \"1\"), createMailInstance(listId, \"3\", \"3\")]\n\n\t\t\tconst notInCache = [createMailInstance(listId, \"2\", \"2\"), createMailInstance(listId, \"5\", \"5\")]\n\t\t\tawait Promise.all(inCache.map(async (i) => await storage.put(i)))\n\t\t\tconst ids = inCache.concat(notInCache).map(getElementId)\n\n\t\t\tconst loadMultiple = spy((...any) => Promise.resolve(notInCache))\n\t\t\tconst mock = mockAttribute(entityRestClient, entityRestClient.loadMultiple, loadMultiple)\n\n\t\t\tconst result = await cache.loadMultiple(MailTypeRef, listId, ids)\n\n\t\t\to(result).deepEquals(notInCache.concat(inCache))(\"all mails are in cache\")\n\t\t\to(loadMultiple.callCount).equals(1)(\"load multiple is called once\")\n\t\t\to(loadMultiple.args).deepEquals([MailTypeRef, listId, notInCache.map(getElementId), undefined, {}])(\n\t\t\t\t\"load multiple is called for mails not in cache\",\n\t\t\t)\n\t\t\tfor (const item of inCache.concat(notInCache)) {\n\t\t\t\to(await storage.get(MailTypeRef, listId, getElementId(item))).notEquals(null)(\"element is in cache \" + getElementId(item))\n\t\t\t}\n\t\t\tunmockAttribute(mock)\n\t\t})\n\n\t\to(\"loadRange from server and provide cached entities from the cache\", async function () {\n\t\t\tconst listId = \"listId\"\n\n\t\t\tconst inCache = [createMailInstance(listId, \"0\", \"0\"), createMailInstance(listId, \"1\", \"1\"), createMailInstance(listId, \"3\", \"3\")]\n\n\t\t\tconst serverMails = [...inCache, createMailInstance(listId, \"4\", \"4\"), createMailInstance(listId, \"5\", \"5\"), createMailInstance(listId, \"6\", \"6\")]\n\n\t\t\tawait storage.setNewRangeForList(MailTypeRef, listId, GENERATED_MIN_ID, createId(\"3\"))\n\t\t\tawait Promise.all(inCache.map(async (i) => await storage.put(i)))\n\n\t\t\tconst loadRange = spy(async (typeRef, listIdToLoad: string, startId: Id, count: number, reverse: boolean) => {\n\t\t\t\tif (listId !== listIdToLoad) throw new NotFoundError(\"unknown list id\")\n\t\t\t\treturn serverMails.filter((mail) => firstBiggerThanSecond(getElementId(mail), startId)).slice(0, count)\n\t\t\t})\n\n\t\t\tconst mockLoadRange = mockAttribute(entityRestClient, entityRestClient.loadRange, loadRange)\n\n\t\t\tconst result = await cache.loadRange(MailTypeRef, listId, createId(\"1\"), 3, false)\n\n\t\t\t// checking if our cache asked us for the right amount of mails, in this case ids 4, 5 and 6 starting at mail 1 (excl.)\n\t\t\to(loadRange.invocations[0][3]).equals(2)\n\t\t\to(loadRange.invocations[0][2]).equals(createId(\"3\"))\n\n\t\t\tfor (let i = 0; i++; i < result.length) {\n\t\t\t\to(result[i]).deepEquals(serverMails[i])(`result ${i} does not match`)\n\t\t\t}\n\n\t\t\tfor (const item of serverMails.slice(0, -1)) {\n\t\t\t\tconst mail = await storage.get(MailTypeRef, listId, getElementId(item))\n\t\t\t\to(mail).notEquals(null)\n\t\t\t}\n\t\t\tconst lastId = getElementId(last(serverMails)!)\n\t\t\to(await storage.get(MailTypeRef, listId, lastId)).equals(null)\n\n\t\t\tunmockAttribute(mockLoadRange)\n\t\t})\n\n\t\to(\"load passes same parameters to entityRestClient\", async function () {\n\t\t\tconst contactId: IdTuple = [createId(\"0\"), createId(\"1\")]\n\t\t\tconst contact = createTestEntity(ContactTypeRef, {\n\t\t\t\t_id: contactId,\n\t\t\t\tfirstName: \"greg\",\n\t\t\t})\n\t\t\tconst client = downcast<EntityRestClient>({\n\t\t\t\tload: spy(() => contact),\n\t\t\t})\n\t\t\tconst cache = new DefaultEntityRestCache(client, storage)\n\t\t\tawait cache.load(ContactTypeRef, contactId, {\n\t\t\t\tqueryParams: {\n\t\t\t\t\tmyParam: \"param\",\n\t\t\t\t},\n\t\t\t\textraHeaders: {\n\t\t\t\t\tmyHeader: \"header\",\n\t\t\t\t},\n\t\t\t})\n\t\t\tconst [typeRef, id, opts] = client.load.args as Parameters<EntityRestClient[\"load\"]>\n\t\t\to(isSameTypeRef(typeRef, ContactTypeRef)).equals(true)\n\t\t\to(id).deepEquals(contactId)\n\t\t\to(opts).deepEquals({\n\t\t\t\tqueryParams: {\n\t\t\t\t\tmyParam: \"param\",\n\t\t\t\t},\n\t\t\t\textraHeaders: {\n\t\t\t\t\tmyHeader: \"header\",\n\t\t\t\t},\n\t\t\t})\n\t\t})\n\t\to(\"single entity is cached after being loaded\", async function () {\n\t\t\tconst contactId: IdTuple = [createId(\"0\"), createId(\"1\")]\n\t\t\tconst contactOnTheServer = createTestEntity(ContactTypeRef, {\n\t\t\t\t_id: contactId,\n\t\t\t\tfirstName: \"greg\",\n\t\t\t})\n\t\t\tconst client = downcast<EntityRestClient>({\n\t\t\t\tload: spy(async () => {\n\t\t\t\t\treturn contactOnTheServer\n\t\t\t\t}),\n\t\t\t})\n\t\t\tconst cache = new DefaultEntityRestCache(client, storage)\n\t\t\tconst firstLoaded = await cache.load(ContactTypeRef, contactId)\n\t\t\to(firstLoaded).deepEquals(contactOnTheServer)\n\t\t\t// @ts-ignore\n\t\t\to(client.load.callCount).equals(1)(\"The entity rest client was called because the contact isn't in cache\")\n\t\t\tconst secondLoaded = await cache.load(ContactTypeRef, contactId)\n\t\t\to(secondLoaded).deepEquals(contactOnTheServer)\n\t\t\t// @ts-ignore\n\t\t\to(client.load.callCount).equals(1)(\"The rest client was not called again, because the contact was loaded from the cache\")\n\t\t})\n\n\t\to(\"A new range request for a nonexistent range should initialize that range\", async function () {\n\t\t\tconst loadRange = spy(function (typeRef, listId, ...an) {\n\t\t\t\treturn [\n\t\t\t\t\tcreateTestEntity(ContactTypeRef, { _id: [listId, createId(\"1\")] }),\n\t\t\t\t\tcreateTestEntity(ContactTypeRef, { _id: [listId, createId(\"2\")] }),\n\t\t\t\t\tcreateTestEntity(ContactTypeRef, { _id: [listId, createId(\"3\")] }),\n\t\t\t\t\tcreateTestEntity(ContactTypeRef, { _id: [listId, createId(\"4\")] }),\n\t\t\t\t\tcreateTestEntity(ContactTypeRef, { _id: [listId, createId(\"5\")] }),\n\t\t\t\t\tcreateTestEntity(ContactTypeRef, { _id: [listId, createId(\"6\")] }),\n\t\t\t\t]\n\t\t\t})\n\n\t\t\tconst mock = mockAttribute(entityRestClient, entityRestClient.loadRange, loadRange)\n\n\t\t\tconst result = await cache.loadRange(ContactTypeRef, createId(\"0\"), GENERATED_MIN_ID, 1000, false)\n\n\t\t\to(result.length).equals(6)\n\n\t\t\tunmockAttribute(mock)\n\t\t})\n\n\t\to(\"single entity is not cached if it is an ignored entity\", async function () {\n\t\t\tconst permissionId: IdTuple = [createId(\"0\"), createId(\"1\")]\n\t\t\tconst permissionOnTheServer = createTestEntity(PermissionTypeRef, {\n\t\t\t\t_id: permissionId,\n\t\t\t})\n\t\t\tconst client = downcast<EntityRestClient>({\n\t\t\t\tload: spy(async () => {\n\t\t\t\t\treturn permissionOnTheServer\n\t\t\t\t}),\n\t\t\t})\n\t\t\tconst cache = new DefaultEntityRestCache(client, storage)\n\t\t\tawait cache.load(PermissionTypeRef, permissionId)\n\t\t\tawait cache.load(PermissionTypeRef, permissionId)\n\t\t\t// @ts-ignore\n\t\t\to(client.load.callCount).equals(2)(\"The permission was loaded both times from the server\")\n\t\t})\n\n\t\to.test(\"when loading single ET custom id entity it is cached\", async function () {\n\t\t\tconst id = stringToCustomId(\"1\")\n\t\t\tconst client: EntityRestClient = object()\n\t\t\tconst entity = createTestEntity(MailAddressToGroupTypeRef, {\n\t\t\t\t_id: id,\n\t\t\t})\n\t\t\twhen(client.load(MailAddressToGroupTypeRef, id, anything())).thenResolve(entity)\n\t\t\tconst cache = new DefaultEntityRestCache(client, storage)\n\n\t\t\tconst loadedEntity = await cache.load(MailAddressToGroupTypeRef, id)\n\t\t\tawait cache.load(MailAddressToGroupTypeRef, id)\n\n\t\t\to(loadedEntity).deepEquals(entity)\n\t\t\tverify(client.load(MailAddressToGroupTypeRef, id), { ignoreExtraArgs: true, times: 1 })\n\t\t})\n\n\t\to.test(\"when loading single LET custom id entity it is cached\", async function () {\n\t\t\tconst id: IdTuple = [createId(\"0\"), stringToCustomId(\"1\")]\n\t\t\tconst client: EntityRestClient = object()\n\t\t\tconst entity = createTestEntity(RootInstanceTypeRef, {\n\t\t\t\t_id: id,\n\t\t\t})\n\t\t\twhen(client.load(RootInstanceTypeRef, id, anything())).thenResolve(entity)\n\t\t\tconst cache = new DefaultEntityRestCache(client, storage)\n\n\t\t\tconst loadedEntity = await cache.load(RootInstanceTypeRef, id)\n\t\t\tawait cache.load(RootInstanceTypeRef, id)\n\n\t\t\to(loadedEntity).deepEquals(entity)\n\t\t\tverify(client.load(RootInstanceTypeRef, id), { ignoreExtraArgs: true, times: 1 })\n\t\t})\n\n\t\to.test(\"when loading multiple ET custom id entities are cached\", async function () {\n\t\t\tconst ids = [stringToCustomId(\"1\"), stringToCustomId(\"2\")]\n\t\t\tconst client: EntityRestClient = object()\n\t\t\tconst firstEntity = createTestEntity(MailAddressToGroupTypeRef, {\n\t\t\t\t_id: ids[0],\n\t\t\t})\n\t\t\tconst secondEntity = createTestEntity(MailAddressToGroupTypeRef, {\n\t\t\t\t_id: ids[1],\n\t\t\t})\n\n\t\t\twhen(client.loadMultiple(MailAddressToGroupTypeRef, null, ids), { ignoreExtraArgs: true }).thenResolve([firstEntity, secondEntity])\n\t\t\tconst cache = new DefaultEntityRestCache(client, storage)\n\n\t\t\tconst loadedEntity = await cache.loadMultiple(MailAddressToGroupTypeRef, null, ids)\n\t\t\tawait cache.loadMultiple(MailAddressToGroupTypeRef, null, ids)\n\n\t\t\to(loadedEntity).deepEquals([firstEntity, secondEntity])\n\t\t\tverify(client.loadMultiple(MailAddressToGroupTypeRef, null, ids), { ignoreExtraArgs: true, times: 1 })\n\t\t})\n\n\t\to.test(\"when loading multiple LET custom id entities are cached\", async function () {\n\t\t\tconst listId = createId(\"0\")\n\t\t\tconst ids: IdTuple[] = [\n\t\t\t\t[listId, stringToCustomId(\"1\")],\n\t\t\t\t[listId, stringToCustomId(\"2\")],\n\t\t\t]\n\t\t\tconst client: EntityRestClient = object()\n\t\t\tconst firstEntity = createTestEntity(RootInstanceTypeRef, {\n\t\t\t\t_id: ids[0],\n\t\t\t})\n\t\t\tconst secondEntity = createTestEntity(RootInstanceTypeRef, {\n\t\t\t\t_id: ids[1],\n\t\t\t})\n\n\t\t\twhen(client.loadMultiple(RootInstanceTypeRef, listId, [elementIdPart(ids[0]), elementIdPart(ids[1])], anything()), {\n\t\t\t\tignoreExtraArgs: true,\n\t\t\t}).thenResolve([firstEntity, secondEntity])\n\t\t\tconst cache = new DefaultEntityRestCache(client, storage)\n\n\t\t\tconst loadedEntity = await cache.loadMultiple(RootInstanceTypeRef, listId, [elementIdPart(ids[0]), elementIdPart(ids[1])])\n\t\t\tawait cache.loadMultiple(RootInstanceTypeRef, listId, [elementIdPart(ids[0]), elementIdPart(ids[1])])\n\n\t\t\to(loadedEntity).deepEquals([firstEntity, secondEntity])\n\t\t\tverify(client.loadMultiple(RootInstanceTypeRef, listId, [elementIdPart(ids[0]), elementIdPart(ids[1])]), {\n\t\t\t\tignoreExtraArgs: true,\n\t\t\t\ttimes: 1,\n\t\t\t})\n\t\t})\n\n\t\to.spec(\"no user id\", function () {\n\t\t\to(\"get\", async function () {\n\t\t\t\tuserId = null\n\t\t\t\tentityRestClient.load = spy(async () => createTestEntity(ContactTypeRef, { _id: [\"listId\", \"id\"] })) as EntityRestClient[\"load\"]\n\t\t\t\tawait cache.load(ContactTypeRef, [\"listId\", \"id\"])\n\t\t\t\to(entityRestClient.load.callCount).equals(1)\n\t\t\t})\n\n\t\t\to(\"put\", async function () {\n\t\t\t\tuserId = null\n\t\t\t\tentityRestClient.setup = spy(async () => \"id\")\n\t\t\t\tawait cache.setup(\"listId\", createTestEntity(ContactTypeRef, { _id: [\"listId\", \"id\"] }))\n\t\t\t\to(entityRestClient.setup.callCount).equals(1)\n\t\t\t})\n\t\t})\n\n\t\to.spec(\"CacheMode.Bypass\", () => {\n\t\t\tconst listId = createId(\"0\")\n\n\t\t\to(\"load\", async function () {\n\t\t\t\tconst contactId: IdTuple = [listId, createId(\"1\")]\n\t\t\t\tconst contactOnTheServer = createTestEntity(ContactTypeRef, {\n\t\t\t\t\t_id: contactId,\n\t\t\t\t\tfirstName: \"greg\",\n\t\t\t\t})\n\n\t\t\t\tconst client: EntityRestClient = object()\n\t\t\t\twhen(client.load(ContactTypeRef, contactId, anything())).thenResolve(contactOnTheServer)\n\t\t\t\tconst cache = new DefaultEntityRestCache(client, storage)\n\n\t\t\t\tconst cacheBypassed1 = await cache.load(ContactTypeRef, contactId, { cacheMode: CacheMode.WriteOnly })\n\t\t\t\to(cacheBypassed1).deepEquals(contactOnTheServer)\n\t\t\t\t// Fresh cache; should be loaded remotely and cached\n\t\t\t\tverify(client.load(ContactTypeRef, contactId, anything()), { times: 1 })\n\n\t\t\t\tconst cacheBypassed2 = await cache.load(ContactTypeRef, contactId, { cacheMode: CacheMode.WriteOnly })\n\t\t\t\to(cacheBypassed2).deepEquals(contactOnTheServer)\n\t\t\t\t// Since we're bypassing it, it should still be loaded remotely (but still cached)\n\t\t\t\tverify(client.load(ContactTypeRef, contactId, anything()), { times: 2 })\n\n\t\t\t\tconst cached = await cache.load(ContactTypeRef, contactId, { cacheMode: CacheMode.ReadAndWrite })\n\t\t\t\to(cached).deepEquals(contactOnTheServer)\n\t\t\t\t// We aren't bypassing it with Cache, so it should just use the cache\n\t\t\t\tverify(client.load(ContactTypeRef, contactId, anything()), { times: 2 })\n\n\t\t\t\tconst cacheBypassed3 = await cache.load(ContactTypeRef, contactId, { cacheMode: CacheMode.WriteOnly })\n\t\t\t\to(cacheBypassed3).deepEquals(contactOnTheServer)\n\t\t\t\t// Bypassing again; should be loaded remotely\n\t\t\t\tverify(client.load(ContactTypeRef, contactId, anything()), { times: 3 })\n\t\t\t})\n\n\t\t\to(\"loadMultiple\", async function () {\n\t\t\t\tconst contactAId: IdTuple = [listId, createId(\"1\")]\n\t\t\t\tconst contactAOnTheServer = createTestEntity(ContactTypeRef, {\n\t\t\t\t\t_id: contactAId,\n\t\t\t\t\tfirstName: \"greg\",\n\t\t\t\t})\n\n\t\t\t\tconst contactBId: IdTuple = [listId, createId(\"2\")]\n\t\t\t\tconst contactBOnTheServer = createTestEntity(ContactTypeRef, {\n\t\t\t\t\t_id: contactBId,\n\t\t\t\t\tfirstName: \"bob\",\n\t\t\t\t})\n\n\t\t\t\tconst client: EntityRestClient = object()\n\t\t\t\twhen(client.loadMultiple(ContactTypeRef, listId, [elementIdPart(contactAId)], anything(), anything())).thenResolve([contactAOnTheServer])\n\t\t\t\twhen(client.loadMultiple(ContactTypeRef, listId, [elementIdPart(contactBId)], anything(), anything())).thenResolve([contactBOnTheServer])\n\t\t\t\twhen(client.loadMultiple(ContactTypeRef, listId, [elementIdPart(contactAId), elementIdPart(contactBId)], anything(), anything())).thenResolve([\n\t\t\t\t\tcontactAOnTheServer,\n\t\t\t\t\tcontactBOnTheServer,\n\t\t\t\t])\n\n\t\t\t\tconst cache = new DefaultEntityRestCache(client, storage)\n\n\t\t\t\tconst cacheBypassed1 = await cache.loadMultiple(ContactTypeRef, listId, [elementIdPart(contactAId)], undefined, {\n\t\t\t\t\tcacheMode: CacheMode.WriteOnly,\n\t\t\t\t})\n\t\t\t\to(cacheBypassed1).deepEquals([contactAOnTheServer])\n\t\t\t\t// Fresh cache; should be loaded remotely and cached\n\t\t\t\tverify(client.loadMultiple(ContactTypeRef, listId, [elementIdPart(contactAId)], undefined, anything()), { times: 1 })\n\n\t\t\t\tconst cacheBypassed2 = await cache.loadMultiple(ContactTypeRef, listId, [elementIdPart(contactAId)], undefined, {\n\t\t\t\t\tcacheMode: CacheMode.WriteOnly,\n\t\t\t\t})\n\t\t\t\to(cacheBypassed2).deepEquals([contactAOnTheServer])\n\t\t\t\t// Still bypassing\n\t\t\t\tverify(client.loadMultiple(ContactTypeRef, listId, [elementIdPart(contactAId)], undefined, anything()), { times: 2 })\n\n\t\t\t\tconst cached = await cache.loadMultiple(ContactTypeRef, listId, [elementIdPart(contactAId), elementIdPart(contactBId)], undefined, {\n\t\t\t\t\tcacheMode: CacheMode.ReadAndWrite,\n\t\t\t\t})\n\t\t\t\to(true).equals(cached.some((a) => deepEqual(a, contactAOnTheServer)))\n\t\t\t\to(true).equals(cached.some((b) => deepEqual(b, contactBOnTheServer)))\n\t\t\t\t// Not bypassing; should have both contacts now, but only asked for B from server\n\t\t\t\tverify(client.loadMultiple(ContactTypeRef, listId, [elementIdPart(contactAId)], undefined, anything()), { times: 2 })\n\t\t\t\tverify(client.loadMultiple(ContactTypeRef, listId, [elementIdPart(contactBId)], undefined, anything()), { times: 1 })\n\n\t\t\t\tconst cacheBypassed3 = await cache.loadMultiple(ContactTypeRef, listId, [elementIdPart(contactAId), elementIdPart(contactBId)], undefined, {\n\t\t\t\t\tcacheMode: CacheMode.WriteOnly,\n\t\t\t\t})\n\t\t\t\to(cacheBypassed3).deepEquals([contactAOnTheServer, contactBOnTheServer])\n\t\t\t\t// Bypassed again\n\t\t\t\tverify(client.loadMultiple(ContactTypeRef, listId, [elementIdPart(contactAId), elementIdPart(contactBId)], undefined, anything()), { times: 1 })\n\t\t\t})\n\t\t})\n\n\t\to.spec(\"CacheMode.ReadOnly\", () => {\n\t\t\tconst listId = createId(\"0\")\n\n\t\t\to(\"load\", async function () {\n\t\t\t\tconst contactId: IdTuple = [listId, createId(\"1\")]\n\t\t\t\tconst contactOnTheServer = createTestEntity(ContactTypeRef, {\n\t\t\t\t\t_id: contactId,\n\t\t\t\t\tfirstName: \"greg\",\n\t\t\t\t})\n\n\t\t\t\tconst client: EntityRestClient = object()\n\t\t\t\twhen(client.load(ContactTypeRef, contactId, anything())).thenResolve(contactOnTheServer)\n\t\t\t\tconst cache = new DefaultEntityRestCache(client, storage)\n\n\t\t\t\tconst cacheReadonly1 = await cache.load(ContactTypeRef, contactId, { cacheMode: CacheMode.ReadOnly })\n\t\t\t\to(cacheReadonly1).deepEquals(contactOnTheServer)\n\t\t\t\t// Fresh cache; should be loaded remotely (but not cached)\n\t\t\t\tverify(client.load(ContactTypeRef, contactId, anything()), { times: 1 })\n\n\t\t\t\tconst cacheReadonly2 = await cache.load(ContactTypeRef, contactId, { cacheMode: CacheMode.ReadOnly })\n\t\t\t\to(cacheReadonly2).deepEquals(contactOnTheServer)\n\t\t\t\t// It wasn't cached before, so it should be loaded remotely again\n\t\t\t\tverify(client.load(ContactTypeRef, contactId, anything()), { times: 2 })\n\n\t\t\t\tconst cached = await cache.load(ContactTypeRef, contactId, { cacheMode: CacheMode.ReadAndWrite })\n\t\t\t\to(cached).deepEquals(contactOnTheServer)\n\t\t\t\t// Again, it wasn't cached before, so it should be loaded remotely again\n\t\t\t\tverify(client.load(ContactTypeRef, contactId, anything()), { times: 3 })\n\n\t\t\t\tconst cacheReadonly3 = await cache.load(ContactTypeRef, contactId, { cacheMode: CacheMode.ReadOnly })\n\t\t\t\to(cacheReadonly3).deepEquals(contactOnTheServer)\n\t\t\t\t// Since it was cached before, it won't be loaded remotely\n\t\t\t\tverify(client.load(ContactTypeRef, contactId, anything()), { times: 3 })\n\t\t\t})\n\n\t\t\to(\"loadMultiple\", async function () {\n\t\t\t\tconst contactAId: IdTuple = [listId, createId(\"1\")]\n\t\t\t\tconst contactAOnTheServer = createTestEntity(ContactTypeRef, {\n\t\t\t\t\t_id: contactAId,\n\t\t\t\t\tfirstName: \"greg\",\n\t\t\t\t})\n\n\t\t\t\tconst contactBId: IdTuple = [listId, createId(\"2\")]\n\t\t\t\tconst contactBOnTheServer = createTestEntity(ContactTypeRef, {\n\t\t\t\t\t_id: contactBId,\n\t\t\t\t\tfirstName: \"bob\",\n\t\t\t\t})\n\n\t\t\t\tconst client: EntityRestClient = object()\n\t\t\t\twhen(client.loadMultiple(ContactTypeRef, listId, [elementIdPart(contactAId)], anything(), anything())).thenResolve([contactAOnTheServer])\n\t\t\t\twhen(client.loadMultiple(ContactTypeRef, listId, [elementIdPart(contactBId)], anything(), anything())).thenResolve([contactBOnTheServer])\n\n\t\t\t\tconst cache = new DefaultEntityRestCache(client, storage)\n\n\t\t\t\tconst cacheReadOnly1 = await cache.loadMultiple(ContactTypeRef, listId, [elementIdPart(contactAId)], undefined, {\n\t\t\t\t\tcacheMode: CacheMode.ReadOnly,\n\t\t\t\t})\n\t\t\t\to(cacheReadOnly1).deepEquals([contactAOnTheServer])\n\t\t\t\t// Fresh cache; should be loaded remotely and cached\n\t\t\t\tverify(client.loadMultiple(ContactTypeRef, listId, [elementIdPart(contactAId)], undefined, anything()), { times: 1 })\n\n\t\t\t\tconst cached = await cache.loadMultiple(ContactTypeRef, listId, [elementIdPart(contactAId)], undefined, { cacheMode: CacheMode.ReadAndWrite })\n\t\t\t\to(cached).deepEquals([contactAOnTheServer])\n\t\t\t\t// Wasn't written earlier; should be written now\n\t\t\t\tverify(client.loadMultiple(ContactTypeRef, listId, [elementIdPart(contactAId)], undefined, anything()), { times: 2 })\n\n\t\t\t\tconst cacheReadOnly2 = await cache.loadMultiple(ContactTypeRef, listId, [elementIdPart(contactAId), elementIdPart(contactBId)], undefined, {\n\t\t\t\t\tcacheMode: CacheMode.ReadOnly,\n\t\t\t\t})\n\t\t\t\to(true).equals(cacheReadOnly2.some((a) => deepEqual(a, contactAOnTheServer)))\n\t\t\t\to(true).equals(cacheReadOnly2.some((b) => deepEqual(b, contactBOnTheServer)))\n\t\t\t\t// Should have only asked for B from server since we cached A earlier\n\t\t\t\tverify(client.loadMultiple(ContactTypeRef, listId, [elementIdPart(contactAId)], undefined, anything()), { times: 2 })\n\t\t\t\tverify(client.loadMultiple(ContactTypeRef, listId, [elementIdPart(contactBId)], undefined, anything()), { times: 1 })\n\t\t\t})\n\n\t\t\to(\"loadRange - full list\", async function () {\n\t\t\t\tconst contactAId: IdTuple = [listId, createId(\"1\")]\n\t\t\t\tconst contactAOnTheServer = createTestEntity(ContactTypeRef, {\n\t\t\t\t\t_id: contactAId,\n\t\t\t\t\tfirstName: \"greg\",\n\t\t\t\t})\n\n\t\t\t\tconst contactBId: IdTuple = [listId, createId(\"2\")]\n\t\t\t\tconst contactBOnTheServer = createTestEntity(ContactTypeRef, {\n\t\t\t\t\t_id: contactBId,\n\t\t\t\t\tfirstName: \"bob\",\n\t\t\t\t})\n\n\t\t\t\tconst client: EntityRestClient = object()\n\t\t\t\twhen(client.loadRange(ContactTypeRef, listId, createId(\"0\"), 2, false, anything())).thenResolve([contactAOnTheServer, contactBOnTheServer])\n\n\t\t\t\tconst cache = new DefaultEntityRestCache(client, storage)\n\t\t\t\tconst cacheReadonly1 = await cache.loadRange(ContactTypeRef, listId, createId(\"0\"), 2, false, { cacheMode: CacheMode.ReadOnly })\n\t\t\t\to(cacheReadonly1).deepEquals([contactAOnTheServer, contactBOnTheServer])\n\t\t\t\t// Fresh cache; should be loaded remotely and cached\n\t\t\t\tverify(client.loadRange(ContactTypeRef, listId, createId(\"0\"), 2, false, anything()), { times: 1 })\n\n\t\t\t\tconst cached = await cache.loadRange(ContactTypeRef, listId, createId(\"0\"), 2, false, { cacheMode: CacheMode.ReadAndWrite })\n\t\t\t\to(cached).deepEquals([contactAOnTheServer, contactBOnTheServer])\n\t\t\t\t// Wasn't saved before\n\t\t\t\tverify(client.loadRange(ContactTypeRef, listId, createId(\"0\"), 2, false, anything()), { times: 2 })\n\n\t\t\t\tconst cacheReadonly2 = await cache.loadRange(ContactTypeRef, listId, createId(\"0\"), 2, false, { cacheMode: CacheMode.ReadOnly })\n\t\t\t\to(cacheReadonly2).deepEquals([contactAOnTheServer, contactBOnTheServer])\n\t\t\t\t// Was saved before now\n\t\t\t\tverify(client.loadRange(ContactTypeRef, listId, createId(\"0\"), 2, false, anything()), { times: 2 })\n\t\t\t})\n\n\t\t\to(\"loadRange - partial list\", async function () {\n\t\t\t\tconst contactAId: IdTuple = [listId, createId(\"1\")]\n\t\t\t\tconst contactAOnTheServer = createTestEntity(ContactTypeRef, {\n\t\t\t\t\t_id: contactAId,\n\t\t\t\t\tfirstName: \"greg\",\n\t\t\t\t})\n\n\t\t\t\tconst contactBId: IdTuple = [listId, createId(\"2\")]\n\t\t\t\tconst contactBOnTheServer = createTestEntity(ContactTypeRef, {\n\t\t\t\t\t_id: contactBId,\n\t\t\t\t\tfirstName: \"bob\",\n\t\t\t\t})\n\n\t\t\t\tconst client: EntityRestClient = object()\n\t\t\t\twhen(client.loadRange(ContactTypeRef, listId, createId(\"0\"), anything(), false, anything())).thenResolve([\n\t\t\t\t\tcontactAOnTheServer,\n\t\t\t\t\tcontactBOnTheServer,\n\t\t\t\t])\n\t\t\t\twhen(client.loadRange(ContactTypeRef, listId, createId(\"1\"), anything(), false, anything())).thenResolve([contactBOnTheServer])\n\n\t\t\t\tconst cache = new DefaultEntityRestCache(client, storage)\n\t\t\t\tconst cacheReadonly1 = await cache.loadRange(ContactTypeRef, listId, createId(\"1\"), 2, false, { cacheMode: CacheMode.ReadOnly })\n\t\t\t\to(cacheReadonly1).deepEquals([contactBOnTheServer])\n\t\t\t\t// Fresh cache\n\t\t\t\tverify(client.loadRange(ContactTypeRef, listId, createId(\"1\"), 2, false, anything()), { times: 1 })\n\n\t\t\t\tconst cached = await cache.loadRange(ContactTypeRef, listId, createId(\"1\"), 2, false, { cacheMode: CacheMode.ReadAndWrite })\n\t\t\t\to(cached).deepEquals([contactBOnTheServer])\n\t\t\t\t// Was saved before now\n\t\t\t\tverify(client.loadRange(ContactTypeRef, listId, createId(\"1\"), 2, false, anything()), { times: 2 })\n\n\t\t\t\tconst cacheReadonly2 = await cache.loadRange(ContactTypeRef, listId, createId(\"0\"), 2, false, { cacheMode: CacheMode.ReadOnly })\n\t\t\t\to(cacheReadonly2).deepEquals([contactAOnTheServer, contactBOnTheServer])\n\t\t\t\t// Only the second one was saved\n\t\t\t\tverify(client.loadRange(ContactTypeRef, listId, createId(\"1\"), 2, false, anything()), { times: 2 })\n\t\t\t\tverify(client.loadRange(ContactTypeRef, listId, createId(\"0\"), 2, false, anything()), { times: 1 })\n\t\t\t})\n\t\t})\n\t})\n\n\tfunction makeBatch(updates: Array<EntityUpdate>): QueuedBatch {\n\t\treturn {\n\t\t\tevents: updates,\n\t\t\tgroupId: groupId,\n\t\t\tbatchId: \"batchId\",\n\t\t}\n\t}\n}\n","import o from \"@tutao/otest\"\nimport { EphemeralCacheStorage } from \"../../../../../src/common/api/worker/rest/EphemeralCacheStorage.js\"\nimport { createMailDetailsBlob, MailDetailsBlobTypeRef, MailDetailsTypeRef } from \"../../../../../src/common/api/entities/tutanota/TypeRefs.js\"\nimport { createTestEntity } from \"../../../TestUtils.js\"\n\no.spec(\"EphemeralCacheStorageTest\", function () {\n\tconst userId = \"userId\"\n\tconst archiveId = \"archiveId\"\n\tconst blobElementId = \"blobElementId1\"\n\n\tconst storage = new EphemeralCacheStorage()\n\n\to.spec(\"BlobElementType\", function () {\n\t\to(\"cache roundtrip: put, get, delete\", async function () {\n\t\t\tstorage.init({ userId })\n\t\t\tconst storableMailDetailsBlob = createTestEntity(MailDetailsBlobTypeRef, {\n\t\t\t\t_id: [archiveId, blobElementId],\n\t\t\t\tdetails: createTestEntity(MailDetailsTypeRef),\n\t\t\t})\n\t\t\tlet mailDetailsBlob = await storage.get(MailDetailsBlobTypeRef, archiveId, blobElementId)\n\t\t\to(mailDetailsBlob).equals(null)\n\n\t\t\tawait storage.put(storableMailDetailsBlob)\n\n\t\t\tmailDetailsBlob = await storage.get(MailDetailsBlobTypeRef, archiveId, blobElementId)\n\t\t\to(mailDetailsBlob).deepEquals(storableMailDetailsBlob)\n\n\t\t\tawait storage.deleteIfExists(MailDetailsBlobTypeRef, archiveId, blobElementId)\n\n\t\t\tmailDetailsBlob = await storage.get(MailDetailsBlobTypeRef, archiveId, blobElementId)\n\t\t\to(mailDetailsBlob).equals(null)\n\t\t})\n\n\t\to(\"cache roundtrip: put, get, deleteAllOwnedBy\", async function () {\n\t\t\tconst _ownerGroup = \"owenerGroup\"\n\t\t\tstorage.init({ userId })\n\t\t\tconst storableMailDetailsBlob = createTestEntity(MailDetailsBlobTypeRef, {\n\t\t\t\t_id: [archiveId, blobElementId],\n\t\t\t\t_ownerGroup,\n\t\t\t\tdetails: createTestEntity(MailDetailsTypeRef),\n\t\t\t})\n\n\t\t\tawait storage.put(storableMailDetailsBlob)\n\n\t\t\tawait storage.deleteAllOwnedBy(_ownerGroup)\n\n\t\t\tconst mailDetailsBlob = await storage.get(MailDetailsBlobTypeRef, archiveId, blobElementId)\n\t\t\to(mailDetailsBlob).equals(null)\n\t\t})\n\t})\n})\n","import { EntityRestClient, EntityRestClientLoadOptions, getIds } from \"../../../../../src/common/api/worker/rest/EntityRestClient.js\"\nimport {\n\tcompareNewestFirst,\n\tcompareOldestFirst,\n\telementIdPart,\n\tfirstBiggerThanSecond,\n\tgetElementId,\n\tgetListId,\n\tlistIdPart,\n\ttimestampToGeneratedId,\n} from \"../../../../../src/common/api/common/utils/EntityUtils.js\"\nimport { _verifyType, resolveTypeReference } from \"../../../../../src/common/api/common/EntityFunctions.js\"\nimport { NotFoundError } from \"../../../../../src/common/api/common/error/RestError.js\"\nimport { downcast, TypeRef } from \"@tutao/tutanota-utils\"\nimport type { BlobElementEntity, ElementEntity, ListElementEntity, SomeEntity } from \"../../../../../src/common/api/common/EntityTypes.js\"\nimport { InstanceMapper } from \"../../../../../src/common/api/worker/crypto/InstanceMapper.js\"\nimport { AuthDataProvider } from \"../../../../../src/common/api/worker/facades/UserFacade.js\"\nimport { Type } from \"../../../../../src/common/api/common/EntityConstants.js\"\n\nconst authDataProvider: AuthDataProvider = {\n\tcreateAuthHeaders(): Dict {\n\t\treturn {}\n\t},\n\tisFullyLoggedIn(): boolean {\n\t\treturn true\n\t},\n}\n\nexport class EntityRestClientMock extends EntityRestClient {\n\t_entities: Record<Id, ElementEntity | Error> = {}\n\t_listEntities: Record<Id, Record<Id, ListElementEntity | Error>> = {}\n\t_blobEntities: Record<Id, Record<Id, BlobElementEntity | Error>> = {}\n\t_lastIdTimestamp: number\n\n\tconstructor() {\n\t\tsuper(authDataProvider, downcast({}), () => downcast({}), new InstanceMapper(), downcast({}))\n\t\tthis._lastIdTimestamp = Date.now()\n\t}\n\n\tgetNextId(): Id {\n\t\tthis._lastIdTimestamp++\n\t\treturn timestampToGeneratedId(this._lastIdTimestamp, 1)\n\t}\n\n\taddElementInstances(...instances: Array<ElementEntity>) {\n\t\tfor (const instance of instances) this._entities[instance._id] = instance\n\t}\n\n\taddListInstances(...instances: Array<ListElementEntity>) {\n\t\tfor (const instance of instances) {\n\t\t\tif (!this._listEntities[getListId(instance)]) this._listEntities[getListId(instance)] = {}\n\t\t\tthis._listEntities[getListId(instance)][getElementId(instance)] = instance\n\t\t}\n\t}\n\n\taddBlobInstances(...instances: Array<BlobElementEntity>) {\n\t\tfor (const instance of instances) {\n\t\t\tif (!this._blobEntities[getListId(instance)]) this._blobEntities[getListId(instance)] = {}\n\t\t\tthis._blobEntities[getListId(instance)][getElementId(instance)] = instance\n\t\t}\n\t}\n\n\tsetElementException(id: Id, error: Error) {\n\t\tthis._entities[id] = error\n\t}\n\n\tsetListElementException(id: IdTuple, error: Error) {\n\t\tif (!this._listEntities[listIdPart(id)]) this._listEntities[listIdPart(id)] = {}\n\t\tthis._listEntities[listIdPart(id)][elementIdPart(id)] = error\n\t}\n\n\t_getListEntry(listId: Id, elementId: Id): ListElementEntity | null | undefined {\n\t\tif (!this._listEntities[listId]) {\n\t\t\tthrow new NotFoundError(`Not list ${listId}`)\n\t\t}\n\t\ttry {\n\t\t\treturn this._handleMockElement(this._listEntities[listId][elementId], [listId, elementId])\n\t\t} catch (e) {\n\t\t\tif (e instanceof NotFoundError) {\n\t\t\t\treturn null\n\t\t\t} else {\n\t\t\t\tthrow e\n\t\t\t}\n\t\t}\n\t}\n\n\t_getBlobEntry(listId: Id, elementId: Id): ListElementEntity | null | undefined {\n\t\tif (!this._blobEntities[listId]) {\n\t\t\tthrow new NotFoundError(`Not list ${listId}`)\n\t\t}\n\t\ttry {\n\t\t\treturn this._handleMockElement(this._blobEntities[listId][elementId], [listId, elementId])\n\t\t} catch (e) {\n\t\t\tif (e instanceof NotFoundError) {\n\t\t\t\treturn null\n\t\t\t} else {\n\t\t\t\tthrow e\n\t\t\t}\n\t\t}\n\t}\n\n\tasync load<T extends SomeEntity>(_typeRef: TypeRef<T>, id: T[\"_id\"], _opts: EntityRestClientLoadOptions = {}): Promise<T> {\n\t\tif (id instanceof Array && id.length === 2) {\n\t\t\t// list element request\n\t\t\tconst listId = id[0]\n\t\t\tconst elementId = id[1]\n\n\t\t\tconst listElement = this._getListEntry(listId, elementId)\n\n\t\t\tif (listElement == null) throw new NotFoundError(`List element ${listId} ${elementId} not found`)\n\t\t\treturn downcast(listElement)\n\t\t} else if (typeof id === \"string\") {\n\t\t\t//element request\n\t\t\treturn this._handleMockElement(this._entities[id], id)\n\t\t} else {\n\t\t\tthrow new Error(\"Illegal Id for ET: \" + (id as any))\n\t\t}\n\t}\n\n\tasync loadRange<T extends ListElementEntity>(typeRef: TypeRef<T>, listId: Id, start: Id, count: number, reverse: boolean): Promise<T[]> {\n\t\tlet entriesForListId = this._listEntities[listId]\n\t\tif (!entriesForListId) return []\n\t\tlet filteredIds\n\n\t\tif (reverse) {\n\t\t\tfilteredIds = Object.keys(entriesForListId)\n\t\t\t\t.sort(compareNewestFirst)\n\t\t\t\t.filter((id) => firstBiggerThanSecond(start, id))\n\t\t} else {\n\t\t\tfilteredIds = Object.keys(entriesForListId)\n\t\t\t\t.sort(compareOldestFirst)\n\t\t\t\t.filter((id) => firstBiggerThanSecond(id, start))\n\t\t}\n\n\t\treturn filteredIds.map((id) => this._handleMockElement(entriesForListId[id], id))\n\t}\n\n\tasync loadMultiple<T extends SomeEntity>(typeRef: TypeRef<T>, listId: Id | null | undefined, elementIds: Array<Id>): Promise<Array<T>> {\n\t\tconst lid = listId\n\n\t\tif (lid) {\n\t\t\tconst typeModule = await resolveTypeReference(typeRef)\n\t\t\tif (typeModule.type === Type.ListElement.valueOf()) {\n\t\t\t\treturn elementIds\n\t\t\t\t\t.map((id) => {\n\t\t\t\t\t\treturn downcast(this._getListEntry(lid, id))\n\t\t\t\t\t})\n\t\t\t\t\t.filter(Boolean)\n\t\t\t} else {\n\t\t\t\treturn elementIds\n\t\t\t\t\t.map((id) => {\n\t\t\t\t\t\treturn downcast(this._getBlobEntry(lid, id))\n\t\t\t\t\t})\n\t\t\t\t\t.filter(Boolean)\n\t\t\t}\n\t\t} else {\n\t\t\treturn elementIds\n\t\t\t\t.map((id) => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\treturn this._handleMockElement(this._entities[id], id)\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tif (e instanceof NotFoundError) {\n\t\t\t\t\t\t\treturn null\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow e\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.filter(Boolean)\n\t\t}\n\t}\n\n\tasync erase<T extends SomeEntity>(instance: T): Promise<void> {\n\t\tconst typeModel = await resolveTypeReference(instance._type)\n\t\t_verifyType(typeModel)\n\n\t\tconst ids = getIds(instance, typeModel)\n\n\t\tthis._handleDelete(ids.id, ids.listId)\n\t\treturn Promise.resolve()\n\t}\n\n\tsetup<T extends SomeEntity>(listId: Id | null | undefined, instance: T, extraHeaders?: Dict): Promise<Id> {\n\t\treturn Promise.reject(\"Illegal method: setup\")\n\t}\n\n\tsetupMultiple<T extends SomeEntity>(listId: Id | null | undefined, instances: Array<T>): Promise<Array<Id>> {\n\t\treturn Promise.reject(\"Illegal method: setupMultiple\")\n\t}\n\n\tupdate<T extends SomeEntity>(instance: T): Promise<void> {\n\t\treturn Promise.reject(\"Illegal method: update\")\n\t}\n\n\t_handleDelete(id: Id | null | undefined, listId: Id | null | undefined) {\n\t\tif (id && listId) {\n\t\t\tif (this._getListEntry(listId, id)) {\n\t\t\t\tdelete this._listEntities[listId][id]\n\t\t\t} else {\n\t\t\t\tthrow new NotFoundError(`List element ${listId} ${id} not found`)\n\t\t\t}\n\t\t} else if (id) {\n\t\t\tif (this._entities[id]) {\n\t\t\t\tdelete this._listEntities[id]\n\t\t\t} else {\n\t\t\t\tthrow new NotFoundError(`Element ${id} not found`)\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new Error(\"Illegal arguments for DELETE\")\n\t\t}\n\t}\n\n\t_handleMockElement(element: any, id: Id | IdTuple): any {\n\t\tif (element instanceof Error) {\n\t\t\tthrow element\n\t\t} else if (element != null) {\n\t\t\treturn element\n\t\t} else {\n\t\t\tthrow new NotFoundError(`element with id ${id.toString()} does not exists`)\n\t\t}\n\t}\n}\n","import o from \"@tutao/otest\"\nimport { ConnectMode, EventBusClient, EventBusListener } from \"../../../../src/common/api/worker/EventBusClient.js\"\nimport { GroupType, OperationType } from \"../../../../src/common/api/common/TutanotaConstants.js\"\nimport type { EntityUpdate } from \"../../../../src/common/api/entities/sys/TypeRefs.js\"\nimport {\n\tEntityEventBatchTypeRef,\n\tEntityUpdateTypeRef,\n\tGroupMembershipTypeRef,\n\tUser,\n\tUserTypeRef,\n\tWebsocketCounterData,\n\tWebsocketCounterDataTypeRef,\n\tWebsocketCounterValueTypeRef,\n\tWebsocketEntityData,\n\tWebsocketEntityDataTypeRef,\n} from \"../../../../src/common/api/entities/sys/TypeRefs.js\"\nimport { EntityRestClientMock } from \"./rest/EntityRestClientMock.js\"\nimport { EntityClient } from \"../../../../src/common/api/common/EntityClient.js\"\nimport { defer, noOp, TypeRef } from \"@tutao/tutanota-utils\"\nimport { InstanceMapper } from \"../../../../src/common/api/worker/crypto/InstanceMapper.js\"\nimport { DefaultEntityRestCache } from \"../../../../src/common/api/worker/rest/DefaultEntityRestCache.js\"\nimport { EventQueue, QueuedBatch } from \"../../../../src/common/api/worker/EventQueue.js\"\nimport { OutOfSyncError } from \"../../../../src/common/api/common/error/OutOfSyncError.js\"\nimport { Captor, matchers, object, verify, when } from \"testdouble\"\nimport { create, getElementId, timestampToGeneratedId } from \"../../../../src/common/api/common/utils/EntityUtils.js\"\nimport { SleepDetector } from \"../../../../src/common/api/worker/utils/SleepDetector.js\"\nimport { WsConnectionState } from \"../../../../src/common/api/main/WorkerClient.js\"\nimport { UserFacade } from \"../../../../src/common/api/worker/facades/UserFacade\"\nimport { ExposedProgressTracker } from \"../../../../src/common/api/main/ProgressTracker.js\"\nimport { createTestEntity } from \"../../TestUtils.js\"\nimport { TypeModel } from \"../../../../src/common/api/common/EntityTypes.js\"\n\no.spec(\"EventBusClientTest\", function () {\n\tlet ebc: EventBusClient\n\tlet cacheMock: DefaultEntityRestCache\n\tlet restClient: EntityRestClientMock\n\tlet userMock: UserFacade\n\tlet socket: WebSocket\n\tlet user: User\n\tlet sleepDetector: SleepDetector\n\tlet listenerMock: EventBusListener\n\tlet progressTrackerMock: ExposedProgressTracker\n\tlet socketFactory\n\n\tfunction initEventBus() {\n\t\tconst entityClient = new EntityClient(restClient)\n\t\tconst instanceMapper = new InstanceMapper()\n\t\tebc = new EventBusClient(listenerMock, cacheMock, userMock, entityClient, instanceMapper, socketFactory, sleepDetector, progressTrackerMock)\n\t}\n\n\to.before(function () {\n\t\t// Things that are not defined in node but are read-only in Browser\n\t\tif (!globalThis.isBrowser) {\n\t\t\t// @ts-ignore\n\t\t\tWebSocket.CONNECTING = WebSocket.CONNECTING ?? 0\n\t\t\t// @ts-ignore\n\t\t\tWebSocket.OPEN = WebSocket.OPEN ?? 1\n\t\t\t// @ts-ignore\n\t\t\tWebSocket.CLOSING = WebSocket.CLOSING ?? 2\n\t\t\t// @ts-ignore\n\t\t\tWebSocket.CLOSED = WebSocket.CLOSED ?? 3\n\t\t}\n\t})\n\n\to.beforeEach(async function () {\n\t\tlistenerMock = object()\n\t\tprogressTrackerMock = object()\n\t\tcacheMock = object({\n\t\t\tasync entityEventsReceived(batch: QueuedBatch): Promise<Array<EntityUpdate>> {\n\t\t\t\treturn batch.events.slice()\n\t\t\t},\n\t\t\tasync getLastEntityEventBatchForGroup(groupId: Id): Promise<Id | null> {\n\t\t\t\treturn null\n\t\t\t},\n\t\t\tasync recordSyncTime(): Promise<void> {\n\t\t\t\treturn\n\t\t\t},\n\t\t\tasync timeSinceLastSyncMs(): Promise<number | null> {\n\t\t\t\treturn null\n\t\t\t},\n\t\t\tasync purgeStorage(): Promise<void> {},\n\t\t\tasync setLastEntityEventBatchForGroup(groupId: Id, batchId: Id): Promise<void> {\n\t\t\t\treturn\n\t\t\t},\n\t\t\tasync isOutOfSync(): Promise<boolean> {\n\t\t\t\treturn false\n\t\t\t},\n\t\t} as DefaultEntityRestCache)\n\n\t\tuser = createTestEntity(UserTypeRef, {\n\t\t\tuserGroup: createTestEntity(GroupMembershipTypeRef, {\n\t\t\t\tgroup: \"userGroupId\",\n\t\t\t}),\n\t\t})\n\n\t\tuserMock = object(\"user\")\n\t\twhen(userMock.getLoggedInUser()).thenReturn(user)\n\t\twhen(userMock.isFullyLoggedIn()).thenReturn(true)\n\t\twhen(userMock.createAuthHeaders()).thenReturn({})\n\n\t\trestClient = new EntityRestClientMock()\n\n\t\tsocket = object<WebSocket>()\n\t\tsleepDetector = object()\n\t\tsocketFactory = () => socket\n\n\t\tinitEventBus()\n\t})\n\n\to.spec(\"initEntityEvents \", function () {\n\t\tconst mailGroupId = \"mailGroupId\"\n\n\t\to.beforeEach(function () {\n\t\t\tuser.memberships = [\n\t\t\t\tcreateTestEntity(GroupMembershipTypeRef, {\n\t\t\t\t\tgroupType: GroupType.Mail,\n\t\t\t\t\tgroup: mailGroupId,\n\t\t\t\t}),\n\t\t\t]\n\t\t})\n\n\t\to(\"initial connect: when the cache is clean it downloads one batch and initializes cache\", async function () {\n\t\t\twhen(cacheMock.getLastEntityEventBatchForGroup(mailGroupId)).thenResolve(null)\n\t\t\twhen(cacheMock.timeSinceLastSyncMs()).thenResolve(null)\n\t\t\tconst batch = createTestEntity(EntityEventBatchTypeRef, { _id: [mailGroupId, \"-----------1\"] })\n\t\t\trestClient.addListInstances(batch)\n\n\t\t\tawait ebc.connect(ConnectMode.Initial)\n\t\t\tawait socket.onopen?.(new Event(\"open\"))\n\n\t\t\tverify(cacheMock.recordSyncTime())\n\t\t\t// Did not download anything besides single batch\n\t\t\tverify(restClient.loadRange(EntityEventBatchTypeRef, mailGroupId, matchers.anything(), matchers.not(1), matchers.anything()), { times: 0 })\n\t\t\tverify(cacheMock.setLastEntityEventBatchForGroup(mailGroupId, getElementId(batch)))\n\t\t})\n\n\t\to(\"initial connect: when the cache is initialized, missed events are loaded\", async function () {\n\t\t\twhen(cacheMock.getLastEntityEventBatchForGroup(mailGroupId)).thenResolve(\"------------\")\n\t\t\twhen(cacheMock.timeSinceLastSyncMs()).thenResolve(1)\n\t\t\tconst update = createTestEntity(EntityUpdateTypeRef, {\n\t\t\t\ttype: \"Mail\",\n\t\t\t\tapplication: \"tutanota\",\n\t\t\t\tinstanceListId: mailGroupId,\n\t\t\t\tinstanceId: \"newBatchId\",\n\t\t\t})\n\t\t\tconst batch = createTestEntity(EntityEventBatchTypeRef, {\n\t\t\t\t_id: [mailGroupId, \"-----------1\"],\n\t\t\t\tevents: [update],\n\t\t\t})\n\t\t\trestClient.addListInstances(batch)\n\n\t\t\tconst eventsReceivedDefer = defer()\n\t\t\twhen(cacheMock.entityEventsReceived({ events: [update], batchId: getElementId(batch), groupId: mailGroupId })).thenDo(() =>\n\t\t\t\teventsReceivedDefer.resolve(undefined),\n\t\t\t)\n\n\t\t\tawait ebc.connect(ConnectMode.Initial)\n\t\t\tawait socket.onopen?.(new Event(\"open\"))\n\n\t\t\tawait eventsReceivedDefer.promise\n\n\t\t\tverify(cacheMock.purgeStorage(), { times: 0 })\n\t\t\tverify(cacheMock.recordSyncTime())\n\t\t})\n\n\t\to(\"reconnect: when the cache is out of sync with the server, the cache is purged\", async function () {\n\t\t\twhen(cacheMock.getLastEntityEventBatchForGroup(mailGroupId)).thenResolve(\"lastBatchId\")\n\t\t\t// Make initial connection to simulate reconnect (populate lastEntityEventIds\n\t\t\tawait ebc.connect(ConnectMode.Initial)\n\t\t\tawait socket.onopen?.(new Event(\"open\"))\n\n\t\t\t// Make it think that it's actually a reconnect\n\t\t\twhen(cacheMock.isOutOfSync()).thenResolve(true)\n\n\t\t\t// initialize events first as well as current time\n\t\t\tawait ebc.connect(ConnectMode.Reconnect)\n\t\t\tawait socket.onopen?.(new Event(\"open\"))\n\n\t\t\tverify(cacheMock.purgeStorage(), { times: 1 })\n\t\t\tverify(listenerMock.onError(matchers.isA(OutOfSyncError)))\n\t\t})\n\n\t\to(\"initial connect: when the cache is out of sync with the server, the cache is purged\", async function () {\n\t\t\twhen(cacheMock.getLastEntityEventBatchForGroup(mailGroupId)).thenResolve(\"lastBatchId\")\n\t\t\twhen(cacheMock.isOutOfSync()).thenResolve(true)\n\n\t\t\tawait ebc.connect(ConnectMode.Reconnect)\n\t\t\tawait socket.onopen?.(new Event(\"open\"))\n\n\t\t\tverify(cacheMock.purgeStorage(), { times: 1 })\n\t\t\tverify(listenerMock.onError(matchers.isA(OutOfSyncError)))\n\t\t})\n\t})\n\n\to(\"parallel received event batches are passed sequentially to the entity rest cache\", async function () {\n\t\to.timeout(500)\n\t\tebc.connect(ConnectMode.Initial)\n\t\tawait socket.onopen?.(new Event(\"open\"))\n\n\t\tconst messageData1 = createEntityMessage(1)\n\t\tconst messageData2 = createEntityMessage(2)\n\n\t\t// Casting ot object here because promise stubber doesn't allow you to just return the promise\n\t\t// We never resolve the promise\n\t\twhen(cacheMock.entityEventsReceived(matchers.anything()) as object).thenReturn(new Promise(noOp))\n\n\t\t// call twice as if it was received in parallel\n\t\tconst p1 = socket.onmessage?.({\n\t\t\tdata: messageData1,\n\t\t} as MessageEvent<string>)\n\n\t\tconst p2 = socket.onmessage?.({\n\t\t\tdata: messageData2,\n\t\t} as MessageEvent<string>)\n\n\t\tawait Promise.all([p1, p2])\n\n\t\t// Is waiting for cache to process the first event\n\t\tverify(cacheMock.entityEventsReceived(matchers.anything()), { times: 1 })\n\t})\n\n\to(\"received event batch is filtered for unknown types\", async function () {\n\t\to.timeout(500)\n\t\tebc.connect(ConnectMode.Initial)\n\t\tawait socket.onopen?.(new Event(\"open\"))\n\n\t\tconst messageData = createEntityMessageWithUnknownEntity(1)\n\n\t\tconst updateCaptor: Captor = matchers.captor()\n\t\t// Is waiting for cache to process the first event.\n\t\t// return value doesn't matter since out tested behaviour has already occurred when this is called.\n\t\twhen(cacheMock.entityEventsReceived(updateCaptor.capture())).thenReturn(Promise.resolve([]))\n\n\t\tawait socket.onmessage?.({\n\t\t\tdata: messageData,\n\t\t} as MessageEvent<string>)\n\n\t\to(updateCaptor.values?.length).equals(1)\n\t\to(updateCaptor.value.events).deepEquals([\n\t\t\tcreateTestEntity(EntityUpdateTypeRef, {\n\t\t\t\t_id: \"eventBatchId\",\n\t\t\t\tapplication: \"tutanota\",\n\t\t\t\ttype: \"Mail\",\n\t\t\t\tinstanceListId: \"listId1\",\n\t\t\t\tinstanceId: \"id1\",\n\t\t\t\toperation: OperationType.UPDATE,\n\t\t\t}),\n\t\t])\n\t})\n\n\to(\"missed entity events are processed in order\", async function () {\n\t\tconst membershipGroupId = \"membershipGroupId\"\n\t\tuser.memberships = [\n\t\t\tcreateTestEntity(GroupMembershipTypeRef, {\n\t\t\t\tgroup: membershipGroupId,\n\t\t\t}),\n\t\t]\n\t\tconst now = Date.now()\n\n\t\tconst batchId1 = timestampToGeneratedId(now - 1)\n\t\tconst batchId2 = timestampToGeneratedId(now - 2)\n\t\tconst batchId3 = timestampToGeneratedId(now - 3)\n\t\tconst batchId4 = timestampToGeneratedId(now - 4)\n\t\tconst batches = [\n\t\t\tcreateTestEntity(EntityEventBatchTypeRef, { _id: [membershipGroupId, batchId1] }),\n\t\t\tcreateTestEntity(EntityEventBatchTypeRef, { _id: [user.userGroup.group, batchId3] }),\n\t\t\tcreateTestEntity(EntityEventBatchTypeRef, { _id: [membershipGroupId, batchId4] }),\n\t\t\tcreateTestEntity(EntityEventBatchTypeRef, { _id: [user.userGroup.group, batchId2] }),\n\t\t]\n\t\trestClient.addListInstances(...batches)\n\t\tconst eventQueue = object<EventQueue>()\n\t\tconst addedBatchIds: Id[] = []\n\t\twhen(eventQueue.add(matchers.anything(), matchers.anything(), matchers.anything())).thenDo(\n\t\t\t(batchId: Id, groupId: Id, newEvents: ReadonlyArray<EntityUpdate>) => addedBatchIds.push(batchId),\n\t\t)\n\n\t\tawait ebc.loadMissedEntityEvents(eventQueue)\n\n\t\to(addedBatchIds).deepEquals([batchId4, batchId3, batchId2, batchId1])\n\t})\n\n\to(\"missed entity events are filtered for unknown types\", async function () {\n\t\tconst membershipGroupId = \"membershipGroupId\"\n\t\tuser.memberships = [\n\t\t\tcreateTestEntity(GroupMembershipTypeRef, {\n\t\t\t\tgroup: membershipGroupId,\n\t\t\t}),\n\t\t]\n\t\tconst now = Date.now()\n\t\tconst batchId = timestampToGeneratedId(now - 1)\n\t\tconst mailEntityUpdate = createTestEntity(EntityUpdateTypeRef, {\n\t\t\t_id: \"eventBatchId\",\n\t\t\tapplication: \"tutanota\",\n\t\t\ttype: \"Mail\",\n\t\t\tinstanceListId: \"listId1\",\n\t\t\tinstanceId: \"id1\",\n\t\t\toperation: OperationType.UPDATE,\n\t\t})\n\t\tconst unknownEntityUpdate = createTestEntity(EntityUpdateTypeRef, {\n\t\t\t_id: \"eventBatchId\",\n\t\t\tapplication: \"sys\",\n\t\t\ttype: \"UnknownType\",\n\t\t\tinstanceListId: \"listId2\",\n\t\t\tinstanceId: \"id1\",\n\t\t\toperation: OperationType.UPDATE,\n\t\t})\n\t\tconst batch = createTestEntity(EntityEventBatchTypeRef, {\n\t\t\t_id: [membershipGroupId, batchId],\n\t\t\tevents: [mailEntityUpdate, unknownEntityUpdate],\n\t\t})\n\n\t\trestClient.addListInstances(batch)\n\t\tconst eventQueue = object<EventQueue>()\n\t\tconst addedBatches: Array<ReadonlyArray<EntityUpdate>> = []\n\t\twhen(eventQueue.add(matchers.anything(), matchers.anything(), matchers.anything())).thenDo(\n\t\t\t(batchId: Id, groupId: Id, newEvents: ReadonlyArray<EntityUpdate>) => addedBatches.push(newEvents),\n\t\t)\n\n\t\tawait ebc.loadMissedEntityEvents(eventQueue)\n\n\t\t// batch unknownEntityUpdate is not added to the eventQueue as the type is unknown in the client\n\t\to(addedBatches).deepEquals([[mailEntityUpdate]])\n\t})\n\n\to(\"on counter update it send message to the main thread\", async function () {\n\t\tconst counterUpdate = createCounterData({ mailGroupId: \"group1\", counterValue: 4, counterId: \"list1\" })\n\t\tawait ebc.connect(ConnectMode.Initial)\n\n\t\tawait socket.onmessage?.({\n\t\t\tdata: createCounterMessage(counterUpdate),\n\t\t} as MessageEvent)\n\t\tverify(listenerMock.onCounterChanged(counterUpdate))\n\t})\n\n\to.spec(\"sleep detection\", function () {\n\t\to(\"on connect it starts\", async function () {\n\t\t\tverify(sleepDetector.start(matchers.anything()), { times: 0 })\n\n\t\t\tebc.connect(ConnectMode.Initial)\n\t\t\tawait socket.onopen?.(new Event(\"open\"))\n\n\t\t\tverify(sleepDetector.start(matchers.anything()), { times: 1 })\n\t\t})\n\n\t\to(\"on disconnect it stops\", async function () {\n\t\t\tebc.connect(ConnectMode.Initial)\n\t\t\tawait socket.onopen?.(new Event(\"open\"))\n\n\t\t\tawait socket.onclose?.(new Event(\"close\") as CloseEvent) // there's no CloseEvent in node\n\t\t\tverify(sleepDetector.stop())\n\t\t})\n\n\t\to(\"on sleep it reconnects\", async function () {\n\t\t\tlet passedCb\n\t\t\twhen(sleepDetector.start(matchers.anything())).thenDo((cb) => (passedCb = cb))\n\t\t\tconst firstSocket = socket\n\n\t\t\tebc.connect(ConnectMode.Initial)\n\t\t\t// @ts-ignore\n\t\t\tfirstSocket.readyState = WebSocket.OPEN\n\t\t\tawait firstSocket.onopen?.(new Event(\"open\"))\n\t\t\tverify(socket.close(), { ignoreExtraArgs: true, times: 0 })\n\t\t\tconst secondSocket = (socket = object())\n\t\t\tpassedCb()\n\n\t\t\tverify(firstSocket.close(), { ignoreExtraArgs: true, times: 1 })\n\t\t\tverify(listenerMock.onWebsocketStateChanged(WsConnectionState.connecting))\n\t\t\tawait secondSocket.onopen?.(new Event(\"open\"))\n\t\t\tverify(listenerMock.onWebsocketStateChanged(WsConnectionState.connected))\n\t\t})\n\t})\n\n\ttype UnknownType = {\n\t\t_type: TypeRef<UnknownType>\n\n\t\t_id: Id\n\t}\n\n\tfunction createUnknownEntity(): UnknownType {\n\t\tconst unknownTypeModel: TypeModel = {\n\t\t\tid: Number.MAX_SAFE_INTEGER,\n\t\t\tsince: 1,\n\t\t\tapp: \"sys\",\n\t\t\tversion: \"1\",\n\t\t\tname: \"Unknown\",\n\t\t\ttype: \"LIST_ELEMENT_TYPE\",\n\t\t\tversioned: false,\n\t\t\tencrypted: false,\n\t\t\trootId: \"someId\",\n\t\t\tvalues: {},\n\t\t\tassociations: {},\n\t\t}\n\t\tconst unknownTypeRef: TypeRef<UnknownType> = new TypeRef(\"sys\", \"Unknown\")\n\t\treturn create(unknownTypeModel, unknownTypeRef)\n\t}\n\n\tfunction createEntityMessageWithUnknownEntity(eventBatchId: number): string {\n\t\tconst event: WebsocketEntityData = createTestEntity(WebsocketEntityDataTypeRef, {\n\t\t\teventBatchId: String(eventBatchId),\n\t\t\teventBatchOwner: \"ownerId\",\n\t\t\teventBatch: [\n\t\t\t\tcreateTestEntity(EntityUpdateTypeRef, {\n\t\t\t\t\t_id: \"eventBatchId\",\n\t\t\t\t\tapplication: \"tutanota\",\n\t\t\t\t\ttype: \"Mail\",\n\t\t\t\t\tinstanceListId: \"listId1\",\n\t\t\t\t\tinstanceId: \"id1\",\n\t\t\t\t\toperation: OperationType.UPDATE,\n\t\t\t\t}),\n\t\t\t\tcreateTestEntity(EntityUpdateTypeRef, {\n\t\t\t\t\t_id: \"eventBatchId\",\n\t\t\t\t\tapplication: \"sys\",\n\t\t\t\t\ttype: \"UnknownType\",\n\t\t\t\t\tinstanceListId: \"listId2\",\n\t\t\t\t\tinstanceId: \"id1\",\n\t\t\t\t\toperation: OperationType.UPDATE,\n\t\t\t\t}),\n\t\t\t],\n\t\t})\n\t\treturn \"entityUpdate;\" + JSON.stringify(event)\n\t}\n\n\tfunction createEntityMessage(eventBatchId: number): string {\n\t\tconst event: WebsocketEntityData = createTestEntity(WebsocketEntityDataTypeRef, {\n\t\t\teventBatchId: String(eventBatchId),\n\t\t\teventBatchOwner: \"ownerId\",\n\t\t\teventBatch: [\n\t\t\t\tcreateTestEntity(EntityUpdateTypeRef, {\n\t\t\t\t\t_id: \"eventbatchid\",\n\t\t\t\t\tapplication: \"tutanota\",\n\t\t\t\t\ttype: \"Mail\",\n\t\t\t\t\tinstanceListId: \"listId1\",\n\t\t\t\t\tinstanceId: \"id1\",\n\t\t\t\t\toperation: OperationType.UPDATE,\n\t\t\t\t}),\n\t\t\t],\n\t\t})\n\t\treturn \"entityUpdate;\" + JSON.stringify(event)\n\t}\n\n\ttype CounterMessageParams = { mailGroupId: Id; counterValue: number; counterId: Id }\n\n\tfunction createCounterData({ mailGroupId, counterValue, counterId }: CounterMessageParams): WebsocketCounterData {\n\t\treturn createTestEntity(WebsocketCounterDataTypeRef, {\n\t\t\t_format: \"0\",\n\t\t\tmailGroup: mailGroupId,\n\t\t\tcounterValues: [\n\t\t\t\tcreateTestEntity(WebsocketCounterValueTypeRef, {\n\t\t\t\t\t_id: \"counterupdateid\",\n\t\t\t\t\tcount: String(counterValue),\n\t\t\t\t\tcounterId,\n\t\t\t\t}),\n\t\t\t],\n\t\t})\n\t}\n\n\tfunction createCounterMessage(event: WebsocketCounterData): string {\n\t\treturn \"unreadCounterUpdate;\" + JSON.stringify(event)\n\t}\n})\n","import o from \"@tutao/otest\"\nimport { EventBusEventCoordinator } from \"../../../../src/common/api/worker/EventBusEventCoordinator.js\"\nimport { matchers, object, verify, when } from \"testdouble\"\nimport {\n\tEntityUpdate,\n\tEntityUpdateTypeRef,\n\tGroupKeyUpdateTypeRef,\n\tGroupMembershipTypeRef,\n\tUser,\n\tUserGroupKeyDistributionTypeRef,\n\tUserTypeRef,\n\tWebsocketLeaderStatusTypeRef,\n} from \"../../../../src/common/api/entities/sys/TypeRefs.js\"\nimport { createTestEntity } from \"../../TestUtils.js\"\nimport { AccountType, OperationType } from \"../../../../src/common/api/common/TutanotaConstants.js\"\nimport { UserFacade } from \"../../../../src/common/api/worker/facades/UserFacade.js\"\nimport { EntityClient } from \"../../../../src/common/api/common/EntityClient.js\"\nimport { lazyAsync, lazyMemoized } from \"@tutao/tutanota-utils\"\nimport { MailFacade } from \"../../../../src/common/api/worker/facades/lazy/MailFacade.js\"\nimport { EventController } from \"../../../../src/common/api/main/EventController.js\"\nimport { KeyRotationFacade } from \"../../../../src/common/api/worker/facades/KeyRotationFacade.js\"\nimport { CacheManagementFacade } from \"../../../../src/common/api/worker/facades/lazy/CacheManagementFacade.js\"\nimport { QueuedBatch } from \"../../../../src/common/api/worker/EventQueue.js\"\n\no.spec(\"EventBusEventCoordinatorTest\", () => {\n\tlet eventBusEventCoordinator: EventBusEventCoordinator\n\tlet userId = \"userId\"\n\tlet userGroupId = \"userGroupId\"\n\tlet user: User\n\tlet userGroupKeyDistribution\n\tlet userFacade: UserFacade\n\tlet entityClient: EntityClient\n\tlet mailFacade: MailFacade\n\tlet eventController: EventController\n\tlet keyRotationFacadeMock: KeyRotationFacade\n\tlet cacheManagementFacade: CacheManagementFacade\n\n\to.beforeEach(function () {\n\t\tuser = createTestEntity(UserTypeRef, { userGroup: createTestEntity(GroupMembershipTypeRef, { group: userGroupId }), _id: userId })\n\t\tuserFacade = object()\n\t\twhen(userFacade.getUser()).thenReturn(user)\n\t\tentityClient = object()\n\t\twhen(entityClient.load(UserTypeRef, userId)).thenResolve(user)\n\t\tuserGroupKeyDistribution = createTestEntity(UserGroupKeyDistributionTypeRef, { _id: userGroupId })\n\t\twhen(entityClient.load(UserGroupKeyDistributionTypeRef, userGroupId)).thenResolve(userGroupKeyDistribution)\n\t\tmailFacade = object()\n\t\tlet lazyMailFacade: lazyAsync<MailFacade> = lazyMemoized(async () => mailFacade)\n\t\teventController = object()\n\t\tkeyRotationFacadeMock = object()\n\t\tcacheManagementFacade = object()\n\t\teventBusEventCoordinator = new EventBusEventCoordinator(\n\t\t\tobject(),\n\t\t\tlazyMailFacade,\n\t\t\tuserFacade,\n\t\t\tentityClient,\n\t\t\teventController,\n\t\t\tobject(),\n\t\t\tkeyRotationFacadeMock,\n\t\t\tasync () => cacheManagementFacade,\n\t\t\tasync (error: Error) => {},\n\t\t\t(queuedBatch: QueuedBatch[]) => {},\n\t\t)\n\t})\n\n\to(\"updateUser and UserGroupKeyDistribution\", async function () {\n\t\tconst updates: Array<EntityUpdate> = [\n\t\t\tcreateTestEntity(EntityUpdateTypeRef, {\n\t\t\t\tapplication: UserTypeRef.app,\n\t\t\t\ttype: UserTypeRef.type,\n\t\t\t\tinstanceId: userId,\n\t\t\t\toperation: OperationType.UPDATE,\n\t\t\t}),\n\t\t\tcreateTestEntity(EntityUpdateTypeRef, {\n\t\t\t\tapplication: UserGroupKeyDistributionTypeRef.app,\n\t\t\t\ttype: UserGroupKeyDistributionTypeRef.type,\n\t\t\t\tinstanceId: userGroupId,\n\t\t\t\toperation: OperationType.CREATE,\n\t\t\t}),\n\t\t]\n\n\t\tawait eventBusEventCoordinator.onEntityEventsReceived(updates, \"batchId\", \"groupId\")\n\n\t\tverify(userFacade.updateUser(user))\n\t\tverify(cacheManagementFacade.tryUpdatingUserGroupKey())\n\t\tverify(eventController.onEntityUpdateReceived(updates, \"groupId\"))\n\t\tverify(mailFacade.entityEventsReceived(updates))\n\t})\n\n\to(\"updatUser only user update\", async function () {\n\t\tconst updates: Array<EntityUpdate> = [\n\t\t\tcreateTestEntity(EntityUpdateTypeRef, {\n\t\t\t\tapplication: UserTypeRef.app,\n\t\t\t\ttype: UserTypeRef.type,\n\t\t\t\tinstanceId: userId,\n\t\t\t\toperation: OperationType.UPDATE,\n\t\t\t}),\n\t\t]\n\n\t\tawait eventBusEventCoordinator.onEntityEventsReceived(updates, \"batchId\", \"groupId\")\n\n\t\tverify(userFacade.updateUser(user))\n\t\tverify(cacheManagementFacade.tryUpdatingUserGroupKey(), { times: 0 })\n\t\tverify(eventController.onEntityUpdateReceived(updates, \"groupId\"))\n\t\tverify(mailFacade.entityEventsReceived(updates))\n\t})\n\n\to(\"groupKeyUpdate\", async function () {\n\t\tconst instanceListId = \"updateListId\"\n\t\tconst instanceId = \"updateElementId\"\n\t\tconst updates: Array<EntityUpdate> = [\n\t\t\tcreateTestEntity(EntityUpdateTypeRef, {\n\t\t\t\tapplication: GroupKeyUpdateTypeRef.app,\n\t\t\t\ttype: GroupKeyUpdateTypeRef.type,\n\t\t\t\tinstanceListId,\n\t\t\t\tinstanceId,\n\t\t\t\toperation: OperationType.CREATE,\n\t\t\t}),\n\t\t]\n\n\t\tawait eventBusEventCoordinator.onEntityEventsReceived(updates, \"batchId\", \"groupId\")\n\n\t\tverify(keyRotationFacadeMock.updateGroupMemberships([[instanceListId, instanceId]]))\n\t\tverify(userFacade.updateUser(user), { times: 0 })\n\t\tverify(cacheManagementFacade.tryUpdatingUserGroupKey(), { times: 0 })\n\t\tverify(eventController.onEntityUpdateReceived(updates, \"groupId\"))\n\t\tverify(mailFacade.entityEventsReceived(updates))\n\t})\n\n\to.spec(\"onLeaderStatusChanged\", function () {\n\t\to(\"If we are not the leader client, delete the passphrase key\", function () {\n\t\t\tenv.mode = \"Desktop\"\n\t\t\tconst leaderStatus = createTestEntity(WebsocketLeaderStatusTypeRef, { leaderStatus: false })\n\n\t\t\teventBusEventCoordinator.onLeaderStatusChanged(leaderStatus)\n\n\t\t\tverify(keyRotationFacadeMock.reset())\n\t\t\tverify(keyRotationFacadeMock.processPendingKeyRotationsAndUpdates(matchers.anything()), { times: 0 })\n\t\t})\n\n\t\to(\"If we are the leader client of an internal user, execute key rotations\", function () {\n\t\t\tenv.mode = \"Desktop\"\n\t\t\tconst leaderStatus = createTestEntity(WebsocketLeaderStatusTypeRef, { leaderStatus: true })\n\n\t\t\teventBusEventCoordinator.onLeaderStatusChanged(leaderStatus)\n\n\t\t\tverify(keyRotationFacadeMock.processPendingKeyRotationsAndUpdates(user))\n\t\t})\n\n\t\to(\"If we are the leader client of an external user, delete the passphrase key\", function () {\n\t\t\tenv.mode = \"Desktop\"\n\t\t\tconst leaderStatus = createTestEntity(WebsocketLeaderStatusTypeRef, { leaderStatus: true })\n\t\t\tuser.accountType = AccountType.EXTERNAL\n\n\t\t\teventBusEventCoordinator.onLeaderStatusChanged(leaderStatus)\n\n\t\t\tverify(keyRotationFacadeMock.reset())\n\t\t\tverify(keyRotationFacadeMock.processPendingKeyRotationsAndUpdates(matchers.anything()), { times: 0 })\n\t\t})\n\t})\n})\n","import { EntityEventBatchTypeRef, EntityUpdateTypeRef, GroupMembershipTypeRef, UserTypeRef } from \"../../../../../src/common/api/entities/sys/TypeRefs.js\"\nimport { DbFacade, DbTransaction } from \"../../../../../src/common/api/worker/search/DbFacade.js\"\nimport {\n\tENTITY_EVENT_BATCH_TTL_DAYS,\n\tFULL_INDEXED_TIMESTAMP,\n\tGroupType,\n\tNOTHING_INDEXED_TIMESTAMP,\n\tOperationType,\n} from \"../../../../../src/common/api/common/TutanotaConstants.js\"\nimport { Indexer } from \"../../../../../src/mail-app/workerUtils/index/Indexer.js\"\nimport { NotAuthorizedError } from \"../../../../../src/common/api/common/error/RestError.js\"\nimport { ContactListTypeRef, ContactTypeRef, MailTypeRef } from \"../../../../../src/common/api/entities/tutanota/TypeRefs.js\"\nimport { OutOfSyncError } from \"../../../../../src/common/api/common/error/OutOfSyncError.js\"\nimport { assertThrows, mock, spy } from \"@tutao/tutanota-test-utils\"\nimport { browserDataStub, createTestEntity } from \"../../../TestUtils.js\"\nimport type { QueuedBatch } from \"../../../../../src/common/api/worker/EventQueue.js\"\nimport { EntityRestClient } from \"../../../../../src/common/api/worker/rest/EntityRestClient.js\"\nimport { MembershipRemovedError } from \"../../../../../src/common/api/common/error/MembershipRemovedError.js\"\nimport { GENERATED_MAX_ID, generatedIdToTimestamp, getElementId, timestampToGeneratedId } from \"../../../../../src/common/api/common/utils/EntityUtils.js\"\nimport { daysToMillis, defer, downcast, freshVersioned, TypeRef } from \"@tutao/tutanota-utils\"\nimport { aes256RandomKey, aesEncrypt, decryptKey, encryptKey, fixedIv, IV_BYTE_LENGTH, random } from \"@tutao/tutanota-crypto\"\nimport { DefaultEntityRestCache } from \"../../../../../src/common/api/worker/rest/DefaultEntityRestCache.js\"\nimport o from \"@tutao/otest\"\nimport { func, instance, matchers, object, replace, reset, verify, when } from \"testdouble\"\nimport { CacheInfo } from \"../../../../../src/common/api/worker/facades/LoginFacade.js\"\nimport { RestClient } from \"../../../../../src/common/api/worker/rest/RestClient.js\"\nimport { EntityClient } from \"../../../../../src/common/api/common/EntityClient.js\"\nimport { ContactIndexer } from \"../../../../../src/mail-app/workerUtils/index/ContactIndexer.js\"\nimport { InfoMessageHandler } from \"../../../../../src/common/gui/InfoMessageHandler.js\"\nimport { GroupDataOS, Metadata, MetaDataOS } from \"../../../../../src/common/api/worker/search/IndexTables.js\"\nimport { MailFacade } from \"../../../../../src/common/api/worker/facades/lazy/MailFacade.js\"\nimport { MailIndexer } from \"../../../../../src/mail-app/workerUtils/index/MailIndexer.js\"\nimport { KeyLoaderFacade } from \"../../../../../src/common/api/worker/facades/KeyLoaderFacade.js\"\n\nconst SERVER_TIME = new Date(\"1994-06-08\").getTime()\nlet contactList = createTestEntity(ContactListTypeRef)\ncontactList._ownerGroup = \"ownerGroupId\"\ncontactList.contacts = \"contactListId\"\no.spec(\"IndexerTest\", () => {\n\tconst OUT_OF_DATE_SERVER_TIME = SERVER_TIME - daysToMillis(ENTITY_EVENT_BATCH_TTL_DAYS) - 1000 * 60 * 60 * 24\n\tconst restClientMock: EntityRestClient = downcast({\n\t\tgetRestClient() {\n\t\t\treturn {\n\t\t\t\tgetServerTimestampMs() {\n\t\t\t\t\treturn SERVER_TIME\n\t\t\t\t},\n\t\t\t}\n\t\t},\n\t})\n\tconst entityRestCache: DefaultEntityRestCache = downcast({})\n\n\tconst keyLoaderFacade = object<KeyLoaderFacade>()\n\tlet mailIndexer: MailIndexer\n\n\to.beforeEach(function () {\n\t\tmailIndexer = object()\n\t\tmailIndexer.mailIndexingEnabled = false\n\t})\n\n\to(\"init new db\", async function () {\n\t\tlet metadata = {}\n\t\tconst expectedKeys = Object.keys(Metadata)\n\t\tlet transaction = {\n\t\t\tget: (os, key) => {\n\t\t\t\to(os).equals(MetaDataOS)\n\t\t\t\to(key).equals(expectedKeys.shift())\n\t\t\t\treturn Promise.resolve(null)\n\t\t\t},\n\t\t\tgetAll: (os) => {\n\t\t\t\t// So that we don't run into \"no group ids' check\n\t\t\t\treturn Promise.resolve([\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: \"key\",\n\t\t\t\t\t\tvalue: \"value\",\n\t\t\t\t\t},\n\t\t\t\t])\n\t\t\t},\n\t\t\tput: (os, key, value) => {\n\t\t\t\to(os).equals(MetaDataOS)\n\t\t\t\tmetadata[key] = value\n\t\t\t},\n\t\t\twait: () => Promise.resolve(),\n\t\t}\n\t\tlet groupBatches = [\n\t\t\t{\n\t\t\t\tgroupId: \"user-group-id\",\n\t\t\t\tgroupData: {},\n\t\t\t},\n\t\t]\n\t\tlet persistentGroupData = [\n\t\t\t{\n\t\t\t\tpersistentGroupData: \"dummy\",\n\t\t\t},\n\t\t]\n\t\tconst infoMessageHandler = object<InfoMessageHandler>()\n\t\twhen(mailIndexer.indexMailboxes(matchers.anything(), matchers.anything())).thenResolve()\n\t\tconst indexer = mock(new Indexer(restClientMock, infoMessageHandler, browserDataStub, entityRestCache, () => mailIndexer), (mock) => {\n\t\t\tmock._loadGroupData = spy(() => Promise.resolve(groupBatches))\n\t\t\tmock._initGroupData = spy((batches) => Promise.resolve())\n\t\t\tmock.db.dbFacade = {\n\t\t\t\topen: spy(() => Promise.resolve()),\n\t\t\t\tcreateTransaction: () => Promise.resolve(transaction),\n\t\t\t}\n\t\t\tmock._contact.indexFullContactList = spy(() => Promise.resolve())\n\t\t\tmock._contact.getIndexTimestamp = spy(() => Promise.resolve(NOTHING_INDEXED_TIMESTAMP))\n\t\t\tmock._loadPersistentGroupData = spy(() => Promise.resolve(persistentGroupData))\n\t\t\tmock._loadNewEntities = spy(async () => {})\n\t\t\tmock._entity.loadRoot = spy(() => Promise.resolve(contactList))\n\t\t})\n\t\tlet user = createTestEntity(UserTypeRef)\n\t\tuser.userGroup = createTestEntity(GroupMembershipTypeRef)\n\t\tuser.userGroup.group = \"user-group-id\"\n\t\tlet userGroupKey = freshVersioned(aes256RandomKey())\n\n\t\twhen(keyLoaderFacade.getCurrentSymUserGroupKey()).thenReturn(userGroupKey)\n\n\t\tawait indexer.init({ user, keyLoaderFacade })\n\t\to(indexer._loadGroupData.args).deepEquals([user])\n\t\to(indexer._initGroupData.args[0]).deepEquals(groupBatches)\n\t\to(metadata[Metadata.mailIndexingEnabled]).equals(false)\n\t\to(decryptKey(userGroupKey.object, metadata[Metadata.userEncDbKey])).deepEquals(indexer.db.key)\n\t\to(indexer._entity.loadRoot.args).deepEquals([ContactListTypeRef, user.userGroup.group])\n\t\to(indexer._contact.indexFullContactList.callCount).equals(1)\n\t\to(indexer._contact.indexFullContactList.args).deepEquals([contactList])\n\t\tverify(mailIndexer.indexMailboxes(matchers.anything(), matchers.anything()), { times: 1 })\n\t\to(indexer._loadPersistentGroupData.args).deepEquals([user])\n\t\to(indexer._loadNewEntities.args).deepEquals([persistentGroupData])\n\t})\n\n\to(\"init existing db\", async function () {\n\t\tlet userGroupKey = freshVersioned(aes256RandomKey())\n\t\tlet dbKey = aes256RandomKey()\n\t\tlet encDbIv = aesEncrypt(dbKey, fixedIv, random.generateRandomData(IV_BYTE_LENGTH), true)\n\t\tlet userEncDbKey = encryptKey(userGroupKey.object, dbKey)\n\t\tconst userGroupKeyVersion = 0\n\t\tlet transaction = {\n\t\t\tget: (os, key) => {\n\t\t\t\tif (os == MetaDataOS && key == Metadata.userEncDbKey) return Promise.resolve(userEncDbKey)\n\t\t\t\tif (os == MetaDataOS && key == Metadata.mailIndexingEnabled) return Promise.resolve(true)\n\t\t\t\tif (os == MetaDataOS && key == Metadata.excludedListIds) return Promise.resolve([\"excluded-list-id\"])\n\t\t\t\tif (os == MetaDataOS && key == Metadata.encDbIv) return Promise.resolve(encDbIv)\n\t\t\t\tif (os == MetaDataOS && key == Metadata.userGroupKeyVersion) {\n\t\t\t\t\treturn Promise.resolve(userGroupKeyVersion)\n\t\t\t\t}\n\t\t\t\treturn Promise.resolve(null)\n\t\t\t},\n\t\t\tgetAll: (os) => {\n\t\t\t\t// So that we don't run into \"no group ids' check\n\t\t\t\treturn Promise.resolve([\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: \"key\",\n\t\t\t\t\t\tvalue: \"value\",\n\t\t\t\t\t},\n\t\t\t\t])\n\t\t\t},\n\t\t\twait: () => Promise.resolve(),\n\t\t}\n\t\tlet persistentGroupData = [\n\t\t\t{\n\t\t\t\tpersistentGroupData: \"dummy\",\n\t\t\t},\n\t\t]\n\t\tlet groupDiff = [\n\t\t\t{\n\t\t\t\tgroupDiff: \"dummy\",\n\t\t\t},\n\t\t]\n\t\tconst infoMessageHandler = object<InfoMessageHandler>()\n\t\tconst indexer = mock(new Indexer(restClientMock, infoMessageHandler, browserDataStub, entityRestCache, () => mailIndexer), (mock) => {\n\t\t\tmock.db.dbFacade = {\n\t\t\t\topen: spy(() => Promise.resolve()),\n\t\t\t\tcreateTransaction: () => Promise.resolve(transaction),\n\t\t\t}\n\t\t\tmock._loadGroupDiff = spy(() => Promise.resolve(groupDiff))\n\t\t\tmock._updateGroups = spy(() => Promise.resolve())\n\t\t\tmock._mail.updateCurrentIndexTimestamp = spy(() => Promise.resolve())\n\t\t\tmock._contact.indexFullContactList = spy(() => Promise.resolve())\n\t\t\tmock._contact.getIndexTimestamp = spy(() => Promise.resolve(FULL_INDEXED_TIMESTAMP))\n\t\t\tmock._contact.suggestionFacade.load = spy(() => Promise.resolve())\n\t\t\tmock._loadPersistentGroupData = spy(() => Promise.resolve(persistentGroupData))\n\t\t\tmock._loadNewEntities = spy(async () => {})\n\t\t\tmock._entity.loadRoot = spy(() => Promise.resolve(contactList))\n\t\t})\n\t\tlet user = createTestEntity(UserTypeRef)\n\t\tuser.userGroup = createTestEntity(GroupMembershipTypeRef)\n\t\tuser.userGroup.group = \"user-group-id\"\n\n\t\twhen(keyLoaderFacade.loadSymUserGroupKey(userGroupKeyVersion)).thenResolve(userGroupKey.object)\n\n\t\tawait indexer.init({ user, keyLoaderFacade })\n\t\to(indexer.db.key).deepEquals(dbKey)\n\t\to(indexer._loadGroupDiff.args).deepEquals([user])\n\t\to(indexer._updateGroups.args).deepEquals([user, groupDiff])\n\t\to(indexer._entity.loadRoot.args).deepEquals([ContactListTypeRef, user.userGroup.group])\n\t\to(indexer._contact.indexFullContactList.callCount).equals(0)\n\t\to(indexer._loadPersistentGroupData.args).deepEquals([user])\n\t\to(indexer._loadNewEntities.args).deepEquals([persistentGroupData])\n\t\to(indexer._contact.suggestionFacade.load.callCount).equals(1)\n\t})\n\n\to(\"init existing db out of sync\", async () => {\n\t\tlet userGroupKey = freshVersioned(aes256RandomKey())\n\t\tlet dbKey = aes256RandomKey()\n\t\tlet userEncDbKey = encryptKey(userGroupKey.object, dbKey)\n\t\tconst userGroupKeyVersion = 0\n\t\tlet encDbIv = aesEncrypt(dbKey, fixedIv, random.generateRandomData(IV_BYTE_LENGTH), true)\n\t\tlet transaction = {\n\t\t\tget: async (os, key) => {\n\t\t\t\tif (os == MetaDataOS && key == Metadata.userEncDbKey) return userEncDbKey\n\t\t\t\tif (os == MetaDataOS && key == Metadata.userGroupKeyVersion) {\n\t\t\t\t\treturn userGroupKeyVersion\n\t\t\t\t}\n\t\t\t\tif (os == MetaDataOS && key == Metadata.mailIndexingEnabled) return true\n\t\t\t\tif (os == MetaDataOS && key == Metadata.excludedListIds) return [\"excluded-list-id\"]\n\t\t\t\tif (os == MetaDataOS && key == Metadata.encDbIv) return encDbIv\n\t\t\t\tif (os == MetaDataOS && key == Metadata.lastEventIndexTimeMs) return SERVER_TIME\n\t\t\t\treturn null\n\t\t\t},\n\t\t\twait: () => Promise.resolve(),\n\t\t\t// So that we don't run into \"no group ids' check\n\t\t\tgetAll: () =>\n\t\t\t\tPromise.resolve([\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: \"key\",\n\t\t\t\t\t\tvalue: \"value\",\n\t\t\t\t\t},\n\t\t\t\t]),\n\t\t}\n\t\tlet groupDiff = [\n\t\t\t{\n\t\t\t\tgroupDiff: \"dummy\",\n\t\t\t},\n\t\t]\n\t\tlet persistentGroupData = [\n\t\t\t{\n\t\t\t\tpersistentGroupData: \"dummy\",\n\t\t\t},\n\t\t]\n\t\tconst infoMessageHandler = object<InfoMessageHandler>()\n\t\tconst indexer = mock(new Indexer(restClientMock, infoMessageHandler, browserDataStub, entityRestCache, () => mailIndexer), (mock) => {\n\t\t\tmock.db.initialized = Promise.resolve()\n\t\t\tmock.db.dbFacade = {\n\t\t\t\topen: spy(() => Promise.resolve()),\n\t\t\t\tcreateTransaction: () => Promise.resolve(transaction),\n\t\t\t}\n\t\t\tmock._loadGroupDiff = spy(() => Promise.resolve(groupDiff))\n\t\t\tmock._updateGroups = spy(() => Promise.resolve())\n\t\t\tmock._mail.updateCurrentIndexTimestamp = spy(() => Promise.resolve())\n\t\t\tmock._contact.indexFullContactList = spy(() => Promise.resolve())\n\t\t\tmock._contact.getIndexTimestamp = spy(() => Promise.resolve(FULL_INDEXED_TIMESTAMP))\n\t\t\tmock._loadPersistentGroupData = spy(() => Promise.resolve(persistentGroupData))\n\t\t\tmock._loadNewEntities = spy(() => Promise.reject(new OutOfSyncError(\"is out of sync ;-)\")))\n\t\t\tmock.disableMailIndexing = spy()\n\t\t\tmock._entity.loadRoot = spy(() => Promise.resolve(contactList))\n\t\t})\n\t\tlet user = createTestEntity(UserTypeRef)\n\t\tuser.userGroup = createTestEntity(GroupMembershipTypeRef)\n\t\tuser.userGroup.group = \"user-group-id\"\n\n\t\twhen(keyLoaderFacade.loadSymUserGroupKey(userGroupKeyVersion)).thenResolve(userGroupKey.object)\n\n\t\tawait indexer.init({ user, keyLoaderFacade })\n\t\to(indexer.db.key).deepEquals(dbKey)\n\t\to(indexer._loadGroupDiff.args).deepEquals([user])\n\t\to(indexer._updateGroups.args).deepEquals([user, groupDiff])\n\t\to(indexer._entity.loadRoot.args).deepEquals([ContactListTypeRef, user.userGroup.group])\n\t\to(indexer._contact.indexFullContactList.callCount).equals(0)\n\t\to(indexer._loadPersistentGroupData.args).deepEquals([user])\n\t\to(indexer._loadNewEntities.args).deepEquals([persistentGroupData])\n\t})\n\to(\"_loadGroupDiff\", async function () {\n\t\tlet user = createTestEntity(UserTypeRef)\n\t\tuser.memberships = [createTestEntity(GroupMembershipTypeRef), createTestEntity(GroupMembershipTypeRef), createTestEntity(GroupMembershipTypeRef)]\n\t\tuser.memberships[0].groupType = GroupType.Mail\n\t\tuser.memberships[0].group = \"new-group-id\"\n\t\tuser.memberships[1].groupType = GroupType.Contact\n\t\tuser.memberships[1].group = \"constant-group-id\"\n\t\tlet deletedGroupId = \"deleted-group-id\"\n\t\tlet groupData = {\n\t\t\tgroupType: GroupType.MailingList,\n\t\t}\n\t\tlet transaction = {\n\t\t\tgetAll: (os) => {\n\t\t\t\to(os).equals(GroupDataOS)\n\t\t\t\treturn Promise.resolve([\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: deletedGroupId,\n\t\t\t\t\t\tvalue: groupData,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: user.memberships[1].group,\n\t\t\t\t\t\tvalue: {\n\t\t\t\t\t\t\tgroupType: GroupType.Mail,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t])\n\t\t\t},\n\t\t}\n\t\tconst infoMessageHandler = object<InfoMessageHandler>()\n\t\tlet indexer = new Indexer(restClientMock, infoMessageHandler, browserDataStub, entityRestCache, () => mailIndexer)\n\t\tindexer.db.dbFacade = {\n\t\t\tcreateTransaction: () => Promise.resolve(transaction),\n\t\t} as any\n\n\t\tconst result = await indexer._loadGroupDiff(user)\n\t\to(result).deepEquals({\n\t\t\tdeletedGroups: [\n\t\t\t\t{\n\t\t\t\t\tid: \"deleted-group-id\",\n\t\t\t\t\ttype: GroupType.MailingList,\n\t\t\t\t},\n\t\t\t],\n\t\t\tnewGroups: [\n\t\t\t\t{\n\t\t\t\t\tid: \"new-group-id\",\n\t\t\t\t\ttype: GroupType.Mail,\n\t\t\t\t},\n\t\t\t],\n\t\t})\n\t})\n\n\to(\"_updateGroups disable MailIndexing in case of a deleted mail group\", async function () {\n\t\tconst infoMessageHandler = object<InfoMessageHandler>()\n\t\tlet indexer = mock(new Indexer(restClientMock, infoMessageHandler, browserDataStub, entityRestCache, () => mailIndexer), (mock) => {\n\t\t\tmock.disableMailIndexing = spy(() => Promise.resolve())\n\t\t})\n\t\tlet user = createTestEntity(UserTypeRef)\n\t\tlet groupDiff = {\n\t\t\tdeletedGroups: [\n\t\t\t\t{\n\t\t\t\t\tid: \"groupId\",\n\t\t\t\t\ttype: GroupType.Mail,\n\t\t\t\t},\n\t\t\t],\n\t\t\tnewGroups: [],\n\t\t}\n\t\tawait o(() => indexer._updateGroups(user, groupDiff)).asyncThrows(MembershipRemovedError)\n\t})\n\n\to(\"_updateGroups disable MailIndexing in case of a deleted contact group\", async function () {\n\t\tconst infoMessageHandler = object<InfoMessageHandler>()\n\t\tlet indexer = mock(new Indexer(restClientMock, infoMessageHandler, browserDataStub, entityRestCache, () => mailIndexer), (mock) => {\n\t\t\tmock.disableMailIndexing = spy(() => Promise.resolve())\n\t\t})\n\t\tlet user = createTestEntity(UserTypeRef)\n\t\tlet groupDiff = {\n\t\t\tdeletedGroups: [\n\t\t\t\t{\n\t\t\t\t\tid: \"groupId\",\n\t\t\t\t\ttype: GroupType.Contact,\n\t\t\t\t},\n\t\t\t],\n\t\t\tnewGroups: [],\n\t\t}\n\t\tconst e = await assertThrows(MembershipRemovedError, () => indexer._updateGroups(user, groupDiff))\n\t})\n\n\to(\"_updateGroups don't disable MailIndexing in case no mail or contact group has been deleted\", async function () {\n\t\tconst infoMessageHandler = object<InfoMessageHandler>()\n\t\tlet indexer = mock(new Indexer(restClientMock, infoMessageHandler, browserDataStub, entityRestCache, () => mailIndexer), (mock) => {\n\t\t\tmock.disableMailIndexing = spy()\n\t\t})\n\t\tlet user = createTestEntity(UserTypeRef)\n\t\tlet groupDiff = {\n\t\t\tdeletedGroups: [\n\t\t\t\t{\n\t\t\t\t\tid: \"groupId\",\n\t\t\t\t\ttype: GroupType.MailingList,\n\t\t\t\t},\n\t\t\t],\n\t\t\tnewGroups: [],\n\t\t}\n\n\t\tawait indexer._updateGroups(user, groupDiff)\n\t})\n\n\to(\"_updateGroups do not index new mail groups\", async function () {\n\t\tlet transaction = \"transaction\"\n\t\tlet groupBatches = \"groupBatches\"\n\t\tconst infoMessageHandler = object<InfoMessageHandler>()\n\t\tlet indexer = mock(new Indexer(restClientMock, infoMessageHandler, browserDataStub, entityRestCache, () => mailIndexer), (mock) => {\n\t\t\tmock._loadGroupData = spy(() => Promise.resolve(groupBatches))\n\t\t\tmock._initGroupData = spy(() => Promise.resolve())\n\t\t\tmock.db.dbFacade = {\n\t\t\t\tcreateTransaction: () => Promise.resolve(transaction),\n\t\t\t} as any\n\t\t\tmock._mail.indexMailboxes = spy()\n\t\t\tmock._mail.currentIndexTimestamp = new Date().getTime()\n\t\t})\n\t\tlet user = createTestEntity(UserTypeRef)\n\t\tlet groupDiff = {\n\t\t\tdeletedGroups: [],\n\t\t\tnewGroups: [\n\t\t\t\t{\n\t\t\t\t\tid: \"groupId\",\n\t\t\t\t\ttype: GroupType.Mail,\n\t\t\t\t},\n\t\t\t],\n\t\t}\n\n\t\tawait indexer._updateGroups(user, groupDiff)\n\t\to(indexer._loadGroupData.callCount).equals(1)\n\t\to(indexer._loadGroupData.args[0]).equals(user)\n\t\to(indexer._initGroupData.callCount).equals(1)\n\t\to(indexer._initGroupData.args).deepEquals([groupBatches, transaction])\n\t\to(indexer._mail.indexMailboxes.callCount).equals(0)\n\t})\n\to(\"_updateGroups only init group data for non mail groups (do not index)\", async function () {\n\t\tlet transaction = \"transaction\"\n\t\tlet groupBatches = \"groupBatches\"\n\t\tconst infoMessageHandler = object<InfoMessageHandler>()\n\t\tlet indexer = mock(new Indexer(restClientMock, infoMessageHandler, browserDataStub, entityRestCache, () => mailIndexer), (mock) => {\n\t\t\tmock._loadGroupData = spy(() => Promise.resolve(groupBatches))\n\t\t\tmock._initGroupData = spy(() => Promise.resolve())\n\t\t\tmock.db.dbFacade = {\n\t\t\t\tcreateTransaction: () => Promise.resolve(transaction),\n\t\t\t} as any\n\t\t\tmock._mail.indexMailboxes = spy()\n\t\t})\n\t\tlet user = createTestEntity(UserTypeRef)\n\t\tlet groupDiff = {\n\t\t\tdeletedGroups: [],\n\t\t\tnewGroups: [\n\t\t\t\t{\n\t\t\t\t\tid: \"groupId\",\n\t\t\t\t\ttype: GroupType.Contact,\n\t\t\t\t},\n\t\t\t],\n\t\t}\n\n\t\tawait indexer._updateGroups(user, groupDiff)\n\t\to(indexer._loadGroupData.callCount).equals(1)\n\t\to(indexer._loadGroupData.args[0]).equals(user)\n\t\to(indexer._initGroupData.callCount).equals(1)\n\t\to(indexer._initGroupData.args).deepEquals([groupBatches, transaction])\n\t\to(indexer._mail.indexMailboxes.callCount).equals(0)\n\t})\n\to(\"_loadGroupData\", async function () {\n\t\tlet user = createTestEntity(UserTypeRef)\n\t\tuser.memberships = [\n\t\t\tcreateTestEntity(GroupMembershipTypeRef),\n\t\t\tcreateTestEntity(GroupMembershipTypeRef),\n\t\t\tcreateTestEntity(GroupMembershipTypeRef),\n\t\t\tcreateTestEntity(GroupMembershipTypeRef),\n\t\t]\n\t\tuser.memberships[0].groupType = GroupType.Mail\n\t\tuser.memberships[0].group = \"group-mail\"\n\t\tuser.memberships[1].groupType = GroupType.MailingList\n\t\tuser.memberships[1].group = \"group-team\"\n\t\tuser.memberships[2].groupType = GroupType.Contact\n\t\tuser.memberships[2].group = \"group-contact\"\n\t\tuser.memberships[3].groupType = GroupType.Customer\n\t\tuser.memberships[3].group = \"group-customer\"\n\t\tconst infoMessageHandler = object<InfoMessageHandler>()\n\t\tlet indexer = mock(new Indexer(restClientMock, infoMessageHandler, browserDataStub, entityRestCache, () => mailIndexer), (mock) => {\n\t\t\tmock._entity = {\n\t\t\t\tloadRange: (type, listId, startId, count, reverse) => {\n\t\t\t\t\to(type).equals(EntityEventBatchTypeRef)\n\t\t\t\t\to(startId).equals(GENERATED_MAX_ID)\n\t\t\t\t\to(count).equals(1)\n\t\t\t\t\to(reverse).equals(true)\n\t\t\t\t\treturn Promise.resolve([\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t_id: [null, \"event-batch-id\"],\n\t\t\t\t\t\t},\n\t\t\t\t\t])\n\t\t\t\t},\n\t\t\t}\n\t\t})\n\n\t\tconst result = await indexer._loadGroupData(user)\n\t\to(result).deepEquals([\n\t\t\t{\n\t\t\t\tgroupId: \"group-mail\",\n\t\t\t\tgroupData: {\n\t\t\t\t\tlastBatchIds: [\"event-batch-id\"],\n\t\t\t\t\tindexTimestamp: NOTHING_INDEXED_TIMESTAMP,\n\t\t\t\t\tgroupType: GroupType.Mail,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tgroupId: \"group-contact\",\n\t\t\t\tgroupData: {\n\t\t\t\t\tlastBatchIds: [\"event-batch-id\"],\n\t\t\t\t\tindexTimestamp: NOTHING_INDEXED_TIMESTAMP,\n\t\t\t\t\tgroupType: GroupType.Contact,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tgroupId: \"group-customer\",\n\t\t\t\tgroupData: {\n\t\t\t\t\tlastBatchIds: [\"event-batch-id\"],\n\t\t\t\t\tindexTimestamp: NOTHING_INDEXED_TIMESTAMP,\n\t\t\t\t\tgroupType: GroupType.Customer,\n\t\t\t\t},\n\t\t\t},\n\t\t])\n\t})\n\n\to(\"_loadGroupData not authorized\", async function () {\n\t\tlet user = createTestEntity(UserTypeRef)\n\t\tuser.memberships = [createTestEntity(GroupMembershipTypeRef), createTestEntity(GroupMembershipTypeRef)]\n\t\tuser.memberships[0].groupType = GroupType.Mail\n\t\tuser.memberships[0].group = \"group-mail\"\n\t\tuser.memberships[1].groupType = GroupType.MailingList\n\t\tuser.memberships[1].group = \"group-team\"\n\t\tconst infoMessageHandler = object<InfoMessageHandler>()\n\t\tlet indexer = mock(new Indexer(restClientMock, infoMessageHandler, browserDataStub, entityRestCache, () => mailIndexer), (mock) => {\n\t\t\tlet count = 0\n\t\t\tmock._entity = {\n\t\t\t\tloadRange: (type, listId, startId, count, reverse) => {\n\t\t\t\t\tif (count == 0) {\n\t\t\t\t\t\tconsole.log(\"EEE\")\n\t\t\t\t\t\tcount++\n\t\t\t\t\t\treturn Promise.reject(new NotAuthorizedError(\"test\"))\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn Promise.resolve([\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t_id: [null, \"event-batch-id\"],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t])\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t}\n\t\t})\n\n\t\tconst result = await indexer._loadGroupData(user)\n\t\to(result).deepEquals([\n\t\t\t{\n\t\t\t\tgroupId: \"group-mail\",\n\t\t\t\tgroupData: {\n\t\t\t\t\tlastBatchIds: [\"event-batch-id\"],\n\t\t\t\t\tindexTimestamp: NOTHING_INDEXED_TIMESTAMP,\n\t\t\t\t\tgroupType: GroupType.Mail,\n\t\t\t\t},\n\t\t\t},\n\t\t])\n\t})\n\to(\"_initGroupData\", async function () {\n\t\tlet groupBatches = [\n\t\t\t{\n\t\t\t\tgroupId: \"groupId\",\n\t\t\t\tgroupData: {\n\t\t\t\t\tgroupType: GroupType.Mail,\n\t\t\t\t\tlastBatchIds: [],\n\t\t\t\t\tindexTimestamp: 1,\n\t\t\t\t},\n\t\t\t},\n\t\t]\n\t\tlet transaction: DbTransaction = downcast({\n\t\t\tput: (os, key, value) => {\n\t\t\t\to(os).equals(GroupDataOS)\n\t\t\t\to(key).equals(groupBatches[0].groupId)\n\t\t\t\to(value).deepEquals(groupBatches[0].groupData)\n\t\t\t\tstored = true\n\t\t\t\treturn Promise.resolve()\n\t\t\t},\n\t\t\twait: () => Promise.resolve(),\n\t\t})\n\t\tconst infoMessageHandler = object<InfoMessageHandler>()\n\t\tlet indexer = new Indexer(restClientMock, infoMessageHandler, browserDataStub, entityRestCache, () => mailIndexer)\n\t\tlet stored = false\n\n\t\tawait indexer._initGroupData(groupBatches, transaction)\n\t\to(stored).equals(true)\n\t})\n\n\to(\"_loadNewEntities\", async function () {\n\t\tconst newestBatchId = \"L0JcCmx----0\"\n\t\tconst oldestBatchId = \"L0JcCmw----0\"\n\t\tconst groupId = \"group-mail\"\n\t\tlet groupIdToEventBatches = [\n\t\t\t{\n\t\t\t\tgroupId,\n\t\t\t\teventBatchIds: [newestBatchId, oldestBatchId],\n\t\t\t},\n\t\t]\n\t\tlet batches = [createTestEntity(EntityEventBatchTypeRef), createTestEntity(EntityEventBatchTypeRef)]\n\t\tbatches[0]._id = [\"group-mail\", \"L0JcCmw----1\"] // bigger than last\n\n\t\tbatches[0].events = [createTestEntity(EntityUpdateTypeRef), createTestEntity(EntityUpdateTypeRef)]\n\t\tbatches[1]._id = [\"group-mail\", oldestBatchId]\n\t\tbatches[1].events = [createTestEntity(EntityUpdateTypeRef), createTestEntity(EntityUpdateTypeRef)]\n\t\tlet transaction = {\n\t\t\tget: async (os, key) => {\n\t\t\t\tif (os == MetaDataOS && key == Metadata.lastEventIndexTimeMs) return SERVER_TIME\n\t\t\t\treturn null\n\t\t\t},\n\t\t\tput: spy(async (os, key, value) => {}),\n\t\t}\n\t\tconst infoMessageHandler = object<InfoMessageHandler>()\n\t\tlet indexer = mock(new Indexer(restClientMock, infoMessageHandler, browserDataStub, entityRestCache, () => mailIndexer), (mock) => {\n\t\t\tmock.db.initialized = Promise.resolve()\n\t\t\tmock.db.dbFacade = {\n\t\t\t\tcreateTransaction: () => Promise.resolve(transaction),\n\t\t\t}\n\t\t})\n\t\tindexer._entity = {\n\t\t\tloadAll: (type, groupIdA, startId) => {\n\t\t\t\to(type).deepEquals(EntityEventBatchTypeRef)\n\t\t\t\to(groupIdA).equals(groupId)\n\t\t\t\tlet expectedStartId = timestampToGeneratedId(generatedIdToTimestamp(oldestBatchId) - 1)\n\t\t\t\to(startId).equals(expectedStartId)\n\t\t\t\treturn Promise.resolve(batches)\n\t\t\t},\n\t\t} as any\n\t\tdowncast(indexer)._processEntityEvents = spy(() => Promise.resolve())\n\t\tconst queue = indexer._core.queue\n\t\tdowncast(queue).addBatches = spy()\n\t\tawait indexer._loadNewEntities(groupIdToEventBatches)\n\t\t// two asserts, otherwise Node doesn't print deeply nested objects\n\t\t// @ts-ignore\n\t\to(queue.addBatches.invocations.length).equals(1)\n\t\t// @ts-ignore\n\t\to(queue.addBatches.invocations[0]).deepEquals([\n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\tgroupId,\n\t\t\t\t\tbatchId: getElementId(batches[0]),\n\t\t\t\t\tevents: batches[0].events,\n\t\t\t\t},\n\t\t\t],\n\t\t])\n\t\to(transaction.put.args).deepEquals([MetaDataOS, Metadata.lastEventIndexTimeMs, SERVER_TIME])\n\t})\n\n\to(\"load events and then receive latest again\", async function () {\n\t\tconst newestBatchId = \"L0JcCmx----0\"\n\t\tconst oldestBatchId = \"L0JcCmw----0\"\n\t\tconst groupId = \"group-mail\"\n\t\tlet groupIdToEventBatches = [\n\t\t\t{\n\t\t\t\tgroupId,\n\t\t\t\teventBatchIds: [newestBatchId, oldestBatchId],\n\t\t\t},\n\t\t]\n\t\tlet batches = [createTestEntity(EntityEventBatchTypeRef), createTestEntity(EntityEventBatchTypeRef)]\n\t\tconst loadedNewBatchId = \"L0JcCmw----1\"\n\t\tbatches[0]._id = [\"group-mail\", loadedNewBatchId] // newer than oldest but older than newest\n\n\t\tbatches[0].events = [createTestEntity(EntityUpdateTypeRef), createTestEntity(EntityUpdateTypeRef)]\n\t\tbatches[1]._id = [\"group-mail\", oldestBatchId]\n\t\tbatches[1].events = [createTestEntity(EntityUpdateTypeRef), createTestEntity(EntityUpdateTypeRef)]\n\t\tlet transaction = {\n\t\t\tget: async (os, key) => {\n\t\t\t\tif (os == MetaDataOS && key == Metadata.lastEventIndexTimeMs) return SERVER_TIME\n\t\t\t\treturn null\n\t\t\t},\n\t\t\tput: spy(async (os, key, value) => {}),\n\t\t}\n\t\tconst infoMessageHandler = object<InfoMessageHandler>()\n\t\tlet indexer = mock(new Indexer(restClientMock, infoMessageHandler, browserDataStub, entityRestCache, () => mailIndexer), (mock) => {\n\t\t\tmock.db.initialized = Promise.resolve()\n\t\t\tmock.db.dbFacade = {\n\t\t\t\tcreateTransaction: () => Promise.resolve(transaction),\n\t\t\t}\n\t\t})\n\t\tindexer._entity = {\n\t\t\tloadAll: (type, groupIdA, startId) => Promise.resolve(batches),\n\t\t} as any\n\t\tdowncast(indexer)._processEntityEvents = spy(() => Promise.resolve())\n\t\tconst queue = indexer._core.queue\n\t\tdowncast(queue).addBatches = spy()\n\t\tawait indexer._loadNewEntities(groupIdToEventBatches)\n\t\t// Check that we actually added loaded batch\n\t\t// two asserts, otherwise Node doesn't print deeply nested objects\n\t\to(queue.addBatches.invocations.length).equals(1)\n\t\to(queue.addBatches.invocations[0]).deepEquals([\n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\tgroupId,\n\t\t\t\t\tbatchId: getElementId(batches[0]),\n\t\t\t\t\tevents: batches[0].events,\n\t\t\t\t},\n\t\t\t],\n\t\t])\n\t\to(transaction.put.args).deepEquals([MetaDataOS, Metadata.lastEventIndexTimeMs, SERVER_TIME])\n\t\t// say we received the same batch via ws\n\t\tconst realtimeEvents = [createTestEntity(EntityUpdateTypeRef)]\n\t\tindexer.addBatchesToQueue([\n\t\t\t{\n\t\t\t\tgroupId,\n\t\t\t\tevents: realtimeEvents,\n\t\t\t\tbatchId: loadedNewBatchId,\n\t\t\t},\n\t\t])\n\t\t// Check that we filtered out batch which we already loaded and added\n\t\to(queue.addBatches.invocations.length).equals(1)\n\t})\n\to(\"load events and then receive older again\", async function () {\n\t\tconst newestBatchId = \"L0JcCmx----0\"\n\t\tconst oldestBatchId = \"L0JcCmw----0\"\n\t\tconst groupId = \"group-mail\"\n\t\tlet groupIdToEventBatches = [\n\t\t\t{\n\t\t\t\tgroupId,\n\t\t\t\teventBatchIds: [newestBatchId, oldestBatchId],\n\t\t\t},\n\t\t]\n\t\tlet batches = [createTestEntity(EntityEventBatchTypeRef), createTestEntity(EntityEventBatchTypeRef)]\n\t\tconst loadedNewBatchId = \"L0JcCmy-----\" // newer than newest\n\n\t\tbatches[0]._id = [\"group-mail\", loadedNewBatchId]\n\t\tbatches[0].events = [createTestEntity(EntityUpdateTypeRef), createTestEntity(EntityUpdateTypeRef)]\n\t\tbatches[1]._id = [\"group-mail\", oldestBatchId]\n\t\tbatches[1].events = [createTestEntity(EntityUpdateTypeRef), createTestEntity(EntityUpdateTypeRef)]\n\t\tlet transaction = {\n\t\t\tget: async (os, key) => {\n\t\t\t\tif (os == MetaDataOS && key == Metadata.lastEventIndexTimeMs) return SERVER_TIME\n\t\t\t\treturn null\n\t\t\t},\n\t\t\tput: spy(async (os, key, value) => {}),\n\t\t}\n\t\tconst infoMessageHandler = object<InfoMessageHandler>()\n\t\tlet indexer = mock(new Indexer(restClientMock, infoMessageHandler, browserDataStub, entityRestCache, () => mailIndexer), (mock) => {\n\t\t\tmock.db.initialized = Promise.resolve()\n\t\t\tmock.db.dbFacade = {\n\t\t\t\tcreateTransaction: () => Promise.resolve(transaction),\n\t\t\t}\n\t\t})\n\t\tindexer._entity = {\n\t\t\tloadAll: (type, groupIdA, startId) => Promise.resolve(batches),\n\t\t} as any\n\t\tdowncast(indexer)._processEntityEvents = spy(() => Promise.resolve())\n\t\tconst queue = indexer._core.queue\n\t\tdowncast(queue).addBatches = spy()\n\t\tawait indexer._loadNewEntities(groupIdToEventBatches)\n\t\t// Check that we actually added loaded batch\n\t\t// two asserts, otherwise Node doesn't print deeply nested objects\n\t\t// @ts-ignore\n\t\to(queue.addBatches.invocations.length).equals(1)\n\t\t// @ts-ignore\n\t\to(queue.addBatches.invocations[0]).deepEquals([\n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\tgroupId,\n\t\t\t\t\tbatchId: getElementId(batches[0]),\n\t\t\t\t\tevents: batches[0].events,\n\t\t\t\t},\n\t\t\t],\n\t\t])\n\t\to(transaction.put.args).deepEquals([MetaDataOS, Metadata.lastEventIndexTimeMs, SERVER_TIME])\n\t\t// say we received the older batch via ws\n\t\tindexer.addBatchesToQueue([\n\t\t\t{\n\t\t\t\tgroupId,\n\t\t\t\tevents: [],\n\t\t\t\tbatchId: newestBatchId,\n\t\t\t},\n\t\t])\n\t\t// Check that we filtered out batch which we already loaded and added\n\t\t// @ts-ignore\n\t\to(queue.addBatches.invocations.length).equals(1)\n\t})\n\n\to(\"receive realtime events before init finishes\", async function () {\n\t\tconst oldestBatchId = \"L0JcCmw----0\"\n\t\tconst loadedNewBatchId = \"L0JcCmw----1\" // newer than oldest but older than realtime\n\n\t\tconst realtimeBatchId = \"L0JcCmx----0\"\n\t\tconst groupId = \"group-mail\"\n\t\tlet groupIdToEventBatches = [\n\t\t\t{\n\t\t\t\tgroupId,\n\t\t\t\teventBatchIds: [oldestBatchId],\n\t\t\t},\n\t\t]\n\t\tlet loadedBatches = [\n\t\t\tcreateTestEntity(EntityEventBatchTypeRef, {\n\t\t\t\t_id: [\"group-mail\", loadedNewBatchId],\n\t\t\t\tevents: [createTestEntity(EntityUpdateTypeRef), createTestEntity(EntityUpdateTypeRef)],\n\t\t\t}),\n\t\t\tcreateTestEntity(EntityEventBatchTypeRef, {\n\t\t\t\t_id: [\"group-mail\", oldestBatchId],\n\t\t\t}),\n\t\t]\n\t\tlet transaction = {\n\t\t\tget: async (os, key) => {\n\t\t\t\tif (os == MetaDataOS && key == Metadata.lastEventIndexTimeMs) return SERVER_TIME\n\t\t\t\treturn null\n\t\t\t},\n\t\t\tput: spy(async (os, key, value) => {}),\n\t\t}\n\t\tconst infoMessageHandler = object<InfoMessageHandler>()\n\t\tlet indexer = mock(new Indexer(restClientMock, infoMessageHandler, browserDataStub, entityRestCache, () => mailIndexer), (mock) => {\n\t\t\tmock.db.initialized = Promise.resolve()\n\t\t\tmock.db.dbFacade = {\n\t\t\t\tcreateTransaction: () => Promise.resolve(transaction),\n\t\t\t}\n\t\t})\n\t\tconst loadCompleted = defer()\n\t\tindexer._entity = {\n\t\t\tloadAll: (type, groupIdA, startId) => loadCompleted.promise,\n\t\t} as any\n\t\tdowncast(indexer)._processEntityEvents = spy(() => Promise.resolve())\n\t\tconst queue = indexer._core.queue\n\t\tdowncast(queue).addBatches = spy()\n\n\t\tconst loadPromise = indexer._loadNewEntities(groupIdToEventBatches)\n\n\t\tconst realtimeUpdates = [\n\t\t\tcreateTestEntity(EntityUpdateTypeRef, {\n\t\t\t\tinstanceId: \"realtime\",\n\t\t\t}),\n\t\t]\n\t\tindexer.addBatchesToQueue([\n\t\t\t{\n\t\t\t\tgroupId,\n\t\t\t\tevents: realtimeUpdates,\n\t\t\t\tbatchId: realtimeBatchId,\n\t\t\t},\n\t\t])\n\t\tloadCompleted.resolve(loadedBatches)\n\t\tawait loadPromise\n\t\t// Check that we filtered out batch which we already loaded and added\n\t\to(queue.addBatches.invocations.length).equals(2)\n\t\to(queue.addBatches.invocations[0]).deepEquals([\n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\tgroupId,\n\t\t\t\t\tbatchId: getElementId(loadedBatches[0]),\n\t\t\t\t\tevents: loadedBatches[0].events,\n\t\t\t\t},\n\t\t\t],\n\t\t])\n\t\to(queue.addBatches.invocations[1]).deepEquals([\n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\tgroupId,\n\t\t\t\t\tbatchId: realtimeBatchId,\n\t\t\t\t\tevents: realtimeUpdates,\n\t\t\t\t},\n\t\t\t],\n\t\t])\n\t\to(transaction.put.args).deepEquals([MetaDataOS, Metadata.lastEventIndexTimeMs, SERVER_TIME])\n\t})\n\n\to(\"_loadNewEntities batch already processed\", async function () {\n\t\tconst newestBatchId = \"L0JcCmx----0\"\n\t\tconst oldestBatchId = \"L0JcCmw----0\"\n\t\tlet groupIdToEventBatches = [\n\t\t\t{\n\t\t\t\tgroupId: \"group-mail\",\n\t\t\t\teventBatchIds: [newestBatchId, oldestBatchId],\n\t\t\t},\n\t\t]\n\t\tlet batches = [createTestEntity(EntityEventBatchTypeRef)]\n\t\tbatches[0]._id = [\"group-mail\", oldestBatchId]\n\t\tbatches[0].events = [createTestEntity(EntityUpdateTypeRef), createTestEntity(EntityUpdateTypeRef)]\n\t\tlet transaction = {\n\t\t\tget: async (os, key) => {\n\t\t\t\tif (os == MetaDataOS && key == Metadata.lastEventIndexTimeMs) return SERVER_TIME\n\t\t\t\treturn null\n\t\t\t},\n\t\t\tput: spy(async (os, key, value) => {}),\n\t\t}\n\t\tconst infoMessageHandler = object<InfoMessageHandler>()\n\t\tlet indexer = mock(new Indexer(restClientMock, infoMessageHandler, browserDataStub, entityRestCache, () => mailIndexer), (mock) => {\n\t\t\tmock._entity = {\n\t\t\t\tloadAll: (type, groupId, startId) => {\n\t\t\t\t\to(type).deepEquals(EntityEventBatchTypeRef)\n\t\t\t\t\to(groupId).equals(\"group-mail\")\n\t\t\t\t\tlet expectedStartId = timestampToGeneratedId(generatedIdToTimestamp(oldestBatchId) - 1)\n\t\t\t\t\to(startId).equals(expectedStartId)\n\t\t\t\t\treturn Promise.resolve(batches)\n\t\t\t\t},\n\t\t\t}\n\t\t\tmock._processEntityEvents = spy()\n\t\t\tmock.db.dbFacade = {\n\t\t\t\tcreateTransaction: () => Promise.resolve(transaction),\n\t\t\t}\n\t\t\tmock.db.initialized = Promise.resolve()\n\t\t})\n\t\tawait indexer._loadNewEntities(groupIdToEventBatches)\n\t\t// @ts-ignore\n\t\to(indexer._processEntityEvents.callCount).equals(0)\n\t\to(transaction.put.args).deepEquals([MetaDataOS, Metadata.lastEventIndexTimeMs, SERVER_TIME])\n\t})\n\n\to(\"_loadNewEntities out of sync\", async function () {\n\t\tconst newestBatchId = \"L0JcCmx----0\"\n\t\tconst oldestBatchId = \"L0JcCmw----0\"\n\t\tlet groupIdToEventBatches = [\n\t\t\t{\n\t\t\t\tgroupId: \"group-mail\",\n\t\t\t\teventBatchIds: [newestBatchId, oldestBatchId],\n\t\t\t},\n\t\t]\n\t\tlet batches = [createTestEntity(EntityEventBatchTypeRef)]\n\t\tbatches[0]._id = [\"group-mail\", \"L0JcCmw----1\"] // bigger than last\n\n\t\tbatches[0].events = [createTestEntity(EntityUpdateTypeRef), createTestEntity(EntityUpdateTypeRef)]\n\t\tlet transaction = {\n\t\t\tget: async (os, key) => {\n\t\t\t\treturn null\n\t\t\t},\n\t\t\tput: spy(async (os, key, value) => {}),\n\t\t}\n\t\tconst infoMessageHandler = object<InfoMessageHandler>()\n\t\tlet indexer = mock(new Indexer(restClientMock, infoMessageHandler, browserDataStub, entityRestCache, () => mailIndexer), (mock) => {\n\t\t\tmock._entity = {\n\t\t\t\tloadAll: (type, groupId, startId) => {\n\t\t\t\t\to(type).deepEquals(EntityEventBatchTypeRef)\n\t\t\t\t\to(groupId).equals(\"group-mail\")\n\t\t\t\t\tlet expectedStartId = timestampToGeneratedId(generatedIdToTimestamp(oldestBatchId) - 1)\n\t\t\t\t\to(startId).equals(expectedStartId)\n\t\t\t\t\treturn Promise.resolve(batches)\n\t\t\t\t},\n\t\t\t}\n\t\t\tmock._processEntityEvents = spy(() => Promise.resolve())\n\t\t\tmock.db.dbFacade = {\n\t\t\t\tcreateTransaction: () => Promise.resolve(transaction),\n\t\t\t}\n\t\t\tmock.db.initialized = Promise.resolve()\n\t\t})\n\t\tawait assertThrows(OutOfSyncError, () => indexer._loadNewEntities(groupIdToEventBatches))\n\t\t// @ts-ignore\n\t\to(indexer._processEntityEvents.callCount).equals(0)\n\t\to(transaction.put.callCount).equals(0)\n\t})\n\to(\"_loadNewEntities out of date\", async function () {\n\t\tconst newestBatchId = \"L0JcCmx----0\"\n\t\tconst oldestBatchId = \"L0JcCmw----0\"\n\t\tlet groupIdToEventBatches = [\n\t\t\t{\n\t\t\t\tgroupId: \"group-mail\",\n\t\t\t\teventBatchIds: [newestBatchId, oldestBatchId],\n\t\t\t},\n\t\t]\n\t\tlet batches = [createTestEntity(EntityEventBatchTypeRef)]\n\t\tbatches[0]._id = [\"group-mail\", \"L0JcCmw----1\"] // bigger than last\n\n\t\tbatches[0].events = [createTestEntity(EntityUpdateTypeRef), createTestEntity(EntityUpdateTypeRef)]\n\t\tlet transaction = {\n\t\t\tget: async (os, key) => {\n\t\t\t\tif (os === MetaDataOS && key === Metadata.lastEventIndexTimeMs) return OUT_OF_DATE_SERVER_TIME\n\t\t\t\treturn null\n\t\t\t},\n\t\t\tput: spy(async () => {}),\n\t\t}\n\t\tconst infoMessageHandler = object<InfoMessageHandler>()\n\t\tlet indexer = mock(new Indexer(restClientMock, infoMessageHandler, browserDataStub, entityRestCache, () => mailIndexer), (mock) => {\n\t\t\tmock._processEntityEvents = spy(() => Promise.resolve())\n\t\t\tmock.db.dbFacade = {\n\t\t\t\tcreateTransaction: () => Promise.resolve(transaction),\n\t\t\t}\n\t\t\tmock.db.initialized = Promise.resolve()\n\t\t})\n\t\tawait assertThrows(OutOfSyncError, () => indexer._loadNewEntities(groupIdToEventBatches))\n\t\to(indexer._processEntityEvents.callCount).equals(0)\n\t\to(transaction.put.callCount).equals(0)\n\t})\n\n\to(\"_loadPersistentGroupData\", async function () {\n\t\tlet groupData = {\n\t\t\tlastBatchIds: [\"last-batch-id\"],\n\t\t}\n\t\tlet transaction = {\n\t\t\tget: (os, groupId) => {\n\t\t\t\to(os).equals(GroupDataOS)\n\t\t\t\treturn Promise.resolve(groupData)\n\t\t\t},\n\t\t}\n\t\tlet user = createTestEntity(UserTypeRef)\n\t\tuser.memberships = [\n\t\t\tcreateTestEntity(GroupMembershipTypeRef),\n\t\t\tcreateTestEntity(GroupMembershipTypeRef),\n\t\t\tcreateTestEntity(GroupMembershipTypeRef),\n\t\t\tcreateTestEntity(GroupMembershipTypeRef),\n\t\t]\n\t\tuser.memberships[0].groupType = GroupType.Mail\n\t\tuser.memberships[0].group = \"group-mail\"\n\t\tuser.memberships[1].groupType = GroupType.MailingList\n\t\tuser.memberships[1].group = \"group-team\"\n\t\tuser.memberships[2].groupType = GroupType.Contact\n\t\tuser.memberships[2].group = \"group-contact\"\n\t\tuser.memberships[3].groupType = GroupType.Customer\n\t\tuser.memberships[3].group = \"group-customer\"\n\t\tconst infoMessageHandler = object<InfoMessageHandler>()\n\t\tlet indexer = new Indexer(restClientMock, infoMessageHandler, browserDataStub, entityRestCache, () => mailIndexer)\n\t\tindexer.db.dbFacade = {\n\t\t\tcreateTransaction: () => Promise.resolve(transaction),\n\t\t} as any\n\n\t\tconst groupIdToEventBatches = await indexer._loadPersistentGroupData(user)\n\t\to(groupIdToEventBatches).deepEquals([\n\t\t\t{\n\t\t\t\tgroupId: \"group-mail\",\n\t\t\t\teventBatchIds: [\"last-batch-id\"],\n\t\t\t},\n\t\t\t{\n\t\t\t\tgroupId: \"group-contact\",\n\t\t\t\teventBatchIds: [\"last-batch-id\"],\n\t\t\t},\n\t\t\t{\n\t\t\t\tgroupId: \"group-customer\",\n\t\t\t\teventBatchIds: [\"last-batch-id\"],\n\t\t\t},\n\t\t])\n\t})\n\n\to(\"_processEntityEvents_1\", async function () {\n\t\tconst groupId = \"group-id\"\n\t\tconst batchId = \"batch-id\"\n\t\tlet user = createTestEntity(UserTypeRef)\n\t\tuser.memberships = [createTestEntity(GroupMembershipTypeRef)]\n\t\tuser.memberships[0].groupType = GroupType.Mail\n\t\tuser.memberships[0].group = groupId\n\t\tconst infoMessageHandler = object<InfoMessageHandler>()\n\t\tconst indexer = mock(new Indexer(restClientMock, infoMessageHandler, browserDataStub, entityRestCache, () => mailIndexer), (indexerMock) => {\n\t\t\tindexerMock.db.initialized = Promise.resolve()\n\t\t\tindexerMock._mail = {\n\t\t\t\tprocessEntityEvents: spy(() => Promise.resolve()),\n\t\t\t}\n\t\t\tindexerMock._contact = {\n\t\t\t\tprocessEntityEvents: spy(() => Promise.resolve()),\n\t\t\t}\n\t\t\tindexerMock._processUserEntityEvents = spy(() => Promise.resolve())\n\t\t\tindexerMock._initParams = {\n\t\t\t\tuser: createTestEntity(UserTypeRef),\n\t\t\t}\n\t\t\tindexerMock._core.writeIndexUpdateWithBatchId = spy(() => Promise.resolve())\n\t\t\tindexerMock._initParams = {\n\t\t\t\tuser,\n\t\t\t}\n\t\t})\n\n\t\tfunction newUpdate<T>(typeRef: TypeRef<T>) {\n\t\t\tlet u = createTestEntity(EntityUpdateTypeRef)\n\t\t\tu.application = typeRef.app\n\t\t\tu.type = typeRef.type\n\t\t\treturn u\n\t\t}\n\n\t\tlet events = [newUpdate(MailTypeRef), newUpdate(ContactTypeRef), newUpdate(UserTypeRef)]\n\t\tindexer._indexedGroupIds = [groupId]\n\t\tconst batch = {\n\t\t\tevents,\n\t\t\tgroupId,\n\t\t\tbatchId,\n\t\t}\n\t\tawait indexer._processEntityEvents(batch)\n\t\to(indexer._core.writeIndexUpdateWithBatchId.invocations.length).equals(2)\n\t\tlet indexUpdateMail = indexer._core.writeIndexUpdateWithBatchId.invocations[0][2]\n\t\to(indexer._mail.processEntityEvents.callCount).equals(1)\n\t\to(indexer._mail.processEntityEvents.args).deepEquals([[events[0]], groupId, batchId, indexUpdateMail])\n\t\tlet indexUpdateContact = indexer._core.writeIndexUpdateWithBatchId.invocations[1][2]\n\t\to(indexer._contact.processEntityEvents.callCount).equals(1)\n\t\to(indexer._contact.processEntityEvents.args).deepEquals([[events[1]], groupId, batchId, indexUpdateContact])\n\t})\n\to(\"processEntityEvents non indexed group\", async function () {\n\t\tlet user = createTestEntity(UserTypeRef)\n\t\tuser.memberships = [createTestEntity(GroupMembershipTypeRef)]\n\t\tuser.memberships[0].groupType = GroupType.MailingList\n\t\tuser.memberships[0].group = \"group-id\"\n\t\tconst infoMessageHandler = object<InfoMessageHandler>()\n\t\tconst indexer = mock(new Indexer(restClientMock, infoMessageHandler, browserDataStub, entityRestCache, () => mailIndexer), (mock) => {\n\t\t\tmock.db.initialized = Promise.resolve()\n\t\t\tmock._mail = {\n\t\t\t\tprocessEntityEvents: spy(() => Promise.resolve()),\n\t\t\t}\n\t\t\tmock._contact = {\n\t\t\t\tprocessEntityEvents: spy(() => Promise.resolve()),\n\t\t\t}\n\t\t\tmock._processUserEntityEvents = spy(() => Promise.resolve())\n\t\t\tmock._initParams = {\n\t\t\t\tuser: createTestEntity(UserTypeRef),\n\t\t\t}\n\t\t\tmock._core.writeIndexUpdate = spy(() => Promise.resolve())\n\t\t\tmock._initParams = {\n\t\t\t\tuser,\n\t\t\t}\n\t\t})\n\n\t\tfunction update(typeRef: TypeRef<any>) {\n\t\t\tlet u = createTestEntity(EntityUpdateTypeRef)\n\t\t\tu.application = typeRef.app\n\t\t\tu.type = typeRef.type\n\t\t\treturn u\n\t\t}\n\n\t\tlet events = [update(MailTypeRef), update(ContactTypeRef), update(UserTypeRef)]\n\t\tconst batch: QueuedBatch = {\n\t\t\tevents,\n\t\t\tgroupId: \"group-id\",\n\t\t\tbatchId: \"batch-id\",\n\t\t}\n\t\tindexer._indexedGroupIds = [\"group-id\"]\n\n\t\tawait indexer._processEntityEvents(batch)\n\t\to(indexer._core.writeIndexUpdate.callCount).equals(0)\n\t\to(indexer._mail.processEntityEvents.callCount).equals(0)\n\t\to(indexer._contact.processEntityEvents.callCount).equals(0)\n\t\to(indexer._processUserEntityEvents.callCount).equals(0)\n\t})\n\n\to(\"_processEntityEvents_2\", async function () {\n\t\tconst doneDeferred = defer()\n\t\tconst infoMessageHandler = object<InfoMessageHandler>()\n\t\tconst indexer = mock(new Indexer(restClientMock, infoMessageHandler, browserDataStub, entityRestCache, () => mailIndexer), (mock) => {\n\t\t\tmock.db.initialized = Promise.resolve()\n\t\t\tmock._mail = {\n\t\t\t\tprocessEntityEvents: spy(() => Promise.resolve()),\n\t\t\t}\n\t\t\tmock._contact = {\n\t\t\t\tprocessEntityEvents: spy(() => Promise.resolve()),\n\t\t\t}\n\t\t\tmock._processUserEntityEvents = spy(() => Promise.resolve())\n\t\t\tmock._initParams = {\n\t\t\t\tuser: createTestEntity(UserTypeRef),\n\t\t\t}\n\t\t\tmock._core.writeIndexUpdateWithBatchId = spy(() => Promise.resolve())\n\t\t\tlet user = createTestEntity(UserTypeRef)\n\t\t\tuser.memberships = [createTestEntity(GroupMembershipTypeRef)]\n\t\t\tuser.memberships[0].groupType = GroupType.Mail\n\t\t\tuser.memberships[0].group = \"group-id\"\n\t\t\tmock._initParams = {\n\t\t\t\tuser,\n\t\t\t}\n\n\t\t\tconst _processNext = mock._core.queue.processNext.bind(mock._core.queue)\n\n\t\t\tmock._core.queue.processNext = spy(() => {\n\t\t\t\tif (mock._core.queue.eventQueue.length === 0) {\n\t\t\t\t\tdoneDeferred.resolve(null)\n\t\t\t\t}\n\n\t\t\t\t_processNext()\n\t\t\t})\n\t\t})\n\t\tconst events1 = [\n\t\t\tcreateTestEntity(EntityUpdateTypeRef, {\n\t\t\t\tapplication: MailTypeRef.app,\n\t\t\t\ttype: MailTypeRef.type,\n\t\t\t\toperation: OperationType.CREATE,\n\t\t\t\tinstanceId: \"id-1\",\n\t\t\t}),\n\t\t]\n\t\tindexer._indexedGroupIds = [\"group-id\"]\n\t\tconst batch1: QueuedBatch = {\n\t\t\tevents: events1,\n\t\t\tgroupId: \"group-id\",\n\t\t\tbatchId: \"batch-id-1\",\n\t\t}\n\t\tconst events2 = [\n\t\t\tcreateTestEntity(EntityUpdateTypeRef, {\n\t\t\t\tapplication: MailTypeRef.app,\n\t\t\t\ttype: MailTypeRef.type,\n\t\t\t\toperation: OperationType.CREATE,\n\t\t\t\tinstanceId: \"id-2\",\n\t\t\t}),\n\t\t]\n\t\tindexer._indexedGroupIds = [\"group-id\"]\n\t\tconst batch2: QueuedBatch = {\n\t\t\tevents: events2,\n\t\t\tgroupId: \"group-id\",\n\t\t\tbatchId: \"batch-id-2\",\n\t\t}\n\t\tindexer.addBatchesToQueue([batch1, batch2])\n\n\t\tindexer._realtimeEventQueue.resume()\n\n\t\tindexer.startProcessing()\n\t\tawait doneDeferred.promise\n\t\t// @ts-ignore\n\t\to(indexer._core.writeIndexUpdateWithBatchId.callCount).equals(2)\n\t\t// @ts-ignore\n\t\to(indexer._mail.processEntityEvents.callCount).equals(2)\n\t\t// @ts-ignore\n\t\to(indexer._contact.processEntityEvents.callCount).equals(0)\n\t})\n\n\to(\"_getStartIdForLoadingMissedEventBatches\", function () {\n\t\tconst infoMessageHandler = object<InfoMessageHandler>()\n\t\tlet indexer = new Indexer(restClientMock, infoMessageHandler, browserDataStub, entityRestCache, () => mailIndexer)\n\t\t// one batch that is very young, so its id is returned minus 1 ms\n\t\to(indexer._getStartIdForLoadingMissedEventBatches([\"L0JcCm1-----\"])).equals(\"L0JcCm0-----\") // - 1 ms\n\n\t\t// two batches that are very young, so the oldest id is returned minus 1 ms\n\t\to(indexer._getStartIdForLoadingMissedEventBatches([\"L0JcCm2-----\", \"L0JcCm1-----\"])).equals(\"L0JcCm0-----\") // - 1 ms\n\n\t\t// two batches of which the oldest is exactly one minute old, so the oldest id is returned minus 1 ms. this tests the inner limit\n\t\tlet oneMinuteOld = timestampToGeneratedId(generatedIdToTimestamp(\"L0JcCm1-----\") - 1000 * 60)\n\t\tlet oneMinuteOldMinusOneMS = timestampToGeneratedId(generatedIdToTimestamp(\"L0JcCm1-----\") - 1000 * 60 - 1) // - 1 ms\n\n\t\to(indexer._getStartIdForLoadingMissedEventBatches([\"L0JcCm1----\", oneMinuteOld])).equals(oneMinuteOldMinusOneMS)\n\t\t// two batches of which the oldest is exactly one minute and one ms old, so the newest id is returned minus 1 ms. this tests the outer limit\n\t\tlet olderThanOneMinute = timestampToGeneratedId(generatedIdToTimestamp(\"L0JcCm1-----\") - 1000 * 60 - 1)\n\t\tlet newestMinusOneMinute = timestampToGeneratedId(generatedIdToTimestamp(\"L0JcCm1-----\") - 1000 * 60)\n\t\to(indexer._getStartIdForLoadingMissedEventBatches([\"L0JcCm1----\", olderThanOneMinute])).equals(newestMinusOneMinute)\n\t\t// two batches of which the oldest is very old, so the newest id is returned minus 1 ms.\n\t\tlet veryOld = timestampToGeneratedId(generatedIdToTimestamp(\"L0JcCm1-----\") - 1000 * 60 * 10)\n\t\to(indexer._getStartIdForLoadingMissedEventBatches([\"L0JcCm1----\", veryOld])).equals(newestMinusOneMinute)\n\t})\n\n\to.spec(\"Contact indexing and caching\", function () {\n\t\tlet indexer: Indexer\n\t\tlet user = createTestEntity(UserTypeRef)\n\t\tuser.userGroup = createTestEntity(GroupMembershipTypeRef)\n\t\tuser.userGroup.group = \"user-group-id\"\n\t\tlet userGroupKey\n\n\t\tfunction makeIndexer() {\n\t\t\tuserGroupKey = freshVersioned(aes256RandomKey())\n\t\t\tconst infoMessageHandlerDouble = object<InfoMessageHandler>()\n\n\t\t\tconst entityRestClientDouble: EntityRestClient = instance(EntityRestClient)\n\t\t\tconst restClientDouble: RestClient = instance(RestClient)\n\t\t\twhen(restClientDouble.getServerTimestampMs()).thenReturn(SERVER_TIME)\n\t\t\twhen(entityRestClientDouble.getRestClient()).thenReturn(restClientDouble)\n\n\t\t\tindexer = new Indexer(entityRestClientDouble, infoMessageHandlerDouble, browserDataStub, instance(DefaultEntityRestCache), () => mailIndexer)\n\t\t\tconst transactionDouble = object<DbTransaction>()\n\t\t\twhen(transactionDouble.getAll(matchers.anything())).thenResolve([\n\t\t\t\t{\n\t\t\t\t\tkey: \"key\",\n\t\t\t\t\tvalue: \"value\",\n\t\t\t\t},\n\t\t\t])\n\t\t\twhen(transactionDouble.put(matchers.anything(), matchers.anything(), matchers.anything())).thenResolve(null)\n\n\t\t\tconst dbFacadeDouble = instance(DbFacade)\n\t\t\twhen(dbFacadeDouble.createTransaction(matchers.anything(), matchers.anything())).thenResolve(transactionDouble)\n\t\t\treplace(indexer.db, \"dbFacade\", dbFacadeDouble)\n\n\t\t\tconst entityDouble = instance(EntityClient)\n\t\t\twhen(entityDouble.loadRoot(ContactListTypeRef, user.userGroup.group)).thenResolve(contactList)\n\t\t\treplace(indexer, \"_entity\", entityDouble)\n\n\t\t\tconst contactDouble = instance(ContactIndexer)\n\t\t\treplace(indexer, \"_contact\", contactDouble)\n\t\t}\n\n\t\to.beforeEach(function () {\n\t\t\tmakeIndexer()\n\t\t})\n\t\to.afterEach(function () {\n\t\t\treset()\n\t\t})\n\n\t\to(\"When init() is called and contacts have already been indexed they are not indexed again\", async function () {\n\t\t\twhen(indexer._contact.getIndexTimestamp(contactList)).thenResolve(FULL_INDEXED_TIMESTAMP)\n\t\t\twhen(keyLoaderFacade.getCurrentSymUserGroupKey()).thenReturn(userGroupKey)\n\t\t\tawait indexer.init({ user, keyLoaderFacade })\n\t\t\tverify(indexer._contact.indexFullContactList(contactList), { times: 0 })\n\t\t})\n\n\t\to(\"When init() is called and contacts have not been indexed before, they are indexed\", async function () {\n\t\t\twhen(indexer._contact.getIndexTimestamp(contactList)).thenResolve(NOTHING_INDEXED_TIMESTAMP)\n\t\t\twhen(keyLoaderFacade.getCurrentSymUserGroupKey()).thenReturn(userGroupKey)\n\t\t\tawait indexer.init({ user, keyLoaderFacade })\n\t\t\tverify(indexer._contact.indexFullContactList(contactList))\n\t\t})\n\n\t\to(\"When init() is called with a fresh db and contacts have not been indexed, they will be downloaded\", async function () {\n\t\t\twhen(indexer._contact.getIndexTimestamp(contactList)).thenResolve(FULL_INDEXED_TIMESTAMP)\n\t\t\tconst cacheInfo: CacheInfo = {\n\t\t\t\tisPersistent: true,\n\t\t\t\tisNewOfflineDb: true,\n\t\t\t\tdatabaseKey: new Uint8Array([1, 2, 3]),\n\t\t\t}\n\n\t\t\tindexer._mail.enableMailIndexing = func<MailIndexer[\"enableMailIndexing\"]>()\n\t\t\twhen(indexer._mail.enableMailIndexing(matchers.anything())).thenResolve(undefined)\n\n\t\t\twhen(keyLoaderFacade.getCurrentSymUserGroupKey()).thenReturn(userGroupKey)\n\t\t\tawait indexer.init({ user, keyLoaderFacade, cacheInfo })\n\t\t\tverify(indexer._entity.loadAll(ContactTypeRef, contactList.contacts))\n\t\t})\n\n\t\to(\"When init() is called with a fresh db and contacts are not yet indexed, they will be indexed and not downloaded\", async function () {\n\t\t\twhen(indexer._contact.getIndexTimestamp(contactList)).thenResolve(NOTHING_INDEXED_TIMESTAMP)\n\t\t\tconst cacheInfo: CacheInfo = {\n\t\t\t\tisPersistent: true,\n\t\t\t\tisNewOfflineDb: true,\n\t\t\t\tdatabaseKey: new Uint8Array([1, 2, 3]),\n\t\t\t}\n\t\t\tindexer._mail.enableMailIndexing = func<MailIndexer[\"enableMailIndexing\"]>()\n\t\t\twhen(indexer._mail.enableMailIndexing(matchers.anything())).thenResolve(undefined)\n\n\t\t\twhen(keyLoaderFacade.getCurrentSymUserGroupKey()).thenReturn(userGroupKey)\n\t\t\tawait indexer.init({ user, keyLoaderFacade, cacheInfo })\n\n\t\t\tverify(indexer._contact.indexFullContactList(contactList))\n\t\t\tverify(indexer._entity.loadAll(ContactTypeRef, contactList.contacts), { times: 0 })\n\t\t})\n\n\t\to(\"When init() is called with a fresh db and the cache is not persisted the indexing is not enabled\", async function () {\n\t\t\twhen(indexer._contact.getIndexTimestamp(contactList)).thenResolve(FULL_INDEXED_TIMESTAMP)\n\t\t\tconst cacheInfo: CacheInfo = {\n\t\t\t\tisPersistent: false,\n\t\t\t\tisNewOfflineDb: true,\n\t\t\t\tdatabaseKey: new Uint8Array([1, 2, 3]),\n\t\t\t}\n\n\t\t\tindexer._mail.enableMailIndexing = func<MailIndexer[\"enableMailIndexing\"]>()\n\t\t\twhen(indexer._mail.enableMailIndexing(matchers.anything())).thenResolve(undefined)\n\t\t\twhen(keyLoaderFacade.getCurrentSymUserGroupKey()).thenReturn(userGroupKey)\n\n\t\t\tawait indexer.init({ user, keyLoaderFacade, cacheInfo })\n\t\t})\n\t})\n})\n","import type { DbKey } from \"../../../../../src/common/api/worker/search/DbFacade.js\"\nimport { DbTransaction, osName } from \"../../../../../src/common/api/worker/search/DbFacade.js\"\nimport { downcast, neverNull } from \"@tutao/tutanota-utils\"\nimport {\n\tElementDataOS,\n\tGroupDataOS,\n\tIndexName,\n\tObjectStoreName,\n\tSearchIndexMetaDataOS,\n\tSearchIndexOS,\n\tSearchIndexWordsIndex,\n} from \"../../../../../src/common/api/worker/search/IndexTables.js\"\n\nexport type Index = { [indexName: string]: string }\n\nexport type TableStub = {\n\t// @ts-ignore[TS2538]\n\tcontent: Record<DbKey, any>\n\tautoIncrement: boolean\n\tindexes: Index\n\tkeyPath?: string | null\n\tlastId?: number | null\n}\n\nexport class DbStub {\n\t_objectStores: { [name: string]: TableStub }\n\tindexingSupported: boolean\n\n\tconstructor() {\n\t\tthis._objectStores = {}\n\t\tthis.indexingSupported = true\n\t}\n\n\taddObjectStore(name: ObjectStoreName, autoIncrement: boolean, keyPath?: string, index?: Index) {\n\t\tthis._objectStores[osName(name)] = {\n\t\t\tcontent: {},\n\t\t\tautoIncrement,\n\t\t\tindexes: index || {},\n\t\t\tkeyPath,\n\t\t\tlastId: null,\n\t\t}\n\t}\n\n\tgetObjectStore(name: ObjectStoreName): TableStub {\n\t\treturn this._objectStores[osName(name)]\n\t}\n\n\tcreateTransaction(): DbStubTransaction {\n\t\treturn new DbStubTransaction(this)\n\t}\n}\n\nexport function createSearchIndexDbStub(): DbStub {\n\tconst dbStub = new DbStub()\n\tdbStub.addObjectStore(SearchIndexOS, true)\n\tdbStub.addObjectStore(SearchIndexMetaDataOS, true, \"id\", { [SearchIndexWordsIndex]: \"word\" })\n\tdbStub.addObjectStore(ElementDataOS, false)\n\tdbStub.addObjectStore(GroupDataOS, false)\n\treturn dbStub\n}\n\nexport class DbStubTransaction implements DbTransaction {\n\t_dbStub: DbStub\n\taborted: boolean\n\n\tconstructor(stub: DbStub) {\n\t\tthis._dbStub = stub\n\t\tthis.aborted = false\n\t}\n\n\tgetAll(objectStore: ObjectStoreName): Promise<{ key: DbKey; value: any }[]> {\n\t\tconst entries = Object.entries(this._dbStub.getObjectStore(objectStore).content).map(([key, value]) => {\n\t\t\treturn { key, value }\n\t\t})\n\t\treturn Promise.resolve(entries)\n\t}\n\n\tasync get<T>(objectStore: ObjectStoreName, key: DbKey, indexName?: IndexName): Promise<T | null> {\n\t\treturn this.getSync(objectStore, key, indexName)\n\t}\n\n\tgetSync<T>(objectStore: ObjectStoreName, key: DbKey, indexName?: IndexName): T {\n\t\tif (indexName) {\n\t\t\tconst table = this._dbStub.getObjectStore(objectStore)\n\t\t\tconst indexField = table.indexes[indexName]\n\t\t\tif (!indexField) throw new Error(\"No such index: \" + indexName)\n\t\t\tconst value = Object.values(table.content)\n\t\t\t\t.map(downcast)\n\t\t\t\t.find((value) => value[indexField] === key)\n\t\t\treturn neverNull(value)\n\t\t} else {\n\t\t\t// @ts-ignore[TS2538]\n\t\t\treturn this._dbStub.getObjectStore(objectStore).content[key]\n\t\t}\n\t}\n\n\tasync getAsList<T>(objectStore: ObjectStoreName, key: DbKey, indexName?: IndexName): Promise<T[]> {\n\t\tconst result = await this.get<T[]>(objectStore, key, indexName)\n\t\treturn result ?? []\n\t}\n\n\tput(objectStore: ObjectStoreName, key: DbKey | null, value: any): Promise<any> {\n\t\tconst table = this._dbStub.getObjectStore(objectStore)\n\t\tif (table.keyPath) {\n\t\t\tkey = value[table.keyPath]\n\t\t}\n\t\tif (key == null && table.autoIncrement) {\n\t\t\tconst lastId = (table.lastId || 0) + 1\n\t\t\ttable.lastId = lastId\n\t\t\ttable.content[lastId] = value\n\t\t\tif (table.keyPath) {\n\t\t\t\tvalue[table.keyPath] = lastId\n\t\t\t}\n\t\t\treturn Promise.resolve(lastId)\n\t\t} else if (key != null) {\n\t\t\tif (table.keyPath && table.autoIncrement) {\n\t\t\t\ttable.lastId = Math.max(table.lastId || 0, Number(key))\n\t\t\t}\n\t\t\t// @ts-ignore[TS2538]\n\t\t\ttable.content[key] = value\n\t\t\treturn Promise.resolve(key)\n\t\t} else {\n\t\t\treturn Promise.reject(\"Cannot put: no key provided, os: \" + osName(objectStore) + \", value: \" + JSON.stringify(value))\n\t\t}\n\t}\n\n\tdelete(objectStore: ObjectStoreName, key: DbKey): Promise<void> {\n\t\t// @ts-ignore[TS2538]\n\t\tdelete this._dbStub.getObjectStore(objectStore).content[key]\n\t\treturn Promise.resolve()\n\t}\n\n\tabort() {\n\t\t// not supported yet\n\t}\n\n\twait(): Promise<void> {\n\t\treturn Promise.resolve()\n\t}\n}\n","import o from \"@tutao/otest\"\nimport type {\n\tElementDataDbRow,\n\tElementDataSurrogate,\n\tEncryptedSearchIndexEntry,\n\tEncSearchIndexEntryWithTimestamp,\n\tEncWordToMetaRow,\n\tGroupData,\n\tIndexUpdate,\n\tSearchIndexEntry,\n\tSearchIndexMetaDataRow,\n} from \"../../../../../src/common/api/worker/search/SearchTypes.js\"\nimport {\n\t_createNewIndexUpdate,\n\tdecryptIndexKey,\n\tdecryptMetaData,\n\tdecryptSearchIndexEntry,\n\tencryptIndexKeyBase64,\n\tencryptIndexKeyUint8Array,\n\tencryptMetaData,\n\tgetIdFromEncSearchIndexEntry,\n\ttypeRefToTypeInfo,\n} from \"../../../../../src/common/api/worker/search/IndexUtils.js\"\nimport { base64ToUint8Array, concat, defer, downcast, neverNull, noOp, PromisableWrapper, uint8ArrayToBase64 } from \"@tutao/tutanota-utils\"\nimport { spy } from \"@tutao/tutanota-test-utils\"\nimport { ContactTypeRef, MailTypeRef } from \"../../../../../src/common/api/entities/tutanota/TypeRefs.js\"\nimport { DbTransaction } from \"../../../../../src/common/api/worker/search/DbFacade.js\"\nimport { appendBinaryBlocks } from \"../../../../../src/common/api/worker/search/SearchIndexEncoding.js\"\nimport { EntityUpdateTypeRef } from \"../../../../../src/common/api/entities/sys/TypeRefs.js\"\nimport { EventQueue } from \"../../../../../src/common/api/worker/EventQueue.js\"\nimport { CancelledError } from \"../../../../../src/common/api/common/error/CancelledError.js\"\nimport { createSearchIndexDbStub, DbStub, DbStubTransaction } from \"./DbStub.js\"\nimport { IndexerCore } from \"../../../../../src/mail-app/workerUtils/index/IndexerCore.js\"\nimport { elementIdPart, generatedIdToTimestamp, listIdPart, timestampToGeneratedId } from \"../../../../../src/common/api/common/utils/EntityUtils.js\"\nimport { createTestEntity, makeCore } from \"../../../TestUtils.js\"\nimport { Aes256Key, aes256RandomKey, aesEncrypt, fixedIv, IV_BYTE_LENGTH, random, unauthenticatedAesDecrypt } from \"@tutao/tutanota-crypto\"\nimport { resolveTypeReference } from \"../../../../../src/common/api/common/EntityFunctions.js\"\nimport { ElementDataOS, GroupDataOS, SearchIndexMetaDataOS, SearchIndexOS } from \"../../../../../src/common/api/worker/search/IndexTables.js\"\n\nconst mailTypeInfo = typeRefToTypeInfo(MailTypeRef)\nconst contactTypeInfo = typeRefToTypeInfo(ContactTypeRef)\n\nfunction makeEntries(key: Aes256Key, iv: Uint8Array, n: number, baseTimestamp: number = 0): Array<EncSearchIndexEntryWithTimestamp> {\n\tconst newEntries: EncSearchIndexEntryWithTimestamp[] = []\n\n\tfor (let i = 0; i < n; i++) {\n\t\tconst timestamp = baseTimestamp + i\n\t\tconst instanceIdB64 = timestampToGeneratedId(timestamp)\n\t\tconst encId = encryptIndexKeyUint8Array(key, instanceIdB64, iv)\n\t\tnewEntries.push({\n\t\t\tentry: concat(encId, new Uint8Array(0)),\n\t\t\ttimestamp,\n\t\t})\n\t}\n\n\treturn newEntries\n}\n\nfunction compareBinaryBlocks(actual: Uint8Array, expected: Uint8Array) {\n\to(Array.from(expected)).deepEquals(Array.from(actual))\n}\n\no.spec(\"IndexerCore test\", () => {\n\to(\"createIndexEntriesForAttributes\", async function () {\n\t\tlet core = makeCore()\n\t\tlet contact = createTestEntity(ContactTypeRef)\n\t\tcontact._id = [\"\", \"L-dNNLe----0\"]\n\t\tcontact.firstName = \"Max Tim\"\n\t\tcontact.lastName = \"Meier\" // not indexed\n\n\t\tcontact.company = undefined as any // indexed but not defined\n\n\t\tcontact.comment = \"Friend of Tim\"\n\t\tconst ContactModel = await resolveTypeReference(ContactTypeRef)\n\t\tlet entries = core.createIndexEntriesForAttributes(contact, [\n\t\t\t{\n\t\t\t\tattribute: ContactModel.values[\"firstName\"],\n\t\t\t\tvalue: () => contact.firstName,\n\t\t\t},\n\t\t\t{\n\t\t\t\tattribute: ContactModel.values[\"company\"],\n\t\t\t\tvalue: () => contact.company,\n\t\t\t},\n\t\t\t{\n\t\t\t\tattribute: ContactModel.values[\"comment\"],\n\t\t\t\tvalue: () => contact.comment,\n\t\t\t},\n\t\t])\n\t\to(entries.size).equals(4)\n\t\to(entries.get(\"max\")!).deepEquals([\n\t\t\t{\n\t\t\t\tid: \"L-dNNLe----0\",\n\t\t\t\tattribute: ContactModel.values[\"firstName\"].id,\n\t\t\t\tpositions: [0],\n\t\t\t},\n\t\t])\n\t\to(entries.get(\"tim\")!).deepEquals([\n\t\t\t{\n\t\t\t\tid: \"L-dNNLe----0\",\n\t\t\t\tattribute: ContactModel.values[\"firstName\"].id,\n\t\t\t\tpositions: [1],\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: \"L-dNNLe----0\",\n\t\t\t\tattribute: ContactModel.values[\"comment\"].id,\n\t\t\t\tpositions: [2],\n\t\t\t},\n\t\t])\n\t\to(entries.get(\"friend\")!).deepEquals([\n\t\t\t{\n\t\t\t\tid: \"L-dNNLe----0\",\n\t\t\t\tattribute: ContactModel.values[\"comment\"].id,\n\t\t\t\tpositions: [0],\n\t\t\t},\n\t\t])\n\t\to(entries.get(\"of\")!).deepEquals([\n\t\t\t{\n\t\t\t\tid: \"L-dNNLe----0\",\n\t\t\t\tattribute: ContactModel.values[\"comment\"].id,\n\t\t\t\tpositions: [1],\n\t\t\t},\n\t\t])\n\t})\n\to(\"encryptSearchIndexEntries\", function () {\n\t\tconst core = makeCore({\n\t\t\tdb: {\n\t\t\t\tkey: aes256RandomKey(),\n\t\t\t\tiv: fixedIv,\n\t\t\t} as any,\n\t\t})\n\t\tconst instanceId: IdTuple = [\"L-dNNLe----0\", \"L-dNNLe----1\"]\n\t\tconst ownerGroupId = \"ownerGroupId\"\n\t\tconst keyToIndexEntries: Map<string, SearchIndexEntry[]> = new Map([\n\t\t\t[\n\t\t\t\t\"a\",\n\t\t\t\t[\n\t\t\t\t\t{\n\t\t\t\t\t\tid: \"L-dNNLe----1\",\n\t\t\t\t\t\tattribute: 5,\n\t\t\t\t\t\tpositions: [0],\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"b\",\n\t\t\t\t[\n\t\t\t\t\t{\n\t\t\t\t\t\tid: \"L-dNNLe----1\",\n\t\t\t\t\t\tattribute: 4,\n\t\t\t\t\t\tpositions: [8, 27],\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t],\n\t\t])\n\n\t\tlet indexUpdate = _createNewIndexUpdate(mailTypeInfo)\n\n\t\tcore.encryptSearchIndexEntries(instanceId, ownerGroupId, keyToIndexEntries, indexUpdate)\n\t\to(indexUpdate.create.encInstanceIdToElementData.size).equals(1)\n\t\tconst encIdB64 = encryptIndexKeyBase64(core.db.key, elementIdPart(instanceId), core.db.iv)\n\t\tlet elementData: ElementDataSurrogate = neverNull(indexUpdate.create.encInstanceIdToElementData.get(encIdB64))\n\t\tconst { listId, encWordsB64, ownerGroup } = elementData\n\t\to(listId).equals(listIdPart(instanceId))\n\t\tconst wordB = decryptIndexKey(core.db.key, base64ToUint8Array(encWordsB64[1]), core.db.iv)\n\t\to(wordB).equals(\"b\")\n\t\to(ownerGroupId).equals(ownerGroup)\n\t\to(indexUpdate.create.indexMap.size).equals(2)\n\t\tconst aKey = encryptIndexKeyBase64(core.db.key, \"a\", core.db.iv)\n\t\tlet encEntriesA: EncSearchIndexEntryWithTimestamp[] = neverNull(indexUpdate.create.indexMap.get(aKey))\n\t\to(encEntriesA.length).equals(1)\n\t\tlet entry: any = decryptSearchIndexEntry(core.db.key, encEntriesA[0].entry, core.db.iv)\n\t\tdelete entry.encId\n\t\to(entry).deepEquals({\n\t\t\tid: elementIdPart(instanceId),\n\t\t\tattribute: 5,\n\t\t\tpositions: [0],\n\t\t})\n\t\tconst bKey = encryptIndexKeyBase64(core.db.key, \"b\", core.db.iv)\n\t\tconst encEntriesB: EncSearchIndexEntryWithTimestamp[] = neverNull(indexUpdate.create.indexMap.get(bKey))\n\t\to(encEntriesB.length).equals(1)\n\t\tlet entry2: any = decryptSearchIndexEntry(core.db.key, encEntriesB[0].entry, core.db.iv)\n\t\tdelete entry2.encId\n\t\to(entry2).deepEquals({\n\t\t\tid: elementIdPart(instanceId),\n\t\t\tattribute: 4,\n\t\t\tpositions: [8, 27],\n\t\t})\n\t\t// add another entry\n\t\tlet id2: IdTuple = [\"L-dNNLe----1\", \"L-dNNLe----2\"]\n\t\tlet keyToIndexEntries2: Map<string, SearchIndexEntry[]> = new Map([\n\t\t\t[\n\t\t\t\t\"a\",\n\t\t\t\t[\n\t\t\t\t\t{\n\t\t\t\t\t\tid: elementIdPart(id2),\n\t\t\t\t\t\tattribute: 2,\n\t\t\t\t\t\tpositions: [7, 62],\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t],\n\t\t])\n\t\tcore.encryptSearchIndexEntries(id2, ownerGroupId, keyToIndexEntries2, indexUpdate)\n\t\to(indexUpdate.create.encInstanceIdToElementData.size).equals(2)\n\t\tconst yKey = encryptIndexKeyBase64(core.db.key, elementIdPart(id2), core.db.iv)\n\t\tlet elementData2: ElementDataSurrogate = neverNull(indexUpdate.create.encInstanceIdToElementData.get(yKey))\n\t\tlet listId2 = elementData2.listId\n\t\to(listId2).equals(id2[0])\n\t\tlet words2 = decryptIndexKey(core.db.key, base64ToUint8Array(elementData2.encWordsB64[0]), core.db.iv)\n\t\to(words2).equals(\"a\")\n\t\to(ownerGroupId).equals(elementData2.ownerGroup)\n\t\tencEntriesA = neverNull(indexUpdate.create.indexMap.get(encryptIndexKeyBase64(core.db.key, \"a\", core.db.iv)))\n\t\to(encEntriesA.length).equals(2)\n\t\tentry = downcast(decryptSearchIndexEntry(core.db.key, encEntriesA[0].entry, core.db.iv))\n\t\tdelete entry.encId\n\t\to(entry).deepEquals({\n\t\t\tid: elementIdPart(instanceId),\n\t\t\tattribute: 5,\n\t\t\tpositions: [0],\n\t\t})\n\t\tconst newEntry: any = decryptSearchIndexEntry(core.db.key, encEntriesA[1].entry, core.db.iv)\n\t\tdelete newEntry.encId\n\t\to(newEntry).deepEquals({\n\t\t\tid: elementIdPart(id2),\n\t\t\tattribute: 2,\n\t\t\tpositions: [7, 62],\n\t\t})\n\t})\n\to(\"writeIndexUpdate _moveIndexedInstance\", async function () {\n\t\tlet groupId = \"my-group\"\n\n\t\tlet indexUpdate = _createNewIndexUpdate(mailTypeInfo)\n\n\t\tlet encInstanceId = uint8ArrayToBase64(new Uint8Array([8]))\n\t\tindexUpdate.move.push({\n\t\t\tencInstanceId,\n\t\t\tnewListId: \"new-list\",\n\t\t})\n\t\tlet words = new Uint8Array(0)\n\t\tlet transaction: any = {\n\t\t\tget: (os, key) => {\n\t\t\t\to(os).equals(ElementDataOS)\n\t\t\t\to(key).deepEquals(encInstanceId)\n\t\t\t\treturn Promise.resolve([\"old-list\", words, groupId] as ElementDataDbRow)\n\t\t\t},\n\t\t\tput: (os, key, value) => {\n\t\t\t\to(os).equals(ElementDataOS)\n\t\t\t\to(key).deepEquals(encInstanceId)\n\t\t\t\to(value).deepEquals([\"new-list\", words, groupId])\n\t\t\t},\n\t\t}\n\t\tconst core = makeCore()\n\t\tawait core._moveIndexedInstance(indexUpdate, transaction)\n\t})\n\to(\"writeIndexUpdate _moveIndexedInstance instance already deleted\", async function () {\n\t\tlet groupId = \"my-group\"\n\n\t\tlet indexUpdate = _createNewIndexUpdate(mailTypeInfo)\n\n\t\tlet encInstanceId = uint8ArrayToBase64(new Uint8Array([8]))\n\t\tindexUpdate.move.push({\n\t\t\tencInstanceId,\n\t\t\tnewListId: \"new-list\",\n\t\t})\n\t\tlet words = new Uint8Array(0)\n\t\tlet transaction: any = {\n\t\t\tget: (os, key) => {\n\t\t\t\to(os).equals(ElementDataOS)\n\t\t\t\to(key).deepEquals(encInstanceId)\n\t\t\t\treturn Promise.resolve(null)\n\t\t\t},\n\t\t\tput: (os, key, value) => {\n\t\t\t\tthrow new Error(\"instance does not exist, should not be moved!\")\n\t\t\t},\n\t\t}\n\t\tconst core = makeCore()\n\t\tawait neverNull(core._moveIndexedInstance(indexUpdate, transaction))\n\t})\n\to(\"writeIndexUpdate _deleteIndexedInstance\", async function () {\n\t\tlet groupId = \"my-group\"\n\n\t\tlet indexUpdate = _createNewIndexUpdate(mailTypeInfo)\n\n\t\tconst instanceId = new Uint8Array(16).fill(1)\n\t\tconst metaId = 3\n\t\tlet entry: EncryptedSearchIndexEntry = concat(instanceId, new Uint8Array([4, 7, 6]))\n\t\tlet other1: EncryptedSearchIndexEntry = concat(new Uint8Array(16).fill(2), new Uint8Array([1, 12]))\n\t\tlet other2: EncryptedSearchIndexEntry = concat(instanceId, new Uint8Array([1, 12]))\n\t\tlet encWord = uint8ArrayToBase64(new Uint8Array([7, 8, 23]))\n\t\tlet encInstanceIdB64 = uint8ArrayToBase64(instanceId)\n\t\tindexUpdate.delete.searchMetaRowToEncInstanceIds.set(metaId, [\n\t\t\t{\n\t\t\t\tencInstanceId: instanceId,\n\t\t\t\ttimestamp: 5,\n\t\t\t\tappId: 1,\n\t\t\t\ttypeId: 1,\n\t\t\t},\n\t\t])\n\t\tindexUpdate.delete.encInstanceIds.push(encInstanceIdB64)\n\t\tconst metaData: SearchIndexMetaDataRow = Object.freeze({\n\t\t\tid: metaId,\n\t\t\tword: encWord,\n\t\t\trows: [\n\t\t\t\t{\n\t\t\t\t\tapp: 1,\n\t\t\t\t\ttype: 1,\n\t\t\t\t\tkey: 1,\n\t\t\t\t\tsize: 2,\n\t\t\t\t\toldestElementTimestamp: 1,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tapp: 1,\n\t\t\t\t\ttype: 1,\n\t\t\t\t\tkey: 2,\n\t\t\t\t\tsize: 1,\n\t\t\t\t\toldestElementTimestamp: 10,\n\t\t\t\t},\n\t\t\t],\n\t\t})\n\t\tconst core = makeCore()\n\t\tconst encodedMetaData = encryptMetaData(core.db.key, metaData)\n\t\tlet transaction: any = {\n\t\t\tget: (os, key) => {\n\t\t\t\tswitch (os) {\n\t\t\t\t\tcase SearchIndexMetaDataOS:\n\t\t\t\t\t\treturn Promise.resolve(\n\t\t\t\t\t\t\tkey === metaId\n\t\t\t\t\t\t\t\t? Object.assign({}, encodedMetaData) // copy it\n\t\t\t\t\t\t\t\t: null,\n\t\t\t\t\t\t)\n\n\t\t\t\t\tcase SearchIndexOS:\n\t\t\t\t\t\treturn Promise.resolve(key === 1 ? appendBinaryBlocks([entry, other1]) : appendBinaryBlocks([other2]))\n\t\t\t\t}\n\t\t\t},\n\t\t\tput: spy((os, key, value) => Promise.resolve()),\n\t\t\tdelete: spy((os, key) => Promise.resolve()),\n\t\t}\n\t\tawait core._deleteIndexedInstance(indexUpdate, transaction)\n\t\tconst expectedMeta = Object.assign({}, metaData, {\n\t\t\trows: [\n\t\t\t\t{\n\t\t\t\t\tapp: 1,\n\t\t\t\t\ttype: 1,\n\t\t\t\t\tkey: 1,\n\t\t\t\t\tsize: 1,\n\t\t\t\t\toldestElementTimestamp: 1,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tapp: 1,\n\t\t\t\t\ttype: 1,\n\t\t\t\t\tkey: 2,\n\t\t\t\t\tsize: 1,\n\t\t\t\t\toldestElementTimestamp: 10,\n\t\t\t\t},\n\t\t\t],\n\t\t})\n\t\t// Reminder: you cannot match on encrypted data, IV is random!\n\t\tconst metaPutInvocation = transaction.put.invocations[1]\n\t\to(JSON.stringify([metaPutInvocation[0], metaPutInvocation[1], decryptMetaData(core.db.key, metaPutInvocation[2])])).equals(\n\t\t\tJSON.stringify([SearchIndexMetaDataOS, null, expectedMeta]),\n\t\t)\n\t\to(transaction.delete.invocations[0]).deepEquals([ElementDataOS, encInstanceIdB64])\n\t})\n\to(\"writeIndexUpdate _deleteIndexedInstance last entry for word\", async function () {\n\t\tlet groupId = \"my-group\"\n\n\t\tlet indexUpdate = _createNewIndexUpdate(mailTypeInfo)\n\n\t\tconst instanceId = new Uint8Array(16).fill(8)\n\t\tconst metaId = 3\n\t\tconst searchIndexEntryId = 1\n\t\tconst metaData: SearchIndexMetaDataRow = {\n\t\t\tid: metaId,\n\t\t\tword: \"asasdla\",\n\t\t\trows: [\n\t\t\t\t{\n\t\t\t\t\tapp: 1,\n\t\t\t\t\ttype: 1,\n\t\t\t\t\tkey: searchIndexEntryId,\n\t\t\t\t\tsize: 2,\n\t\t\t\t\toldestElementTimestamp: 1,\n\t\t\t\t},\n\t\t\t],\n\t\t}\n\t\tlet entry: EncryptedSearchIndexEntry = concat(instanceId, new Uint8Array([4, 7, 6]))\n\t\tlet encInstanceIdB64 = uint8ArrayToBase64(instanceId)\n\t\tindexUpdate.delete.searchMetaRowToEncInstanceIds.set(metaId, [\n\t\t\t{\n\t\t\t\tencInstanceId: instanceId,\n\t\t\t\ttimestamp: 5,\n\t\t\t\tappId: 1,\n\t\t\t\ttypeId: 1,\n\t\t\t},\n\t\t])\n\t\tindexUpdate.delete.encInstanceIds.push(encInstanceIdB64)\n\t\tconst core = makeCore()\n\t\tlet transaction: any = {\n\t\t\tget: (os, key) => {\n\t\t\t\tswitch (os) {\n\t\t\t\t\tcase SearchIndexMetaDataOS:\n\t\t\t\t\t\treturn Promise.resolve(key === metaId ? encryptMetaData(core.db.key, metaData) : null)\n\n\t\t\t\t\tcase SearchIndexOS:\n\t\t\t\t\t\treturn Promise.resolve(key === searchIndexEntryId ? appendBinaryBlocks([entry, entry]) : null)\n\t\t\t\t}\n\t\t\t},\n\t\t\tput: spy((os, key, value) => Promise.resolve()),\n\t\t\tdelete: spy((os, key) => Promise.resolve()),\n\t\t}\n\t\tawait core._deleteIndexedInstance(indexUpdate, transaction)\n\t\to(transaction.put.invocations).deepEquals([])\n\t\to(transaction.delete.invocations).deepEquals([\n\t\t\t[ElementDataOS, encInstanceIdB64],\n\t\t\t[SearchIndexOS, 1],\n\t\t\t[SearchIndexMetaDataOS, metaId],\n\t\t])\n\t})\n\to(\"writeIndexUpdate _deleteIndexedInstance instance already deleted\", function () {\n\t\tlet groupId = \"my-group\"\n\n\t\tlet indexUpdate = _createNewIndexUpdate(mailTypeInfo)\n\n\t\tlet entry: EncryptedSearchIndexEntry = concat(new Uint8Array(16), new Uint8Array([4, 7, 6]))\n\t\tindexUpdate.delete.searchMetaRowToEncInstanceIds.set(1, [\n\t\t\t{\n\t\t\t\tencInstanceId: getIdFromEncSearchIndexEntry(entry),\n\t\t\t\ttimestamp: 1,\n\t\t\t\tappId: mailTypeInfo.appId,\n\t\t\t\ttypeId: mailTypeInfo.typeId,\n\t\t\t},\n\t\t])\n\t\tindexUpdate.delete.encInstanceIds.push(uint8ArrayToBase64(getIdFromEncSearchIndexEntry(entry)))\n\t\tlet transaction: any = {\n\t\t\tget: (os, key) => Promise.resolve(null),\n\t\t\tput: (os, key, value) => {\n\t\t\t\tthrow new Error(\"instance does not exist, should not be moved!\")\n\t\t\t},\n\t\t\tdelete: spy(() => Promise.resolve()),\n\t\t}\n\t\tconst core = makeCore()\n\t\treturn neverNull(core._deleteIndexedInstance(indexUpdate, transaction)).then(() => {\n\t\t\to(transaction.delete.invocations).deepEquals([[ElementDataOS, uint8ArrayToBase64(getIdFromEncSearchIndexEntry(entry))]])\n\t\t})\n\t})\n\to(\"writeIndexUpdate _insertNewElementData\", async function () {\n\t\tconst groupId = \"my-group\"\n\t\tconst listId = \"list-id\"\n\t\tconst core = makeCore()\n\n\t\tconst indexUpdate = _createNewIndexUpdate(mailTypeInfo)\n\n\t\tconst encInstanceId = uint8ArrayToBase64(new Uint8Array(16))\n\t\tconst encWord = uint8ArrayToBase64(new Uint8Array([1, 2, 3]))\n\t\tconst searchIndexRowKey = 3\n\t\tconst elementDataSurrogate: ElementDataSurrogate = {\n\t\t\tlistId,\n\t\t\tencWordsB64: [encWord],\n\t\t\townerGroup: groupId,\n\t\t}\n\t\tindexUpdate.create.encInstanceIdToElementData.set(encInstanceId, elementDataSurrogate)\n\t\tconst transaction: any = {\n\t\t\tget: spy(() => Promise.resolve()),\n\t\t\tput: spy(() => Promise.resolve()),\n\t\t}\n\t\tawait neverNull(\n\t\t\tcore._insertNewElementData(indexUpdate, transaction, {\n\t\t\t\t[encWord]: searchIndexRowKey,\n\t\t\t}),\n\t\t)\n\t\tconst [[os, key, value]] = transaction.put.invocations\n\t\to(os).equals(ElementDataOS)\n\t\to(key).equals(encInstanceId)\n\t\tconst [listIdValue, encRowsValue, ownerGroupValue] = value\n\t\to(listIdValue).equals(listId)\n\t\to(Array.from(unauthenticatedAesDecrypt(core.db.key, encRowsValue, true))).deepEquals(Array.from(new Uint8Array([searchIndexRowKey])))\n\t\to(ownerGroupValue).equals(groupId)\n\t})\n\to.spec(\"writeIndexUpdate _insertNewIndexEntries \", function () {\n\t\tconst encWord = uint8ArrayToBase64(new Uint8Array([77, 83, 2, 23]))\n\t\tlet indexUpdate: IndexUpdate\n\t\tlet dbStub: DbStub\n\t\tlet transaction: DbStubTransaction\n\t\tlet core: IndexerCore\n\t\to.beforeEach(function () {\n\t\t\tindexUpdate = _createNewIndexUpdate(mailTypeInfo)\n\t\t\tdbStub = createSearchIndexDbStub()\n\t\t\ttransaction = dbStub.createTransaction()\n\t\t\tcore = makeCore()\n\t\t})\n\n\t\to(\"new word\", async function () {\n\t\t\tlet encInstanceId = new Uint8Array(16)\n\t\t\tlet entry: EncryptedSearchIndexEntry = concat(encInstanceId, new Uint8Array(0))\n\t\t\tindexUpdate.create.indexMap.set(encWord, [\n\t\t\t\t{\n\t\t\t\t\ttimestamp: 1,\n\t\t\t\t\tentry,\n\t\t\t\t},\n\t\t\t])\n\t\t\tawait core._insertNewIndexEntries(indexUpdate, transaction)\n\t\t\to(Array.from(transaction.getSync<Uint8Array>(SearchIndexOS, 1))).deepEquals(Array.from(appendBinaryBlocks([entry])))\n\t\t\tconst decodedInsertedMeta = decryptMetaData(core.db.key, transaction.getSync(SearchIndexMetaDataOS, 1))\n\t\t\to(decodedInsertedMeta).deepEquals({\n\t\t\t\tid: 1,\n\t\t\t\tword: encWord,\n\t\t\t\trows: [\n\t\t\t\t\t{\n\t\t\t\t\t\tapp: mailTypeInfo.appId,\n\t\t\t\t\t\ttype: mailTypeInfo.typeId,\n\t\t\t\t\t\tkey: 1,\n\t\t\t\t\t\tsize: 1,\n\t\t\t\t\t\toldestElementTimestamp: 1,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t})\n\t\t})\n\n\t\to(\"existing word, growing the first row\", async function () {\n\t\t\tlet encInstanceId = new Uint8Array(16)\n\t\t\tlet newEntry: EncryptedSearchIndexEntry = concat(encInstanceId, new Uint8Array(0))\n\t\t\tconst { appId, typeId } = indexUpdate.typeInfo\n\t\t\tconst metaId = 3\n\t\t\tconst existingBlock = appendBinaryBlocks([new Uint8Array([2, 0])])\n\t\t\tconst searchIndexKey = 1\n\t\t\tindexUpdate.create.indexMap.set(encWord, [\n\t\t\t\t{\n\t\t\t\t\tentry: newEntry,\n\t\t\t\t\ttimestamp: 1,\n\t\t\t\t},\n\t\t\t])\n\t\t\tconst searchIndexMeta: SearchIndexMetaDataRow = {\n\t\t\t\tid: metaId,\n\t\t\t\tword: encWord,\n\t\t\t\trows: [\n\t\t\t\t\t{\n\t\t\t\t\t\tapp: appId,\n\t\t\t\t\t\ttype: typeId,\n\t\t\t\t\t\tkey: searchIndexKey,\n\t\t\t\t\t\tsize: 1,\n\t\t\t\t\t\toldestElementTimestamp: 2,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t}\n\t\t\ttransaction.put(SearchIndexMetaDataOS, null, encryptMetaData(core.db.key, searchIndexMeta))\n\t\t\ttransaction.put(SearchIndexOS, searchIndexKey, existingBlock)\n\t\t\tawait core._insertNewIndexEntries(indexUpdate, transaction)\n\t\t\to(Array.from(transaction.getSync<Uint8Array>(SearchIndexOS, searchIndexKey))).deepEquals(Array.from(appendBinaryBlocks([newEntry], existingBlock)))\n\t\t\tconst expectedMeta = Object.assign({}, searchIndexMeta, {\n\t\t\t\trows: [\n\t\t\t\t\t{\n\t\t\t\t\t\tapp: appId,\n\t\t\t\t\t\ttype: typeId,\n\t\t\t\t\t\tkey: 1,\n\t\t\t\t\t\tsize: 2,\n\t\t\t\t\t\toldestElementTimestamp: 1,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t})\n\t\t\to(decryptMetaData(core.db.key, transaction.getSync(SearchIndexMetaDataOS, metaId))).deepEquals(expectedMeta)\n\t\t})\n\t\to(\"add older entities to a new row\", async function () {\n\t\t\t// 50 entries go to the existing row, everything else goes to the new row\n\t\t\tconst newEntries: Array<EncSearchIndexEntryWithTimestamp> = makeEntries(core.db.key, core.db.iv, 200)\n\t\t\tindexUpdate.create.indexMap.set(encWord, newEntries)\n\t\t\tconst searchIndexMeta: SearchIndexMetaDataRow = {\n\t\t\t\tid: 1,\n\t\t\t\tword: encWord,\n\t\t\t\trows: [\n\t\t\t\t\t{\n\t\t\t\t\t\tapp: mailTypeInfo.appId,\n\t\t\t\t\t\ttype: mailTypeInfo.typeId,\n\t\t\t\t\t\tkey: 1,\n\t\t\t\t\t\tsize: 800,\n\t\t\t\t\t\toldestElementTimestamp: 150,\n\t\t\t\t\t}, // new entry dos not fit into row so create new row\n\t\t\t\t\t{\n\t\t\t\t\t\tapp: contactTypeInfo.appId,\n\t\t\t\t\t\ttype: contactTypeInfo.typeId,\n\t\t\t\t\t\tkey: 2,\n\t\t\t\t\t\tsize: 800,\n\t\t\t\t\t\toldestElementTimestamp: 200,\n\t\t\t\t\t}, // different app id, new entries should not be added to this row\n\t\t\t\t],\n\t\t\t}\n\t\t\tconst existingRow = appendBinaryBlocks(makeEntries(core.db.key, core.db.iv, 800, 150).map((e) => e.entry))\n\t\t\tawait transaction.put(SearchIndexOS, 1, existingRow)\n\t\t\tawait transaction.put(SearchIndexMetaDataOS, null, encryptMetaData(core.db.key, searchIndexMeta))\n\t\t\tconst newKey = 3\n\t\t\tdbStub.getObjectStore(SearchIndexOS).lastId = 2\n\t\t\tawait core._insertNewIndexEntries(indexUpdate, transaction)\n\t\t\tconst searchIndexContent = dbStub.getObjectStore(SearchIndexOS).content[newKey]\n\t\t\to(Array.from(searchIndexContent)).deepEquals(Array.from(appendBinaryBlocks(newEntries.slice(0, 150).map((e) => e.entry))))\n\t\t\to(Array.from(transaction.getSync<Uint8Array>(SearchIndexOS, 1))).deepEquals(\n\t\t\t\tArray.from(\n\t\t\t\t\tappendBinaryBlocks(\n\t\t\t\t\t\tnewEntries.slice(150).map((e) => e.entry),\n\t\t\t\t\t\texistingRow,\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t)\n\t\t\tconst searchIndexMetaContent = dbStub.getObjectStore(SearchIndexMetaDataOS).content[searchIndexMeta.id]\n\t\t\tconst decryptedMeta = decryptMetaData(core.db.key, searchIndexMetaContent)\n\t\t\tsearchIndexMeta.rows[0].size = 850\n\t\t\tsearchIndexMeta.rows.unshift({\n\t\t\t\tapp: mailTypeInfo.appId,\n\t\t\t\ttype: mailTypeInfo.typeId,\n\t\t\t\tkey: newKey,\n\t\t\t\tsize: 150,\n\t\t\t\toldestElementTimestamp: 0,\n\t\t\t})\n\t\t\to(decryptedMeta).deepEquals(searchIndexMeta)\n\t\t})\n\n\t\to(\"add newer entities to the end\", async function () {\n\t\t\tconst newEntries = makeEntries(core.db.key, core.db.iv, 200, 201)\n\t\t\tindexUpdate.create.indexMap.set(encWord, newEntries)\n\t\t\tconst searchIndexMeta: SearchIndexMetaDataRow = {\n\t\t\t\tid: 1,\n\t\t\t\tword: encWord,\n\t\t\t\trows: [\n\t\t\t\t\t{\n\t\t\t\t\t\tapp: mailTypeInfo.appId,\n\t\t\t\t\t\ttype: mailTypeInfo.typeId,\n\t\t\t\t\t\tkey: 1,\n\t\t\t\t\t\tsize: 600,\n\t\t\t\t\t\toldestElementTimestamp: 100,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tapp: contactTypeInfo.appId,\n\t\t\t\t\t\ttype: contactTypeInfo.typeId,\n\t\t\t\t\t\tkey: 2,\n\t\t\t\t\t\tsize: 800,\n\t\t\t\t\t\toldestElementTimestamp: 200,\n\t\t\t\t\t}, // different app id, new entries should not be added to this row\n\t\t\t\t],\n\t\t\t}\n\t\t\tconst existingRow = appendBinaryBlocks(makeEntries(core.db.key, core.db.iv, 600, 100).map((e) => e.entry))\n\t\t\ttransaction.put(SearchIndexOS, 1, existingRow)\n\t\t\ttransaction.put(SearchIndexMetaDataOS, null, encryptMetaData(core.db.key, searchIndexMeta))\n\t\t\tawait core._insertNewIndexEntries(indexUpdate, transaction)\n\t\t\to(Array.from(transaction.getSync<Uint8Array>(SearchIndexOS, 1))).deepEquals(\n\t\t\t\tArray.from(\n\t\t\t\t\tappendBinaryBlocks(\n\t\t\t\t\t\tnewEntries.map((e) => e.entry),\n\t\t\t\t\t\texistingRow,\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t)\n\t\t\tsearchIndexMeta.rows[0].size = 800\n\t\t\to(decryptMetaData(core.db.key, transaction.getSync(SearchIndexMetaDataOS, 1))).deepEquals(searchIndexMeta)\n\t\t})\n\t\to(\"add newer entities to the existing row in the beginning\", async function () {\n\t\t\tconst newEntries = makeEntries(core.db.key, core.db.iv, 200, 201)\n\t\t\tindexUpdate.create.indexMap.set(encWord, newEntries)\n\t\t\tconst searchIndexMeta: SearchIndexMetaDataRow = {\n\t\t\t\tid: 1,\n\t\t\t\tword: encWord,\n\t\t\t\trows: [\n\t\t\t\t\t{\n\t\t\t\t\t\tapp: mailTypeInfo.appId,\n\t\t\t\t\t\ttype: mailTypeInfo.typeId,\n\t\t\t\t\t\tkey: 1,\n\t\t\t\t\t\tsize: 600,\n\t\t\t\t\t\toldestElementTimestamp: 300,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tapp: contactTypeInfo.appId,\n\t\t\t\t\t\ttype: contactTypeInfo.typeId,\n\t\t\t\t\t\tkey: 2,\n\t\t\t\t\t\tsize: 800,\n\t\t\t\t\t\toldestElementTimestamp: 200,\n\t\t\t\t\t}, // different app id, new entries should not be added to this row\n\t\t\t\t],\n\t\t\t}\n\t\t\tconst existingRow = appendBinaryBlocks(makeEntries(core.db.key, core.db.iv, 600, 100).map((e) => e.entry))\n\t\t\ttransaction.put(SearchIndexOS, 1, existingRow)\n\t\t\ttransaction.put(SearchIndexMetaDataOS, null, encryptMetaData(core.db.key, searchIndexMeta))\n\t\t\tawait core._insertNewIndexEntries(indexUpdate, transaction)\n\t\t\to(Array.from(transaction.getSync<Uint8Array>(SearchIndexOS, 1))).deepEquals(\n\t\t\t\tArray.from(\n\t\t\t\t\tappendBinaryBlocks(\n\t\t\t\t\t\tnewEntries.map((e) => e.entry),\n\t\t\t\t\t\texistingRow,\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t)\n\t\t\tsearchIndexMeta.rows[0].size = 800\n\t\t\tsearchIndexMeta.rows[0].oldestElementTimestamp = 201\n\t\t\to(decryptMetaData(core.db.key, transaction.getSync(SearchIndexMetaDataOS, 1))).deepEquals(searchIndexMeta)\n\t\t})\n\t\to(\"split row\", async function () {\n\t\t\t// Split the row.\n\t\t\tconst newEntries = makeEntries(core.db.key, core.db.iv, 250, 2001)\n\t\t\tindexUpdate.create.indexMap.set(encWord, newEntries)\n\t\t\tconst searchIndexMeta: SearchIndexMetaDataRow = {\n\t\t\t\tid: 1,\n\t\t\t\tword: encWord,\n\t\t\t\trows: [\n\t\t\t\t\t{\n\t\t\t\t\t\tapp: contactTypeInfo.appId,\n\t\t\t\t\t\ttype: contactTypeInfo.typeId,\n\t\t\t\t\t\tkey: 2,\n\t\t\t\t\t\tsize: 800,\n\t\t\t\t\t\toldestElementTimestamp: 200,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tapp: mailTypeInfo.appId,\n\t\t\t\t\t\ttype: mailTypeInfo.typeId,\n\t\t\t\t\t\tkey: 1,\n\t\t\t\t\t\tsize: 600,\n\t\t\t\t\t\toldestElementTimestamp: 1000,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tapp: mailTypeInfo.appId,\n\t\t\t\t\t\ttype: mailTypeInfo.typeId,\n\t\t\t\t\t\tkey: 3,\n\t\t\t\t\t\tsize: 800,\n\t\t\t\t\t\toldestElementTimestamp: 2000,\n\t\t\t\t\t}, // Split this row\n\t\t\t\t\t{\n\t\t\t\t\t\tapp: mailTypeInfo.appId,\n\t\t\t\t\t\ttype: mailTypeInfo.typeId,\n\t\t\t\t\t\tkey: 4,\n\t\t\t\t\t\tsize: 600,\n\t\t\t\t\t\toldestElementTimestamp: 3000,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t}\n\t\t\tconst existingEntries = makeEntries(core.db.key, core.db.iv, 800, 2000)\n\t\t\tconst existingRow = appendBinaryBlocks(existingEntries.map((e) => e.entry).reverse())\n\t\t\ttransaction.put(SearchIndexOS, 3, existingRow)\n\t\t\ttransaction.put(SearchIndexMetaDataOS, null, encryptMetaData(core.db.key, searchIndexMeta))\n\t\t\tdbStub.getObjectStore(SearchIndexOS).lastId = 4\n\t\t\tawait core._insertNewIndexEntries(indexUpdate, transaction)\n\t\t\tconst allEntries = existingEntries.concat(newEntries).sort((l, r) => l.timestamp - r.timestamp)\n\t\t\tconst firstRowEntries = allEntries.slice(0, -999)\n\t\t\tconst secondRowEntries = allEntries.slice(-999)\n\t\t\tcompareBinaryBlocks(transaction.getSync(SearchIndexOS, 3), appendBinaryBlocks(firstRowEntries.map((e) => e.entry)))\n\t\t\tcompareBinaryBlocks(transaction.getSync(SearchIndexOS, 5), appendBinaryBlocks(secondRowEntries.map((e) => e.entry)))\n\t\t\tsearchIndexMeta.rows = [\n\t\t\t\t{\n\t\t\t\t\tapp: contactTypeInfo.appId,\n\t\t\t\t\ttype: contactTypeInfo.typeId,\n\t\t\t\t\tkey: 2,\n\t\t\t\t\tsize: 800,\n\t\t\t\t\toldestElementTimestamp: 200,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tapp: mailTypeInfo.appId,\n\t\t\t\t\ttype: mailTypeInfo.typeId,\n\t\t\t\t\tkey: 1,\n\t\t\t\t\tsize: 600,\n\t\t\t\t\toldestElementTimestamp: 1000,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tapp: mailTypeInfo.appId,\n\t\t\t\t\ttype: mailTypeInfo.typeId,\n\t\t\t\t\tkey: 3,\n\t\t\t\t\tsize: firstRowEntries.length,\n\t\t\t\t\toldestElementTimestamp: 2000,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tapp: mailTypeInfo.appId,\n\t\t\t\t\ttype: mailTypeInfo.typeId,\n\t\t\t\t\tkey: 5,\n\t\t\t\t\tsize: secondRowEntries.length,\n\t\t\t\t\toldestElementTimestamp: secondRowEntries[0].timestamp,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tapp: mailTypeInfo.appId,\n\t\t\t\t\ttype: mailTypeInfo.typeId,\n\t\t\t\t\tkey: 4,\n\t\t\t\t\tsize: 600,\n\t\t\t\t\toldestElementTimestamp: 3000,\n\t\t\t\t},\n\t\t\t]\n\t\t\to(decryptMetaData(core.db.key, transaction.getSync(SearchIndexMetaDataOS, searchIndexMeta.id))).deepEquals(searchIndexMeta)\n\t\t})\n\t\to(\"split last row\", async function () {\n\t\t\t// Split the row.\n\t\t\tconst newEntries = makeEntries(core.db.key, core.db.iv, 250, 2001)\n\t\t\tindexUpdate.create.indexMap.set(encWord, newEntries)\n\t\t\tconst searchIndexMeta: SearchIndexMetaDataRow = {\n\t\t\t\tid: 1,\n\t\t\t\tword: encWord,\n\t\t\t\trows: [\n\t\t\t\t\t{\n\t\t\t\t\t\tapp: mailTypeInfo.appId,\n\t\t\t\t\t\ttype: mailTypeInfo.typeId,\n\t\t\t\t\t\tkey: 1,\n\t\t\t\t\t\tsize: 600,\n\t\t\t\t\t\toldestElementTimestamp: 1000,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tapp: mailTypeInfo.appId,\n\t\t\t\t\t\ttype: mailTypeInfo.typeId,\n\t\t\t\t\t\tkey: 3,\n\t\t\t\t\t\tsize: 800,\n\t\t\t\t\t\toldestElementTimestamp: 2000,\n\t\t\t\t\t}, // Split this row\n\t\t\t\t\t{\n\t\t\t\t\t\tapp: contactTypeInfo.appId,\n\t\t\t\t\t\ttype: contactTypeInfo.typeId,\n\t\t\t\t\t\tkey: 2,\n\t\t\t\t\t\tsize: 800,\n\t\t\t\t\t\toldestElementTimestamp: 3000,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t}\n\t\t\tconst existingEntries = makeEntries(core.db.key, core.db.iv, 800, 2000)\n\t\t\tconst existingRow = appendBinaryBlocks(existingEntries.map((e) => e.entry).reverse())\n\t\t\ttransaction.put(SearchIndexOS, 3, existingRow)\n\t\t\ttransaction.put(SearchIndexMetaDataOS, null, encryptMetaData(core.db.key, searchIndexMeta))\n\t\t\tdbStub.getObjectStore(SearchIndexOS).lastId = 4\n\t\t\tawait core._insertNewIndexEntries(indexUpdate, transaction)\n\t\t\tconst allEntries = existingEntries.concat(newEntries).sort((l, r) => l.timestamp - r.timestamp)\n\t\t\tconst firstRowEntries = allEntries.slice(0, 1000)\n\t\t\tconst secondRowEntries = allEntries.slice(1000)\n\t\t\tcompareBinaryBlocks(transaction.getSync(SearchIndexOS, 3), appendBinaryBlocks(firstRowEntries.map((e) => e.entry)))\n\t\t\tcompareBinaryBlocks(transaction.getSync(SearchIndexOS, 5), appendBinaryBlocks(secondRowEntries.map((e) => e.entry)))\n\t\t\tsearchIndexMeta.rows = [\n\t\t\t\t{\n\t\t\t\t\tapp: mailTypeInfo.appId,\n\t\t\t\t\ttype: mailTypeInfo.typeId,\n\t\t\t\t\tkey: 1,\n\t\t\t\t\tsize: 600,\n\t\t\t\t\toldestElementTimestamp: 1000,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tapp: mailTypeInfo.appId,\n\t\t\t\t\ttype: mailTypeInfo.typeId,\n\t\t\t\t\tkey: 3,\n\t\t\t\t\tsize: firstRowEntries.length,\n\t\t\t\t\toldestElementTimestamp: 2000,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tapp: mailTypeInfo.appId,\n\t\t\t\t\ttype: mailTypeInfo.typeId,\n\t\t\t\t\tkey: 5,\n\t\t\t\t\tsize: secondRowEntries.length,\n\t\t\t\t\toldestElementTimestamp: secondRowEntries[0].timestamp,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tapp: contactTypeInfo.appId,\n\t\t\t\t\ttype: contactTypeInfo.typeId,\n\t\t\t\t\tkey: 2,\n\t\t\t\t\tsize: 800,\n\t\t\t\t\toldestElementTimestamp: 3000,\n\t\t\t\t},\n\t\t\t]\n\t\t\to(decryptMetaData(core.db.key, transaction.getSync(SearchIndexMetaDataOS, searchIndexMeta.id))).deepEquals(searchIndexMeta)\n\t\t})\n\t\to(\"split for big new row\", async function () {\n\t\t\tconst newEntries = makeEntries(core.db.key, core.db.iv, 2500, 2001)\n\t\t\tindexUpdate.create.indexMap.set(encWord, newEntries)\n\t\t\tconst searchIndexMeta: SearchIndexMetaDataRow = {\n\t\t\t\tid: 1,\n\t\t\t\tword: encWord,\n\t\t\t\trows: [\n\t\t\t\t\t{\n\t\t\t\t\t\tapp: contactTypeInfo.appId,\n\t\t\t\t\t\ttype: contactTypeInfo.typeId,\n\t\t\t\t\t\tkey: 2,\n\t\t\t\t\t\tsize: 800,\n\t\t\t\t\t\toldestElementTimestamp: 500,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t}\n\t\t\ttransaction.put(SearchIndexMetaDataOS, null, encryptMetaData(core.db.key, searchIndexMeta))\n\t\t\tdbStub.getObjectStore(SearchIndexOS).lastId = 2\n\t\t\tawait core._insertNewIndexEntries(indexUpdate, transaction)\n\t\t\t// Because there's nothing on the right side, we put entries from the end and the first row will not be full.\n\t\t\tconst firstRow = newEntries.slice(0, 500)\n\t\t\tconst secondRow = newEntries.slice(500, 1500)\n\t\t\tconst thirdRow = newEntries.slice(1500, 2500)\n\t\t\tcompareBinaryBlocks(transaction.getSync(SearchIndexOS, 3), appendBinaryBlocks(firstRow.map((e) => e.entry)))\n\t\t\tcompareBinaryBlocks(transaction.getSync(SearchIndexOS, 4), appendBinaryBlocks(secondRow.map((e) => e.entry)))\n\t\t\tcompareBinaryBlocks(transaction.getSync(SearchIndexOS, 5), appendBinaryBlocks(thirdRow.map((e) => e.entry)))\n\t\t\tsearchIndexMeta.rows = [\n\t\t\t\t{\n\t\t\t\t\tapp: contactTypeInfo.appId,\n\t\t\t\t\ttype: contactTypeInfo.typeId,\n\t\t\t\t\tkey: 2,\n\t\t\t\t\tsize: 800,\n\t\t\t\t\toldestElementTimestamp: 500,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tapp: mailTypeInfo.appId,\n\t\t\t\t\ttype: mailTypeInfo.typeId,\n\t\t\t\t\tkey: 3,\n\t\t\t\t\tsize: firstRow.length,\n\t\t\t\t\toldestElementTimestamp: firstRow[0].timestamp,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tapp: mailTypeInfo.appId,\n\t\t\t\t\ttype: mailTypeInfo.typeId,\n\t\t\t\t\tkey: 4,\n\t\t\t\t\tsize: secondRow.length,\n\t\t\t\t\toldestElementTimestamp: secondRow[0].timestamp,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tapp: mailTypeInfo.appId,\n\t\t\t\t\ttype: mailTypeInfo.typeId,\n\t\t\t\t\tkey: 5,\n\t\t\t\t\tsize: thirdRow.length,\n\t\t\t\t\toldestElementTimestamp: thirdRow[0].timestamp,\n\t\t\t\t},\n\t\t\t]\n\t\t\to(decryptMetaData(core.db.key, transaction.getSync(SearchIndexMetaDataOS, searchIndexMeta.id))).deepEquals(searchIndexMeta)\n\t\t})\n\t})\n\to(\"writeIndexUpdate _updateGroupDataBatchId abort in case batch has been indexed already\", async function () {\n\t\tlet groupId = \"my-group\"\n\n\t\tlet indexUpdate = _createNewIndexUpdate(mailTypeInfo)\n\n\t\tconst batchId = \"last-batch-id\"\n\t\tconst deferred = defer<void>()\n\t\tlet transaction: any = {\n\t\t\tget: (os, key) => {\n\t\t\t\to(os).equals(GroupDataOS)\n\t\t\t\to(key).equals(groupId)\n\t\t\t\tlet groupData: GroupData = {\n\t\t\t\t\tlastBatchIds: [\"1\", \"last-batch-id\", \"3\"],\n\t\t\t\t} as any\n\t\t\t\treturn Promise.resolve(groupData)\n\t\t\t},\n\t\t\taborted: true,\n\t\t\tabort: () => {\n\t\t\t\tdeferred.resolve()\n\t\t\t},\n\t\t}\n\t\tconst core = makeCore()\n\n\t\tcore._updateGroupDataBatchId(groupId, batchId, transaction)\n\t\tawait deferred.promise\n\t})\n\n\to(\"writeIndexUpdate _updateGroupDataBatchId\", async function () {\n\t\tlet groupId = \"my-group\"\n\n\t\tlet indexUpdate = _createNewIndexUpdate(mailTypeInfo)\n\n\t\tconst deferred = defer<void>()\n\t\tconst batchId = \"2\"\n\t\tlet transaction: any = {\n\t\t\tget: (os, key) => {\n\t\t\t\to(os).equals(GroupDataOS)\n\t\t\t\to(key).equals(groupId)\n\t\t\t\tlet groupData: GroupData = {\n\t\t\t\t\tlastBatchIds: [\"4\", \"3\", \"1\"],\n\t\t\t\t} as any\n\t\t\t\treturn Promise.resolve(groupData)\n\t\t\t},\n\t\t\taborted: false,\n\t\t\tput: (os, key, value) => {\n\t\t\t\to(os).equals(GroupDataOS)\n\t\t\t\to(key).equals(groupId)\n\t\t\t\to(JSON.stringify(value)).equals(\n\t\t\t\t\tJSON.stringify({\n\t\t\t\t\t\tlastBatchIds: [\"4\", \"3\", \"2\", \"1\"],\n\t\t\t\t\t}),\n\t\t\t\t)\n\t\t\t\tdeferred.resolve()\n\t\t\t},\n\t\t}\n\t\tconst core = makeCore()\n\n\t\tcore._updateGroupDataBatchId(groupId, batchId, transaction)\n\t\tawait deferred.promise\n\t})\n\n\to(\"writeIndexUpdate\", async function () {\n\t\tlet groupId = \"my-group\"\n\n\t\tlet indexUpdate = _createNewIndexUpdate(mailTypeInfo)\n\n\t\tconst indexTimestamp = Date.now()\n\t\tlet waitForTransaction = false\n\t\tlet transaction: any = {\n\t\t\twait: () => {\n\t\t\t\twaitForTransaction = true\n\t\t\t\treturn Promise.resolve()\n\t\t\t},\n\t\t}\n\t\tconst encWordToMetaRow: EncWordToMetaRow = {}\n\t\tconst core = makeCore(\n\t\t\t{\n\t\t\t\ttransaction,\n\t\t\t},\n\t\t\t(mocked) => {\n\t\t\t\tmocked._moveIndexedInstance = spy(() => PromisableWrapper.from(undefined))\n\t\t\t\tmocked._deleteIndexedInstance = spy()\n\t\t\t\tmocked._insertNewElementData = spy(() => Promise.resolve())\n\t\t\t\tmocked._insertNewIndexEntries = spy(() => Promise.resolve(encWordToMetaRow))\n\t\t\t\tmocked._updateGroupDataIndexTimestamp = spy()\n\t\t\t},\n\t\t)\n\t\tconst groupUpdate = [\n\t\t\t{\n\t\t\t\tgroupId,\n\t\t\t\tindexTimestamp,\n\t\t\t},\n\t\t]\n\t\tawait core.writeIndexUpdate(groupUpdate, indexUpdate)\n\t\to(core._moveIndexedInstance.callCount).equals(1)\n\t\to(core._moveIndexedInstance.args).deepEquals([indexUpdate, transaction])\n\t\to(core._deleteIndexedInstance.callCount).equals(1)\n\t\to(core._deleteIndexedInstance.args).deepEquals([indexUpdate, transaction])\n\t\to(core._insertNewElementData.callCount).equals(1)\n\t\to(core._insertNewElementData.args).deepEquals([indexUpdate, transaction, encWordToMetaRow])\n\t\to(core._insertNewIndexEntries.callCount).equals(1)\n\t\to(core._insertNewIndexEntries.args).deepEquals([indexUpdate, transaction])\n\t\to(core._updateGroupDataIndexTimestamp.callCount).equals(1)\n\t\to(core._updateGroupDataIndexTimestamp.args).deepEquals([groupUpdate, transaction])\n\t\to(waitForTransaction).equals(true)\n\t})\n\n\to(\"processDeleted\", async function () {\n\t\tconst groupId = \"my-group\"\n\n\t\tconst indexUpdate = _createNewIndexUpdate(mailTypeInfo)\n\n\t\tconst instanceId = \"L-dNNLe----1\"\n\t\tconst instanceIdTimestamp = generatedIdToTimestamp(instanceId)\n\t\tconst event = createTestEntity(EntityUpdateTypeRef)\n\t\tevent.application = MailTypeRef.app\n\t\tevent.type = MailTypeRef.type\n\t\tconst metaRowId = 3\n\t\tconst anotherMetaRowId = 4\n\t\tevent.instanceId = instanceId\n\t\tconst transaction: any = {\n\t\t\tget: (os, key) => {\n\t\t\t\to(os).equals(ElementDataOS)\n\t\t\t\to(Array.from(key)).deepEquals(Array.from(encInstanceId))\n\t\t\t\treturn Promise.resolve(elementData)\n\t\t\t},\n\t\t}\n\t\tconst core = makeCore({\n\t\t\ttransaction,\n\t\t})\n\t\tconst encInstanceId = encryptIndexKeyBase64(core.db.key, instanceId, core.db.iv)\n\t\tconst listId = \"list-id\"\n\t\tconst elementData: ElementDataDbRow = [\n\t\t\tlistId,\n\t\t\taesEncrypt(core.db.key, new Uint8Array([metaRowId, anotherMetaRowId]), random.generateRandomData(IV_BYTE_LENGTH), true),\n\t\t\tgroupId,\n\t\t]\n\t\tconst otherId = new Uint8Array(16).fill(88)\n\t\tindexUpdate.delete.searchMetaRowToEncInstanceIds.set(metaRowId, [\n\t\t\t{\n\t\t\t\tencInstanceId: otherId,\n\t\t\t\tappId: indexUpdate.typeInfo.appId,\n\t\t\t\ttypeId: indexUpdate.typeInfo.typeId,\n\t\t\t\ttimestamp: 1,\n\t\t\t},\n\t\t])\n\t\tawait core._processDeleted(event, indexUpdate)\n\t\to(indexUpdate.delete.encInstanceIds).deepEquals([encInstanceId])\n\t\to(indexUpdate.delete.searchMetaRowToEncInstanceIds.size).equals(2)\n\t\to(JSON.stringify(indexUpdate.delete.searchMetaRowToEncInstanceIds.get(metaRowId))).equals(\n\t\t\tJSON.stringify([\n\t\t\t\t{\n\t\t\t\t\tencInstanceId: otherId,\n\t\t\t\t\tappId: indexUpdate.typeInfo.appId,\n\t\t\t\t\ttypeId: indexUpdate.typeInfo.typeId,\n\t\t\t\t\ttimestamp: 1,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tencInstanceId: base64ToUint8Array(encInstanceId),\n\t\t\t\t\tappId: indexUpdate.typeInfo.appId,\n\t\t\t\t\ttypeId: indexUpdate.typeInfo.typeId,\n\t\t\t\t\ttimestamp: instanceIdTimestamp,\n\t\t\t\t},\n\t\t\t]),\n\t\t)\n\t\tlet ids2 = neverNull(indexUpdate.delete.searchMetaRowToEncInstanceIds.get(anotherMetaRowId))\n\t\to(ids2.length).equals(1)\n\t\to(Array.from(ids2[0].encInstanceId)).deepEquals(Array.from(base64ToUint8Array(encInstanceId)))\n\t\to(indexUpdate.delete.encInstanceIds.length).equals(1)\n\t\to(Array.from(indexUpdate.delete.encInstanceIds[0])).deepEquals(Array.from(encInstanceId))\n\t})\n\to(\"processDeleted already deleted\", async function () {\n\t\tlet groupId = \"my-group\"\n\n\t\tlet indexUpdate = _createNewIndexUpdate(mailTypeInfo)\n\n\t\tlet instanceId = \"123\"\n\t\tlet event = createTestEntity(EntityUpdateTypeRef)\n\t\tevent.instanceId = instanceId\n\t\tevent.application = MailTypeRef.app\n\t\tevent.type = MailTypeRef.type\n\t\tlet transaction: any = {\n\t\t\tget: (os, key) => {\n\t\t\t\to(os).equals(ElementDataOS)\n\t\t\t\to(Array.from(key)).deepEquals(Array.from(encInstanceId))\n\t\t\t\treturn Promise.resolve()\n\t\t\t},\n\t\t}\n\t\tconst core = makeCore({\n\t\t\tqueue: downcast({\n\t\t\t\t_eventQueue: [],\n\t\t\t}),\n\t\t\ttransaction,\n\t\t})\n\t\tlet encInstanceId = encryptIndexKeyBase64(core.db.key, instanceId, core.db.iv)\n\t\tawait core._processDeleted(event, indexUpdate)\n\t\to(indexUpdate.delete.searchMetaRowToEncInstanceIds.size).equals(0)\n\t\to(indexUpdate.delete.encInstanceIds.length).equals(0)\n\t})\n\to(\"stopProcessing\", async function () {\n\t\tconst queue: EventQueue = downcast({\n\t\t\t_eventQueue: [],\n\t\t\tclear: spy(),\n\t\t})\n\t\tconst deferred = defer()\n\t\tconst transaction = {\n\t\t\tabort: noOp,\n\t\t}\n\t\tconst core = makeCore({\n\t\t\tqueue,\n\t\t\tdb: {\n\t\t\t\tkey: aes256RandomKey(),\n\t\t\t\tiv: fixedIv,\n\t\t\t\tdbFacade: {\n\t\t\t\t\tcreateTransaction: () => deferred.promise,\n\t\t\t\t} as any,\n\t\t\t\tinitialized: Promise.resolve(),\n\t\t\t},\n\t\t})\n\n\t\tconst result = core._writeIndexUpdate(\n\t\t\t{\n\t\t\t\tmove: [],\n\t\t\t\tdelete: {\n\t\t\t\t\tsearchMetaRowToEncInstanceIds: new Map(),\n\t\t\t\t\tencInstanceIds: [],\n\t\t\t\t},\n\t\t\t\tcreate: {\n\t\t\t\t\tencInstanceIdToElementData: new Map(),\n\t\t\t\t\tindexMap: new Map(),\n\t\t\t\t},\n\t\t\t} as any,\n\t\t\tnull as any,\n\t\t)\n\n\t\tcore.stopProcessing()\n\t\t// @ts-ignore\n\t\to(queue.clear.invocations).deepEquals([[]])(\"Should clear queue\")\n\n\t\ttry {\n\t\t\tdeferred.resolve(transaction)\n\t\t\tawait result\n\t\t\to(false).equals(true)(\"Should throw an error\")\n\t\t} catch (e) {\n\t\t\to(e instanceof CancelledError).equals(true)(\"Should throw cancelledError\")\n\t\t}\n\t})\n\to(\"startProcessing\", async function () {\n\t\tconst queue: EventQueue = downcast({\n\t\t\t_eventQueue: [1, 2, 3],\n\t\t\tclear: spy(),\n\t\t})\n\t\tconst transaction: DbTransaction = downcast({\n\t\t\tget: () =>\n\t\t\t\tPromise.resolve(() => ({\n\t\t\t\t\tindexTimestamp: Date.now(),\n\t\t\t\t})),\n\t\t\tput: () => Promise.resolve(null),\n\t\t\twait: () => Promise.resolve(),\n\t\t})\n\t\tconst core = makeCore({\n\t\t\tqueue,\n\t\t\ttransaction,\n\t\t})\n\t\tcore.stopProcessing()\n\t\tcore.startProcessing()\n\t\t// Should not throw\n\t\tawait core.writeIndexUpdate(\n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\tgroupId: \"group-id\",\n\t\t\t\t\tindexTimestamp: 0,\n\t\t\t\t},\n\t\t\t],\n\t\t\t_createNewIndexUpdate(mailTypeInfo),\n\t\t)\n\t})\n})\n","import o from \"@tutao/otest\"\nimport {\n\tContactAddressTypeRef,\n\tContactListTypeRef,\n\tContactMailAddressTypeRef,\n\tContactPhoneNumberTypeRef,\n\tContactSocialIdTypeRef,\n\tContactTypeRef,\n} from \"../../../../../src/common/api/entities/tutanota/TypeRefs.js\"\nimport { ContactIndexer } from \"../../../../../src/mail-app/workerUtils/index/ContactIndexer.js\"\nimport { NotAuthorizedError, NotFoundError } from \"../../../../../src/common/api/common/error/RestError.js\"\nimport { DbTransaction } from \"../../../../../src/common/api/worker/search/DbFacade.js\"\nimport { FULL_INDEXED_TIMESTAMP, NOTHING_INDEXED_TIMESTAMP, OperationType } from \"../../../../../src/common/api/common/TutanotaConstants.js\"\nimport { _createNewIndexUpdate, encryptIndexKeyBase64, typeRefToTypeInfo } from \"../../../../../src/common/api/worker/search/IndexUtils.js\"\nimport type { EntityUpdate } from \"../../../../../src/common/api/entities/sys/TypeRefs.js\"\nimport { EntityUpdateTypeRef } from \"../../../../../src/common/api/entities/sys/TypeRefs.js\"\nimport { createTestEntity, makeCore } from \"../../../TestUtils.js\"\nimport { downcast } from \"@tutao/tutanota-utils\"\nimport { isSameId } from \"../../../../../src/common/api/common/utils/EntityUtils.js\"\nimport { fixedIv } from \"@tutao/tutanota-crypto\"\nimport { resolveTypeReference } from \"../../../../../src/common/api/common/EntityFunctions.js\"\nimport { GroupDataOS } from \"../../../../../src/common/api/worker/search/IndexTables.js\"\nimport { spy } from \"@tutao/tutanota-test-utils\"\n\nconst dbMock: any = { iv: fixedIv }\nconst contactTypeInfo = typeRefToTypeInfo(ContactTypeRef)\n\no.spec(\"ContactIndexer test\", () => {\n\tlet suggestionFacadeMock\n\to.beforeEach(function () {\n\t\tsuggestionFacadeMock = {} as any\n\t\tsuggestionFacadeMock.addSuggestions = spy()\n\t\tsuggestionFacadeMock.store = spy(() => Promise.resolve())\n\t})\n\n\to(\"createContactIndexEntries without entries\", function () {\n\t\tlet c = createTestEntity(ContactTypeRef)\n\t\tlet contact = new ContactIndexer(makeCore(), null as any, null as any, suggestionFacadeMock)\n\t\tlet keyToIndexEntries = contact.createContactIndexEntries(c)\n\t\to(suggestionFacadeMock.addSuggestions.callCount).equals(1)\n\t\to(suggestionFacadeMock.addSuggestions.args[0].join(\",\")).equals(\"\")\n\t\to(keyToIndexEntries.size).equals(0)\n\t})\n\n\to(\"createContactIndexEntries with one entry\", function () {\n\t\tlet c = createTestEntity(ContactTypeRef)\n\t\tc.company = \"test\"\n\t\tlet contact = new ContactIndexer(makeCore(), null as any, null as any, suggestionFacadeMock)\n\t\tlet keyToIndexEntries = contact.createContactIndexEntries(c)\n\t\to(suggestionFacadeMock.addSuggestions.args[0].join(\",\")).equals(\"\")\n\t\to(keyToIndexEntries.size).equals(1)\n\t})\n\n\to(\"createContactIndexEntries\", async function () {\n\t\tlet core = { createIndexEntriesForAttributes: spy() } as any\n\t\tconst contactIndexer = new ContactIndexer(core, dbMock, null as any, suggestionFacadeMock)\n\n\t\tlet addresses = [createTestEntity(ContactAddressTypeRef), createTestEntity(ContactAddressTypeRef)]\n\t\taddresses[0].address = \"A0\"\n\t\taddresses[1].address = \"A1\"\n\n\t\tlet mailAddresses = [createTestEntity(ContactMailAddressTypeRef), createTestEntity(ContactMailAddressTypeRef)]\n\t\tmailAddresses[0].address = \"MA0\"\n\t\tmailAddresses[1].address = \"MA1\"\n\n\t\tlet phoneNumbers = [createTestEntity(ContactPhoneNumberTypeRef), createTestEntity(ContactPhoneNumberTypeRef)]\n\t\tphoneNumbers[0].number = \"PN0\"\n\t\tphoneNumbers[1].number = \"PN1\"\n\n\t\tlet socialIds = [createTestEntity(ContactSocialIdTypeRef), createTestEntity(ContactSocialIdTypeRef)]\n\t\tsocialIds[0].socialId = \"S0\"\n\t\tsocialIds[1].socialId = \"S1\"\n\n\t\tlet c = createTestEntity(ContactTypeRef)\n\t\tc.firstName = \"FN\"\n\t\tc.lastName = \"LN\"\n\t\tc.nickname = \"NN\"\n\t\tc.role = \"R\"\n\t\tc.title = \"T\"\n\t\tc.comment = \"C\"\n\t\tc.company = \"co\"\n\t\tc.addresses = addresses\n\t\tc.mailAddresses = mailAddresses\n\t\tc.phoneNumbers = phoneNumbers\n\t\tc.socialIds = []\n\n\t\tcontactIndexer.createContactIndexEntries(c)\n\t\to(suggestionFacadeMock.addSuggestions.args[0].join(\",\")).equals(\"fn,ln,ma0,ma1\")\n\t\tlet args = core.createIndexEntriesForAttributes.args\n\t\tlet attributeHandlers = core.createIndexEntriesForAttributes.args[1]\n\t\to(args[0]).equals(c)\n\t\tlet attributes = attributeHandlers.map((h) => {\n\t\t\treturn { attribute: h.attribute.id, value: h.value() }\n\t\t})\n\t\tconst ContactModel = await resolveTypeReference(ContactTypeRef)\n\t\to(attributes).deepEquals([\n\t\t\t{ attribute: ContactModel.values[\"firstName\"].id, value: \"FN\" },\n\t\t\t{ attribute: ContactModel.values[\"lastName\"].id, value: \"LN\" },\n\t\t\t{ attribute: ContactModel.values[\"nickname\"].id, value: \"NN\" },\n\t\t\t{ attribute: ContactModel.values[\"role\"].id, value: \"R\" },\n\t\t\t{ attribute: ContactModel.values[\"title\"].id, value: \"T\" },\n\t\t\t{ attribute: ContactModel.values[\"comment\"].id, value: \"C\" },\n\t\t\t{ attribute: ContactModel.values[\"company\"].id, value: \"co\" },\n\t\t\t{ attribute: ContactModel.associations[\"addresses\"].id, value: \"A0,A1\" },\n\t\t\t{ attribute: ContactModel.associations[\"mailAddresses\"].id, value: \"MA0,MA1\" },\n\t\t\t{ attribute: ContactModel.associations[\"phoneNumbers\"].id, value: \"PN0,PN1\" },\n\t\t\t{ attribute: ContactModel.associations[\"socialIds\"].id, value: \"\" },\n\t\t])\n\t})\n\n\to(\"processNewContact\", async function () {\n\t\tlet contact = createTestEntity(ContactTypeRef)\n\t\tlet keyToIndexEntries = new Map()\n\n\t\tlet indexer = { createIndexEntriesForAttributes: () => keyToIndexEntries } as any\n\t\tlet entity = {\n\t\t\tload: spy(() => Promise.resolve(contact)),\n\t\t} as any\n\n\t\tconst contactIndexer = new ContactIndexer(indexer, dbMock, entity, suggestionFacadeMock)\n\t\tlet event: EntityUpdate = { instanceListId: \"lid\", instanceId: \"eid\" } as any\n\t\tconst result = await contactIndexer.processNewContact(event)\n\t\t// @ts-ignore\n\t\to(result).deepEquals({ contact, keyToIndexEntries })\n\t\t// @ts-ignore\n\t\to(contactIndexer._entity.load.args[0]).equals(ContactTypeRef)\n\t\t// @ts-ignore\n\t\to(contactIndexer._entity.load.args[1]).deepEquals([event.instanceListId, event.instanceId])\n\t\to(suggestionFacadeMock.addSuggestions.callCount).equals(1)\n\t\to(suggestionFacadeMock.addSuggestions.args[0].join(\",\")).equals(\"\")\n\t\to(suggestionFacadeMock.store.callCount).equals(1)\n\t})\n\n\to(\"processNewContact catches NotFoundError\", function () {\n\t\tlet core = {\n\t\t\tcreateIndexEntriesForAttributes: () => {},\n\t\t} as any\n\t\tlet entity = {\n\t\t\tload: () => Promise.reject(new NotFoundError(\"blah\")),\n\t\t} as any\n\t\tconst contactIndexer = new ContactIndexer(core, dbMock, entity, suggestionFacadeMock)\n\t\tlet event: EntityUpdate = { instanceListId: \"lid\", instanceId: \"eid\" } as any\n\t\treturn contactIndexer.processNewContact(event).then((result) => {\n\t\t\to(result).equals(null)\n\t\t\to(suggestionFacadeMock.addSuggestions.callCount).equals(0)\n\t\t})\n\t})\n\n\to(\"processNewContact catches NotAuthorizedError\", function () {\n\t\tlet indexer = {\n\t\t\tcreateIndexEntriesForAttributes: () => {},\n\t\t} as any\n\t\tlet entity = {\n\t\t\tload: () => Promise.reject(new NotAuthorizedError(\"blah\")),\n\t\t} as any\n\t\tconst contactIndexer = new ContactIndexer(indexer, dbMock, entity, suggestionFacadeMock)\n\t\tlet event: EntityUpdate = { instanceListId: \"lid\", instanceId: \"eid\" } as any\n\t\treturn contactIndexer.processNewContact(event).then((result) => {\n\t\t\to(result).equals(null)\n\t\t\to(suggestionFacadeMock.addSuggestions.callCount).equals(0)\n\t\t})\n\t})\n\n\to(\"processNewContact passes other Errors\", async function () {\n\t\tlet core = {\n\t\t\tcreateIndexEntriesForAttributes: () => {},\n\t\t} as any\n\t\tlet entity = {\n\t\t\tload: () => Promise.reject(new Error(\"blah\")),\n\t\t} as any\n\t\tconst contactIndexer = new ContactIndexer(core, dbMock, entity, suggestionFacadeMock)\n\t\tlet event: EntityUpdate = { instanceListId: \"lid\", instanceId: \"eid\" } as any\n\t\tawait contactIndexer.processNewContact(event).catch((e) => {\n\t\t\to(suggestionFacadeMock.addSuggestions.callCount).equals(0)\n\t\t})\n\t})\n\n\to(\"indexFullContactList\", function () {\n\t\tlet groupData = { indexTimestamp: NOTHING_INDEXED_TIMESTAMP }\n\t\tlet transaction: DbTransaction = downcast({\n\t\t\tget: (os, groupId) => {\n\t\t\t\tif (os != GroupDataOS || groupId != contactList._ownerGroup) {\n\t\t\t\t\tthrow new Error(\"unexpected params \" + os + \" \" + groupId)\n\t\t\t\t}\n\t\t\t\treturn Promise.resolve(groupData)\n\t\t\t},\n\t\t})\n\n\t\tconst core = makeCore({ transaction }, (mocked) => {\n\t\t\tmocked.writeIndexUpdate = spy()\n\t\t})\n\n\t\tlet userGroupId = \"userGroupId\"\n\t\tlet contactList = createTestEntity(ContactListTypeRef)\n\t\tcontactList._ownerGroup = \"ownerGroupId\"\n\t\tcontactList.contacts = \"contactListId\"\n\n\t\tlet contacts = [createTestEntity(ContactTypeRef), createTestEntity(ContactTypeRef)]\n\t\tcontacts[0]._id = [contactList.contacts, \"c0\"]\n\t\tcontacts[0]._ownerGroup = \"c0owner\"\n\t\tcontacts[1]._id = [contactList.contacts, \"c1\"]\n\t\tcontacts[1]._ownerGroup = \"c1owner\"\n\n\t\tlet entity = {\n\t\t\tloadRoot: (type, groupId) => {\n\t\t\t\tif (type != ContactListTypeRef || groupId != userGroupId) {\n\t\t\t\t\tthrow new Error(\"unexpected params \" + type + \" \" + groupId)\n\t\t\t\t}\n\t\t\t\treturn Promise.resolve(contactList)\n\t\t\t},\n\t\t\tloadAll: (type, listId) => {\n\t\t\t\tif (type != ContactTypeRef || listId != contactList.contacts) {\n\t\t\t\t\tthrow new Error(\"unexpected params \" + type + \" \" + listId)\n\t\t\t\t}\n\t\t\t\treturn Promise.resolve(contacts)\n\t\t\t},\n\t\t} as any\n\t\tconst contactIndexer = new ContactIndexer(core, core.db, entity, suggestionFacadeMock)\n\t\treturn contactIndexer.indexFullContactList(contactList).then(() => {\n\t\t\t// @ts-ignore\n\t\t\tconst [[{ groupId, indexTimestamp }], indexUpdate] = core.writeIndexUpdate.args\n\t\t\to(indexTimestamp).equals(FULL_INDEXED_TIMESTAMP)\n\t\t\to(groupId).equals(contactList._ownerGroup)\n\t\t\tlet expectedKeys = [\n\t\t\t\tencryptIndexKeyBase64(core.db.key, contacts[0]._id[1], fixedIv),\n\t\t\t\tencryptIndexKeyBase64(core.db.key, contacts[1]._id[1], fixedIv),\n\t\t\t]\n\t\t\to(Array.from(indexUpdate.create.encInstanceIdToElementData.keys())).deepEquals(expectedKeys)\n\t\t\to(suggestionFacadeMock.addSuggestions.callCount).equals(contacts.length)\n\t\t\to(suggestionFacadeMock.store.callCount).equals(1)\n\t\t})\n\t})\n\to(\"processEntityEvents new contact\", async function () {\n\t\tconst core = makeCore({}, (mocked) => {\n\t\t\tmocked.writeIndexUpdate = spy()\n\t\t\tmocked._processDeleted = spy()\n\t\t})\n\n\t\tlet contact = createTestEntity(ContactTypeRef)\n\t\tcontact._id = [\"contact-list\", \"L-dNNLe----0\"]\n\t\tlet entity: any = {\n\t\t\tload: (type, id) => {\n\t\t\t\tif (type == ContactTypeRef && isSameId(id, contact._id)) return Promise.resolve(contact)\n\t\t\t\tthrow new Error(\"Not found \" + JSON.stringify(type) + \" / \" + JSON.stringify(id))\n\t\t\t},\n\t\t}\n\t\tconst indexer = new ContactIndexer(core, core.db, entity, suggestionFacadeMock)\n\n\t\tlet indexUpdate = _createNewIndexUpdate(contactTypeInfo)\n\t\tlet events = [createUpdate(OperationType.CREATE, \"contact-list\", \"L-dNNLe----0\")]\n\t\tawait indexer.processEntityEvents(events, \"group-id\", \"batch-id\", indexUpdate)\n\t\t// nothing changed\n\t\to(indexUpdate.create.encInstanceIdToElementData.size).equals(1)\n\t\to(indexUpdate.move.length).equals(0)\n\t\t// @ts-ignore\n\t\to(core._processDeleted.callCount).equals(0)\n\t})\n\n\to(\"processEntityEvents update contact\", function () {\n\t\tconst core = makeCore({}, (mocked) => {\n\t\t\tmocked.writeIndexUpdate = spy()\n\t\t\tmocked._processDeleted = spy()\n\t\t})\n\n\t\tlet contact = createTestEntity(ContactTypeRef)\n\t\tcontact._id = [\"contact-list\", \"L-dNNLe----0\"]\n\t\tlet entity: any = {\n\t\t\tload: (type, id) => {\n\t\t\t\tif (type == ContactTypeRef && isSameId(id, contact._id)) return Promise.resolve(contact)\n\t\t\t\tthrow new Error(\"Not found \" + JSON.stringify(type) + \" / \" + JSON.stringify(id))\n\t\t\t},\n\t\t}\n\t\tconst indexer = new ContactIndexer(core, core.db, entity, suggestionFacadeMock)\n\n\t\tlet indexUpdate = _createNewIndexUpdate(contactTypeInfo)\n\t\tlet events = [createUpdate(OperationType.UPDATE, \"contact-list\", \"L-dNNLe----0\")]\n\t\treturn indexer.processEntityEvents(events, \"group-id\", \"batch-id\", indexUpdate).then(() => {\n\t\t\t// nothing changed\n\t\t\to(indexUpdate.create.encInstanceIdToElementData.size).equals(1)\n\t\t\to(indexUpdate.move.length).equals(0)\n\t\t\to(core._processDeleted.callCount).equals(1)\n\t\t\to(core._processDeleted.args).deepEquals([events[0], indexUpdate])\n\t\t})\n\t})\n\n\to(\"processEntityEvents delete contact\", function () {\n\t\tconst core = makeCore({}, (mocked) => {\n\t\t\tmocked.writeIndexUpdate = spy()\n\t\t\tmocked._processDeleted = spy()\n\t\t})\n\n\t\tlet contact = createTestEntity(ContactTypeRef)\n\t\tcontact._id = [\"contact-list\", \"1\"]\n\t\tlet entity: any = {\n\t\t\tload: (type, id) => {\n\t\t\t\tif (type == ContactTypeRef && isSameId(id, contact._id)) return Promise.resolve(contact)\n\t\t\t\tthrow new Error(\"Not found \" + JSON.stringify(type) + \" / \" + JSON.stringify(id))\n\t\t\t},\n\t\t}\n\t\tconst indexer = new ContactIndexer(core, core.db, entity, suggestionFacadeMock)\n\n\t\tlet indexUpdate = _createNewIndexUpdate(contactTypeInfo)\n\t\tlet events = [createUpdate(OperationType.DELETE, \"contact-list\", \"1\")]\n\t\treturn indexer.processEntityEvents(events, \"group-id\", \"batch-id\", indexUpdate).then(() => {\n\t\t\t// nothing changed\n\t\t\to(indexUpdate.create.encInstanceIdToElementData.size).equals(0)\n\t\t\to(indexUpdate.move.length).equals(0)\n\t\t\to(core._processDeleted.callCount).equals(1)\n\t\t\to(core._processDeleted.args).deepEquals([events[0], indexUpdate])\n\t\t})\n\t})\n})\n\nfunction createUpdate(type: OperationType, listId: Id, id: Id) {\n\tlet update = createTestEntity(EntityUpdateTypeRef)\n\tupdate.operation = type\n\tupdate.instanceListId = listId\n\tupdate.instanceId = id\n\treturn update\n}\n","import o from \"@tutao/otest\"\nimport { NotAuthorizedError } from \"../../../../../src/common/api/common/error/RestError.js\"\nimport { Db, ElementDataDbRow, IndexUpdate } from \"../../../../../src/common/api/worker/search/SearchTypes.js\"\nimport { _createNewIndexUpdate, encryptIndexKeyBase64, typeRefToTypeInfo } from \"../../../../../src/common/api/worker/search/IndexUtils.js\"\nimport {\n\tFULL_INDEXED_TIMESTAMP,\n\tGroupType,\n\tMailState,\n\tNOTHING_INDEXED_TIMESTAMP,\n\tOperationType,\n} from \"../../../../../src/common/api/common/TutanotaConstants.js\"\nimport { IndexerCore } from \"../../../../../src/mail-app/workerUtils/index/IndexerCore.js\"\nimport type { EntityUpdate } from \"../../../../../src/common/api/entities/sys/TypeRefs.js\"\nimport { EntityUpdateTypeRef, GroupMembershipTypeRef, UserTypeRef } from \"../../../../../src/common/api/entities/sys/TypeRefs.js\"\nimport { _getCurrentIndexTimestamp, INITIAL_MAIL_INDEX_INTERVAL_DAYS, MailIndexer } from \"../../../../../src/mail-app/workerUtils/index/MailIndexer.js\"\nimport {\n\tBodyTypeRef,\n\tEncryptedMailAddressTypeRef,\n\tFile as TutanotaFile,\n\tFileTypeRef,\n\tMail,\n\tMailAddressTypeRef,\n\tMailBox,\n\tMailboxGroupRootTypeRef,\n\tMailBoxTypeRef,\n\tMailDetailsBlob,\n\tMailDetailsBlobTypeRef,\n\tMailDetailsTypeRef,\n\tMailFolder,\n\tMailFolderRefTypeRef,\n\tMailFolderTypeRef,\n\tMailTypeRef,\n\tRecipientsTypeRef,\n} from \"../../../../../src/common/api/entities/tutanota/TypeRefs.js\"\nimport { mock, spy } from \"@tutao/tutanota-test-utils\"\nimport { browserDataStub, createTestEntity, makeCore } from \"../../../TestUtils.js\"\nimport { downcast, getDayShifted, getStartOfDay, neverNull } from \"@tutao/tutanota-utils\"\nimport { EventQueue } from \"../../../../../src/common/api/worker/EventQueue.js\"\nimport { createSearchIndexDbStub } from \"./DbStub.js\"\nimport {\n\tgetElementId,\n\tgetListId,\n\tLEGACY_BCC_RECIPIENTS_ID,\n\tLEGACY_BODY_ID,\n\tLEGACY_CC_RECIPIENTS_ID,\n\tLEGACY_TO_RECIPIENTS_ID,\n\ttimestampToGeneratedId,\n} from \"../../../../../src/common/api/common/utils/EntityUtils.js\"\nimport { EntityRestClientMock } from \"../rest/EntityRestClientMock.js\"\nimport type { DateProvider } from \"../../../../../src/common/api/worker/DateProvider.js\"\nimport { LocalTimeDateProvider } from \"../../../../../src/common/api/worker/DateProvider.js\"\nimport { aes256RandomKey, fixedIv } from \"@tutao/tutanota-crypto\"\nimport { ExposedCacheStorage } from \"../../../../../src/common/api/worker/rest/DefaultEntityRestCache.js\"\nimport { resolveTypeReference } from \"../../../../../src/common/api/common/EntityFunctions.js\"\nimport { object, when } from \"testdouble\"\nimport { InfoMessageHandler } from \"../../../../../src/common/gui/InfoMessageHandler.js\"\nimport { ElementDataOS, GroupDataOS, Metadata as MetaData, MetaDataOS } from \"../../../../../src/common/api/worker/search/IndexTables.js\"\nimport { MailFacade } from \"../../../../../src/common/api/worker/facades/lazy/MailFacade.js\"\nimport { typeModels } from \"../../../../../src/common/api/entities/tutanota/TypeModels.js\"\nimport { EntityClient } from \"../../../../../src/common/api/common/EntityClient.js\"\nimport { BulkMailLoader } from \"../../../../../src/mail-app/workerUtils/index/BulkMailLoader.js\"\n\nclass FixedDateProvider implements DateProvider {\n\tnow: number\n\n\tconstructor(now: number) {\n\t\tthis.now = now\n\t}\n\n\tgetStartOfDayShiftedBy(shiftedBy: number) {\n\t\tconst date = getDayShifted(new Date(this.now), shiftedBy)\n\t\t// Making start of the day in UTC to make it determenistic. beforeNowInterval is calculated just like that and hardcoded to be reliable\n\t\tdate.setUTCHours(0, 0, 0, 0)\n\t\treturn date\n\t}\n}\n\nconst dbMock: any = {\n\tiv: fixedIv,\n}\n\nconst mailId = \"L-dNNLe----0\"\n\no.spec(\"MailIndexer test\", () => {\n\tlet entityMock: EntityRestClientMock\n\tlet entityClient: EntityClient\n\tlet bulkMailLoader: BulkMailLoader\n\tlet dateProvider: DateProvider\n\tlet mailFacade: MailFacade\n\to.beforeEach(function () {\n\t\tentityMock = new EntityRestClientMock()\n\t\tentityClient = new EntityClient(entityMock)\n\t\tbulkMailLoader = new BulkMailLoader(entityClient, new EntityClient(entityMock), object() satisfies ExposedCacheStorage)\n\t\tdateProvider = new LocalTimeDateProvider()\n\t\tmailFacade = object()\n\t})\n\to(\"createMailIndexEntries without entries\", function () {\n\t\tlet mail = createTestEntity(MailTypeRef)\n\t\tlet mailDetails = createTestEntity(MailDetailsTypeRef, {\n\t\t\tbody: createTestEntity(BodyTypeRef),\n\t\t\trecipients: createTestEntity(RecipientsTypeRef),\n\t\t})\n\t\tlet files = [createTestEntity(FileTypeRef)]\n\t\tlet indexer = new MailIndexer(\n\t\t\tnew IndexerCore(dbMock, null as any, browserDataStub),\n\t\t\tnull as any,\n\t\t\tnull as any,\n\t\t\tnull as any,\n\t\t\tnull as any,\n\t\t\tdateProvider,\n\t\t\tmailFacade,\n\t\t)\n\t\tlet keyToIndexEntries = indexer.createMailIndexEntries(mail, mailDetails, files)\n\t\to(keyToIndexEntries.size).equals(0)\n\t})\n\to(\"createMailIndexEntries with one entry\", function () {\n\t\tlet mail = createTestEntity(MailTypeRef)\n\t\tmail.subject = \"Hello\"\n\t\tlet mailDetails = createTestEntity(MailDetailsTypeRef, {\n\t\t\tbody: createTestEntity(BodyTypeRef),\n\t\t\trecipients: createTestEntity(RecipientsTypeRef),\n\t\t})\n\t\tlet files = [createTestEntity(FileTypeRef)]\n\t\tlet indexer = new MailIndexer(\n\t\t\tnew IndexerCore(dbMock, null as any, browserDataStub),\n\t\t\tnull as any,\n\t\t\tnull as any,\n\t\t\tnull as any,\n\t\t\tnull as any,\n\t\t\tdateProvider,\n\t\t\tmailFacade,\n\t\t)\n\t\tlet keyToIndexEntries = indexer.createMailIndexEntries(mail, mailDetails, files)\n\t\to(keyToIndexEntries.size).equals(1)\n\t})\n\to(\"createMailIndexEntries\", async function () {\n\t\tlet core: IndexerCore = {\n\t\t\tcreateIndexEntriesForAttributes: spy(),\n\t\t\t_stats: {},\n\t\t} as any\n\t\tlet indexer = new MailIndexer(core, dbMock, null as any, null as any, null as any, dateProvider, mailFacade)\n\t\tlet toRecipients = [createTestEntity(MailAddressTypeRef), createTestEntity(MailAddressTypeRef)]\n\t\ttoRecipients[0].address = \"tr0A\"\n\t\ttoRecipients[0].name = \"tr0N\"\n\t\ttoRecipients[1].address = \"tr1A\"\n\t\ttoRecipients[1].name = \"tr1N\"\n\t\tlet ccRecipients = [createTestEntity(MailAddressTypeRef), createTestEntity(MailAddressTypeRef)]\n\t\tccRecipients[0].address = \"ccr0A\"\n\t\tccRecipients[0].name = \"ccr0N\"\n\t\tccRecipients[1].address = \"ccr1A\"\n\t\tccRecipients[1].name = \"ccr1N\"\n\t\tlet bccRecipients = [createTestEntity(MailAddressTypeRef), createTestEntity(MailAddressTypeRef)]\n\t\tbccRecipients[0].address = \"bccr0A\"\n\t\tbccRecipients[0].name = \"bccr0N\"\n\t\tbccRecipients[1].address = \"bccr1A\"\n\t\tbccRecipients[1].name = \"bccr1N\"\n\t\tlet replyTo = createTestEntity(EncryptedMailAddressTypeRef)\n\t\treplyTo.address = \"rToA\"\n\t\treplyTo.address = \"rToN\"\n\t\tlet sender = createTestEntity(MailAddressTypeRef)\n\t\tsender.address = \"SA\"\n\t\tsender.name = \"SN\"\n\t\tlet mail = createTestEntity(MailTypeRef)\n\t\tmail.differentEnvelopeSender = \"ES\" // not indexed\n\n\t\tmail.subject = \"Su\"\n\t\tconst recipients = createTestEntity(RecipientsTypeRef)\n\t\trecipients.bccRecipients = bccRecipients\n\t\trecipients.ccRecipients = ccRecipients\n\t\trecipients.toRecipients = toRecipients\n\n\t\tmail.sender = sender\n\t\tmail.mailDetails = [\"details-list-id\", \"details-id\"]\n\t\tlet mailDetails = createTestEntity(MailDetailsTypeRef, {\n\t\t\t_id: \"details-id\",\n\t\t\tbody: createTestEntity(BodyTypeRef, { text: \"BT\" }),\n\t\t\trecipients,\n\t\t\treplyTos: [replyTo],\n\t\t})\n\t\tlet files = [createTestEntity(FileTypeRef)]\n\t\tfiles[0].mimeType = \"binary\" // not indexed\n\n\t\tfiles[0].name = \"FN\"\n\t\tindexer.createMailIndexEntries(mail, mailDetails, files)\n\t\tlet args = core.createIndexEntriesForAttributes.args\n\t\to(args[0]).equals(mail)\n\t\tlet attributeHandlers = core.createIndexEntriesForAttributes.args[1]\n\t\tlet attributes = attributeHandlers.map((h) => {\n\t\t\treturn {\n\t\t\t\tattribute: h.attribute.id,\n\t\t\t\tvalue: h.value(),\n\t\t\t}\n\t\t})\n\t\tconst MailModel = await resolveTypeReference(MailTypeRef)\n\t\to(JSON.stringify(attributes)).equals(\n\t\t\tJSON.stringify([\n\t\t\t\t{\n\t\t\t\t\tattribute: MailModel.values[\"subject\"].id,\n\t\t\t\t\tvalue: \"Su\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tattribute: LEGACY_TO_RECIPIENTS_ID,\n\t\t\t\t\tvalue: \"tr0N <tr0A>,tr1N <tr1A>\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tattribute: LEGACY_CC_RECIPIENTS_ID,\n\t\t\t\t\tvalue: \"ccr0N <ccr0A>,ccr1N <ccr1A>\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tattribute: LEGACY_BCC_RECIPIENTS_ID,\n\t\t\t\t\tvalue: \"bccr0N <bccr0A>,bccr1N <bccr1A>\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tattribute: MailModel.associations[\"sender\"].id,\n\t\t\t\t\tvalue: \"SN <SA>\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tattribute: LEGACY_BODY_ID,\n\t\t\t\t\tvalue: \"BT\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tattribute: MailModel.associations[\"attachments\"].id,\n\t\t\t\t\tvalue: \"FN\",\n\t\t\t\t},\n\t\t\t]),\n\t\t)\n\t})\n\to(\"processNewMail\", function () {\n\t\tconst [mailListId, mailElementId] = [\"mail-list-id\", \"mail-element-id\"]\n\t\tconst { mail, mailDetailsBlob, files } = createMailInstances(\n\t\t\tmailFacade,\n\t\t\t[mailListId, mailElementId],\n\t\t\t[\"details-list-id\", \"details-id\"],\n\t\t\t[\"file-list-id\", \"file-id\"],\n\t\t)\n\t\tlet keyToIndexEntries = new Map()\n\t\tlet event: EntityUpdate = {\n\t\t\tinstanceListId: mailListId,\n\t\t\tinstanceId: mailElementId,\n\t\t} as any\n\t\tentityMock.addListInstances(mail, ...files)\n\t\tentityMock.addBlobInstances(mailDetailsBlob)\n\t\tlet indexer = mock(new MailIndexer(null as any, dbMock, null as any, () => bulkMailLoader, entityClient, dateProvider, mailFacade), (mocked) => {\n\t\t\tmocked.createMailIndexEntries = spy((mailParam, detailsParam, filesParam) => {\n\t\t\t\to(mailParam).deepEquals(mail)\n\t\t\t\to(detailsParam).deepEquals(mailDetailsBlob.details)\n\t\t\t\to(filesParam).deepEquals(files)\n\t\t\t\treturn keyToIndexEntries\n\t\t\t})\n\t\t})\n\t\treturn indexer.processNewMail([event.instanceListId, event.instanceId]).then((result) => {\n\t\t\to(indexer.createMailIndexEntries.callCount).equals(1)\n\t\t\to(result).deepEquals({\n\t\t\t\tmail,\n\t\t\t\tkeyToIndexEntries,\n\t\t\t})\n\t\t})\n\t})\n\to(\"processNewMail catches NotFoundError\", async function () {\n\t\tconst indexer = new MailIndexer(null as any, null as any, null as any, () => bulkMailLoader, entityClient, dateProvider, mailFacade)\n\t\tlet event: EntityUpdate = {\n\t\t\tinstanceListId: \"lid\",\n\t\t\tinstanceId: \"eid\",\n\t\t} as any\n\t\tconst result = await indexer.processNewMail([event.instanceListId, event.instanceId])\n\t\to(result).equals(null)\n\t})\n\to(\"processNewMail catches NotAuthorizedError\", function () {\n\t\tentityMock.setElementException(\"eid\", new NotAuthorizedError(\"blah\"))\n\t\tconst indexer = new MailIndexer(null as any, null as any, null as any, () => bulkMailLoader, entityClient, dateProvider, mailFacade)\n\t\tlet event: EntityUpdate = {\n\t\t\tinstanceListId: \"lid\",\n\t\t\tinstanceId: \"eid\",\n\t\t} as any\n\t\treturn indexer.processNewMail([event.instanceListId, event.instanceId]).then((result) => {\n\t\t\to(result).equals(null)\n\t\t})\n\t})\n\to(\"processNewMail passes other Errors\", async function () {\n\t\tentityMock.setListElementException([\"lid\", \"eid\"], new Error(\"blah\"))\n\t\tconst indexer = new MailIndexer(null as any, null as any, null as any, () => bulkMailLoader, entityClient, dateProvider, mailFacade)\n\t\tlet event: EntityUpdate = {\n\t\t\tinstanceListId: \"lid\",\n\t\t\tinstanceId: \"eid\",\n\t\t} as any\n\t\tawait o(() => indexer.processNewMail([event.instanceListId, event.instanceId])).asyncThrows(Error)\n\t})\n\to(\"processMovedMail\", async function () {\n\t\tlet event: EntityUpdate = {\n\t\t\tinstanceListId: \"new-list-id\",\n\t\t\tinstanceId: \"eid\",\n\t\t} as any\n\t\tlet elementData: ElementDataDbRow = [\"old-list-id\", new Uint8Array(0), \"owner-group-id\"]\n\t\tlet db: Db = {\n\t\t\tkey: aes256RandomKey(),\n\t\t\tiv: fixedIv,\n\t\t\tdbFacade: {\n\t\t\t\tcreateTransaction: () => Promise.resolve(transaction),\n\t\t\t},\n\t\t} as any\n\t\tlet encInstanceId = encryptIndexKeyBase64(db.key, event.instanceId, fixedIv)\n\t\tlet transaction = {\n\t\t\tget: (os, id) => {\n\t\t\t\to(os).equals(ElementDataOS)\n\t\t\t\to(Array.from(id)).deepEquals(Array.from(encInstanceId))\n\t\t\t\treturn Promise.resolve(elementData)\n\t\t\t},\n\t\t}\n\t\tconst indexer = new MailIndexer(null as any, db, null as any, null as any, null as any, dateProvider, mailFacade)\n\n\t\tlet indexUpdate = _createNewIndexUpdate(typeRefToTypeInfo(MailTypeRef))\n\n\t\tawait indexer.processMovedMail(event, indexUpdate)\n\t\to(indexUpdate.move.length).equals(1)\n\t\to(Array.from(indexUpdate.move[0].encInstanceId)).deepEquals(Array.from(encInstanceId))\n\t\to(indexUpdate.move[0].newListId).equals(event.instanceListId)\n\t})\n\to(\"processMovedMail that does not exist\", async function () {\n\t\tlet transaction = {\n\t\t\tget: (os, id) => {\n\t\t\t\to(os).equals(ElementDataOS)\n\t\t\t\to(Array.from(id)).deepEquals(Array.from(encInstanceId))\n\t\t\t\treturn Promise.resolve(null)\n\t\t\t},\n\t\t}\n\t\tlet db: Db = {\n\t\t\tkey: aes256RandomKey(),\n\t\t\tiv: fixedIv,\n\t\t\tdbFacade: {\n\t\t\t\tcreateTransaction: () => Promise.resolve(transaction),\n\t\t\t},\n\t\t} as any\n\t\tlet event: EntityUpdate = {\n\t\t\tinstanceListId: \"new-list-id\",\n\t\t\tinstanceId: \"eid\",\n\t\t} as any\n\t\tlet encInstanceId = encryptIndexKeyBase64(db.key, event.instanceId, fixedIv)\n\t\tconst core: any = {\n\t\t\tencryptSearchIndexEntries: spy(),\n\t\t}\n\t\tconst indexer: any = new MailIndexer(core, db, null as any, null as any, null as any, dateProvider, mailFacade)\n\t\tlet result = {\n\t\t\tmail: {\n\t\t\t\t_id: \"mail-id\",\n\t\t\t\t_ownerGroup: \"owner-group\",\n\t\t\t},\n\t\t\tkeyToIndexEntries: new Map(),\n\t\t}\n\t\tindexer.processNewMail = spy(() => Promise.resolve(result))\n\n\t\tlet indexUpdate = _createNewIndexUpdate(typeRefToTypeInfo(MailTypeRef))\n\n\t\tawait indexer.processMovedMail(event, indexUpdate)\n\t\to(indexUpdate.move.length).equals(0)\n\t\to(indexer.processNewMail.callCount).equals(1)\n\t\to(core.encryptSearchIndexEntries.callCount).equals(1)\n\t\to(core.encryptSearchIndexEntries.args).deepEquals([result.mail._id, result.mail._ownerGroup, result.keyToIndexEntries, indexUpdate])\n\t})\n\to(\"enableMailIndexing\", async function () {\n\t\tlet metadata = {}\n\t\tlet transaction = {\n\t\t\tget: (os, key) => {\n\t\t\t\to(os).equals(MetaDataOS)\n\t\t\t\to(key).equals(MetaData.mailIndexingEnabled)\n\t\t\t\treturn Promise.resolve(false)\n\t\t\t},\n\t\t\tput: (os, key, value) => {\n\t\t\t\to(os).equals(MetaDataOS)\n\t\t\t\tmetadata[key] = value\n\t\t\t},\n\t\t\twait: () => Promise.resolve(),\n\t\t}\n\t\tlet user = createTestEntity(UserTypeRef)\n\t\tuser.memberships.push(createTestEntity(GroupMembershipTypeRef))\n\t\tuser.memberships[0].groupType = GroupType.Mail\n\t\tlet spamFolder = createTestEntity(MailFolderTypeRef)\n\t\tspamFolder.mails = \"mail-list-id\"\n\t\tlet db: Db = {\n\t\t\tkey: aes256RandomKey(),\n\t\t\tdbFacade: {\n\t\t\t\tcreateTransaction: () => Promise.resolve(transaction),\n\t\t\t},\n\t\t} as any\n\t\t// There was a timezone shift in Germany in this time range\n\t\tconst now = 1554720827674 // 2019-04-08T10:53:47.674Z\n\n\t\tconst beforeNowInterval = 1552262400000 // 2019-03-11T00:00:00.000Z\n\n\t\tconst dateProvider = new FixedDateProvider(now)\n\t\tconst indexer = mock(new MailIndexer(null as any, db, null as any, null as any, null as any, dateProvider, mailFacade), (mocked) => {\n\t\t\tmocked.indexMailboxes = spy(() => Promise.resolve())\n\t\t\tmocked.mailIndexingEnabled = false\n\n\t\t\tmocked._getSpamFolder = (membership) => {\n\t\t\t\to(membership).deepEquals(user.memberships[0])\n\t\t\t\treturn spamFolder\n\t\t\t}\n\t\t})\n\t\tawait indexer.enableMailIndexing(user)\n\t\to(indexer.indexMailboxes.invocations[0]).deepEquals([user, beforeNowInterval])\n\t\to(indexer.mailIndexingEnabled).equals(true)\n\t\to(JSON.stringify(metadata)).equals(\n\t\t\tJSON.stringify({\n\t\t\t\t[MetaData.mailIndexingEnabled]: true,\n\t\t\t\t[MetaData.excludedListIds]: [],\n\t\t\t}),\n\t\t)\n\t})\n\to(\"enableMailIndexing already enabled\", async function () {\n\t\tlet transaction = {\n\t\t\tget: (os, key) => {\n\t\t\t\to(os).equals(MetaDataOS)\n\n\t\t\t\tif (key == MetaData.mailIndexingEnabled) {\n\t\t\t\t\treturn Promise.resolve(true)\n\t\t\t\t} else if (key == MetaData.excludedListIds) {\n\t\t\t\t\treturn Promise.resolve([])\n\t\t\t\t}\n\n\t\t\t\tthrow new Error(\"wrong key / os\")\n\t\t\t},\n\t\t}\n\t\tlet db: Db = {\n\t\t\tkey: aes256RandomKey(),\n\t\t\tdbFacade: {\n\t\t\t\tcreateTransaction: () => Promise.resolve(transaction),\n\t\t\t},\n\t\t} as any\n\t\tconst indexer: any = new MailIndexer(null as any, db, null as any, null as any, null as any, dateProvider, mailFacade)\n\t\tindexer.indexMailboxes = spy()\n\t\tindexer.mailIndexingEnabled = false\n\t\tlet user = createTestEntity(UserTypeRef)\n\t\tawait await indexer.enableMailIndexing(user)\n\t\to(indexer.indexMailboxes.callCount).equals(0)\n\t\to(indexer.mailIndexingEnabled).equals(true)\n\t})\n\to(\"disableMailIndexing\", function () {\n\t\tlet db: Db = {\n\t\t\tkey: aes256RandomKey(),\n\t\t\tdbFacade: {\n\t\t\t\tdeleteDatabase: spy(),\n\t\t\t},\n\t\t} as any\n\t\tconst indexer: any = new MailIndexer(null as any, db, null as any, null as any, null as any, dateProvider, mailFacade)\n\t\tindexer.mailIndexingEnabled = true\n\t\tindexer.disableMailIndexing()\n\t\to(indexer.mailIndexingEnabled).equals(false)\n\t\t// @ts-ignore\n\t\to(db.dbFacade.deleteDatabase.callCount).equals(1)\n\t})\n\to(\"indexMailboxes disabled\", async function () {\n\t\tconst indexer = mock(new MailIndexer(null as any, null as any, null as any, () => bulkMailLoader, entityClient, dateProvider, mailFacade), (mocked) => {\n\t\t\tmocked.mailIndexingEnabled = false\n\t\t})\n\t\tawait indexer.indexMailboxes(createTestEntity(UserTypeRef), 1512946800000)\n\t})\n\to.spec(\"indexMailboxes\", function () {\n\t\to(\"initial indexing\", function () {\n\t\t\treturn indexMailboxTest(NOTHING_INDEXED_TIMESTAMP, 1512946800000, true, true)\n\t\t})\n\t\to(\"further indexing\", function () {\n\t\t\treturn indexMailboxTest(1513033200000, 1512946800000, false, true)\n\t\t})\n\t\to(\"fully indexed\", function () {\n\t\t\treturn indexMailboxTest(FULL_INDEXED_TIMESTAMP, 1512946800000, true, false)\n\t\t})\n\t})\n\n\tfunction _addFolder(mailbox: MailBox): MailFolder {\n\t\tconst folder = createTestEntity(MailFolderTypeRef)\n\t\tfolder._id = [neverNull(mailbox.folders).folders, entityMock.getNextId()]\n\t\tfolder.mails = entityMock.getNextId()\n\t\treturn folder\n\t}\n\n\to.spec(\"_indexMailLists\", function () {\n\t\t// now                                  now - 28d      now - 29d       now - 30d\n\t\t//  |--------------------------------------|---------------|---------------|\n\t\t//  rangeStart                           rangeEnd      rangeEnd2          rangeEndShifted2Days\n\t\t//                     m4    m3        m2     m1                            m0\n\t\tconst rangeStart = 1554415200000\n\t\t// Simulating time zone changes by adding/subtracting one hour\n\t\tconst rangeEnd = getDayShifted(new Date(rangeStart), -INITIAL_MAIL_INDEX_INTERVAL_DAYS).getTime() + 60 * 60 * 1000\n\t\tconst rangeEnd2 = getDayShifted(new Date(rangeEnd), -1).getTime() - 60 * 60 * 1000\n\t\tconst rangeEndShifted2Days = getDayShifted(new Date(rangeEnd), -2).getTime()\n\t\tconst mailGroup = \"mail-group-id\"\n\t\tlet mailbox: MailBox\n\t\tlet folder1, folder2\n\t\tlet mail0, details0, mail1, details1, mail2, details2, files, mail3, details3, mail4, details4\n\t\tlet transaction, core, indexer, db\n\t\to.beforeEach(() => {\n\t\t\tmailbox = createTestEntity(MailBoxTypeRef)\n\t\t\tmailbox._id = \"mailbox-id\"\n\t\t\tmailbox._ownerGroup = mailGroup\n\t\t\tconst folderRef = createTestEntity(MailFolderRefTypeRef)\n\t\t\tfolderRef.folders = entityMock.getNextId()\n\t\t\tmailbox.folders = folderRef\n\t\t\tfolder1 = _addFolder(mailbox)\n\t\t\tfolder2 = _addFolder(mailbox)\n\t\t\t;({ mail: mail0, mailDetailsBlob: details0 } = createMailInstances(\n\t\t\t\tmailFacade,\n\t\t\t\t[folder1.mails, timestampToGeneratedId(rangeEndShifted2Days, 1)],\n\t\t\t\t[\"details-list-id\", entityMock.getNextId()],\n\t\t\t))\n\t\t\t;({ mail: mail1, mailDetailsBlob: details1 } = createMailInstances(\n\t\t\t\tmailFacade,\n\t\t\t\t[folder1.mails, timestampToGeneratedId(rangeEnd - 1, 1)],\n\t\t\t\t[\"details-list-id\", entityMock.getNextId()],\n\t\t\t))\n\t\t\t;({\n\t\t\t\tmail: mail2,\n\t\t\t\tmailDetailsBlob: details2,\n\t\t\t\tfiles,\n\t\t\t} = createMailInstances(\n\t\t\t\tmailFacade,\n\t\t\t\t[folder1.mails, timestampToGeneratedId(rangeEnd + 1, 1)],\n\t\t\t\t[\"details-list-id\", entityMock.getNextId()],\n\t\t\t\t[\"attachment-listId\", entityMock.getNextId()],\n\t\t\t\t[\"attachment-listId1\", entityMock.getNextId()],\n\t\t\t))\n\t\t\t;({ mail: mail3, mailDetailsBlob: details3 } = createMailInstances(\n\t\t\t\tmailFacade,\n\t\t\t\t[folder1.mails, timestampToGeneratedId(rangeEnd + 3 * 24 * 60 * 60 * 1000, 1)],\n\t\t\t\t[\"details-list-id\", entityMock.getNextId()],\n\t\t\t))\n\t\t\t;({ mail: mail4, mailDetailsBlob: details4 } = createMailInstances(\n\t\t\t\tmailFacade,\n\t\t\t\t[folder2.mails, timestampToGeneratedId(rangeEnd + 5, 1)],\n\t\t\t\t[\"details-list-id\", entityMock.getNextId()],\n\t\t\t))\n\t\t\tentityMock.addBlobInstances(details0, details1, details2, details3, details4)\n\t\t\tentityMock.addElementInstances(mailbox)\n\t\t\tentityMock.addListInstances(mail0, mail1, mail2, mail3, mail4, folder1, folder2, ...files)\n\t\t\ttransaction = createSearchIndexDbStub().createTransaction()\n\t\t\tdb = {\n\t\t\t\tkey: aes256RandomKey(),\n\t\t\t\tiv: fixedIv,\n\t\t\t\tdbFacade: {\n\t\t\t\t\tcreateTransaction: () => Promise.resolve(transaction),\n\t\t\t\t},\n\t\t\t} as any\n\t\t\tcore = mock(\n\t\t\t\tnew IndexerCore(\n\t\t\t\t\tdb,\n\t\t\t\t\t{\n\t\t\t\t\t\tqueueEvents: false,\n\t\t\t\t\t} as any,\n\t\t\t\t\tbrowserDataStub,\n\t\t\t\t),\n\t\t\t\t(mocked) => {\n\t\t\t\t\tmocked.writeIndexUpdate = spy(() => Promise.resolve())\n\t\t\t\t},\n\t\t\t)\n\t\t\tconst infoMessageHandler = object<InfoMessageHandler>()\n\t\t\tindexer = new MailIndexer(core, db, infoMessageHandler, () => bulkMailLoader, entityClient, dateProvider, mailFacade)\n\t\t})\n\t\to(\"one mailbox until certain point\", async function () {\n\t\t\ttransaction.put(GroupDataOS, mailGroup, {\n\t\t\t\tindexTimestamp: NOTHING_INDEXED_TIMESTAMP,\n\t\t\t})\n\t\t\t// initial indexing - first time range\n\t\t\tawait indexer._indexMailLists(\n\t\t\t\t[\n\t\t\t\t\t{\n\t\t\t\t\t\tmbox: mailbox,\n\t\t\t\t\t\tnewestTimestamp: rangeStart,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\trangeEnd,\n\t\t\t)\n\t\t\to(core.writeIndexUpdate.callCount).equals(1)\n\t\t\tconst [mailboxesData1, indexUpdate1] = core.writeIndexUpdate.args\n\t\t\to(indexUpdate1.create.encInstanceIdToElementData.size).equals(3)\n\n\t\t\t_checkMailsInIndexUpdate(db, indexUpdate1, mail2, mail3, mail4)\n\n\t\t\to(mailboxesData1).deepEquals([\n\t\t\t\t{\n\t\t\t\t\tgroupId: mailGroup,\n\t\t\t\t\tindexTimestamp: rangeEnd,\n\t\t\t\t},\n\t\t\t])\n\t\t})\n\t\to(\"one mailbox extend once\", async function () {\n\t\t\ttransaction.put(GroupDataOS, mailGroup, {\n\t\t\t\tindexTimestamp: rangeEnd,\n\t\t\t})\n\t\t\t// next index update - continue indexing\n\t\t\tawait indexer._indexMailLists(\n\t\t\t\t[\n\t\t\t\t\t{\n\t\t\t\t\t\tmbox: mailbox,\n\t\t\t\t\t\tnewestTimestamp: rangeEnd,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\trangeEnd2,\n\t\t\t)\n\t\t\tconst [mailboxesData2, indexUpdateNew2] = core.writeIndexUpdate.args\n\n\t\t\t_checkMailsInIndexUpdate(db, indexUpdateNew2, mail1)\n\n\t\t\to(mailboxesData2).deepEquals([\n\t\t\t\t{\n\t\t\t\t\tgroupId: mailGroup,\n\t\t\t\t\tindexTimestamp: rangeEnd2,\n\t\t\t\t},\n\t\t\t])\n\t\t})\n\t\to(\"one mailbox extend till end\", async function () {\n\t\t\ttransaction.put(GroupDataOS, mailGroup, {\n\t\t\t\tindexTimestamp: rangeEnd2,\n\t\t\t})\n\t\t\t// next index update - finish indexing\n\t\t\tconst rangeEnd3 = getDayShifted(new Date(rangeEnd2), -1).getTime()\n\t\t\tawait indexer._indexMailLists(\n\t\t\t\t[\n\t\t\t\t\t{\n\t\t\t\t\t\tmbox: mailbox,\n\t\t\t\t\t\tnewestTimestamp: rangeEnd2,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\trangeEnd3,\n\t\t\t)\n\t\t\tconst [mailboxesData3, indexUpdateNew3] = core.writeIndexUpdate.args\n\n\t\t\t_checkMailsInIndexUpdate(db, indexUpdateNew3, mail0)\n\n\t\t\to(mailboxesData3).deepEquals([\n\t\t\t\t{\n\t\t\t\t\tgroupId: mailGroup,\n\t\t\t\t\tindexTimestamp: FULL_INDEXED_TIMESTAMP,\n\t\t\t\t},\n\t\t\t])\n\t\t})\n\t})\n\n\tfunction _checkMailsInIndexUpdate(db: Db, indexUpdate: IndexUpdate, ...includedMails: Array<Mail>) {\n\t\tfor (const [index, mail] of includedMails.entries()) {\n\t\t\tlet encInstanceId = encryptIndexKeyBase64(db.key, getElementId(mail), fixedIv)\n\n\t\t\tif (indexUpdate.create.encInstanceIdToElementData.get(encInstanceId) == null) {\n\t\t\t\tconsole.error(\"mail is not written\", mail._id, index)\n\t\t\t}\n\n\t\t\to(indexUpdate.create.encInstanceIdToElementData.get(encInstanceId) != null).equals(true)\n\t\t}\n\t}\n\n\to.spec(\"processEntityEvents\", function () {\n\t\tlet indexUpdate: IndexUpdate\n\t\to.beforeEach(function () {\n\t\t\tindexUpdate = _createNewIndexUpdate(typeRefToTypeInfo(MailTypeRef))\n\t\t})\n\t\to(\"do nothing if mailIndexing is disabled\", async function () {\n\t\t\tconst indexer = _prepareProcessEntityTests(false)\n\n\t\t\tlet events = [\n\t\t\t\tcreateUpdate(OperationType.CREATE, \"mail-list\", \"1\"),\n\t\t\t\tcreateUpdate(OperationType.UPDATE, \"mail-list\", \"2\"),\n\t\t\t\tcreateUpdate(OperationType.DELETE, \"mail-list\", \"3\"),\n\t\t\t]\n\t\t\tawait indexer.processEntityEvents(events, \"group-id\", \"batch-id\", indexUpdate)\n\t\t\t// nothing changed\n\t\t\to(indexUpdate.create.encInstanceIdToElementData.size).equals(0)\n\t\t\to(indexUpdate.move.length).equals(0)\n\t\t\to(indexUpdate.delete.encInstanceIds.length).equals(0)\n\t\t})\n\t\to(\"new mail\", async function () {\n\t\t\tconst indexer = _prepareProcessEntityTests(true)\n\n\t\t\tlet events = [createUpdate(OperationType.CREATE, \"new-mail-list\", mailId)]\n\t\t\tawait indexer.processEntityEvents(events, \"group-id\", \"batch-id\", indexUpdate)\n\t\t\t// nothing changed\n\t\t\t// @ts-ignore\n\t\t\to(indexer.processNewMail.invocations.length).equals(1)\n\t\t\to(indexUpdate.create.encInstanceIdToElementData.size).equals(1)\n\t\t\to(indexUpdate.move.length).equals(0)\n\t\t\t// @ts-ignore\n\t\t\to(indexer._core._processDeleted.callCount).equals(0)\n\t\t})\n\t\to(\"moved mail\", async function () {\n\t\t\tconst indexer = _prepareProcessEntityTests(true)\n\n\t\t\tlet events = [createUpdate(OperationType.CREATE, \"new-mail-list\", mailId), createUpdate(OperationType.DELETE, \"old-mail-list\", mailId)]\n\t\t\tawait indexer.processEntityEvents(events, \"group-id\", \"batch-id\", indexUpdate)\n\t\t\t// nothing changed\n\t\t\to(indexUpdate.create.encInstanceIdToElementData.size).equals(0)\n\t\t\t// @ts-ignore\n\t\t\to(indexer.processMovedMail.invocations.length).equals(1)\n\t\t\t// @ts-ignore\n\t\t\to(indexer.processMovedMail.invocations[0]).deepEquals([events[0], indexUpdate])\n\t\t\t// @ts-ignore\n\t\t\to(indexer._core._processDeleted.callCount).equals(0)\n\t\t})\n\t\to(\"deleted mail\", async function () {\n\t\t\tconst indexer = _prepareProcessEntityTests(true)\n\n\t\t\tlet events = [createUpdate(OperationType.DELETE, \"mail-list\", mailId)]\n\t\t\tawait indexer.processEntityEvents(events, \"group-id\", \"batch-id\", indexUpdate)\n\t\t\to(indexUpdate.create.encInstanceIdToElementData.size).equals(0)\n\t\t\to(indexUpdate.move.length).equals(0)\n\t\t\t// @ts-ignore\n\t\t\to(indexer._core._processDeleted.callCount).equals(1)\n\t\t\t// @ts-ignore\n\t\t\to(indexer._core._processDeleted.args).deepEquals([events[0], indexUpdate])\n\t\t})\n\t\to(\"update draft\", async function () {\n\t\t\tconst indexer = _prepareProcessEntityTests(true, MailState.DRAFT)\n\n\t\t\tlet events = [createUpdate(OperationType.UPDATE, \"new-mail-list\", mailId)]\n\t\t\tawait indexer.processEntityEvents(events, \"group-id\", \"batch-id\", indexUpdate)\n\t\t\to(indexUpdate.create.encInstanceIdToElementData.size).equals(1)\n\t\t\to(indexUpdate.move.length).equals(0)\n\t\t\t// @ts-ignore\n\t\t\to(indexer._core._processDeleted.callCount).equals(1)\n\t\t\t// @ts-ignore\n\t\t\to(indexer._core._processDeleted.args).deepEquals([events[0], indexUpdate])\n\t\t})\n\t\to(\"don't update non-drafts\", async function () {\n\t\t\tconst indexer = _prepareProcessEntityTests(true, MailState.RECEIVED)\n\n\t\t\tlet events = [createUpdate(OperationType.UPDATE, \"new-mail-list\", mailId)]\n\t\t\tawait indexer.processEntityEvents(events, \"group-id\", \"batch-id\", indexUpdate)\n\t\t\to(indexUpdate.create.encInstanceIdToElementData.size).equals(0)\n\t\t\to(indexUpdate.move.length).equals(0)\n\t\t\t// @ts-ignore\n\t\t\to(indexer._core._processDeleted.callCount).equals(0)\n\t\t})\n\t})\n\to(\"_getCurrentIndexTimestamp\", () => {\n\t\to(NOTHING_INDEXED_TIMESTAMP).equals(_getCurrentIndexTimestamp([]))\n\t\to(NOTHING_INDEXED_TIMESTAMP).equals(_getCurrentIndexTimestamp([NOTHING_INDEXED_TIMESTAMP]))\n\t\to(FULL_INDEXED_TIMESTAMP).equals(_getCurrentIndexTimestamp([FULL_INDEXED_TIMESTAMP]))\n\t\tlet now = new Date().getTime()\n\t\tlet past = now - 1000\n\t\to(now).equals(_getCurrentIndexTimestamp([now]))\n\t\to(past).equals(_getCurrentIndexTimestamp([now, past]))\n\t\to(past).equals(_getCurrentIndexTimestamp([past, now]))\n\t\to(now).equals(_getCurrentIndexTimestamp([now, now]))\n\t\to(now).equals(_getCurrentIndexTimestamp([NOTHING_INDEXED_TIMESTAMP, now]))\n\t\to(now).equals(_getCurrentIndexTimestamp([now, NOTHING_INDEXED_TIMESTAMP]))\n\t\to(now).equals(_getCurrentIndexTimestamp([FULL_INDEXED_TIMESTAMP, now]))\n\t\to(now).equals(_getCurrentIndexTimestamp([now, FULL_INDEXED_TIMESTAMP]))\n\t\to(FULL_INDEXED_TIMESTAMP).equals(_getCurrentIndexTimestamp([FULL_INDEXED_TIMESTAMP, NOTHING_INDEXED_TIMESTAMP]))\n\t\to(FULL_INDEXED_TIMESTAMP).equals(_getCurrentIndexTimestamp([NOTHING_INDEXED_TIMESTAMP, FULL_INDEXED_TIMESTAMP]))\n\t\to(now).equals(_getCurrentIndexTimestamp([NOTHING_INDEXED_TIMESTAMP, now, FULL_INDEXED_TIMESTAMP, now]))\n\t\to(now).equals(_getCurrentIndexTimestamp([now, NOTHING_INDEXED_TIMESTAMP, now, FULL_INDEXED_TIMESTAMP]))\n\t\to(now).equals(_getCurrentIndexTimestamp([now, FULL_INDEXED_TIMESTAMP, NOTHING_INDEXED_TIMESTAMP]))\n\t})\n\to.spec(\"extendIndexIfNeeded\", function () {\n\t\to(\"not extends if fully indexed\", function () {\n\t\t\tconst core = makeCore()\n\t\t\tconst db = null as any\n\t\t\tconst worker = null as any\n\t\t\tconst indexer = new MailIndexer(core, db, worker, () => bulkMailLoader, entityClient, dateProvider, mailFacade)\n\t\t\tconst user = null as any\n\t\t\tindexer.currentIndexTimestamp = FULL_INDEXED_TIMESTAMP\n\t\t\t// Would blow up if we started indexing because we passed nulls\n\t\t\treturn indexer.extendIndexIfNeeded(user, Date.now())\n\t\t})\n\t\to(\"not extends if already indexed range\", function () {\n\t\t\tconst core = makeCore()\n\t\t\tconst db = null as any\n\t\t\tconst worker = null as any\n\t\t\tconst indexer = new MailIndexer(core, db, worker, () => bulkMailLoader, entityClient, dateProvider, mailFacade)\n\t\t\tconst user = null as any\n\t\t\tconst newOldTimestamp = Date.now()\n\t\t\tindexer.currentIndexTimestamp = newOldTimestamp - 1000\n\t\t\t// Would blow up if we started indexing because we passed nulls\n\t\t\treturn indexer.extendIndexIfNeeded(user, newOldTimestamp)\n\t\t})\n\t\to(\"extends\", async function () {\n\t\t\tconst user = createTestEntity(UserTypeRef)\n\t\t\tconst currentIndexTimestamp = 1554720827674 // 2019-04-08T10:53:47.674Z\n\n\t\t\tconst beforeNowInterval = 1552262400000 // 2019-03-11T00:00:00.000Z\n\n\t\t\tconst dateProvider = new FixedDateProvider(currentIndexTimestamp)\n\t\t\tconst indexer = mock(\n\t\t\t\tnew MailIndexer(null as any, null as any, null as any, () => bulkMailLoader, entityClient, dateProvider, mailFacade),\n\t\t\t\t(mocked) => {\n\t\t\t\t\tmocked.indexMailboxes = spy(() => Promise.resolve())\n\t\t\t\t},\n\t\t\t)\n\t\t\tindexer.currentIndexTimestamp = currentIndexTimestamp\n\t\t\tawait indexer.extendIndexIfNeeded(user, beforeNowInterval)\n\t\t\t// @ts-ignore\n\t\t\to(indexer.indexMailboxes.invocations).deepEquals([\n\t\t\t\t// Start of the day\n\t\t\t\t[user, beforeNowInterval],\n\t\t\t])\n\t\t})\n\t})\n\n\to.spec(\"check mail index compatibility with models\", function () {\n\t\t// if this test fails, you need to think about migrating (or dropping)\n\t\t// so old mail indexes use the new attribute ids.\n\t\to(\"mail does not have an attribute with id LEGACY_TO_RECIPIENTS_ID\", function () {\n\t\t\to(Object.values(typeModels.Mail.associations).filter((v: any) => v.id === LEGACY_TO_RECIPIENTS_ID).length).equals(0)\n\t\t})\n\t\to(\"recipients does not have an attribute with id LEGACY_TO_RECIPIENTS_ID\", function () {\n\t\t\to(Object.values(typeModels.Recipients.associations).filter((v: any) => v.id === LEGACY_TO_RECIPIENTS_ID).length).equals(0)\n\t\t})\n\t\to(\"mail does not have an attribute with id LEGACY_BODY_ID\", function () {\n\t\t\to(Object.values(typeModels.Mail.associations).filter((v: any) => v.id === LEGACY_BODY_ID).length).equals(0)\n\t\t})\n\t\to(\"maildetails does not have an attribute with id LEGACY_BODY_ID\", function () {\n\t\t\to(Object.values(typeModels.MailDetails.associations).filter((v: any) => v.id === LEGACY_BODY_ID).length).equals(0)\n\t\t})\n\t\to(\"mail does not have an attribute with id LEGACY_CC_RECIPIENTS_ID\", function () {\n\t\t\to(Object.values(typeModels.Mail.associations).filter((v: any) => v.id === LEGACY_CC_RECIPIENTS_ID).length).equals(0)\n\t\t})\n\t\to(\"maildetails does not have an attribute with id LEGACY_CC_RECIPIENTS_ID\", function () {\n\t\t\to(Object.values(typeModels.MailDetails.associations).filter((v: any) => v.id === LEGACY_CC_RECIPIENTS_ID).length).equals(0)\n\t\t})\n\t\to(\"mail does not have an attribute with id LEGACY_BCC_RECIPIENTS_ID\", function () {\n\t\t\to(Object.values(typeModels.Mail.associations).filter((v: any) => v.id === LEGACY_BCC_RECIPIENTS_ID).length).equals(0)\n\t\t})\n\t\to(\"maildetails does not have an attribute with id LEGACY_BCC_RECIPIENTS_ID\", function () {\n\t\t\to(Object.values(typeModels.MailDetails.associations).filter((v: any) => v.id === LEGACY_BCC_RECIPIENTS_ID).length).equals(0)\n\t\t})\n\t})\n})\n\nfunction createUpdate(type: OperationType, listId: Id, instanceId: Id, eventId?: Id) {\n\tlet update = createTestEntity(EntityUpdateTypeRef)\n\tupdate.operation = type\n\tupdate.instanceListId = listId\n\tupdate.instanceId = instanceId\n\n\tif (eventId) {\n\t\tupdate._id = eventId\n\t}\n\n\treturn update\n}\n\nasync function indexMailboxTest(startTimestamp: number, endIndexTimstamp: number, fullyIndexed: boolean, indexMailList: boolean) {\n\tlet user = createTestEntity(UserTypeRef)\n\tuser.memberships.push(createTestEntity(GroupMembershipTypeRef))\n\tuser.memberships[0].groupType = GroupType.Mail\n\tuser.memberships[0].group = \"mail-group-id\"\n\tlet mailboxGroupRoot = createTestEntity(MailboxGroupRootTypeRef)\n\tmailboxGroupRoot.mailbox = \"mailbox-id\"\n\tconst groupId = user.memberships[0].group\n\tmailboxGroupRoot._id = groupId\n\tlet mailbox = createTestEntity(MailBoxTypeRef)\n\tlet mailListId = [\"mail-list-id\"]\n\tmailbox._id = \"mailbox-id\"\n\tconst entityMock = new EntityRestClientMock()\n\tentityMock.addElementInstances(mailbox, mailboxGroupRoot)\n\tconst dbMock = createSearchIndexDbStub()\n\tconst t = dbMock.createTransaction()\n\tlet groupData = {\n\t\tindexTimestamp: startTimestamp,\n\t}\n\tt.put(GroupDataOS, groupId, groupData)\n\tlet core: IndexerCore = downcast({\n\t\tprintStatus: () => {},\n\t\tqueue: mock(new EventQueue(\"mailindexer-queue\", true, () => Promise.resolve()), (mock) => {\n\t\t\tmock.pause = spy(mock.pause.bind(mock))\n\t\t\tmock.resume = spy(mock.resume.bind(mock))\n\t\t}),\n\t\t_stats: {},\n\t\tresetStats: () => {},\n\t})\n\tlet db: Db = {\n\t\tkey: aes256RandomKey(),\n\t\tdbFacade: {\n\t\t\tcreateTransaction: () => Promise.resolve(t),\n\t\t},\n\t\tiv: fixedIv,\n\t} as any\n\tconst infoMessageHandler = object<InfoMessageHandler>()\n\tconst entityClient = new EntityClient(entityMock)\n\tconst bulkMailLoader = new BulkMailLoader(entityClient, entityClient, null)\n\tconst indexer = mock(\n\t\tnew MailIndexer(core, db, infoMessageHandler, () => bulkMailLoader, entityClient, new LocalTimeDateProvider(), null as any),\n\t\t(mock) => {\n\t\t\tmock.mailIndexingEnabled = true\n\n\t\t\tmock._loadMailListIds = (mbox) => {\n\t\t\t\to(mbox).equals(mailbox)\n\t\t\t\treturn Promise.resolve([mailListId])\n\t\t\t}\n\n\t\t\tmock._indexMailLists = spy(() => Promise.resolve())\n\t\t},\n\t)\n\tconst indexPromise = indexer.indexMailboxes(user, endIndexTimstamp)\n\to(indexer.isIndexing).equals(true)\n\tawait indexPromise\n\t// @ts-ignore\n\to(indexer._core.queue.pause.invocations.length).equals(1)\n\t// @ts-ignore\n\to(indexer._core.queue.resume.invocations.length).equals(1)\n\to(indexer.isIndexing).equals(false)\n\n\tif (indexMailList) {\n\t\t// @ts-ignore\n\t\to(indexer._indexMailLists.callCount).equals(1)\n\t\t// @ts-ignore\n\t\tconst [mailData, oldestTimestamp] = indexer._indexMailLists.args\n\t\tconst expectedNewestTimestamp =\n\t\t\tgroupData.indexTimestamp === NOTHING_INDEXED_TIMESTAMP ? getDayShifted(getStartOfDay(new Date()), 1).getTime() : groupData.indexTimestamp\n\t\to(mailData).deepEquals([\n\t\t\t{\n\t\t\t\tmbox: mailbox,\n\t\t\t\tnewestTimestamp: expectedNewestTimestamp,\n\t\t\t},\n\t\t])\n\t\to(oldestTimestamp).deepEquals(endIndexTimstamp)\n\t} else {\n\t\t// @ts-ignore\n\t\to(indexer._indexMailLists.callCount).equals(0)\n\t}\n}\n\nfunction _prepareProcessEntityTests(indexingEnabled: boolean, mailState: MailState = MailState.RECEIVED): MailIndexer {\n\tlet transaction = {\n\t\tget: (os, id) => {\n\t\t\tlet elementData: ElementDataDbRow = [getListId(mail), new Uint8Array(0), \"group-id\"]\n\t\t\treturn Promise.resolve(elementData)\n\t\t},\n\t}\n\tlet db: Db = downcast({\n\t\tkey: aes256RandomKey(),\n\t\tiv: fixedIv,\n\t\tdbFacade: {\n\t\t\tcreateTransaction: () => Promise.resolve(transaction),\n\t\t},\n\t})\n\tlet core = mock(\n\t\tnew IndexerCore(\n\t\t\tdb,\n\t\t\t{\n\t\t\t\tqueueEvents: false,\n\t\t\t} as any,\n\t\t\tbrowserDataStub,\n\t\t),\n\t\t(mocked) => {\n\t\t\tmocked.writeIndexUpdate = spy()\n\t\t\tmocked._processDeleted = spy()\n\t\t},\n\t)\n\tlet mailFacade: MailFacade = object()\n\tconst { mail, mailDetailsBlob } = createMailInstances(mailFacade, [\"new-mail-list\", mailId], [\"details-list-id\", \"details-id\"])\n\tmail.state = mailState\n\tconst entityMock = new EntityRestClientMock()\n\tentityMock.addBlobInstances(mailDetailsBlob)\n\tentityMock.addListInstances(mail)\n\tconst entityClient = new EntityClient(entityMock)\n\tconst bulkMailLoader = new BulkMailLoader(entityClient, entityClient, null)\n\treturn mock(new MailIndexer(core, db, null as any, () => bulkMailLoader, entityClient, new LocalTimeDateProvider(), mailFacade), (mocked) => {\n\t\tmocked.processNewMail = spy(mocked.processNewMail.bind(mocked))\n\t\tmocked.processMovedMail = spy(mocked.processMovedMail.bind(mocked))\n\t\tmocked.mailIndexingEnabled = indexingEnabled\n\t})\n}\n\nfunction createMailInstances(\n\tmailFacade: MailFacade,\n\tmailId: IdTuple,\n\tmailDetailsBlobId: IdTuple,\n\t...attachmentIds: Array<IdTuple>\n): {\n\tmail: Mail\n\tmailDetailsBlob: MailDetailsBlob\n\tfiles: Array<TutanotaFile>\n} {\n\tlet mail = createTestEntity(MailTypeRef, {\n\t\t_id: mailId,\n\t\t_ownerEncSessionKey: new Uint8Array(),\n\t\tmailDetails: mailDetailsBlobId,\n\t\tattachments: attachmentIds,\n\t})\n\tlet mailDetailsBlob = createTestEntity(MailDetailsBlobTypeRef, {\n\t\t_id: mailDetailsBlobId,\n\t\tdetails: createTestEntity(MailDetailsTypeRef, {\n\t\t\tbody: createTestEntity(BodyTypeRef),\n\t\t\trecipients: createTestEntity(RecipientsTypeRef),\n\t\t}),\n\t})\n\tconst files = attachmentIds.map((id) => {\n\t\tconst file = createTestEntity(FileTypeRef)\n\t\tfile._id = id\n\t\treturn file\n\t})\n\twhen(mailFacade.loadAttachments(mail)).thenResolve(files)\n\treturn {\n\t\tmail,\n\t\tmailDetailsBlob,\n\t\tfiles: files,\n\t}\n}\n","import o from \"@tutao/otest\"\nimport {\n\t_createNewIndexUpdate,\n\tdecryptMetaData,\n\tdecryptSearchIndexEntry,\n\tencryptIndexKeyBase64,\n\tencryptIndexKeyUint8Array,\n\tencryptMetaData,\n\tencryptSearchIndexEntry,\n\tfilterIndexMemberships,\n\tfilterMailMemberships,\n\thtmlToText,\n\ttypeRefToTypeInfo,\n\tuserIsGlobalAdmin,\n} from \"../../../../../src/common/api/worker/search/IndexUtils.js\"\nimport { base64ToUint8Array, byteLength, concat, utf8Uint8ArrayToString } from \"@tutao/tutanota-utils\"\nimport type { SearchIndexEntry, SearchIndexMetaDataRow } from \"../../../../../src/common/api/worker/search/SearchTypes.js\"\nimport { EntityUpdateTypeRef, GroupMembershipTypeRef, UserTypeRef } from \"../../../../../src/common/api/entities/sys/TypeRefs.js\"\nimport { ContactTypeRef, MailTypeRef } from \"../../../../../src/common/api/entities/tutanota/TypeRefs.js\"\nimport { GroupType, OperationType } from \"../../../../../src/common/api/common/TutanotaConstants.js\"\nimport { aes256RandomKey, fixedIv, unauthenticatedAesDecrypt } from \"@tutao/tutanota-crypto\"\nimport { resolveTypeReference } from \"../../../../../src/common/api/common/EntityFunctions.js\"\nimport { createTestEntity } from \"../../../TestUtils.js\"\nimport { containsEventOfType, EntityUpdateData } from \"../../../../../src/common/api/common/utils/EntityUpdateUtils.js\"\n\no.spec(\"Index Utils\", () => {\n\to(\"encryptIndexKey\", function () {\n\t\tlet key = aes256RandomKey()\n\t\tlet encryptedKey = encryptIndexKeyBase64(key, \"blubb\", fixedIv)\n\t\tlet decrypted = unauthenticatedAesDecrypt(key, concat(fixedIv, base64ToUint8Array(encryptedKey)), true)\n\t\to(utf8Uint8ArrayToString(decrypted)).equals(\"blubb\")\n\t})\n\to(\"encryptSearchIndexEntry + decryptSearchIndexEntry\", function () {\n\t\tlet key = aes256RandomKey()\n\t\tlet entry: SearchIndexEntry = {\n\t\t\tid: \"L0YED5d----1\",\n\t\t\tattribute: 84,\n\t\t\tpositions: [12, 536, 3],\n\t\t}\n\t\tlet encId = encryptIndexKeyUint8Array(key, entry.id, fixedIv)\n\t\tlet encryptedEntry = encryptSearchIndexEntry(key, entry, encId)\n\t\t// attribute 84 => 0x54,\n\t\t// position[0] 12 => 0xC\n\t\t// position[1] 536 = 0x218 => length of number = 2 | 0x80 = 0x82 numbers: 0x02, 0x18\n\t\t// position[2] 3 => 0x03\n\t\tconst encodedIndexEntry = [0x54, 0xc, 0x82, 0x02, 0x18, 0x03]\n\t\tconst result = unauthenticatedAesDecrypt(key, encryptedEntry.slice(16), true)\n\t\to(Array.from(result)).deepEquals(Array.from(encodedIndexEntry))\n\t\tlet decrypted = decryptSearchIndexEntry(key, encryptedEntry, fixedIv)\n\t\to(JSON.stringify(decrypted.encId)).equals(JSON.stringify(encId))\n\t\tconst withoutEncId: any = decrypted\n\t\tdelete withoutEncId.encId\n\t\to(JSON.stringify(decrypted)).equals(JSON.stringify(entry))\n\t})\n\to(\"encryptMetaData\", function () {\n\t\tconst key = aes256RandomKey()\n\t\tconst meta: SearchIndexMetaDataRow = {\n\t\t\tid: 3,\n\t\t\tword: \"asdsadasds\",\n\t\t\trows: [\n\t\t\t\t{\n\t\t\t\t\tapp: 1,\n\t\t\t\t\ttype: 64,\n\t\t\t\t\tkey: 3,\n\t\t\t\t\tsize: 10,\n\t\t\t\t\toldestElementTimestamp: 6,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tapp: 2,\n\t\t\t\t\ttype: 66,\n\t\t\t\t\tkey: 4,\n\t\t\t\t\tsize: 8,\n\t\t\t\t\toldestElementTimestamp: 15,\n\t\t\t\t},\n\t\t\t],\n\t\t}\n\t\tconst encryptedMeta = encryptMetaData(key, meta)\n\t\to(encryptedMeta.id).equals(meta.id)\n\t\to(encryptedMeta.word).equals(meta.word)\n\t\to(Array.from(unauthenticatedAesDecrypt(key, encryptedMeta.rows, true))).deepEquals([\n\t\t\t// First row\n\t\t\t1,\n\t\t\t64,\n\t\t\t3,\n\t\t\t10,\n\t\t\t6, // Second row\n\t\t\t2,\n\t\t\t66,\n\t\t\t4,\n\t\t\t8,\n\t\t\t15,\n\t\t])\n\t\to(decryptMetaData(key, encryptedMeta)).deepEquals(meta)\n\t})\n\to(\"decryptMetaData with empty rows\", function () {\n\t\to(\n\t\t\tdecryptMetaData(aes256RandomKey(), {\n\t\t\t\tid: 1,\n\t\t\t\tword: \"tuta\",\n\t\t\t\trows: new Uint8Array(0),\n\t\t\t}),\n\t\t).deepEquals({\n\t\t\tid: 1,\n\t\t\tword: \"tuta\",\n\t\t\trows: [],\n\t\t})\n\t})\n\to(\"typeRefToTypeInfo\", async function () {\n\t\tlet thrown = false\n\n\t\ttry {\n\t\t\ttypeRefToTypeInfo(UserTypeRef)\n\t\t} catch (e) {\n\t\t\tthrown = true\n\t\t}\n\n\t\to(thrown).equals(true)\n\t\t// o(typeRefToTypeInfo(UserTypeRef).appId).equals(0)\n\t\t// o(typeRefToTypeInfo(UserTypeRef).typeId).equals(UserTypeModel.id)\n\t\to(typeRefToTypeInfo(ContactTypeRef).appId).equals(1)\n\t\tconst ContactTypeModel = await resolveTypeReference(ContactTypeRef)\n\t\to(typeRefToTypeInfo(ContactTypeRef).typeId).equals(ContactTypeModel.id)\n\t})\n\to(\"userIsGlobalAdmin\", function () {\n\t\tlet user = createTestEntity(UserTypeRef)\n\t\tuser.memberships.push(createTestEntity(GroupMembershipTypeRef))\n\t\tuser.memberships[0].groupType = GroupType.Admin\n\t\to(userIsGlobalAdmin(user)).equals(true)\n\t\tuser.memberships[0].groupType = GroupType.LocalAdmin\n\t\to(userIsGlobalAdmin(user)).equals(false)\n\t\tuser.memberships[0].groupType = GroupType.Mail\n\t\to(userIsGlobalAdmin(user)).equals(false)\n\t})\n\to(\"filterIndexMemberships\", function () {\n\t\tlet user = createTestEntity(UserTypeRef)\n\t\tuser.memberships = [\n\t\t\tcreateTestEntity(GroupMembershipTypeRef),\n\t\t\tcreateTestEntity(GroupMembershipTypeRef),\n\t\t\tcreateTestEntity(GroupMembershipTypeRef),\n\t\t\tcreateTestEntity(GroupMembershipTypeRef),\n\t\t\tcreateTestEntity(GroupMembershipTypeRef),\n\t\t\tcreateTestEntity(GroupMembershipTypeRef),\n\t\t\tcreateTestEntity(GroupMembershipTypeRef),\n\t\t\tcreateTestEntity(GroupMembershipTypeRef),\n\t\t]\n\t\tuser.memberships[0].groupType = GroupType.Admin\n\t\tuser.memberships[1].groupType = GroupType.Contact\n\t\tuser.memberships[2].groupType = GroupType.Customer\n\t\tuser.memberships[3].groupType = GroupType.External\n\t\tuser.memberships[4].groupType = GroupType.File\n\t\tuser.memberships[5].groupType = GroupType.Mail\n\t\tuser.memberships[6].groupType = GroupType.MailingList\n\t\tuser.memberships[7].groupType = GroupType.User\n\t\to(filterIndexMemberships(user)).deepEquals([user.memberships[0], user.memberships[1], user.memberships[2], user.memberships[5]])\n\t})\n\to(\"filterMailMemberships\", function () {\n\t\tlet user = createTestEntity(UserTypeRef)\n\t\tuser.memberships = [\n\t\t\tcreateTestEntity(GroupMembershipTypeRef),\n\t\t\tcreateTestEntity(GroupMembershipTypeRef),\n\t\t\tcreateTestEntity(GroupMembershipTypeRef),\n\t\t\tcreateTestEntity(GroupMembershipTypeRef),\n\t\t\tcreateTestEntity(GroupMembershipTypeRef),\n\t\t\tcreateTestEntity(GroupMembershipTypeRef),\n\t\t\tcreateTestEntity(GroupMembershipTypeRef),\n\t\t\tcreateTestEntity(GroupMembershipTypeRef),\n\t\t\tcreateTestEntity(GroupMembershipTypeRef),\n\t\t]\n\t\tuser.memberships[0].groupType = GroupType.Admin\n\t\tuser.memberships[1].groupType = GroupType.Contact\n\t\tuser.memberships[2].groupType = GroupType.Customer\n\t\tuser.memberships[3].groupType = GroupType.External\n\t\tuser.memberships[4].groupType = GroupType.File\n\t\tuser.memberships[5].groupType = GroupType.Mail\n\t\tuser.memberships[6].groupType = GroupType.MailingList\n\t\tuser.memberships[7].groupType = GroupType.User\n\t\tuser.memberships[8].groupType = GroupType.Mail\n\t\to(filterMailMemberships(user)).deepEquals([user.memberships[5], user.memberships[8]])\n\t})\n\to(\"containsEventOfType\", function () {\n\t\tfunction createUpdate(type: OperationType, id: Id): EntityUpdateData {\n\t\t\tlet update = createTestEntity(EntityUpdateTypeRef)\n\t\t\tupdate.operation = type\n\t\t\tupdate.instanceId = id\n\t\t\treturn update as EntityUpdateData\n\t\t}\n\n\t\to(containsEventOfType([], OperationType.CREATE, \"1\")).equals(false)\n\t\to(containsEventOfType([createUpdate(OperationType.CREATE, \"1\")], OperationType.CREATE, \"1\")).equals(true)\n\t\to(containsEventOfType([createUpdate(OperationType.DELETE, \"1\")], OperationType.CREATE, \"1\")).equals(false)\n\t\to(containsEventOfType([createUpdate(OperationType.DELETE, \"2\")], OperationType.DELETE, \"1\")).equals(false)\n\t})\n\to(\"byteLength\", function () {\n\t\to(byteLength(\"\")).equals(0)\n\t\to(byteLength(\"A\")).equals(1)\n\t\to(byteLength(\"A B\")).equals(3)\n\t\to(byteLength(\"µ\")).equals(2)\n\t\to(byteLength(\"€\")).equals(3)\n\t\to(byteLength(\"💩\")).equals(4)\n\t})\n\to(\"new index update\", function () {\n\t\tlet indexUpdate = _createNewIndexUpdate(typeRefToTypeInfo(MailTypeRef))\n\n\t\to(indexUpdate.create.encInstanceIdToElementData instanceof Map).equals(true)\n\t\to(indexUpdate.create.indexMap instanceof Map).equals(true)\n\t\to(indexUpdate.move).deepEquals([])\n\t\to(indexUpdate.delete.searchMetaRowToEncInstanceIds instanceof Map).equals(true)\n\t\to(indexUpdate.delete.encInstanceIds).deepEquals([])\n\t})\n\to(\"htmlToPlainText\", function () {\n\t\to(htmlToText(\"\")).equals(\"\")\n\t\to(htmlToText(\"test\")).equals(\"test\")\n\t\tlet html =\n\t\t\t\"this string has <i>html</i> code <!-- ignore comments-->i want to <b>remove</b><br>Link Number 1 -><a href='http://www.bbc.co.uk'>BBC</a> Link Number 1<br><p>Now back to normal text and stuff</p>\"\n\t\tlet plain = \"this string has  html  code  i want to  remove  Link Number 1 -> BBC  Link Number 1  Now back to normal text and stuff \"\n\t\to(htmlToText(html)).equals(plain)\n\t\to(htmlToText(\"<img src='>' >\")).equals(\" ' >\") // TODO handle this case\n\n\t\to(htmlToText(\"&nbsp;&amp;&lt;&gt;\")).equals(\" &<>\")\n\t\to(htmlToText(\"&ouml;\")).equals(\"ö\")\n\t\to(htmlToText(\"&Ouml;\")).equals(\"Ö\")\n\t\to(htmlToText(\"&Phi;\")).equals(\"Φ\")\n\t\to(htmlToText(null)).equals(\"\")\n\t\to(htmlToText(\"&#10595;&#1339;\")).equals(\"⥣Ի\")\n\t})\n})\n","import o from \"@tutao/otest\"\nimport { SearchFacade } from \"../../../../../src/mail-app/workerUtils/index/SearchFacade.js\"\nimport { ContactTypeRef, MailTypeRef } from \"../../../../../src/common/api/entities/tutanota/TypeRefs.js\"\nimport { UserTypeRef } from \"../../../../../src/common/api/entities/sys/TypeRefs.js\"\nimport type { TypeInfo } from \"../../../../../src/common/api/worker/search/IndexUtils.js\"\nimport {\n\tencryptIndexKeyBase64,\n\tencryptIndexKeyUint8Array,\n\tencryptMetaData,\n\tencryptSearchIndexEntry,\n\ttypeRefToTypeInfo,\n} from \"../../../../../src/common/api/worker/search/IndexUtils.js\"\nimport type { ElementDataDbRow, SearchIndexEntry, SearchIndexMetaDataRow, SearchRestriction } from \"../../../../../src/common/api/worker/search/SearchTypes.js\"\nimport {\n\tcompareOldestFirst,\n\telementIdPart,\n\tfirstBiggerThanSecond,\n\tgeneratedIdToTimestamp,\n\tlistIdPart,\n\ttimestampToGeneratedId,\n} from \"../../../../../src/common/api/common/utils/EntityUtils.js\"\nimport type { Base64 } from \"@tutao/tutanota-utils\"\nimport { groupBy, numberRange, splitInChunks } from \"@tutao/tutanota-utils\"\nimport { appendBinaryBlocks } from \"../../../../../src/common/api/worker/search/SearchIndexEncoding.js\"\nimport { createSearchIndexDbStub, DbStub, DbStubTransaction } from \"./DbStub.js\"\nimport type { BrowserData } from \"../../../../../src/common/misc/ClientConstants.js\"\nimport { browserDataStub, createTestEntity } from \"../../../TestUtils.js\"\nimport { aes256RandomKey, fixedIv } from \"@tutao/tutanota-crypto\"\nimport { ElementDataOS, SearchIndexMetaDataOS, SearchIndexOS } from \"../../../../../src/common/api/worker/search/IndexTables.js\"\nimport { object, when } from \"testdouble\"\nimport { EntityClient } from \"../../../../../src/common/api/common/EntityClient.js\"\n\ntype SearchIndexEntryWithType = SearchIndexEntry & {\n\ttypeInfo: TypeInfo\n}\ntype KeyToIndexEntriesWithType = {\n\tindexKey: Base64\n\tindexEntries: SearchIndexEntryWithType[]\n}\nlet dbKey\nconst contactTypeInfo = typeRefToTypeInfo(ContactTypeRef)\nconst mailTypeInfo = typeRefToTypeInfo(MailTypeRef)\nconst browserData: BrowserData = browserDataStub\nconst entityClient: EntityClient = object()\no.spec(\"SearchFacade test\", () => {\n\tlet mail = createTestEntity(MailTypeRef)\n\tlet user = createTestEntity(UserTypeRef)\n\tlet id1 = \"L0YED5d----1\"\n\tlet id2 = \"L0YED5d----2\"\n\tlet id3 = \"L0YED5d----3\"\n\n\tfunction createSearchFacade(transaction: DbStubTransaction, currentIndexTimestamp: number) {\n\t\treturn new SearchFacade(\n\t\t\t{\n\t\t\t\tgetLoggedInUser: () => user,\n\t\t\t} as any,\n\t\t\t{\n\t\t\t\tkey: dbKey,\n\t\t\t\tiv: fixedIv,\n\t\t\t\tdbFacade: {\n\t\t\t\t\tcreateTransaction: () => Promise.resolve(transaction),\n\t\t\t\t} as any,\n\t\t\t\tinitialized: Promise.resolve(),\n\t\t\t},\n\t\t\t{\n\t\t\t\tmailboxIndexingPromise: Promise.resolve(),\n\t\t\t\tcurrentIndexTimestamp: currentIndexTimestamp,\n\t\t\t} as any,\n\t\t\t[],\n\t\t\tbrowserData,\n\t\t\tentityClient,\n\t\t)\n\t}\n\n\tfunction createDbContent(transaction: DbStubTransaction, dbData: KeyToIndexEntriesWithType[], fullIds: IdTuple[]) {\n\t\tlet counter = 0\n\t\tfor (const [index, keyToIndexEntries] of dbData.entries()) {\n\t\t\tkeyToIndexEntries.indexEntries.sort((a, b) => compareOldestFirst(a.id, b.id))\n\t\t\tconst indexEntriesByType = groupBy(keyToIndexEntries.indexEntries, (e) => e.typeInfo)\n\t\t\tconst metaDataRow: SearchIndexMetaDataRow = {\n\t\t\t\tid: index + 1,\n\t\t\t\tword: keyToIndexEntries.indexKey,\n\t\t\t\trows: [],\n\t\t\t}\n\t\t\tfor (const [typeInfo, entries] of indexEntriesByType.entries()) {\n\t\t\t\tconst chunks = splitInChunks(2, entries)\n\t\t\t\tfor (const chunk of chunks) {\n\t\t\t\t\tcounter++\n\t\t\t\t\tmetaDataRow.rows.push({\n\t\t\t\t\t\tapp: typeInfo.appId,\n\t\t\t\t\t\ttype: typeInfo.typeId,\n\t\t\t\t\t\tkey: counter,\n\t\t\t\t\t\tsize: chunk.length,\n\t\t\t\t\t\toldestElementTimestamp: generatedIdToTimestamp(chunk[0].id),\n\t\t\t\t\t})\n\t\t\t\t\tconst encSearchIndexRow = appendBinaryBlocks(\n\t\t\t\t\t\tchunk.map((entry) => encryptSearchIndexEntry(dbKey, entry, encryptIndexKeyUint8Array(dbKey, entry.id, fixedIv))),\n\t\t\t\t\t)\n\t\t\t\t\ttransaction.put(SearchIndexOS, counter, encSearchIndexRow)\n\t\t\t\t}\n\t\t\t}\n\t\t\ttransaction.put(SearchIndexMetaDataOS, null, encryptMetaData(dbKey, metaDataRow))\n\t\t\tfor (const id of fullIds) {\n\t\t\t\tlet encId = encryptIndexKeyBase64(dbKey, elementIdPart(id), fixedIv)\n\t\t\t\tconst elementDataEntry: ElementDataDbRow = [listIdPart(id), new Uint8Array(0), \"\"] // rows not needed for search\n\n\t\t\t\ttransaction.put(ElementDataOS, encId, elementDataEntry)\n\t\t\t}\n\t\t}\n\t}\n\n\tlet createKeyToIndexEntries = (word: string, entries: SearchIndexEntryWithType[]): KeyToIndexEntriesWithType => {\n\t\treturn {\n\t\t\tindexKey: encryptIndexKeyBase64(dbKey, word, fixedIv),\n\t\t\tindexEntries: entries,\n\t\t}\n\t}\n\n\tlet createMailEntry = (id: Id, attribute: number, positions: number[]): SearchIndexEntryWithType => {\n\t\treturn {\n\t\t\tid: id,\n\t\t\tattribute: attribute,\n\t\t\tpositions: positions,\n\t\t\ttypeInfo: mailTypeInfo,\n\t\t}\n\t}\n\n\tlet createContactEntry = (id: Id, attribute: number, positions: number[]): SearchIndexEntryWithType => {\n\t\treturn {\n\t\t\tid: id,\n\t\t\tattribute: attribute,\n\t\t\tpositions: positions,\n\t\t\ttypeInfo: contactTypeInfo,\n\t\t}\n\t}\n\n\tlet createMailRestriction = (attributeIds?: number[] | null, listId?: Id | null, start?: number | null, end?: number | null): SearchRestriction => {\n\t\treturn {\n\t\t\ttype: MailTypeRef,\n\t\t\tstart: start ?? null,\n\t\t\tend: end ?? null,\n\t\t\tfield: null,\n\t\t\tattributeIds: attributeIds ?? null,\n\t\t\tfolderIds: listId != null ? [listId] : [],\n\t\t\teventSeries: true,\n\t\t}\n\t}\n\n\tlet testSearch = (\n\t\tdbData: KeyToIndexEntriesWithType[],\n\t\tdbListIds: IdTuple[],\n\t\tquery: string,\n\t\trestriction: SearchRestriction,\n\t\texpectedResult: IdTuple[],\n\t\tcurrentIndexTimestamp: number = 0,\n\t\tminSuggestionCount: number = 0,\n\t\tmaxResults?: number,\n\t): Promise<void> => {\n\t\tcreateDbContent(transaction, dbData, dbListIds)\n\t\tlet s = createSearchFacade(transaction, currentIndexTimestamp)\n\t\treturn s.search(query, restriction, minSuggestionCount, maxResults).then((result) => {\n\t\t\to(result.query).equals(query)\n\t\t\to(result.restriction).deepEquals(restriction)\n\t\t\to(result.results).deepEquals(expectedResult.sort((idTuple1, idTuple2) => (firstBiggerThanSecond(idTuple1[1], idTuple2[1]) ? -1 : 1)))\n\t\t})\n\t}\n\n\tlet dbStub: DbStub\n\tlet transaction: DbStubTransaction\n\to.beforeEach(() => {\n\t\tdbKey = aes256RandomKey()\n\t\tdbStub = createSearchIndexDbStub()\n\t\ttransaction = dbStub.createTransaction()\n\t})\n\to(\"empty db\", () => {\n\t\treturn testSearch([], [], \"test\", createMailRestriction(), [])\n\t})\n\to(\"empty query\", () => {\n\t\treturn testSearch([], [], \"\", createMailRestriction(), [])\n\t})\n\to(\"no words in query\", () => {\n\t\treturn testSearch([], [], \" %.,:\", createMailRestriction(), [])\n\t})\n\to(\"find single entry\", () => {\n\t\treturn testSearch([createKeyToIndexEntries(\"test\", [createMailEntry(id1, 0, [0])])], [[\"listId1\", id1]], \"test\", createMailRestriction(), [\n\t\t\t[\"listId1\", id1],\n\t\t])\n\t})\n\to(\"find two entries\", () => {\n\t\treturn testSearch(\n\t\t\t[createKeyToIndexEntries(\"test\", [createMailEntry(id1, 0, [0]), createMailEntry(id2, 0, [0])])],\n\t\t\t[\n\t\t\t\t[\"listId1\", id1],\n\t\t\t\t[\"listId2\", id2],\n\t\t\t],\n\t\t\t\"test\",\n\t\t\tcreateMailRestriction(),\n\t\t\t[\n\t\t\t\t[\"listId1\", id1],\n\t\t\t\t[\"listId2\", id2],\n\t\t\t],\n\t\t)\n\t})\n\to(\"find entries from different rows\", () => {\n\t\treturn testSearch(\n\t\t\t[createKeyToIndexEntries(\"test\", [createMailEntry(id1, 0, [0]), createMailEntry(id2, 0, [0]), createMailEntry(id3, 0, [0])])],\n\t\t\t[\n\t\t\t\t[\"listId1\", id1],\n\t\t\t\t[\"listId2\", id2],\n\t\t\t\t[\"listId3\", id3],\n\t\t\t],\n\t\t\t\"test\",\n\t\t\tcreateMailRestriction(),\n\t\t\t[\n\t\t\t\t[\"listId1\", id1],\n\t\t\t\t[\"listId2\", id2],\n\t\t\t\t[\"listId3\", id3],\n\t\t\t],\n\t\t)\n\t})\n\to(\"find type\", () => {\n\t\treturn testSearch(\n\t\t\t[createKeyToIndexEntries(\"test\", [createMailEntry(id1, 0, [0]), createContactEntry(id2, 0, [0])])],\n\t\t\t[\n\t\t\t\t[\"listId1\", id1],\n\t\t\t\t[\"listId2\", id2],\n\t\t\t],\n\t\t\t\"test\",\n\t\t\tcreateMailRestriction(),\n\t\t\t[[\"listId1\", id1]],\n\t\t)\n\t})\n\to(\"find attribute\", () => {\n\t\treturn testSearch(\n\t\t\t[createKeyToIndexEntries(\"test\", [createMailEntry(id1, 0, [0]), createMailEntry(id2, 1, [0])])],\n\t\t\t[\n\t\t\t\t[\"listId1\", id1],\n\t\t\t\t[\"listId2\", id2],\n\t\t\t],\n\t\t\t\"test\",\n\t\t\tcreateMailRestriction([1]),\n\t\t\t[[\"listId2\", id2]],\n\t\t)\n\t})\n\to(\"find folderId legacy MailFolders (non-static mail listIds)\", () => {\n\t\tlet mail1 = createTestEntity(MailTypeRef, { _id: [\"mailListId1\", id1] })\n\t\twhen(entityClient.load(MailTypeRef, mail1._id)).thenReturn(Promise.resolve(mail1))\n\t\tlet mail2 = createTestEntity(MailTypeRef, { _id: [\"mailListId2\", id2] })\n\t\twhen(entityClient.load(MailTypeRef, mail2._id)).thenReturn(Promise.resolve(mail2))\n\n\t\treturn testSearch(\n\t\t\t[createKeyToIndexEntries(\"test\", [createMailEntry(id1, 0, [0]), createMailEntry(id2, 0, [0])])],\n\t\t\t[mail1._id, mail2._id],\n\t\t\t\"test\",\n\t\t\tcreateMailRestriction(null, listIdPart(mail2._id)),\n\t\t\t[mail2._id],\n\t\t)\n\t})\n\to(\"find folderId new MailSets (static mail listIds)\", () => {\n\t\tconst mail1 = createTestEntity(MailTypeRef, {\n\t\t\t_id: [\"mailListId\", id1],\n\t\t\tsets: [[\"setListId\", \"folderId1\"]],\n\t\t})\n\t\twhen(entityClient.load(MailTypeRef, mail1._id)).thenReturn(Promise.resolve(mail1))\n\t\tconst mail2 = createTestEntity(MailTypeRef, {\n\t\t\t_id: [\"mailListId\", id2],\n\t\t\tsets: [[\"setListId\", \"folderId2\"]],\n\t\t})\n\t\twhen(entityClient.load(MailTypeRef, mail2._id)).thenReturn(Promise.resolve(mail2))\n\n\t\treturn testSearch(\n\t\t\t[createKeyToIndexEntries(\"test\", [createMailEntry(id1, 0, [0]), createMailEntry(id2, 0, [0])])],\n\t\t\t[mail1._id, mail2._id],\n\t\t\t\"test\",\n\t\t\tcreateMailRestriction(null, elementIdPart(mail2.sets[0])),\n\t\t\t[mail2._id],\n\t\t)\n\t})\n\to(\"find with start time\", () => {\n\t\tlet id1 = timestampToGeneratedId(new Date(2017, 5, 8).getTime())\n\t\tlet start = new Date(2017, 5, 9).getTime()\n\t\tlet id2 = timestampToGeneratedId(new Date(2017, 5, 10).getTime())\n\t\treturn testSearch(\n\t\t\t[createKeyToIndexEntries(\"test\", [createMailEntry(id1, 0, [0]), createMailEntry(id2, 0, [0])])],\n\t\t\t[\n\t\t\t\t[\"listId1\", id1],\n\t\t\t\t[\"listId2\", id2],\n\t\t\t],\n\t\t\t\"test\",\n\t\t\tcreateMailRestriction(null, null, start, null),\n\t\t\t[[\"listId1\", id1]],\n\t\t)\n\t})\n\to(\"find with end time\", () => {\n\t\tlet id1 = timestampToGeneratedId(new Date(2017, 5, 8).getTime())\n\t\tlet end = new Date(2017, 5, 9).getTime()\n\t\tlet id2 = timestampToGeneratedId(new Date(2017, 5, 10).getTime())\n\t\treturn testSearch(\n\t\t\t[createKeyToIndexEntries(\"test\", [createMailEntry(id1, 0, [0]), createMailEntry(id2, 0, [0])])],\n\t\t\t[\n\t\t\t\t[\"listId1\", id1],\n\t\t\t\t[\"listId2\", id2],\n\t\t\t],\n\t\t\t\"test\",\n\t\t\tcreateMailRestriction(null, null, null, end),\n\t\t\t[[\"listId2\", id2]],\n\t\t)\n\t})\n\to(\"find with start and end time\", () => {\n\t\tlet id1 = timestampToGeneratedId(new Date(2017, 5, 8).getTime())\n\t\tlet end = new Date(2017, 5, 9).getTime()\n\t\tlet id2 = timestampToGeneratedId(new Date(2017, 5, 10).getTime())\n\t\tlet start = new Date(2017, 5, 11).getTime()\n\t\tlet id3 = timestampToGeneratedId(new Date(2017, 5, 12).getTime())\n\t\treturn testSearch(\n\t\t\t[createKeyToIndexEntries(\"test\", [createMailEntry(id1, 0, [0]), createMailEntry(id2, 0, [0]), createMailEntry(id3, 0, [0])])],\n\t\t\t[\n\t\t\t\t[\"listId1\", id1],\n\t\t\t\t[\"listId2\", id2],\n\t\t\t\t[\"listId3\", id3],\n\t\t\t],\n\t\t\t\"test\",\n\t\t\tcreateMailRestriction(null, null, start, end),\n\t\t\t[[\"listId2\", id2]],\n\t\t)\n\t})\n\to(\"find two search words\", () => {\n\t\treturn testSearch(\n\t\t\t[\n\t\t\t\tcreateKeyToIndexEntries(\"test\", [createMailEntry(id1, 0, [0]), createMailEntry(id2, 0, [0])]),\n\t\t\t\tcreateKeyToIndexEntries(\"ja\", [createMailEntry(id1, 0, [0])]),\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\"listId1\", id1],\n\t\t\t\t[\"listId2\", id2],\n\t\t\t],\n\t\t\t\"ja,test\",\n\t\t\tcreateMailRestriction(),\n\t\t\t[[\"listId1\", id1]],\n\t\t)\n\t})\n\to(\"find two search words in multiple rows\", () => {\n\t\tconst firstWordIds: Array<IdTuple> = numberRange(1, 1500).map((i) => [\"listId1\", timestampToGeneratedId(i, 1)])\n\t\tconst secondWordIds: Array<IdTuple> = numberRange(1, 1500).map((i) => [\"listId1\", timestampToGeneratedId(i, 1)])\n\t\tconst firstWordEntries = firstWordIds.map((idTuple) => createMailEntry(elementIdPart(idTuple), 0, [0]))\n\t\tconst secondWordEntries = secondWordIds.map((idTuple) => createMailEntry(elementIdPart(idTuple), 0, [0]))\n\t\t//const oldestId = in\n\t\treturn testSearch(\n\t\t\t[createKeyToIndexEntries(\"test\", firstWordEntries), createKeyToIndexEntries(\"ja\", secondWordEntries)],\n\t\t\tfirstWordIds.concat(secondWordIds),\n\t\t\t\"ja,test\",\n\t\t\tcreateMailRestriction(),\n\t\t\tsecondWordIds.slice(500).reverse(),\n\t\t\t0,\n\t\t\t0,\n\t\t\t1000,\n\t\t)\n\t})\n\to(\"find two search words with a time gap\", () => {\n\t\tconst firstWordIds: Array<IdTuple> = numberRange(1, 1200).map((i) => [\"listId1\", timestampToGeneratedId(i, 1)])\n\t\tconst secondWordIds: Array<IdTuple> = numberRange(1, 10).map((i) => [\"listId1\", timestampToGeneratedId(i, 1)])\n\t\tconst firstWordEntries = firstWordIds.map((idTuple) => createMailEntry(elementIdPart(idTuple), 0, [0]))\n\t\tconst secondWordEntries = secondWordIds.map((idTuple) => createMailEntry(elementIdPart(idTuple), 0, [0]))\n\t\t//const oldestId = in\n\t\treturn testSearch(\n\t\t\t[createKeyToIndexEntries(\"test\", firstWordEntries), createKeyToIndexEntries(\"ja\", secondWordEntries)],\n\t\t\tfirstWordIds.concat(secondWordIds),\n\t\t\t\"ja,test\",\n\t\t\tcreateMailRestriction(),\n\t\t\tsecondWordIds,\n\t\t\t0,\n\t\t\t0,\n\t\t\t100,\n\t\t)\n\t})\n\to(\"find two search words ordered\", () => {\n\t\treturn testSearch(\n\t\t\t[\n\t\t\t\t// id1 must be found, id2 does not have the correct order, id3 has the order but in different attributes\n\t\t\t\tcreateKeyToIndexEntries(\"test\", [createMailEntry(id1, 0, [6]), createMailEntry(id2, 0, [6]), createMailEntry(id3, 1, [6])]),\n\t\t\t\tcreateKeyToIndexEntries(\"ja\", [createMailEntry(id1, 0, [5]), createMailEntry(id2, 0, [4]), createMailEntry(id3, 0, [5])]),\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\"listId1\", id1],\n\t\t\t\t[\"listId2\", id2],\n\t\t\t\t[\"listId3\", id3],\n\t\t\t],\n\t\t\t'\"ja,test\"',\n\t\t\tcreateMailRestriction(),\n\t\t\t[[\"listId1\", id1]],\n\t\t)\n\t})\n\to(\"reduce ids\", () => {\n\t\treturn testSearch(\n\t\t\t[createKeyToIndexEntries(\"test\", [createMailEntry(id1, 0, [0]), createMailEntry(id1, 1, [0])])],\n\t\t\t[[\"listId1\", id1]],\n\t\t\t\"test\",\n\t\t\tcreateMailRestriction(),\n\t\t\t[[\"listId1\", id1]],\n\t\t)\n\t})\n})\n","/**\n * Created by bdeterding on 13.12.17.\n */\nimport o from \"@tutao/otest\"\nimport { ContactTypeRef } from \"../../../../../src/common/api/entities/tutanota/TypeRefs.js\"\nimport { SuggestionFacade } from \"../../../../../src/mail-app/workerUtils/index/SuggestionFacade.js\"\nimport { downcast } from \"@tutao/tutanota-utils\"\nimport { aes256RandomKey, fixedIv } from \"@tutao/tutanota-crypto\"\nimport { SearchTermSuggestionsOS } from \"../../../../../src/common/api/worker/search/IndexTables.js\"\nimport { spy } from \"@tutao/tutanota-test-utils\"\n\no.spec(\"SuggestionFacade test\", () => {\n\tlet db\n\tlet facade\n\to.beforeEach(function () {\n\t\tdb = {\n\t\t\tkey: aes256RandomKey(),\n\t\t\tiv: fixedIv,\n\t\t\tdbFacade: {},\n\t\t\tinitialized: Promise.resolve(),\n\t\t}\n\t\tfacade = new SuggestionFacade(ContactTypeRef, db)\n\t})\n\to(\"add and get suggestion\", () => {\n\t\to(facade.getSuggestions(\"a\").join(\"\")).equals(\"\")\n\t\tlet words = [\"a\"]\n\t\tfacade.addSuggestions(words)\n\t\to(facade.getSuggestions(\"a\").join(\" \")).equals(\"a\")\n\t\twords = [\"anton\", \"arne\"]\n\t\tfacade.addSuggestions(words)\n\t\to(facade.getSuggestions(\"a\").join(\" \")).equals(\"a anton arne\")\n\t\twords = [\"ab\", \"az\", \"arne\"]\n\t\tfacade.addSuggestions(words)\n\t\to(facade.getSuggestions(\"a\").join(\" \")).equals(\"a ab anton arne az\")\n\t\twords = [\"aa\", \"anne\", \"bernd\"]\n\t\tfacade.addSuggestions(words)\n\t\to(facade.getSuggestions(\"a\").join(\" \")).equals(\"a aa ab anne anton arne az\")\n\t\to(facade.getSuggestions(\"an\").join(\" \")).equals(\"anne anton\")\n\t\to(facade.getSuggestions(\"ann\").join(\" \")).equals(\"anne\")\n\t\to(facade.getSuggestions(\"anne\").join(\" \")).equals(\"anne\")\n\t\to(facade.getSuggestions(\"annet\").join(\" \")).equals(\"\")\n\t\to(facade.getSuggestions(\"b\").join(\" \")).equals(\"bernd\")\n\t\to(facade.getSuggestions(\"be\").join(\" \")).equals(\"bernd\")\n\t\to(facade.getSuggestions(\"ben\").join(\" \")).equals(\"\")\n\t})\n\to(\"load empty\", () => {\n\t\tlet transactionMock: any = {}\n\t\ttransactionMock.get = spy(() => Promise.resolve(null))\n\t\tdowncast(db.dbFacade).createTransaction = spy(() => Promise.resolve(transactionMock))\n\t\tfacade.addSuggestions([\"aaaaaaa\"])\n\t\treturn facade.load().then(() => {\n\t\t\to(transactionMock.get.callCount).equals(1)\n\t\t\to(transactionMock.get.args[0]).equals(SearchTermSuggestionsOS)\n\t\t\to(transactionMock.get.args[1]).equals(\"contact\")\n\t\t\to(facade.getSuggestions(\"a\").join(\"\")).equals(\"\")\n\t\t})\n\t})\n\to(\"store and load\", () => {\n\t\tlet transactionMock: any = {}\n\t\ttransactionMock.put = spy(() => Promise.resolve())\n\t\ttransactionMock.wait = spy(() => Promise.resolve())\n\t\tdowncast(db.dbFacade).createTransaction = spy(() => Promise.resolve(transactionMock))\n\t\tfacade.addSuggestions([\"aaaa\"])\n\t\treturn facade.store().then(() => {\n\t\t\to(transactionMock.put.args[0]).equals(SearchTermSuggestionsOS)\n\t\t\to(transactionMock.put.args[1]).equals(\"contact\")\n\t\t\tlet encSuggestions = transactionMock.put.args[2]\n\t\t\tfacade.addSuggestions([\"accc\", \"bbbb\"])\n\t\t\t// insert new values\n\t\t\to(facade.getSuggestions(\"a\").join(\" \")).equals(\"aaaa accc\")\n\t\t\to(facade.getSuggestions(\"b\").join(\" \")).equals(\"bbbb\")\n\t\t\tlet transactionLoadMock: any = {}\n\t\t\tdowncast(db.dbFacade).createTransaction = spy(() => Promise.resolve(transactionLoadMock))\n\t\t\ttransactionLoadMock.get = spy(() => Promise.resolve(encSuggestions))\n\t\t\treturn facade.load().then(() => {\n\t\t\t\t// restored\n\t\t\t\to(transactionLoadMock.get.args[0]).equals(SearchTermSuggestionsOS)\n\t\t\t\to(transactionLoadMock.get.args[1]).equals(\"contact\")\n\t\t\t\to(facade.getSuggestions(\"a\").join(\" \")).equals(\"aaaa\")\n\t\t\t\to(facade.getSuggestions(\"b\").join(\" \")).equals(\"\")\n\t\t\t})\n\t\t})\n\t})\n})\n","import o from \"@tutao/otest\"\nimport {\n\tappendBinaryBlocks,\n\tcalculateNeededSpace,\n\tdecodeBinaryBlock,\n\tencodeBinaryBlock,\n\tencodeNumberBlock,\n\titerateBinaryBlocks,\n\tnumberOfBytes,\n\tremoveBinaryBlockRanges,\n} from \"../../../../../src/common/api/worker/search/SearchIndexEncoding.js\"\nimport { spy as makeSpy } from \"@tutao/tutanota-test-utils\"\nimport { concat } from \"@tutao/tutanota-utils\"\n\no.spec(\"SearchIndexEncoding test\", function () {\n\to(\"numberOfBytes\", function () {\n\t\tconst cases = [\n\t\t\t[0, 0],\n\t\t\t[128, 1],\n\t\t\t[255, 1],\n\t\t\t[256, 2],\n\t\t\t[257, 2],\n\t\t\t[511, 2],\n\t\t\t[512, 2],\n\t\t\t[Math.pow(2, 16) - 1, 2],\n\t\t\t[Math.pow(2, 16), 3], // 65536\n\t\t]\n\t\tfor (const [num, res] of cases) {\n\t\t\to(numberOfBytes(num)).equals(res)(`${num} should require ${res}`)\n\t\t}\n\t})\n\to(\"calculateNeededSpaceSingleArray\", function () {\n\t\to(calculateNeededSpace([new Uint8Array(32)])).equals(1 + 32)\n\t\to(calculateNeededSpace([new Uint8Array(127)])).equals(128)\n\t\to(calculateNeededSpace([new Uint8Array(128)])).equals(1 + 1 + 128)\n\t\to(calculateNeededSpace([new Uint8Array(65535)])).equals(1 + 2 + 65535)\n\t\to(calculateNeededSpace([new Uint8Array(65536)])).equals(1 + 3 + 65536)\n\t})\n\to(\"calculateNeededSpace\", function () {\n\t\tconst smallEntry = new Uint8Array(32)\n\t\tconst bigEntry = new Uint8Array(512)\n\t\to(calculateNeededSpace([smallEntry, bigEntry])).equals(1 + 32 + 1 + 2 + 512)\n\t})\n\to.spec(\"encodeBinaryBlock\", function () {\n\t\to(\"with short length\", function () {\n\t\t\tconst newIndexEntry = new Uint8Array([0x1])\n\t\t\tconst indexEntry = new Uint8Array(2)\n\t\t\to(encodeBinaryBlock(newIndexEntry, indexEntry, 0)).equals(2)\n\t\t\to(JSON.stringify(indexEntry)).equals(JSON.stringify(new Uint8Array([0x01, 0x01])))\n\t\t})\n\t\to(\"with large length\", function () {\n\t\t\tconst entityData = new Uint8Array(256)\n\t\t\tconst destinationData = new Uint8Array(259)\n\t\t\to(encodeBinaryBlock(entityData, destinationData, 0)).equals(259)\n\t\t\to(JSON.stringify(destinationData)).equals(JSON.stringify(new Uint8Array([0x82, 0x01, 0x00].concat(new Array(256).fill(0)))))\n\t\t})\n\t\to(\"with large length, invalid offset\", function () {\n\t\t\tconst entityData = new Uint8Array(256)\n\t\t\tconst destinationData = new Uint8Array(259)\n\n\t\t\ttry {\n\t\t\t\tencodeBinaryBlock(entityData, destinationData, 1)\n\t\t\t} catch (e) {\n\t\t\t\to(e.constructor).equals(RangeError)\n\t\t\t}\n\t\t})\n\t\to(\"with large length, insufficient memory\", function () {\n\t\t\tconst entityData = new Uint8Array(256)\n\t\t\tconst destinationData = new Uint8Array(2)\n\n\t\t\ttry {\n\t\t\t\tencodeBinaryBlock(entityData, destinationData, 0)\n\t\t\t\tthrow new Error()\n\t\t\t} catch (e) {\n\t\t\t\to(e.constructor).equals(RangeError)\n\t\t\t}\n\t\t})\n\t})\n\to.spec(\"decodeBinaryBlock\", function () {\n\t\to(\"with short length (literal length)\", function () {\n\t\t\tconst searchIndexData = new Uint8Array([0x01].concat([0x00]))\n\t\t\to(JSON.stringify(decodeBinaryBlock(searchIndexData, 0))).equals(JSON.stringify(new Uint8Array([0x00])))\n\t\t})\n\t\to(\"with short length (encoded length)\", function () {\n\t\t\tconst searchIndexData = new Uint8Array([0x7f].concat([0x00]))\n\t\t\to(JSON.stringify(decodeBinaryBlock(searchIndexData, 0))).equals(JSON.stringify(new Uint8Array([0x00])))\n\t\t})\n\t\to(\"with long length\", function () {\n\t\t\tconst searchIndexData = new Uint8Array([0x81, 0x01].concat([0x01, 0x02, 0x03]))\n\t\t\to(JSON.stringify(decodeBinaryBlock(searchIndexData, 0))).equals(JSON.stringify(new Uint8Array([0x01])))\n\t\t})\n\t\to(\"with long length and offset\", function () {\n\t\t\tconst searchIndexData = new Uint8Array([0x00, 0x82, 0x01, 0x00].concat(new Array(256).fill(0x00)))\n\t\t\to(JSON.stringify(decodeBinaryBlock(searchIndexData, 1))).equals(JSON.stringify(new Uint8Array(256)))\n\t\t})\n\t})\n\to.spec(\"removeBinaryBlockRanges\", function () {\n\t\to(\"works\", function () {\n\t\t\tconst row = new Uint8Array([0, 1, 2, 3, 4, 5, 6, 7])\n\t\t\tconst expected = new Uint8Array([1, 3, 6])\n\t\t\to(\n\t\t\t\tJSON.stringify(\n\t\t\t\t\tremoveBinaryBlockRanges(row, [\n\t\t\t\t\t\t[0, 1],\n\t\t\t\t\t\t[2, 3],\n\t\t\t\t\t\t[4, 6],\n\t\t\t\t\t\t[7, 8],\n\t\t\t\t\t]),\n\t\t\t\t),\n\t\t\t).equals(JSON.stringify(expected))\n\t\t})\n\t})\n\to.spec(\"iterateBinaryBlocks\", function () {\n\t\to(\"works\", function () {\n\t\t\tconst shortBlock = [0x01, 0x00] // literal length & data\n\n\t\t\tconst longBlock = [0x81, 0x80].concat(new Array(128).fill(2)) // first byte - length of length, second length of data, rest is data\n\n\t\t\tconst anotherLongBlock = [0x81, 0x81].concat(new Array(129).fill(3)) // first byte - length of length, second length of data, rest is data\n\n\t\t\tconst anotherShortBlock = [0x02, 0x01, 0x02]\n\t\t\t// 0  1  2  3  4  5  6  7  8  9  10 11 12 13\n\t\t\t// l  d  l  l  d  d  d  l  l  d  l  d  d\n\t\t\t// [1 ]  [2          ]  [3     ] [4    ]\n\t\t\t// \"i\" - length, \"d\" data\n\t\t\tconst row = new Uint8Array([shortBlock, longBlock, anotherLongBlock, anotherShortBlock].flat())\n\t\t\tconst spy = makeSpy()\n\t\t\titerateBinaryBlocks(row, spy)\n\t\t\to(JSON.stringify(spy.invocations)).equals(\n\t\t\t\tJSON.stringify([\n\t\t\t\t\t[new Uint8Array(shortBlock.slice(1)), 0, 2, 0],\n\t\t\t\t\t[new Uint8Array(longBlock.slice(2)), 2, 132, 1],\n\t\t\t\t\t[new Uint8Array(anotherLongBlock.slice(2)), 132, 263, 2],\n\t\t\t\t\t[new Uint8Array(anotherShortBlock.slice(1)), 263, 266, 3],\n\t\t\t\t]),\n\t\t\t)\n\t\t})\n\t})\n\to.spec(\"appendBinaryBlocks\", function () {\n\t\to(\"resizes when needed\", function () {\n\t\t\tconst row = new Uint8Array([0x01, 0x02])\n\t\t\tconst newDataOne = new Uint8Array(256).fill(2)\n\t\t\tconst newDataTwo = new Uint8Array([0x01])\n\t\t\tconst expected = concat(new Uint8Array([0x01, 0x02]), new Uint8Array([0x82, 0x01, 0x00]), newDataOne, new Uint8Array([0x01, 0x01]))\n\t\t\to(JSON.stringify(appendBinaryBlocks([newDataOne, newDataTwo], row))).equals(JSON.stringify(expected))\n\t\t})\n\t})\n\to.spec(\"encodeNumberBlock\", function () {\n\t\to(\"encodes small numbers\", function () {\n\t\t\tconst block = new Uint8Array(1)\n\t\t\tencodeNumberBlock(3, block, 0)\n\t\t\to(Array.from(block)).deepEquals([3])\n\t\t})\n\t\to(\"encodes big numbers\", function () {\n\t\t\tconst number = 1550759936805\n\t\t\tconst block = new Uint8Array(1 + 6)\n\t\t\tencodeNumberBlock(number, block, 0)\n\t\t\to(Array.from(block)).deepEquals([0x80 | 0x6, 0x1, 0x69, 0x10, 0x7e, 0xc3, 0x25])\n\t\t})\n\t})\n})\n","// @bundleInto:boot\n\nimport { RouteResolver } from \"mithril\"\n\nexport type ApplicationPaths = Record<string, RouteResolver>\ntype ViewResolvers = {\n\tlogin: RouteResolver\n\ttermination: RouteResolver\n\tmail: RouteResolver\n\texternalLogin: RouteResolver\n\tcontact: RouteResolver\n\tcontactList: RouteResolver\n\tsearch: RouteResolver\n\tsettings: RouteResolver\n\tcalendar: RouteResolver\n\tsignup: RouteResolver\n\tgiftcard: RouteResolver\n\trecover: RouteResolver\n\twebauthn: RouteResolver\n\twebauthnmobile: RouteResolver\n}\n\nexport function applicationPaths({\n\tlogin,\n\ttermination,\n\tmail,\n\texternalLogin,\n\tcontact,\n\tcontactList,\n\tsearch,\n\tsettings,\n\tcalendar,\n\tsignup,\n\tgiftcard,\n\trecover,\n\twebauthn,\n\twebauthnmobile,\n}: ViewResolvers): ApplicationPaths {\n\treturn {\n\t\t\"/login\": login,\n\t\t\"/termination\": termination,\n\t\t\"/signup\": signup,\n\t\t\"/recover\": recover,\n\t\t\"/mailto\": mail,\n\t\t\"/mail\": mail,\n\t\t\"/mail/:folderId\": mail,\n\t\t\"/mail/:folderId/:mailId\": mail,\n\t\t\"/ext\": externalLogin,\n\t\t\"/contact\": contact,\n\t\t\"/contact/:listId\": contact,\n\t\t\"/contact/:listId/:contactId\": contact,\n\t\t\"/contactlist\": contactList,\n\t\t\"/contactlist/:listId\": contactList,\n\t\t\"/contactlist/:listId/:Id\": contactList,\n\t\t\"/search/:category\": search,\n\t\t\"/search/:category/:id\": search,\n\t\t\"/settings\": settings,\n\t\t\"/settings/:folder\": settings,\n\t\t\"/settings/:folder/:id\": settings,\n\t\t\"/calendar\": calendar,\n\t\t\"/calendar/:view\": calendar,\n\t\t\"/calendar/:view/:date\": calendar,\n\t\t\"/giftcard/\": giftcard,\n\t\t\"/webauthn\": webauthn,\n\t\t\"/webauthnmobile\": webauthnmobile,\n\t}\n}\n\nexport function getPathBases(): Array<string> {\n\tconst paths = Object.keys(applicationPaths({} as any))\n\tconst uniquePathBases = new Set(paths.map((path) => path.split(\"/\")[1]))\n\treturn Array.from(uniquePathBases)\n}\n","// set by the build script\nimport { getPathBases } from \"../../mail-app/ApplicationPaths.js\"\n\n// eslint-disable-next-line no-var\ndeclare var filesToCache: () => Array<string>\n// eslint-disable-next-line no-var\ndeclare var version: () => string\n// eslint-disable-next-line no-var\ndeclare var customDomainCacheExclusions: () => Array<string>\n// eslint-disable-next-line no-var\ndeclare var shouldTakeOverImmediately: () => boolean\n// test case\nconst versionString = typeof version === \"undefined\" ? \"test\" : version()\n\n// either tuta.com or tutanota.com without or with a subdomain or a domain without dots (e.g. localhost).\n// otherwise it is a custom domain\nconst isTutanotaDomain = () => {\n\tconst hostname = self.location.hostname\n\treturn (\n\t\thostname === \"tutanota.com\" ||\n\t\thostname === \"tuta.com\" ||\n\t\thostname.endsWith(\".tutanota.com\") ||\n\t\thostname.endsWith(\".tuta.com\") ||\n\t\thostname.indexOf(\".\") === -1\n\t)\n}\n\nconst urlWithoutQuery = (urlString: string) => {\n\tconst queryIndex = urlString.indexOf(\"?\")\n\treturn queryIndex !== -1 ? urlString.substring(0, queryIndex) : urlString\n}\n\nexport class ServiceWorker {\n\t_caches: CacheStorage\n\t_cacheName: string\n\t_selfLocation: string\n\t_possibleRest: string\n\t_applicationPaths: string[]\n\t_isTutanotaDomain: boolean\n\t_urlsToCache: string[]\n\t_isBuggyChrome: boolean\n\n\tconstructor(urlsToCache: string[], caches: CacheStorage, cacheName: string, selfLocation: string, applicationPaths: string[], isTutanotaDomain: boolean) {\n\t\tthis._urlsToCache = urlsToCache\n\t\tthis._caches = caches\n\t\tthis._cacheName = cacheName\n\t\tthis._selfLocation = selfLocation\n\t\tthis._possibleRest = selfLocation + \"rest\"\n\t\tthis._applicationPaths = applicationPaths\n\t\tthis._isTutanotaDomain = isTutanotaDomain\n\t\tthis._isBuggyChrome = false\n\n\t\tif (typeof navigator !== \"undefined\") {\n\t\t\tconst results = navigator.userAgent.match(/Chrome\\/([0-9]*)\\./)\n\n\t\t\tif (results != null && results.length > 0) {\n\t\t\t\tconst numberVersion = Number(results[1])\n\n\t\t\t\tif (!isNaN(numberVersion) && numberVersion < 50) {\n\t\t\t\t\t// Chrome 44-49 has weird bug where ByteStreams from cache are not interpreted correctly\n\t\t\t\t\tconsole.log(\"Buggy Chrome version detected. Deferring to no-op sw.js\")\n\t\t\t\t\tthis._isBuggyChrome = true\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\trespond(evt: FetchEvent): void {\n\t\tif (this._isBuggyChrome) {\n\t\t\t// Defer to default browser behavior\n\t\t\treturn\n\t\t}\n\n\t\tconst urlWithoutParams = urlWithoutQuery(evt.request.url)\n\n\t\tif (this._urlsToCache.indexOf(urlWithoutParams) !== -1 || (this._isTutanotaDomain && this._selfLocation === urlWithoutParams)) {\n\t\t\tevt.respondWith(this._fromCache(urlWithoutParams))\n\t\t} else if (/translation-.+-.+\\.js/.test(urlWithoutParams)) {\n\t\t\tevt.respondWith(this.fromCacheOrFetchAndCache(evt.request))\n\t\t} else if (this._shouldRedirectToDefaultPage(urlWithoutParams)) {\n\t\t\tevt.respondWith(this._redirectToDefaultPage(evt.request.url))\n\t\t}\n\t}\n\n\tprecache(): Promise<any> {\n\t\treturn this._caches.open(this._cacheName).then((cache) =>\n\t\t\tthis._addAllToCache(cache, this._urlsToCache)\n\t\t\t\t.then(() => cache.match(\"index.html\"))\n\t\t\t\t.then((r: Response) => {\n\t\t\t\t\tif (!r) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\t// Reconstructing response to 1. Save it under different url 2. Get rid of redirect in response<<\n\t\t\t\t\tconst clonedResponse: Response = r.clone()\n\t\t\t\t\tconst bodyPromise = clonedResponse.body != null ? Promise.resolve(clonedResponse.body) : clonedResponse.blob()\n\t\t\t\t\treturn bodyPromise\n\t\t\t\t\t\t.then(\n\t\t\t\t\t\t\t(body: ReadableStream | Blob) =>\n\t\t\t\t\t\t\t\tnew Response(body, {\n\t\t\t\t\t\t\t\t\theaders: clonedResponse.headers,\n\t\t\t\t\t\t\t\t\tstatus: clonedResponse.status,\n\t\t\t\t\t\t\t\t\tstatusText: clonedResponse.statusText,\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.then((r: Response) => cache.put(this._selfLocation, r))\n\t\t\t\t\t\t.then(() => cache.delete(\"index.html\"))\n\t\t\t\t}),\n\t\t)\n\t}\n\n\tdeleteOldCaches(): Promise<any> {\n\t\treturn this._caches\n\t\t\t.keys()\n\t\t\t.then((cacheNames) => Promise.all(cacheNames.map((cacheName) => (cacheName !== this._cacheName ? caches.delete(cacheName) : Promise.resolve()))))\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.log(\"error while deleting old caches\", e)\n\t\t\t\tthrow e\n\t\t\t})\n\t}\n\n\tfromCacheOrFetchAndCache(request: Request): Promise<Response> {\n\t\treturn this._caches.open(this._cacheName).then((cache) => {\n\t\t\treturn cache.match(request.url).then((response) => {\n\t\t\t\tif (response) {\n\t\t\t\t\treturn response\n\t\t\t\t} else {\n\t\t\t\t\treturn fetch(request, {\n\t\t\t\t\t\tredirect: \"error\",\n\t\t\t\t\t}).then((networkResponse) => {\n\t\t\t\t\t\treturn cache.put(request, networkResponse.clone()).then(() => networkResponse)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t})\n\t}\n\n\t_fromCache(requestUrl: string): Promise<Response> {\n\t\treturn (\n\t\t\tthis._caches\n\t\t\t\t.open(this._cacheName)\n\t\t\t\t.then((cache) => cache.match(requestUrl)) // Cache magically disappears on iOS 12.1 after the browser restart.\n\t\t\t\t// See #758. See https://bugs.webkit.org/show_bug.cgi?id=190269\n\t\t\t\t.then((r) => r || fetch(requestUrl))\n\t\t)\n\t}\n\n\t// needed because FF fails to cache.addAll()\n\t_addAllToCache(cache: Cache, urlsToCache: string[]): Promise<any> {\n\t\treturn Promise.all(\n\t\t\turlsToCache.map((url) =>\n\t\t\t\tcache.add(url).catch((e) => {\n\t\t\t\t\tconsole.log(\"failed to add\", url, e)\n\t\t\t\t\tthrow e\n\t\t\t\t}),\n\t\t\t),\n\t\t)\n\t}\n\n\t_redirectToDefaultPage(url: string): Response {\n\t\t// We keep the hash in the url. This might lead to a situation where the client\n\t\t// has the hash twice (once encoded in \"r\" part and once in the url directly) but\n\t\t// the webapp has been trained to deal with it (see getStartUrl() in app.ts)\n\t\tconst withoutBasePath = url.substring(this._selfLocation.length)\n\t\tconst params = new URLSearchParams({\n\t\t\tr: withoutBasePath,\n\t\t})\n\t\treturn Response.redirect(`${this._selfLocation}?${params.toString()}`)\n\t}\n\n\t_shouldRedirectToDefaultPage(urlWithout: string): boolean {\n\t\treturn (\n\t\t\t!urlWithout.startsWith(this._possibleRest) &&\n\t\t\turlWithout.startsWith(this._selfLocation) &&\n\t\t\turlWithout !== this._selfLocation && // if we are already on the page we need\n\t\t\tthis._applicationPaths.includes(this._getFirstPathComponent(urlWithout))\n\t\t)\n\t}\n\n\t_getFirstPathComponent(url: string): string {\n\t\tconst pathElements = url.substring(this._selfLocation.length).split(\"/\")\n\t\treturn pathElements.length > 0 ? pathElements[0] : \"\"\n\t}\n}\n\nconst init = (sw: ServiceWorker) => {\n\tconsole.log(\"sw init\", versionString)\n\tconst scope = self as unknown as ServiceWorkerGlobalScope\n\n\tscope.addEventListener(\"install\", (evt: ExtendableEvent) => {\n\t\tconsole.log(\"SW: being installed\", versionString)\n\t\tevt.waitUntil(\n\t\t\tsw.precache().then(() => {\n\t\t\t\tif (shouldTakeOverImmediately()) {\n\t\t\t\t\tscope.skipWaiting()\n\t\t\t\t}\n\t\t\t}),\n\t\t)\n\t})\n\tscope.addEventListener(\"activate\", (event) => {\n\t\tconsole.log(\"sw activate\", versionString)\n\t\tevent.waitUntil(sw.deleteOldCaches().then(() => scope.clients.claim()))\n\t})\n\tscope.addEventListener(\"fetch\", (evt: FetchEvent) => {\n\t\tsw.respond(evt)\n\t})\n\tscope.addEventListener(\"message\", (event) => {\n\t\tconsole.log(\"sw message\", versionString, event)\n\n\t\tif (event.data === \"update\") {\n\t\t\tscope.skipWaiting()\n\t\t}\n\t})\n\tscope.addEventListener(\"error\", ({ error }) => {\n\t\tconst serializedError = {\n\t\t\tname: error.name,\n\t\t\tmessage: error.message,\n\t\t\tstack: error.stack,\n\t\t\tdata: error.data,\n\t\t}\n\t\treturn scope.clients.matchAll().then((allClients) => {\n\t\t\tfor (const c of allClients) {\n\t\t\t\tc.postMessage({\n\t\t\t\t\ttype: \"error\",\n\t\t\t\t\tvalue: serializedError,\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t})\n}\n\n// Only exported for tests.\n// We export it like this because this file is standalone and not wrapped into module loader context when bundled.\n// With normal import Babel generates code which tries to set __esModule on exports but we have no exports in standalone.\n// We hack module in dist.js by prepending `self.module` = {} so that the line below actually works.\n// We should probably split the class and the actual content into separate files and just bundle them together during the build.\n// module.exports = {ServiceWorker}-\n// do not add listeners for Node tests. env is not set for production\nif (typeof env === \"undefined\" || env.mode !== \"Test\") {\n\tconst cacheName = \"CODE_CACHE-v\" + versionString\n\tconst selfLocation = self.location.href.substring(0, self.location.href.indexOf(\"sw.js\"))\n\tconst exclusions = customDomainCacheExclusions()\n\tconst urlsToCache = (isTutanotaDomain() ? filesToCache() : filesToCache().filter((file) => !exclusions.includes(file))).map((file) => selfLocation + file)\n\tconst applicationPaths = getPathBases()\n\tconst sw = new ServiceWorker(urlsToCache, caches, cacheName, selfLocation, applicationPaths, isTutanotaDomain())\n\tinit(sw)\n}\n","import o from \"@tutao/otest\"\nimport { ServiceWorker } from \"../../../src/common/serviceworker/sw.js\"\no.spec(\n\t\"ServiveWorkerTest \",\n\tnode(function () {\n\t\tconst root = \"https://test/\"\n\t\tlet caches: CacheStorage = {} as any\n\t\tlet sw: ServiceWorker\n\t\tlet exclusions\n\t\tlet applicationPaths = [\"mail\", \"login\"]\n\t\to.before(function () {\n\t\t\texclusions = []\n\t\t\tsw = new ServiceWorker([], caches, \"testCache\", root, applicationPaths, true)\n\t\t})\n\t\to(\"shouldNotRedirectRootFile\", function () {\n\t\t\to(sw._shouldRedirectToDefaultPage(root + \"index.html\")).equals(false)\n\t\t})\n\t\to(\"shouldNotRedirectOtherResource\", function () {\n\t\t\to(sw._shouldRedirectToDefaultPage(root + \"images/test.png\")).equals(false)\n\t\t})\n\t\to(\"shouldNotRedirectRoot\", function () {\n\t\t\to(sw._shouldRedirectToDefaultPage(root)).equals(false)\n\t\t})\n\t\to(\"shouldRedirectWithPath\", function () {\n\t\t\to(sw._shouldRedirectToDefaultPage(root + \"mail/blah/someId\")).equals(true)\n\t\t})\n\t\to(\"shouldRedirectWithMailPathComponent\", function () {\n\t\t\to(sw._shouldRedirectToDefaultPage(root + \"mail\")).equals(true)\n\t\t})\n\t\to(\"shouldNotRedirectWithUnknownPath\", function () {\n\t\t\to(sw._shouldRedirectToDefaultPage(root + \"otherpath/blah/someId\")).equals(false)\n\t\t})\n\t\to(\"shouldNotRedirectRestRequests\", function () {\n\t\t\to(sw._shouldRedirectToDefaultPage(root + \"rest/draftservice\")).equals(false)\n\t\t})\n\t\to(\"shouldNotRedirectExclusionOnCustonDomain\", function () {\n\t\t\tsw = new ServiceWorker([], caches, \"testCache\", root, applicationPaths, false)\n\t\t\texclusions.push(\"index.html\")\n\t\t\texclusions.push(\"index.js\")\n\t\t\to(sw._shouldRedirectToDefaultPage(root + \"index.html\")).equals(false)\n\t\t\to(sw._shouldRedirectToDefaultPage(root + \"index.js\")).equals(false)\n\t\t})\n\t\to(\"shouldRedirectOnCustonDomain\", function () {\n\t\t\tsw = new ServiceWorker([], caches, \"testCache\", root, applicationPaths, false)\n\t\t\texclusions.push(\"index.html\")\n\t\t\to(sw._shouldRedirectToDefaultPage(root + \"mail/blah\")).equals(true)\n\t\t})\n\t}),\n)\n","import o from \"@tutao/otest\"\nimport { batchMod, EntityModificationType, EventQueue, QueuedBatch } from \"../../../../../src/common/api/worker/EventQueue.js\"\nimport { EntityUpdate, EntityUpdateTypeRef, GroupTypeRef } from \"../../../../../src/common/api/entities/sys/TypeRefs.js\"\nimport { OperationType } from \"../../../../../src/common/api/common/TutanotaConstants.js\"\nimport { defer, delay } from \"@tutao/tutanota-utils\"\nimport { ConnectionError } from \"../../../../../src/common/api/common/error/RestError.js\"\nimport { MailboxGroupRootTypeRef, MailTypeRef } from \"../../../../../src/common/api/entities/tutanota/TypeRefs.js\"\nimport { spy } from \"@tutao/tutanota-test-utils\"\nimport { createTestEntity } from \"../../../TestUtils.js\"\n\no.spec(\"EventQueueTest\", function () {\n\tlet queue: EventQueue\n\tlet processElement: any\n\tlet lastProcess: { resolve: () => void; reject: (Error) => void; promise: Promise<void> }\n\n\tconst newUpdate = (type: OperationType, instanceId: string) => {\n\t\tconst update = createTestEntity(EntityUpdateTypeRef)\n\t\tupdate.operation = type\n\t\tupdate.instanceId = instanceId\n\t\treturn update\n\t}\n\n\to.beforeEach(function () {\n\t\tlastProcess = defer()\n\t\tprocessElement = spy(() => {\n\t\t\tif (queue.queueSize() === 1) {\n\t\t\t\t// the last element is removed right after processing it\n\t\t\t\tlastProcess.resolve()\n\t\t\t}\n\t\t\treturn Promise.resolve()\n\t\t})\n\t\tqueue = new EventQueue(\"test!\", true, processElement)\n\t})\n\n\to(\"pause and resume\", async function () {\n\t\tqueue.pause()\n\t\tconst groupId = \"groupId\"\n\t\tconst batchWithOnlyDelete: QueuedBatch = {\n\t\t\tevents: [newUpdate(OperationType.DELETE, \"1\")],\n\t\t\tgroupId,\n\t\t\tbatchId: \"1\",\n\t\t}\n\t\tqueue.addBatches([batchWithOnlyDelete])\n\n\t\tawait delay(5)\n\t\to(queue.queueSize()).equals(1)\n\n\t\tqueue.resume()\n\t\tawait lastProcess.promise\n\t\to(queue.queueSize()).equals(0)\n\t})\n\n\to(\"start after pause\", async function () {\n\t\tqueue.pause()\n\t\tconst groupId = \"groupId\"\n\t\tconst batchWithOnlyDelete: QueuedBatch = {\n\t\t\tevents: [newUpdate(OperationType.DELETE, \"1\")],\n\t\t\tgroupId,\n\t\t\tbatchId: \"1\",\n\t\t}\n\t\tqueue.addBatches([batchWithOnlyDelete])\n\n\t\tawait delay(5)\n\t\tqueue.start()\n\t\to(queue.queueSize()).equals(1)\n\t})\n\n\to(\"handle ConnectionError\", async function () {\n\t\tconst groupId = \"groupId\"\n\t\tconst batchWithThrow: QueuedBatch = {\n\t\t\tevents: [newUpdate(OperationType.CREATE, \"2\"), newUpdate(OperationType.DELETE, \"2\")],\n\t\t\tgroupId,\n\t\t\tbatchId: \"2\",\n\t\t}\n\t\tconst batchWithOnlyCreate: QueuedBatch = {\n\t\t\tevents: [newUpdate(OperationType.CREATE, \"3\")],\n\t\t\tgroupId,\n\t\t\tbatchId: \"3\",\n\t\t}\n\n\t\tlastProcess = defer()\n\t\tprocessElement = spy(() => {\n\t\t\tif (queue.queueSize() === 1) {\n\t\t\t\t// the last element is removed right after processing it\n\t\t\t\tlastProcess.resolve()\n\t\t\t}\n\t\t\treturn Promise.resolve()\n\t\t})\n\t\tlet queue = new EventQueue(\"test 2!\", true, (nextElement: QueuedBatch) => {\n\t\t\tif (nextElement.batchId === \"2\") {\n\t\t\t\treturn Promise.reject(new ConnectionError(\"no connection\"))\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"should not be called\")\n\t\t\t}\n\t\t})\n\t\tqueue.addBatches([batchWithThrow, batchWithOnlyCreate])\n\n\t\tqueue.start()\n\t\tawait delay(5)\n\t\to(queue.queueSize()).equals(2)\n\t\to(queue.__processingBatch).equals(null)\n\t})\n\n\to.spec(\"collapsing events\", function () {\n\t\to.beforeEach(function () {\n\t\t\tqueue.pause()\n\t\t})\n\n\t\to(\"create + delete == delete\", async function () {\n\t\t\tconst createEvent = createUpdate(OperationType.CREATE, \"new-mail-list\", \"1\", \"u1\")\n\t\t\tconst deleteEvent = createUpdate(OperationType.DELETE, createEvent.instanceListId, createEvent.instanceId, \"u2\")\n\n\t\t\tqueue.add(\"batch-id-1\", \"group-id\", [createEvent])\n\t\t\tqueue.add(\"batch-id-2\", \"group-id\", [deleteEvent])\n\t\t\tqueue.resume()\n\t\t\tawait lastProcess.promise\n\n\t\t\tconst expectedDelete = createUpdate(OperationType.DELETE, createEvent.instanceListId, createEvent.instanceId, \"u2\")\n\n\t\t\to(processElement.invocations).deepEquals([\n\t\t\t\t[{ events: [], batchId: \"batch-id-1\", groupId: \"group-id\" }],\n\t\t\t\t[{ events: [expectedDelete], batchId: \"batch-id-2\", groupId: \"group-id\" }],\n\t\t\t])\n\t\t})\n\n\t\to(\"create + update == create\", async function () {\n\t\t\tconst createEvent = createUpdate(OperationType.CREATE, \"new-mail-list\", \"1\", \"u1\")\n\t\t\tconst updateEvent = createUpdate(OperationType.UPDATE, createEvent.instanceListId, createEvent.instanceId, \"u2\")\n\n\t\t\tqueue.add(\"batch-id-1\", \"group-id\", [createEvent])\n\t\t\tqueue.add(\"batch-id-2\", \"group-id\", [updateEvent])\n\t\t\tqueue.resume()\n\t\t\tawait lastProcess.promise\n\n\t\t\tconst expectedCreate = createUpdate(OperationType.CREATE, createEvent.instanceListId, createEvent.instanceId, \"u1\")\n\n\t\t\to(processElement.invocations).deepEquals([\n\t\t\t\t[{ events: [expectedCreate], batchId: \"batch-id-1\", groupId: \"group-id\" }],\n\t\t\t\t// new update got optimized away on the spot\n\t\t\t])\n\t\t})\n\n\t\to(\"create + create == create + create\", async function () {\n\t\t\tconst createEvent = createUpdate(OperationType.CREATE, \"new-mail-list\", \"1\", \"u1\")\n\t\t\tconst createEvent2 = createUpdate(OperationType.CREATE, createEvent.instanceListId, createEvent.instanceId, \"u2\")\n\n\t\t\tqueue.add(\"batch-id-1\", \"group-id\", [createEvent])\n\t\t\tqueue.add(\"batch-id-2\", \"group-id\", [createEvent2])\n\t\t\tqueue.resume()\n\t\t\tawait lastProcess.promise\n\n\t\t\tconst expectedCreate = createUpdate(OperationType.CREATE, createEvent.instanceListId, createEvent.instanceId, \"u1\")\n\t\t\tconst expectedCreate2 = createUpdate(OperationType.CREATE, createEvent.instanceListId, createEvent.instanceId, \"u2\")\n\n\t\t\to(processElement.invocations).deepEquals([\n\t\t\t\t[{ events: [expectedCreate], batchId: \"batch-id-1\", groupId: \"group-id\" }],\n\t\t\t\t[{ events: [expectedCreate2], batchId: \"batch-id-2\", groupId: \"group-id\" }],\n\t\t\t])\n\t\t})\n\n\t\to(\"create + update + delete == delete\", async function () {\n\t\t\tconst createEvent = createUpdate(OperationType.CREATE, \"new-mail-list\", \"1\", \"u1\")\n\t\t\tconst updateEvent = createUpdate(OperationType.UPDATE, \"new-mail-list\", \"1\", \"u2\")\n\t\t\tconst deleteEvent = createUpdate(OperationType.DELETE, createEvent.instanceListId, createEvent.instanceId, \"u\")\n\n\t\t\tqueue.add(\"batch-id-1\", \"group-id\", [createEvent])\n\t\t\tqueue.add(\"batch-id-2\", \"group-id\", [updateEvent])\n\t\t\tqueue.add(\"batch-id-3\", \"group-id\", [deleteEvent])\n\t\t\tqueue.resume()\n\t\t\tawait lastProcess.promise\n\n\t\t\tconst expectedDelete = createUpdate(OperationType.DELETE, createEvent.instanceListId, createEvent.instanceId, \"u\")\n\n\t\t\to(processElement.invocations).deepEquals([\n\t\t\t\t[{ events: [], batchId: \"batch-id-1\", groupId: \"group-id\" }],\n\t\t\t\t// update event was optimized away\n\t\t\t\t[{ events: [expectedDelete], batchId: \"batch-id-3\", groupId: \"group-id\" }],\n\t\t\t])\n\t\t})\n\n\t\to(\"delete + create == delete + create\", async function () {\n\t\t\t// DELETE can happen after CREATE in case of custom id. We keep it as-is\n\t\t\tconst deleteEvent = createUpdate(OperationType.DELETE, \"mail-list\", \"1\", \"u0\")\n\t\t\tconst createEvent = createUpdate(OperationType.CREATE, \"mail-list\", \"1\", \"u1\")\n\n\t\t\tqueue.add(\"batch-id-0\", \"group-id\", [deleteEvent])\n\t\t\tqueue.add(\"batch-id-1\", \"group-id\", [createEvent])\n\t\t\tqueue.resume()\n\t\t\tawait lastProcess.promise\n\n\t\t\to(processElement.invocations).deepEquals([\n\t\t\t\t[{ events: [deleteEvent], batchId: \"batch-id-0\", groupId: \"group-id\" }],\n\t\t\t\t[{ events: [createEvent], batchId: \"batch-id-1\", groupId: \"group-id\" }],\n\t\t\t])\n\t\t})\n\n\t\to(\"delete + create + delete + create == delete + create\", async function () {\n\t\t\t// This tests that create still works a\n\t\t\tconst deleteEvent1 = createUpdate(OperationType.DELETE, \"list\", \"1\", \"u1\")\n\t\t\tconst nonEmptyEventInBetween = createUpdate(OperationType.CREATE, \"list2\", \"2\", \"u1.1\")\n\t\t\tconst createEvent1 = createUpdate(OperationType.CREATE, \"list\", \"1\", \"u2\")\n\n\t\t\tconst deleteEvent2 = createUpdate(OperationType.DELETE, \"list\", \"1\", \"u3\")\n\t\t\tconst createEvent2 = createUpdate(OperationType.CREATE, \"list\", \"1\", \"u4\")\n\n\t\t\tqueue.add(\"batch-id-1\", \"group-id\", [deleteEvent1])\n\t\t\tqueue.add(\"batch-id-1.1\", \"group-id\", [nonEmptyEventInBetween])\n\t\t\tqueue.add(\"batch-id-2\", \"group-id\", [createEvent1])\n\t\t\tqueue.add(\"batch-id-3\", \"group-id\", [deleteEvent2])\n\t\t\tqueue.add(\"batch-id-4\", \"group-id\", [createEvent2])\n\t\t\tqueue.resume()\n\t\t\tawait lastProcess.promise\n\n\t\t\tconst expectedDelete = createUpdate(OperationType.DELETE, createEvent1.instanceListId, createEvent1.instanceId, \"u1\")\n\t\t\tconst expectedCreate = createUpdate(OperationType.CREATE, createEvent1.instanceListId, createEvent1.instanceId, \"u4\")\n\t\t\tconst expectedDelete2 = createUpdate(OperationType.DELETE, createEvent1.instanceListId, createEvent1.instanceId, \"u3\")\n\n\t\t\to(processElement.invocations).deepEquals([\n\t\t\t\t[{ events: [expectedDelete], batchId: \"batch-id-1\", groupId: \"group-id\" }],\n\t\t\t\t[{ events: [nonEmptyEventInBetween], batchId: \"batch-id-1.1\", groupId: \"group-id\" }],\n\t\t\t\t[{ events: [], batchId: \"batch-id-2\", groupId: \"group-id\" }],\n\t\t\t\t[{ events: [expectedDelete2], batchId: \"batch-id-3\", groupId: \"group-id\" }],\n\t\t\t\t[{ events: [expectedCreate], batchId: \"batch-id-4\", groupId: \"group-id\" }],\n\t\t\t])\n\t\t})\n\n\t\to(\"delete (list 1) + create (list 2) == delete (list 1) + create (list 2)\", async function () {\n\t\t\t// entity updates with for the same element id but different list IDs do not influence each other\n\t\t\tconst deleteEvent1 = createUpdate(OperationType.DELETE, \"list1\", \"1\", \"u1\")\n\t\t\tconst createEvent1 = createUpdate(OperationType.CREATE, \"list2\", \"1\", \"u2\")\n\n\t\t\tqueue.add(\"batch-id-1\", \"group-id\", [deleteEvent1])\n\t\t\tqueue.add(\"batch-id-2\", \"group-id\", [createEvent1])\n\t\t\tqueue.resume()\n\t\t\tawait lastProcess.promise\n\n\t\t\tconst expectedDelete = createUpdate(OperationType.DELETE, deleteEvent1.instanceListId, deleteEvent1.instanceId, \"u1\")\n\t\t\tconst expectedCreate = createUpdate(OperationType.CREATE, createEvent1.instanceListId, createEvent1.instanceId, \"u2\")\n\n\t\t\to(processElement.invocations).deepEquals([\n\t\t\t\t[{ events: [expectedDelete], batchId: \"batch-id-1\", groupId: \"group-id\" }],\n\t\t\t\t[{ events: [expectedCreate], batchId: \"batch-id-2\", groupId: \"group-id\" }],\n\t\t\t])\n\t\t})\n\n\t\to(\"create (list 1) + update (list 1) + delete (list 2) == create (list 1) + delete (list 2)\", async function () {\n\t\t\t// entity updates with for the same element id but different list IDs do not influence each other\n\t\t\tconst createEvent1 = createUpdate(OperationType.CREATE, \"list1\", \"1\", \"u1\")\n\t\t\tconst updateEvent1 = createUpdate(OperationType.UPDATE, \"list1\", \"1\", \"u2\")\n\t\t\tconst deleteEvent1 = createUpdate(OperationType.DELETE, \"list2\", \"1\", \"u3\")\n\n\t\t\tqueue.add(\"batch-id-1\", \"group-id\", [createEvent1])\n\t\t\tqueue.add(\"batch-id-2\", \"group-id\", [updateEvent1])\n\t\t\tqueue.add(\"batch-id-3\", \"group-id\", [deleteEvent1])\n\t\t\tqueue.resume()\n\t\t\tawait lastProcess.promise\n\n\t\t\tconst expectedCreate = createUpdate(OperationType.CREATE, createEvent1.instanceListId, createEvent1.instanceId, \"u1\")\n\t\t\tconst expectedDelete = createUpdate(OperationType.DELETE, deleteEvent1.instanceListId, deleteEvent1.instanceId, \"u3\")\n\n\t\t\to(processElement.invocations).deepEquals([\n\t\t\t\t[{ events: [expectedCreate], batchId: \"batch-id-1\", groupId: \"group-id\" }],\n\t\t\t\t[{ events: [expectedDelete], batchId: \"batch-id-3\", groupId: \"group-id\" }],\n\t\t\t])\n\t\t})\n\n\t\to(\"same batch in two different groups\", async function () {\n\t\t\tconst createEvent1 = createUpdate(OperationType.CREATE, \"old-mail-list\", \"1\", \"u0\")\n\t\t\tconst createEvent2 = createUpdate(OperationType.CREATE, \"old-mail-list\", \"1\", \"u0\")\n\n\t\t\tqueue.add(\"batch-id-1\", \"group-id-1\", [createEvent1])\n\t\t\tqueue.add(\"batch-id-1\", \"group-id-2\", [createEvent2])\n\t\t\tqueue.resume()\n\t\t\tawait lastProcess.promise\n\n\t\t\to(processElement.invocations).deepEquals([\n\t\t\t\t[{ events: [createEvent1], batchId: \"batch-id-1\", groupId: \"group-id-1\" }],\n\t\t\t\t[{ events: [createEvent1], batchId: \"batch-id-1\", groupId: \"group-id-2\" }],\n\t\t\t])\n\t\t})\n\n\t\to(\n\t\t\t\"[delete (list 1) + create (list 2)] + delete (list 2) + create (list 2) = [delete (list 1) + create (list 2)] + delete (list 2) + create (list 2)\",\n\t\t\tasync function () {\n\t\t\t\tconst deleteEvent1 = createUpdate(OperationType.DELETE, \"l1\", \"1\", \"u0\")\n\t\t\t\tconst createEvent1 = createUpdate(OperationType.CREATE, \"l2\", \"1\", \"u1\")\n\t\t\t\tconst deleteEvent2 = createUpdate(OperationType.DELETE, \"l2\", \"1\", \"u2\")\n\t\t\t\tconst createEvent2 = createUpdate(OperationType.CREATE, \"l2\", \"1\", \"u3\")\n\n\t\t\t\tqueue.add(\"batch-id-1\", \"group-id-1\", [deleteEvent1, createEvent1])\n\t\t\t\tqueue.add(\"batch-id-2\", \"group-id-1\", [deleteEvent2])\n\t\t\t\tqueue.add(\"batch-id-3\", \"group-id-1\", [createEvent2])\n\t\t\t\tqueue.resume()\n\t\t\t\tawait lastProcess.promise\n\n\t\t\t\to(processElement.invocations).deepEquals([\n\t\t\t\t\t[{ events: [deleteEvent1], batchId: \"batch-id-1\", groupId: \"group-id-1\" }],\n\t\t\t\t\t[{ events: [deleteEvent2], batchId: \"batch-id-2\", groupId: \"group-id-1\" }],\n\t\t\t\t\t[{ events: [createEvent2], batchId: \"batch-id-3\", groupId: \"group-id-1\" }],\n\t\t\t\t])\n\t\t\t},\n\t\t)\n\n\t\to(\"optimization does not fail when there are new events with the same id but a different type\", function () {\n\t\t\tconst batchId = \"batch-id-1\"\n\t\t\tconst groupId = \"group-id-1\"\n\t\t\tconst instanceId = \"instance-id-1\"\n\t\t\tconst eventId = \"event-id-1\"\n\t\t\tconst updateEvent1 = createUpdate(OperationType.UPDATE, \"\", instanceId, eventId)\n\t\t\tconst updateEvent2 = createUpdate(OperationType.UPDATE, \"\", instanceId, eventId)\n\t\t\tupdateEvent1.type = GroupTypeRef.type\n\t\t\tupdateEvent2.type = MailboxGroupRootTypeRef.type\n\t\t\tqueue.add(batchId, groupId, [updateEvent1])\n\t\t\tqueue.add(batchId, groupId, [updateEvent2])\n\t\t})\n\n\t\tfunction createUpdate(type: OperationType, listId: Id, instanceId: Id, eventId?: Id): EntityUpdate {\n\t\t\tlet update = createTestEntity(EntityUpdateTypeRef)\n\t\t\tupdate.operation = type\n\t\t\tupdate.instanceListId = listId\n\t\t\tupdate.instanceId = instanceId\n\t\t\tupdate.type = MailTypeRef.type\n\t\t\tupdate.application = MailTypeRef.app\n\t\t\tif (eventId) {\n\t\t\t\tupdate._id = eventId\n\t\t\t}\n\t\t\treturn update\n\t\t}\n\t})\n\n\to.spec(\"batchMod\", function () {\n\t\tconst batchId = \"batchId\"\n\t\tconst instanceListId = \"instanceListId\"\n\t\tconst instanceId = \"instanceId\"\n\t\to(\"one entity with the same id and type\", async () => {\n\t\t\to(\n\t\t\t\tbatchMod(\n\t\t\t\t\tbatchId,\n\t\t\t\t\t[\n\t\t\t\t\t\tcreateTestEntity(EntityUpdateTypeRef, {\n\t\t\t\t\t\t\tapplication: \"tutanota\",\n\t\t\t\t\t\t\ttype: \"mail\",\n\t\t\t\t\t\t\toperation: OperationType.CREATE,\n\t\t\t\t\t\t\tinstanceId,\n\t\t\t\t\t\t\tinstanceListId,\n\t\t\t\t\t\t}),\n\t\t\t\t\t],\n\t\t\t\t\tcreateTestEntity(EntityUpdateTypeRef, {\n\t\t\t\t\t\tapplication: \"tutanota\",\n\t\t\t\t\t\ttype: \"mail\",\n\t\t\t\t\t\toperation: OperationType.CREATE,\n\t\t\t\t\t\tinstanceId,\n\t\t\t\t\t\tinstanceListId,\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t).equals(EntityModificationType.CREATE)\n\t\t})\n\n\t\to(\"there is another op with the same type but different element id\", async () => {\n\t\t\to(\n\t\t\t\tbatchMod(\n\t\t\t\t\tbatchId,\n\t\t\t\t\t[\n\t\t\t\t\t\tcreateTestEntity(EntityUpdateTypeRef, {\n\t\t\t\t\t\t\tapplication: \"tutanota\",\n\t\t\t\t\t\t\ttype: \"mail\",\n\t\t\t\t\t\t\toperation: OperationType.DELETE,\n\t\t\t\t\t\t\tinstanceId: \"instanceId2\",\n\t\t\t\t\t\t\tinstanceListId,\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tcreateTestEntity(EntityUpdateTypeRef, {\n\t\t\t\t\t\t\tapplication: \"tutanota\",\n\t\t\t\t\t\t\ttype: \"mail\",\n\t\t\t\t\t\t\toperation: OperationType.CREATE,\n\t\t\t\t\t\t\tinstanceId,\n\t\t\t\t\t\t\tinstanceListId,\n\t\t\t\t\t\t}),\n\t\t\t\t\t],\n\t\t\t\t\tcreateTestEntity(EntityUpdateTypeRef, {\n\t\t\t\t\t\tapplication: \"tutanota\",\n\t\t\t\t\t\ttype: \"mail\",\n\t\t\t\t\t\toperation: OperationType.CREATE,\n\t\t\t\t\t\tinstanceId,\n\t\t\t\t\t\tinstanceListId,\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t).equals(EntityModificationType.CREATE)\n\t\t})\n\n\t\to(\"there is another op with the same type but different list id\", async () => {\n\t\t\to(\n\t\t\t\tbatchMod(\n\t\t\t\t\tbatchId,\n\t\t\t\t\t[\n\t\t\t\t\t\tcreateTestEntity(EntityUpdateTypeRef, {\n\t\t\t\t\t\t\tapplication: \"tutanota\",\n\t\t\t\t\t\t\ttype: \"mail\",\n\t\t\t\t\t\t\toperation: OperationType.DELETE,\n\t\t\t\t\t\t\tinstanceId,\n\t\t\t\t\t\t\tinstanceListId: \"instanceListId2\",\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tcreateTestEntity(EntityUpdateTypeRef, {\n\t\t\t\t\t\t\tapplication: \"tutanota\",\n\t\t\t\t\t\t\ttype: \"mail\",\n\t\t\t\t\t\t\toperation: OperationType.CREATE,\n\t\t\t\t\t\t\tinstanceId,\n\t\t\t\t\t\t\tinstanceListId,\n\t\t\t\t\t\t}),\n\t\t\t\t\t],\n\t\t\t\t\tcreateTestEntity(EntityUpdateTypeRef, {\n\t\t\t\t\t\tapplication: \"tutanota\",\n\t\t\t\t\t\ttype: \"mail\",\n\t\t\t\t\t\toperation: OperationType.CREATE,\n\t\t\t\t\t\tinstanceId,\n\t\t\t\t\t\tinstanceListId,\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t).equals(EntityModificationType.CREATE)\n\t\t})\n\n\t\to(\"there is another op with the id but different type\", async () => {\n\t\t\to(\n\t\t\t\tbatchMod(\n\t\t\t\t\tbatchId,\n\t\t\t\t\t[\n\t\t\t\t\t\tcreateTestEntity(EntityUpdateTypeRef, {\n\t\t\t\t\t\t\tapplication: \"tutanota\",\n\t\t\t\t\t\t\ttype: \"contact\",\n\t\t\t\t\t\t\toperation: OperationType.DELETE,\n\t\t\t\t\t\t\tinstanceId,\n\t\t\t\t\t\t\tinstanceListId,\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tcreateTestEntity(EntityUpdateTypeRef, {\n\t\t\t\t\t\t\tapplication: \"tutanota\",\n\t\t\t\t\t\t\ttype: \"mail\",\n\t\t\t\t\t\t\toperation: OperationType.CREATE,\n\t\t\t\t\t\t\tinstanceId,\n\t\t\t\t\t\t\tinstanceListId,\n\t\t\t\t\t\t}),\n\t\t\t\t\t],\n\t\t\t\t\tcreateTestEntity(EntityUpdateTypeRef, {\n\t\t\t\t\t\tapplication: \"tutanota\",\n\t\t\t\t\t\ttype: \"mail\",\n\t\t\t\t\t\toperation: OperationType.CREATE,\n\t\t\t\t\t\tinstanceId,\n\t\t\t\t\t\tinstanceListId,\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t).equals(EntityModificationType.CREATE)\n\t\t})\n\n\t\to(\"modification is based on operation of batch, not the argument\", async () => {\n\t\t\to(\n\t\t\t\tbatchMod(\n\t\t\t\t\tbatchId,\n\t\t\t\t\t[\n\t\t\t\t\t\tcreateTestEntity(EntityUpdateTypeRef, {\n\t\t\t\t\t\t\tapplication: \"tutanota\",\n\t\t\t\t\t\t\ttype: \"mail\",\n\t\t\t\t\t\t\toperation: OperationType.CREATE,\n\t\t\t\t\t\t\tinstanceId,\n\t\t\t\t\t\t\tinstanceListId,\n\t\t\t\t\t\t}),\n\t\t\t\t\t],\n\t\t\t\t\tcreateTestEntity(EntityUpdateTypeRef, {\n\t\t\t\t\t\tapplication: \"tutanota\",\n\t\t\t\t\t\ttype: \"mail\",\n\t\t\t\t\t\toperation: OperationType.DELETE,\n\t\t\t\t\t\tinstanceId,\n\t\t\t\t\t\tinstanceListId,\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t).equals(EntityModificationType.CREATE)\n\t\t})\n\t})\n})\n","import o from \"@tutao/otest\"\nimport { MailFacade, phishingMarkerValue, validateMimeTypesForAttachments } from \"../../../../../src/common/api/worker/facades/lazy/MailFacade.js\"\nimport {\n\tInternalRecipientKeyDataTypeRef,\n\tMailAddressTypeRef,\n\tMailTypeRef,\n\tReportedMailFieldMarkerTypeRef,\n\tSecureExternalRecipientKeyDataTypeRef,\n\tSendDraftDataTypeRef,\n\tSymEncInternalRecipientKeyDataTypeRef,\n} from \"../../../../../src/common/api/entities/tutanota/TypeRefs.js\"\nimport { CryptoProtocolVersion, MailAuthenticationStatus, ReportedMailFieldType } from \"../../../../../src/common/api/common/TutanotaConstants.js\"\nimport { object } from \"testdouble\"\nimport { CryptoFacade } from \"../../../../../src/common/api/worker/crypto/CryptoFacade.js\"\nimport { IServiceExecutor } from \"../../../../../src/common/api/common/ServiceRequest.js\"\nimport { EntityClient } from \"../../../../../src/common/api/common/EntityClient.js\"\nimport { BlobFacade } from \"../../../../../src/common/api/worker/facades/lazy/BlobFacade.js\"\nimport { UserFacade } from \"../../../../../src/common/api/worker/facades/UserFacade\"\nimport { NativeFileApp } from \"../../../../../src/common/native/common/FileApp.js\"\nimport { LoginFacade } from \"../../../../../src/common/api/worker/facades/LoginFacade.js\"\nimport { DataFile } from \"../../../../../src/common/api/common/DataFile.js\"\nimport { downcast } from \"@tutao/tutanota-utils\"\nimport { ProgrammingError } from \"../../../../../src/common/api/common/error/ProgrammingError.js\"\nimport { createTestEntity } from \"../../../TestUtils.js\"\nimport { KeyLoaderFacade } from \"../../../../../src/common/api/worker/facades/KeyLoaderFacade.js\"\n\no.spec(\"MailFacade test\", function () {\n\tlet facade: MailFacade\n\tlet userFacade: UserFacade\n\tlet cryptoFacade: CryptoFacade\n\tlet serviceExecutor: IServiceExecutor\n\tlet entity: EntityClient\n\tlet blobFacade: BlobFacade\n\tlet fileApp: NativeFileApp\n\tlet loginFacade: LoginFacade\n\tlet keyLoaderFacade: KeyLoaderFacade\n\n\to.beforeEach(function () {\n\t\tuserFacade = object()\n\t\tblobFacade = object()\n\t\tentity = object()\n\t\tcryptoFacade = object()\n\t\tserviceExecutor = object()\n\t\tfileApp = object()\n\t\tloginFacade = object()\n\t\tkeyLoaderFacade = object()\n\t\tfacade = new MailFacade(userFacade, entity, cryptoFacade, serviceExecutor, blobFacade, fileApp, loginFacade, keyLoaderFacade)\n\t})\n\n\to.spec(\"checkMailForPhishing\", function () {\n\t\to(\"not phishing if no markers\", async function () {\n\t\t\tconst mail = createTestEntity(MailTypeRef, {\n\t\t\t\tsubject: \"Test\",\n\t\t\t\tauthStatus: MailAuthenticationStatus.AUTHENTICATED,\n\t\t\t\tsender: createTestEntity(MailAddressTypeRef, {\n\t\t\t\t\tname: \"a\",\n\t\t\t\t\taddress: \"test@example.com\",\n\t\t\t\t}),\n\t\t\t})\n\t\t\to(await facade.checkMailForPhishing(mail, [{ href: \"https://example.com\", innerHTML: \"link\" }])).equals(false)\n\t\t})\n\n\t\to(\"not phishing if no matching markers\", async function () {\n\t\t\tconst mail = createTestEntity(MailTypeRef, {\n\t\t\t\tsubject: \"Test\",\n\t\t\t\tauthStatus: MailAuthenticationStatus.AUTHENTICATED,\n\t\t\t\tsender: createTestEntity(MailAddressTypeRef, {\n\t\t\t\t\tname: \"a\",\n\t\t\t\t\taddress: \"test@example.com\",\n\t\t\t\t}),\n\t\t\t})\n\t\t\tfacade.phishingMarkersUpdateReceived([\n\t\t\t\tcreateTestEntity(ReportedMailFieldMarkerTypeRef, {\n\t\t\t\t\tmarker: phishingMarkerValue(ReportedMailFieldType.SUBJECT, \"Test 2\"),\n\t\t\t\t}),\n\t\t\t\tcreateTestEntity(ReportedMailFieldMarkerTypeRef, {\n\t\t\t\t\tmarker: phishingMarkerValue(ReportedMailFieldType.FROM_DOMAIN, \"example2.com\"),\n\t\t\t\t}),\n\t\t\t])\n\n\t\t\to(await facade.checkMailForPhishing(mail, [{ href: \"https://example.com\", innerHTML: \"link\" }])).equals(false)\n\t\t})\n\n\t\to(\"not phishing if only from domain matches\", async function () {\n\t\t\tconst mail = createTestEntity(MailTypeRef, {\n\t\t\t\tsubject: \"Test\",\n\t\t\t\tauthStatus: MailAuthenticationStatus.AUTHENTICATED,\n\t\t\t\tsender: createTestEntity(MailAddressTypeRef, {\n\t\t\t\t\tname: \"a\",\n\t\t\t\t\taddress: \"test@example.com\",\n\t\t\t\t}),\n\t\t\t})\n\t\t\tfacade.phishingMarkersUpdateReceived([\n\t\t\t\tcreateTestEntity(ReportedMailFieldMarkerTypeRef, {\n\t\t\t\t\tmarker: phishingMarkerValue(ReportedMailFieldType.SUBJECT, \"Test 2\"),\n\t\t\t\t}),\n\t\t\t\tcreateTestEntity(ReportedMailFieldMarkerTypeRef, {\n\t\t\t\t\tmarker: phishingMarkerValue(ReportedMailFieldType.FROM_DOMAIN, \"example.com\"),\n\t\t\t\t}),\n\t\t\t])\n\n\t\t\to(await facade.checkMailForPhishing(mail, [{ href: \"https://example.com\", innerHTML: \"link\" }])).equals(false)\n\t\t})\n\n\t\to(\"not phishing if only subject matches\", async function () {\n\t\t\tconst mail = createTestEntity(MailTypeRef, {\n\t\t\t\tsubject: \"Test\",\n\t\t\t\tauthStatus: MailAuthenticationStatus.AUTHENTICATED,\n\t\t\t\tsender: createTestEntity(MailAddressTypeRef, {\n\t\t\t\t\tname: \"a\",\n\t\t\t\t\taddress: \"test@example.com\",\n\t\t\t\t}),\n\t\t\t})\n\t\t\tfacade.phishingMarkersUpdateReceived([\n\t\t\t\tcreateTestEntity(ReportedMailFieldMarkerTypeRef, {\n\t\t\t\t\tmarker: phishingMarkerValue(ReportedMailFieldType.SUBJECT, \"Test\"),\n\t\t\t\t}),\n\t\t\t\tcreateTestEntity(ReportedMailFieldMarkerTypeRef, {\n\t\t\t\t\tmarker: phishingMarkerValue(ReportedMailFieldType.FROM_DOMAIN, \"example2.com\"),\n\t\t\t\t}),\n\t\t\t])\n\n\t\t\to(await facade.checkMailForPhishing(mail, [{ href: \"https://example.com\", innerHTML: \"link\" }])).equals(false)\n\t\t})\n\n\t\to(\"is phishing if subject and sender domain matches\", async function () {\n\t\t\tconst mail = createTestEntity(MailTypeRef, {\n\t\t\t\tsubject: \"Test\",\n\t\t\t\tauthStatus: MailAuthenticationStatus.AUTHENTICATED,\n\t\t\t\tsender: createTestEntity(MailAddressTypeRef, {\n\t\t\t\t\tname: \"a\",\n\t\t\t\t\taddress: \"test@example.com\",\n\t\t\t\t}),\n\t\t\t})\n\t\t\tfacade.phishingMarkersUpdateReceived([\n\t\t\t\tcreateTestEntity(ReportedMailFieldMarkerTypeRef, {\n\t\t\t\t\tmarker: phishingMarkerValue(ReportedMailFieldType.SUBJECT, \"Test\"),\n\t\t\t\t}),\n\t\t\t\tcreateTestEntity(ReportedMailFieldMarkerTypeRef, {\n\t\t\t\t\tmarker: phishingMarkerValue(ReportedMailFieldType.FROM_DOMAIN, \"example.com\"),\n\t\t\t\t}),\n\t\t\t])\n\n\t\t\to(await facade.checkMailForPhishing(mail, [{ href: \"https://example.com\", innerHTML: \"link\" }])).equals(true)\n\t\t})\n\n\t\to(\"is phishing if subject with whitespaces and sender domain matches\", async function () {\n\t\t\tconst mail = createTestEntity(MailTypeRef, {\n\t\t\t\tsubject: \"\\tTest spaces \\n\",\n\t\t\t\tauthStatus: MailAuthenticationStatus.AUTHENTICATED,\n\t\t\t\tsender: createTestEntity(MailAddressTypeRef, {\n\t\t\t\t\tname: \"a\",\n\t\t\t\t\taddress: \"test@example.com\",\n\t\t\t\t}),\n\t\t\t})\n\t\t\tfacade.phishingMarkersUpdateReceived([\n\t\t\t\tcreateTestEntity(ReportedMailFieldMarkerTypeRef, {\n\t\t\t\t\tmarker: phishingMarkerValue(ReportedMailFieldType.SUBJECT, \"Testspaces\"),\n\t\t\t\t}),\n\t\t\t\tcreateTestEntity(ReportedMailFieldMarkerTypeRef, {\n\t\t\t\t\tmarker: phishingMarkerValue(ReportedMailFieldType.FROM_DOMAIN, \"example.com\"),\n\t\t\t\t}),\n\t\t\t])\n\n\t\t\to(await facade.checkMailForPhishing(mail, [{ href: \"https://example.com\", innerHTML: \"link\" }])).equals(true)\n\t\t})\n\n\t\to(\"is not phishing if subject and sender domain matches but not authenticated\", async function () {\n\t\t\tconst mail = createTestEntity(MailTypeRef, {\n\t\t\t\tsubject: \"Test\",\n\t\t\t\tauthStatus: MailAuthenticationStatus.SOFT_FAIL,\n\t\t\t\tsender: createTestEntity(MailAddressTypeRef, {\n\t\t\t\t\tname: \"a\",\n\t\t\t\t\taddress: \"test@example.com\",\n\t\t\t\t}),\n\t\t\t})\n\t\t\tfacade.phishingMarkersUpdateReceived([\n\t\t\t\tcreateTestEntity(ReportedMailFieldMarkerTypeRef, {\n\t\t\t\t\tmarker: phishingMarkerValue(ReportedMailFieldType.SUBJECT, \"Test\"),\n\t\t\t\t}),\n\t\t\t\tcreateTestEntity(ReportedMailFieldMarkerTypeRef, {\n\t\t\t\t\tmarker: phishingMarkerValue(ReportedMailFieldType.FROM_DOMAIN, \"example.com\"),\n\t\t\t\t}),\n\t\t\t])\n\n\t\t\to(await facade.checkMailForPhishing(mail, [{ href: \"https://example.com\", innerHTML: \"link\" }])).equals(false)\n\t\t})\n\n\t\to(\"is phishing if subject and sender address matches\", async function () {\n\t\t\tconst mail = createTestEntity(MailTypeRef, {\n\t\t\t\tsubject: \"Test\",\n\t\t\t\tauthStatus: MailAuthenticationStatus.AUTHENTICATED,\n\t\t\t\tsender: createTestEntity(MailAddressTypeRef, {\n\t\t\t\t\tname: \"a\",\n\t\t\t\t\taddress: \"test@example.com\",\n\t\t\t\t}),\n\t\t\t})\n\t\t\tfacade.phishingMarkersUpdateReceived([\n\t\t\t\tcreateTestEntity(ReportedMailFieldMarkerTypeRef, {\n\t\t\t\t\tmarker: phishingMarkerValue(ReportedMailFieldType.SUBJECT, \"Test\"),\n\t\t\t\t}),\n\t\t\t\tcreateTestEntity(ReportedMailFieldMarkerTypeRef, {\n\t\t\t\t\tmarker: phishingMarkerValue(ReportedMailFieldType.FROM_ADDRESS, \"test@example.com\"),\n\t\t\t\t}),\n\t\t\t])\n\n\t\t\to(await facade.checkMailForPhishing(mail, [{ href: \"https://example.com\", innerHTML: \"link\" }])).equals(true)\n\t\t})\n\n\t\to(\"is not phishing if subject and sender address matches but not authenticated\", async function () {\n\t\t\tconst mail = createTestEntity(MailTypeRef, {\n\t\t\t\tsubject: \"Test\",\n\t\t\t\tauthStatus: MailAuthenticationStatus.SOFT_FAIL,\n\t\t\t\tsender: createTestEntity(MailAddressTypeRef, {\n\t\t\t\t\tname: \"a\",\n\t\t\t\t\taddress: \"test@example.com\",\n\t\t\t\t}),\n\t\t\t})\n\t\t\tfacade.phishingMarkersUpdateReceived([\n\t\t\t\tcreateTestEntity(ReportedMailFieldMarkerTypeRef, {\n\t\t\t\t\tmarker: phishingMarkerValue(ReportedMailFieldType.SUBJECT, \"Test\"),\n\t\t\t\t}),\n\t\t\t\tcreateTestEntity(ReportedMailFieldMarkerTypeRef, {\n\t\t\t\t\tmarker: phishingMarkerValue(ReportedMailFieldType.FROM_ADDRESS, \"test@example.com\"),\n\t\t\t\t}),\n\t\t\t])\n\n\t\t\to(await facade.checkMailForPhishing(mail, [{ href: \"https://example.com\", innerHTML: \"link\" }])).equals(false)\n\t\t})\n\n\t\to(\"is phishing if subject and non auth sender domain matches\", async function () {\n\t\t\tconst mail = createTestEntity(MailTypeRef, {\n\t\t\t\tsubject: \"Test\",\n\t\t\t\tauthStatus: MailAuthenticationStatus.SOFT_FAIL,\n\t\t\t\tsender: createTestEntity(MailAddressTypeRef, {\n\t\t\t\t\tname: \"a\",\n\t\t\t\t\taddress: \"test@example.com\",\n\t\t\t\t}),\n\t\t\t})\n\t\t\tfacade.phishingMarkersUpdateReceived([\n\t\t\t\tcreateTestEntity(ReportedMailFieldMarkerTypeRef, {\n\t\t\t\t\tmarker: phishingMarkerValue(ReportedMailFieldType.SUBJECT, \"Test\"),\n\t\t\t\t}),\n\t\t\t\tcreateTestEntity(ReportedMailFieldMarkerTypeRef, {\n\t\t\t\t\tmarker: phishingMarkerValue(ReportedMailFieldType.FROM_DOMAIN_NON_AUTH, \"example.com\"),\n\t\t\t\t}),\n\t\t\t])\n\n\t\t\to(await facade.checkMailForPhishing(mail, [{ href: \"https://example.com\", innerHTML: \"link\" }])).equals(true)\n\t\t})\n\n\t\to(\"is phishing if subject and non auth sender address matches\", async function () {\n\t\t\tconst mail = createTestEntity(MailTypeRef, {\n\t\t\t\tsubject: \"Test\",\n\t\t\t\tauthStatus: MailAuthenticationStatus.SOFT_FAIL,\n\t\t\t\tsender: createTestEntity(MailAddressTypeRef, {\n\t\t\t\t\tname: \"a\",\n\t\t\t\t\taddress: \"test@example.com\",\n\t\t\t\t}),\n\t\t\t})\n\t\t\tfacade.phishingMarkersUpdateReceived([\n\t\t\t\tcreateTestEntity(ReportedMailFieldMarkerTypeRef, {\n\t\t\t\t\tmarker: phishingMarkerValue(ReportedMailFieldType.SUBJECT, \"Test\"),\n\t\t\t\t}),\n\t\t\t\tcreateTestEntity(ReportedMailFieldMarkerTypeRef, {\n\t\t\t\t\tmarker: phishingMarkerValue(ReportedMailFieldType.FROM_ADDRESS_NON_AUTH, \"test@example.com\"),\n\t\t\t\t}),\n\t\t\t])\n\n\t\t\to(await facade.checkMailForPhishing(mail, [{ href: \"https://example.com\", innerHTML: \"link\" }])).equals(true)\n\t\t})\n\n\t\to(\"is phishing if subject and link matches\", async function () {\n\t\t\tconst mail = createTestEntity(MailTypeRef, {\n\t\t\t\tsubject: \"Test\",\n\t\t\t\tauthStatus: MailAuthenticationStatus.AUTHENTICATED,\n\t\t\t\tsender: createTestEntity(MailAddressTypeRef, {\n\t\t\t\t\tname: \"a\",\n\t\t\t\t\taddress: \"test@example.com\",\n\t\t\t\t}),\n\t\t\t})\n\t\t\tfacade.phishingMarkersUpdateReceived([\n\t\t\t\tcreateTestEntity(ReportedMailFieldMarkerTypeRef, {\n\t\t\t\t\tmarker: phishingMarkerValue(ReportedMailFieldType.SUBJECT, \"Test\"),\n\t\t\t\t}),\n\t\t\t\tcreateTestEntity(ReportedMailFieldMarkerTypeRef, {\n\t\t\t\t\tmarker: phishingMarkerValue(ReportedMailFieldType.LINK, \"https://example.com\"),\n\t\t\t\t}),\n\t\t\t])\n\n\t\t\to(await facade.checkMailForPhishing(mail, [{ href: \"https://example.com\", innerHTML: \"link\" }])).equals(true)\n\t\t})\n\n\t\to(\"is not phishing if just two links match\", async function () {\n\t\t\tconst mail = createTestEntity(MailTypeRef, {\n\t\t\t\tsubject: \"Test\",\n\t\t\t\tauthStatus: MailAuthenticationStatus.AUTHENTICATED,\n\t\t\t\tsender: createTestEntity(MailAddressTypeRef, {\n\t\t\t\t\tname: \"a\",\n\t\t\t\t\taddress: \"test@example.com\",\n\t\t\t\t}),\n\t\t\t})\n\t\t\tfacade.phishingMarkersUpdateReceived([\n\t\t\t\tcreateTestEntity(ReportedMailFieldMarkerTypeRef, {\n\t\t\t\t\tmarker: phishingMarkerValue(ReportedMailFieldType.LINK, \"https://example.com\"),\n\t\t\t\t}),\n\t\t\t\tcreateTestEntity(ReportedMailFieldMarkerTypeRef, {\n\t\t\t\t\tmarker: phishingMarkerValue(ReportedMailFieldType.LINK, \"https://example2.com\"),\n\t\t\t\t}),\n\t\t\t])\n\n\t\t\to(\n\t\t\t\tawait facade.checkMailForPhishing(mail, [\n\t\t\t\t\t{ href: \"https://example.com\", innerHTML: \"link1\" },\n\t\t\t\t\t{ href: \"https://example2.com\", innerHTML: \"link2\" },\n\t\t\t\t]),\n\t\t\t).equals(false)\n\t\t})\n\n\t\to(\"is phishing if subject and link domain matches\", async function () {\n\t\t\tconst mail = createTestEntity(MailTypeRef, {\n\t\t\t\tsubject: \"Test\",\n\t\t\t\tauthStatus: MailAuthenticationStatus.AUTHENTICATED,\n\t\t\t\tsender: createTestEntity(MailAddressTypeRef, {\n\t\t\t\t\tname: \"a\",\n\t\t\t\t\taddress: \"test@example.com\",\n\t\t\t\t}),\n\t\t\t})\n\t\t\tfacade.phishingMarkersUpdateReceived([\n\t\t\t\tcreateTestEntity(ReportedMailFieldMarkerTypeRef, {\n\t\t\t\t\tmarker: phishingMarkerValue(ReportedMailFieldType.SUBJECT, \"Test\"),\n\t\t\t\t}),\n\t\t\t\tcreateTestEntity(ReportedMailFieldMarkerTypeRef, {\n\t\t\t\t\tmarker: phishingMarkerValue(ReportedMailFieldType.LINK_DOMAIN, \"example.com\"),\n\t\t\t\t}),\n\t\t\t])\n\n\t\t\to(await facade.checkMailForPhishing(mail, [{ href: \"https://example.com\", innerHTML: \"link\" }])).equals(true)\n\t\t})\n\n\t\to(\"does not throw on invalid link\", async function () {\n\t\t\tconst mail = createTestEntity(MailTypeRef, {\n\t\t\t\tsubject: \"Test\",\n\t\t\t\tauthStatus: MailAuthenticationStatus.AUTHENTICATED,\n\t\t\t\tsender: createTestEntity(MailAddressTypeRef, {\n\t\t\t\t\tname: \"a\",\n\t\t\t\t\taddress: \"test@example.com\",\n\t\t\t\t}),\n\t\t\t})\n\t\t\tfacade.phishingMarkersUpdateReceived([\n\t\t\t\tcreateTestEntity(ReportedMailFieldMarkerTypeRef, {\n\t\t\t\t\tmarker: phishingMarkerValue(ReportedMailFieldType.SUBJECT, \"Test\"),\n\t\t\t\t}),\n\t\t\t\tcreateTestEntity(ReportedMailFieldMarkerTypeRef, {\n\t\t\t\t\tmarker: phishingMarkerValue(ReportedMailFieldType.LINK_DOMAIN, \"example.com\"),\n\t\t\t\t}),\n\t\t\t])\n\n\t\t\to(\n\t\t\t\tawait facade.checkMailForPhishing(mail, [\n\t\t\t\t\t{ href: \"/example1\", innerHTML: \"link1\" },\n\t\t\t\t\t{ href: \"example2\", innerHTML: \"link2\" },\n\t\t\t\t\t{ href: \"http:/\", innerHTML: \"link3\" },\n\t\t\t\t]),\n\t\t\t).equals(false)\n\t\t})\n\n\t\to(\"is phishing if subject and suspicious link\", async function () {\n\t\t\tconst mail = createTestEntity(MailTypeRef, {\n\t\t\t\tsubject: \"Test\",\n\t\t\t\tauthStatus: MailAuthenticationStatus.AUTHENTICATED,\n\t\t\t\tsender: createTestEntity(MailAddressTypeRef, {\n\t\t\t\t\tname: \"a\",\n\t\t\t\t\taddress: \"test@example.com\",\n\t\t\t\t}),\n\t\t\t})\n\t\t\tfacade.phishingMarkersUpdateReceived([\n\t\t\t\tcreateTestEntity(ReportedMailFieldMarkerTypeRef, {\n\t\t\t\t\tmarker: phishingMarkerValue(ReportedMailFieldType.SUBJECT, \"Test\"),\n\t\t\t\t}),\n\t\t\t])\n\n\t\t\to(await facade.checkMailForPhishing(mail, [{ href: \"https://example.com\", innerHTML: \"https://evil-domain.com\" }])).equals(true)\n\t\t})\n\n\t\to(\"link is not suspicious if on the same domain\", async function () {\n\t\t\tconst mail = createTestEntity(MailTypeRef, {\n\t\t\t\tsubject: \"Test\",\n\t\t\t\tauthStatus: MailAuthenticationStatus.AUTHENTICATED,\n\t\t\t\tsender: createTestEntity(MailAddressTypeRef, {\n\t\t\t\t\tname: \"a\",\n\t\t\t\t\taddress: \"test@example.com\",\n\t\t\t\t}),\n\t\t\t})\n\t\t\tfacade.phishingMarkersUpdateReceived([\n\t\t\t\tcreateTestEntity(ReportedMailFieldMarkerTypeRef, {\n\t\t\t\t\tmarker: phishingMarkerValue(ReportedMailFieldType.SUBJECT, \"Test\"),\n\t\t\t\t}),\n\t\t\t])\n\n\t\t\to(await facade.checkMailForPhishing(mail, [{ href: \"https://example.com\", innerHTML: \"https://example.com/test\" }])).equals(false)\n\t\t})\n\t})\n\n\to.spec(\"verifyMimeTypesForAttachments\", () => {\n\t\tfunction attach(mimeType, name): DataFile {\n\t\t\treturn downcast({\n\t\t\t\tmimeType,\n\t\t\t\tname,\n\t\t\t\t_type: \"DataFile\",\n\t\t\t})\n\t\t}\n\n\t\to(\"valid mimetypes\", () => {\n\t\t\tvalidateMimeTypesForAttachments([attach(\"application/json\", \"something.json\")])\n\t\t\tvalidateMimeTypesForAttachments([attach(\"audio/ogg; codec=opus\", \"something.opus\")])\n\t\t\tvalidateMimeTypesForAttachments([attach('video/webm; codecs=\"vp8, opus\"', \"something.webm\")])\n\t\t\tvalidateMimeTypesForAttachments([attach(\"something/orrather\", \"something.somethingorrather\")])\n\t\t\tvalidateMimeTypesForAttachments([attach(\"thisisvalid/technically+this_is-ok_even-if-YOU-dont-like-it\", \"something.valid\")])\n\t\t\tvalidateMimeTypesForAttachments([attach(\"anotherthing/youcando;ishave=multiple;parameters=in;a=mimetype\", \"something.technicallyvalidaswell\")])\n\t\t})\n\n\t\to(\"invalid mimetypes\", () => {\n\t\t\to(() => {\n\t\t\t\tvalidateMimeTypesForAttachments([attach(\"applicationjson\", \"something.json\")])\n\t\t\t}).throws(ProgrammingError)\n\t\t\to(() => {\n\t\t\t\tvalidateMimeTypesForAttachments([attach(\"application/json\", \"something.json\"), attach(\"applicationjson\", \"something.json\")])\n\t\t\t}).throws(ProgrammingError)\n\t\t\to(() => {\n\t\t\t\tvalidateMimeTypesForAttachments([attach(\"applicationjson\", \"something.json\"), attach(\"application/json\", \"something.json\")])\n\t\t\t}).throws(ProgrammingError)\n\t\t\to(() => {\n\t\t\t\tvalidateMimeTypesForAttachments([attach(\"\", \"bad.json\")])\n\t\t\t}).throws(ProgrammingError)\n\t\t\to(() => {\n\t\t\t\tvalidateMimeTypesForAttachments([attach(\"a/b/c\", \"no.json\")])\n\t\t\t}).throws(ProgrammingError)\n\t\t\to(() => {\n\t\t\t\tvalidateMimeTypesForAttachments([attach(\"a/b?c\", \"please stop.json\")])\n\t\t\t}).throws(ProgrammingError)\n\t\t\to(() => {\n\t\t\t\tvalidateMimeTypesForAttachments([attach('video/webm; codecs=\"vp8, opus oh no i forgot the quote; oops=mybad', \"why.webm\")])\n\t\t\t}).throws(ProgrammingError)\n\t\t\to(() => {\n\t\t\t\tvalidateMimeTypesForAttachments([attach(\"video/webm; parameterwithoutavalue\", \"bad.webm\")])\n\t\t\t}).throws(ProgrammingError)\n\t\t})\n\n\t\to(\"isTutaCryptMail\", () => {\n\t\t\tconst pqRecipient = createTestEntity(InternalRecipientKeyDataTypeRef, { protocolVersion: CryptoProtocolVersion.TUTA_CRYPT })\n\t\t\tconst rsaRecipient = createTestEntity(InternalRecipientKeyDataTypeRef, { protocolVersion: CryptoProtocolVersion.RSA })\n\t\t\tconst secureExternalRecipient = createTestEntity(SecureExternalRecipientKeyDataTypeRef, {})\n\t\t\tconst symEncInternalRecipient = createTestEntity(SymEncInternalRecipientKeyDataTypeRef, {})\n\n\t\t\to(\n\t\t\t\tfacade.isTutaCryptMail(\n\t\t\t\t\tcreateTestEntity(SendDraftDataTypeRef, {\n\t\t\t\t\t\tinternalRecipientKeyData: [pqRecipient],\n\t\t\t\t\t\tsecureExternalRecipientKeyData: [],\n\t\t\t\t\t\tsymEncInternalRecipientKeyData: [],\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t).equals(true)\n\n\t\t\to(\n\t\t\t\tfacade.isTutaCryptMail(\n\t\t\t\t\tcreateTestEntity(SendDraftDataTypeRef, {\n\t\t\t\t\t\tinternalRecipientKeyData: [pqRecipient, pqRecipient],\n\t\t\t\t\t\tsecureExternalRecipientKeyData: [],\n\t\t\t\t\t\tsymEncInternalRecipientKeyData: [],\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t).equals(true)\n\n\t\t\to(\n\t\t\t\tfacade.isTutaCryptMail(\n\t\t\t\t\tcreateTestEntity(SendDraftDataTypeRef, {\n\t\t\t\t\t\tinternalRecipientKeyData: [],\n\t\t\t\t\t\tsecureExternalRecipientKeyData: [],\n\t\t\t\t\t\tsymEncInternalRecipientKeyData: [],\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t).equals(false)\n\n\t\t\to(\n\t\t\t\tfacade.isTutaCryptMail(\n\t\t\t\t\tcreateTestEntity(SendDraftDataTypeRef, {\n\t\t\t\t\t\tinternalRecipientKeyData: [pqRecipient, rsaRecipient],\n\t\t\t\t\t\tsecureExternalRecipientKeyData: [],\n\t\t\t\t\t\tsymEncInternalRecipientKeyData: [],\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t).equals(false)\n\n\t\t\to(\n\t\t\t\tfacade.isTutaCryptMail(\n\t\t\t\t\tcreateTestEntity(SendDraftDataTypeRef, {\n\t\t\t\t\t\tinternalRecipientKeyData: [pqRecipient],\n\t\t\t\t\t\tsecureExternalRecipientKeyData: [secureExternalRecipient],\n\t\t\t\t\t\tsymEncInternalRecipientKeyData: [],\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t).equals(false)\n\n\t\t\to(\n\t\t\t\tfacade.isTutaCryptMail(\n\t\t\t\t\tcreateTestEntity(SendDraftDataTypeRef, {\n\t\t\t\t\t\tinternalRecipientKeyData: [pqRecipient],\n\t\t\t\t\t\tsecureExternalRecipientKeyData: [],\n\t\t\t\t\t\tsymEncInternalRecipientKeyData: [symEncInternalRecipient],\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t).equals(false)\n\t\t})\n\t})\n})\n","import o from \"../../../../../packages/otest/dist/otest.js\"\nimport { GroupManagementFacade } from \"../../../../../src/common/api/worker/facades/lazy/GroupManagementFacade.js\"\nimport { UserFacade } from \"../../../../../src/common/api/worker/facades/UserFacade.js\"\nimport { CounterFacade } from \"../../../../../src/common/api/worker/facades/lazy/CounterFacade.js\"\nimport { EntityClient } from \"../../../../../src/common/api/common/EntityClient.js\"\nimport { IServiceExecutor } from \"../../../../../src/common/api/common/ServiceRequest.js\"\nimport { PQFacade } from \"../../../../../src/common/api/worker/facades/PQFacade.js\"\nimport { KeyLoaderFacade } from \"../../../../../src/common/api/worker/facades/KeyLoaderFacade.js\"\nimport { CacheManagementFacade } from \"../../../../../src/common/api/worker/facades/lazy/CacheManagementFacade.js\"\nimport { AsymmetricCryptoFacade } from \"../../../../../src/common/api/worker/crypto/AsymmetricCryptoFacade.js\"\nimport { matchers, object, verify, when } from \"testdouble\"\nimport { AesKey, EccPublicKey, PQKeyPairs } from \"@tutao/tutanota-crypto\"\nimport { createTestEntity } from \"../../../TestUtils.js\"\nimport {\n\tAdministratedGroupsRefTypeRef,\n\tAdministratedGroupTypeRef,\n\tCustomerTypeRef,\n\tGroup,\n\tGroupInfo,\n\tGroupInfoTypeRef,\n\tGroupMembershipTypeRef,\n\tGroupTypeRef,\n\tLocalAdminRemovalPostIn,\n\tPubEncKeyDataTypeRef,\n\tUserTypeRef,\n} from \"../../../../../src/common/api/entities/sys/TypeRefs.js\"\nimport { CryptoWrapper, VersionedKey } from \"../../../../../src/common/api/worker/crypto/CryptoWrapper.js\"\nimport { assertThrows } from \"@tutao/tutanota-test-utils\"\nimport { ProgrammingError } from \"../../../../../src/common/api/common/error/ProgrammingError.js\"\nimport { CryptoProtocolVersion, GroupType, PublicKeyIdentifierType } from \"../../../../../src/common/api/common/TutanotaConstants.js\"\nimport { LocalAdminRemovalService } from \"../../../../../src/common/api/entities/sys/Services.js\"\n\no.spec(\"GroupManagementFacadeTest\", function () {\n\tlet userFacade: UserFacade\n\tlet counters: CounterFacade\n\tlet entityClient: EntityClient\n\tlet serviceExecutor: IServiceExecutor\n\tlet pqFacade: PQFacade\n\tlet keyLoaderFacade: KeyLoaderFacade\n\tlet cacheManagementFacade: CacheManagementFacade\n\tlet asymmetricCryptoFacade: AsymmetricCryptoFacade\n\tlet cryptoWrapper: CryptoWrapper\n\n\tlet groupManagementFacade: GroupManagementFacade\n\n\tconst adminGroupId = \"adminGroupId\"\n\tconst groupId = \"myGroupId\"\n\tlet group: Group\n\n\to.beforeEach(function () {\n\t\tuserFacade = object()\n\t\tcounters = object()\n\t\tentityClient = object()\n\t\tserviceExecutor = object()\n\t\tpqFacade = object()\n\t\tkeyLoaderFacade = object()\n\t\tcacheManagementFacade = object()\n\t\tasymmetricCryptoFacade = object()\n\t\tcryptoWrapper = object()\n\n\t\tgroupManagementFacade = new GroupManagementFacade(\n\t\t\tuserFacade,\n\t\t\tcounters,\n\t\t\tentityClient,\n\t\t\tserviceExecutor,\n\t\t\tpqFacade,\n\t\t\tkeyLoaderFacade,\n\t\t\tcacheManagementFacade,\n\t\t\tasymmetricCryptoFacade,\n\t\t\tcryptoWrapper,\n\t\t)\n\t})\n\n\to.spec(\"getCurrentGroupKeyViaAdminEncGKey\", function () {\n\t\tconst adminGroupKeyVersion = 2\n\t\tconst adminGroupKeyBytes = object<AesKey>()\n\t\tconst adminGroupKeyPair = object<PQKeyPairs>()\n\n\t\tconst groupKeyVersion = 1\n\t\tconst pubUserGroupEccKey = object<EccPublicKey>()\n\t\tconst groupKeyBytes = object<AesKey>()\n\t\tconst adminGroupEncGKey = object<Uint8Array>()\n\t\tconst pubAdminGroupEncSymKey = object<Uint8Array>()\n\t\tconst pubAdminGroupEncGKey = createTestEntity(PubEncKeyDataTypeRef, {\n\t\t\tpubEncSymKey: pubAdminGroupEncSymKey,\n\t\t\tprotocolVersion: CryptoProtocolVersion.TUTA_CRYPT,\n\t\t\trecipientIdentifier: groupId,\n\t\t\trecipientIdentifierType: PublicKeyIdentifierType.GROUP_ID,\n\t\t\trecipientKeyVersion: adminGroupKeyVersion.toString(),\n\t\t\tsenderKeyVersion: groupKeyVersion.toString(),\n\t\t})\n\n\t\to.beforeEach(function () {\n\t\t\tgroup = createTestEntity(GroupTypeRef, {\n\t\t\t\t_id: groupId,\n\t\t\t\tgroupKeyVersion: groupKeyVersion.toString(),\n\t\t\t\tadminGroupKeyVersion: adminGroupKeyVersion.toString(),\n\t\t\t\tadminGroupEncGKey: null,\n\t\t\t\tpubAdminGroupEncGKey: null,\n\t\t\t\tadmin: adminGroupId,\n\t\t\t})\n\t\t\twhen(userFacade.hasGroup(groupId)).thenReturn(false)\n\t\t\twhen(userFacade.hasGroup(adminGroupId)).thenReturn(true)\n\t\t\twhen(cacheManagementFacade.reloadGroup(groupId)).thenResolve(group)\n\t\t\twhen(keyLoaderFacade.loadSymGroupKey(adminGroupId, adminGroupKeyVersion)).thenResolve(adminGroupKeyBytes)\n\t\t\twhen(cryptoWrapper.decryptKey(adminGroupKeyBytes, adminGroupEncGKey)).thenReturn(groupKeyBytes)\n\t\t\twhen(keyLoaderFacade.loadKeypair(adminGroupId, adminGroupKeyVersion)).thenResolve(adminGroupKeyPair)\n\t\t\twhen(\n\t\t\t\tasymmetricCryptoFacade.decryptSymKeyWithKeyPairAndAuthenticate(adminGroupKeyPair, pubAdminGroupEncGKey, {\n\t\t\t\t\tidentifier: groupId,\n\t\t\t\t\tidentifierType: PublicKeyIdentifierType.GROUP_ID,\n\t\t\t\t}),\n\t\t\t).thenResolve({\n\t\t\t\tdecryptedAesKey: groupKeyBytes,\n\t\t\t\tsenderIdentityPubKey: pubUserGroupEccKey,\n\t\t\t})\n\t\t})\n\n\t\to(\"gets a non-cached group instance\", async function () {\n\t\t\tgroup.adminGroupEncGKey = adminGroupEncGKey\n\n\t\t\tawait groupManagementFacade.getCurrentGroupKeyViaAdminEncGKey(groupId)\n\n\t\t\tverify(cacheManagementFacade.reloadGroup(groupId))\n\t\t})\n\n\t\to(\"symmetric decryption\", async function () {\n\t\t\tgroup.adminGroupEncGKey = adminGroupEncGKey\n\n\t\t\tconst groupKey = await groupManagementFacade.getCurrentGroupKeyViaAdminEncGKey(groupId)\n\n\t\t\to(groupKey.version).equals(groupKeyVersion)\n\t\t\to(groupKey.object).deepEquals(groupKeyBytes)\n\t\t\tverify(keyLoaderFacade.loadSymGroupKey(adminGroupId, adminGroupKeyVersion))\n\t\t\tverify(asymmetricCryptoFacade.decryptSymKeyWithKeyPairAndAuthenticate(matchers.anything(), matchers.anything(), matchers.anything()), { times: 0 })\n\t\t})\n\n\t\to(\"asymmetric decryption\", async function () {\n\t\t\tgroup.pubAdminGroupEncGKey = pubAdminGroupEncGKey\n\n\t\t\tconst groupKey = await groupManagementFacade.getCurrentGroupKeyViaAdminEncGKey(groupId)\n\n\t\t\to(groupKey.version).equals(groupKeyVersion)\n\t\t\to(groupKey.object).deepEquals(groupKeyBytes)\n\t\t\tverify(keyLoaderFacade.loadKeypair(adminGroupId, adminGroupKeyVersion))\n\t\t\tverify(\n\t\t\t\tasymmetricCryptoFacade.decryptSymKeyWithKeyPairAndAuthenticate(adminGroupKeyPair, pubAdminGroupEncGKey, {\n\t\t\t\t\tidentifier: groupId,\n\t\t\t\t\tidentifierType: PublicKeyIdentifierType.GROUP_ID,\n\t\t\t\t}),\n\t\t\t\t{ times: 1 },\n\t\t\t)\n\t\t})\n\n\t\to(\"decrypt with the group membership key if the admin happens to be a member of the target group\", async function () {\n\t\t\t// check that the user is from the admin group\n\t\t\twhen(userFacade.hasGroup(groupId)).thenReturn(true)\n\n\t\t\tawait groupManagementFacade.getCurrentGroupKeyViaAdminEncGKey(groupId)\n\t\t\tverify(keyLoaderFacade.getCurrentSymGroupKey(groupId))\n\t\t})\n\n\t\to(\"throws when the group doesn't have any admin encrypted group key\", async function () {\n\t\t\tgroup.adminGroupEncGKey = null\n\t\t\tgroup.pubAdminGroupEncGKey = null\n\t\t\tawait assertThrows(ProgrammingError, async () => await groupManagementFacade.getCurrentGroupKeyViaAdminEncGKey(groupId))\n\t\t})\n\n\t\to(\"throws when the group only has a dummy(!) admin en\" + \"crypted group key\", async function () {\n\t\t\tgroup.adminGroupEncGKey = new Uint8Array(0)\n\t\t\tgroup.pubAdminGroupEncGKey = null\n\t\t\tawait assertThrows(ProgrammingError, async () => await groupManagementFacade.getCurrentGroupKeyViaAdminEncGKey(groupId))\n\t\t})\n\n\t\to(\"throws when the user is not an admin and tries to decrypt with the admin group key\", async function () {\n\t\t\twhen(userFacade.hasGroup(adminGroupId)).thenReturn(false)\n\t\t\tawait assertThrows(Error, async () => await groupManagementFacade.getCurrentGroupKeyViaAdminEncGKey(groupId))\n\t\t})\n\t})\n\n\to(\"replace local admin enc group key with global admin enc group key\", async function () {\n\t\tconst symGlobalAdminGroupKey: VersionedKey = {\n\t\t\tversion: 1,\n\t\t\tobject: object(),\n\t\t}\n\n\t\tconst symLocalAdminGroupKey: VersionedKey = {\n\t\t\tversion: 0,\n\t\t\tobject: object(),\n\t\t}\n\n\t\tconst userGroup: Group = createTestEntity(GroupTypeRef, {\n\t\t\ttype: GroupType.User,\n\t\t\tadminGroupEncGKey: object(),\n\t\t\tadminGroupKeyVersion: \"0\",\n\t\t\tadmin: \"localAdmin\",\n\t\t})\n\n\t\tconst before = createTestEntity(GroupTypeRef, userGroup)\n\t\tconst decrypted = object<AesKey>()\n\t\twhen(cryptoWrapper.decryptKey(matchers.anything(), matchers.anything())).thenReturn(decrypted)\n\t\tconst reencrypted = object<Uint8Array>()\n\t\twhen(cryptoWrapper.encryptKey(matchers.anything(), decrypted)).thenReturn(reencrypted)\n\n\t\tconst groupUpdate = await groupManagementFacade.replaceLocalAdminEncGroupKeyWithGlobalAdminEncGroupKey(\n\t\t\tsymGlobalAdminGroupKey,\n\t\t\tsymLocalAdminGroupKey.object,\n\t\t\tuserGroup,\n\t\t)\n\n\t\to(groupUpdate.adminGroupKeyVersion).equals(String(symGlobalAdminGroupKey.version))\n\t\to(groupUpdate.adminGroupEncGKey).equals(reencrypted)\n\n\t\to(userGroup).deepEquals(before)\n\t})\n\n\to(\"traverse local admin groups\", async function () {\n\t\t// prepare test data...\n\t\t// --------------------\n\t\tconst globalAdminGroup = createGroupAndGroupInfo(GroupType.Admin, \"adminGroups\", \"globalAdminId\", \"globalAdminId\", new Uint8Array())\n\t\tconst adminGroupKey: VersionedKey = {\n\t\t\tobject: [1, 2, 3],\n\t\t\tversion: 0,\n\t\t}\n\t\tconst globalAdminUser = createTestEntity(UserTypeRef, {\n\t\t\tcustomer: \"someCustomerId\",\n\t\t\tmemberships: [\n\t\t\t\tcreateTestEntity(GroupMembershipTypeRef, {\n\t\t\t\t\tgroup: globalAdminGroup.group._id,\n\t\t\t\t\tgroupType: GroupType.Admin,\n\t\t\t\t}),\n\t\t\t],\n\t\t})\n\t\tconst customer = createTestEntity(CustomerTypeRef, {\n\t\t\t_id: \"someCustomerId\",\n\t\t\tadminGroup: globalAdminGroup.group._id,\n\t\t\tteamGroups: \"teamGroupsIds\",\n\t\t})\n\n\t\tconst administratedGroupsRefs = [\n\t\t\tcreateTestEntity(AdministratedGroupsRefTypeRef, { items: \"xs1\" }),\n\t\t\tcreateTestEntity(AdministratedGroupsRefTypeRef, { items: \"xs2\" }),\n\t\t]\n\n\t\tconst localAdminGroup1 = createGroupAndGroupInfo(\n\t\t\tGroupType.LocalAdmin,\n\t\t\tcustomer.teamGroups,\n\t\t\t\"localAdminGroup1Id\",\n\t\t\tglobalAdminGroup.group._id,\n\t\t\tnew Uint8Array(),\n\t\t)\n\t\tlocalAdminGroup1.group.administratedGroups = administratedGroupsRefs[0]\n\n\t\tconst localAdminGroup2 = createGroupAndGroupInfo(\n\t\t\tGroupType.LocalAdmin,\n\t\t\tcustomer.teamGroups,\n\t\t\t\"localAdminGroup2Id\",\n\t\t\tglobalAdminGroup.group._id,\n\t\t\tnew Uint8Array(),\n\t\t)\n\t\tlocalAdminGroup2.group.administratedGroups = administratedGroupsRefs[1]\n\n\t\tconst userGroup1 = createGroupAndGroupInfo(GroupType.User, customer.userGroups, \"u1\", localAdminGroup1.group._id, new Uint8Array([1]))\n\t\tconst userGroup2 = createGroupAndGroupInfo(GroupType.User, customer.userGroups, \"u2\", localAdminGroup1.group._id, new Uint8Array([1, 2]))\n\t\tconst userGroup3 = createGroupAndGroupInfo(GroupType.User, customer.userGroups, \"u3\", localAdminGroup2.group._id, new Uint8Array([1, 2, 3]))\n\n\t\tconst administratedGroupsByLocalAdmins = [\n\t\t\tcreateTestEntity(AdministratedGroupTypeRef, {\n\t\t\t\t_id: [\"xs1\", \"1\"],\n\t\t\t\tlocalAdminGroup: localAdminGroup1.group._id,\n\t\t\t\tgroupInfo: userGroup1.groupInfo._id,\n\t\t\t}),\n\t\t\tcreateTestEntity(AdministratedGroupTypeRef, {\n\t\t\t\t_id: [\"xs1\", \"2\"],\n\t\t\t\tlocalAdminGroup: localAdminGroup1.group._id,\n\t\t\t\tgroupInfo: userGroup2.groupInfo._id,\n\t\t\t}),\n\t\t\tcreateTestEntity(AdministratedGroupTypeRef, {\n\t\t\t\t_id: [\"xs2\", \"1\"],\n\t\t\t\tlocalAdminGroup: localAdminGroup2.group._id,\n\t\t\t\tgroupInfo: userGroup3.groupInfo._id,\n\t\t\t}),\n\t\t]\n\n\t\t// mock body of the function\n\t\t// -------------------------\n\t\twhen(userFacade.getLoggedInUser()).thenReturn(globalAdminUser)\n\t\twhen(entityClient.load(CustomerTypeRef, \"someCustomerId\")).thenResolve(customer)\n\t\twhen(entityClient.loadAll(GroupInfoTypeRef, \"teamGroupsIds\")).thenResolve([localAdminGroup1.groupInfo, localAdminGroup2.groupInfo])\n\t\twhen(keyLoaderFacade.getCurrentSymGroupKey(\"globalAdminId\")).thenResolve(adminGroupKey) // const adminGroupKey = await this.keyLoaderFacade.getCurrentSymGroupKey(adminGroupId)\n\n\t\t// inner loop loading administrated groups\n\t\t// for the administrated groups of the first local admin\n\t\twhen(entityClient.loadAll(AdministratedGroupTypeRef, \"xs1\")).thenResolve([administratedGroupsByLocalAdmins[0], administratedGroupsByLocalAdmins[1]])\n\t\t// for the administrated groups of the second local admin\n\t\twhen(entityClient.loadAll(AdministratedGroupTypeRef, \"xs2\")).thenResolve([administratedGroupsByLocalAdmins[2]])\n\n\t\t// stubbing\n\t\tconst save = groupManagementFacade.getCurrentGroupKeyViaAdminEncGKey\n\t\tgroupManagementFacade.getCurrentGroupKeyViaAdminEncGKey = () => {\n\t\t\treturn object()\n\t\t}\n\t\t// when(groupManagementFacade.getCurrentGroupKeyViaAdminEncGKey(\"localAdminGroup1Id\")).thenResolve(object())\n\t\t// when(groupManagementFacade.getCurrentGroupKeyViaAdminEncGKey(\"localAdminGroup2Id\")).thenResolve(object())\n\n\t\t// now run mocked function\n\t\t// -----------------------\n\t\tawait groupManagementFacade.migrateLocalAdminsToGlobalAdmins()\n\n\t\tverify(\n\t\t\tserviceExecutor.post(\n\t\t\t\tLocalAdminRemovalService,\n\t\t\t\tmatchers.argThat((postIn: LocalAdminRemovalPostIn) => {\n\t\t\t\t\tconst userWithIds = postIn.groupUpdates.map((user) => user.groupId).sort()\n\t\t\t\t\to(userWithIds.sort()).deepEquals([\"u1\", \"u2\", \"u3\"])\n\t\t\t\t\treturn true\n\t\t\t\t}),\n\t\t\t),\n\t\t)\n\n\t\tgroupManagementFacade.getCurrentGroupKeyViaAdminEncGKey = save\n\t})\n\n\tfunction createGroupAndGroupInfo(\n\t\tgroupType: GroupType,\n\t\tgroupInfoListId: string,\n\t\tgroupId: string,\n\t\tadminGroup: string,\n\t\tadminGroupEncGroupKey: Uint8Array,\n\t): {\n\t\tgroup: Group\n\t\tgroupInfo: GroupInfo\n\t} {\n\t\tconst groupInfo = createTestEntity(GroupInfoTypeRef, { _id: [groupInfoListId, `groupInfo${groupId}`], groupType: groupType, group: groupId })\n\t\tconst group = createTestEntity(GroupTypeRef, {\n\t\t\ttype: groupType,\n\t\t\tadmin: adminGroup,\n\t\t\t_id: groupId,\n\t\t\tadminGroupEncGKey: adminGroupEncGroupKey,\n\t\t})\n\t\twhen(entityClient.load(GroupTypeRef, groupId)).thenResolve(group)\n\t\twhen(entityClient.load(GroupInfoTypeRef, groupInfo._id)).thenResolve(groupInfo)\n\n\t\treturn { group, groupInfo }\n\t}\n})\n","import o from \"@tutao/otest\"\nimport { decodePQMessage, encodePQMessage, PQMessage } from \"../../../../../src/common/api/worker/facades/PQMessage.js\"\nimport { concat, stringToUtf8Uint8Array } from \"@tutao/tutanota-utils\"\nimport { assertThrows } from \"@tutao/tutanota-test-utils\"\n\no.spec(\"PQMessageTest\", function () {\n\to.spec(\"encodeDecodeRoundtrip\", function () {\n\t\to(\"should lead to same result\", async function () {\n\t\t\tconst pqMessage: PQMessage = {\n\t\t\t\tsenderIdentityPubKey: stringToUtf8Uint8Array(\"id\"),\n\t\t\t\tephemeralPubKey: stringToUtf8Uint8Array(\"eph\"),\n\t\t\t\tencapsulation: {\n\t\t\t\t\tkyberCipherText: stringToUtf8Uint8Array(\"kyberCipherText\"),\n\t\t\t\t\tkekEncBucketKey: stringToUtf8Uint8Array(\"bucketKeyCipherText\"),\n\t\t\t\t},\n\t\t\t}\n\n\t\t\tconst encodedPqMessage = encodePQMessage(pqMessage)\n\n\t\t\to(\n\t\t\t\tconcat(\n\t\t\t\t\tnew Uint8Array([0, stringToUtf8Uint8Array(\"id\").length]),\n\t\t\t\t\tstringToUtf8Uint8Array(\"id\"),\n\t\t\t\t\tnew Uint8Array([0, stringToUtf8Uint8Array(\"eph\").length]),\n\t\t\t\t\tstringToUtf8Uint8Array(\"eph\"),\n\t\t\t\t\tnew Uint8Array([0, stringToUtf8Uint8Array(\"kyberCipherText\").length]),\n\t\t\t\t\tstringToUtf8Uint8Array(\"kyberCipherText\"),\n\t\t\t\t\tnew Uint8Array([0, stringToUtf8Uint8Array(\"bucketKeyCipherText\").length]),\n\t\t\t\t\tstringToUtf8Uint8Array(\"bucketKeyCipherText\"),\n\t\t\t\t),\n\t\t\t).deepEquals(encodedPqMessage)\n\n\t\t\to(pqMessage).deepEquals(decodePQMessage(encodedPqMessage))\n\t\t})\n\t})\n})\n","import o from \"@tutao/otest\"\nimport { aes256RandomKey, bitArrayToUint8Array, generateEccKeyPair, pqKeyPairsToPublicKeys } from \"@tutao/tutanota-crypto\"\nimport { PQFacade } from \"../../../../../src/common/api/worker/facades/PQFacade.js\"\nimport { WASMKyberFacade } from \"../../../../../src/common/api/worker/facades/KyberFacade.js\"\nimport { loadLibOQSWASM } from \"../WASMTestUtils.js\"\n\no.spec(\"PQFacade test\", function () {\n\to.spec(\"encapsulateDecapsulateRoundtrip\", function () {\n\t\to(\"should lead to same result\", async function () {\n\t\t\tconst kyberFacade = new WASMKyberFacade(await loadLibOQSWASM())\n\t\t\tconst pqFacade: PQFacade = new PQFacade(kyberFacade)\n\n\t\t\tconst senderIdentityKeyPair = generateEccKeyPair()\n\t\t\tconst ephemeralKeyPair = generateEccKeyPair()\n\n\t\t\tconst recipientKeys = await pqFacade.generateKeyPairs()\n\t\t\tconst bucketKey = bitArrayToUint8Array(aes256RandomKey())\n\t\t\tconst pqMessage = await pqFacade.encapsulate(senderIdentityKeyPair, ephemeralKeyPair, pqKeyPairsToPublicKeys(recipientKeys), bucketKey)\n\n\t\t\tconst decryptedBucketKey = await pqFacade.decapsulate(pqMessage, recipientKeys)\n\n\t\t\to(bucketKey).deepEquals(decryptedBucketKey)\n\t\t})\n\t})\n})\n","import o from \"@tutao/otest\"\nimport type { CalendarEventAlteredInstance, EventWithUserAlarmInfos } from \"../../../../../src/common/api/worker/facades/lazy/CalendarFacade.js\"\nimport { CalendarFacade, sortByRecurrenceId } from \"../../../../../src/common/api/worker/facades/lazy/CalendarFacade.js\"\nimport { EntityRestClientMock } from \"../rest/EntityRestClientMock.js\"\nimport { DefaultEntityRestCache } from \"../../../../../src/common/api/worker/rest/DefaultEntityRestCache.js\"\nimport { clone, downcast, isSameTypeRef, neverNull, noOp } from \"@tutao/tutanota-utils\"\nimport type { AlarmInfo, User, UserAlarmInfo } from \"../../../../../src/common/api/entities/sys/TypeRefs.js\"\nimport {\n\tAlarmInfoTypeRef,\n\tCalendarEventRefTypeRef,\n\tPushIdentifierListTypeRef,\n\tPushIdentifierTypeRef,\n\tUserAlarmInfoListTypeTypeRef,\n\tUserAlarmInfoTypeRef,\n\tUserTypeRef,\n} from \"../../../../../src/common/api/entities/sys/TypeRefs.js\"\nimport { getElementId, getLetId, getListId } from \"../../../../../src/common/api/common/utils/EntityUtils.js\"\nimport type { CalendarEvent } from \"../../../../../src/common/api/entities/tutanota/TypeRefs.js\"\nimport { CalendarEventTypeRef } from \"../../../../../src/common/api/entities/tutanota/TypeRefs.js\"\nimport { ProgressMonitor } from \"../../../../../src/common/api/common/utils/ProgressMonitor.js\"\nimport { assertThrows, mockAttribute, spy, unmockAttribute } from \"@tutao/tutanota-test-utils\"\nimport { ImportError } from \"../../../../../src/common/api/common/error/ImportError.js\"\nimport { SetupMultipleError } from \"../../../../../src/common/api/common/error/SetupMultipleError.js\"\nimport { InstanceMapper } from \"../../../../../src/common/api/worker/crypto/InstanceMapper.js\"\nimport { GroupManagementFacade } from \"../../../../../src/common/api/worker/facades/lazy/GroupManagementFacade.js\"\nimport { object } from \"testdouble\"\nimport { IServiceExecutor } from \"../../../../../src/common/api/common/ServiceRequest\"\nimport { CryptoFacade } from \"../../../../../src/common/api/worker/crypto/CryptoFacade\"\nimport { UserFacade } from \"../../../../../src/common/api/worker/facades/UserFacade\"\nimport { InfoMessageHandler } from \"../../../../../src/common/gui/InfoMessageHandler.js\"\nimport { ConnectionError } from \"../../../../../src/common/api/common/error/RestError.js\"\nimport { EntityClient } from \"../../../../../src/common/api/common/EntityClient.js\"\nimport { createTestEntity } from \"../../../TestUtils.js\"\nimport { EntityRestClient } from \"../../../../../src/common/api/worker/rest/EntityRestClient\"\n\no.spec(\"CalendarFacadeTest\", function () {\n\tlet userAlarmInfoListId: Id\n\tlet user: User\n\tlet userFacade: UserFacade\n\tlet groupManagementFacade: GroupManagementFacade\n\tlet restClientMock: EntityRestClientMock\n\tlet entityRestCache: DefaultEntityRestCache\n\tlet calendarFacade: CalendarFacade\n\tlet progressMonitor: ProgressMonitor\n\tlet entityRequest: EntityRestClient[\"setupMultiple\"]\n\tlet requestSpy: any\n\tlet sendAlarmNotificationsMock\n\tlet loadAllMock\n\tlet enitityClientLoadAllMock\n\tlet entityRequestMock\n\tlet workerMock\n\tlet nativeMock\n\tlet instanceMapper\n\tlet serviceExecutor: IServiceExecutor\n\tlet cryptoFacade: CryptoFacade\n\tlet infoMessageHandler: InfoMessageHandler\n\n\tfunction sortEventsWithAlarmInfos(eventsWithAlarmInfos: Array<EventWithUserAlarmInfos>) {\n\t\tconst idCompare = (el1, el2) => getLetId(el1).join(\"\").localeCompare(getLetId(el2).join(\"\"))\n\n\t\teventsWithAlarmInfos.sort((a, b) => idCompare(a.event, b.event))\n\n\t\tfor (let { userAlarmInfos } of eventsWithAlarmInfos) {\n\t\t\tuserAlarmInfos.sort(idCompare)\n\t\t}\n\t\treturn eventsWithAlarmInfos\n\t}\n\n\t// We have to sort because deepEquals takes list order into account\n\tfunction assertSortedEquals(actual, expected) {\n\t\to(sortEventsWithAlarmInfos(actual)).deepEquals(sortEventsWithAlarmInfos(expected))\n\t}\n\n\tfunction makeEvent(listId: Id, elementId?: Id): CalendarEvent {\n\t\treturn createTestEntity(CalendarEventTypeRef, {\n\t\t\t_id: [listId, elementId || restClientMock.getNextId()],\n\t\t\tuid: `${listId}-${elementId}`,\n\t\t})\n\t}\n\n\tfunction makeUserAlarmInfo(event: CalendarEvent): UserAlarmInfo {\n\t\treturn createTestEntity(UserAlarmInfoTypeRef, {\n\t\t\t_id: [userAlarmInfoListId, restClientMock.getNextId()],\n\t\t\talarmInfo: makeAlarmInfo(event),\n\t\t})\n\t}\n\n\tfunction makeAlarmInfo(event: CalendarEvent): AlarmInfo {\n\t\treturn createTestEntity(AlarmInfoTypeRef, {\n\t\t\tcalendarRef: createTestEntity(CalendarEventRefTypeRef, {\n\t\t\t\telementId: getElementId(event),\n\t\t\t\tlistId: getListId(event),\n\t\t\t}),\n\t\t})\n\t}\n\n\to.beforeEach(async function () {\n\t\trestClientMock = new EntityRestClientMock()\n\t\tuserAlarmInfoListId = restClientMock.getNextId()\n\n\t\tuser = createTestEntity(UserTypeRef, {\n\t\t\talarmInfoList: createTestEntity(UserAlarmInfoListTypeTypeRef, {\n\t\t\t\talarms: userAlarmInfoListId,\n\t\t\t}),\n\t\t\tpushIdentifierList: createTestEntity(PushIdentifierListTypeRef, { list: \"pushIdentifierList\" }),\n\t\t\tuserGroup: downcast({\n\t\t\t\tgroup: \"Id\",\n\t\t\t}),\n\t\t})\n\t\tuserFacade = downcast({\n\t\t\tgetLoggedInUser: () => user,\n\t\t})\n\t\tgroupManagementFacade = downcast({})\n\n\t\tentityRestCache = downcast(restClientMock)\n\t\tworkerMock = downcast({\n\t\t\tsendProgress: () => Promise.resolve(),\n\t\t})\n\t\tnativeMock = downcast({\n\t\t\tinvokeNative: spy(() => Promise.resolve()),\n\t\t})\n\t\tinstanceMapper = new InstanceMapper()\n\t\tserviceExecutor = object()\n\t\tcryptoFacade = object()\n\t\tinfoMessageHandler = object()\n\t\tcalendarFacade = new CalendarFacade(\n\t\t\tuserFacade,\n\t\t\tgroupManagementFacade,\n\t\t\tentityRestCache,\n\t\t\tnew EntityClient(entityRestCache),\n\t\t\tnativeMock,\n\t\t\tworkerMock,\n\t\t\tinstanceMapper,\n\t\t\tserviceExecutor,\n\t\t\tcryptoFacade,\n\t\t\tinfoMessageHandler,\n\t\t)\n\t})\n\n\to.spec(\"saveCalendarEvents\", function () {\n\t\to.beforeEach(async function () {\n\t\t\tprogressMonitor = downcast({\n\t\t\t\tworkDone: noOp,\n\t\t\t})\n\n\t\t\tloadAllMock = function (typeRef, listId, start) {\n\t\t\t\tif (isSameTypeRef(typeRef, PushIdentifierTypeRef)) {\n\t\t\t\t\treturn Promise.resolve(neverNull(user.pushIdentifierList).list)\n\t\t\t\t}\n\t\t\t\tthrow new Error(\"should not be called with typeRef: \" + typeRef)\n\t\t\t}\n\t\t\tentityRequest = async function () {\n\t\t\t\tthrow new Error(\"not implemented\")\n\t\t\t} //dummy overwrite in test\n\t\t\trequestSpy = spy(function (...args) {\n\t\t\t\treturn entityRequest.apply(this, args)\n\t\t\t})\n\n\t\t\t// @ts-ignore\n\t\t\tsendAlarmNotificationsMock = mockAttribute(calendarFacade, calendarFacade.sendAlarmNotifications, () => Promise.resolve())\n\t\t\tenitityClientLoadAllMock = mockAttribute(calendarFacade.cachingEntityClient, calendarFacade.cachingEntityClient.loadAll, loadAllMock)\n\t\t\tentityRequestMock = mockAttribute(restClientMock, restClientMock.setupMultiple, requestSpy)\n\t\t})\n\t\to.afterEach(async function () {\n\t\t\tunmockAttribute(enitityClientLoadAllMock)\n\t\t\tunmockAttribute(entityRequestMock)\n\t\t\tunmockAttribute(sendAlarmNotificationsMock)\n\t\t})\n\n\t\to(\"save events with alarms posts all alarms in one post multiple\", async function () {\n\t\t\tentityRequest = function (listId, instances) {\n\t\t\t\tconst typeRef = instances[0]?._type\n\t\t\t\tif (isSameTypeRef(typeRef, CalendarEventTypeRef)) {\n\t\t\t\t\tconst calendarInstances = instances as unknown as CalendarEvent[]\n\t\t\t\t\to(calendarInstances.length).equals(2)\n\t\t\t\t\to(calendarInstances[0].alarmInfos).deepEquals([[userAlarmInfoListId, \"1\"]])\n\t\t\t\t\to(calendarInstances[1].alarmInfos).deepEquals([\n\t\t\t\t\t\t[userAlarmInfoListId, \"2\"],\n\t\t\t\t\t\t[userAlarmInfoListId, \"3\"],\n\t\t\t\t\t])\n\t\t\t\t\treturn Promise.resolve([\"eventId1\", \"eventId2\"])\n\t\t\t\t} else if (isSameTypeRef(typeRef, UserAlarmInfoTypeRef)) {\n\t\t\t\t\to(instances.length).equals(3)\n\t\t\t\t\treturn Promise.resolve([\"1\", \"2\", \"3\"])\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error()\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst listId = \"listID\"\n\t\t\tconst event1 = makeEvent(listId, \"eventId1\")\n\t\t\tconst event2 = makeEvent(listId, \"eventId2\")\n\t\t\tconst eventsWrapper = [\n\t\t\t\t{\n\t\t\t\t\tevent: event1,\n\t\t\t\t\talarms: [makeAlarmInfo(event1)],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tevent: event2,\n\t\t\t\t\talarms: [makeAlarmInfo(event2), makeAlarmInfo(event2)],\n\t\t\t\t},\n\t\t\t]\n\t\t\t// @ts-ignore\n\t\t\tawait calendarFacade.saveCalendarEvents(eventsWrapper, () => Promise.resolve())\n\t\t\t// @ts-ignore\n\t\t\to(calendarFacade.sendAlarmNotifications.callCount).equals(1)\n\t\t\t// @ts-ignore\n\t\t\to(calendarFacade.sendAlarmNotifications.args[0].length).equals(3)\n\t\t\t// @ts-ignore\n\t\t\to(entityRestCache.setupMultiple.callCount).equals(2)\n\t\t})\n\n\t\to(\"If alarms cannot be saved a user error is thrown and events are not created\", async function () {\n\t\t\tentityRequest = function (listId, instances) {\n\t\t\t\tconst typeRef = instances[0]?._type\n\t\t\t\tif (isSameTypeRef(typeRef, UserAlarmInfoTypeRef)) {\n\t\t\t\t\treturn Promise.reject(new SetupMultipleError(\"could not create alarms\", [new Error(\"failed\")], instances))\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(\"Wrong typeref\")\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst listId = \"listID\"\n\t\t\tconst event1 = makeEvent(listId, \"eventId1\")\n\t\t\tconst event2 = makeEvent(listId, \"eventId2\")\n\t\t\tconst eventsWrapper = [\n\t\t\t\t{\n\t\t\t\t\tevent: event1,\n\t\t\t\t\talarms: [makeAlarmInfo(event1)],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tevent: event2,\n\t\t\t\t\talarms: [makeAlarmInfo(event2), makeAlarmInfo(event2)],\n\t\t\t\t},\n\t\t\t]\n\t\t\t// @ts-ignore\n\t\t\tconst result = await assertThrows(ImportError, async () => await calendarFacade.saveCalendarEvents(eventsWrapper, () => Promise.resolve()))\n\t\t\to(result.numFailed).equals(2)\n\t\t\t// @ts-ignore\n\t\t\to(calendarFacade.sendAlarmNotifications.callCount).equals(0)\n\t\t\t// @ts-ignore\n\t\t\to(entityRestCache.setupMultiple.callCount).equals(1)\n\t\t})\n\n\t\to(\"If not all events can be saved and no connection error is present, an ImportError is thrown\", async function () {\n\t\t\tconst listId1 = \"listID1\"\n\t\t\tconst listId2 = \"listID2\"\n\t\t\tentityRequest = function (listId, instances) {\n\t\t\t\tconst typeRef = instances[0]?._type\n\t\t\t\tif (isSameTypeRef(typeRef, CalendarEventTypeRef)) {\n\t\t\t\t\tif (listId === listId1) {\n\t\t\t\t\t\treturn Promise.reject(new SetupMultipleError(\"could not save event\", [new Error(\"failed\")], instances))\n\t\t\t\t\t} else if (listId === listId2) {\n\t\t\t\t\t\treturn Promise.resolve([\"eventId2\"])\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error(\"Unknown id\")\n\t\t\t\t\t}\n\t\t\t\t} else if (isSameTypeRef(typeRef, UserAlarmInfoTypeRef)) {\n\t\t\t\t\to(instances.length).equals(3)\n\t\t\t\t\treturn Promise.resolve([\"1\", \"2\", \"3\"])\n\t\t\t\t}\n\t\t\t\tthrow new Error(\"should not be reached\")\n\t\t\t}\n\n\t\t\tconst event1 = makeEvent(listId1, \"eventId1\")\n\t\t\tconst event2 = makeEvent(listId2, \"eventId2\")\n\t\t\tconst eventsWrapper = [\n\t\t\t\t{\n\t\t\t\t\tevent: event1,\n\t\t\t\t\talarms: [makeAlarmInfo(event1)],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tevent: event2,\n\t\t\t\t\talarms: [makeAlarmInfo(event2), makeAlarmInfo(event2)],\n\t\t\t\t},\n\t\t\t]\n\t\t\t// @ts-ignore\n\t\t\tconst result = await assertThrows(ImportError, async () => await calendarFacade.saveCalendarEvents(eventsWrapper, () => Promise.resolve()))\n\t\t\to(result.numFailed).equals(1)\n\t\t\t// @ts-ignore\n\t\t\to(calendarFacade.sendAlarmNotifications.callCount).equals(1)\n\t\t\t// @ts-ignore\n\t\t\to(calendarFacade.sendAlarmNotifications.args[0].length).equals(2)\n\t\t\t// @ts-ignore\n\t\t\to(entityRestCache.setupMultiple.callCount).equals(3)\n\t\t})\n\t\to(\"If not all events can be saved and a connection error is present, it is thrown\", async function () {\n\t\t\tconst listId1 = \"listID1\"\n\t\t\tconst listId2 = \"listID2\"\n\t\t\tentityRequest = function (listId, instances) {\n\t\t\t\tconst typeRef = instances[0]?._type\n\t\t\t\tif (isSameTypeRef(typeRef, CalendarEventTypeRef)) {\n\t\t\t\t\tif (listId === listId1) {\n\t\t\t\t\t\treturn Promise.reject(\n\t\t\t\t\t\t\tnew SetupMultipleError(\"could not save event\", [new Error(\"failed\"), new ConnectionError(\"no connection\")], instances),\n\t\t\t\t\t\t)\n\t\t\t\t\t} else if (listId === listId2) {\n\t\t\t\t\t\treturn Promise.resolve([\"eventId2\"])\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error(\"Unknown id\")\n\t\t\t\t\t}\n\t\t\t\t} else if (isSameTypeRef(typeRef, UserAlarmInfoTypeRef)) {\n\t\t\t\t\to(instances.length).equals(3)\n\t\t\t\t\treturn Promise.resolve([\"1\", \"2\", \"3\"])\n\t\t\t\t}\n\t\t\t\tthrow new Error(\"should not be reached\")\n\t\t\t}\n\n\t\t\tconst event1 = makeEvent(listId1, \"eventId1\")\n\t\t\tconst event2 = makeEvent(listId2, \"eventId2\")\n\t\t\tconst eventsWrapper = [\n\t\t\t\t{\n\t\t\t\t\tevent: event1,\n\t\t\t\t\talarms: [makeAlarmInfo(event1)],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tevent: event2,\n\t\t\t\t\talarms: [makeAlarmInfo(event2), makeAlarmInfo(event2)],\n\t\t\t\t},\n\t\t\t]\n\t\t\t// @ts-ignore\n\t\t\tawait assertThrows(ConnectionError, async () => await calendarFacade.saveCalendarEvents(eventsWrapper, () => Promise.resolve()))\n\t\t\t// @ts-ignore\n\t\t\to(calendarFacade.sendAlarmNotifications.callCount).equals(1)\n\t\t\t// @ts-ignore\n\t\t\to(calendarFacade.sendAlarmNotifications.args[0].length).equals(2)\n\t\t\t// @ts-ignore\n\t\t\to(entityRestCache.setupMultiple.callCount).equals(3)\n\t\t})\n\t})\n\n\to.spec(\"loadAlarmEvents\", function () {\n\t\to(\"no alarms\", async function () {\n\t\t\to(await calendarFacade.loadAlarmEvents()).deepEquals([])\n\t\t})\n\t\to(\"one alarm\", async function () {\n\t\t\tconst calendarId = restClientMock.getNextId()\n\t\t\tconst event = makeEvent(calendarId)\n\t\t\tconst alarm = makeUserAlarmInfo(event)\n\t\t\trestClientMock.addListInstances(event, alarm)\n\t\t\tconst actual = await calendarFacade.loadAlarmEvents()\n\t\t\tconst expected = [{ event, userAlarmInfos: [alarm] }]\n\t\t\tassertSortedEquals(actual, expected)\n\t\t})\n\t\to(\"multiple alarms, same event\", async function () {\n\t\t\tconst calendarId = restClientMock.getNextId()\n\t\t\tconst event = makeEvent(calendarId)\n\t\t\tconst alarm1 = makeUserAlarmInfo(event)\n\t\t\tconst alarm2 = makeUserAlarmInfo(event)\n\t\t\trestClientMock.addListInstances(event, alarm1, alarm2)\n\t\t\tconst actual = await calendarFacade.loadAlarmEvents()\n\t\t\tconst expected = [{ event, userAlarmInfos: [alarm1, alarm2] }]\n\t\t\tassertSortedEquals(actual, expected)\n\t\t})\n\t\to(\"multiple alarms, different events\", async function () {\n\t\t\tconst calendarId = restClientMock.getNextId()\n\t\t\tconst event1 = makeEvent(calendarId)\n\t\t\tconst event2 = makeEvent(calendarId)\n\t\t\tconst alarm1 = makeUserAlarmInfo(event1)\n\t\t\tconst alarm2 = makeUserAlarmInfo(event2)\n\t\t\tconst alarm3 = makeUserAlarmInfo(event2)\n\t\t\trestClientMock.addListInstances(event1, event2, alarm1, alarm2, alarm3)\n\t\t\tconst actual = await calendarFacade.loadAlarmEvents()\n\t\t\tconst expected = [\n\t\t\t\t{ event: event1, userAlarmInfos: [alarm1] },\n\t\t\t\t{ event: event2, userAlarmInfos: [alarm2, alarm3] },\n\t\t\t]\n\t\t\tassertSortedEquals(actual, expected)\n\t\t})\n\t\to(\"multiple alarms, different calendar\", async function () {\n\t\t\tconst calendarId1 = restClientMock.getNextId()\n\t\t\tconst calendarId2 = restClientMock.getNextId()\n\t\t\tconst event1 = makeEvent(calendarId1)\n\t\t\tconst event2 = makeEvent(calendarId2)\n\t\t\tconst event3 = makeEvent(calendarId2)\n\t\t\tconst alarm1 = makeUserAlarmInfo(event1)\n\t\t\tconst alarm2 = makeUserAlarmInfo(event2)\n\t\t\tconst alarm3 = makeUserAlarmInfo(event2)\n\t\t\tconst alarm4 = makeUserAlarmInfo(event3)\n\t\t\trestClientMock.addListInstances(event1, event2, event3, alarm1, alarm2, alarm3, alarm4)\n\t\t\tconst actual = await calendarFacade.loadAlarmEvents()\n\t\t\tconst expected = [\n\t\t\t\t{ event: event1, userAlarmInfos: [alarm1] },\n\t\t\t\t{ event: event2, userAlarmInfos: [alarm2, alarm3] },\n\t\t\t\t{ event: event3, userAlarmInfos: [alarm4] },\n\t\t\t]\n\t\t\tassertSortedEquals(actual, expected)\n\t\t})\n\n\t\t// Event ids can clash because they are generated client side\n\t\to(\"multiple alarms, different calendar, clashing event ids\", async function () {\n\t\t\tconst calendarId1 = restClientMock.getNextId()\n\t\t\tconst calendarId2 = restClientMock.getNextId()\n\t\t\tconst clashingEventId = restClientMock.getNextId()\n\n\t\t\tconst event1 = makeEvent(calendarId1)\n\t\t\tconst event2 = makeEvent(calendarId2)\n\t\t\tconst clashEvent1 = makeEvent(calendarId1, clashingEventId)\n\t\t\tconst clashEvent2 = makeEvent(calendarId2, clashingEventId)\n\n\t\t\tconst alarm1 = makeUserAlarmInfo(event1)\n\t\t\tconst alarm2 = makeUserAlarmInfo(event2)\n\t\t\tconst alarm3 = makeUserAlarmInfo(event2)\n\t\t\tconst alarm4 = makeUserAlarmInfo(clashEvent1)\n\t\t\tconst alarm5 = makeUserAlarmInfo(clashEvent2)\n\t\t\tconst alarm6 = makeUserAlarmInfo(clashEvent2)\n\n\t\t\trestClientMock.addListInstances(event1, event2, clashEvent1, clashEvent2, alarm1, alarm2, alarm3, alarm4, alarm5, alarm6)\n\n\t\t\tconst actual = await calendarFacade.loadAlarmEvents()\n\t\t\tconst expected = [\n\t\t\t\t{ event: event1, userAlarmInfos: [alarm1] },\n\t\t\t\t{ event: event2, userAlarmInfos: [alarm2, alarm3] },\n\t\t\t\t{ event: clashEvent1, userAlarmInfos: [alarm4] },\n\t\t\t\t{ event: clashEvent2, userAlarmInfos: [alarm5, alarm6] },\n\t\t\t]\n\t\t\tassertSortedEquals(actual, expected)\n\t\t})\n\n\t\t// missing event should not be an error\n\t\to(\"multiple alarms, not all events found\", async function () {\n\t\t\tconst calendarId = restClientMock.getNextId()\n\t\t\tconst event = makeEvent(calendarId)\n\t\t\tconst missingEvent = makeEvent(calendarId)\n\t\t\tconst alarm = makeUserAlarmInfo(event)\n\t\t\tconst missingAlarm = makeUserAlarmInfo(missingEvent)\n\t\t\trestClientMock.addListInstances(event, alarm, missingAlarm)\n\t\t\tconst actual = await calendarFacade.loadAlarmEvents()\n\t\t\tconst expected = [{ event, userAlarmInfos: [alarm] }]\n\t\t\tassertSortedEquals(actual, expected)\n\t\t})\n\t})\n\n\to.spec(\"sortByRecurrenceId\", function () {\n\t\to(\"sorts empty array\", function () {\n\t\t\tconst arr = []\n\t\t\tsortByRecurrenceId(arr)\n\t\t\to(arr).deepEquals([])\n\t\t})\n\n\t\to(\"sorts array with len 1\", function () {\n\t\t\tconst arr = [createTestEntity(CalendarEventTypeRef, { recurrenceId: new Date(\"2023-07-17T13:00\") })] as Array<CalendarEventAlteredInstance>\n\t\t\tconst expected = clone(arr)\n\t\t\tsortByRecurrenceId(arr)\n\t\t\to(arr).deepEquals(expected)\n\t\t})\n\n\t\to(\"sorts array that's not sorted\", function () {\n\t\t\tconst arr = [\n\t\t\t\tcreateTestEntity(CalendarEventTypeRef, { recurrenceId: new Date(\"2023-07-17T13:00\") }),\n\t\t\t\tcreateTestEntity(CalendarEventTypeRef, { recurrenceId: new Date(\"2023-07-16T13:00\") }),\n\t\t\t] as Array<CalendarEventAlteredInstance>\n\t\t\tconst expected = clone(arr)\n\t\t\tconst smaller = expected[1]\n\t\t\texpected[1] = expected[0]\n\t\t\texpected[0] = smaller\n\t\t\tsortByRecurrenceId(arr)\n\t\t\to(arr).deepEquals(expected)\n\t\t})\n\t})\n})\n","import o from \"@tutao/otest\"\nimport { UserFacade } from \"../../../../../src/common/api/worker/facades/UserFacade.js\"\nimport { User, UserGroupKeyDistributionTypeRef } from \"../../../../../src/common/api/entities/sys/TypeRefs.js\"\nimport { KeyCache } from \"../../../../../src/common/api/worker/facades/KeyCache.js\"\nimport { matchers, object, verify, when } from \"testdouble\"\nimport { createTestEntity } from \"../../../TestUtils.js\"\nimport { aes256RandomKey, encryptKey } from \"@tutao/tutanota-crypto\"\n\no.spec(\"UserFacadeTest\", function () {\n\tlet keyCache: KeyCache\n\tlet facade: UserFacade\n\n\to.beforeEach(function () {\n\t\tkeyCache = object()\n\t\tfacade = new UserFacade(keyCache, object())\n\t})\n\n\to(\"a fresh UserFacade doesn't think it's logged or partially logged in\", function () {\n\t\to(facade.isPartiallyLoggedIn()).equals(false)\n\t\to(facade.isFullyLoggedIn()).equals(false)\n\t})\n\n\to(\"a user facade doesn't think it's logged in after receiving an accessToken but no user or groupKeys\", function () {\n\t\tfacade.setAccessToken(\"hello.\")\n\t\to(facade.isPartiallyLoggedIn()).equals(false)\n\t\to(facade.isFullyLoggedIn()).equals(false)\n\t})\n\n\to(\"a user facade doesn't think it's logged in fully after receiving a user but no groupKeys\", function () {\n\t\tfacade.setAccessToken(\"hello.\")\n\t\tfacade.setUser({} as User)\n\t\to(facade.isPartiallyLoggedIn()).equals(true)\n\t\to(facade.isFullyLoggedIn()).equals(false)\n\t})\n\n\to(\"updateUserGroupKey - successfull\", function () {\n\t\tconst distributionKey = aes256RandomKey()\n\t\tconst newUserGroupKey = aes256RandomKey()\n\t\tconst distributionEncUserGroupKey = encryptKey(distributionKey, newUserGroupKey)\n\t\tconst distributionUpdate = createTestEntity(UserGroupKeyDistributionTypeRef, {\n\t\t\t_id: \"userGroupId\",\n\t\t\tdistributionEncUserGroupKey,\n\t\t\tuserGroupKeyVersion: \"1\",\n\t\t})\n\t\twhen(keyCache.getUserGroupKeyDistributionKey()).thenReturn(distributionKey)\n\t\tfacade.updateUserGroupKey(distributionUpdate)\n\t\tverify(keyCache.setCurrentUserGroupKey({ version: 1, object: newUserGroupKey }))\n\t})\n\n\to(\"updateUserGroupKey - ignore missing distribution key \", function () {\n\t\tconst distributionKey = aes256RandomKey()\n\t\tconst newUserGroupKey = aes256RandomKey()\n\t\tconst distributionEncUserGroupKey = encryptKey(distributionKey, newUserGroupKey)\n\t\tconst distributionUpdate = createTestEntity(UserGroupKeyDistributionTypeRef, {\n\t\t\t_id: \"userGroupId\",\n\t\t\tdistributionEncUserGroupKey,\n\t\t\tuserGroupKeyVersion: \"1\",\n\t\t})\n\t\twhen(keyCache.getUserGroupKeyDistributionKey()).thenReturn(null)\n\t\tfacade.updateUserGroupKey(distributionUpdate)\n\t\tverify(keyCache.setCurrentUserGroupKey(matchers.anything()), { times: 0 })\n\t})\n\n\to(\"updateUserGroupKey - ignore decryption error\", function () {\n\t\tconst distributionKey = aes256RandomKey()\n\t\tconst newUserGroupKey = aes256RandomKey()\n\t\tconst distributionEncUserGroupKey = encryptKey(newUserGroupKey, newUserGroupKey)\n\t\tconst distributionUpdate = createTestEntity(UserGroupKeyDistributionTypeRef, {\n\t\t\t_id: \"userGroupId\",\n\t\t\tdistributionEncUserGroupKey,\n\t\t\tuserGroupKeyVersion: \"1\",\n\t\t})\n\t\twhen(keyCache.getUserGroupKeyDistributionKey()).thenReturn(distributionKey)\n\t\tfacade.updateUserGroupKey(distributionUpdate)\n\t\tverify(keyCache.setCurrentUserGroupKey(matchers.anything()), { times: 0 })\n\t})\n})\n","import o from \"@tutao/otest\"\nimport { UserFacade } from \"../../../../../src/common/api/worker/facades/UserFacade.js\"\nimport { PQFacade } from \"../../../../../src/common/api/worker/facades/PQFacade.js\"\nimport { WASMKyberFacade } from \"../../../../../src/common/api/worker/facades/KyberFacade.js\"\nimport { loadLibOQSWASM } from \"../WASMTestUtils.js\"\nimport {\n\taes256RandomKey,\n\taesEncrypt,\n\tAesKey,\n\tencryptEccKey,\n\tencryptKey,\n\tkyberPrivateKeyToBytes,\n\tkyberPublicKeyToBytes,\n\tPQKeyPairs,\n} from \"@tutao/tutanota-crypto\"\nimport {\n\tGroup,\n\tGroupKey,\n\tGroupKeysRefTypeRef,\n\tGroupKeyTypeRef,\n\tGroupMembership,\n\tGroupMembershipTypeRef,\n\tGroupTypeRef,\n\tKeyPair,\n\tKeyPairTypeRef,\n\tUser,\n\tUserTypeRef,\n} from \"../../../../../src/common/api/entities/sys/TypeRefs.js\"\nimport { createTestEntity } from \"../../../TestUtils.js\"\nimport { EntityClient } from \"../../../../../src/common/api/common/EntityClient.js\"\nimport { matchers, object, reset, verify, when } from \"testdouble\"\nimport { KeyLoaderFacade } from \"../../../../../src/common/api/worker/facades/KeyLoaderFacade.js\"\nimport { stringToCustomId } from \"../../../../../src/common/api/common/utils/EntityUtils.js\"\nimport { assertNotNull, freshVersioned } from \"@tutao/tutanota-utils\"\nimport { KeyCache } from \"../../../../../src/common/api/worker/facades/KeyCache.js\"\nimport { assertThrows } from \"@tutao/tutanota-test-utils\"\nimport { CacheManagementFacade } from \"../../../../../src/common/api/worker/facades/lazy/CacheManagementFacade.js\"\nimport { VersionedKey } from \"../../../../../src/common/api/worker/crypto/CryptoWrapper.js\"\n\no.spec(\"KeyLoaderFacadeTest\", function () {\n\tlet keyCache: KeyCache\n\tlet userFacade: UserFacade\n\tlet entityClient: EntityClient\n\tlet cacheManagementFacade: CacheManagementFacade\n\tlet pqFacade: PQFacade\n\tlet keyLoaderFacade: KeyLoaderFacade\n\n\tlet group: Group\n\tlet userGroup: Group\n\tlet currentKeys: KeyPair | null = null\n\tlet formerKeys: GroupKey[]\n\tlet formerKeysDecrypted: AesKey[]\n\tlet currentGroupKey: VersionedKey\n\tlet userGroupKey: VersionedKey\n\tlet currentGroupKeyVersion: number\n\tlet formerKeyPairsDecrypted: PQKeyPairs[]\n\tconst FORMER_KEYS = 2\n\tlet currentKeyPair: PQKeyPairs\n\tlet membership: GroupMembership\n\n\to.beforeEach(async () => {\n\t\tkeyCache = new KeyCache()\n\t\tuserFacade = object()\n\t\tentityClient = object()\n\t\tcacheManagementFacade = object()\n\t\tpqFacade = new PQFacade(new WASMKyberFacade(await loadLibOQSWASM()))\n\t\tkeyLoaderFacade = new KeyLoaderFacade(keyCache, userFacade, entityClient, async () => cacheManagementFacade)\n\n\t\tformerKeys = []\n\t\tformerKeyPairsDecrypted = []\n\t\tformerKeysDecrypted = []\n\t\tfor (let i = 0; i < FORMER_KEYS; i++) {\n\t\t\tformerKeysDecrypted.push(aes256RandomKey())\n\t\t\tformerKeyPairsDecrypted.push(await pqFacade.generateKeyPairs())\n\t\t}\n\n\t\tcurrentGroupKeyVersion = formerKeysDecrypted.length\n\t\tcurrentGroupKey = { object: aes256RandomKey(), version: Number(currentGroupKeyVersion) }\n\n\t\tlet lastKey = currentGroupKey.object\n\n\t\tfor (let i = formerKeysDecrypted.length - 1; i >= 0; i--) {\n\t\t\tconst key: GroupKey = createTestEntity(GroupKeyTypeRef)\n\t\t\tkey._id = [\"list\", stringToCustomId(i.toString())]\n\t\t\tkey.ownerEncGKey = encryptKey(lastKey, formerKeysDecrypted[i])\n\t\t\tconst pqKeyPair = formerKeyPairsDecrypted[i]\n\n\t\t\tkey.keyPair = createTestEntity(KeyPairTypeRef, {\n\t\t\t\tpubEccKey: pqKeyPair.eccKeyPair.publicKey,\n\t\t\t\tpubKyberKey: kyberPublicKeyToBytes(pqKeyPair.kyberKeyPair.publicKey),\n\t\t\t\tsymEncPrivEccKey: encryptEccKey(formerKeysDecrypted[i], pqKeyPair.eccKeyPair.privateKey),\n\t\t\t\tsymEncPrivKyberKey: aesEncrypt(formerKeysDecrypted[i], kyberPrivateKeyToBytes(pqKeyPair.kyberKeyPair.privateKey)),\n\t\t\t})\n\t\t\tlastKey = formerKeysDecrypted[i]\n\t\t\tformerKeys.unshift(key)\n\t\t}\n\t\tcurrentKeyPair = await pqFacade.generateKeyPairs()\n\n\t\tcurrentKeys = createTestEntity(KeyPairTypeRef, {\n\t\t\tpubEccKey: currentKeyPair.eccKeyPair.publicKey,\n\t\t\tsymEncPrivEccKey: encryptEccKey(currentGroupKey.object, currentKeyPair.eccKeyPair.privateKey),\n\t\t\tpubKyberKey: kyberPublicKeyToBytes(currentKeyPair.kyberKeyPair.publicKey),\n\t\t\tsymEncPrivKyberKey: aesEncrypt(currentGroupKey.object, kyberPrivateKeyToBytes(currentKeyPair.kyberKeyPair.privateKey)),\n\t\t\tpubRsaKey: null,\n\t\t\tsymEncPrivRsaKey: null,\n\t\t})\n\t\tgroup = createTestEntity(GroupTypeRef, {\n\t\t\t_id: \"my group\",\n\t\t\tcurrentKeys,\n\t\t\tformerGroupKeys: createTestEntity(GroupKeysRefTypeRef, { list: \"list\" }),\n\t\t\tgroupKeyVersion: String(currentGroupKeyVersion),\n\t\t})\n\t\tuserGroupKey = freshVersioned(aes256RandomKey())\n\t\tuserGroup = createTestEntity(GroupTypeRef, {\n\t\t\t_id: \"my userGroup\",\n\t\t\tgroupKeyVersion: String(userGroupKey.version),\n\t\t\tformerGroupKeys: null,\n\t\t})\n\n\t\tmembership = createTestEntity(GroupMembershipTypeRef, {\n\t\t\tgroup: group._id,\n\t\t\tsymKeyVersion: String(userGroupKey.version),\n\t\t\tsymEncGKey: encryptKey(userGroupKey.object, currentGroupKey.object),\n\t\t\tgroupKeyVersion: String(currentGroupKey.version),\n\t\t})\n\t\twhen(userFacade.getCurrentUserGroupKey()).thenReturn(userGroupKey)\n\t\twhen(userFacade.getMembership(group._id)).thenReturn(membership)\n\t\twhen(userFacade.getUserGroupId()).thenReturn(userGroup._id)\n\t\twhen(entityClient.load(GroupTypeRef, group._id)).thenResolve(group)\n\t\tfor (let i = 0; i < FORMER_KEYS; i++) {\n\t\t\twhen(\n\t\t\t\tentityClient.loadRange(GroupKeyTypeRef, group.formerGroupKeys!.list, stringToCustomId(String(currentGroupKeyVersion)), FORMER_KEYS - i, true),\n\t\t\t).thenDo(() => formerKeys.slice(i).reverse()) // create a fresh copy because we modify in place\n\t\t}\n\t})\n\n\to.spec(\"getCurrentSymGroupKey\", function () {\n\t\to(\"getting userGroup key\", async function () {\n\t\t\tconst currentUserGroupKey = await keyLoaderFacade.getCurrentSymGroupKey(userGroup._id)\n\t\t\to(currentUserGroupKey.version).equals(Number(userGroup.groupKeyVersion))\n\t\t\to(currentUserGroupKey.object).deepEquals(userGroupKey.object)\n\t\t\tverify(userFacade.getMembership(matchers.anything()), { times: 0 })\n\t\t\tawait keyLoaderFacade.getCurrentSymGroupKey(userGroup._id)\n\t\t\tverify(userFacade.getCurrentUserGroupKey(), { times: 2 }) // should not be cached\n\t\t})\n\n\t\to(\"getting non-userGroup key\", async function () {\n\t\t\tconst groupKey = await keyLoaderFacade.getCurrentSymGroupKey(group._id)\n\t\t\to(groupKey.version).equals(Number(group.groupKeyVersion))\n\t\t\to(groupKey.object).deepEquals(currentGroupKey.object)\n\t\t\tverify(userFacade.getMembership(group._id))\n\t\t\treset()\n\t\t\t// the key is now cached -> no need to get the membership\n\t\t\tawait keyLoaderFacade.getCurrentSymGroupKey(group._id)\n\t\t\tverify(userFacade.getMembership(matchers.anything()), { times: 0 })\n\t\t})\n\t})\n\n\to.spec(\"loadKeyPair\", function () {\n\t\to(\"loads current key.\", async function (): Promise<void> {\n\t\t\tfor (let i = 0; i < FORMER_KEYS; i++) {\n\t\t\t\tconst keypair = (await keyLoaderFacade.loadKeypair(group._id, currentGroupKeyVersion)) as PQKeyPairs\n\t\t\t\to(keypair).deepEquals(currentKeyPair)\n\t\t\t}\n\t\t\tverify(cacheManagementFacade.refreshKeyCache(matchers.anything()), { times: 0 })\n\t\t})\n\n\t\to(\"loads former key.\", async function (): Promise<void> {\n\t\t\tfor (let i = 0; i < FORMER_KEYS; i++) {\n\t\t\t\tconst keypair = (await keyLoaderFacade.loadKeypair(group._id, i)) as PQKeyPairs\n\t\t\t\to(keypair).deepEquals(formerKeyPairsDecrypted[i])\n\t\t\t}\n\t\t\tverify(cacheManagementFacade.refreshKeyCache(matchers.anything()), { times: 0 })\n\t\t})\n\n\t\to(\"load key pair when group is updated in cache but key cache still has the old sym key\", async function () {\n\t\t\tconst requestedVersion = currentGroupKeyVersion - 1\n\t\t\twhen(entityClient.load(GroupKeyTypeRef, [assertNotNull(group.formerGroupKeys).list, stringToCustomId(String(requestedVersion))])).thenResolve(\n\t\t\t\tformerKeys[requestedVersion],\n\t\t\t)\n\t\t\tawait keyCache.getCurrentGroupKey(group._id, () => Promise.resolve({ version: requestedVersion, object: formerKeysDecrypted[requestedVersion] }))\n\t\t\tconst keypair = (await keyLoaderFacade.loadKeypair(group._id, requestedVersion)) as PQKeyPairs\n\t\t\to(keypair).deepEquals(formerKeyPairsDecrypted[requestedVersion])\n\t\t\tverify(cacheManagementFacade.refreshKeyCache(matchers.anything()), { times: 0 })\n\t\t})\n\t})\n\n\to.spec(\"loadCurrentKeyPair\", function () {\n\t\to(\"loadCurrentKeyPair success\", async function () {\n\t\t\tconst loadedCurrentKeyPair = await keyLoaderFacade.loadCurrentKeyPair(group._id)\n\t\t\to(loadedCurrentKeyPair.object).deepEquals(currentKeyPair)\n\t\t\to(loadedCurrentKeyPair.version).equals(currentGroupKeyVersion)\n\t\t})\n\t})\n\n\to.spec(\"loadSymGroupKey\", function () {\n\t\to(\"loads and decrypts former keys.\", async function () {\n\t\t\tfor (let i = 0; i < FORMER_KEYS; i++) {\n\t\t\t\tconst loadedGroupKey = await keyLoaderFacade.loadSymGroupKey(group._id, i)\n\t\t\t\to(loadedGroupKey).deepEquals(formerKeysDecrypted[i])\n\t\t\t}\n\t\t\tverify(cacheManagementFacade.refreshKeyCache(matchers.anything()), { times: 0 })\n\t\t})\n\n\t\to(\"loads and decrypts the current key\", async function () {\n\t\t\tconst loadedGroupKey = await keyLoaderFacade.loadSymGroupKey(group._id, currentGroupKeyVersion)\n\t\t\to(loadedGroupKey).deepEquals(currentGroupKey.object)\n\t\t})\n\n\t\to(\"outdated currentGroupKey throws\", async function () {\n\t\t\tconst outdatedCurrentGroupKeyVersion = currentGroupKeyVersion - 1\n\t\t\tawait assertThrows(Error, () =>\n\t\t\t\tkeyLoaderFacade.loadSymGroupKey(group._id, currentGroupKeyVersion, {\n\t\t\t\t\tobject: formerKeysDecrypted[outdatedCurrentGroupKeyVersion],\n\t\t\t\t\tversion: outdatedCurrentGroupKeyVersion,\n\t\t\t\t}),\n\t\t\t)\n\t\t\tverify(cacheManagementFacade.refreshKeyCache(matchers.anything()), { times: 0 })\n\t\t})\n\t})\n\n\to.spec(\"loadSymUserGroupKey\", function () {\n\t\to(\"key cache is outdated and refreshes\", async function () {\n\t\t\tconst requestedGroupKeyVersion = Number(userGroup.groupKeyVersion) + 1\n\t\t\tconst refreshedUserGroupKey = { version: requestedGroupKeyVersion, object: aes256RandomKey() }\n\t\t\twhen(cacheManagementFacade.refreshKeyCache(userGroup._id)).thenDo(() => {\n\t\t\t\t// cached key version is less than the requested one, but we can refresh successfully\n\t\t\t\twhen(userFacade.getCurrentUserGroupKey()).thenReturn(refreshedUserGroupKey)\n\t\t\t\treturn { user: object(), group }\n\t\t\t})\n\n\t\t\tconst loadedUserGroupKey = await keyLoaderFacade.loadSymUserGroupKey(requestedGroupKeyVersion)\n\n\t\t\to(loadedUserGroupKey).deepEquals(refreshedUserGroupKey.object)\n\t\t\tverify(cacheManagementFacade.refreshKeyCache(matchers.anything()), { times: 1 })\n\t\t})\n\t})\n\n\to.spec(\"retries recursively\", function () {\n\t\tlet outOfDateMembership: GroupMembership\n\n\t\to.beforeEach(function () {\n\t\t\toutOfDateMembership = createTestEntity(GroupMembershipTypeRef, {\n\t\t\t\tgroup: group._id,\n\t\t\t\tsymKeyVersion: String(userGroupKey.version),\n\t\t\t\tsymEncGKey: encryptKey(userGroupKey.object, formerKeysDecrypted[currentGroupKeyVersion - 1]),\n\t\t\t\tgroupKeyVersion: String(currentGroupKeyVersion - 1),\n\t\t\t})\n\t\t})\n\n\t\to.spec(\"updates the user if out-of-date\", function () {\n\t\t\tlet user: User\n\t\t\to.beforeEach(function () {\n\t\t\t\twhen(userFacade.getMembership(group._id)).thenReturn(outOfDateMembership)\n\t\t\t\tconst userGroupMembership = createTestEntity(GroupMembershipTypeRef)\n\t\t\t\tuser = createTestEntity(UserTypeRef, {\n\t\t\t\t\t_id: \"userId\",\n\t\t\t\t\tmemberships: [membership],\n\t\t\t\t\tuserGroup: userGroupMembership,\n\t\t\t\t})\n\t\t\t\twhen(cacheManagementFacade.refreshKeyCache(group._id)).thenDo(async () => {\n\t\t\t\t\twhen(userFacade.getMembership(group._id)).thenReturn(membership)\n\t\t\t\t\tawait keyCache.removeOutdatedGroupKeys(user)\n\t\t\t\t\treturn { user, group }\n\t\t\t\t})\n\t\t\t\tkeyCache.setCurrentUserGroupKey(userGroupKey)\n\t\t\t})\n\n\t\t\to(\"loadSymGroupKey\", async function () {\n\t\t\t\tconst loadedKey = await keyLoaderFacade.loadSymGroupKey(group._id, currentGroupKeyVersion)\n\n\t\t\t\to(loadedKey).deepEquals(currentGroupKey.object)\n\t\t\t\tverify(cacheManagementFacade.refreshKeyCache(group._id), { times: 1 })\n\t\t\t})\n\n\t\t\to(\"loadCurrentKeyPair\", async function () {\n\t\t\t\tconst loadedKeyPair = await keyLoaderFacade.loadCurrentKeyPair(group._id)\n\n\t\t\t\to(loadedKeyPair.object).deepEquals(currentKeyPair)\n\t\t\t\tverify(cacheManagementFacade.refreshKeyCache(group._id), { times: 1 })\n\t\t\t})\n\n\t\t\to(\"loadKeyPair\", async function () {\n\t\t\t\tconst loadedKeyPair = await keyLoaderFacade.loadKeypair(group._id, Number(membership.groupKeyVersion))\n\n\t\t\t\to(loadedKeyPair).deepEquals(currentKeyPair)\n\t\t\t\tverify(cacheManagementFacade.refreshKeyCache(group._id), { times: 1 })\n\t\t\t})\n\t\t})\n\n\t\to.spec(\"does not recurse infinitely\", function () {\n\t\t\tlet user: User\n\t\t\to.beforeEach(function () {\n\t\t\t\twhen(userFacade.getMembership(group._id)).thenReturn(outOfDateMembership)\n\t\t\t\tuser = createTestEntity(UserTypeRef, {\n\t\t\t\t\t_id: \"userId\",\n\t\t\t\t\tmemberships: [outOfDateMembership],\n\t\t\t\t})\n\t\t\t})\n\n\t\t\to(\"loadSymGroupKey\", async function () {\n\t\t\t\tawait assertThrows(Error, () => keyLoaderFacade.loadSymGroupKey(group._id, currentGroupKeyVersion))\n\n\t\t\t\tverify(cacheManagementFacade.refreshKeyCache(matchers.anything()), { times: 1 })\n\t\t\t})\n\n\t\t\to(\"loadCurrentKeyPair\", async function () {\n\t\t\t\tawait assertThrows(Error, () => keyLoaderFacade.loadCurrentKeyPair(group._id))\n\n\t\t\t\tverify(cacheManagementFacade.refreshKeyCache(matchers.anything()), { times: 1 })\n\t\t\t})\n\n\t\t\to(\"loadKeyPair\", async function () {\n\t\t\t\tawait assertThrows(Error, () => keyLoaderFacade.loadKeypair(group._id, Number(membership.groupKeyVersion)))\n\n\t\t\t\tverify(cacheManagementFacade.refreshKeyCache(group._id), { times: 1 })\n\t\t\t})\n\t\t})\n\t})\n})\n","import o from \"@tutao/otest\"\nimport { SuspensionHandler } from \"../../../../src/common/api/worker/SuspensionHandler.js\"\nimport { deferWithHandler, downcast } from \"@tutao/tutanota-utils\"\nimport type { SystemTimeout } from \"../../../../src/common/api/common/utils/Scheduler.js\"\nimport { InfoMessageHandler } from \"../../../../src/common/gui/InfoMessageHandler.js\"\nimport { matchers, object } from \"testdouble\"\nimport { spy, verify } from \"@tutao/tutanota-test-utils\"\n\no.spec(\"SuspensionHandler test\", () => {\n\tlet suspensionHandler\n\tlet systemTimeout\n\tlet messageHandlerMock: InfoMessageHandler\n\to.beforeEach(() => {\n\t\tmessageHandlerMock = object()\n\t\tlet timeoutFn = () => {}\n\n\t\tsystemTimeout = {\n\t\t\tsetTimeout: spy((fn) => {\n\t\t\t\ttimeoutFn = fn\n\t\t\t}),\n\t\t\tclearTimeout: spy(),\n\t\t\tfinish: () => timeoutFn(),\n\t\t}\n\t\tsuspensionHandler = new SuspensionHandler(messageHandlerMock, downcast<SystemTimeout>(systemTimeout))\n\t})\n\to.spec(\"activating suspension\", function () {\n\t\to(\n\t\t\t\"should prepare callback when not suspended\",\n\t\t\tnode(async function () {\n\t\t\t\tsuspensionHandler._isSuspended = false\n\t\t\t\tsuspensionHandler.activateSuspensionIfInactive(100)\n\t\t\t\to(systemTimeout.setTimeout.args[0]).notEquals(null)\n\t\t\t\to(systemTimeout.setTimeout.args[1]).equals(100 * 1000)\n\t\t\t\to(suspensionHandler.isSuspended()).equals(true)\n\t\t\t}),\n\t\t)\n\t\to(\n\t\t\t\"should be a no op when suspended\",\n\t\t\tnode(async function () {\n\t\t\t\tsuspensionHandler._isSuspended = true\n\t\t\t\tsuspensionHandler._hasSentInfoMessage = false\n\t\t\t\tsuspensionHandler.activateSuspensionIfInactive(100)\n\t\t\t\to(systemTimeout.setTimeout.callCount).equals(0)\n\t\t\t\to(suspensionHandler.isSuspended()).equals(true)\n\t\t\t\tverify(messageHandlerMock.onInfoMessage(matchers.anything()), { times: 0 })\n\t\t\t}),\n\t\t)\n\t\to(\n\t\t\t\"should go to not suspended state when suspension is complete\",\n\t\t\tnode(async function () {\n\t\t\t\tsuspensionHandler._isSuspended = false\n\t\t\t\tsuspensionHandler.activateSuspensionIfInactive(100)\n\t\t\t\tsystemTimeout.finish()\n\t\t\t\to(suspensionHandler.isSuspended()).equals(false)\n\t\t\t}),\n\t\t)\n\t\to(\n\t\t\t\"should send suspend notification\",\n\t\t\tnode(async function () {\n\t\t\t\tsuspensionHandler._isSuspended = false\n\t\t\t\tsuspensionHandler._hasSentInfoMessage = false\n\t\t\t\tsuspensionHandler.activateSuspensionIfInactive(100)\n\t\t\t\tverify(messageHandlerMock.onInfoMessage(matchers.anything()), { times: 1 })\n\t\t\t}),\n\t\t)\n\t\to(\n\t\t\t\"should not send suspend notification\",\n\t\t\tnode(async function () {\n\t\t\t\tsuspensionHandler._isSuspended = false\n\t\t\t\tsuspensionHandler._hasSentInfoMessage = true\n\t\t\t\tsuspensionHandler.activateSuspensionIfInactive(100)\n\t\t\t\tverify(messageHandlerMock.onInfoMessage(matchers.anything()), { times: 0 })\n\t\t\t}),\n\t\t)\n\t})\n\to.spec(\"defer request\", function () {\n\t\to(\n\t\t\t\"should not defer request when not suspended\",\n\t\t\tnode(async function () {\n\t\t\t\tsuspensionHandler._isSuspended = false\n\t\t\t\tconst request = spy(() => Promise.resolve(\"ok\"))\n\t\t\t\tconst returnValue = await suspensionHandler.deferRequest(request)\n\t\t\t\to(request.callCount).equals(1)\n\t\t\t\to(returnValue).equals(\"ok\")\n\t\t\t}),\n\t\t)\n\t\to(\n\t\t\t\"should defer request when suspended\",\n\t\t\tnode(async function () {\n\t\t\t\tsuspensionHandler._isSuspended = true\n\t\t\t\tconst request = spy(() => Promise.resolve(\"ok\"))\n\t\t\t\tconst returnedPromise = suspensionHandler.deferRequest(request)\n\n\t\t\t\tsuspensionHandler._deferredRequests[0].resolve()\n\n\t\t\t\tconst returnValue = await returnedPromise\n\t\t\t\to(request.callCount).equals(1)\n\t\t\t\to(returnValue).equals(\"ok\")\n\t\t\t}),\n\t\t)\n\t})\n\to.spec(\n\t\t\"suspension complete handler\",\n\t\tnode(function () {\n\t\t\to(\"should execute suspended requests in order and reset\", async function () {\n\t\t\t\tconst results: string[] = []\n\t\t\t\tconst request1 = spy(async () => {\n\t\t\t\t\tresults.push(\"ok!\")\n\t\t\t\t})\n\t\t\t\tconst deferral1 = deferWithHandler(request1)\n\t\t\t\tconst request2 = spy(async () => {\n\t\t\t\t\tresults.push(\"wow!\")\n\t\t\t\t})\n\t\t\t\tconst deferral2 = deferWithHandler(request2)\n\n\t\t\t\tsuspensionHandler._deferredRequests.push(deferral1)\n\n\t\t\t\tsuspensionHandler._deferredRequests.push(deferral2)\n\n\t\t\t\tawait suspensionHandler._onSuspensionComplete()\n\t\t\t\to(results).deepEquals([\"ok!\", \"wow!\"])(\"Requests were executed in order\")\n\t\t\t\to(suspensionHandler._deferredRequests.length).equals(0)(\"Requests have been reset\")\n\t\t\t})\n\t\t\to(\n\t\t\t\t\"should ignore rejecting requests and keep going\",\n\t\t\t\tnode(async function () {\n\t\t\t\t\tconst requestThatRejects = spy(() => Promise.reject(\"oh no!\"))\n\t\t\t\t\tconst requestThatResolves = spy(() => Promise.resolve(\"ok!\"))\n\t\t\t\t\tconst deferralThatRejects = deferWithHandler(requestThatRejects)\n\t\t\t\t\tconst deferralThatResolves = deferWithHandler(requestThatResolves)\n\n\t\t\t\t\tsuspensionHandler._deferredRequests.push(deferralThatRejects)\n\n\t\t\t\t\tsuspensionHandler._deferredRequests.push(deferralThatResolves)\n\n\t\t\t\t\t// No exception was thrown, and following request were completed\n\t\t\t\t\tawait suspensionHandler._onSuspensionComplete()\n\t\t\t\t\to(requestThatRejects.callCount).equals(1)\n\t\t\t\t\to(requestThatResolves.callCount).equals(1)\n\t\t\t\t}),\n\t\t\t)\n\t\t}),\n\t)\n})\n","import o from \"@tutao/otest\"\nimport {\n\tConfigurationDatabase,\n\tConfigurationMetaDataOS,\n\tencryptItem,\n\tinitializeDb,\n\tloadEncryptionMetadata,\n\tupdateEncryptionMetadata,\n} from \"../../../../../src/common/api/worker/facades/lazy/ConfigurationDatabase.js\"\nimport { downcast } from \"@tutao/tutanota-utils\"\nimport { DbStub } from \"../search/DbStub.js\"\nimport { ExternalImageRule } from \"../../../../../src/common/api/common/TutanotaConstants.js\"\nimport { UserTypeRef } from \"../../../../../src/common/api/entities/sys/TypeRefs.js\"\nimport { aes256RandomKey, aesDecrypt, aesEncrypt, AesKey, bitArrayToUint8Array, encryptKey, IV_BYTE_LENGTH, random } from \"@tutao/tutanota-crypto\"\nimport { createTestEntity } from \"../../../TestUtils.js\"\nimport { KeyLoaderFacade } from \"../../../../../src/common/api/worker/facades/KeyLoaderFacade.js\"\nimport { matchers, object, verify, when } from \"testdouble\"\nimport { UserFacade } from \"../../../../../src/common/api/worker/facades/UserFacade.js\"\nimport { DbFacade, DbTransaction } from \"../../../../../src/common/api/worker/search/DbFacade.js\"\nimport { Metadata } from \"../../../../../src/common/api/worker/search/IndexTables.js\"\n\nimport { VersionedKey } from \"../../../../../src/common/api/worker/crypto/CryptoWrapper.js\"\n\no.spec(\"ConfigurationDbTest\", function () {\n\tlet keyLoaderFacade: KeyLoaderFacade\n\n\to.beforeEach(function () {\n\t\tkeyLoaderFacade = object()\n\t})\n\n\tfunction makeMocks(\n\t\tallowListTable: Array<{\n\t\t\taddress: string\n\t\t\trule?: ExternalImageRule\n\t\t}>,\n\t) {\n\t\tconst key = aes256RandomKey()\n\t\tconst iv = random.generateRandomData(IV_BYTE_LENGTH)\n\t\tconst logins = downcast({\n\t\t\tgetLoggedInUser() {\n\t\t\t\treturn createTestEntity(UserTypeRef)\n\t\t\t},\n\n\t\t\tgetUserGroupKey() {},\n\t\t})\n\t\tconst loadDb = downcast(async function (user, keyLoaderFacade) {\n\t\t\tconst stub = new DbStub()\n\t\t\tstub.addObjectStore(\"ExternalAllowListOS\", false, \"address\")\n\n\t\t\tfor (let entry of allowListTable) {\n\t\t\t\tconst transaction = stub.createTransaction()\n\t\t\t\tconst encryptedAddress = await encryptItem(entry.address, key, iv)\n\t\t\t\tawait transaction.put(\"ExternalAllowListOS\", null, {\n\t\t\t\t\taddress: encryptedAddress,\n\t\t\t\t\trule: entry.rule,\n\t\t\t\t})\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdb: stub,\n\t\t\t\tmetaData: {\n\t\t\t\t\tkey,\n\t\t\t\t\tiv,\n\t\t\t\t},\n\t\t\t}\n\t\t})\n\t\treturn {\n\t\t\tlogins,\n\t\t\tloadDb,\n\t\t}\n\t}\n\n\to.spec(\"V1: External image allow list only\", function () {\n\t\to(\"read\", async function () {\n\t\t\tconst { logins, loadDb } = makeMocks([\n\t\t\t\t{\n\t\t\t\t\taddress: \"fomo@server.com\",\n\t\t\t\t},\n\t\t\t])\n\t\t\tconst configDb = new ConfigurationDatabase(keyLoaderFacade, logins, loadDb)\n\t\t\tconst shouldBeAllow = await configDb.getExternalImageRule(\"fomo@server.com\")\n\t\t\to(shouldBeAllow).equals(ExternalImageRule.Allow)\n\t\t\tconst shouldBeDefault = await configDb.getExternalImageRule(\"notinthere@neverseen.biz\")\n\t\t\to(shouldBeDefault).equals(ExternalImageRule.None)\n\t\t})\n\t\to(\"write\", async function () {\n\t\t\tconst { logins, loadDb } = makeMocks([])\n\t\t\tconst configDb = new ConfigurationDatabase(keyLoaderFacade, logins, loadDb)\n\t\t\tawait configDb.addExternalImageRule(\"fomo@server.com\", ExternalImageRule.Allow)\n\t\t\to(await configDb.getExternalImageRule(\"fomo@server.com\")).equals(ExternalImageRule.Allow)\n\t\t\tawait configDb.addExternalImageRule(\"fomo@server.com\", ExternalImageRule.None)\n\t\t\to(await configDb.getExternalImageRule(\"fomo@server.com\")).equals(ExternalImageRule.None)\n\t\t})\n\t})\n\to.spec(\"V2: External image rules list\", function () {\n\t\to(\"read\", async function () {\n\t\t\tconst { logins, loadDb } = makeMocks([\n\t\t\t\t{\n\t\t\t\t\taddress: \"fomo@server.com\",\n\t\t\t\t\trule: ExternalImageRule.Allow,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\taddress: \"lomo@server.com\",\n\t\t\t\t\trule: ExternalImageRule.Block,\n\t\t\t\t},\n\t\t\t])\n\t\t\tconst configDb = new ConfigurationDatabase(keyLoaderFacade, logins, loadDb)\n\t\t\tconst shouldBeAllow = await configDb.getExternalImageRule(\"fomo@server.com\")\n\t\t\to(shouldBeAllow).equals(ExternalImageRule.Allow)\n\t\t\tconst shouldBeBlock = await configDb.getExternalImageRule(\"lomo@server.com\")\n\t\t\to(shouldBeBlock).equals(ExternalImageRule.Block)\n\t\t\tconst shouldBeDefault = await configDb.getExternalImageRule(\"notinthere@neverseen.biz\")\n\t\t\to(shouldBeDefault).equals(ExternalImageRule.None)\n\t\t})\n\t\to(\"write\", async function () {\n\t\t\tconst { logins, loadDb } = makeMocks([])\n\t\t\tconst configDb = new ConfigurationDatabase(keyLoaderFacade, logins, loadDb)\n\t\t\tawait configDb.addExternalImageRule(\"fomo@server.com\", ExternalImageRule.Block)\n\t\t\to(await configDb.getExternalImageRule(\"fomo@server.com\")).equals(ExternalImageRule.Block)\n\t\t\tawait configDb.addExternalImageRule(\"fomo@server.com\", ExternalImageRule.Allow)\n\t\t\to(await configDb.getExternalImageRule(\"fomo@server.com\")).equals(ExternalImageRule.Allow)\n\t\t\tawait configDb.addExternalImageRule(\"fomo@server.com\", ExternalImageRule.None)\n\t\t\to(await configDb.getExternalImageRule(\"fomo@server.com\")).equals(ExternalImageRule.None)\n\t\t})\n\t})\n\n\to.spec(\"Group key version in meta data\", function () {\n\t\tlet userFacade: UserFacade\n\t\tlet dbFacade: DbFacade\n\t\tlet transaction: DbTransaction\n\t\tlet currentUserGroupKey: VersionedKey\n\t\tlet dbKey: AesKey\n\t\tlet iv: Uint8Array\n\t\tlet encIv: Uint8Array\n\n\t\to.beforeEach(function () {\n\t\t\tuserFacade = object()\n\t\t\tdbFacade = object()\n\t\t\ttransaction = object()\n\t\t\twhen(dbFacade.createTransaction(matchers.anything(), matchers.anything())).thenResolve(transaction)\n\t\t\tcurrentUserGroupKey = { version: 42, object: aes256RandomKey() }\n\t\t\twhen(keyLoaderFacade.getCurrentSymUserGroupKey()).thenReturn(currentUserGroupKey)\n\t\t\tdbKey = aes256RandomKey()\n\t\t\tiv = random.generateRandomData(16)\n\t\t\tencIv = aesEncrypt(dbKey, iv, undefined, true, true)\n\t\t\twhen(transaction.get(ConfigurationMetaDataOS, Metadata.encDbIv)).thenResolve(encIv)\n\t\t})\n\n\t\to(\"write group key version when initializing\", async function () {\n\t\t\twhen(dbFacade.deleteDatabase(matchers.anything())).thenResolve()\n\t\t\tconst transaction: DbTransaction = object()\n\t\t\twhen(dbFacade.createTransaction(matchers.anything(), matchers.anything())).thenResolve(transaction)\n\n\t\t\tawait initializeDb(dbFacade, \"dbId\", keyLoaderFacade, ConfigurationMetaDataOS)\n\n\t\t\tverify(keyLoaderFacade.getCurrentSymUserGroupKey())\n\t\t\tverify(transaction.put(ConfigurationMetaDataOS, Metadata.userGroupKeyVersion, currentUserGroupKey.version))\n\t\t})\n\n\t\to(\"read group key version when opening database\", async function () {\n\t\t\tconst groupKeyVersion = 6\n\t\t\tconst groupKey = aes256RandomKey()\n\n\t\t\tconst encDBKey = aesEncrypt(groupKey, bitArrayToUint8Array(dbKey), iv, false, true)\n\t\t\twhen(transaction.get(ConfigurationMetaDataOS, Metadata.userGroupKeyVersion)).thenResolve(groupKeyVersion)\n\t\t\twhen(transaction.get(ConfigurationMetaDataOS, Metadata.userEncDbKey)).thenResolve(encDBKey)\n\t\t\twhen(keyLoaderFacade.loadSymUserGroupKey(groupKeyVersion)).thenResolve(groupKey)\n\n\t\t\tconst encryptionMetadata = await loadEncryptionMetadata(dbFacade, \"dbId\", keyLoaderFacade, ConfigurationMetaDataOS)\n\n\t\t\tverify(keyLoaderFacade.loadSymUserGroupKey(groupKeyVersion))\n\t\t\to(encryptionMetadata?.key).deepEquals(dbKey)\n\t\t\to(encryptionMetadata?.iv).deepEquals(iv)\n\t\t})\n\n\t\to(\"write group key version when updating database\", async function () {\n\t\t\tconst oldGroupKey = { version: currentUserGroupKey.version - 1, object: aes256RandomKey() }\n\t\t\twhen(keyLoaderFacade.loadSymUserGroupKey(oldGroupKey.version)).thenResolve(oldGroupKey.object)\n\t\t\twhen(transaction.get(ConfigurationMetaDataOS, Metadata.userGroupKeyVersion)).thenResolve(oldGroupKey.version)\n\t\t\twhen(transaction.get(ConfigurationMetaDataOS, Metadata.userEncDbKey)).thenResolve(encryptKey(oldGroupKey.object, dbKey))\n\n\t\t\tawait updateEncryptionMetadata(dbFacade, keyLoaderFacade, ConfigurationMetaDataOS)\n\n\t\t\tverify(keyLoaderFacade.getCurrentSymUserGroupKey())\n\t\t\tverify(transaction.put(ConfigurationMetaDataOS, Metadata.userGroupKeyVersion, currentUserGroupKey.version))\n\t\t\tconst encDbKeyCaptor = matchers.captor()\n\t\t\tverify(transaction.put(ConfigurationMetaDataOS, Metadata.userEncDbKey, encDbKeyCaptor.capture()))\n\t\t\tconst capturedDbKey = aesDecrypt(currentUserGroupKey.object, encDbKeyCaptor.value, false)\n\t\t\to(capturedDbKey).deepEquals(bitArrayToUint8Array(dbKey))\n\t\t})\n\n\t\to(\"read group key version when without meta data entry\", async function () {\n\t\t\tconst groupKeyVersion = 0\n\t\t\tconst groupKey = aes256RandomKey()\n\n\t\t\tconst encDBKey = aesEncrypt(groupKey, bitArrayToUint8Array(dbKey), iv, false, true)\n\t\t\twhen(transaction.get(ConfigurationMetaDataOS, Metadata.userGroupKeyVersion)).thenResolve(undefined)\n\t\t\twhen(transaction.get(ConfigurationMetaDataOS, Metadata.userEncDbKey)).thenResolve(encDBKey)\n\t\t\twhen(keyLoaderFacade.loadSymUserGroupKey(groupKeyVersion)).thenResolve(groupKey)\n\n\t\t\tconst encryptionMetadata = await loadEncryptionMetadata(dbFacade, \"dbId\", keyLoaderFacade, ConfigurationMetaDataOS)\n\t\t\tverify(keyLoaderFacade.loadSymUserGroupKey(groupKeyVersion))\n\t\t\to(encryptionMetadata?.key).deepEquals(dbKey)\n\t\t\to(encryptionMetadata?.iv).deepEquals(iv)\n\t\t})\n\t})\n})\n","import o from \"@tutao/otest\"\nimport { compress, uncompress } from \"../../../../src/common/api/worker/Compression.js\"\nimport { base64ToUint8Array, stringToUtf8Uint8Array, uint8ArrayToBase64, utf8Uint8ArrayToString } from \"@tutao/tutanota-utils\"\n\nimport testData from \"./crypto/CompatibilityTestData.json\"\n\no.spec(\"Compression/Decompression\", function () {\n\tconst lowerBound = 12\n\n\to.spec(\"round trip good input\", function () {\n\t\tfunction compressibleData(n) {\n\t\t\tconst data = \"wwwwoooooooooooowwwwwwwwwweeeeeeeeeeeeeeeeeeeee\"\n\t\t\treturn Uint8Array.from(new Array(n).fill(undefined).map((_, idx) => data.charCodeAt(idx % data.length) % 256))\n\t\t}\n\n\t\tfunction testGoodInput(input) {\n\t\t\tconst a = compress(input)\n\t\t\tconst b = uncompress(a)\n\t\t\tconst c = compress(b)\n\t\t\tconst result = uncompress(c)\n\t\t\to(Array.from(result)).deepEquals(Array.from(input))\n\t\t}\n\n\t\to(\"almost too small\", function () {\n\t\t\ttestGoodInput(compressibleData(lowerBound + 1))\n\t\t})\n\t\to(\"too small\", function () {\n\t\t\ttestGoodInput(compressibleData(lowerBound))\n\t\t})\n\t\to(\"empty\", function () {\n\t\t\ttestGoodInput(new Uint8Array(0))\n\t\t})\n\t})\n\n\to.spec(\"compatibility\", function () {\n\t\to(\"compression\", function () {\n\t\t\tfor (const testCase of testData.compressionTests) {\n\t\t\t\to(uint8ArrayToBase64(compress(stringToUtf8Uint8Array(testCase.uncompressedText)))).equals(testCase.compressedBase64TextJavaScript)\n\t\t\t}\n\t\t})\n\n\t\to(\"decompression\", function () {\n\t\t\tfor (const testCase of testData.compressionTests) {\n\t\t\t\to(utf8Uint8ArrayToString(uncompress(base64ToUint8Array(testCase.compressedBase64TextJavaScript)))).equals(testCase.uncompressedText)\n\t\t\t\to(utf8Uint8ArrayToString(uncompress(base64ToUint8Array(testCase.compressedBase64TextJava)))).equals(testCase.uncompressedText)\n\t\t\t\to(utf8Uint8ArrayToString(uncompress(base64ToUint8Array(testCase.compressedBase64TextRust)))).equals(testCase.uncompressedText)\n\t\t\t}\n\t\t})\n\t})\n})\n","import o from \"@tutao/otest\"\nimport { _findMatches, _search, search } from \"../../../../../src/common/api/common/utils/PlainTextSearch.js\"\n\no.spec(\"PlainTextSearchTest\", function () {\n\tconst entryWithNestedArray1 = {\n\t\ttitle: \"Is my password strong enough?\",\n\t\ttags: \"password, login\",\n\t\ttext: \"The indicator displays if the password is strong.\",\n\t\tcontentObject: {\n\t\t\ttext: \"Text content nestedEntry1 object.\",\n\t\t},\n\t\tcontentArray: [\n\t\t\t{\n\t\t\t\ttext: \"nestedEntry1 first array element\",\n\t\t\t},\n\t\t\t{\n\t\t\t\ttext: \"nestedEntry1 second array element\",\n\t\t\t},\n\t\t],\n\t}\n\tconst entryWithNestedArray2 = {\n\t\ttitle: \"Password strength\",\n\t\ttags: \"password, login\",\n\t\ttext: \"The indicator displays the password strength. Password, Password, Password, Password, Password, Password, Password Password, Password, Password.\",\n\t\tcontentObject: {\n\t\t\ttext: \"Text content nestedEntry2 object.\",\n\t\t},\n\t\tcontentArray: [\n\t\t\t{\n\t\t\t\ttext: \"nestedEntry2 first array element\",\n\t\t\t},\n\t\t\t{\n\t\t\t\ttext: \"nestedEntry2 second array element\",\n\t\t\t},\n\t\t],\n\t}\n\tconst someEntry = {\n\t\ttitle: \"Some Title\",\n\t\ttags: \"tag\",\n\t\ttext: \"Test text.\",\n\t}\n\tconst howChoosePasswordEntry = {\n\t\ttitle: \"How do I choose a strong password?\",\n\t\t//missing tags property should not be a problem\n\t\ttext: 'Tutanota uses a password strength indicator that takes several aspects of a password into consideration to make sure your chosen password is a perfect match for your <a target=\"_blank\" rel=\"noreferrer\" href=\"https://www.tutanota.com/\">secure email</a> account. You can find additional tips on how to choose a strong password <a target=\"_blank\" rel=\"noreferrer\" href=\"https://en.wikipedia.org/wiki/Password_strength#Guidelines_for_strong_passwords\">here</a>.Tutanota has no limitations in regard to the password length or used characters; all unicode characters are respected.',\n\t}\n\tconst wantPasswordEntry = {\n\t\ttitle: \"I want a stronger password?\",\n\t\ttags: \"password, login\",\n\t\ttext: \"Tutanota uses a password x strength indicator. Password, Password, Password, Password, Password, Password Password, Password, Password, Password, Password, Password, Password, Password, Password, Password, Password, Password.\",\n\t}\n\tconst entries = [someEntry, howChoosePasswordEntry, wantPasswordEntry, entryWithNestedArray1, entryWithNestedArray2]\n\tconst _searchEntries = [\n\t\t{\n\t\t\ttitle: \"Some Title. This test is random.\",\n\t\t\ttags: \"tag, attestation\",\n\t\t\ttext: \"Test text. Their test is not ist random. Tests are easy.\",\n\t\t},\n\t]\n\tconst attributeNames = [\"title\", \"tags\", \"text\"]\n\to.spec(\"_search helper function\", function () {\n\t\to(\"check if completeMatch count is correct\", function () {\n\t\t\tconst searchResult = _search(\"test is\", _searchEntries, attributeNames, false)\n\n\t\t\to(searchResult[0].completeMatch).equals(2)\n\t\t})\n\t\to(\"returned entry should not be modified\", function () {\n\t\t\tconst searchResult = _search(\"test is\", _searchEntries, attributeNames, false)\n\n\t\t\to(searchResult[0].entry).deepEquals(_searchEntries[0])\n\t\t})\n\t\to(\"check if fullWordMatches count is correct\", function () {\n\t\t\tconst searchResult = _search(\"test\", _searchEntries, attributeNames, false)\n\n\t\t\to(searchResult[0].fullWordMatches).equals(3)\n\t\t})\n\t\to(\"check if matchedWords array is correct\", function () {\n\t\t\tconst query = \"their some test notAHitForSure!\"\n\n\t\t\tconst searchResult = _search(query, _searchEntries, attributeNames, false)\n\n\t\t\to(searchResult[0].matchedWords.length).equals(3)\n\t\t\tfor (const match of searchResult[0].matchedWords) {\n\t\t\t\to(query.includes(match)).equals(true)\n\t\t\t}\n\t\t})\n\t\to(\"check if partialWordMatches count is correct\", function () {\n\t\t\tconst query = [\"their\", \"something\", \"tes\", \"randomness\"]\n\n\t\t\tconst searchResult = _search(query.join(\" \"), _searchEntries, attributeNames, false)\n\n\t\t\to(searchResult[0].partialWordMatches).equals(6)\n\t\t})\n\t})\n\to.spec(\"search function\", function () {\n\t\to(\"empty query string\", function () {\n\t\t\to(search(\"\", entries, attributeNames, false)).deepEquals(entries)\n\t\t})\n\t\to(\"no entries\", function () {\n\t\t\to(search(\"a\", [], attributeNames, false)).deepEquals([])\n\t\t})\n\t\to(\"incorrect attributeName\", function () {\n\t\t\to(search(entries[0].text, entries, [\"test\", \"text\"], false)).deepEquals([entries[0]])\n\t\t})\n\t\to(\"ignore non-given attributeNames\", function () {\n\t\t\to(search(entries[0].title, entries, [\"text\"], false)).deepEquals([])\n\t\t})\n\t\to(\"no search results\", function () {\n\t\t\to(search(\"doesNotExistInEntries\", entries, attributeNames, false)).deepEquals([])\n\t\t})\n\t\to(\"basic successful search\", function () {\n\t\t\to(search(entries[0].text, entries, attributeNames, false)).deepEquals([entries[0]])\n\t\t})\n\t\to(\"check case insensitivity\", function () {\n\t\t\to(search(entries[0].text.toUpperCase(), entries, attributeNames, false)).deepEquals([entries[0]])\n\t\t})\n\t\to(\"do not check for empty words \", function () {\n\t\t\to(search(\" How \\t \\n choose  \", entries, attributeNames, false)).deepEquals([howChoosePasswordEntry])\n\t\t})\n\t\to(\"test the order of results\", function () {\n\t\t\t// should return only entries [1..3] in that order because:\n\t\t\t// 1 contains the exact search string (completeMatch)\n\t\t\t// 2 all words are matched but lots of fullWordMatches\n\t\t\t// 3 all words are matched but less fullMatches\n\t\t\t// 4 contains only one word from the queryString\n\t\t\t// 0 does not include the query words\n\t\t\to(search(\"strong password\", entries, attributeNames, false)).deepEquals([entries[1], entries[2], entries[3], entries[4]])\n\t\t})\n\t\t// should not mark \"is\" and \"a\" (< 2 characters), should mark test even within longer words\n\t\to(\"check if markhits causes correctly marked hits\", function () {\n\t\t\tconst searchResult = search(\"this is a test\", _searchEntries, attributeNames, true)\n\t\t\to(searchResult[0]).deepEquals({\n\t\t\t\ttitle: \"Some Title. <mark>This</mark> <mark>test</mark> is random.\",\n\t\t\t\ttags: \"tag, at<mark>test</mark>ation\",\n\t\t\t\ttext: \"<mark>Test</mark> text. Their <mark>test</mark> is not ist random. <mark>Test</mark>s are easy.\",\n\t\t\t})\n\t\t})\n\t})\n\to.spec(\"old test cases from website (modified)\", function () {\n\t\to(\"sort by match quality\", function () {\n\t\t\to(\n\t\t\t\tsearch(\n\t\t\t\t\t\"lost password\",\n\t\t\t\t\t[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttitle: \"password\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttitle: \"lost my password\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttitle: \"lost password\",\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t\t[\"title\"],\n\t\t\t\t),\n\t\t\t).deepEquals([\n\t\t\t\t{\n\t\t\t\t\ttitle: \"lost password\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttitle: \"lost my password\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttitle: \"password\",\n\t\t\t\t},\n\t\t\t])\n\t\t})\n\t\to(\"simple find\", function () {\n\t\t\to(\n\t\t\t\tsearch(\n\t\t\t\t\t\"test\",\n\t\t\t\t\t[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttitle: \"test\",\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t\t[\"title\"],\n\t\t\t\t),\n\t\t\t).deepEquals([\n\t\t\t\t{\n\t\t\t\t\ttitle: \"test\",\n\t\t\t\t},\n\t\t\t])\n\t\t\to(\n\t\t\t\tsearch(\n\t\t\t\t\t\"test\",\n\t\t\t\t\t[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttitle: \"test\",\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t\t[],\n\t\t\t\t),\n\t\t\t).deepEquals([])\n\t\t\to(\n\t\t\t\tsearch(\n\t\t\t\t\t\"testing\",\n\t\t\t\t\t[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttitle: \"test\",\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t\t[\"title\"],\n\t\t\t\t),\n\t\t\t).deepEquals([])\n\t\t\to(\n\t\t\t\tsearch(\n\t\t\t\t\t\"test\",\n\t\t\t\t\t[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttitle: \"test\",\n\t\t\t\t\t\t\ttext: \"dummy\",\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t\t[\"text\"],\n\t\t\t\t),\n\t\t\t).deepEquals([])\n\t\t\to(\n\t\t\t\tsearch(\n\t\t\t\t\t\"Test\",\n\t\t\t\t\t[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttitle: \"test\",\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t\t[\"title\"],\n\t\t\t\t),\n\t\t\t).deepEquals([\n\t\t\t\t{\n\t\t\t\t\ttitle: \"test\",\n\t\t\t\t},\n\t\t\t])\n\t\t\to(\n\t\t\t\tsearch(\n\t\t\t\t\t\"test\",\n\t\t\t\t\t[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttitle: \"Test\",\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t\t[\"title\"],\n\t\t\t\t),\n\t\t\t).deepEquals([\n\t\t\t\t{\n\t\t\t\t\ttitle: \"Test\",\n\t\t\t\t},\n\t\t\t])\n\t\t\to(\n\t\t\t\tsearch(\n\t\t\t\t\t\"mein ball\",\n\t\t\t\t\t[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttitle: \"mein neuer ball\",\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t\t[\"title\"],\n\t\t\t\t),\n\t\t\t).deepEquals([\n\t\t\t\t{\n\t\t\t\t\ttitle: \"mein neuer ball\",\n\t\t\t\t},\n\t\t\t])\n\t\t\to(\n\t\t\t\tsearch(\n\t\t\t\t\t\"mein stuhl\",\n\t\t\t\t\t[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttitle: \"mein neuer ball\",\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t\t[\"title\"],\n\t\t\t\t),\n\t\t\t).deepEquals([\n\t\t\t\t{\n\t\t\t\t\ttitle: \"mein neuer ball\",\n\t\t\t\t},\n\t\t\t])\n\t\t\to(\n\t\t\t\tsearch(\n\t\t\t\t\t\"dein ball\",\n\t\t\t\t\t[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttitle: \"mein neuer ball\",\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t\t[\"title\"],\n\t\t\t\t),\n\t\t\t).deepEquals([\n\t\t\t\t{\n\t\t\t\t\ttitle: \"mein neuer ball\",\n\t\t\t\t},\n\t\t\t])\n\t\t})\n\t\t//should not mark less than 3 character hits\n\t\to(\"mark search hits\", function () {\n\t\t\to(\n\t\t\t\tsearch(\n\t\t\t\t\t\"test\",\n\t\t\t\t\t[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttitle: \"test\",\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t\t[\"title\"],\n\t\t\t\t\ttrue,\n\t\t\t\t),\n\t\t\t).deepEquals([\n\t\t\t\t{\n\t\t\t\t\ttitle: \"<mark>test</mark>\",\n\t\t\t\t},\n\t\t\t])\n\t\t\to(\n\t\t\t\tsearch(\n\t\t\t\t\t\"test\",\n\t\t\t\t\t[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttitle: \"my test.\",\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t\t[\"title\"],\n\t\t\t\t\ttrue,\n\t\t\t\t),\n\t\t\t).deepEquals([\n\t\t\t\t{\n\t\t\t\t\ttitle: \"my <mark>test</mark>.\",\n\t\t\t\t},\n\t\t\t])\n\t\t\to(\n\t\t\t\tsearch(\n\t\t\t\t\t\"hr\",\n\t\t\t\t\t[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttitle: '<a href=\"hr-test.com\">your hr department</a>',\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t\t[\"title\"],\n\t\t\t\t\ttrue,\n\t\t\t\t),\n\t\t\t).deepEquals([\n\t\t\t\t{\n\t\t\t\t\ttitle: '<a href=\"hr-test.com\">your hr department</a>',\n\t\t\t\t},\n\t\t\t])\n\t\t})\n\t\to(\"do not modify original structure\", function () {\n\t\t\tlet original = [\n\t\t\t\t{\n\t\t\t\t\ttitle: \"test\",\n\t\t\t\t},\n\t\t\t]\n\t\t\to(search(\"test\", original, [\"title\"], true)).deepEquals([\n\t\t\t\t{\n\t\t\t\t\ttitle: \"<mark>test</mark>\",\n\t\t\t\t},\n\t\t\t])\n\t\t\to(original).deepEquals([\n\t\t\t\t{\n\t\t\t\t\ttitle: \"test\",\n\t\t\t\t},\n\t\t\t])\n\t\t})\n\t\to(\"find matches\", function () {\n\t\t\tlet splittedValue = [\"my\", \"<a href='test'>\", \"link\", \"</a>\", \"to other interesting pages with Links.\"]\n\t\t\to(_findMatches(splittedValue, new RegExp(\"link|to\", \"gi\"), false)).deepEquals({\n\t\t\t\thits: 3,\n\t\t\t\tmatchedQueryWords: [\"link\", \"to\"],\n\t\t\t})\n\t\t\to(splittedValue).deepEquals([\"my\", \"<a href='test'>\", \"link\", \"</a>\", \"to other interesting pages with Links.\"])\n\t\t})\n\t\t//should not mark less than 3 characters hits\n\t\to(\"find matches and mark\", function () {\n\t\t\tlet splittedValue = [\"my\", \"<a href='testlink'>\", \"link\", \"</a>\", \"to other interesting pages with Links.\"]\n\t\t\to(_findMatches(splittedValue, new RegExp(\"link|to\", \"gi\"), true)).deepEquals({\n\t\t\t\thits: 3,\n\t\t\t\tmatchedQueryWords: [\"link\", \"to\"],\n\t\t\t})\n\t\t\to(splittedValue).deepEquals([\"my\", \"<a href='testlink'>\", \"<mark>link</mark>\", \"</a>\", \"to other interesting pages with <mark>Link</mark>s.\"])\n\t\t})\n\t\to(\"full matches\", function () {\n\t\t\tlet instance = {\n\t\t\t\tid: 32,\n\t\t\t\ttitle: \"I have received an abusive email (spam, phishing) from one of your domains. What should I do?\",\n\t\t\t\ttext: \"<p>If you would like to inform us about abusive us…contact addresses at abuse.net.</p>↵\",\n\t\t\t\ttags: \"fraud, stalker, threat, abuse, abusive, phishing\",\n\t\t\t\tcategory: \"other\",\n\t\t\t}\n\n\t\t\tlet result = _search(\"abuse\", [instance], [\"tags\", \"title\", \"text\"], true)\n\n\t\t\to(result[0].fullWordMatches).equals(2)\n\t\t})\n\t\to(\"full matches 2\", function () {\n\t\t\tlet instance = {\n\t\t\t\tid: 39,\n\t\t\t\ttitle: \"Are there email limits to protect Tutanota from being abused by spammers?\",\n\t\t\t\ttext: `<p>Yes, Tutanota uses different variables to calculate email limits for individual accounts. This is necessary to protect our free and anonymous email service from spammers who try to abuse Tutanota. If spammers were able to abuse Tutanota, it would harm all Tutanota users - ie Tutanota domains could end up on email blacklists, which we have to prevent under all circumstances.</p>↵<p>If you receive the following message in your Tutanota account &quot;It looks like you exceeded the number of allowed emails. Please try again later.&quot;, the anti-spam protection method has stopped your account temporarily from sending new emails. Please wait a day or two to send new emails again.</p>↵<p>If you need to send more emails immediately, please upgrade to our affordable Premium version (1 Euro per month) as limits for Premium users are much higher. Simply click on &#39;Premium&#39; in your top menu bar of Tutanota. </p>↵<p>Please note that Tutanota is not meant for sending out mass mailings such as newsletters. Please read our Terms &amp; Conditions for details: <a href=\"https://tutanota.com/terms\">https://tutanota.com/terms</a></p>`,\n\t\t\t\ttags: \"\",\n\t\t\t\tcategory: \"other\",\n\t\t\t}\n\n\t\t\tlet result = _search(\"abuse\", [instance], [\"tags\", \"title\", \"text\"], true)\n\n\t\t\to(result[0].fullWordMatches).equals(2)\n\t\t})\n\t})\n\to.spec(\"Nested elements\", function () {\n\t\to(\"check nested attribute object - not implemented yet\", function () {\n\t\t\tconst query = \"object\"\n\n\t\t\tconst _searchResult = search(query, entries, [\"contentObject.text\"], false)\n\n\t\t\to(_searchResult).deepEquals([])\n\t\t})\n\t\to(\"check nested attribute array\", function () {\n\t\t\tconst query = \"array\"\n\n\t\t\tconst _searchResult = search(query, entries, [\"contentArray.text\"], false)\n\n\t\t\to(_searchResult).deepEquals([entryWithNestedArray1, entryWithNestedArray2])\n\t\t})\n\t\to(\"check nested attribute array one element\", function () {\n\t\t\tconst query = \"nestedEntry1\"\n\n\t\t\tconst _searchResult = search(query, entries, [\"contentArray.text\"], false)\n\n\t\t\to(_searchResult).deepEquals([entryWithNestedArray1])\n\t\t})\n\t\to(\"check invalid attribute property\", function () {\n\t\t\tconst query = \"nestedEntry1\"\n\t\t\to(search(query, entries, [\"nonExistingProperty.text\"], false).length).equals(0)\n\t\t\to(search(query, entries, [\"contentArray.nonExistingAttribute\"], false).length).equals(0)\n\t\t\to(search(query, entries, [\"contentArray.text.level3\"], false).length).equals(0)\n\t\t\to(search(query, entries, [\"contentArray\"], false).length).equals(0)\n\t\t\to(search(query, entries, [\"title.text\"], false).length).equals(0) // nested access on string value\n\t\t})\n\t\to(\"check order in nested array\", function () {\n\t\t\tconst query = \"nestedEntry2 array\"\n\t\t\tconst searchResult = search(query, entries, [\"contentArray.text\"], false)\n\t\t\to(searchResult).deepEquals([entryWithNestedArray2, entryWithNestedArray1])\n\t\t})\n\t\to(\"mark hits in nested array\", function () {\n\t\t\tconst query = \"nestedEntry2\"\n\t\t\tconst searchResult = search(query, entries, [\"contentArray.text\"], true)\n\t\t\tconst copyOfNestedEntry = JSON.parse(JSON.stringify(entryWithNestedArray2))\n\t\t\tcopyOfNestedEntry.contentArray[0].text = \"<mark>nestedEntry2</mark> first array element\"\n\t\t\tcopyOfNestedEntry.contentArray[1].text = \"<mark>nestedEntry2</mark> second array element\"\n\t\t\to(searchResult).deepEquals([copyOfNestedEntry])\n\t\t})\n\t})\n})\n","import o from \"@tutao/otest\"\nimport {\n\tconstructMailSetEntryId,\n\tcreate,\n\tdeconstructMailSetEntryId,\n\tGENERATED_MIN_ID,\n\tgeneratedIdToTimestamp,\n\tremoveTechnicalFields,\n\ttimestampToGeneratedId,\n\ttimestampToHexGeneratedId,\n} from \"../../../../../src/common/api/common/utils/EntityUtils.js\"\nimport { MailTypeRef } from \"../../../../../src/common/api/entities/tutanota/TypeRefs.js\"\nimport { typeModels } from \"../../../../../src/common/api/entities/tutanota/TypeModels.js\"\n\nimport { ElementEntity } from \"../../../../../src/common/api/common/EntityTypes.js\"\nimport { clone, TypeRef } from \"@tutao/tutanota-utils\"\nimport { hasError } from \"../../../../../src/common/api/common/utils/ErrorUtils.js\"\n\no.spec(\"EntityUtils\", function () {\n\to(\"TimestampToHexGeneratedId \", function () {\n\t\tlet timestamp = 1370563200000\n\t\to(timestampToHexGeneratedId(timestamp, 0)).equals(\"4fc6fbb10000000000\")\n\t})\n\to(\"TimestampToHexGeneratedId server id 1\", function () {\n\t\tlet timestamp = 1370563200000\n\t\to(timestampToHexGeneratedId(timestamp, 1)).equals(\"4fc6fbb10000000001\")\n\t})\n\to(\"generatedIdToTimestamp \", function () {\n\t\tlet maxTimestamp = Math.pow(2, 42) - 1\n\t\to(generatedIdToTimestamp(GENERATED_MIN_ID)).equals(0)\n\t\to(generatedIdToTimestamp(timestampToGeneratedId(0))).equals(0)\n\t\to(generatedIdToTimestamp(\"zzzzzzzzzzzz\")).equals(maxTimestamp)\n\t\to(generatedIdToTimestamp(\"IwQvgF------\")).equals(1370563200000)\n\t})\n\n\to.spec(\"MailSetEntry id\", function () {\n\t\to(\"constructMailSetEntryId\", function () {\n\t\t\tconst mailId: Id = \"-----------0\"\n\n\t\t\tconst expected = \"V7ifKQAAAAAAAAAAAQ\"\n\t\t\tconst receiveDate = new Date(\"2017-10-03T13:46:13Z\")\n\n\t\t\tconst calculatedId = constructMailSetEntryId(receiveDate, mailId)\n\t\t\to(expected).equals(calculatedId)\n\t\t})\n\n\t\to(\"deconstructMailSetEntryId\", function () {\n\t\t\tconst setEntryId = \"V7ifKQAAAAAAAAAAAQ\"\n\t\t\tconst { receiveDate, mailId } = deconstructMailSetEntryId(setEntryId)\n\t\t\tconst diff = Math.abs(receiveDate.getTime() - new Date(\"2017-10-03T13:46:12.864Z\").getTime())\n\t\t\to(diff < 10).equals(true)(`Expected a date near ${new Date(\"2017-10-03T13:46:12.864Z\")}, got: ${receiveDate} with diff ${diff}`)\n\t\t\to(mailId).equals(\"-----------0\")\n\t\t})\n\t})\n\n\to(\"create new entity without error object \", function () {\n\t\tconst mailEntity = create(typeModels.Mail, MailTypeRef)\n\t\to(mailEntity._errors).equals(undefined)\n\t\to(hasError(mailEntity)).equals(false)\n\n\t\to(mailEntity.subject).equals(\"\") // value with default value\n\t\to(mailEntity.attachments).deepEquals([]) // association with Any cardinality\n\t\to(mailEntity.firstRecipient).equals(null) // association with ZeroOrOne cardinality\n\t})\n\n\to.spec(\"removeTechnicalFields\", function () {\n\t\tconst typeRef = { app: \"testapp\", type: \"testentity\" } as TypeRef<unknown>\n\n\t\tfunction makeEntity() {\n\t\t\treturn {\n\t\t\t\t_id: \"test\",\n\t\t\t\t// so that we can compare it\n\t\t\t\t_type: typeRef,\n\t\t\t\t_ownerGroup: null,\n\t\t\t\t_ownerEncSessionKey: null,\n\t\t\t}\n\t\t}\n\n\t\to(\"it doesn't do anything when there's nothing to remove\", function () {\n\t\t\tconst originalEntity = makeEntity()\n\t\t\tconst entityCopy = clone(originalEntity)\n\t\t\tremoveTechnicalFields(entityCopy as ElementEntity)\n\t\t\to(entityCopy as unknown).deepEquals(originalEntity)\n\t\t})\n\n\t\to(\"it removes _finalEncrypted fields directly on the entity\", function () {\n\t\t\tconst originalEntity = { ...makeEntity(), _finalEncryptedThing: [1, 2, 3] }\n\t\t\tconst entityCopy = clone(originalEntity)\n\t\t\tremoveTechnicalFields(entityCopy as ElementEntity)\n\t\t\to(entityCopy as unknown).deepEquals({\n\t\t\t\t_id: \"test\",\n\t\t\t\t_type: typeRef,\n\t\t\t\t_ownerGroup: null,\n\t\t\t\t_ownerEncSessionKey: null,\n\t\t\t})\n\t\t})\n\n\t\to(\"it removes _finalEncrypted fields deeper in the entity\", function () {\n\t\t\tconst originalEntity = {\n\t\t\t\t...makeEntity(),\n\t\t\t\tnested: {\n\t\t\t\t\ttest: \"yes\",\n\t\t\t\t\t_finalEncryptedThing: [1, 2, 3],\n\t\t\t\t},\n\t\t\t}\n\t\t\tconst entityCopy = clone(originalEntity)\n\t\t\tremoveTechnicalFields(entityCopy as ElementEntity)\n\t\t\to(entityCopy as unknown).deepEquals({\n\t\t\t\t_id: \"test\",\n\t\t\t\t_type: typeRef,\n\t\t\t\t_ownerGroup: null,\n\t\t\t\t_ownerEncSessionKey: null,\n\t\t\t\tnested: {\n\t\t\t\t\ttest: \"yes\",\n\t\t\t\t},\n\t\t\t})\n\t\t})\n\t})\n})\n","import o from \"@tutao/otest\"\nimport * as cborg from \"cborg\"\nimport { customTypeDecoders, customTypeEncoders } from \"../../../../../src/common/api/worker/offline/OfflineStorage.js\"\n\no.spec(\"CborDateEncoder\", function () {\n\to(\"encode and decode date\", function () {\n\t\tconst date = new Date(2022, 0, 24, 10, 54)\n\t\tconst obj = { field: date }\n\t\tconst encoded = cborg.encode(obj, { typeEncoders: customTypeEncoders })\n\t\tconst decoded = cborg.decode(encoded, { tags: customTypeDecoders })\n\t\to(decoded).deepEquals(obj)\n\t})\n})\n","import o from \"@tutao/otest\"\nimport { BLOB_SERVICE_REST_PATH, BlobFacade, parseMultipleBlobsResponse } from \"../../../../../src/common/api/worker/facades/lazy/BlobFacade.js\"\nimport { RestClient, RestClientOptions } from \"../../../../../src/common/api/worker/rest/RestClient.js\"\nimport { SuspensionHandler } from \"../../../../../src/common/api/worker/SuspensionHandler.js\"\nimport { NativeFileApp } from \"../../../../../src/common/native/common/FileApp.js\"\nimport { AesApp } from \"../../../../../src/common/native/worker/AesApp.js\"\nimport { InstanceMapper } from \"../../../../../src/common/api/worker/crypto/InstanceMapper.js\"\nimport { ArchiveDataType, MAX_BLOB_SIZE_BYTES } from \"../../../../../src/common/api/common/TutanotaConstants.js\"\nimport { BlobReferenceTokenWrapperTypeRef, BlobTypeRef } from \"../../../../../src/common/api/entities/sys/TypeRefs.js\"\nimport { File as TutanotaFile, FileTypeRef } from \"../../../../../src/common/api/entities/tutanota/TypeRefs.js\"\nimport { instance, matchers, object, verify, when } from \"testdouble\"\nimport { HttpMethod } from \"../../../../../src/common/api/common/EntityFunctions.js\"\nimport { aes256RandomKey, aesDecrypt, aesEncrypt, generateIV } from \"@tutao/tutanota-crypto\"\nimport { arrayEquals, base64ExtToBase64, base64ToUint8Array, concat, neverNull, stringToUtf8Uint8Array } from \"@tutao/tutanota-utils\"\nimport { Mode } from \"../../../../../src/common/api/common/Env.js\"\nimport { CryptoFacade } from \"../../../../../src/common/api/worker/crypto/CryptoFacade.js\"\nimport { FileReference } from \"../../../../../src/common/api/common/utils/FileUtils.js\"\nimport { assertThrows } from \"@tutao/tutanota-test-utils\"\nimport { ProgrammingError } from \"../../../../../src/common/api/common/error/ProgrammingError.js\"\nimport { BlobGetIn, BlobPostOutTypeRef, BlobServerAccessInfoTypeRef, BlobServerUrlTypeRef } from \"../../../../../src/common/api/entities/storage/TypeRefs.js\"\nimport { BlobAccessTokenFacade } from \"../../../../../src/common/api/worker/facades/BlobAccessTokenFacade.js\"\nimport { elementIdPart, getElementId, listIdPart } from \"../../../../../src/common/api/common/utils/EntityUtils.js\"\nimport { createTestEntity } from \"../../../TestUtils.js\"\nimport { BlobReferencingInstance } from \"../../../../../src/common/api/common/utils/BlobUtils.js\"\n\nconst { anything, captor } = matchers\n\no.spec(\"BlobFacade test\", function () {\n\tlet blobFacade: BlobFacade\n\tlet blobAccessTokenFacade: BlobAccessTokenFacade\n\tlet restClientMock: RestClient\n\tlet suspensionHandlerMock: SuspensionHandler\n\tlet fileAppMock: NativeFileApp\n\tlet aesAppMock: AesApp\n\tlet instanceMapperMock: InstanceMapper\n\tconst archiveId = \"archiveId1\"\n\tconst blobId1 = \"blobId1\"\n\tconst blobs = [\n\t\tcreateTestEntity(BlobTypeRef, { archiveId, blobId: blobId1 }),\n\t\tcreateTestEntity(BlobTypeRef, { archiveId, blobId: \"blobId2\" }),\n\t\tcreateTestEntity(BlobTypeRef, { archiveId }),\n\t]\n\tlet archiveDataType = ArchiveDataType.Attachments\n\tlet cryptoFacadeMock: CryptoFacade\n\tlet file: TutanotaFile\n\tlet anotherFile: TutanotaFile\n\n\to.beforeEach(function () {\n\t\trestClientMock = instance(RestClient)\n\t\tsuspensionHandlerMock = instance(SuspensionHandler)\n\t\tfileAppMock = instance(NativeFileApp)\n\t\taesAppMock = instance(AesApp)\n\t\tinstanceMapperMock = instance(InstanceMapper)\n\t\tcryptoFacadeMock = object<CryptoFacade>()\n\t\tblobAccessTokenFacade = instance(BlobAccessTokenFacade)\n\n\t\tconst mimeType = \"text/plain\"\n\t\tconst name = \"fileName\"\n\t\tfile = createTestEntity(FileTypeRef, { name, mimeType, _id: [\"fileListId\", \"fileElementId\"] })\n\t\tanotherFile = createTestEntity(FileTypeRef, { name, mimeType, _id: [\"fileListId\", \"anotherFileElementId\"] })\n\n\t\tblobFacade = new BlobFacade(restClientMock, suspensionHandlerMock, fileAppMock, aesAppMock, instanceMapperMock, cryptoFacadeMock, blobAccessTokenFacade)\n\t})\n\n\to.afterEach(function () {\n\t\tenv.mode = Mode.Browser\n\t})\n\n\to.spec(\"upload\", function () {\n\t\to(\"encryptAndUpload single blob\", async function () {\n\t\t\tconst ownerGroup = \"ownerId\"\n\t\t\tconst sessionKey = aes256RandomKey()\n\t\t\tconst blobData = new Uint8Array([1, 2, 3])\n\n\t\t\tconst expectedReferenceTokens = [createTestEntity(BlobReferenceTokenWrapperTypeRef, { blobReferenceToken: \"blobRefToken\" })]\n\n\t\t\tlet blobAccessInfo = createTestEntity(BlobServerAccessInfoTypeRef, {\n\t\t\t\tblobAccessToken: \"123\",\n\t\t\t\tservers: [createTestEntity(BlobServerUrlTypeRef, { url: \"w1\" })],\n\t\t\t})\n\t\t\twhen(blobAccessTokenFacade.requestWriteToken(anything(), anything())).thenResolve(blobAccessInfo)\n\t\t\tlet blobServiceResponse = createTestEntity(BlobPostOutTypeRef, { blobReferenceToken: expectedReferenceTokens[0].blobReferenceToken })\n\t\t\twhen(instanceMapperMock.decryptAndMapToInstance(anything(), anything(), anything())).thenResolve(blobServiceResponse)\n\t\t\twhen(restClientMock.request(BLOB_SERVICE_REST_PATH, HttpMethod.POST, anything())).thenResolve(JSON.stringify(blobServiceResponse))\n\n\t\t\tconst referenceTokens = await blobFacade.encryptAndUpload(archiveDataType, blobData, ownerGroup, sessionKey)\n\t\t\to(referenceTokens).deepEquals(expectedReferenceTokens)\n\n\t\t\tconst optionsCaptor = captor()\n\t\t\tverify(restClientMock.request(BLOB_SERVICE_REST_PATH, HttpMethod.POST, optionsCaptor.capture()))\n\t\t\tconst encryptedData = optionsCaptor.value.body\n\t\t\tconst decryptedData = aesDecrypt(sessionKey, encryptedData)\n\t\t\to(arrayEquals(decryptedData, blobData)).equals(true)\n\t\t\to(optionsCaptor.value.baseUrl).equals(\"w1\")\n\t\t})\n\n\t\to(\"encryptAndUploadNative\", async function () {\n\t\t\tconst ownerGroup = \"ownerId\"\n\t\t\tconst sessionKey = aes256RandomKey()\n\n\t\t\tconst expectedReferenceTokens = [createTestEntity(BlobReferenceTokenWrapperTypeRef, { blobReferenceToken: \"blobRefToken\" })]\n\t\t\tconst uploadedFileUri = \"rawFileUri\"\n\t\t\tconst chunkUris = [\"uri1\"]\n\n\t\t\tlet blobAccessInfo = createTestEntity(BlobServerAccessInfoTypeRef, {\n\t\t\t\tblobAccessToken: \"123\",\n\t\t\t\tservers: [createTestEntity(BlobServerUrlTypeRef, { url: \"http://w1.api.tuta.com\" })],\n\t\t\t})\n\t\t\twhen(blobAccessTokenFacade.requestWriteToken(anything(), anything())).thenResolve(blobAccessInfo)\n\t\t\tlet blobServiceResponse = createTestEntity(BlobPostOutTypeRef, { blobReferenceToken: expectedReferenceTokens[0].blobReferenceToken })\n\t\t\twhen(blobAccessTokenFacade.createQueryParams(blobAccessInfo, anything(), anything())).thenResolve({ test: \"theseAreTheParamsIPromise\" })\n\n\t\t\twhen(instanceMapperMock.decryptAndMapToInstance(anything(), anything(), anything())).thenResolve(blobServiceResponse)\n\t\t\twhen(fileAppMock.splitFile(uploadedFileUri, MAX_BLOB_SIZE_BYTES)).thenResolve(chunkUris)\n\t\t\tlet encryptedFileInfo = {\n\t\t\t\turi: \"encryptedChunkUri\",\n\t\t\t\tunencSize: 3,\n\t\t\t}\n\t\t\twhen(aesAppMock.aesEncryptFile(sessionKey, chunkUris[0])).thenResolve(encryptedFileInfo)\n\t\t\tconst blobHash = \"blobHash\"\n\t\t\twhen(fileAppMock.hashFile(encryptedFileInfo.uri)).thenResolve(blobHash)\n\t\t\twhen(fileAppMock.upload(anything(), anything(), anything(), anything())).thenResolve({\n\t\t\t\tstatusCode: 201,\n\t\t\t\tresponseBody: stringToUtf8Uint8Array(JSON.stringify(blobServiceResponse)),\n\t\t\t})\n\n\t\t\tenv.mode = Mode.Desktop\n\t\t\tconst referenceTokens = await blobFacade.encryptAndUploadNative(archiveDataType, uploadedFileUri, ownerGroup, sessionKey)\n\n\t\t\to(referenceTokens).deepEquals(expectedReferenceTokens)\n\t\t\tverify(\n\t\t\t\tfileAppMock.upload(\n\t\t\t\t\tencryptedFileInfo.uri,\n\t\t\t\t\t`http://w1.api.tuta.com${BLOB_SERVICE_REST_PATH}?test=theseAreTheParamsIPromise`,\n\t\t\t\t\tHttpMethod.POST,\n\t\t\t\t\t{},\n\t\t\t\t),\n\t\t\t)\n\t\t})\n\t})\n\n\to.spec(\"download\", function () {\n\t\to(\"downloadAndDecrypt\", async function () {\n\t\t\tconst sessionKey = aes256RandomKey()\n\t\t\tconst blobData = new Uint8Array([1, 2, 3])\n\t\t\tconst blobId = \"--------0s--\"\n\t\t\tfile.blobs.push(createTestEntity(BlobTypeRef, { blobId, size: String(65) }))\n\t\t\tconst encryptedBlobData = aesEncrypt(sessionKey, blobData, generateIV(), true, true)\n\n\t\t\tlet blobAccessInfo = createTestEntity(BlobServerAccessInfoTypeRef, {\n\t\t\t\tblobAccessToken: \"123\",\n\t\t\t\tservers: [createTestEntity(BlobServerUrlTypeRef, { url: \"someBaseUrl\" })],\n\t\t\t})\n\t\t\twhen(blobAccessTokenFacade.requestReadTokenBlobs(anything(), anything(), matchers.anything())).thenResolve(blobAccessInfo)\n\t\t\twhen(blobAccessTokenFacade.createQueryParams(blobAccessInfo, anything(), anything())).thenResolve({\n\t\t\t\tbaseUrl: \"someBaseUrl\",\n\t\t\t\tblobAccessToken: blobAccessInfo.blobAccessToken,\n\t\t\t})\n\t\t\twhen(cryptoFacadeMock.resolveSessionKeyForInstance(file)).thenResolve(sessionKey)\n\t\t\tconst requestBody = { \"request-body\": true }\n\t\t\twhen(instanceMapperMock.encryptAndMapToLiteral(anything(), anything(), anything())).thenResolve(requestBody)\n\t\t\t// data size is 65 (16 data block, 16 iv, 32 hmac, 1 byte for mac marking)\n\t\t\tconst blobSizeBinary = new Uint8Array([0, 0, 0, 65])\n\t\t\tconst blobResponse = concat(\n\t\t\t\t// number of blobs\n\t\t\t\tnew Uint8Array([0, 0, 0, 1]),\n\t\t\t\t// blob id\n\t\t\t\tbase64ToUint8Array(base64ExtToBase64(blobId)),\n\t\t\t\t// blob hash\n\t\t\t\tnew Uint8Array([1, 2, 3, 4, 5, 6]),\n\t\t\t\t// blob size\n\t\t\t\tblobSizeBinary,\n\t\t\t\t// blob data\n\t\t\t\tencryptedBlobData,\n\t\t\t)\n\t\t\twhen(restClientMock.request(BLOB_SERVICE_REST_PATH, HttpMethod.GET, anything())).thenResolve(blobResponse)\n\n\t\t\tconst decryptedData = await blobFacade.downloadAndDecrypt(archiveDataType, wrapTutanotaFile(file))\n\n\t\t\to(decryptedData).deepEquals(blobData)(\"decrypted data is equal\")\n\t\t\tconst optionsCaptor = captor()\n\t\t\tverify(restClientMock.request(BLOB_SERVICE_REST_PATH, HttpMethod.GET, optionsCaptor.capture()))\n\t\t\to(optionsCaptor.value.baseUrl).equals(\"someBaseUrl\")\n\t\t\to(optionsCaptor.value.queryParams.blobAccessToken).deepEquals(blobAccessInfo.blobAccessToken)\n\t\t\to(optionsCaptor.value.body).deepEquals(JSON.stringify(requestBody))\n\t\t})\n\n\t\to(\"downloadAndDecrypt multiple\", async function () {\n\t\t\tconst sessionKey = aes256RandomKey()\n\t\t\tconst blobData1 = new Uint8Array([1, 2, 3])\n\t\t\tconst blobId1 = \"--------0s-1\"\n\t\t\tfile.blobs.push(createTestEntity(BlobTypeRef, { blobId: blobId1, size: String(65) }))\n\t\t\tconst encryptedBlobData1 = aesEncrypt(sessionKey, blobData1, generateIV(), true, true)\n\n\t\t\tconst blobData2 = new Uint8Array([4, 5, 6, 7, 8, 9])\n\t\t\tconst blobId2 = \"--------0s-2\"\n\t\t\tfile.blobs.push(createTestEntity(BlobTypeRef, { blobId: blobId2, size: String(65) }))\n\t\t\tconst encryptedBlobData2 = aesEncrypt(sessionKey, blobData2, generateIV(), true, true)\n\n\t\t\tconst blobAccessInfo = createTestEntity(BlobServerAccessInfoTypeRef, {\n\t\t\t\tblobAccessToken: \"123\",\n\t\t\t\tservers: [createTestEntity(BlobServerUrlTypeRef, { url: \"someBaseUrl\" })],\n\t\t\t})\n\t\t\twhen(blobAccessTokenFacade.requestReadTokenBlobs(anything(), anything(), matchers.anything())).thenResolve(blobAccessInfo)\n\t\t\twhen(blobAccessTokenFacade.createQueryParams(blobAccessInfo, anything(), anything())).thenResolve({\n\t\t\t\tbaseUrl: \"someBaseUrl\",\n\t\t\t\tblobAccessToken: blobAccessInfo.blobAccessToken,\n\t\t\t})\n\t\t\twhen(cryptoFacadeMock.resolveSessionKeyForInstance(file)).thenResolve(sessionKey)\n\t\t\tconst requestBody = { \"request-body\": true }\n\t\t\twhen(instanceMapperMock.encryptAndMapToLiteral(anything(), anything(), anything())).thenResolve(requestBody)\n\t\t\t// data size is 65 (16 data block, 16 iv, 32 hmac, 1 byte for mac marking)\n\t\t\tconst blobSizeBinary = new Uint8Array([0, 0, 0, 65])\n\t\t\tconst blobResponse = concat(\n\t\t\t\t// number of blobs\n\t\t\t\tnew Uint8Array([0, 0, 0, 2]),\n\t\t\t\t// blob id\n\t\t\t\tbase64ToUint8Array(base64ExtToBase64(blobId1)),\n\t\t\t\t// blob hash\n\t\t\t\tnew Uint8Array([1, 2, 3, 4, 5, 6]),\n\t\t\t\t// blob size\n\t\t\t\tblobSizeBinary,\n\t\t\t\t// blob data\n\t\t\t\tencryptedBlobData1,\n\t\t\t\t// blob id\n\t\t\t\tbase64ToUint8Array(base64ExtToBase64(blobId2)),\n\t\t\t\t// blob hash\n\t\t\t\tnew Uint8Array([6, 5, 4, 3, 2, 1]),\n\t\t\t\t// blob size\n\t\t\t\tblobSizeBinary,\n\t\t\t\t// blob data\n\t\t\t\tencryptedBlobData2,\n\t\t\t)\n\t\t\twhen(restClientMock.request(BLOB_SERVICE_REST_PATH, HttpMethod.GET, anything())).thenResolve(blobResponse)\n\n\t\t\tconst decryptedData = await blobFacade.downloadAndDecrypt(archiveDataType, wrapTutanotaFile(file))\n\n\t\t\to(decryptedData).deepEquals(concat(blobData1, blobData2))(\"decrypted data is equal\")\n\t\t})\n\n\t\to(\"downloadAndDecryptNative\", async function () {\n\t\t\tconst sessionKey = aes256RandomKey()\n\n\t\t\tfile.blobs.push(blobs[0])\n\n\t\t\tlet blobAccessInfo = createTestEntity(BlobServerAccessInfoTypeRef, {\n\t\t\t\tblobAccessToken: \"123\",\n\t\t\t\tservers: [createTestEntity(BlobServerUrlTypeRef, { url: \"http://w1.api.tuta.com\" })],\n\t\t\t})\n\t\t\twhen(blobAccessTokenFacade.requestReadTokenBlobs(anything(), anything(), matchers.anything())).thenResolve(blobAccessInfo)\n\t\t\twhen(blobAccessTokenFacade.createQueryParams(anything(), anything(), anything())).thenResolve({ test: \"theseAreTheParamsIPromise\" })\n\n\t\t\twhen(cryptoFacadeMock.resolveSessionKeyForInstance(file)).thenResolve(sessionKey)\n\t\t\tconst requestBody = { \"request-body\": true }\n\t\t\tconst encryptedFileUri = \"encryptedUri\"\n\t\t\tconst decryptedChunkUri = \"decryptedChunkUri\"\n\t\t\tconst decryptedUri = \"decryptedUri\"\n\t\t\tconst size = 3\n\n\t\t\twhen(instanceMapperMock.encryptAndMapToLiteral(anything(), anything(), anything())).thenResolve(requestBody)\n\t\t\twhen(fileAppMock.download(anything(), anything(), anything())).thenResolve({\n\t\t\t\tstatusCode: 200,\n\t\t\t\tencryptedFileUri,\n\t\t\t})\n\t\t\twhen(aesAppMock.aesDecryptFile(sessionKey, encryptedFileUri)).thenResolve(decryptedChunkUri)\n\t\t\twhen(fileAppMock.joinFiles(file.name, [decryptedChunkUri])).thenResolve(decryptedUri)\n\t\t\twhen(fileAppMock.getSize(decryptedUri)).thenResolve(size)\n\t\t\tenv.mode = Mode.Desktop\n\n\t\t\tconst decryptedFileReference = await blobFacade.downloadAndDecryptNative(\n\t\t\t\tarchiveDataType,\n\t\t\t\twrapTutanotaFile(file),\n\t\t\t\tfile.name,\n\t\t\t\tneverNull(file.mimeType),\n\t\t\t)\n\n\t\t\tconst expectedFileReference: FileReference = {\n\t\t\t\t_type: \"FileReference\",\n\t\t\t\tname: file.name,\n\t\t\t\tmimeType: neverNull(file.mimeType),\n\t\t\t\tsize,\n\t\t\t\tlocation: decryptedUri,\n\t\t\t}\n\t\t\to(decryptedFileReference).deepEquals(expectedFileReference)\n\t\t\tverify(fileAppMock.download(`http://w1.api.tuta.com${BLOB_SERVICE_REST_PATH}?test=theseAreTheParamsIPromise`, blobs[0].blobId + \".blob\", {}))\n\t\t\tverify(fileAppMock.deleteFile(encryptedFileUri))\n\t\t\tverify(fileAppMock.deleteFile(decryptedChunkUri))\n\t\t})\n\n\t\to(\"downloadAndDecryptNative_delete_on_error\", async function () {\n\t\t\tconst sessionKey = aes256RandomKey()\n\t\t\tfile.blobs.push(blobs[0])\n\t\t\tfile.blobs.push(blobs[1])\n\n\t\t\tlet blobAccessInfo = createTestEntity(BlobServerAccessInfoTypeRef, {\n\t\t\t\tblobAccessToken: \"123\",\n\t\t\t\tservers: [createTestEntity(BlobServerUrlTypeRef, { url: \"http://w1.api.tuta.com\" })],\n\t\t\t})\n\t\t\twhen(blobAccessTokenFacade.requestReadTokenBlobs(anything(), anything(), matchers.anything())).thenResolve(blobAccessInfo)\n\t\t\twhen(cryptoFacadeMock.resolveSessionKeyForInstance(file)).thenResolve(sessionKey)\n\t\t\tconst requestBody = { \"request-body\": true }\n\t\t\tconst encryptedFileUri = \"encryptedUri\"\n\t\t\tconst decryptedChunkUri = \"decryptedChunkUri\"\n\t\t\tconst decryptedUri = \"decryptedUri\"\n\t\t\tconst size = 3\n\n\t\t\twhen(instanceMapperMock.encryptAndMapToLiteral(anything(), anything(), anything())).thenResolve(requestBody)\n\t\t\twhen(fileAppMock.download(anything(), blobs[0].blobId + \".blob\", anything())).thenResolve({\n\t\t\t\tstatusCode: 200,\n\t\t\t\tencryptedFileUri,\n\t\t\t})\n\t\t\twhen(fileAppMock.download(anything(), blobs[1].blobId + \".blob\", anything())).thenReject(new ProgrammingError(\"test download error\"))\n\t\t\twhen(aesAppMock.aesDecryptFile(sessionKey, encryptedFileUri)).thenResolve(decryptedChunkUri)\n\t\t\twhen(fileAppMock.joinFiles(file.name, [decryptedChunkUri])).thenResolve(decryptedUri)\n\t\t\twhen(fileAppMock.getSize(decryptedUri)).thenResolve(size)\n\t\t\tenv.mode = Mode.Desktop\n\n\t\t\tawait assertThrows(ProgrammingError, () =>\n\t\t\t\tblobFacade.downloadAndDecryptNative(archiveDataType, wrapTutanotaFile(file), file.name, neverNull(file.mimeType)),\n\t\t\t)\n\t\t\tverify(fileAppMock.deleteFile(encryptedFileUri))\n\t\t\tverify(fileAppMock.deleteFile(decryptedChunkUri))\n\t\t})\n\t})\n\n\to.spec(\"downloadAndDecryptBlobsOfMultipleInstances\", function () {\n\t\to.test(\"when passed multiple instances of the same archives it downloads and decrypts the data\", async function () {\n\t\t\tconst sessionKey = aes256RandomKey()\n\t\t\tconst anothersessionKey = aes256RandomKey()\n\t\t\tconst blobData1 = new Uint8Array([1, 2, 3])\n\t\t\tconst blobId1 = \"--------0s-1\"\n\t\t\tfile.blobs.push(createTestEntity(BlobTypeRef, { blobId: blobId1, size: String(65) }))\n\t\t\tconst encryptedBlobData1 = aesEncrypt(sessionKey, blobData1, generateIV(), true, true)\n\n\t\t\tconst blobData2 = new Uint8Array([4, 5, 6, 7, 8, 9])\n\t\t\tconst blobId2 = \"--------0s-2\"\n\t\t\tfile.blobs.push(createTestEntity(BlobTypeRef, { blobId: blobId2, size: String(65) }))\n\t\t\tconst encryptedBlobData2 = aesEncrypt(sessionKey, blobData2, generateIV(), true, true)\n\n\t\t\tconst blobData3 = new Uint8Array([10, 11, 12, 13, 14, 15])\n\t\t\tconst blobId3 = \"--------0s-3\"\n\t\t\tanotherFile.blobs.push(createTestEntity(BlobTypeRef, { blobId: blobId3, size: String(65) }))\n\t\t\tconst encryptedBlobData3 = aesEncrypt(anothersessionKey, blobData3, generateIV(), true, true)\n\n\t\t\tconst blobAccessInfo = createTestEntity(BlobServerAccessInfoTypeRef, {\n\t\t\t\tblobAccessToken: \"123\",\n\t\t\t\tservers: [createTestEntity(BlobServerUrlTypeRef, { url: \"someBaseUrl\" })],\n\t\t\t})\n\t\t\twhen(\n\t\t\t\tblobAccessTokenFacade.requestReadTokenMultipleInstances(\n\t\t\t\t\tarchiveDataType,\n\t\t\t\t\t[wrapTutanotaFile(file), wrapTutanotaFile(anotherFile)],\n\t\t\t\t\tmatchers.anything(),\n\t\t\t\t),\n\t\t\t).thenResolve(blobAccessInfo)\n\t\t\twhen(blobAccessTokenFacade.createQueryParams(blobAccessInfo, anything(), anything())).thenResolve({\n\t\t\t\tbaseUrl: \"someBaseUrl\",\n\t\t\t\tblobAccessToken: blobAccessInfo.blobAccessToken,\n\t\t\t})\n\t\t\twhen(cryptoFacadeMock.resolveSessionKeyForInstance(file)).thenResolve(sessionKey)\n\t\t\twhen(cryptoFacadeMock.resolveSessionKeyForInstance(anotherFile)).thenResolve(anothersessionKey)\n\t\t\tconst requestBody = { \"request-body\": true }\n\t\t\twhen(instanceMapperMock.encryptAndMapToLiteral(anything(), anything(), anything())).thenResolve(requestBody)\n\t\t\t// data size is 65 (16 data block, 16 iv, 32 hmac, 1 byte for mac marking)\n\t\t\tconst blobSizeBinary = new Uint8Array([0, 0, 0, 65])\n\t\t\tconst blobResponse = concat(\n\t\t\t\t// number of blobs\n\t\t\t\tnew Uint8Array([0, 0, 0, 3]),\n\t\t\t\t// blob id\n\t\t\t\tbase64ToUint8Array(base64ExtToBase64(blobId1)),\n\t\t\t\t// blob hash\n\t\t\t\tnew Uint8Array([1, 2, 3, 4, 5, 6]),\n\t\t\t\t// blob size\n\t\t\t\tblobSizeBinary,\n\t\t\t\t// blob data\n\t\t\t\tencryptedBlobData1,\n\t\t\t\t// blob id\n\t\t\t\tbase64ToUint8Array(base64ExtToBase64(blobId2)),\n\t\t\t\t// blob hash\n\t\t\t\tnew Uint8Array([6, 5, 4, 3, 2, 1]),\n\t\t\t\t// blob size\n\t\t\t\tblobSizeBinary,\n\t\t\t\t// blob data\n\t\t\t\tencryptedBlobData2,\n\t\t\t\t//blodId\n\t\t\t\tbase64ToUint8Array(base64ExtToBase64(blobId3)),\n\t\t\t\t// blob hash\n\t\t\t\tnew Uint8Array([7, 8, 9, 10, 11, 12]),\n\t\t\t\t// blob size\n\t\t\t\tblobSizeBinary,\n\t\t\t\t// blob data\n\t\t\t\tencryptedBlobData3,\n\t\t\t)\n\t\t\twhen(restClientMock.request(BLOB_SERVICE_REST_PATH, HttpMethod.GET, anything())).thenResolve(blobResponse)\n\n\t\t\tconst result = await blobFacade.downloadAndDecryptBlobsOfMultipleInstances(archiveDataType, [wrapTutanotaFile(file), wrapTutanotaFile(anotherFile)])\n\n\t\t\to(result).deepEquals(\n\t\t\t\tnew Map([\n\t\t\t\t\t[getElementId(file), concat(blobData1, blobData2)],\n\t\t\t\t\t[getElementId(anotherFile), blobData3],\n\t\t\t\t]),\n\t\t\t)\n\t\t})\n\t\to.test(\"when passed multiple instances of the different archives it downloads and decrypts the data\", async function () {\n\t\t\tconst sessionKey = aes256RandomKey()\n\t\t\tconst anothersessionKey = aes256RandomKey()\n\t\t\tconst blobData1 = new Uint8Array([1, 2, 3])\n\t\t\tconst blobId1 = \"--------0s-1\"\n\t\t\tfile.blobs.push(createTestEntity(BlobTypeRef, { blobId: blobId1, size: String(65), archiveId: \"archiveId1\" }))\n\t\t\tconst encryptedBlobData1 = aesEncrypt(sessionKey, blobData1, generateIV(), true, true)\n\n\t\t\tconst blobData2 = new Uint8Array([4, 5, 6, 7, 8, 9])\n\t\t\tconst blobId2 = \"--------0s-2\"\n\t\t\tfile.blobs.push(createTestEntity(BlobTypeRef, { blobId: blobId2, size: String(65), archiveId: \"archiveId1\" }))\n\t\t\tconst encryptedBlobData2 = aesEncrypt(sessionKey, blobData2, generateIV(), true, true)\n\n\t\t\tconst blobData3 = new Uint8Array([10, 11, 12, 13, 14, 15])\n\t\t\tconst blobId3 = \"--------0s-3\"\n\t\t\tanotherFile.blobs.push(\n\t\t\t\tcreateTestEntity(BlobTypeRef, {\n\t\t\t\t\tblobId: blobId3,\n\t\t\t\t\tsize: String(65),\n\t\t\t\t\tarchiveId: \"archiveId2\",\n\t\t\t\t}),\n\t\t\t)\n\t\t\tconst encryptedBlobData3 = aesEncrypt(anothersessionKey, blobData3, generateIV(), true, true)\n\n\t\t\tconst blobAccessInfo = createTestEntity(BlobServerAccessInfoTypeRef, {\n\t\t\t\tblobAccessToken: \"123\",\n\t\t\t\tservers: [createTestEntity(BlobServerUrlTypeRef, { url: \"someBaseUrl\" })],\n\t\t\t})\n\t\t\twhen(blobAccessTokenFacade.requestReadTokenMultipleInstances(archiveDataType, [wrapTutanotaFile(file)], matchers.anything())).thenResolve(\n\t\t\t\tblobAccessInfo,\n\t\t\t)\n\t\t\twhen(blobAccessTokenFacade.requestReadTokenMultipleInstances(archiveDataType, [wrapTutanotaFile(anotherFile)], matchers.anything())).thenResolve(\n\t\t\t\tblobAccessInfo,\n\t\t\t)\n\t\t\twhen(blobAccessTokenFacade.createQueryParams(blobAccessInfo, anything(), anything())).thenResolve({\n\t\t\t\tbaseUrl: \"someBaseUrl\",\n\t\t\t\tblobAccessToken: blobAccessInfo.blobAccessToken,\n\t\t\t})\n\t\t\twhen(cryptoFacadeMock.resolveSessionKeyForInstance(file)).thenResolve(sessionKey)\n\t\t\twhen(cryptoFacadeMock.resolveSessionKeyForInstance(anotherFile)).thenResolve(anothersessionKey)\n\t\t\tconst requestBody1 = { body: 1 }\n\t\t\twhen(\n\t\t\t\tinstanceMapperMock.encryptAndMapToLiteral(\n\t\t\t\t\tanything(),\n\t\t\t\t\tmatchers.argThat((inData: BlobGetIn) => inData.archiveId === \"archiveId1\" && inData.blobIds.length == 2),\n\t\t\t\t\tanything(),\n\t\t\t\t),\n\t\t\t).thenResolve(requestBody1)\n\t\t\tconst requestBody2 = { body: 2 }\n\t\t\twhen(\n\t\t\t\tinstanceMapperMock.encryptAndMapToLiteral(\n\t\t\t\t\tanything(),\n\t\t\t\t\tmatchers.argThat((inData: BlobGetIn) => inData.archiveId === \"archiveId2\" && inData.blobIds.length == 1),\n\t\t\t\t\tanything(),\n\t\t\t\t),\n\t\t\t).thenResolve(requestBody2)\n\t\t\t// data size is 65 (16 data block, 16 iv, 32 hmac, 1 byte for mac marking)\n\t\t\tconst blobSizeBinary = new Uint8Array([0, 0, 0, 65])\n\t\t\tconst blobResponse1 = concat(\n\t\t\t\t// number of blobs\n\t\t\t\tnew Uint8Array([0, 0, 0, 2]),\n\t\t\t\t// blob id\n\t\t\t\tbase64ToUint8Array(base64ExtToBase64(blobId1)),\n\t\t\t\t// blob hash\n\t\t\t\tnew Uint8Array([1, 2, 3, 4, 5, 6]),\n\t\t\t\t// blob size\n\t\t\t\tblobSizeBinary,\n\t\t\t\t// blob data\n\t\t\t\tencryptedBlobData1,\n\t\t\t\t// blob id\n\t\t\t\tbase64ToUint8Array(base64ExtToBase64(blobId2)),\n\t\t\t\t// blob hash\n\t\t\t\tnew Uint8Array([6, 5, 4, 3, 2, 1]),\n\t\t\t\t// blob size\n\t\t\t\tblobSizeBinary,\n\t\t\t\t// blob data\n\t\t\t\tencryptedBlobData2,\n\t\t\t)\n\n\t\t\tconst blobResponse2 = concat(\n\t\t\t\t// number of blobs\n\t\t\t\tnew Uint8Array([0, 0, 0, 1]),\n\t\t\t\t//blodId\n\t\t\t\tbase64ToUint8Array(base64ExtToBase64(blobId3)),\n\t\t\t\t// blob hash\n\t\t\t\tnew Uint8Array([7, 8, 9, 10, 11, 12]),\n\t\t\t\t// blob size\n\t\t\t\tblobSizeBinary,\n\t\t\t\t// blob data\n\t\t\t\tencryptedBlobData3,\n\t\t\t)\n\t\t\twhen(\n\t\t\t\trestClientMock.request(\n\t\t\t\t\tBLOB_SERVICE_REST_PATH,\n\t\t\t\t\tHttpMethod.GET,\n\t\t\t\t\tmatchers.argThat((options: RestClientOptions) => options.body && JSON.parse(options.body as string).body === 1),\n\t\t\t\t),\n\t\t\t).thenResolve(blobResponse1)\n\t\t\twhen(\n\t\t\t\trestClientMock.request(\n\t\t\t\t\tBLOB_SERVICE_REST_PATH,\n\t\t\t\t\tHttpMethod.GET,\n\t\t\t\t\tmatchers.argThat((options: RestClientOptions) => options.body && JSON.parse(options.body as string).body === 2),\n\t\t\t\t),\n\t\t\t).thenResolve(blobResponse2)\n\n\t\t\tconst result = await blobFacade.downloadAndDecryptBlobsOfMultipleInstances(archiveDataType, [wrapTutanotaFile(file), wrapTutanotaFile(anotherFile)])\n\n\t\t\to(result).deepEquals(\n\t\t\t\tnew Map([\n\t\t\t\t\t[getElementId(file), concat(blobData1, blobData2)],\n\t\t\t\t\t[getElementId(anotherFile), blobData3],\n\t\t\t\t]),\n\t\t\t)\n\t\t})\n\t\to.test(\"when passed multiple instances of the same archive but one blob is missing it downloads and decrypts the rest\", async function () {\n\t\t\tconst sessionKey = aes256RandomKey()\n\t\t\tconst anothersessionKey = aes256RandomKey()\n\t\t\tconst blobData1 = new Uint8Array([1, 2, 3])\n\t\t\tconst blobId1 = \"--------0s-1\"\n\t\t\tfile.blobs.push(createTestEntity(BlobTypeRef, { blobId: blobId1, size: String(65) }))\n\t\t\tconst encryptedBlobData1 = aesEncrypt(sessionKey, blobData1, generateIV(), true, true)\n\n\t\t\tconst blobData2 = new Uint8Array([4, 5, 6, 7, 8, 9])\n\t\t\tconst blobId2 = \"--------0s-2\"\n\t\t\tfile.blobs.push(createTestEntity(BlobTypeRef, { blobId: blobId2, size: String(65) }))\n\t\t\tconst encryptedBlobData2 = aesEncrypt(sessionKey, blobData2, generateIV(), true, true)\n\n\t\t\tconst blobId3 = \"--------0s-3\"\n\t\t\tanotherFile.blobs.push(createTestEntity(BlobTypeRef, { blobId: blobId3, size: String(65) }))\n\n\t\t\tconst blobAccessInfo = createTestEntity(BlobServerAccessInfoTypeRef, {\n\t\t\t\tblobAccessToken: \"123\",\n\t\t\t\tservers: [createTestEntity(BlobServerUrlTypeRef, { url: \"someBaseUrl\" })],\n\t\t\t})\n\t\t\twhen(\n\t\t\t\tblobAccessTokenFacade.requestReadTokenMultipleInstances(\n\t\t\t\t\tarchiveDataType,\n\t\t\t\t\t[wrapTutanotaFile(file), wrapTutanotaFile(anotherFile)],\n\t\t\t\t\tmatchers.anything(),\n\t\t\t\t),\n\t\t\t).thenResolve(blobAccessInfo)\n\t\t\twhen(blobAccessTokenFacade.createQueryParams(blobAccessInfo, anything(), anything())).thenResolve({\n\t\t\t\tbaseUrl: \"someBaseUrl\",\n\t\t\t\tblobAccessToken: blobAccessInfo.blobAccessToken,\n\t\t\t})\n\t\t\twhen(cryptoFacadeMock.resolveSessionKeyForInstance(file)).thenResolve(sessionKey)\n\t\t\twhen(cryptoFacadeMock.resolveSessionKeyForInstance(anotherFile)).thenResolve(anothersessionKey)\n\t\t\tconst requestBody = { \"request-body\": true }\n\t\t\twhen(instanceMapperMock.encryptAndMapToLiteral(anything(), anything(), anything())).thenResolve(requestBody)\n\t\t\t// data size is 65 (16 data block, 16 iv, 32 hmac, 1 byte for mac marking)\n\t\t\tconst blobSizeBinary = new Uint8Array([0, 0, 0, 65])\n\t\t\tconst blobResponse = concat(\n\t\t\t\t// number of blobs\n\t\t\t\tnew Uint8Array([0, 0, 0, 2]),\n\t\t\t\t// blob id\n\t\t\t\tbase64ToUint8Array(base64ExtToBase64(blobId1)),\n\t\t\t\t// blob hash\n\t\t\t\tnew Uint8Array([1, 2, 3, 4, 5, 6]),\n\t\t\t\t// blob size\n\t\t\t\tblobSizeBinary,\n\t\t\t\t// blob data\n\t\t\t\tencryptedBlobData1,\n\t\t\t\t// blob id\n\t\t\t\tbase64ToUint8Array(base64ExtToBase64(blobId2)),\n\t\t\t\t// blob hash\n\t\t\t\tnew Uint8Array([6, 5, 4, 3, 2, 1]),\n\t\t\t\t// blob size\n\t\t\t\tblobSizeBinary,\n\t\t\t\t// blob data\n\t\t\t\tencryptedBlobData2,\n\t\t\t)\n\t\t\twhen(restClientMock.request(BLOB_SERVICE_REST_PATH, HttpMethod.GET, anything())).thenResolve(blobResponse)\n\n\t\t\tconst result = await blobFacade.downloadAndDecryptBlobsOfMultipleInstances(archiveDataType, [wrapTutanotaFile(file), wrapTutanotaFile(anotherFile)])\n\n\t\t\to(result).deepEquals(new Map([[getElementId(file), concat(blobData1, blobData2)]]))\n\t\t})\n\n\t\to.test(\"when passed multiple instances of the same archive but one blob is corrupted it downloads and decrypts the rest\", async function () {\n\t\t\tconst sessionKey = aes256RandomKey()\n\t\t\tconst anothersessionKey = aes256RandomKey()\n\t\t\tconst blobData1 = new Uint8Array([1, 2, 3])\n\t\t\tconst blobId1 = \"--------0s-1\"\n\t\t\tfile.blobs.push(createTestEntity(BlobTypeRef, { blobId: blobId1, size: String(65) }))\n\t\t\tconst encryptedBlobData1 = aesEncrypt(sessionKey, blobData1, generateIV(), true, true)\n\n\t\t\tconst blobData2 = new Uint8Array([4, 5, 6, 7, 8, 9])\n\t\t\tconst blobId2 = \"--------0s-2\"\n\t\t\tfile.blobs.push(createTestEntity(BlobTypeRef, { blobId: blobId2, size: String(65) }))\n\t\t\tconst encryptedBlobData2 = aesEncrypt(sessionKey, blobData2, generateIV(), true, true)\n\t\t\tencryptedBlobData2[16] = ~encryptedBlobData2[16]\n\n\t\t\tconst blobId3 = \"--------0s-3\"\n\t\t\tanotherFile.blobs.push(createTestEntity(BlobTypeRef, { blobId: blobId3, size: String(65) }))\n\n\t\t\tconst blobAccessInfo = createTestEntity(BlobServerAccessInfoTypeRef, {\n\t\t\t\tblobAccessToken: \"123\",\n\t\t\t\tservers: [createTestEntity(BlobServerUrlTypeRef, { url: \"someBaseUrl\" })],\n\t\t\t})\n\t\t\twhen(\n\t\t\t\tblobAccessTokenFacade.requestReadTokenMultipleInstances(\n\t\t\t\t\tarchiveDataType,\n\t\t\t\t\t[wrapTutanotaFile(file), wrapTutanotaFile(anotherFile)],\n\t\t\t\t\tmatchers.anything(),\n\t\t\t\t),\n\t\t\t).thenResolve(blobAccessInfo)\n\t\t\twhen(blobAccessTokenFacade.createQueryParams(blobAccessInfo, anything(), anything())).thenResolve({\n\t\t\t\tbaseUrl: \"someBaseUrl\",\n\t\t\t\tblobAccessToken: blobAccessInfo.blobAccessToken,\n\t\t\t})\n\t\t\twhen(cryptoFacadeMock.resolveSessionKeyForInstance(file)).thenResolve(sessionKey)\n\t\t\twhen(cryptoFacadeMock.resolveSessionKeyForInstance(anotherFile)).thenResolve(anothersessionKey)\n\t\t\tconst requestBody = { \"request-body\": true }\n\t\t\twhen(instanceMapperMock.encryptAndMapToLiteral(anything(), anything(), anything())).thenResolve(requestBody)\n\t\t\t// data size is 65 (16 data block, 16 iv, 32 hmac, 1 byte for mac marking)\n\t\t\tconst blobSizeBinary = new Uint8Array([0, 0, 0, 65])\n\t\t\tconst blobResponse = concat(\n\t\t\t\t// number of blobs\n\t\t\t\tnew Uint8Array([0, 0, 0, 2]),\n\t\t\t\t// blob id\n\t\t\t\tbase64ToUint8Array(base64ExtToBase64(blobId1)),\n\t\t\t\t// blob hash\n\t\t\t\tnew Uint8Array([1, 2, 3, 4, 5, 6]),\n\t\t\t\t// blob size\n\t\t\t\tblobSizeBinary,\n\t\t\t\t// blob data\n\t\t\t\tencryptedBlobData1,\n\t\t\t\t// blob id\n\t\t\t\tbase64ToUint8Array(base64ExtToBase64(blobId2)),\n\t\t\t\t// blob hash\n\t\t\t\tnew Uint8Array([6, 5, 4, 3, 2, 1]),\n\t\t\t\t// blob size\n\t\t\t\tblobSizeBinary,\n\t\t\t\t// blob data\n\t\t\t\tencryptedBlobData2,\n\t\t\t)\n\t\t\twhen(restClientMock.request(BLOB_SERVICE_REST_PATH, HttpMethod.GET, anything())).thenResolve(blobResponse)\n\n\t\t\tconst result = await blobFacade.downloadAndDecryptBlobsOfMultipleInstances(archiveDataType, [wrapTutanotaFile(file), wrapTutanotaFile(anotherFile)])\n\n\t\t\to(result).deepEquals(new Map([[getElementId(file), concat(blobData1, blobData2)]]))\n\t\t})\n\t})\n\n\to.spec(\"parseMultipleBlobsResponse\", function () {\n\t\to.test(\"parses two blobs\", function () {\n\t\t\t// Blob id OETv4XP----0 hash [3, -112, 88, -58, -14, -64] bytes [1, 2, 3]\n\t\t\t// Blob id OETv4XS----0 hash [113, -110, 56, 92, 60, 6] bytes [1, 2, 3, 4, 5, 6]\n\t\t\tconst binaryData = new Int8Array([\n\t\t\t\t// number of blobs [0-3] 2\n\t\t\t\t0, 0, 0, 2,\n\t\t\t\t// blob id 1 [4-12]\n\t\t\t\t100, -9, -69, 22, 38, -128, 0, 0, 1,\n\t\t\t\t// blob hash 1 [13-18]\n\t\t\t\t3, -112, 88, -58, -14, -64,\n\t\t\t\t// blob size 1 [19-22]\n\t\t\t\t0, 0, 0, 3,\n\t\t\t\t// blob data 1 [23-25]\n\t\t\t\t1, 2, 3,\n\t\t\t\t// blob id 2\n\t\t\t\t100, -9, -69, 22, 39, 64, 0, 0, 1,\n\t\t\t\t// blob hash 2\n\t\t\t\t113, -110, 56, 92, 60, 6,\n\t\t\t\t// blob size 2\n\t\t\t\t0, 0, 0, 6,\n\t\t\t\t// blob data 2\n\t\t\t\t1, 2, 3, 4, 5, 6,\n\t\t\t])\n\n\t\t\tconst result = parseMultipleBlobsResponse(new Uint8Array(binaryData))\n\t\t\to(result).deepEquals(\n\t\t\t\tnew Map([\n\t\t\t\t\t[\"OETv4XP----0\", new Uint8Array([1, 2, 3])],\n\t\t\t\t\t[\"OETv4XS----0\", new Uint8Array([1, 2, 3, 4, 5, 6])],\n\t\t\t\t]),\n\t\t\t)\n\t\t})\n\n\t\to.test(\"parses one blob\", function () {\n\t\t\t// Blob id OETv4XP----0 hash [3, -112, 88, -58, -14, -64] bytes [1, 2, 3]\n\t\t\tconst binaryData = new Int8Array([\n\t\t\t\t// number of blobs [0-3]\n\t\t\t\t0, 0, 0, 1,\n\t\t\t\t// blob id 1 [4-12]\n\t\t\t\t100, -9, -69, 22, 38, -128, 0, 0, 1,\n\t\t\t\t// blob hash 1 [13-18]\n\t\t\t\t3, -112, 88, -58, -14, -64,\n\t\t\t\t// blob size 1 [19-22]\n\t\t\t\t0, 0, 0, 3,\n\t\t\t\t// blob data 1 [23-25]\n\t\t\t\t1, 2, 3,\n\t\t\t])\n\n\t\t\tconst result = parseMultipleBlobsResponse(new Uint8Array(binaryData))\n\t\t\to(result).deepEquals(new Map([[\"OETv4XP----0\", new Uint8Array([1, 2, 3])]]))\n\t\t})\n\n\t\to.test(\"parses blob with big size\", function () {\n\t\t\t// Blob id OETv4XP----0 hash [3, -112, 88, -58, -14, -64] bytes [1, 2, 3]\n\t\t\tconst blobDataNumbers = Array(384).fill(1)\n\t\t\tconst binaryData = new Int8Array(\n\t\t\t\t[\n\t\t\t\t\t// number of blobs [0-3]\n\t\t\t\t\t0, 0, 0, 1,\n\t\t\t\t\t// blob id 1 [4-12]\n\t\t\t\t\t100, -9, -69, 22, 38, -128, 0, 0, 1,\n\t\t\t\t\t// blob hash 1 [13-18]\n\t\t\t\t\t3, -112, 88, -58, -14, -64,\n\t\t\t\t\t// blob size 1 [19-22]\n\t\t\t\t\t0, 0, 1, 128,\n\t\t\t\t].concat(blobDataNumbers),\n\t\t\t)\n\n\t\t\tconst result = parseMultipleBlobsResponse(new Uint8Array(binaryData))\n\t\t\to(result).deepEquals(new Map([[\"OETv4XP----0\", new Uint8Array(blobDataNumbers)]]))\n\t\t})\n\n\t\to.test(\"parse empty blob response\", function () {\n\t\t\tconst blobDataNumbers = Array(384).fill(1)\n\t\t\tconst binaryData = new Int8Array([\n\t\t\t\t// number of blobs [0-3]\n\t\t\t\t0, 0, 0, 0,\n\t\t\t])\n\n\t\t\tconst result = parseMultipleBlobsResponse(new Uint8Array(binaryData))\n\t\t\to(result).deepEquals(new Map<Id, Uint8Array>())\n\t\t})\n\t})\n})\n\nfunction wrapTutanotaFile(tutanotaFile: TutanotaFile): BlobReferencingInstance {\n\treturn {\n\t\tblobs: tutanotaFile.blobs,\n\t\telementId: elementIdPart(tutanotaFile._id),\n\t\tlistId: listIdPart(tutanotaFile._id),\n\t\tentity: tutanotaFile,\n\t}\n}\n","import o from \"@tutao/otest\"\nimport { ArchiveDataType, BlobAccessTokenKind } from \"../../../../../src/common/api/common/TutanotaConstants.js\"\nimport { ServiceExecutor } from \"../../../../../src/common/api/worker/rest/ServiceExecutor.js\"\nimport { matchers, object, verify, when } from \"testdouble\"\nimport { BlobAccessTokenService } from \"../../../../../src/common/api/entities/storage/Services.js\"\nimport { getElementId, getEtId, getListId } from \"../../../../../src/common/api/common/utils/EntityUtils.js\"\nimport { Mode } from \"../../../../../src/common/api/common/Env.js\"\nimport { BlobAccessTokenFacade } from \"../../../../../src/common/api/worker/facades/BlobAccessTokenFacade.js\"\nimport { DateTime } from \"luxon\"\nimport { AuthDataProvider } from \"../../../../../src/common/api/worker/facades/UserFacade.js\"\nimport {\n\tBlobAccessTokenPostInTypeRef,\n\tBlobAccessTokenPostOutTypeRef,\n\tBlobReadDataTypeRef,\n\tBlobServerAccessInfoTypeRef,\n\tBlobWriteDataTypeRef,\n\tInstanceIdTypeRef,\n} from \"../../../../../src/common/api/entities/storage/TypeRefs.js\"\nimport { createTestEntity } from \"../../../TestUtils.js\"\nimport { FileTypeRef, MailBoxTypeRef } from \"../../../../../src/common/api/entities/tutanota/TypeRefs.js\"\nimport { BlobTypeRef } from \"../../../../../src/common/api/entities/sys/TypeRefs.js\"\nimport { BlobReferencingInstance } from \"../../../../../src/common/api/common/utils/BlobUtils.js\"\n\nconst { anything, captor } = matchers\n\no.spec(\"BlobAccessTokenFacade\", function () {\n\tlet blobAccessTokenFacade: BlobAccessTokenFacade\n\tlet serviceMock: ServiceExecutor\n\tlet archiveDataType = ArchiveDataType.Attachments\n\tlet authDataProvider: AuthDataProvider\n\tconst archiveId = \"archiveId1\"\n\tconst blobId1 = \"blobId1\"\n\tconst blobs = [\n\t\tcreateTestEntity(BlobTypeRef, { archiveId, blobId: blobId1 }),\n\t\tcreateTestEntity(BlobTypeRef, { archiveId, blobId: \"blobId2\" }),\n\t\tcreateTestEntity(BlobTypeRef, { archiveId }),\n\t]\n\tconst now = DateTime.fromISO(\"2022-11-17T00:00:00\")\n\tconst afterNow = now.plus({ minute: 1 })\n\n\to.beforeEach(function () {\n\t\tconst dateProvider = {\n\t\t\tnow: () => now.toMillis(),\n\t\t\ttimeZone: () => \"Europe/Berlin\",\n\t\t}\n\t\tserviceMock = object<ServiceExecutor>()\n\t\tauthDataProvider = object<AuthDataProvider>()\n\t\tblobAccessTokenFacade = new BlobAccessTokenFacade(serviceMock, authDataProvider, dateProvider)\n\t})\n\n\to.afterEach(function () {\n\t\tenv.mode = Mode.Browser\n\t})\n\n\to.spec(\"evict Tokens\", function () {\n\t\to(\"evict blob specific read token\", async function () {\n\t\t\tconst file = createTestEntity(FileTypeRef, { blobs, _id: [\"listId\", \"elementId\"] })\n\t\t\tconst expectedToken = createTestEntity(BlobAccessTokenPostOutTypeRef, {\n\t\t\t\tblobAccessInfo: createTestEntity(BlobServerAccessInfoTypeRef, {\n\t\t\t\t\tblobAccessToken: \"123\",\n\t\t\t\t\texpires: afterNow.toJSDate(),\n\t\t\t\t\ttokenKind: BlobAccessTokenKind.Instances,\n\t\t\t\t}),\n\t\t\t})\n\t\t\tconst loadOptions = {}\n\t\t\twhen(serviceMock.post(BlobAccessTokenService, anything(), loadOptions)).thenResolve(expectedToken)\n\t\t\tconst referencingInstance: BlobReferencingInstance = {\n\t\t\t\tblobs,\n\t\t\t\tentity: file,\n\t\t\t\telementId: getElementId(file),\n\t\t\t\tlistId: getListId(file),\n\t\t\t}\n\t\t\tawait blobAccessTokenFacade.requestReadTokenBlobs(archiveDataType, referencingInstance, loadOptions)\n\n\t\t\tblobAccessTokenFacade.evictReadBlobsToken(referencingInstance)\n\t\t\tconst newToken = createTestEntity(BlobAccessTokenPostOutTypeRef, {\n\t\t\t\tblobAccessInfo: createTestEntity(BlobServerAccessInfoTypeRef, { blobAccessToken: \"456\" }),\n\t\t\t})\n\t\t\twhen(serviceMock.post(BlobAccessTokenService, anything(), loadOptions)).thenResolve(newToken)\n\t\t\tconst readToken = await blobAccessTokenFacade.requestReadTokenBlobs(archiveDataType, referencingInstance, loadOptions)\n\t\t\to(readToken).equals(newToken.blobAccessInfo)\n\t\t})\n\n\t\to(\"evict archive read token\", async function () {\n\t\t\tlet blobAccessInfo = createTestEntity(BlobServerAccessInfoTypeRef, { blobAccessToken: \"123\", expires: afterNow.toJSDate() })\n\t\t\tconst expectedToken = createTestEntity(BlobAccessTokenPostOutTypeRef, { blobAccessInfo })\n\t\t\twhen(serviceMock.post(BlobAccessTokenService, anything())).thenResolve(expectedToken)\n\n\t\t\tawait blobAccessTokenFacade.requestReadTokenArchive(archiveId)\n\n\t\t\tblobAccessTokenFacade.evictArchiveToken(archiveId)\n\n\t\t\tconst newToken = createTestEntity(BlobAccessTokenPostOutTypeRef, {\n\t\t\t\tblobAccessInfo: createTestEntity(BlobServerAccessInfoTypeRef, { blobAccessToken: \"456\" }),\n\t\t\t})\n\t\t\twhen(serviceMock.post(BlobAccessTokenService, anything())).thenResolve(newToken)\n\t\t\tconst readToken = await blobAccessTokenFacade.requestReadTokenArchive(archiveId)\n\t\t\to(readToken).deepEquals(newToken.blobAccessInfo)\n\t\t})\n\n\t\to(\"evict archive write token\", async function () {\n\t\t\tlet blobAccessInfo = createTestEntity(BlobServerAccessInfoTypeRef, { blobAccessToken: \"123\", expires: afterNow.toJSDate() })\n\t\t\tconst expectedToken = createTestEntity(BlobAccessTokenPostOutTypeRef, { blobAccessInfo })\n\t\t\twhen(serviceMock.post(BlobAccessTokenService, anything())).thenResolve(expectedToken)\n\t\t\tconst ownerGroupId = \"ownerGroupId\"\n\t\t\tconst archiveDataType = ArchiveDataType.Attachments\n\t\t\tawait blobAccessTokenFacade.requestWriteToken(archiveDataType, ownerGroupId)\n\n\t\t\tblobAccessTokenFacade.evictWriteToken(archiveDataType, ownerGroupId)\n\n\t\t\tconst newToken = createTestEntity(BlobAccessTokenPostOutTypeRef, {\n\t\t\t\tblobAccessInfo: createTestEntity(BlobServerAccessInfoTypeRef, { blobAccessToken: \"456\" }),\n\t\t\t})\n\t\t\twhen(serviceMock.post(BlobAccessTokenService, anything())).thenResolve(newToken)\n\t\t\tconst readToken = await blobAccessTokenFacade.requestWriteToken(archiveDataType, ownerGroupId)\n\t\t\to(readToken).equals(newToken.blobAccessInfo)\n\t\t})\n\t})\n\n\to.spec(\"request access tokens\", function () {\n\t\to.spec(\"read token for specific blobs\", function () {\n\t\t\to(\"read token LET\", async function () {\n\t\t\t\tconst file = createTestEntity(FileTypeRef, { blobs, _id: [\"listId\", \"elementId\"] })\n\t\t\t\tconst expectedToken = createTestEntity(BlobAccessTokenPostOutTypeRef, {\n\t\t\t\t\tblobAccessInfo: createTestEntity(BlobServerAccessInfoTypeRef, { blobAccessToken: \"123\", expires: afterNow.toJSDate() }),\n\t\t\t\t})\n\t\t\t\tconst loadOptions = {}\n\t\t\t\twhen(serviceMock.post(BlobAccessTokenService, anything(), loadOptions)).thenResolve(expectedToken)\n\n\t\t\t\tconst referencingInstance: BlobReferencingInstance = {\n\t\t\t\t\tblobs,\n\t\t\t\t\tentity: file,\n\t\t\t\t\telementId: getElementId(file),\n\t\t\t\t\tlistId: getListId(file),\n\t\t\t\t}\n\t\t\t\tconst readToken = await blobAccessTokenFacade.requestReadTokenBlobs(archiveDataType, referencingInstance, loadOptions)\n\n\t\t\t\tconst tokenRequest = captor()\n\t\t\t\tverify(serviceMock.post(BlobAccessTokenService, tokenRequest.capture(), loadOptions))\n\t\t\t\tlet instanceId = createTestEntity(InstanceIdTypeRef, { instanceId: getElementId(file) })\n\t\t\t\to(tokenRequest.value).deepEquals(\n\t\t\t\t\tcreateTestEntity(BlobAccessTokenPostInTypeRef, {\n\t\t\t\t\t\tarchiveDataType,\n\t\t\t\t\t\tread: createTestEntity(BlobReadDataTypeRef, {\n\t\t\t\t\t\t\tarchiveId,\n\t\t\t\t\t\t\tinstanceListId: getListId(file),\n\t\t\t\t\t\t\tinstanceIds: [instanceId],\n\t\t\t\t\t\t}),\n\t\t\t\t\t}),\n\t\t\t\t)\n\t\t\t\to(readToken).equals(expectedToken.blobAccessInfo)\n\t\t\t})\n\n\t\t\to(\"read token ET\", async function () {\n\t\t\t\tconst mailBox = createTestEntity(MailBoxTypeRef, { _id: \"elementId\" })\n\t\t\t\tconst expectedToken = createTestEntity(BlobAccessTokenPostOutTypeRef, {\n\t\t\t\t\tblobAccessInfo: createTestEntity(BlobServerAccessInfoTypeRef, { blobAccessToken: \"123\", expires: new Date(now.toMillis() + 1000) }),\n\t\t\t\t})\n\t\t\t\tconst loadOptions = {}\n\t\t\t\twhen(serviceMock.post(BlobAccessTokenService, anything(), loadOptions)).thenResolve(expectedToken)\n\n\t\t\t\tconst referencingInstance: BlobReferencingInstance = {\n\t\t\t\t\tblobs,\n\t\t\t\t\tentity: mailBox,\n\t\t\t\t\tlistId: null,\n\t\t\t\t\telementId: mailBox._id,\n\t\t\t\t}\n\n\t\t\t\tconst readToken = await blobAccessTokenFacade.requestReadTokenBlobs(archiveDataType, referencingInstance, loadOptions)\n\n\t\t\t\tconst tokenRequest = captor()\n\t\t\t\tverify(serviceMock.post(BlobAccessTokenService, tokenRequest.capture(), loadOptions))\n\t\t\t\tlet instanceId = createTestEntity(InstanceIdTypeRef, { instanceId: getEtId(mailBox) })\n\t\t\t\to(tokenRequest.value).deepEquals(\n\t\t\t\t\tcreateTestEntity(BlobAccessTokenPostInTypeRef, {\n\t\t\t\t\t\tarchiveDataType,\n\t\t\t\t\t\tread: createTestEntity(BlobReadDataTypeRef, {\n\t\t\t\t\t\t\tarchiveId,\n\t\t\t\t\t\t\tinstanceListId: null,\n\t\t\t\t\t\t\tinstanceIds: [instanceId],\n\t\t\t\t\t\t}),\n\t\t\t\t\t}),\n\t\t\t\t)\n\t\t\t\to(readToken).equals(expectedToken.blobAccessInfo)\n\t\t\t})\n\t\t})\n\n\t\to(\"request read token archive\", async function () {\n\t\t\tlet blobAccessInfo = createTestEntity(BlobServerAccessInfoTypeRef, { blobAccessToken: \"123\", expires: new Date(now.toMillis() + 1000) })\n\t\t\tconst expectedToken = createTestEntity(BlobAccessTokenPostOutTypeRef, { blobAccessInfo })\n\t\t\twhen(serviceMock.post(BlobAccessTokenService, anything())).thenResolve(expectedToken)\n\n\t\t\tconst readToken = await blobAccessTokenFacade.requestReadTokenArchive(archiveId)\n\n\t\t\tconst tokenRequest = captor()\n\t\t\tverify(serviceMock.post(BlobAccessTokenService, tokenRequest.capture()))\n\t\t\to(tokenRequest.value).deepEquals(\n\t\t\t\tcreateTestEntity(BlobAccessTokenPostInTypeRef, {\n\t\t\t\t\tread: createTestEntity(BlobReadDataTypeRef, {\n\t\t\t\t\t\tarchiveId,\n\t\t\t\t\t\tinstanceListId: null,\n\t\t\t\t\t\tinstanceIds: [],\n\t\t\t\t\t}),\n\t\t\t\t}),\n\t\t\t)\n\t\t\to(readToken).equals(blobAccessInfo)\n\t\t})\n\n\t\to(\"cache read token for an entire archive\", async function () {\n\t\t\tlet blobAccessInfo = createTestEntity(BlobServerAccessInfoTypeRef, { blobAccessToken: \"123\", expires: new Date(now.toMillis() + 1000) })\n\t\t\tconst expectedToken = createTestEntity(BlobAccessTokenPostOutTypeRef, { blobAccessInfo })\n\t\t\twhen(serviceMock.post(BlobAccessTokenService, anything())).thenResolve(expectedToken)\n\n\t\t\tawait blobAccessTokenFacade.requestReadTokenArchive(archiveId)\n\t\t\t// request it twice and verify that there is only one network request\n\t\t\tconst readToken = await blobAccessTokenFacade.requestReadTokenArchive(archiveId)\n\n\t\t\tconst tokenRequest = captor()\n\t\t\tverify(serviceMock.post(BlobAccessTokenService, tokenRequest.capture()))\n\t\t\to(tokenRequest.values!.length).equals(1)(\"Only one call to request the token\") // only one call because of caching!\n\t\t\to(readToken).equals(blobAccessInfo) // correct token returned\n\t\t})\n\n\t\to(\"when requested individual blobs but the server responded with archive token, the token is cached for the archive\", async function () {\n\t\t\tconst blobAccessInfo = createTestEntity(BlobServerAccessInfoTypeRef, {\n\t\t\t\tblobAccessToken: \"123\",\n\t\t\t\texpires: new Date(now.toMillis() + 1000),\n\t\t\t\ttokenKind: BlobAccessTokenKind.Archive,\n\t\t\t})\n\n\t\t\tconst blobLoadOptions = {}\n\t\t\tconst expectedToken = createTestEntity(BlobAccessTokenPostOutTypeRef, { blobAccessInfo })\n\t\t\twhen(serviceMock.post(BlobAccessTokenService, anything(), blobLoadOptions)).thenResolve(expectedToken)\n\t\t\tconst mailBox = createTestEntity(MailBoxTypeRef, { _id: \"elementId\" })\n\t\t\tconst referencingInstance: BlobReferencingInstance = {\n\t\t\t\tblobs,\n\t\t\t\tentity: mailBox,\n\t\t\t\tlistId: null,\n\t\t\t\telementId: mailBox._id,\n\t\t\t}\n\n\t\t\tawait blobAccessTokenFacade.requestReadTokenBlobs(ArchiveDataType.Attachments, referencingInstance, blobLoadOptions)\n\n\t\t\tconst readToken = await blobAccessTokenFacade.requestReadTokenArchive(archiveId)\n\n\t\t\to(readToken).deepEquals(blobAccessInfo)\n\t\t\tverify(serviceMock.post(BlobAccessTokenService, anything()), { times: 1, ignoreExtraArgs: true })\n\t\t})\n\n\t\to(\"when requested individual blobs and the server responded with instance token, the token is cached for the instances\", async function () {\n\t\t\tconst blobAccessInfo = createTestEntity(BlobServerAccessInfoTypeRef, {\n\t\t\t\tblobAccessToken: \"123\",\n\t\t\t\texpires: new Date(now.toMillis() + 1000),\n\t\t\t\ttokenKind: BlobAccessTokenKind.Archive,\n\t\t\t})\n\n\t\t\tconst blobLoadOptions = {}\n\t\t\tconst expectedToken = createTestEntity(BlobAccessTokenPostOutTypeRef, { blobAccessInfo })\n\t\t\twhen(serviceMock.post(BlobAccessTokenService, anything(), blobLoadOptions)).thenResolve(expectedToken)\n\t\t\tconst mailBox1 = createTestEntity(MailBoxTypeRef, { _id: \"elementId1\" })\n\t\t\tconst mailBox2 = createTestEntity(MailBoxTypeRef, { _id: \"elementId2\" })\n\t\t\tconst referencingInstance1: BlobReferencingInstance = {\n\t\t\t\tblobs,\n\t\t\t\tentity: mailBox1,\n\t\t\t\tlistId: null,\n\t\t\t\telementId: mailBox1._id,\n\t\t\t}\n\t\t\tconst referencingInstance2: BlobReferencingInstance = {\n\t\t\t\tblobs,\n\t\t\t\tentity: mailBox2,\n\t\t\t\tlistId: null,\n\t\t\t\telementId: mailBox2._id,\n\t\t\t}\n\n\t\t\tawait blobAccessTokenFacade.requestReadTokenMultipleInstances(\n\t\t\t\tArchiveDataType.Attachments,\n\t\t\t\t[referencingInstance1, referencingInstance2],\n\t\t\t\tblobLoadOptions,\n\t\t\t)\n\t\t\tconst readToken = await blobAccessTokenFacade.requestReadTokenMultipleInstances(\n\t\t\t\tArchiveDataType.Attachments,\n\t\t\t\t[referencingInstance1],\n\t\t\t\tblobLoadOptions,\n\t\t\t)\n\n\t\t\to(readToken).deepEquals(blobAccessInfo)\n\t\t\tverify(serviceMock.post(BlobAccessTokenService, anything()), { times: 1, ignoreExtraArgs: true })\n\t\t})\n\n\t\to(\"when requested individual blobs and the server responded with instance token that expired, new token is requested\", async function () {\n\t\t\tconst blobLoadOptions = {}\n\t\t\tconst expiredAccessInfo = createTestEntity(BlobServerAccessInfoTypeRef, {\n\t\t\t\tblobAccessToken: \"123\",\n\t\t\t\texpires: new Date(now.toMillis() - 1000),\n\t\t\t\ttokenKind: BlobAccessTokenKind.Archive,\n\t\t\t})\n\t\t\tconst expiredToken = createTestEntity(BlobAccessTokenPostOutTypeRef, { blobAccessInfo: expiredAccessInfo })\n\t\t\tconst newAccessInfo = createTestEntity(BlobServerAccessInfoTypeRef, {\n\t\t\t\tblobAccessToken: \"123\",\n\t\t\t\texpires: new Date(now.toMillis() + 1000),\n\t\t\t\ttokenKind: BlobAccessTokenKind.Archive,\n\t\t\t})\n\t\t\tconst newToken = createTestEntity(BlobAccessTokenPostOutTypeRef, { blobAccessInfo: newAccessInfo })\n\t\t\twhen(serviceMock.post(BlobAccessTokenService, anything(), blobLoadOptions)).thenResolve(expiredToken)\n\t\t\tconst mailBox1 = createTestEntity(MailBoxTypeRef, { _id: \"elementId1\" })\n\t\t\tconst mailBox2 = createTestEntity(MailBoxTypeRef, { _id: \"elementId2\" })\n\t\t\tconst referencingInstance1: BlobReferencingInstance = {\n\t\t\t\tblobs,\n\t\t\t\tentity: mailBox1,\n\t\t\t\tlistId: null,\n\t\t\t\telementId: mailBox1._id,\n\t\t\t}\n\t\t\tconst referencingInstance2: BlobReferencingInstance = {\n\t\t\t\tblobs,\n\t\t\t\tentity: mailBox2,\n\t\t\t\tlistId: null,\n\t\t\t\telementId: mailBox2._id,\n\t\t\t}\n\n\t\t\tawait blobAccessTokenFacade.requestReadTokenMultipleInstances(\n\t\t\t\tArchiveDataType.Attachments,\n\t\t\t\t[referencingInstance1, referencingInstance2],\n\t\t\t\tblobLoadOptions,\n\t\t\t)\n\n\t\t\twhen(serviceMock.post(BlobAccessTokenService, anything(), blobLoadOptions)).thenResolve(newToken)\n\n\t\t\tconst readToken = await blobAccessTokenFacade.requestReadTokenMultipleInstances(\n\t\t\t\tArchiveDataType.Attachments,\n\t\t\t\t[referencingInstance1],\n\t\t\t\tblobLoadOptions,\n\t\t\t)\n\n\t\t\to(readToken).deepEquals(newAccessInfo)\n\t\t\tverify(serviceMock.post(BlobAccessTokenService, anything()), { times: 2, ignoreExtraArgs: true })\n\t\t})\n\n\t\to(\"when requested individual blobs but the server responded with archive token that expired, new token is requested\", async function () {\n\t\t\tconst blobLoadOptions = {}\n\t\t\tconst expiredAccessInfo = createTestEntity(BlobServerAccessInfoTypeRef, {\n\t\t\t\tblobAccessToken: \"123\",\n\t\t\t\texpires: new Date(now.toMillis() - 1000),\n\t\t\t\ttokenKind: BlobAccessTokenKind.Archive,\n\t\t\t})\n\t\t\tconst expiredToken = createTestEntity(BlobAccessTokenPostOutTypeRef, { blobAccessInfo: expiredAccessInfo })\n\t\t\tconst newAccessInfo = createTestEntity(BlobServerAccessInfoTypeRef, {\n\t\t\t\tblobAccessToken: \"123\",\n\t\t\t\texpires: new Date(now.toMillis() + 1000),\n\t\t\t\ttokenKind: BlobAccessTokenKind.Archive,\n\t\t\t})\n\t\t\tconst newToken = createTestEntity(BlobAccessTokenPostOutTypeRef, { blobAccessInfo: newAccessInfo })\n\t\t\twhen(serviceMock.post(BlobAccessTokenService, anything())).thenResolve(expiredToken)\n\t\t\tconst mailBox1 = createTestEntity(MailBoxTypeRef, { _id: \"elementId1\" })\n\n\t\t\tconst referencingInstance: BlobReferencingInstance = {\n\t\t\t\tblobs,\n\t\t\t\tentity: mailBox1,\n\t\t\t\tlistId: null,\n\t\t\t\telementId: mailBox1._id,\n\t\t\t}\n\n\t\t\tawait blobAccessTokenFacade.requestReadTokenArchive(archiveId)\n\n\t\t\twhen(serviceMock.post(BlobAccessTokenService, anything(), blobLoadOptions)).thenResolve(newToken)\n\n\t\t\tconst readToken = await blobAccessTokenFacade.requestReadTokenMultipleInstances(ArchiveDataType.Attachments, [referencingInstance], blobLoadOptions)\n\n\t\t\to(readToken).deepEquals(newAccessInfo)\n\t\t\tverify(serviceMock.post(BlobAccessTokenService, anything()), { times: 2, ignoreExtraArgs: true })\n\t\t})\n\n\t\to(\"cache read token archive expired\", async function () {\n\t\t\tlet expires = new Date(now.toMillis() - 1) // date in the past, so the token is expired\n\t\t\tlet blobAccessInfo = createTestEntity(BlobServerAccessInfoTypeRef, { blobAccessToken: \"123\", expires })\n\t\t\tlet expectedToken = createTestEntity(BlobAccessTokenPostOutTypeRef, { blobAccessInfo })\n\t\t\twhen(serviceMock.post(BlobAccessTokenService, anything())).thenResolve(expectedToken)\n\n\t\t\tawait blobAccessTokenFacade.requestReadTokenArchive(archiveId)\n\n\t\t\tblobAccessInfo = createTestEntity(BlobServerAccessInfoTypeRef, { blobAccessToken: \"456\", expires: new Date(now.toMillis() + 1000) })\n\t\t\texpectedToken = createTestEntity(BlobAccessTokenPostOutTypeRef, { blobAccessInfo })\n\t\t\twhen(serviceMock.post(BlobAccessTokenService, anything())).thenResolve(expectedToken)\n\n\t\t\t// request it twice and verify that there is only one network request\n\t\t\tconst readToken = await blobAccessTokenFacade.requestReadTokenArchive(archiveId)\n\n\t\t\tconst tokenRequest = captor()\n\t\t\tverify(serviceMock.post(BlobAccessTokenService, tokenRequest.capture()))\n\t\t\to(tokenRequest.values!.length).equals(2) // only one call because of caching!\n\t\t\to(readToken.blobAccessToken).equals(\"456\") // correct token returned\n\t\t})\n\n\t\to(\"request write token\", async function () {\n\t\t\tconst ownerGroup = \"ownerId\"\n\t\t\tconst expectedToken = createTestEntity(BlobAccessTokenPostOutTypeRef, {\n\t\t\t\tblobAccessInfo: createTestEntity(BlobServerAccessInfoTypeRef, { blobAccessToken: \"123\", expires: new Date(now.toMillis() + 1000) }),\n\t\t\t})\n\t\t\twhen(serviceMock.post(BlobAccessTokenService, anything())).thenResolve(expectedToken)\n\n\t\t\tconst writeToken = await blobAccessTokenFacade.requestWriteToken(archiveDataType, ownerGroup)\n\n\t\t\tconst tokenRequest = captor()\n\t\t\tverify(serviceMock.post(BlobAccessTokenService, tokenRequest.capture()))\n\t\t\to(tokenRequest.value).deepEquals(\n\t\t\t\tcreateTestEntity(BlobAccessTokenPostInTypeRef, {\n\t\t\t\t\tarchiveDataType,\n\t\t\t\t\twrite: createTestEntity(BlobWriteDataTypeRef, {\n\t\t\t\t\t\tarchiveOwnerGroup: ownerGroup,\n\t\t\t\t\t}),\n\t\t\t\t}),\n\t\t\t)\n\t\t\to(writeToken).equals(expectedToken.blobAccessInfo)\n\t\t})\n\n\t\to(\"cache write token\", async function () {\n\t\t\tconst ownerGroup = \"ownerId\"\n\t\t\tconst expectedToken = createTestEntity(BlobAccessTokenPostOutTypeRef, {\n\t\t\t\tblobAccessInfo: createTestEntity(BlobServerAccessInfoTypeRef, { blobAccessToken: \"123\", expires: new Date(now.toMillis() + 1000) }),\n\t\t\t})\n\t\t\twhen(serviceMock.post(BlobAccessTokenService, anything())).thenResolve(expectedToken)\n\n\t\t\tawait blobAccessTokenFacade.requestWriteToken(archiveDataType, ownerGroup)\n\t\t\tconst writeToken = await blobAccessTokenFacade.requestWriteToken(archiveDataType, ownerGroup)\n\n\t\t\tconst tokenRequest = captor()\n\t\t\tverify(serviceMock.post(BlobAccessTokenService, tokenRequest.capture()))\n\t\t\to(tokenRequest.values!.length).equals(1)(\"only one request for token\")\n\t\t\to(writeToken).equals(expectedToken.blobAccessInfo)\n\t\t})\n\n\t\to(\"cache write token expired\", async function () {\n\t\t\tlet expires = new Date(now.toMillis() - 1) // date in the past, so the token is expired\n\t\t\tconst ownerGroup = \"ownerId\"\n\t\t\tlet expectedToken = createTestEntity(BlobAccessTokenPostOutTypeRef, {\n\t\t\t\tblobAccessInfo: createTestEntity(BlobServerAccessInfoTypeRef, { blobAccessToken: \"123\", expires }),\n\t\t\t})\n\t\t\twhen(serviceMock.post(BlobAccessTokenService, anything())).thenResolve(expectedToken)\n\n\t\t\tawait blobAccessTokenFacade.requestWriteToken(archiveDataType, ownerGroup)\n\n\t\t\texpectedToken = createTestEntity(BlobAccessTokenPostOutTypeRef, {\n\t\t\t\tblobAccessInfo: createTestEntity(BlobServerAccessInfoTypeRef, { blobAccessToken: \"456\", expires: new Date(now.toMillis() + 1000) }),\n\t\t\t})\n\t\t\twhen(serviceMock.post(BlobAccessTokenService, anything())).thenResolve(expectedToken)\n\n\t\t\tconst writeToken = await blobAccessTokenFacade.requestWriteToken(archiveDataType, ownerGroup)\n\n\t\t\tconst tokenRequest = captor()\n\t\t\tverify(serviceMock.post(BlobAccessTokenService, tokenRequest.capture()))\n\t\t\to(tokenRequest.values!.length).equals(2)(\"only one request for token\")\n\t\t\to(writeToken.blobAccessToken).equals(\"456\")\n\t\t})\n\t})\n})\n","import o from \"@tutao/otest\"\nimport { CHECK_INTERVAL, SLEEP_INTERVAL, SleepDetector } from \"../../../../../src/common/api/worker/utils/SleepDetector.js\"\nimport { SchedulerMock } from \"../../../TestUtils.js\"\nimport { func, object, verify, when } from \"testdouble\"\nimport { assertNotNull } from \"@tutao/tutanota-utils\"\nimport { DateProvider } from \"../../../../../src/common/api/common/DateProvider.js\"\n\no.spec(\"SleepDetector\", function () {\n\tlet scheduler: SchedulerMock\n\tlet dateProvider: DateProvider\n\tlet detector: SleepDetector\n\n\to.beforeEach(function () {\n\t\tscheduler = new SchedulerMock()\n\t\tdateProvider = object()\n\t\tdetector = new SleepDetector(scheduler, dateProvider)\n\t})\n\n\to(\"on lower periods it does not report sleep\", function () {\n\t\twhen(dateProvider.now()).thenReturn(1, 1 + CHECK_INTERVAL)\n\n\t\tdetector.start(() => {\n\t\t\tthrow new Error(\"Sleep detected while it shouldn't be\")\n\t\t})\n\t\tconst { thunk } = assertNotNull(scheduler.scheduledPeriodic.get(CHECK_INTERVAL))\n\t\tthunk()\n\t})\n\n\to(\"on higher periods it does report sleep\", function () {\n\t\twhen(dateProvider.now()).thenReturn(1, 1 + SLEEP_INTERVAL + 10)\n\n\t\tconst sleepCb = func(() => {})\n\t\tdetector.start(sleepCb)\n\t\tconst { thunk } = assertNotNull(scheduler.scheduledPeriodic.get(CHECK_INTERVAL))\n\t\tthunk()\n\n\t\tverify(sleepCb())\n\t})\n\n\to(\"when cancelling it unschedules\", function () {\n\t\twhen(dateProvider.now()).thenReturn(1)\n\n\t\tconst sleepCb = func(() => {})\n\t\tdetector.start(sleepCb)\n\t\tconst { id } = assertNotNull(scheduler.scheduledPeriodic.get(CHECK_INTERVAL))\n\t\tdetector.stop()\n\n\t\to(scheduler.cancelledPeriodic.has(id)).equals(true)(\"Has cancelled check task\")\n\t})\n})\n","import o from \"@tutao/otest\"\nimport { ServiceExecutor } from \"../../../../../src/common/api/worker/rest/ServiceExecutor.js\"\nimport { RestClient, RestClientOptions } from \"../../../../../src/common/api/worker/rest/RestClient.js\"\nimport { InstanceMapper } from \"../../../../../src/common/api/worker/crypto/InstanceMapper.js\"\nimport { CryptoFacade } from \"../../../../../src/common/api/worker/crypto/CryptoFacade.js\"\nimport { matchers, object, when } from \"testdouble\"\nimport { DeleteService, GetService, PostService, PutService } from \"../../../../../src/common/api/common/ServiceRequest.js\"\nimport { AlarmServicePostTypeRef, GiftCardCreateDataTypeRef, SaltDataTypeRef } from \"../../../../../src/common/api/entities/sys/TypeRefs.js\"\nimport { HttpMethod, MediaType, resolveTypeReference } from \"../../../../../src/common/api/common/EntityFunctions.js\"\nimport { deepEqual } from \"@tutao/tutanota-utils\"\nimport { assertThrows, verify } from \"@tutao/tutanota-test-utils\"\nimport { ProgrammingError } from \"../../../../../src/common/api/common/error/ProgrammingError\"\nimport { AuthDataProvider } from \"../../../../../src/common/api/worker/facades/UserFacade\"\nimport { LoginIncompleteError } from \"../../../../../src/common/api/common/error/LoginIncompleteError.js\"\nimport { createTestEntity } from \"../../../TestUtils.js\"\n\nconst { anything } = matchers\n\no.spec(\"ServiceExecutor\", function () {\n\tconst service = {\n\t\tapp: \"testapp\",\n\t\tname: \"testservice\",\n\t}\n\tlet restClient: RestClient\n\tlet authHeaders: Record<string, string>\n\tlet instanceMapper: InstanceMapper\n\tlet cryptoFacade: CryptoFacade\n\tlet executor: ServiceExecutor\n\tlet fullyLoggedIn: boolean\n\n\to.beforeEach(function () {\n\t\trestClient = object()\n\t\tauthHeaders = {}\n\t\tfullyLoggedIn = true\n\n\t\tconst authDataProvider: AuthDataProvider = {\n\t\t\tcreateAuthHeaders(): Dict {\n\t\t\t\treturn authHeaders\n\t\t\t},\n\t\t\tisFullyLoggedIn(): boolean {\n\t\t\t\treturn fullyLoggedIn\n\t\t\t},\n\t\t}\n\t\tinstanceMapper = object()\n\t\tcryptoFacade = object()\n\t\texecutor = new ServiceExecutor(restClient, authDataProvider, instanceMapper, () => cryptoFacade)\n\t})\n\n\tfunction assertThatNoRequestsWereMade() {\n\t\tverify(restClient.request(anything(), anything()), { ignoreExtraArgs: true, times: 0 })\n\t}\n\n\tfunction respondWith(response) {\n\t\twhen(restClient.request(anything(), anything()), { ignoreExtraArgs: true }).thenResolve(response)\n\t}\n\n\to.spec(\"GET\", function () {\n\t\to(\"encrypts data\", async function () {\n\t\t\tconst getService: GetService = {\n\t\t\t\t...service,\n\t\t\t\tget: {\n\t\t\t\t\tdata: SaltDataTypeRef,\n\t\t\t\t\treturn: null,\n\t\t\t\t},\n\t\t\t}\n\t\t\tconst data = createTestEntity(SaltDataTypeRef, { mailAddress: \"test\" })\n\t\t\tconst literal = { literal: true }\n\t\t\tconst saltTypeModel = await resolveTypeReference(SaltDataTypeRef)\n\t\t\twhen(instanceMapper.encryptAndMapToLiteral(saltTypeModel, data, null)).thenResolve(literal)\n\n\t\t\trespondWith(undefined)\n\n\t\t\tconst response = await executor.get(getService, data)\n\n\t\t\to(response).equals(undefined)\n\t\t\tverify(\n\t\t\t\trestClient.request(\n\t\t\t\t\t\"/rest/testapp/testservice\",\n\t\t\t\t\tHttpMethod.GET,\n\t\t\t\t\tmatchers.argThat((params: RestClientOptions) => params.body === `{\"literal\":true}`),\n\t\t\t\t),\n\t\t\t)\n\t\t})\n\n\t\to(\"maps unencrypted response data to instance\", async function () {\n\t\t\tconst getService: GetService = {\n\t\t\t\t...service,\n\t\t\t\tget: {\n\t\t\t\t\tdata: null,\n\t\t\t\t\treturn: SaltDataTypeRef,\n\t\t\t\t},\n\t\t\t}\n\t\t\tconst returnData = createTestEntity(SaltDataTypeRef, { mailAddress: \"test\" })\n\t\t\tconst literal = { literal: true }\n\t\t\tconst saltTypeModel = await resolveTypeReference(SaltDataTypeRef)\n\t\t\twhen(instanceMapper.decryptAndMapToInstance(saltTypeModel, literal, null)).thenResolve(returnData)\n\n\t\t\trespondWith(`{\"literal\":true}`)\n\n\t\t\tconst response = await executor.get(getService, null)\n\n\t\t\to(response).equals(returnData)\n\t\t\tverify(\n\t\t\t\trestClient.request(\n\t\t\t\t\t\"/rest/testapp/testservice\",\n\t\t\t\t\tHttpMethod.GET,\n\t\t\t\t\tmatchers.argThat((p) => p.responseType === MediaType.Json),\n\t\t\t\t),\n\t\t\t)\n\t\t})\n\t\to(\"maps encrypted response data to instance\", async function () {\n\t\t\tconst getService: GetService = {\n\t\t\t\t...service,\n\t\t\t\tget: {\n\t\t\t\t\tdata: null,\n\t\t\t\t\treturn: AlarmServicePostTypeRef,\n\t\t\t\t},\n\t\t\t}\n\t\t\tconst returnData = createTestEntity(SaltDataTypeRef, { mailAddress: \"test\" })\n\t\t\tconst literal = { literal: true }\n\t\t\tconst saltTypeModel = await resolveTypeReference(AlarmServicePostTypeRef)\n\t\t\twhen(instanceMapper.decryptAndMapToInstance(saltTypeModel, literal, null)).thenResolve(returnData)\n\n\t\t\trespondWith(`{\"literal\":true}`)\n\n\t\t\tconst response = await executor.get(getService, null)\n\n\t\t\to(response).equals(returnData)\n\t\t\tverify(\n\t\t\t\trestClient.request(\n\t\t\t\t\t\"/rest/testapp/testservice\",\n\t\t\t\t\tHttpMethod.GET,\n\t\t\t\t\tmatchers.argThat((p) => p.responseType === MediaType.Json),\n\t\t\t\t),\n\t\t\t)\n\t\t})\n\t\to(\"when get returns encrypted data and we are not logged in it throws an error\", async function () {\n\t\t\tconst getService: GetService = {\n\t\t\t\t...service,\n\t\t\t\tget: {\n\t\t\t\t\tdata: null,\n\t\t\t\t\treturn: AlarmServicePostTypeRef,\n\t\t\t\t},\n\t\t\t}\n\t\t\tfullyLoggedIn = false\n\t\t\tawait assertThrows(LoginIncompleteError, () => executor.get(getService, null))\n\t\t\tassertThatNoRequestsWereMade()\n\t\t})\n\n\t\to(\"when get returns encrypted data and we are not logged in but we have a session key it returns decrypted data\", async function () {\n\t\t\tconst getService: GetService = {\n\t\t\t\t...service,\n\t\t\t\tget: {\n\t\t\t\t\tdata: null,\n\t\t\t\t\treturn: AlarmServicePostTypeRef,\n\t\t\t\t},\n\t\t\t}\n\t\t\tconst sessionKey = [1, 2, 3]\n\t\t\tfullyLoggedIn = false\n\t\t\tconst returnData = createTestEntity(SaltDataTypeRef, { mailAddress: \"test\" })\n\t\t\tconst literal = { literal: true }\n\t\t\tconst saltTypeModel = await resolveTypeReference(AlarmServicePostTypeRef)\n\t\t\twhen(instanceMapper.decryptAndMapToInstance(saltTypeModel, literal, sessionKey)).thenResolve(returnData)\n\n\t\t\trespondWith(`{\"literal\":true}`)\n\n\t\t\tconst response = await executor.get(getService, null, { sessionKey })\n\n\t\t\to(response).equals(returnData)\n\t\t\tverify(\n\t\t\t\trestClient.request(\n\t\t\t\t\t\"/rest/testapp/testservice\",\n\t\t\t\t\tHttpMethod.GET,\n\t\t\t\t\tmatchers.argThat((p) => p.responseType === MediaType.Json),\n\t\t\t\t),\n\t\t\t)\n\t\t})\n\n\t\to(\"when get returns unencrypted data and we are not logged in it does not throw an error\", async function () {\n\t\t\tconst getService: GetService = {\n\t\t\t\t...service,\n\t\t\t\tget: {\n\t\t\t\t\tdata: null,\n\t\t\t\t\treturn: SaltDataTypeRef,\n\t\t\t\t},\n\t\t\t}\n\t\t\tfullyLoggedIn = false\n\t\t\tconst returnData = createTestEntity(SaltDataTypeRef, { mailAddress: \"test\" })\n\t\t\tconst literal = { literal: true }\n\t\t\tconst saltTypeModel = await resolveTypeReference(SaltDataTypeRef)\n\t\t\twhen(instanceMapper.decryptAndMapToInstance(saltTypeModel, literal, null)).thenResolve(returnData)\n\n\t\t\trespondWith(`{\"literal\":true}`)\n\n\t\t\tconst response = await executor.get(getService, null)\n\n\t\t\to(response).equals(returnData)\n\t\t\tverify(\n\t\t\t\trestClient.request(\n\t\t\t\t\t\"/rest/testapp/testservice\",\n\t\t\t\t\tHttpMethod.GET,\n\t\t\t\t\tmatchers.argThat((p) => p.responseType === MediaType.Json),\n\t\t\t\t),\n\t\t\t)\n\t\t})\n\t})\n\n\to.spec(\"POST\", function () {\n\t\to(\"encrypts data\", async function () {\n\t\t\tconst postService: PostService = {\n\t\t\t\t...service,\n\t\t\t\tpost: {\n\t\t\t\t\tdata: SaltDataTypeRef,\n\t\t\t\t\treturn: null,\n\t\t\t\t},\n\t\t\t}\n\t\t\tconst data = createTestEntity(SaltDataTypeRef, { mailAddress: \"test\" })\n\t\t\tconst literal = { literal: true }\n\t\t\tconst saltTypeModel = await resolveTypeReference(SaltDataTypeRef)\n\t\t\twhen(instanceMapper.encryptAndMapToLiteral(saltTypeModel, data, null)).thenResolve(literal)\n\n\t\t\trespondWith(undefined)\n\n\t\t\tconst response = await executor.post(postService, data)\n\n\t\t\to(response).equals(undefined)\n\t\t\tverify(\n\t\t\t\trestClient.request(\n\t\t\t\t\t\"/rest/testapp/testservice\",\n\t\t\t\t\tHttpMethod.POST,\n\t\t\t\t\tmatchers.argThat((params: RestClientOptions) => params.body === `{\"literal\":true}`),\n\t\t\t\t),\n\t\t\t)\n\t\t})\n\n\t\to(\"decrypts response data\", async function () {\n\t\t\tconst postService: PostService = {\n\t\t\t\t...service,\n\t\t\t\tpost: {\n\t\t\t\t\tdata: null,\n\t\t\t\t\treturn: SaltDataTypeRef,\n\t\t\t\t},\n\t\t\t}\n\t\t\tconst returnData = createTestEntity(SaltDataTypeRef, { mailAddress: \"test\" })\n\t\t\tconst literal = { literal: true }\n\t\t\tconst saltTypeModel = await resolveTypeReference(SaltDataTypeRef)\n\t\t\twhen(instanceMapper.decryptAndMapToInstance(saltTypeModel, literal, null)).thenResolve(returnData)\n\n\t\t\trespondWith(`{\"literal\":true}`)\n\n\t\t\tconst response = await executor.post(postService, null)\n\n\t\t\to(response).equals(returnData)\n\t\t\tverify(\n\t\t\t\trestClient.request(\n\t\t\t\t\t\"/rest/testapp/testservice\",\n\t\t\t\t\tHttpMethod.POST,\n\t\t\t\t\tmatchers.argThat((p) => p.responseType === MediaType.Json),\n\t\t\t\t),\n\t\t\t)\n\t\t})\n\t\to(\"when post returns encrypted data and we are not logged in it throws an error\", async function () {\n\t\t\tconst postService: PostService = {\n\t\t\t\t...service,\n\t\t\t\tpost: {\n\t\t\t\t\tdata: null,\n\t\t\t\t\treturn: AlarmServicePostTypeRef,\n\t\t\t\t},\n\t\t\t}\n\t\t\tfullyLoggedIn = false\n\t\t\tawait assertThrows(LoginIncompleteError, () => executor.post(postService, null))\n\t\t\tassertThatNoRequestsWereMade()\n\t\t})\n\n\t\to(\"when post returns encrypted data and we are not logged in but we have a session key it returns decrypted data\", async function () {\n\t\t\tconst getService: PostService = {\n\t\t\t\t...service,\n\t\t\t\tpost: {\n\t\t\t\t\tdata: null,\n\t\t\t\t\treturn: AlarmServicePostTypeRef,\n\t\t\t\t},\n\t\t\t}\n\t\t\tconst sessionKey = [1, 2, 3]\n\t\t\tfullyLoggedIn = false\n\t\t\tconst returnData = createTestEntity(SaltDataTypeRef, { mailAddress: \"test\" })\n\t\t\tconst literal = { literal: true }\n\t\t\tconst saltTypeModel = await resolveTypeReference(AlarmServicePostTypeRef)\n\t\t\twhen(instanceMapper.decryptAndMapToInstance(saltTypeModel, literal, sessionKey)).thenResolve(returnData)\n\n\t\t\trespondWith(`{\"literal\":true}`)\n\n\t\t\tconst response = await executor.post(getService, null, { sessionKey })\n\n\t\t\to(response).equals(returnData)\n\t\t\tverify(\n\t\t\t\trestClient.request(\n\t\t\t\t\t\"/rest/testapp/testservice\",\n\t\t\t\t\tHttpMethod.POST,\n\t\t\t\t\tmatchers.argThat((p) => p.responseType === MediaType.Json),\n\t\t\t\t),\n\t\t\t)\n\t\t})\n\t})\n\n\to.spec(\"PUT\", function () {\n\t\to(\"encrypts data\", async function () {\n\t\t\tconst putService: PutService = {\n\t\t\t\t...service,\n\t\t\t\tput: {\n\t\t\t\t\tdata: SaltDataTypeRef,\n\t\t\t\t\treturn: null,\n\t\t\t\t},\n\t\t\t}\n\t\t\tconst data = createTestEntity(SaltDataTypeRef, { mailAddress: \"test\" })\n\t\t\tconst literal = { literal: true }\n\t\t\tconst saltTypeModel = await resolveTypeReference(SaltDataTypeRef)\n\t\t\twhen(instanceMapper.encryptAndMapToLiteral(saltTypeModel, data, null)).thenResolve(literal)\n\n\t\t\trespondWith(undefined)\n\n\t\t\tconst response = await executor.put(putService, data)\n\n\t\t\to(response).equals(undefined)\n\t\t\tverify(\n\t\t\t\trestClient.request(\n\t\t\t\t\t\"/rest/testapp/testservice\",\n\t\t\t\t\tHttpMethod.PUT,\n\t\t\t\t\tmatchers.argThat((params: RestClientOptions) => params.body === `{\"literal\":true}`),\n\t\t\t\t),\n\t\t\t)\n\t\t})\n\n\t\to(\"decrypts response data\", async function () {\n\t\t\tconst putService: PutService = {\n\t\t\t\t...service,\n\t\t\t\tput: {\n\t\t\t\t\tdata: null,\n\t\t\t\t\treturn: SaltDataTypeRef,\n\t\t\t\t},\n\t\t\t}\n\t\t\tconst returnData = createTestEntity(SaltDataTypeRef, { mailAddress: \"test\" })\n\t\t\tconst literal = { literal: true }\n\t\t\tconst saltTypeModel = await resolveTypeReference(SaltDataTypeRef)\n\t\t\twhen(instanceMapper.decryptAndMapToInstance(saltTypeModel, literal, null)).thenResolve(returnData)\n\n\t\t\trespondWith(`{\"literal\":true}`)\n\n\t\t\tconst response = await executor.put(putService, null)\n\n\t\t\to(response).equals(returnData)\n\t\t\tverify(\n\t\t\t\trestClient.request(\n\t\t\t\t\t\"/rest/testapp/testservice\",\n\t\t\t\t\tHttpMethod.PUT,\n\t\t\t\t\tmatchers.argThat((p) => p.responseType === MediaType.Json),\n\t\t\t\t),\n\t\t\t)\n\t\t})\n\t\to(\"when put returns encrypted data and we are not logged in it throws an error\", async function () {\n\t\t\tconst putService: PutService = {\n\t\t\t\t...service,\n\t\t\t\tput: {\n\t\t\t\t\tdata: null,\n\t\t\t\t\treturn: AlarmServicePostTypeRef,\n\t\t\t\t},\n\t\t\t}\n\t\t\tfullyLoggedIn = false\n\t\t\tawait assertThrows(LoginIncompleteError, () => executor.put(putService, null))\n\t\t\tassertThatNoRequestsWereMade()\n\t\t})\n\t})\n\n\to.spec(\"DELETE\", function () {\n\t\to(\"encrypts data\", async function () {\n\t\t\tconst deleteService: DeleteService = {\n\t\t\t\t...service,\n\t\t\t\tdelete: {\n\t\t\t\t\tdata: SaltDataTypeRef,\n\t\t\t\t\treturn: null,\n\t\t\t\t},\n\t\t\t}\n\t\t\tconst data = createTestEntity(SaltDataTypeRef, { mailAddress: \"test\" })\n\t\t\tconst literal = { literal: true }\n\t\t\tconst saltTypeModel = await resolveTypeReference(SaltDataTypeRef)\n\t\t\twhen(instanceMapper.encryptAndMapToLiteral(saltTypeModel, data, null)).thenResolve(literal)\n\n\t\t\trespondWith(undefined)\n\n\t\t\tconst response = await executor.delete(deleteService, data)\n\n\t\t\to(response).equals(undefined)\n\t\t\tverify(\n\t\t\t\trestClient.request(\n\t\t\t\t\t\"/rest/testapp/testservice\",\n\t\t\t\t\tHttpMethod.DELETE,\n\t\t\t\t\tmatchers.argThat((params: RestClientOptions) => params.body === `{\"literal\":true}`),\n\t\t\t\t),\n\t\t\t)\n\t\t})\n\n\t\to(\"decrypts response data\", async function () {\n\t\t\tconst deleteService: DeleteService = {\n\t\t\t\t...service,\n\t\t\t\tdelete: {\n\t\t\t\t\tdata: null,\n\t\t\t\t\treturn: SaltDataTypeRef,\n\t\t\t\t},\n\t\t\t}\n\t\t\tconst returnData = createTestEntity(SaltDataTypeRef, { mailAddress: \"test\" })\n\t\t\tconst literal = { literal: true }\n\t\t\tconst saltTypeModel = await resolveTypeReference(SaltDataTypeRef)\n\t\t\twhen(instanceMapper.decryptAndMapToInstance(saltTypeModel, literal, null)).thenResolve(returnData)\n\n\t\t\trespondWith(`{\"literal\":true}`)\n\n\t\t\tconst response = await executor.delete(deleteService, null)\n\n\t\t\to(response).equals(returnData)\n\t\t\tverify(\n\t\t\t\trestClient.request(\n\t\t\t\t\t\"/rest/testapp/testservice\",\n\t\t\t\t\tHttpMethod.DELETE,\n\t\t\t\t\tmatchers.argThat((p) => p.responseType === MediaType.Json),\n\t\t\t\t),\n\t\t\t)\n\t\t})\n\n\t\to(\"when delete returns encrypted data and we are not logged in it throws an error\", async function () {\n\t\t\tconst deleteService: DeleteService = {\n\t\t\t\t...service,\n\t\t\t\tdelete: {\n\t\t\t\t\tdata: null,\n\t\t\t\t\treturn: AlarmServicePostTypeRef,\n\t\t\t\t},\n\t\t\t}\n\t\t\tfullyLoggedIn = false\n\t\t\tawait assertThrows(LoginIncompleteError, () => executor.delete(deleteService, null))\n\t\t\tassertThatNoRequestsWereMade()\n\t\t})\n\t})\n\n\to.spec(\"params\", function () {\n\t\to(\"adds query params\", async function () {\n\t\t\tconst getService: GetService = {\n\t\t\t\t...service,\n\t\t\t\tget: {\n\t\t\t\t\tdata: SaltDataTypeRef,\n\t\t\t\t\treturn: null,\n\t\t\t\t},\n\t\t\t}\n\t\t\tconst data = createTestEntity(SaltDataTypeRef, { mailAddress: \"test\" })\n\t\t\tconst query = Object.freeze({ myQueryParam: \"2\" })\n\t\t\twhen(instanceMapper.encryptAndMapToLiteral(anything(), anything(), anything())).thenResolve({})\n\t\t\trespondWith(undefined)\n\n\t\t\tconst response = await executor.get(getService, data, { queryParams: query })\n\n\t\t\to(response).equals(undefined)\n\t\t\tverify(\n\t\t\t\trestClient.request(\n\t\t\t\t\t\"/rest/testapp/testservice\",\n\t\t\t\t\tHttpMethod.GET,\n\t\t\t\t\tmatchers.argThat((opts: RestClientOptions) => deepEqual(opts.queryParams, query)),\n\t\t\t\t),\n\t\t\t)\n\t\t})\n\n\t\to(\"adds extra headers\", async function () {\n\t\t\tconst getService: GetService = {\n\t\t\t\t...service,\n\t\t\t\tget: {\n\t\t\t\t\tdata: SaltDataTypeRef,\n\t\t\t\t\treturn: null,\n\t\t\t\t},\n\t\t\t}\n\t\t\tconst data = createTestEntity(SaltDataTypeRef, { mailAddress: \"test\" })\n\t\t\tconst headers = Object.freeze({ myHeader: \"2\" })\n\t\t\tconst saltTypeModel = await resolveTypeReference(SaltDataTypeRef)\n\t\t\twhen(instanceMapper.encryptAndMapToLiteral(anything(), anything(), anything())).thenResolve({})\n\t\t\trespondWith(undefined)\n\n\t\t\tconst response = await executor.get(getService, data, { extraHeaders: headers })\n\n\t\t\to(response).equals(undefined)\n\n\t\t\tverify(\n\t\t\t\trestClient.request(\n\t\t\t\t\t\"/rest/testapp/testservice\",\n\t\t\t\t\tHttpMethod.GET,\n\t\t\t\t\tmatchers.argThat((opts: RestClientOptions) => deepEqual(opts.headers, { v: saltTypeModel.version, myHeader: \"2\" })),\n\t\t\t\t),\n\t\t\t)\n\t\t})\n\n\t\to(\"adds auth headers\", async function () {\n\t\t\tconst getService: GetService = {\n\t\t\t\t...service,\n\t\t\t\tget: {\n\t\t\t\t\tdata: SaltDataTypeRef,\n\t\t\t\t\treturn: null,\n\t\t\t\t},\n\t\t\t}\n\t\t\tconst data = createTestEntity(SaltDataTypeRef, { mailAddress: \"test\" })\n\t\t\tconst accessToken = \"myAccessToken\"\n\t\t\tauthHeaders = { accessToken }\n\t\t\tconst saltTypeModel = await resolveTypeReference(SaltDataTypeRef)\n\t\t\twhen(instanceMapper.encryptAndMapToLiteral(anything(), anything(), anything())).thenResolve({})\n\t\t\trespondWith(undefined)\n\n\t\t\tconst response = await executor.get(getService, data)\n\n\t\t\to(response).equals(undefined)\n\t\t\tverify(\n\t\t\t\trestClient.request(\n\t\t\t\t\t\"/rest/testapp/testservice\",\n\t\t\t\t\tHttpMethod.GET,\n\t\t\t\t\tmatchers.argThat((opts: RestClientOptions) => deepEqual(opts.headers, { v: saltTypeModel.version, accessToken })),\n\t\t\t\t),\n\t\t\t)\n\t\t})\n\t})\n\n\to.spec(\"keys\", function () {\n\t\to(\"uses resolved key to decrypt response\", async function () {\n\t\t\tconst getService: GetService = {\n\t\t\t\t...service,\n\t\t\t\tget: {\n\t\t\t\t\tdata: null,\n\t\t\t\t\treturn: SaltDataTypeRef,\n\t\t\t\t},\n\t\t\t}\n\t\t\tconst returnData = createTestEntity(SaltDataTypeRef, { mailAddress: \"test\" })\n\t\t\tconst literal = { literal: true }\n\t\t\tconst saltTypeModel = await resolveTypeReference(SaltDataTypeRef)\n\t\t\tconst sessionKey = [1, 2, 3]\n\t\t\twhen(cryptoFacade.resolveServiceSessionKey(literal)).thenResolve(sessionKey)\n\t\t\twhen(instanceMapper.decryptAndMapToInstance(saltTypeModel, literal, sessionKey)).thenResolve(returnData)\n\n\t\t\trespondWith(`{\"literal\":true}`)\n\n\t\t\tconst response = await executor.get(getService, null)\n\n\t\t\to(response).equals(returnData)\n\t\t\tverify(\n\t\t\t\trestClient.request(\n\t\t\t\t\t\"/rest/testapp/testservice\",\n\t\t\t\t\tHttpMethod.GET,\n\t\t\t\t\tmatchers.argThat((p) => p.responseType === MediaType.Json),\n\t\t\t\t),\n\t\t\t)\n\t\t})\n\n\t\to(\"uses passed key to decrypt response\", async function () {\n\t\t\tconst getService: GetService = {\n\t\t\t\t...service,\n\t\t\t\tget: {\n\t\t\t\t\tdata: null,\n\t\t\t\t\treturn: SaltDataTypeRef,\n\t\t\t\t},\n\t\t\t}\n\t\t\tconst returnData = createTestEntity(SaltDataTypeRef, { mailAddress: \"test\" })\n\t\t\tconst literal = { literal: true }\n\t\t\tconst saltTypeModel = await resolveTypeReference(SaltDataTypeRef)\n\t\t\tconst sessionKey = [1, 2, 3]\n\t\t\twhen(cryptoFacade.resolveServiceSessionKey(literal)).thenResolve(null)\n\t\t\twhen(instanceMapper.decryptAndMapToInstance(saltTypeModel, literal, sessionKey)).thenResolve(returnData)\n\n\t\t\trespondWith(`{\"literal\":true}`)\n\n\t\t\tconst response = await executor.get(getService, null, { sessionKey })\n\n\t\t\to(response).equals(returnData)\n\t\t\tverify(\n\t\t\t\trestClient.request(\n\t\t\t\t\t\"/rest/testapp/testservice\",\n\t\t\t\t\tHttpMethod.GET,\n\t\t\t\t\tmatchers.argThat((p) => p.responseType === MediaType.Json),\n\t\t\t\t),\n\t\t\t)\n\t\t})\n\n\t\to(\"uses passed key to encrypt request data\", async function () {\n\t\t\tconst getService: GetService = {\n\t\t\t\t...service,\n\t\t\t\tget: {\n\t\t\t\t\tdata: GiftCardCreateDataTypeRef,\n\t\t\t\t\treturn: null,\n\t\t\t\t},\n\t\t\t}\n\t\t\tconst giftCardCreateData = createTestEntity(GiftCardCreateDataTypeRef, { message: \"test\" })\n\t\t\tconst dataTypeModel = await resolveTypeReference(GiftCardCreateDataTypeRef)\n\t\t\tconst sessionKey = [1, 2, 3]\n\t\t\tconst encrypted = { encrypted: true }\n\t\t\twhen(instanceMapper.encryptAndMapToLiteral(dataTypeModel, giftCardCreateData, sessionKey)).thenResolve(encrypted)\n\n\t\t\trespondWith(undefined)\n\n\t\t\tconst response = await executor.get(getService, giftCardCreateData, { sessionKey })\n\n\t\t\to(response).equals(undefined)\n\t\t\tverify(\n\t\t\t\trestClient.request(\n\t\t\t\t\t\"/rest/testapp/testservice\",\n\t\t\t\t\tHttpMethod.GET,\n\t\t\t\t\tmatchers.argThat((p) => p.body === `{\"encrypted\":true}`),\n\t\t\t\t),\n\t\t\t)\n\t\t})\n\n\t\to(\"when data is encrypted and the key is not passed it throws\", async function () {\n\t\t\tconst getService: GetService = {\n\t\t\t\t...service,\n\t\t\t\tget: {\n\t\t\t\t\tdata: GiftCardCreateDataTypeRef,\n\t\t\t\t\treturn: null,\n\t\t\t\t},\n\t\t\t}\n\t\t\tconst giftCardCreateData = createTestEntity(GiftCardCreateDataTypeRef, { message: \"test\" })\n\n\t\t\tawait o(() => executor.get(getService, giftCardCreateData)).asyncThrows(ProgrammingError)\n\t\t\tverify(restClient.request(anything(), anything()), { ignoreExtraArgs: true, times: 0 })\n\t\t})\n\t})\n})\n","import o from \"@tutao/otest\"\nimport { func, instance, when } from \"testdouble\"\nimport { verify } from \"@tutao/tutanota-test-utils\"\nimport { LateInitializedCacheStorageImpl, OfflineStorageArgs } from \"../../../../../src/common/api/worker/rest/CacheStorageProxy.js\"\nimport { OfflineStorage } from \"../../../../../src/common/api/worker/offline/OfflineStorage.js\"\nimport { WorkerImpl } from \"../../../../../src/mail-app/workerUtils/worker/WorkerImpl.js\"\n\no.spec(\"CacheStorageProxy\", function () {\n\tconst userId = \"userId\"\n\tconst databaseKey = new Uint8Array([0, 1, 2, 3, 4, 5, 6, 7])\n\n\tlet workerMock: WorkerImpl\n\tlet offlineStorageMock: OfflineStorage\n\tlet offlineStorageProviderMock: () => Promise<null | OfflineStorage>\n\n\tlet proxy: LateInitializedCacheStorageImpl\n\n\to.beforeEach(function () {\n\t\tworkerMock = instance(WorkerImpl)\n\t\tofflineStorageMock = instance(OfflineStorage)\n\t\tofflineStorageProviderMock = func() as () => Promise<null | OfflineStorage>\n\n\t\tproxy = new LateInitializedCacheStorageImpl(async (error: Error) => {\n\t\t\tawait workerMock.sendError(error)\n\t\t}, offlineStorageProviderMock)\n\t})\n\n\to.spec(\"initialization\", function () {\n\t\to(\"should create a persistent storage when params are provided and offline storage is enabled\", async function () {\n\t\t\twhen(offlineStorageProviderMock()).thenResolve(offlineStorageMock)\n\n\t\t\tconst { isPersistent } = await proxy.initialize({ type: \"offline\", userId, databaseKey, timeRangeDays: null, forceNewDatabase: false })\n\n\t\t\to(isPersistent).equals(true)\n\t\t})\n\n\t\to(\"should create a ephemeral storage when no params are provided but offline storage is enabled\", async function () {\n\t\t\twhen(offlineStorageProviderMock()).thenResolve(offlineStorageMock)\n\n\t\t\tconst { isPersistent } = await proxy.initialize({ type: \"ephemeral\", userId })\n\n\t\t\to(isPersistent).equals(false)\n\t\t})\n\n\t\to(\"should create a ephemeral storage when params are provided but offline storage is disabled\", async function () {\n\t\t\twhen(offlineStorageProviderMock()).thenResolve(null)\n\n\t\t\tconst { isPersistent } = await proxy.initialize({ type: \"offline\", userId, databaseKey, timeRangeDays: null, forceNewDatabase: false })\n\n\t\t\to(isPersistent).equals(false)\n\t\t})\n\n\t\to(\"should create a ephemeral storage when no params are provided and offline storage is disabled\", async function () {\n\t\t\twhen(offlineStorageProviderMock()).thenResolve(null)\n\n\t\t\tconst { isPersistent } = await proxy.initialize({ type: \"ephemeral\", userId })\n\n\t\t\to(isPersistent).equals(false)\n\t\t})\n\n\t\to(\"will flag newDatabase as true when offline storage says it is\", async function () {\n\t\t\twhen(offlineStorageProviderMock()).thenResolve(offlineStorageMock)\n\t\t\tconst args: OfflineStorageArgs = { type: \"offline\", userId, databaseKey, timeRangeDays: null, forceNewDatabase: false }\n\t\t\twhen(offlineStorageMock.init(args)).thenResolve(true)\n\n\t\t\tconst { isNewOfflineDb } = await proxy.initialize(args)\n\n\t\t\to(isNewOfflineDb).equals(true)\n\t\t})\n\n\t\to(\"will flag newDatabase as false when offline storage says it is not\", async function () {\n\t\t\twhen(offlineStorageProviderMock()).thenResolve(offlineStorageMock)\n\t\t\tconst args: OfflineStorageArgs = { type: \"offline\", userId, databaseKey, timeRangeDays: null, forceNewDatabase: false }\n\t\t\twhen(offlineStorageMock.init(args)).thenResolve(false)\n\n\t\t\tconst { isNewOfflineDb } = await proxy.initialize(args)\n\n\t\t\to(isNewOfflineDb).equals(false)\n\t\t})\n\n\t\to(\"will fall back to an ephemeral storage when there is an error, and error is caught but sent to the worker\", async function () {\n\t\t\tconst error = new Error(\"oh no!!!\")\n\n\t\t\twhen(offlineStorageProviderMock()).thenReject(error)\n\n\t\t\tconst { isPersistent } = await proxy.initialize({ type: \"offline\", userId, databaseKey, timeRangeDays: null, forceNewDatabase: false })\n\n\t\t\to(isPersistent).equals(false)\n\t\t\tverify(workerMock.sendError(error))\n\t\t})\n\t})\n})\n","// Attention! Be very careful with this file, there are some trailing whitespaces in multiline strings that can mess things up if your editor does not respect\n// them.\n\nimport o from \"@tutao/otest\"\nimport {\n\tBirthdayTypeRef,\n\tContact,\n\tContactAddressTypeRef,\n\tContactMailAddressTypeRef,\n\tContactPhoneNumberTypeRef,\n\tContactSocialIdTypeRef,\n\tContactTypeRef,\n\tContactWebsiteTypeRef,\n} from \"../../../src/common/api/entities/tutanota/TypeRefs.js\"\nimport { ContactAddressType, ContactPhoneNumberType, ContactSocialType, ContactWebsiteType } from \"../../../src/common/api/common/TutanotaConstants.js\"\nimport {\n\t_addressesToVCardAddresses,\n\t_phoneNumbersToVCardPhoneNumbers,\n\t_socialIdsToVCardSocialUrls,\n\t_vCardFormatArrayToString,\n\tcontactsToVCard,\n} from \"../../../src/mail-app/contacts/VCardExporter.js\"\nimport { neverNull } from \"@tutao/tutanota-utils\"\nimport { vCardFileToVCards, vCardListToContacts } from \"../../../src/mail-app/contacts/VCardImporter.js\"\nimport { createTestEntity } from \"../TestUtils.js\"\n\nlet idCounter = 0\no.spec(\"VCardExporterTest\", function () {\n\t//turns given contacts into a vCard format string\n\to(\"contactsToVCardsTest\", function () {\n\t\tlet contactArray: Contact[] = []\n\t\tlet contact1 = createFilledContact(\n\t\t\t\"Ant\",\n\t\t\t\"Ste\",\n\t\t\t\"Hello World!\",\n\t\t\t\"Tutao\",\n\t\t\t\"Mr.\",\n\t\t\t\"Buffalo\",\n\t\t\t\"Lange\",\n\t\t\t\"Jr.\",\n\t\t\t\"IT\",\n\t\t\t[\"antste@antste.de\", \"bentste@bentste.de\"],\n\t\t\t[\"123123123\", \"321321321\"],\n\t\t\t[\"diaspora.de\"],\n\t\t\t[\"Housestreet 123\\nTown 123\\nState 123\\nCountry 123\"],\n\t\t\t[\"tuta.com\", \"tutanota.com\"],\n\t\t)\n\t\tcontactArray.push(contact1)\n\t\tlet c1String = `BEGIN:VCARD\\nVERSION:3.0\\nFN:Mr. Ant Lange Ste, Jr.\\nN:Ste;Ant;Lange;Mr.;Jr.\\nNICKNAME:Buffalo\\nADR;TYPE=work:Housestreet 123\\\\nTown 123\\\\nState 123\\\\nCountry 123\\nEMAIL;TYPE=work:antste@antste.de\\nEMAIL;TYPE=work:bentste@bentste.de\\nTEL;TYPE=work:123123123\\nTEL;TYPE=work:321321321\\nURL:https://www.diaspora.de\\nURL:https://www.tuta.com\\nURL:https://www.tutanota.com\\nORG:Tutao;IT\\nNOTE:Hello World!\\nEND:VCARD\\n\\n`\n\t\to(contactsToVCard(contactArray)).equals(c1String)\n\t\tcontactArray = []\n\t\tcontact1 = createFilledContact(\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [], [], [], [])\n\t\tc1String = `BEGIN:VCARD\\nVERSION:3.0\\nFN:\\nN:;;;;\\nEND:VCARD\\n\\n`\n\t\tcontactArray.push(contact1)\n\t\to(contactsToVCard(contactArray)).equals(c1String)\n\t\tcontactArray = []\n\t\tcontact1 = createFilledContact(\"Ant\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [], [], [], [])\n\t\tc1String = `BEGIN:VCARD\\nVERSION:3.0\\nFN:Ant\\nN:;Ant;;;\\nEND:VCARD\\n\\n`\n\t\tcontactArray.push(contact1)\n\t\to(contactsToVCard(contactArray)).equals(c1String)\n\t\tcontact1 = createFilledContact(\"Ant\", \"Tut\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [], [], [], [])\n\t\tc1String = `BEGIN:VCARD\\nVERSION:3.0\\nFN:Ant\\nN:;Ant;;;\\nEND:VCARD\\n\\nBEGIN:VCARD\\nVERSION:3.0\\nFN:Ant Tut\\nN:Tut;Ant;;;\\nEND:VCARD\\n\\n`\n\t\tcontactArray.push(contact1)\n\t\to(contactsToVCard(contactArray)).equals(c1String)\n\t\tcontact1 = createFilledContact(\n\t\t\t\"Ant\",\n\t\t\t\"Ste\",\n\t\t\t\"Hello World!\",\n\t\t\t\"Tutao\",\n\t\t\t\"Mr.\",\n\t\t\t\"Buffalo\",\n\t\t\t\"Lange\",\n\t\t\t\"Jr.\",\n\t\t\t\"IT\",\n\t\t\t[\"antste@antste.de\", \"bentste@bentste.de\"],\n\t\t\t[\"123123123\", \"321321321\"],\n\t\t\t[\"diaspora.de\"],\n\t\t\t[\"Housestreet 123\\nTown 123\\nState 123\\nCountry 123\"],\n\t\t\t[\"tuta.com\", \"tutanota.com\"],\n\t\t)\n\t\tc1String = `BEGIN:VCARD\\nVERSION:3.0\\nFN:Ant\\nN:;Ant;;;\\nEND:VCARD\\n\\nBEGIN:VCARD\\nVERSION:3.0\\nFN:Ant Tut\\nN:Tut;Ant;;;\\nEND:VCARD\\n\\nBEGIN:VCARD\\nVERSION:3.0\\nFN:Mr. Ant Lange Ste, Jr.\\nN:Ste;Ant;Lange;Mr.;Jr.\\nNICKNAME:Buffalo\\nADR;TYPE=work:Housestreet 123\\\\nTown 123\\\\nState 123\\\\nCountry 123\\nEMAIL;TYPE=work:antste@antste.de\\nEMAIL;TYPE=work:bentste@bentste.de\\nTEL;TYPE=work:123123123\\nTEL;TYPE=work:321321321\\nURL:https://www.diaspora.de\\nURL:https://www.tuta.com\\nURL:https://www.tutanota.com\\nORG:Tutao;IT\\nNOTE:Hello World!\\nEND:VCARD\\n\\n`\n\t\tcontactArray.push(contact1)\n\t\to(contactsToVCard(contactArray)).equals(c1String)\n\t\tcontactArray = []\n\t\tcontact1 = createFilledContact(\n\t\t\t\"Ant\",\n\t\t\t\"Ste\",\n\t\t\t\"Hello World!\",\n\t\t\t\"Tutao\",\n\t\t\t\"Mr.\",\n\t\t\t\"Buffalo\",\n\t\t\t\"Lange\",\n\t\t\t\"Jr.\",\n\t\t\t\"IT\",\n\t\t\t[\"antste@antste.de\", \"bentste@bentste.de\"],\n\t\t\t[\"123123123\", \"321321321\"],\n\t\t\t[\"diaspora.de\"],\n\t\t\t[\"Housestreet 123\\nTown 123\\nState 123\\nCountry 123\"],\n\t\t\t[\"tuta.com\", \"tutanota.com\"],\n\t\t)\n\t\tcontactArray.push(contact1)\n\t\tcontactArray.push(contact1)\n\t\tc1String = `BEGIN:VCARD\\nVERSION:3.0\\nFN:Mr. Ant Lange Ste, Jr.\\nN:Ste;Ant;Lange;Mr.;Jr.\\nNICKNAME:Buffalo\\nADR;TYPE=work:Housestreet 123\\\\nTown 123\\\\nState 123\\\\nCountry 123\\nEMAIL;TYPE=work:antste@antste.de\\nEMAIL;TYPE=work:bentste@bentste.de\\nTEL;TYPE=work:123123123\\nTEL;TYPE=work:321321321\\nURL:https://www.diaspora.de\\nURL:https://www.tuta.com\\nURL:https://www.tutanota.com\\nORG:Tutao;IT\\nNOTE:Hello World!\\nEND:VCARD\\n\nBEGIN:VCARD\\nVERSION:3.0\\nFN:Mr. Ant Lange Ste, Jr.\\nN:Ste;Ant;Lange;Mr.;Jr.\\nNICKNAME:Buffalo\\nADR;TYPE=work:Housestreet 123\\\\nTown 123\\\\nState 123\\\\nCountry 123\\nEMAIL;TYPE=work:antste@antste.de\\nEMAIL;TYPE=work:bentste@bentste.de\\nTEL;TYPE=work:123123123\\nTEL;TYPE=work:321321321\\nURL:https://www.diaspora.de\\nURL:https://www.tuta.com\\nURL:https://www.tutanota.com\\nORG:Tutao;IT\\nNOTE:Hello World!\\nEND:VCARD\\n\\n`\n\t\to(contactsToVCard(contactArray)).equals(c1String)\n\t\tcontactArray = []\n\t\tcontact1 = createFilledContact(\n\t\t\t\"Ant\",\n\t\t\t\"Ste\",\n\t\t\t\"\",\n\t\t\t\"Tutao\",\n\t\t\t\"Mr.\",\n\t\t\t\"\",\n\t\t\t\"Lange\",\n\t\t\t\"Jr.\",\n\t\t\t\"IT\",\n\t\t\t[\"antste@antste.de\", \"bentste@bentste.de\"],\n\t\t\t[\"123123123\", \"321321321\"],\n\t\t\t[],\n\t\t\t[\"Housestreet 123\\nTown 123\\nState 123\\nCountry 123\"],\n\t\t\t[\"tuta.com\", \"tutanota.com\"],\n\t\t)\n\t\tcontactArray.push(contact1)\n\t\tcontact1 = createFilledContact(\n\t\t\t\"Bob\",\n\t\t\t\"Kev\",\n\t\t\t\"\",\n\t\t\t\"Tuta\",\n\t\t\t\"Phd.\",\n\t\t\t\"\",\n\t\t\t\"Manthey\",\n\t\t\t\"VI\",\n\t\t\t\"HR\",\n\t\t\t[\"bobkev@antste.de\", \"bobkev@bentste.de\"],\n\t\t\t[\"89\", \"78\"],\n\t\t\t[],\n\t\t\t[\"Housestreet 890\\nTown 098\\nState 098\\nCountry 789\"],\n\t\t\t[\"tuta.com.br\", \"tutanota.com.br\"],\n\t\t)\n\t\tcontactArray.push(contact1)\n\t\tc1String = `BEGIN:VCARD\\nVERSION:3.0\\nFN:Mr. Ant Lange Ste, Jr.\\nN:Ste;Ant;Lange;Mr.;Jr.\\nADR;TYPE=work:Housestreet 123\\\\nTown 123\\\\nState 123\\\\nCountry 123\\nEMAIL;TYPE=work:antste@antste.de\\nEMAIL;TYPE=work:bentste@bentste.de\\nTEL;TYPE=work:123123123\\nTEL;TYPE=work:321321321\\nURL:https://www.tuta.com\\nURL:https://www.tutanota.com\\nORG:Tutao;IT\\nEND:VCARD\\n\nBEGIN:VCARD\\nVERSION:3.0\\nFN:Phd. Bob Manthey Kev, VI\\nN:Kev;Bob;Manthey;Phd.;VI\\nADR;TYPE=work:Housestreet 890\\\\nTown 098\\\\nState 098\\\\nCountry 789\\nEMAIL;TYPE=work:bobkev@antste.de\\nEMAIL;TYPE=work:bobkev@bentste.de\\nTEL;TYPE=work:89\\nTEL;TYPE=work:78\\nURL:https://www.tuta.com.br\\nURL:https://www.tutanota.com.br\\nORG:Tuta;HR\\nEND:VCARD\\n\\n`\n\t\to(contactsToVCard(contactArray)).equals(c1String)\n\t})\n\to(\"birthdayToVCardsFormatString\", function () {\n\t\t//oldBirthday\n\t\tlet contactArray: Contact[] = []\n\t\tlet contact1 = createFilledContact(\"Ant\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [], [], [], [])\n\t\tcontact1.birthdayIso = \"2000-09-09\"\n\t\tlet c1String = `BEGIN:VCARD\\nVERSION:3.0\\nFN:Ant\\nN:;Ant;;;\\nBDAY:2000-09-09\\nEND:VCARD\\n\\n`\n\t\tcontactArray.push(contact1)\n\t\to(contactsToVCard(contactArray)).equals(c1String)\n\t\tcontactArray = []\n\t\tcontact1 = createFilledContact(\"Ant\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [], [], [], [])\n\t\tcontact1.birthdayIso = \"2000-10-10\"\n\t\tc1String = `BEGIN:VCARD\\nVERSION:3.0\\nFN:Ant\\nN:;Ant;;;\\nBDAY:2000-10-10\\nEND:VCARD\\n\\n`\n\t\tcontactArray.push(contact1)\n\t\to(contactsToVCard(contactArray)).equals(c1String)\n\t\tcontactArray = []\n\t\tcontact1 = createFilledContact(\"Ant\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [], [], [], [])\n\t\tcontact1.birthdayIso = \"1800-10-10\"\n\t\tc1String = `BEGIN:VCARD\\nVERSION:3.0\\nFN:Ant\\nN:;Ant;;;\\nBDAY:1800-10-10\\nEND:VCARD\\n\\n`\n\t\tcontactArray.push(contact1)\n\t\to(contactsToVCard(contactArray)).equals(c1String)\n\t\t//Birthday\n\t\tcontact1 = createFilledContact(\"Ant\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [], [], [], [])\n\t\tcontact1.birthdayIso = \"2000-09-01\"\n\t\to(contactsToVCard([contact1])).equals(`BEGIN:VCARD\\nVERSION:3.0\\nFN:Ant\\nN:;Ant;;;\\nBDAY:2000-09-01\\nEND:VCARD\\n\\n`)\n\t\tcontact1 = createFilledContact(\"Ant\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [], [], [], [])\n\t\tcontact1.birthdayIso = \"2000-09-09\"\n\t\to(contactsToVCard([contact1])).equals(`BEGIN:VCARD\\nVERSION:3.0\\nFN:Ant\\nN:;Ant;;;\\nBDAY:2000-09-09\\nEND:VCARD\\n\\n`)\n\t\tcontact1 = createFilledContact(\"Ant\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [], [], [], [])\n\t\tcontact1.birthdayIso = \"1991-10-10\"\n\t\to(contactsToVCard([contact1])).equals(`BEGIN:VCARD\\nVERSION:3.0\\nFN:Ant\\nN:;Ant;;;\\nBDAY:1991-10-10\\nEND:VCARD\\n\\n`)\n\t\tcontact1 = createFilledContact(\"Ant\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [], [], [], [])\n\t\tcontact1.birthdayIso = \"1943-10-10\"\n\t\to(contactsToVCard([contact1])).equals(`BEGIN:VCARD\\nVERSION:3.0\\nFN:Ant\\nN:;Ant;;;\\nBDAY:1943-10-10\\nEND:VCARD\\n\\n`)\n\t\tcontact1 = createFilledContact(\"Ant\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [], [], [], [])\n\t\tcontact1.birthdayIso = \"1800-01-31\"\n\t\tc1String = `BEGIN:VCARD\\nVERSION:3.0\\nFN:Ant\\nN:;Ant;;;\\nBDAY:1800-01-31\\nEND:VCARD\\n\\n`\n\t\to(contactsToVCard([contact1])).equals(c1String)\n\t\tcontact1 = createFilledContact(\"Ant\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [], [], [], [])\n\t\tcontact1.birthdayIso = \"--10-10\"\n\t\tc1String = `BEGIN:VCARD\\nVERSION:3.0\\nFN:Ant\\nN:;Ant;;;\\nBDAY:1111-10-10\\nEND:VCARD\\n\\n`\n\t\to(contactsToVCard([contact1])).equals(c1String)\n\t})\n\n\to.spec(\"contactsToVCards more than 75 char content line\", function () {\n\t\to(\"ADR\", async function () {\n\t\t\t//todo Birthday test\n\t\t\tconst contact = createFilledContact(\n\t\t\t\t\"Ant\",\n\t\t\t\t\"Ste\",\n\t\t\t\t\"Hello World!\",\n\t\t\t\t\"Tutao\",\n\t\t\t\t\"Mr.\",\n\t\t\t\t\"Buffalo\",\n\t\t\t\t\"Lange\",\n\t\t\t\t\"Jr.\",\n\t\t\t\t\"IT\",\n\t\t\t\t[\"antste@antste.de\", \"bentste@bentste.de\"],\n\t\t\t\t[\"123123123\", \"321321321\"],\n\t\t\t\t[\"diaspora.de\"],\n\t\t\t\t[\"Housestreet 123\\nTown 123\\nState 123\\nCountry 123 this is so there is a line break in this contact\"],\n\t\t\t\t[\"tuta.com\", \"tutanota.com\"],\n\t\t\t)\n\t\t\tconst exprected = `BEGIN:VCARD\nVERSION:3.0\nFN:Mr. Ant Lange Ste, Jr.\nN:Ste;Ant;Lange;Mr.;Jr.\nNICKNAME:Buffalo\nADR;TYPE=work:Housestreet 123\\\\nTown 123\\\\nState 123\\\\nCountry 123 this is so \\n there is a line break in this contact\nEMAIL;TYPE=work:antste@antste.de\nEMAIL;TYPE=work:bentste@bentste.de\nTEL;TYPE=work:123123123\nTEL;TYPE=work:321321321\nURL:https://www.diaspora.de\nURL:https://www.tuta.com\nURL:https://www.tutanota.com\nORG:Tutao;IT\nNOTE:Hello World!\nEND:VCARD\n\n`\n\t\t\to(contactsToVCard([contact])).equals(exprected)\n\t\t})\n\n\t\to(\"URL\", async function () {\n\t\t\tconst contact = createFilledContact(\n\t\t\t\t\"Ant\",\n\t\t\t\t\"Ste\",\n\t\t\t\t\"Hello World!\",\n\t\t\t\t\"Tutao is the best mail client for your privacy just go for it and youll see it will be amazing!!!!!\",\n\t\t\t\t\"Mr.\",\n\t\t\t\t\"Buffalo\",\n\t\t\t\t\"Lange\",\n\t\t\t\t\"Jr.\",\n\t\t\t\t\"IT\",\n\t\t\t\t[\"antste@antste.de\", \"bentste@bentste.de\"],\n\t\t\t\t[\"123123123\", \"321321321\"],\n\t\t\t\t[\"diaspora.de\", \"facebook.com/aaaa/bbb/cccccc/DDDDDDD/llllllll/uuuuuuu/ppppp/aaaaaaaaaaaaaaaaaaaaa\"],\n\t\t\t\t[\"Housestreet 123\\nTown 123\\nState 123\\nCountry 123 this is so there is a line break in this contact\"],\n\t\t\t\t[\"tuta.com\", \"tutanota.com\"],\n\t\t\t)\n\t\t\tconst expected = `BEGIN:VCARD\nVERSION:3.0\nFN:Mr. Ant Lange Ste, Jr.\nN:Ste;Ant;Lange;Mr.;Jr.\nNICKNAME:Buffalo\nADR;TYPE=work:Housestreet 123\\\\nTown 123\\\\nState 123\\\\nCountry 123 this is so \\n there is a line break in this contact\nEMAIL;TYPE=work:antste@antste.de\nEMAIL;TYPE=work:bentste@bentste.de\nTEL;TYPE=work:123123123\nTEL;TYPE=work:321321321\nURL:https://www.diaspora.de\nURL:https://www.facebook.com/aaaa/bbb/cccccc/DDDDDDD/llllllll/uuuuuuu/ppppp\n /aaaaaaaaaaaaaaaaaaaaa\nURL:https://www.tuta.com\nURL:https://www.tutanota.com\nORG:Tutao is the best mail client for your privacy just go for it and youll\n  see it will be amazing!!!!!;IT\nNOTE:Hello World!\nEND:VCARD\n\n`\n\t\t\to(contactsToVCard([contact])).equals(expected)\n\t\t})\n\t})\n\n\to(\"contactsToVCardsEscapingTest\", function () {\n\t\tlet contactArray: Contact[] = []\n\t\t//todo Birthday test\n\t\tlet contact1 = createFilledContact(\n\t\t\t\"Ant,\",\n\t\t\t\"Ste;\",\n\t\t\t\"Hello::: World!\",\n\t\t\t\"Tutao;:\",\n\t\t\t\"Mr.:\",\n\t\t\t\"Buffalo;p\",\n\t\t\t\"Lange,\",\n\t\t\t\"Jr.,\",\n\t\t\t\"IT,\",\n\t\t\t[\":antste@antste.de;\", \"bentste@bent:ste.de\"],\n\t\t\t[\"1;23123123\", \"32132:1321\"],\n\t\t\t[\"https://diaspora.de\"],\n\t\t\t[\"Housestreet 123\\nTo:wn 123\\nState 123\\nCountry 123\"],\n\t\t)\n\t\tcontactArray.push(contact1)\n\t\tlet c1String = `BEGIN:VCARD\nVERSION:3.0\nFN:Mr.: Ant\\\\, Lange\\\\, Ste\\\\;, Jr.\\\\,\nN:Ste\\\\;;Ant\\\\,;Lange\\\\,;Mr.:;Jr.\\\\,\nNICKNAME:Buffalo\\\\;p\nADR;TYPE=work:Housestreet 123\\\\nTo:wn 123\\\\nState 123\\\\nCountry 123\nEMAIL;TYPE=work::antste@antste.de\\\\;\nEMAIL;TYPE=work:bentste@bent:ste.de\nTEL;TYPE=work:1\\\\;23123123\nTEL;TYPE=work:32132:1321\nURL:https://diaspora.de\nORG:Tutao\\\\;:;IT\\\\,\nNOTE:Hello::: World!\nEND:VCARD\n\n`\n\t\to(contactsToVCard(contactArray)).equals(c1String)\n\t})\n\to(\"addressesToVcardFormatString\", function () {\n\t\tlet contact1 = createFilledContact(\n\t\t\t\"Ant\",\n\t\t\t\"Ste\",\n\t\t\t\"Hello World!\",\n\t\t\t\"Tutao\",\n\t\t\t\"Mr.\",\n\t\t\t\"Buffalo\",\n\t\t\t\"Lange\",\n\t\t\t\"Jr.\",\n\t\t\t\"IT\",\n\t\t\t[\"antste@antste.de\", \"bentste@bentste.de\"],\n\t\t\t[\"123123123\", \"321321321\"],\n\t\t\t[\"diaspora.de\"],\n\t\t\t[\"Housestreet 123\\nTown 123\\nState 123\\nCountry 123\"],\n\t\t)\n\n\t\tlet c1String = _vCardFormatArrayToString(_addressesToVCardAddresses(contact1.addresses), \"ADR\")\n\n\t\tlet expectedResult = `ADR;TYPE=work:Housestreet 123\\\\nTown 123\\\\nState 123\\\\nCountry 123\\n`\n\t\to(expectedResult).equals(c1String)\n\t\tcontact1.addresses[0].type = ContactAddressType.PRIVATE\n\t\tc1String = _vCardFormatArrayToString(_addressesToVCardAddresses(contact1.addresses), \"ADR\")\n\t\texpectedResult = `ADR;TYPE=home:Housestreet 123\\\\nTown 123\\\\nState 123\\\\nCountry 123\\n`\n\t\to(expectedResult).equals(c1String)\n\t\tcontact1.addresses[0].type = ContactAddressType.CUSTOM\n\t\tc1String = _vCardFormatArrayToString(_addressesToVCardAddresses(contact1.addresses), \"ADR\")\n\t\texpectedResult = `ADR:Housestreet 123\\\\nTown 123\\\\nState 123\\\\nCountry 123\\n`\n\t\to(expectedResult).equals(c1String)\n\t\tcontact1.addresses[0].type = ContactAddressType.OTHER\n\t\tc1String = _vCardFormatArrayToString(_addressesToVCardAddresses(contact1.addresses), \"ADR\")\n\t\texpectedResult = `ADR:Housestreet 123\\\\nTown 123\\\\nState 123\\\\nCountry 123\\n`\n\t\to(expectedResult).equals(c1String)\n\t})\n\to(\"mailAddressesToVCardString\", function () {\n\t\tlet contact1 = createFilledContact(\n\t\t\t\"Ant\",\n\t\t\t\"Ste\",\n\t\t\t\"Hello World!\",\n\t\t\t\"Tutao\",\n\t\t\t\"Mr.\",\n\t\t\t\"Buffalo\",\n\t\t\t\"Lange\",\n\t\t\t\"Jr.\",\n\t\t\t\"IT\",\n\t\t\t[\"antste@antste.de\", \"bentste@bentste.de\"],\n\t\t\t[\"123123123\", \"321321321\"],\n\t\t\t[\"diaspora.de\"],\n\t\t\t[\"Housestreet 123\\nTown 123\\nState 123\\nCountry 123\"],\n\t\t)\n\n\t\tlet c1String = _vCardFormatArrayToString(_addressesToVCardAddresses(contact1.mailAddresses), \"EMAIL\")\n\n\t\tlet expectedResult = `EMAIL;TYPE=work:antste@antste.de\\nEMAIL;TYPE=work:bentste@bentste.de\\n`\n\t\to(expectedResult).equals(c1String)\n\t\tcontact1.mailAddresses[0].type = ContactAddressType.PRIVATE\n\t\tc1String = _vCardFormatArrayToString(_addressesToVCardAddresses(contact1.mailAddresses), \"EMAIL\")\n\t\texpectedResult = `EMAIL;TYPE=home:antste@antste.de\\nEMAIL;TYPE=work:bentste@bentste.de\\n`\n\t\to(expectedResult).equals(c1String)\n\t\tcontact1.mailAddresses[1].type = ContactAddressType.CUSTOM\n\t\tc1String = _vCardFormatArrayToString(_addressesToVCardAddresses(contact1.mailAddresses), \"EMAIL\")\n\t\texpectedResult = `EMAIL;TYPE=home:antste@antste.de\\nEMAIL:bentste@bentste.de\\n`\n\t\to(expectedResult).equals(c1String)\n\t\tcontact1.mailAddresses[0].type = ContactAddressType.OTHER\n\t\tc1String = _vCardFormatArrayToString(_addressesToVCardAddresses(contact1.mailAddresses), \"EMAIL\")\n\t\texpectedResult = `EMAIL:antste@antste.de\\nEMAIL:bentste@bentste.de\\n`\n\t\to(expectedResult).equals(c1String)\n\t})\n\to(\"phoneNumbersToVCardString\", function () {\n\t\tlet contact1 = createFilledContact(\n\t\t\t\"Ant\",\n\t\t\t\"Ste\",\n\t\t\t\"Hello World!\",\n\t\t\t\"Tutao\",\n\t\t\t\"Mr.\",\n\t\t\t\"Buffalo\",\n\t\t\t\"Lange\",\n\t\t\t\"Jr.\",\n\t\t\t\"IT\",\n\t\t\t[\"antste@antste.de\", \"bentste@bentste.de\"],\n\t\t\t[\"123123123\", \"321321321\"],\n\t\t\t[\"diaspora.de\"],\n\t\t\t[\"Housestreet 123\\nTown 123\\nState 123\\nCountry 123\"],\n\t\t)\n\n\t\tlet c1String = _vCardFormatArrayToString(_phoneNumbersToVCardPhoneNumbers(contact1.phoneNumbers), \"TEL\")\n\n\t\tlet expectedResult = `TEL;TYPE=work:123123123\\nTEL;TYPE=work:321321321\\n`\n\t\to(expectedResult).equals(c1String)\n\t\tcontact1.phoneNumbers[0].type = ContactPhoneNumberType.PRIVATE\n\t\tc1String = _vCardFormatArrayToString(_phoneNumbersToVCardPhoneNumbers(contact1.phoneNumbers), \"TEL\")\n\t\texpectedResult = `TEL;TYPE=home:123123123\\nTEL;TYPE=work:321321321\\n`\n\t\to(expectedResult).equals(c1String)\n\t\tcontact1.phoneNumbers[1].type = ContactPhoneNumberType.CUSTOM\n\t\tc1String = _vCardFormatArrayToString(_phoneNumbersToVCardPhoneNumbers(contact1.phoneNumbers), \"TEL\")\n\t\texpectedResult = `TEL;TYPE=home:123123123\\nTEL:321321321\\n`\n\t\to(expectedResult).equals(c1String)\n\t\tcontact1.phoneNumbers[0].type = ContactPhoneNumberType.OTHER\n\t\tc1String = _vCardFormatArrayToString(_phoneNumbersToVCardPhoneNumbers(contact1.phoneNumbers), \"TEL\")\n\t\texpectedResult = `TEL:123123123\\nTEL:321321321\\n`\n\t\to(expectedResult).equals(c1String)\n\t\tcontact1.phoneNumbers[0].type = ContactPhoneNumberType.FAX\n\t\tc1String = _vCardFormatArrayToString(_phoneNumbersToVCardPhoneNumbers(contact1.phoneNumbers), \"TEL\")\n\t\texpectedResult = `TEL;TYPE=fax:123123123\\nTEL:321321321\\n`\n\t\to(expectedResult).equals(c1String)\n\t})\n\to(\"socialIdsToVCardString\", function () {\n\t\tlet contact1 = createFilledContact(\n\t\t\t\"Ant\",\n\t\t\t\"Ste\",\n\t\t\t\"Hello World!\",\n\t\t\t\"Tutao\",\n\t\t\t\"Mr.\",\n\t\t\t\"Buffalo\",\n\t\t\t\"Lange\",\n\t\t\t\"Jr.\",\n\t\t\t\"IT\",\n\t\t\t[\"antste@antste.de\", \"bentste@bentste.de\"],\n\t\t\t[\"123123123\", \"321321321\"],\n\t\t\t[\"TutanotaTeam\", \"xing.com\", \"facebook.de\"],\n\t\t\t[\"Housestreet 123\\nTown 123\\nState 123\\nCountry 123\"],\n\t\t)\n\n\t\tcontact1.socialIds[0].type = ContactSocialType.LINKED_IN\n\n\t\tlet c1String = _vCardFormatArrayToString(_socialIdsToVCardSocialUrls(contact1.socialIds), \"URL\")\n\t\tlet expectedResult = `URL:https://www.linkedin.com/in/TutanotaTeam\\nURL:https://www.xing.com\\nURL:https://www.facebook.de\\n`\n\t\to(expectedResult).equals(c1String)\n\t\tcontact1.socialIds[0].type = ContactSocialType.TWITTER\n\t\tc1String = _vCardFormatArrayToString(_socialIdsToVCardSocialUrls(contact1.socialIds), \"URL\")\n\t\texpectedResult = `URL:https://www.twitter.com/TutanotaTeam\\nURL:https://www.xing.com\\nURL:https://www.facebook.de\\n`\n\t\to(expectedResult).equals(c1String)\n\t\tcontact1.socialIds[1].type = ContactSocialType.CUSTOM\n\t\tc1String = _vCardFormatArrayToString(_socialIdsToVCardSocialUrls(contact1.socialIds), \"URL\")\n\t\texpectedResult = `URL:https://www.twitter.com/TutanotaTeam\\nURL:https://www.xing.com\\nURL:https://www.facebook.de\\n`\n\t\to(expectedResult).equals(c1String)\n\t\tcontact1.socialIds[1].type = ContactSocialType.OTHER\n\t\tc1String = _vCardFormatArrayToString(_socialIdsToVCardSocialUrls(contact1.socialIds), \"URL\")\n\t\texpectedResult = `URL:https://www.twitter.com/TutanotaTeam\\nURL:https://www.xing.com\\nURL:https://www.facebook.de\\n`\n\t\to(expectedResult).equals(c1String)\n\t\tcontact1.socialIds[0].type = ContactSocialType.FACEBOOK\n\t\tc1String = _vCardFormatArrayToString(_socialIdsToVCardSocialUrls(contact1.socialIds), \"URL\")\n\t\texpectedResult = `URL:https://www.facebook.com/TutanotaTeam\\nURL:https://www.xing.com\\nURL:https://www.facebook.de\\n`\n\t\to(expectedResult).equals(c1String)\n\t})\n\to(\"testSpecialCharsInVCard\", function () {\n\t\tlet a = `BEGIN:VCARD\\nVERSION:3.0\\nFN:Mr. John\\\\;Quinlan Public\\nN:Public;John\\\\;Quinlan;;Mr.;\\nBDAY:2016-09-09\\nADR:Die Heide 81\\\\nBasche\\nNOTE:Hello World\\\\nHier ist ein Umbruch\\nEND:VCARD\\n\\n`\n\t\tlet b = createTestEntity(ContactTypeRef)\n\t\tlet bday = createTestEntity(BirthdayTypeRef)\n\t\tlet contacts = [b]\n\t\tb._ownerGroup = \"\"\n\t\tb.addresses[0] = {\n\t\t\t_type: ContactAddressTypeRef,\n\t\t\t_id: neverNull(null),\n\t\t\taddress: \"Die Heide 81\\nBasche\",\n\t\t\tcustomTypeName: \"\",\n\t\t\ttype: \"2\",\n\t\t}\n\t\tb.firstName = \"John;Quinlan\"\n\t\tb.lastName = \"Public\"\n\t\tb.comment = \"Hello World\\nHier ist ein Umbruch\"\n\t\tb.company = \"\"\n\t\tb.role = \"\"\n\t\tb.title = \"Mr.\"\n\t\tb.nickname = neverNull(null)\n\t\tb.birthdayIso = \"2016-09-09\"\n\t\to(JSON.stringify(contactsToVCard(contacts))).equals(JSON.stringify(a))\n\t})\n\to(\"import export roundtrip\", function () {\n\t\tconst cString = `BEGIN:VCARD\nVERSION:3.0\nFN:Mr. John\\\\;Quinlan Public\nN:Public;John\\\\;Quinlan;;Mr.;\nBDAY:2016-09-09\nADR:Die Heide 81\\\\nBasche\nNOTE:Hello World\\\\nHier ist ein Umbruch\nEND:VCARD\n\nBEGIN:VCARD\nVERSION:3.0\nFN:Mr. Ant Ste\nN:Ste;Ant;;Mr.;\nNICKNAME:Buffalo\nADR;TYPE=work:Housestreet 123\\\\nTown 123\\\\nState 123\\\\nCountry 123 this is so \\n there is a line break in this contact\nEMAIL;TYPE=work:antste@antste.de\nEMAIL;TYPE=work:bentste@bentste.de\nTEL;TYPE=work:123123123\nTEL;TYPE=work:321321321\nURL:https://www.diaspora.de\nORG:Tutao\nNOTE:Hello World!\nEND:VCARD\n\nBEGIN:VCARD\nVERSION:3.0\nFN:Mr. Ant Ste\nN:Ste;Ant;;Mr.;\nNICKNAME:Buffalo\nADR;TYPE=work:Housestreet 123\\\\nTown 123\\\\nState 123\\\\nCountry 123\nEMAIL;TYPE=work:antste@antste.de\nEMAIL;TYPE=work:bentste@bentste.de\nTEL;TYPE=work:123123123\nTEL;TYPE=work:321321321\nURL:https://www.diaspora.de\nORG:Tutao\nNOTE:Hello World!\nEND:VCARD\n\n`\n\t\to(contactsToVCard(vCardListToContacts(neverNull(vCardFileToVCards(cString)), \"\"))).equals(cString)\n\t})\n})\n\nexport function createFilledContact(\n\tfirstName: string,\n\tlastName: string,\n\tcomment: string,\n\tcompany: string,\n\ttitle: string,\n\tnickname: string,\n\tmiddleName: string,\n\tnameSuffix: string,\n\tdepartment: string,\n\temailAddresses?: string[] | null | undefined,\n\tphoneNumbers?: string[] | null | undefined,\n\tsocialIds?: Array<string | string[]> | null | undefined,\n\taddresses?: string[] | null | undefined,\n\twebsites?: Array<string>,\n\tbirthdayIso?: string | null | undefined,\n): Contact {\n\tlet c = createTestEntity(ContactTypeRef)\n\tc._id = [\"0\", String(idCounter++)]\n\tc.firstName = firstName\n\tc.lastName = lastName\n\n\tif (emailAddresses) {\n\t\tfor (const m of emailAddresses) {\n\t\t\tlet a = createTestEntity(ContactMailAddressTypeRef)\n\t\t\ta.address = m\n\t\t\ta.type = ContactAddressType.WORK\n\t\t\ta.customTypeName = \"\"\n\t\t\tc.mailAddresses.push(a)\n\t\t}\n\t}\n\n\tif (phoneNumbers) {\n\t\tfor (const m of phoneNumbers) {\n\t\t\tlet a = createTestEntity(ContactPhoneNumberTypeRef)\n\t\t\ta.number = m\n\t\t\ta.type = ContactAddressType.WORK\n\t\t\ta.customTypeName = \"\"\n\t\t\tc.phoneNumbers.push(a)\n\t\t}\n\t}\n\n\tif (addresses) {\n\t\tfor (const m of addresses) {\n\t\t\tlet a = createTestEntity(ContactAddressTypeRef)\n\t\t\ta.address = m\n\t\t\ta.type = ContactAddressType.WORK\n\t\t\ta.customTypeName = \"\"\n\t\t\tc.addresses.push(a)\n\t\t}\n\t}\n\n\tif (socialIds) {\n\t\tfor (const m of socialIds) {\n\t\t\tlet a = createTestEntity(ContactSocialIdTypeRef)\n\t\t\tif (typeof m === \"string\") {\n\t\t\t\ta.socialId = m\n\t\t\t\ta.type = ContactSocialType.OTHER\n\t\t\t} else {\n\t\t\t\ta.socialId = m[0]\n\t\t\t\ta.type = m[1] || ContactSocialType.OTHER\n\t\t\t}\n\t\t\ta.customTypeName = \"\"\n\t\t\tc.socialIds.push(a)\n\t\t}\n\t}\n\n\tif (websites) {\n\t\tfor (const website of websites) {\n\t\t\tlet entity = createTestEntity(ContactWebsiteTypeRef)\n\t\t\tentity.url = website\n\t\t\tentity.type = ContactWebsiteType.OTHER\n\t\t\tc.websites.push(entity)\n\t\t}\n\t}\n\n\tc.title = title\n\tc.comment = comment\n\tc.company = company\n\tc.nickname = nickname\n\tc.birthdayIso = birthdayIso ?? null\n\tc.middleName = middleName\n\tc.nameSuffix = nameSuffix\n\tc.department = department\n\treturn c\n}\n","import o from \"@tutao/otest\"\nimport {\n\tContactAddressTypeRef,\n\tContactMailAddressTypeRef,\n\tContactPhoneNumberTypeRef,\n\tContactTypeRef,\n} from \"../../../src/common/api/entities/tutanota/TypeRefs.js\"\nimport { neverNull } from \"@tutao/tutanota-utils\"\nimport { vCardFileToVCards, vCardListToContacts } from \"../../../src/mail-app/contacts/VCardImporter.js\"\n// @ts-ignore[untyped-import]\nimport en from \"../../../src/mail-app/translations/en.js\"\nimport { lang } from \"../../../src/common/misc/LanguageViewModel.js\"\nimport { createTestEntity } from \"../TestUtils.js\"\n\no.spec(\"VCardImporterTest\", function () {\n\to.before(async function () {\n\t\t// @ts-ignore\n\t\twindow.whitelabelCustomizations = null\n\n\t\tif (globalThis.isBrowser) {\n\t\t\tglobalThis.TextDecoder = window.TextDecoder\n\t\t} else {\n\t\t\t// @ts-ignore\n\t\t\tglobalThis.TextDecoder = (await import(\"node:util\")).TextDecoder\n\t\t}\n\n\t\tlang.init(en)\n\t})\n\to(\"testFileToVCards\", function () {\n\t\tlet str = `BEGIN:VCARD\nVERSION:3.0\nFN:proto type\nN:type;proto;;;\nADR;TYPE=HOME,PREF:;;Humboldstrasse 5;\\nBerlin;;12345;Deutschland\nEND:VCARD\n\nBEGIN:VCARD\nVERSION:3.0\nFN:Test Kontakt\nN:Kontakt;Test;;;\nORG:Tuta\nBDAY:2001-01-01\nEMAIL;TYPE=WORK:k1576147@mvrht.net\nTEL;TYPE=CELL,WORK:123456789\nTEL;TYPE=VOICE,HOME:789456123\nADR;TYPE=WORK:;;Strasse 30, 67890 hamburg ;;;;\nEND:VCARD\n\n`\n\t\tlet expected = [\n\t\t\t`VERSION:3.0\nFN:proto type\nN:type;proto;;;\nADR;TYPE=HOME,PREF:;;Humboldstrasse 5;\\nBerlin;;12345;Deutschland`,\n\t\t\t`VERSION:3.0\nFN:Test Kontakt\nN:Kontakt;Test;;;\nORG:Tuta\nBDAY:2001-01-01\nEMAIL;TYPE=WORK:k1576147@mvrht.net\nTEL;TYPE=CELL,WORK:123456789\nTEL;TYPE=VOICE,HOME:789456123\nADR;TYPE=WORK:;;Strasse 30, 67890 hamburg ;;;;`,\n\t\t]\n\t\t//prepares for further usage --> removes Begin and End tag and pushes the content between those tags into an array\n\t\to(vCardFileToVCards(str)!).deepEquals(expected)\n\t})\n\to(\"testImportEmpty\", function () {\n\t\to(vCardFileToVCards(\"\")).equals(null)\n\t})\n\to(\"testImportWithoutLinefeed\", function () {\n\t\tlet str = `BEGIN:VCARD\nVERSION:3.0\nFN:proto type\nN:type;proto;;;\nADR;TYPE=HOME,PREF:;;Humboldstrasse 5;\\nBerlin;;12345;Deutschlan\n d\nEND:VCARD\nBEGIN:VCARD\nVERSION:3.0\nFN:Test Kontakt\nN:Kontakt;Test;;;\nORG:Tuta\nBDAY:2001-01-01\nEMAIL;TYPE=WORK:k1576147@mvrht.net\nTEL;TYPE=CELL,WORK:123456789\nTEL;TYPE=VOICE,HOME:789456123\nADR;TYPE=WORK:;;Strasse 30, 67890 hamburg ;;;;\nEND:VCARD`\n\t\tlet expected = [\n\t\t\t`VERSION:3.0\nFN:proto type\nN:type;proto;;;\nADR;TYPE=HOME,PREF:;;Humboldstrasse 5;\\nBerlin;;12345;Deutschland`,\n\t\t\t`VERSION:3.0\nFN:Test Kontakt\nN:Kontakt;Test;;;\nORG:Tuta\nBDAY:2001-01-01\nEMAIL;TYPE=WORK:k1576147@mvrht.net\nTEL;TYPE=CELL,WORK:123456789\nTEL;TYPE=VOICE,HOME:789456123\nADR;TYPE=WORK:;;Strasse 30, 67890 hamburg ;;;;`,\n\t\t]\n\t\t//Unfolding lines for content lines longer than 75 characters\n\t\to(vCardFileToVCards(str)!).deepEquals(expected)\n\t})\n\to(\"TestBEGIN:VCARDinFile\", function () {\n\t\tlet str = `BEGIN:VCARD\nVERSION:3.0\nFN:proto type\nN:type;proto;;;\nADR;TYPE=HOME,PREF:;;Humboldstrasse 5;\\\\nBerlin;;12345;Deutschland\nEND:VCARD\n\nBEGIN:VCARD\nVERSION:3.0\nFN:Test Kontakt\nN:Kontakt;Test;;;\nORG:Tuta\nBDAY:2001-01-01\nEMAIL;TYPE=WORK:k1576147@mvrht.net\nTEL;TYPE=CELL,WORK:123456789\nTEL;TYPE=VOICE,HOME:789456123\nADR;TYPE=WORK:;;Strasse 30\\\\, 67890 hamburg ;;;;\nNOTE:BEGIN:VCARD\\\\n i Love VCARDS;\nEND:VCARD\n\n`\n\t\tlet expected = [\n\t\t\t`VERSION:3.0\nFN:proto type\nN:type;proto;;;\nADR;TYPE=HOME,PREF:;;Humboldstrasse 5;\\\\nBerlin;;12345;Deutschland`,\n\t\t\t`VERSION:3.0\nFN:Test Kontakt\nN:Kontakt;Test;;;\nORG:Tuta\nBDAY:2001-01-01\nEMAIL;TYPE=WORK:k1576147@mvrht.net\nTEL;TYPE=CELL,WORK:123456789\nTEL;TYPE=VOICE,HOME:789456123\nADR;TYPE=WORK:;;Strasse 30\\\\, 67890 hamburg ;;;;\nNOTE:BEGIN:VCARD\\\\n i Love VCARDS;`,\n\t\t]\n\t\to(vCardFileToVCards(str)!).deepEquals(expected)\n\t})\n\to(\"windowsLinebreaks\", function () {\n\t\tlet str =\n\t\t\t\"BEGIN:VCARD\\r\\nVERSION:3.0\\r\\nFN:proto type\\r\\nN:type;proto;;;\\r\\nADR;TYPE=HOME,PREF:;;Humboldstrasse 5;\\\\nBerlin;;12345;Deutschland\\r\\nEND:VCARD\\r\\n\"\n\t\tlet expected = [\n\t\t\t`VERSION:3.0\nFN:proto type\nN:type;proto;;;\nADR;TYPE=HOME,PREF:;;Humboldstrasse 5;\\\\nBerlin;;12345;Deutschland`,\n\t\t]\n\t\to(vCardFileToVCards(str)!).deepEquals(expected)\n\t})\n\to(\"testToContactNames\", function () {\n\t\tlet a = [\"N:Public\\\\\\\\;John\\\\;Quinlan;Lange;Mr.;Esq.\\nBDAY:2016-09-09\\nADR:Die Heide 81\\\\nBasche\\nNOTE:Hello World\\\\nHier ist ein Umbruch\"]\n\t\tlet contacts = vCardListToContacts(a, \"\")\n\t\tlet b = createTestEntity(ContactTypeRef)\n\t\tb._ownerGroup = \"\"\n\t\tb.addresses[0] = {\n\t\t\t_type: ContactAddressTypeRef,\n\t\t\t_id: neverNull(null),\n\t\t\taddress: \"Die Heide 81\\nBasche\",\n\t\t\tcustomTypeName: \"\",\n\t\t\ttype: \"2\",\n\t\t}\n\t\tb.middleName = \"Lange\"\n\t\tb.department = \"\"\n\t\tb.firstName = \"John;Quinlan\"\n\t\tb.lastName = \"Public\\\\\"\n\t\tb.comment = \"Hello World\\nHier ist ein Umbruch\"\n\t\tb.company = \"\"\n\t\tb.role = \"\"\n\t\tb.title = \"Mr.\"\n\t\tb.nameSuffix = \"Esq.\"\n\t\tb.nickname = neverNull(null)\n\t\tb.birthdayIso = \"2016-09-09\"\n\t\to(JSON.stringify(contacts[0])).equals(JSON.stringify(b))\n\t})\n\to(\"testEmptyAddressElements\", function () {\n\t\tlet a = [\"N:Public\\\\\\\\;John\\\\;Quinlan;;Mr.;Esq.\\nBDAY:2016-09-09\\nADR:Die Heide 81;; ;;Basche\"]\n\t\tlet contacts = vCardListToContacts(a, \"\")\n\t\tlet b = createTestEntity(ContactTypeRef)\n\t\tb._ownerGroup = \"\"\n\t\tb.addresses[0] = {\n\t\t\t_type: ContactAddressTypeRef,\n\t\t\t_id: neverNull(null),\n\t\t\taddress: \"Die Heide 81\\nBasche\",\n\t\t\tcustomTypeName: \"\",\n\t\t\ttype: \"2\",\n\t\t}\n\t\tb.middleName = \"\"\n\t\tb.firstName = \"John;Quinlan\"\n\t\tb.lastName = \"Public\\\\\"\n\t\tb.comment = \"\"\n\t\tb.department = \"\"\n\t\tb.company = \"\"\n\t\tb.role = \"\"\n\t\tb.nameSuffix = \"Esq.\"\n\t\tb.title = \"Mr.\"\n\t\tb.nickname = neverNull(null)\n\t\tb.birthdayIso = \"2016-09-09\"\n\t\to(JSON.stringify(contacts[0])).equals(JSON.stringify(b))\n\t})\n\to(\"testTooManySpaceElements\", function () {\n\t\tlet a = [\"N:Public\\\\\\\\; John\\\\; Quinlan;;Mr.    ;Esq.\\nBDAY: 2016-09-09\\nADR: Die Heide 81;;;; Basche\"]\n\t\tlet contacts = vCardListToContacts(a, \"\")\n\t\tlet b = createTestEntity(ContactTypeRef)\n\t\tb._ownerGroup = \"\"\n\t\tb.addresses[0] = {\n\t\t\t_type: ContactAddressTypeRef,\n\t\t\t_id: neverNull(null),\n\t\t\taddress: \"Die Heide 81\\nBasche\",\n\t\t\tcustomTypeName: \"\",\n\t\t\ttype: \"2\",\n\t\t}\n\t\tb.firstName = \"John; Quinlan\"\n\t\tb.lastName = \"Public\\\\\"\n\t\tb.middleName = \"\"\n\t\tb.comment = \"\"\n\t\tb.department = \"\"\n\t\tb.company = \"\"\n\t\tb.role = \"\"\n\t\tb.title = \"Mr.\"\n\t\tb.nameSuffix = \"Esq.\"\n\t\tb.nickname = neverNull(null)\n\t\tb.birthdayIso = \"2016-09-09\"\n\t\to(JSON.stringify(contacts[0])).equals(JSON.stringify(b))\n\t})\n\to(\"testVCard4\", function () {\n\t\tlet aContent = \"VERSION:4.0\\nN:Public\\\\\\\\;John\\\\;Quinlan;;Mr.;Esq.\\nBDAY:2016-09-09\\nADR:Die Heide 81;Basche\\nNOTE:Hello World\\\\nHier ist ein Umbruch\"\n\t\tlet a = `BEGIN:VCARD\\n${aContent}\\nEND:VCARD\\n`\n\t\tlet bContent = \"version:4.0\\nFN:John B\"\n\t\tlet b = `begin:vcard\\n${bContent}\\nend:vcard\\n`\n\t\to(vCardFileToVCards(a + b)).deepEquals([aContent, bContent])\n\t})\n\to(\"testTypeInUserText\", function () {\n\t\tlet a = [\"EMAIL;TYPE=WORK:HOME@mvrht.net\\nADR;TYPE=WORK:Street;HOME;;\\nTEL;TYPE=WORK:HOME01923825434\"]\n\t\tlet contacts = vCardListToContacts(a, \"\")\n\t\tlet b = createTestEntity(ContactTypeRef)\n\t\tb._ownerGroup = \"\"\n\t\tb.middleName = \"\"\n\t\tb.department = \"\"\n\t\tb.nameSuffix = \"\"\n\t\tb.mailAddresses[0] = {\n\t\t\t_type: ContactMailAddressTypeRef,\n\t\t\t_id: neverNull(null),\n\t\t\taddress: \"HOME@mvrht.net\",\n\t\t\tcustomTypeName: \"\",\n\t\t\ttype: \"1\",\n\t\t}\n\t\tb.addresses[0] = {\n\t\t\t_type: ContactAddressTypeRef,\n\t\t\t_id: neverNull(null),\n\t\t\taddress: \"Street\\nHOME\",\n\t\t\tcustomTypeName: \"\",\n\t\t\ttype: \"1\",\n\t\t}\n\t\tb.phoneNumbers[0] = {\n\t\t\t_type: ContactPhoneNumberTypeRef,\n\t\t\t_id: neverNull(null),\n\t\t\tcustomTypeName: \"\",\n\t\t\tnumber: \"HOME01923825434\",\n\t\t\ttype: \"1\",\n\t\t}\n\t\tb.comment = \"\"\n\t\to(JSON.stringify(contacts[0])).equals(JSON.stringify(b))\n\t})\n\to(\"test vcard 4.0 date format\", function () {\n\t\tlet vcards = `BEGIN:VCARD\nVERSION:3.0\nBDAY:19540331\nEND:VCARD\nBEGIN:VCARD\nVERSION:3.0\nBDAY:--0626\nEND:VCARD`\n\t\tlet contacts = vCardListToContacts(neverNull(vCardFileToVCards(vcards)), \"\")\n\t\to(neverNull(contacts[0].birthdayIso)).equals(\"1954-03-31\")\n\t\to(neverNull(contacts[1].birthdayIso)).equals(\"--06-26\")\n\t})\n\to(\"simple vcard 4.0 import with v4 date format\", function () {\n\t\tlet vcards = `BEGIN:VCARD\nVERSION:4.0\nBDAY:19540331\nEND:VCARD\nBEGIN:VCARD\nVERSION:3.0\nBDAY:--0626\nEND:VCARD`\n\t\tlet contacts = vCardListToContacts(neverNull(vCardFileToVCards(vcards)), \"\")\n\t\to(neverNull(contacts[0].birthdayIso)).equals(\"1954-03-31\")\n\t\to(neverNull(contacts[1].birthdayIso)).equals(\"--06-26\")\n\t})\n\to(\"test import without year\", function () {\n\t\tlet vcards = `BEGIN:VCARD\nVERSION:3.0\nBDAY:1111-03-31\nEND:VCARD\nBEGIN:VCARD\nVERSION:3.0\nBDAY:11110331\nEND:VCARD`\n\t\tlet contacts = vCardListToContacts(neverNull(vCardFileToVCards(vcards)), \"\")\n\t\to(neverNull(contacts[0].birthdayIso)).equals(\"--03-31\")\n\t\to(neverNull(contacts[1].birthdayIso)).equals(\"--03-31\")\n\t})\n\to(\"quoted printable utf-8 entirely encoded\", function () {\n\t\tlet vcards =\n\t\t\t\"BEGIN:VCARD\\n\" +\n\t\t\t\"VERSION:2.1\\n\" +\n\t\t\t\"N:Mustermann;Max;;;\\n\" +\n\t\t\t\"FN:Max Mustermann\\n\" +\n\t\t\t\"ADR;HOME;CHARSET=UTF-8;ENCODING=QUOTED-PRINTABLE:;;=54=65=73=74=73=74=72=61=C3=9F=65=20=34=32;;;;\\n\" +\n\t\t\t\"END:VCARD\"\n\t\tlet contacts = vCardListToContacts(neverNull(vCardFileToVCards(vcards)), \"\")\n\t\to(neverNull(contacts[0].addresses[0].address)).equals(\"Teststraße 42\")\n\t})\n\to(\"quoted printable utf-8 partially encoded\", function () {\n\t\tlet vcards =\n\t\t\t\"BEGIN:VCARD\\n\" +\n\t\t\t\"VERSION:2.1\\n\" +\n\t\t\t\"N:Mustermann;Max;;;\\n\" +\n\t\t\t\"FN:Max Mustermann\\n\" +\n\t\t\t\"ADR;HOME;CHARSET=UTF-8;ENCODING=QUOTED-PRINTABLE:;;Teststra=C3=9Fe 42;;;;\\n\" +\n\t\t\t\"END:VCARD\"\n\t\tlet contacts = vCardListToContacts(neverNull(vCardFileToVCards(vcards)), \"\")\n\t\to(neverNull(contacts[0].addresses[0].address)).equals(\"Teststraße 42\")\n\t})\n\to(\"base64 utf-8\", function () {\n\t\tlet vcards =\n\t\t\t\"BEGIN:VCARD\\n\" +\n\t\t\t\"VERSION:2.1\\n\" +\n\t\t\t\"N:Mustermann;Max;;;\\n\" +\n\t\t\t\"FN:Max Mustermann\\n\" +\n\t\t\t\"ADR;HOME;CHARSET=UTF-8;ENCODING=BASE64:;;w4TDpMOkaGhtbQ==;;;;\\n\" +\n\t\t\t\"END:VCARD\"\n\t\tlet contacts = vCardListToContacts(neverNull(vCardFileToVCards(vcards)), \"\")\n\t\to(neverNull(contacts[0].addresses[0].address)).equals(\"Ääähhmm\")\n\t})\n\to(\"test with latin charset\", function () {\n\t\tlet vcards =\n\t\t\t\"BEGIN:VCARD\\n\" +\n\t\t\t\"VERSION:2.1\\n\" +\n\t\t\t\"N:Mustermann;Max;;;\\n\" +\n\t\t\t\"FN:Max Mustermann\\n\" +\n\t\t\t\"ADR;HOME;CHARSET=ISO-8859-1;ENCODING=QUOTED-PRINTABLE:;;Rua das Na=E7=F5es;;;;\\n\" +\n\t\t\t\"END:VCARD\"\n\t\tlet contacts = vCardListToContacts(neverNull(vCardFileToVCards(vcards)), \"\")\n\t\to(neverNull(contacts[0].addresses[0].address)).equals(\"Rua das Nações\")\n\t})\n\to(\"test with no charset but encoding\", function () {\n\t\tlet vcards = \"BEGIN:VCARD\\n\" + \"VERSION:2.1\\n\" + \"N;ENCODING=QUOTED-PRINTABLE:=4E;\\n\" + \"END:VCARD\\nD\"\n\t\tlet contacts = vCardListToContacts(neverNull(vCardFileToVCards(vcards)), \"\")\n\t\to(neverNull(contacts[0].lastName)).equals(\"N\")\n\t})\n\to(\"base64 implicit utf-8\", function () {\n\t\tlet vcards =\n\t\t\t\"BEGIN:VCARD\\n\" +\n\t\t\t\"VERSION:2.1\\n\" +\n\t\t\t\"N:Mustermann;Max;;;\\n\" +\n\t\t\t\"FN:Max Mustermann\\n\" +\n\t\t\t\"ADR;HOME;ENCODING=BASE64:;;w4TDpMOkaGhtbQ==;;;;\\n\" +\n\t\t\t\"END:VCARD\"\n\t\tlet contacts = vCardListToContacts(neverNull(vCardFileToVCards(vcards)), \"\")\n\t\to(neverNull(contacts[0].addresses[0].address)).equals(\"Ääähhmm\")\n\t})\n\to.spec(\"protonmail exports are imported correctly\", function () {\n\t\to(\"protonmail v4.0 simple import\", function () {\n\t\t\tlet vCard =\n\t\t\t\t\"BEGIN:VCARD\\n\" +\n\t\t\t\t\"VERSION:4.0\\n\" +\n\t\t\t\t\"PRODID;VALUE=TEXT:-//ProtonMail//ProtonMail vCard 1.0.0//EN\\n\" +\n\t\t\t\t\"FN;PREF=1:johnsuser@test.tuta.com\\n\" +\n\t\t\t\t\"UID:proton-autosave-19494094-e26d-4e59-b4fb-766afcf82fa5\\n\" +\n\t\t\t\t\"ITEM1.EMAIL;PREF=1:johnsuser@test.tuta.com\\n\" +\n\t\t\t\t\"END:VCARD\"\n\n\t\t\tlet contacts = vCardListToContacts(neverNull(vCardFileToVCards(vCard)), \"\")\n\t\t\to(contacts.length).equals(1)\n\t\t\to(contacts[0].firstName).equals(\"johnsuser@test.tuta.com\")\n\t\t\to(contacts[0].lastName).equals(\"\")\n\t\t\to(contacts[0].nickname).equals(null)\n\t\t\to(contacts[0].mailAddresses.length).equals(1)\n\t\t\to(contacts[0].mailAddresses[0].address).equals(\"johnsuser@test.tuta.com\")\n\t\t})\n\t\to(\"protonmail v4.0 complicated import\", function () {\n\t\t\tlet vCard =\n\t\t\t\t\"BEGIN:VCARD\\n\" +\n\t\t\t\t\"VERSION:4.0\\n\" +\n\t\t\t\t\"ADR;PREF=1:;;908 S 1780 W;Orem;UT;;USA\\n\" +\n\t\t\t\t\"NOTE:This is a note\\n\" +\n\t\t\t\t\"TEL;PREF=1:8013194412\\n\" +\n\t\t\t\t\"TEL;TYPE=cell;PREF=2:+49530112345\\n\" +\n\t\t\t\t\"FN;PREF=1:Jane Test\\n\" +\n\t\t\t\t\"ITEM1.EMAIL;PREF=1:jane.test@tutanota.de\\n\" +\n\t\t\t\t\"UID:proton-web-3466d132-2347-2541-3375-391fc3423bf3\\n\" +\n\t\t\t\t\"END:VCARD\"\n\n\t\t\tlet contacts = vCardListToContacts(neverNull(vCardFileToVCards(vCard)), \"\")\n\t\t\to(contacts.length).equals(1)\n\t\t\to(contacts[0].firstName).equals(\"Jane Test\")\n\t\t\to(contacts[0].lastName).equals(\"\")\n\t\t\to(contacts[0].nickname).equals(null)\n\t\t\to(contacts[0].mailAddresses.length).equals(1)\n\t\t\to(contacts[0].mailAddresses[0].address).equals(\"jane.test@tutanota.de\")\n\t\t\to(contacts[0].phoneNumbers.length).equals(2)\n\t\t\to(contacts[0].phoneNumbers[0].number).equals(\"8013194412\")\n\t\t\to(contacts[0].phoneNumbers[1].number).equals(\"+49530112345\")\n\t\t\to(contacts[0].comment).equals(\"This is a note\")\n\t\t})\n\t})\n})\n","import o from \"@tutao/otest\"\nimport { client } from \"../../../src/common/misc/ClientDetector.js\"\nimport { Mode } from \"../../../src/common/api/common/Env.js\"\nimport { AppType, BrowserType, DeviceType } from \"../../../src/common/misc/ClientConstants.js\"\n\no.spec(\"ClientDetector test\", function () {\n\to(\"ClientDetector detect chrome windows\", () => {\n\t\t// Even though TouchEvent is defined for Chrome, it should not be consider mobile verson\n\t\t//@ts-ignore\n\t\twindow.TouchEvent = function () {}\n\n\t\tclient.init(\"Mozilla/5.0 (Windows NT 6.2 WOW64) AppleWebKit/537.15 (KHTML, like Gecko) Chrome/30.0.1295.0 Safari/537.15\", \"Linux\")\n\t\to(client.browser).equals(BrowserType.CHROME)\n\t\to(client.browserVersion).equals(30)\n\t\to(client.device).equals(DeviceType.DESKTOP)\n\t\to(client.isMobileDevice()).equals(false)\n\t\t// @ts-ignore\n\t\twindow.touchEvent = undefined\n\t})\n\to(\"ClientDetector detect chrome macOS\", () => {\n\t\t// Even though TouchEvent is defined for Chrome, it should not be consider mobile verson\n\t\t// @ts-ignore\n\t\twindow.TouchEvent = function () {}\n\n\t\tclient.init(\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36\", \"MacIntel\")\n\t\to(client.browser).equals(BrowserType.CHROME)\n\t\to(client.browserVersion).equals(77)\n\t\to(client.device).equals(DeviceType.DESKTOP)\n\t\to(client.isMobileDevice()).equals(false)\n\t\t// @ts-ignore\n\t\twindow.touchEvent = undefined\n\t})\n\to(\"ClientDetector detect firefox linux\", () => {\n\t\tclient.init(\"Mozilla/5.0 (X11 Ubuntu Linux x86_64 rv:17.0) Gecko/17.0 Firefox/17.0\", \"Linux\")\n\t\to(client.browser).equals(BrowserType.FIREFOX)\n\t\to(client.browserVersion).equals(17)\n\t\to(client.device).equals(DeviceType.DESKTOP)\n\t\to(client.isMobileDevice()).equals(false)\n\t})\n\to(\"ClientDetector detect safari 5.1 ipad\", () => {\n\t\tclient.init(\"Mozilla/5.0 (iPad CPU OS 5_1 like Mac OS X) AppleWebKit/534.46 (KHTML, like Gecko ) Version/5.1 Mobile/9B176 Safari/7534.48.3\", \"Linux\")\n\t\to(client.browser).equals(BrowserType.SAFARI)\n\t\to(client.browserVersion).equals(5.1)\n\t\to(client.device).equals(DeviceType.IPAD)\n\t\to(client.isMobileDevice()).equals(true)\n\t})\n\to(\"ClientDetector detect safari 6.0 ipad\", () => {\n\t\tclient.init(\"Mozilla/5.0 (iPad CPU OS 6_0 like Mac OS X) AppleWebKit/536.26 (KHTML, like Gecko) Version/6.0 Mobile/10A403 Safari/8536.25\", \"Linux\")\n\t\to(client.browser).equals(BrowserType.SAFARI)\n\t\to(client.browserVersion).equals(6)\n\t\to(client.device).equals(DeviceType.IPAD)\n\t\to(client.isMobileDevice()).equals(true)\n\t})\n\to(\"ClientDetector detect safari 6.1 ipad\", () => {\n\t\tclient.init(\"Mozilla/5.0 (iPad CPU OS 6_0 like Mac OS X) AppleWebKit/536.26 (KHTML, like Gecko) Version/6.1 Mobile/10A403 Safari/8536.25\", \"Linux\")\n\t\to(client.browser).equals(BrowserType.SAFARI)\n\t\to(client.browserVersion).equals(6.1)\n\t\to(client.device).equals(DeviceType.IPAD)\n\t\to(client.isMobileDevice()).equals(true)\n\t})\n\to(\"ClientDetector detect safari 7 iphone\", () => {\n\t\tclient.init(\n\t\t\t\"Mozilla/5.0 (iPhone CPU iPhone OS 7_0_2 like Mac OS X) AppleWebKit/537.51.1 (KHTML, like Gecko) Version/7.0 Mobile/11A501 Safari/9537.53\",\n\t\t\t\"Linux\",\n\t\t)\n\t\to(client.browser).equals(BrowserType.SAFARI)\n\t\to(client.browserVersion).equals(7)\n\t\to(client.device).equals(DeviceType.IPHONE)\n\t\to(client.isMobileDevice()).equals(true)\n\t})\n\to(\"ClientDetector detect safari 6.0 iphone home screen\", () => {\n\t\tclient.init(\"Mozilla/5.0 (iPhone CPU iPhone OS 6_1_6 like Mac OS X) AppleWebKit/536.26 (KHTML, like Gecko) Mobile/10B500\", \"Linux\")\n\t\to(client.browser).equals(BrowserType.SAFARI)\n\t\to(client.browserVersion).equals(6.1)\n\t\to(client.device).equals(DeviceType.IPHONE)\n\t\to(client.isMobileDevice()).equals(true)\n\t})\n\to(\"ClientDetector detect safari 7 iphone home screen\", () => {\n\t\tclient.init(\"Mozilla/5.0 (iPhone CPU iPhone OS 7_0_2 like Mac OS X) AppleWebKit/537.51.1 (KHTML, like Gecko) Mobile/11A501\", \"Linux\")\n\t\to(client.browser).equals(BrowserType.SAFARI)\n\t\to(client.browserVersion).equals(7)\n\t\to(client.device).equals(DeviceType.IPHONE)\n\t\to(client.isMobileDevice()).equals(true)\n\t})\n\to(\"ClientDetector detect opera 12 windows\", () => {\n\t\tclient.init(\"Opera/9.80 (Windows NT 6.1 WOW64) Presto/2.12.388 Version/12.11\", \"Linux\")\n\t\to(client.browser).equals(BrowserType.OPERA)\n\t\to(client.browserVersion).equals(12.1)\n\t\to(client.device).equals(DeviceType.DESKTOP)\n\t\to(client.isMobileDevice()).equals(false)\n\t})\n\to(\"ClientDetector detect opera 21 windows\", () => {\n\t\tclient.init(\n\t\t\t\"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/34.0.1847.132 Safari/537.36 OPR/21.0.1432.67 (Edition Campaign 38)\",\n\t\t\t\"Linux\",\n\t\t)\n\t\to(client.browser).equals(BrowserType.OPERA)\n\t\to(client.browserVersion).equals(21)\n\t\to(client.device).equals(DeviceType.DESKTOP)\n\t\to(client.isMobileDevice()).equals(false)\n\t})\n\to(\"ClientDetector detect opera 21 Mac\", () => {\n\t\tclient.init(\n\t\t\t\"Mozilla/5.0 (Macintosh Intel Mac OS X 10_8_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/34.0.1847.132 Safari/537.36 OPR/21.0.1432.67\",\n\t\t\t\"Linux\",\n\t\t)\n\t\to(client.browser).equals(BrowserType.OPERA)\n\t\to(client.browserVersion).equals(21)\n\t\to(client.device).equals(DeviceType.DESKTOP)\n\t\to(client.isMobileDevice()).equals(false)\n\t})\n\to(\"ClientDetector detect safari 6.1 on OS X\", () => {\n\t\tclient.init(\"Mozilla/5.0 (Macintosh Intel Mac OS X 10_8_5) AppleWebKit/537.71 (KHTML, like Gecko) Version/6.1 Safari/537.71\", \"Linux\")\n\t\to(client.browser).equals(BrowserType.SAFARI)\n\t\to(client.browserVersion).equals(6.1)\n\t\to(client.device).equals(DeviceType.DESKTOP)\n\t\to(client.isMobileDevice()).equals(false)\n\t})\n\to(\"ClientDetector detect safari 7 on OS X\", () => {\n\t\tclient.init(\"Mozilla/5.0 (Macintosh Intel Mac OS X 10_9) AppleWebKit/537.71 (KHTML, like Gecko) Version/7.0 Safari/537.71\", \"Linux\")\n\t\to(client.browser).equals(BrowserType.SAFARI)\n\t\to(client.browserVersion).equals(7)\n\t\to(client.device).equals(DeviceType.DESKTOP)\n\t\to(client.isMobileDevice()).equals(false)\n\t})\n\to(\"ClientDetector detect safari 8 on OS X\", () => {\n\t\tclient.init(\"Mozilla/5.0 (Macintosh Intel Mac OS X 10_10_1) AppleWebKit/600.1.25 (KHTML, like Gecko) Version/8.0 Safari/600.1.25\", \"Linux\")\n\t\to(client.browser).equals(BrowserType.SAFARI)\n\t\to(client.browserVersion).equals(8)\n\t\to(client.device).equals(DeviceType.DESKTOP)\n\t\to(client.isMobileDevice()).equals(false)\n\t})\n\to(\"palemoon gets classified as other, linux\", function () {\n\t\tclient.init(\"Mozilla/5.0 (X11; Linux x86_64; rv:68.0) Gecko/20100101 Goanna/5.1 Firefox/68.0 PaleMoon/31.1.0\", \"Linux\")\n\t\tclient.browserVersion = 0\n\t\tclient.browser = BrowserType.OTHER\n\t})\n\to(\"palemoon gets classified as other, windows\", function () {\n\t\tclient.init(\"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:68.0) Gecko/20100101 Goanna/5.1 Firefox/68.0 PaleMoon/31.1.1\", \"Win32\")\n\t\tclient.browserVersion = 0\n\t\tclient.browser = BrowserType.OTHER\n\t})\n\n\to(\"ClientDetector detect safari 6.05 on OS X\", () => {\n\t\tclient.init(\"Mozilla/5.0 (Macintosh Intel Mac OS X 10_8_4) AppleWebKit/536.30.1 (KHTML, like Gecko) Version/6.0.5 Safari/536.30.1\", \"Linux\")\n\t\to(client.browser).equals(BrowserType.SAFARI)\n\t\to(client.browserVersion).equals(6)\n\t\to(client.device).equals(DeviceType.DESKTOP)\n\t\to(client.isMobileDevice()).equals(false)\n\t})\n\to(\"ClientDetector detect chrome on Android\", () => {\n\t\tclient.init(\n\t\t\t\"Mozilla/5.0 (Linux Android 4.1.1 HTC Desire X Build/JRO03C) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/32.0.1700.99 Mobile Safari/537.36\",\n\t\t\t\"Linux\",\n\t\t)\n\t\to(client.browser).equals(BrowserType.CHROME)\n\t\to(client.browserVersion).equals(32)\n\t\to(client.device).equals(DeviceType.ANDROID)\n\t\to(client.isMobileDevice()).equals(true)\n\t})\n\to(\"ClientDetector detect firefox on Android\", () => {\n\t\tclient.init(\"Mozilla/5.0 (Android Mobile rv:27.0) Gecko/27.0 Firefox/27.0\", \"Linux\")\n\t\to(client.browser).equals(BrowserType.FIREFOX)\n\t\to(client.browserVersion).equals(27)\n\t\to(client.device).equals(DeviceType.ANDROID)\n\t\to(client.isMobileDevice()).equals(true)\n\t})\n\to(\"ClientDetector detect android browser 4.1 on Android\", () => {\n\t\tclient.init(\n\t\t\t\"Mozilla/5.0 (Linux U Android 4.1.1, de-de HTC_Desire_X Build/JRO03C) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30\",\n\t\t\t\"Linux\",\n\t\t)\n\t\to(client.browser).equals(BrowserType.ANDROID)\n\t\to(client.browserVersion).equals(4.1)\n\t\to(client.device).equals(DeviceType.ANDROID)\n\t\to(client.isMobileDevice()).equals(true)\n\t})\n\to(\"ClientDetector detect opera 19 on Android\", () => {\n\t\tclient.init(\n\t\t\t\"Mozilla/5.0 (Linux Android 4.1.1 HTC One X+ Build/JRO03C) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/32.0.1700.72 Mobile Safari/537.36 OPR/19.0.1340.69721\",\n\t\t\t\"Linux\",\n\t\t)\n\t\to(client.browser).equals(BrowserType.OPERA)\n\t\to(client.browserVersion).equals(19)\n\t\to(client.device).equals(DeviceType.ANDROID)\n\t\to(client.isMobileDevice()).equals(true)\n\t})\n\to(\"ClientDetector detect chrome 34 on iphone\", () => {\n\t\tclient.init(\n\t\t\t\"Mozilla/5.0 (iPhone CPU iPhone OS 7_0_2 like Mac OS X) AppleWebKit/537.51.1 (KHTML, like Gecko) CriOS/34.0.1847.18 Mobile/11A501 Safari/9537.53\",\n\t\t\t\"Linux\",\n\t\t)\n\t\to(client.browser).equals(BrowserType.CHROME)\n\t\to(client.browserVersion).equals(34)\n\t\to(client.device).equals(DeviceType.IPHONE)\n\t\to(client.isMobileDevice()).equals(true)\n\t})\n\to.spec(\"app\", function () {\n\t\tlet prevMode\n\t\to.before(function () {\n\t\t\tprevMode = env.mode\n\t\t\tenv.mode = Mode.App\n\t\t})\n\t\to.after(function () {\n\t\t\tenv.mode = prevMode\n\t\t})\n\t\to(\"ClientDetector the android 4 in app mode supported\", () => {\n\t\t\tclient.init(\n\t\t\t\t\"Mozilla/5.0 (Linux U Android 4.0, de-de HTC_Desire_X Build/JRO03C) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30\",\n\t\t\t\t\"Linux\",\n\t\t\t)\n\t\t\to(client.browser).equals(BrowserType.ANDROID)\n\t\t\to(client.browserVersion).equals(4)\n\t\t\to(client.device).equals(DeviceType.ANDROID)\n\t\t\to(client.isMobileDevice()).equals(true)\n\t\t})\n\t\to(\"ClientDetector the android 3 in app mode not supported\", () => {\n\t\t\tclient.init(\n\t\t\t\t\"Mozilla/5.0 (Linux U Android 4.0, de-de HTC_Desire_X Build/JRO03C) AppleWebKit/534.30 (KHTML, like Gecko) Version/3.9 Mobile Safari/534.30\",\n\t\t\t\t\"Linux\",\n\t\t\t)\n\t\t\to(client.browser).equals(BrowserType.ANDROID)\n\t\t\to(client.browserVersion).equals(4)\n\t\t\to(client.device).equals(DeviceType.ANDROID)\n\t\t\to(client.isMobileDevice()).equals(true)\n\t\t})\n\t\to(\"ClientDetector apps on ios are supported\", () => {\n\t\t\tclient.init(\"Mozilla/5.0 (iPhone CPU iPhone OS 7_0_2 like Mac OS X) AppleWebKit\", \"Linux\")\n\t\t\to(client.browser).equals(BrowserType.SAFARI)\n\t\t\to(client.browserVersion).equals(7)\n\t\t\to(client.device).equals(DeviceType.IPHONE)\n\t\t\to(client.isMobileDevice()).equals(true)\n\t\t})\n\t\to(\"ClientDetector iceweasel browser are supported\", () => {\n\t\t\tclient.init(\"Mozilla/5.0 (X11 Linux x86_64 rv:37.0)  Gecko/20100101 Iceweasel/37.0.1\", \"Linux\")\n\t\t\to(client.browser).equals(BrowserType.FIREFOX)\n\t\t\to(client.browserVersion).equals(37)\n\t\t\to(client.device).equals(DeviceType.DESKTOP)\n\t\t\to(client.isMobileDevice()).equals(false)\n\t\t})\n\t\to(\"ClientDetector firefox os is supported\", () => {\n\t\t\tenv.mode = Mode.App\n\t\t\tclient.init(\"Mozilla/5.0 (Mobile rv:26.0) Gecko/26.0 Firefox/26.0\", \"Linux\")\n\t\t\to(client.browser).equals(BrowserType.FIREFOX)\n\t\t\to(client.browserVersion).equals(26)\n\t\t\to(client.device).equals(DeviceType.OTHER_MOBILE)\n\t\t\to(client.isMobileDevice()).equals(true)\n\t\t\tenv.mode = Mode.Browser\n\t\t})\n\t\to(\"ClientDetector firefox os tablet is supported\", () => {\n\t\t\tenv.mode = Mode.App\n\t\t\tclient.init(\"Mozilla/5.0 (Tablet rv:26.0) Gecko/26.0 Firefox/26.0\", \"Linux\")\n\t\t\to(client.browser).equals(BrowserType.FIREFOX)\n\t\t\to(client.browserVersion).equals(26)\n\t\t\to(client.device).equals(DeviceType.OTHER_MOBILE)\n\t\t\to(client.isMobileDevice()).equals(true)\n\t\t\tenv.mode = Mode.Browser\n\t\t})\n\t})\n\to(\"old Chrome is not supported\", function () {\n\t\tclient.init(\"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/37.0.2062.120 Safari/537.36\", \"Linux\")\n\t\to(client.isSupportedBrowserVersion()).equals(false)\n\t})\n\to(\"Chrome 55 is not supported\", function () {\n\t\tclient.init(\"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2062.120 Safari/537.36\", \"Linux\")\n\t\to(client.isSupportedBrowserVersion()).equals(false)\n\t})\n\to(\"newer Chrome is supported\", function () {\n\t\tclient.init(\"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2125.104 Safari/537.36\", \"Linux\")\n\t\to(client.isSupportedBrowserVersion()).equals(true)\n\t})\n\to(\"detect iPadOS\", function () {\n\t\t// Use hack with TouchEvent to detect iPad\n\t\t// @ts-ignore\n\t\twindow.TouchEvent = function () {}\n\n\t\tclient.init(\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15) AppleWebKit/605.1.15 (KHTML, like Gecko)\", \"MacIntel\")\n\t\to(client.device).equals(DeviceType.IPAD)\n\t\t// @ts-ignore\n\t\twindow.TouchEvent = undefined\n\t})\n})\n\no.spec(\"ClientDetector AppType test\", function () {\n\to.beforeEach(function () {\n\t\tenv.mode = Mode.App\n\t})\n\to(\"ClientDetector detect calendar app on Android\", () => {\n\t\tclient.init(\n\t\t\t\"Mozilla/5.0 (Linux Android 4.1.1 HTC Desire X Build/JRO03C) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/32.0.1700.99 Mobile Safari/537.36\",\n\t\t\t\"Linux\",\n\t\t\tAppType.Calendar,\n\t\t)\n\t\to(client.device).equals(DeviceType.ANDROID)\n\t\to(client.isMobileDevice()).equals(true)\n\t\to(client.getIdentifier()).equals(\"Android Calendar App\")\n\t})\n\n\to(\"ClientDetector detect calendar app on iPhone\", () => {\n\t\tclient.init(\n\t\t\t\"Mozilla/5.0 (iPhone CPU iPhone OS 7_0_2 like Mac OS X) AppleWebKit/537.51.1 (KHTML, like Gecko) Version/7.0 Mobile/11A501 Safari/9537.53\",\n\t\t\t\"Linux\",\n\t\t\tAppType.Calendar,\n\t\t)\n\t\to(client.device).equals(DeviceType.IPHONE)\n\t\to(client.isMobileDevice()).equals(true)\n\t\to(client.getIdentifier()).equals(\"iPhone Calendar App\")\n\t})\n\n\to(\"ClientDetector detect mail app on Android\", () => {\n\t\tclient.init(\n\t\t\t\"Mozilla/5.0 (Linux Android 4.1.1 HTC Desire X Build/JRO03C) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/32.0.1700.99 Mobile Safari/537.36\",\n\t\t\t\"Linux\",\n\t\t\tAppType.Mail,\n\t\t)\n\t\to(client.device).equals(DeviceType.ANDROID)\n\t\to(client.isMobileDevice()).equals(true)\n\t\to(client.getIdentifier()).equals(\"Android Mail App\")\n\t})\n\n\to(\"ClientDetector detect mail app on iPhone\", () => {\n\t\tclient.init(\n\t\t\t\"Mozilla/5.0 (iPhone CPU iPhone OS 7_0_2 like Mac OS X) AppleWebKit/537.51.1 (KHTML, like Gecko) Version/7.0 Mobile/11A501 Safari/9537.53\",\n\t\t\t\"Linux\",\n\t\t\tAppType.Mail,\n\t\t)\n\t\to(client.device).equals(DeviceType.IPHONE)\n\t\to(client.isMobileDevice()).equals(true)\n\t\to(client.getIdentifier()).equals(\"iPhone Mail App\")\n\t})\n\n\to(\"ClientDetector throws on wrong configuration\", () => {\n\t\tclient.init(\n\t\t\t\"Mozilla/5.0 (iPhone CPU iPhone OS 7_0_2 like Mac OS X) AppleWebKit/537.51.1 (KHTML, like Gecko) Version/7.0 Mobile/11A501 Safari/9537.53\",\n\t\t\t\"Linux\",\n\t\t\tAppType.Integrated,\n\t\t)\n\t\to(client.device).equals(DeviceType.IPHONE)\n\t\to(client.isMobileDevice()).equals(true)\n\t\to(() => client.getIdentifier()).throws(\"AppType.Integrated is not allowed for mobile apps\")\n\t})\n})\n","import o from \"@tutao/otest\"\nimport { getAvailableLanguageCode, getSubstitutedLanguageCode, lang } from \"../../../src/common/misc/LanguageViewModel.js\"\n// @ts-ignore[untyped-import]\nimport en from \"../../../src/mail-app/translations/en.js\"\n\no.spec(\"LanguageViewModelTests\", function () {\n\to(\n\t\t\"en is default language\",\n\t\tbrowser(async function () {\n\t\t\to.timeout(4500)\n\t\t\tawait lang.init(en)\n\t\t\to(lang.fallback).equals(en)\n\t\t}),\n\t)\n\to(\"getAvailableLanguage\", function () {\n\t\tconst cases = [\n\t\t\t[\"en\", \"en\"],\n\t\t\t[\"zh_CN\", \"zh\"],\n\t\t\t[\"zh_Hant\", \"zh_hant\"],\n\t\t\t[\"zh_HK\", \"zh_hant\"],\n\t\t\t[\"zh_TW\", \"zh_hant\"],\n\t\t\t[\"uk_ua\", \"uk\"],\n\t\t\t[\"de\", \"de\"],\n\t\t\t[\"a\", \"en\"],\n\t\t\t[\"clingon\", \"en\"],\n\t\t\t[\"pt_pt\", \"pt_pt\"],\n\t\t\t[\"pt_br\", \"pt_br\"],\n\t\t\t[\"fi\", \"fi\"],\n\t\t\t[\"fa\", \"fa_ir\"],\n\t\t]\n\t\tfor (const [k, r] of cases) o(getAvailableLanguageCode(k)).equals(r)\n\t})\n\to(\"_getSubstitutedLanguageCode\", function () {\n\t\tconst cases: [string, string | null][] = [\n\t\t\t[\"en\", \"en\"],\n\t\t\t[\"zh_hant\", \"zh_hant\"],\n\t\t\t[\"zh_HK\", \"zh_hant\"],\n\t\t\t[\"uk_ua\", \"uk\"],\n\t\t\t[\"de\", \"de\"],\n\t\t\t[\"a\", null],\n\t\t\t[\"clingon\", null],\n\t\t\t[\"pt_pt\", \"pt_pt\"],\n\t\t\t[\"pt_br\", \"pt_br\"],\n\t\t\t[\"fi\", \"fi\"],\n\t\t\t[\"fa\", \"fa_ir\"],\n\t\t]\n\t\tfor (const [k, r] of cases) {\n\t\t\to(getSubstitutedLanguageCode(k)).equals(r)\n\t\t}\n\t})\n\to(\"_getSubstitutedLanguageCodeWhitelabelCustomizations\", function () {\n\t\tconst globalSelf = typeof window == \"undefined\" ? global : window\n\t\tglobalSelf.whitelabelCustomizations = {\n\t\t\tgermanLanguageCode: \"de_sie\",\n\t\t}\n\t\to(getSubstitutedLanguageCode(\"de\")).equals(\"de_sie\")\n\t\tglobalSelf.whitelabelCustomizations = undefined\n\t})\n})\n","import o from \"@tutao/otest\"\nimport { formatNameAndAddress } from \"../../../../../src/common/api/common/utils/CommonFormatter.js\"\n\no.spec(\"CommonFormatterTest\", function () {\n\to(\"formatNameAndAddress\", function () {\n\t\to(formatNameAndAddress(\"\", \"\")).equals(\"\")\n\t\to(formatNameAndAddress(\"Bernd\", \"\")).equals(\"Bernd\")\n\t\to(formatNameAndAddress(\"Bernd\", \"\")).equals(\"Bernd\")\n\t\to(formatNameAndAddress(\"\", \"Hanomaghof\")).equals(\"Hanomaghof\")\n\t\to(formatNameAndAddress(\"Bernd\", \"Hanomaghof 2\\n30449 Hannover\")).equals(\"Bernd\\nHanomaghof 2\\n30449 Hannover\")\n\t\to(formatNameAndAddress(\"Bernd\", \"Hanomaghof 2\\n30449 Hannover\", \"FR\")).equals(\"Bernd\\nHanomaghof 2\\n30449 Hannover\\nFrance\")\n\t\to(formatNameAndAddress(\"\", \"\", \"DE\")).equals(\"Deutschland\")\n\t\to(formatNameAndAddress(\"a\", \"\", \"DE\")).equals(\"a\\nDeutschland\")\n\t})\n})\n","import o from \"@tutao/otest\"\nimport { lang, languageCodeToTag, languages } from \"../../../src/common/misc/LanguageViewModel.js\"\nimport { formatDate } from \"../../../src/common/misc/Formatter.js\"\nimport { BirthdayTypeRef } from \"../../../src/common/api/entities/tutanota/TypeRefs.js\"\nimport { _getNumDaysInMonth, parseBirthday, parseDate } from \"../../../src/common/misc/DateParser.js\"\nimport { createTestEntity } from \"../TestUtils.js\"\n\nconst parseDateWithFormatter = (text: string) => parseDate(text, (refdate) => formatDate(refdate))\nconst parseBirthdayWithFormatter = (text: string) => parseBirthday(text, (refdate) => formatDate(refdate))\n\no.spec(\"FormatterTest\", function () {\n\to(\n\t\t\"Intl and parse support for all supported locales\",\n\t\tbrowser(function () {\n\t\t\tlet referenceDate = new Date(2017, 5, 23)\n\n\t\t\tfor (let l of [...languages, { code: \"en_gb\", textId: \"\" }]) {\n\t\t\t\tlang._setLanguageTag(languageCodeToTag(l.code))\n\n\t\t\t\tlet formattedDate = formatDate(referenceDate)\n\n\t\t\t\t// exception case for lang code farsi and arabic because parse date can't handle persian or hindi numerals\n\t\t\t\tif (l.code.startsWith(\"fa\") || l.code.startsWith(\"ar\")) {\n\t\t\t\t\tconsole.log(\"Skipping parse \", l.code)\n\t\t\t\t} else {\n\t\t\t\t\tlet parsed = parseDateWithFormatter(formattedDate)\n\t\t\t\t\to(formatDate(parsed)).equals(formattedDate)(`invalid date parsing for lang ${l.code}: ${formatDate(parsed)}`)\n\t\t\t\t}\n\t\t\t}\n\t\t}),\n\t)\n\n\to(\n\t\t\"parse nice dates de\",\n\t\tbrowser(function () {\n\t\t\tlang._setLanguageTag(\"de\")\n\n\t\t\to(parseDateWithFormatter(\"29.02.2020\")).deepEquals(new Date(2020, 1, 29))\n\t\t\to(parseDateWithFormatter(\"03.05.2015\")).deepEquals(new Date(2015, 4, 3))\n\t\t\to(parseDateWithFormatter(\"1/4/21\")).deepEquals(new Date(2021, 3, 1))\n\t\t\to(parseDateWithFormatter(\"01-02\")).deepEquals(new Date(new Date().getFullYear(), 1, 1))\n\t\t}),\n\t)\n\n\to(\n\t\t\"parse nice dates en\",\n\t\tbrowser(function () {\n\t\t\tlang._setLanguageTag(\"en\")\n\n\t\t\to(parseDateWithFormatter(\"02.29.2020\")).deepEquals(new Date(2020, 1, 29))\n\t\t\to(parseDateWithFormatter(\"03.05.2015\")).deepEquals(new Date(2015, 2, 5))\n\t\t\to(parseDateWithFormatter(\"1/4/21\")).deepEquals(new Date(2021, 0, 4))\n\t\t\to(parseDateWithFormatter(\"01-02\")).deepEquals(new Date(new Date().getFullYear(), 0, 2))\n\t\t}),\n\t)\n\n\to(\n\t\t\"parse nice dates hu\",\n\t\tbrowser(function () {\n\t\t\tlang._setLanguageTag(\"hu\")\n\n\t\t\to(parseDateWithFormatter(\"2020.02.29\")).deepEquals(new Date(2020, 1, 29))\n\t\t\to(parseDateWithFormatter(\"2015.05.03\")).deepEquals(new Date(2015, 4, 3))\n\t\t\to(parseDateWithFormatter(\"21/4/15\")).deepEquals(new Date(2021, 3, 15))\n\t\t\to(parseDateWithFormatter(\"01-22\")).deepEquals(new Date(new Date().getFullYear(), 0, 22))\n\t\t}),\n\t)\n\n\to(\n\t\t\"parse date edge case :-)\",\n\t\tbrowser(function () {\n\t\t\tlang._setLanguageTag(\"de\")\n\n\t\t\to(parseDateWithFormatter(\"‎03/‎05/‎2015\")).deepEquals(new Date(2015, 4, 3)) // contains invisible left-to-right characters\n\t\t}),\n\t)\n\n\to(\n\t\t\"parse bad dates de\",\n\t\tbrowser(function () {\n\t\t\tlang._setLanguageTag(\"de\")\n\n\t\t\to(() => parseDateWithFormatter(\"31/06/2020\")).throws(Error)\n\t\t\to(() => parseDateWithFormatter(\"32/01/2020\")).throws(Error)\n\t\t\to(() => parseDateWithFormatter(\"29/02/2021\")).throws(Error)\n\t\t\to(() => parseDateWithFormatter(\"01.2015\")).throws(Error)\n\t\t\to(() => parseDateWithFormatter(\"05.2015\")).throws(Error)\n\t\t\to(() => parseDateWithFormatter(\"2015\")).throws(Error)\n\t\t\to(() => parseDateWithFormatter(\"2020.09.12\")).throws(Error)\n\t\t\to(() => parseDateWithFormatter(\"2020/12/19\")).throws(Error)\n\t\t\to(() => parseDateWithFormatter(\"05.2015.01\")).throws(Error)\n\t\t}),\n\t)\n\n\to(\n\t\t\"parse bad dates en\",\n\t\tbrowser(function () {\n\t\t\tlang._setLanguageTag(\"en\")\n\n\t\t\to(() => parseDateWithFormatter(\"06/31/2020\")).throws(Error)\n\t\t\to(() => parseDateWithFormatter(\"01/32/2020\")).throws(Error)\n\t\t\to(() => parseDateWithFormatter(\"02/29/2021\")).throws(Error)\n\t\t\to(() => parseDateWithFormatter(\"2015/01\")).throws(Error)\n\t\t\to(() => parseDateWithFormatter(\"2015/05/\")).throws(Error)\n\t\t\to(() => parseDateWithFormatter(\"2015\")).throws(Error)\n\t\t\to(() => parseDateWithFormatter(\"2020/09/12\")).throws(Error)\n\t\t\to(() => parseDateWithFormatter(\"2020.12.19\")).throws(Error)\n\t\t\to(() => parseDateWithFormatter(\"05/2015/01\")).throws(Error)\n\t\t}),\n\t)\n\n\to(\n\t\t\"parse bad dates hu\",\n\t\tbrowser(function () {\n\t\t\tlang._setLanguageTag(\"hu\")\n\n\t\t\to(() => parseDateWithFormatter(\"2020/06/31\")).throws(Error)\n\t\t\to(() => parseDateWithFormatter(\"2020/01/32\")).throws(Error)\n\t\t\to(() => parseDateWithFormatter(\"2021/02/29\")).throws(Error)\n\t\t\to(() => parseDateWithFormatter(\"2015/01\")).throws(Error)\n\t\t\to(() => parseDateWithFormatter(\"2015/05/\")).throws(Error)\n\t\t\to(() => parseDateWithFormatter(\"01.2015\")).throws(Error)\n\t\t\to(() => parseDateWithFormatter(\"05/2015\")).throws(Error)\n\t\t}),\n\t)\n\n\to(\n\t\t\"parseBirthdayGermanLocale\",\n\t\tbrowser(function () {\n\t\t\tlang._setLanguageTag(\"de-DE\")\n\n\t\t\to(parseBirthdayWithFormatter(\"\")).equals(null)(\"empty string\")\n\t\t\to(parseBirthdayWithFormatter(\"a\")).equals(null)(\"a\")\n\t\t\to(parseBirthdayWithFormatter(\"1.13.1950\")).equals(null)(\"1.13.1950\")\n\t\t\to(parseBirthdayWithFormatter(\"a.4.12\")).equals(null)(\"a.4.12\")\n\n\t\t\t_checkparseBirthdayWithFormatter(\"1a.1.2001\", 1, 1, 2001)\n\n\t\t\t_checkparseBirthdayWithFormatter(\"1.1.2001\", 1, 1, 2001)\n\n\t\t\t_checkparseBirthdayWithFormatter(\"1.12.2001\", 1, 12, 2001)\n\n\t\t\t_checkparseBirthdayWithFormatter(\"01.01.2001\", 1, 1, 2001)\n\n\t\t\t_checkparseBirthdayWithFormatter(\"01.12.2001\", 1, 12, 2001)\n\n\t\t\t_checkparseBirthdayWithFormatter(\"1.1.\", 1, 1, null)\n\n\t\t\t_checkparseBirthdayWithFormatter(\"1.1.2001\", 1, 1, 2001)\n\n\t\t\t_checkparseBirthdayWithFormatter(\"1.1.18\", 1, 1, 2018)\n\n\t\t\t_checkparseBirthdayWithFormatter(\"1.1.50\", 1, 1, 1950)\n\t\t}),\n\t)\n\n\to(\n\t\t\"parseWithFormatterUsLocale\",\n\t\tbrowser(function () {\n\t\t\tlang._setLanguageTag(\"en-US\")\n\n\t\t\to(parseBirthdayWithFormatter(\"\")).equals(null)\n\t\t\to(parseBirthdayWithFormatter(\"a\")).equals(null)\n\t\t\to(parseBirthdayWithFormatter(\"13/1/1950\")).equals(null)(\"13/1/1950\")\n\t\t\to(parseBirthdayWithFormatter(\"a/4/12\")).equals(null)(\"a/4/12\")\n\n\t\t\t_checkparseBirthdayWithFormatter(\"1a/1/2001\", 1, 1, 2001)\n\n\t\t\t_checkparseBirthdayWithFormatter(\"1/1/2001\", 1, 1, 2001)\n\n\t\t\t_checkparseBirthdayWithFormatter(\"12/1/2001\", 1, 12, 2001)\n\n\t\t\t_checkparseBirthdayWithFormatter(\"01/01/2001\", 1, 1, 2001)\n\n\t\t\t_checkparseBirthdayWithFormatter(\"12/01/2001\", 1, 12, 2001)\n\n\t\t\t_checkparseBirthdayWithFormatter(\"1/1\", 1, 1, null)\n\n\t\t\t_checkparseBirthdayWithFormatter(\"1/1/2001\", 1, 1, 2001)\n\n\t\t\t_checkparseBirthdayWithFormatter(\"1/1/18\", 1, 1, 2018)\n\n\t\t\t// It will fail in 2050. Hello from 2019!\n\t\t\t_checkparseBirthdayWithFormatter(\"1/1/50\", 1, 1, 1950)\n\t\t}),\n\t)\n\n\to(\"days of month\", function () {\n\t\to(_getNumDaysInMonth(1, 2021)).equals(31)\n\t\to(_getNumDaysInMonth(1, 2020)).equals(31)\n\t\to(_getNumDaysInMonth(2, 2021)).equals(28)\n\t\to(_getNumDaysInMonth(2, 2020)).equals(29)\n\t\to(_getNumDaysInMonth(3, 2021)).equals(31)\n\t\to(_getNumDaysInMonth(3, 2020)).equals(31)\n\t\to(_getNumDaysInMonth(4, 2021)).equals(30)\n\t\to(_getNumDaysInMonth(4, 2020)).equals(30)\n\t\to(_getNumDaysInMonth(5, 2021)).equals(31)\n\t\to(_getNumDaysInMonth(5, 2020)).equals(31)\n\t\to(_getNumDaysInMonth(6, 2021)).equals(30)\n\t\to(_getNumDaysInMonth(6, 2020)).equals(30)\n\t\to(_getNumDaysInMonth(7, 2021)).equals(31)\n\t\to(_getNumDaysInMonth(7, 2020)).equals(31)\n\t\to(_getNumDaysInMonth(8, 2021)).equals(31)\n\t\to(_getNumDaysInMonth(8, 2020)).equals(31)\n\t\to(_getNumDaysInMonth(9, 2021)).equals(30)\n\t\to(_getNumDaysInMonth(9, 2020)).equals(30)\n\t\to(_getNumDaysInMonth(10, 2021)).equals(31)\n\t\to(_getNumDaysInMonth(10, 2020)).equals(31)\n\t\to(_getNumDaysInMonth(11, 2021)).equals(30)\n\t\to(_getNumDaysInMonth(11, 2020)).equals(30)\n\t\to(_getNumDaysInMonth(12, 2021)).equals(31)\n\t\to(_getNumDaysInMonth(12, 2020)).equals(31)\n\t})\n\n\tfunction _checkparseBirthdayWithFormatter(text: string, expectedDay: number, expectedMonth: number, expectedYear: number | null | undefined) {\n\t\tlet expected = createTestEntity(BirthdayTypeRef)\n\t\texpected._id = \"\"\n\t\texpected.day = String(expectedDay)\n\t\texpected.month = String(expectedMonth)\n\t\texpected.year = expectedYear ? String(expectedYear) : null\n\t\tlet result = parseBirthdayWithFormatter(text)\n\n\t\tif (result) {\n\t\t\tresult._id = \"\"\n\t\t\tresult._type = expected._type\n\t\t}\n\n\t\to(result!).deepEquals(expected)\n\t}\n})\n","import o from \"@tutao/otest\"\nimport { urlify } from \"../../../../src/common/api/worker/Urlifier.js\"\no.spec(\"UrlifierTest\", function () {\n\to(\" validHtmlLinks\", function () {\n\t\t// html links\n\t\to(urlify(\"http://hello.it\")).equals('<a href=\"http://hello.it\" target=\"_blank\" rel=\"noopener noreferrer\">http://hello.it</a>')\n\t\to(urlify(\"https://hello.it\")).equals('<a href=\"https://hello.it\" target=\"_blank\" rel=\"noopener noreferrer\">https://hello.it</a>')\n\t\to(urlify(\"http://www.tutanota.de\")).equals('<a href=\"http://www.tutanota.de\" target=\"_blank\" rel=\"noopener noreferrer\">http://www.tutanota.de</a>')\n\t\to(urlify(\"https://www.tutanota.de\")).equals('<a href=\"https://www.tutanota.de\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.tutanota.de</a>')\n\t\t// email adresses\n\t\to(urlify(\"bed-free@tutanota.de\")).equals('<a href=\"mailto:bed-free@tutanota.de\" target=\"_blank\" rel=\"noopener noreferrer\">bed-free@tutanota.de</a>')\n\t})\n\to(\" invalidHtmlLinks\", function () {\n\t\t// twitter\n\t\to(urlify(\"@de_tutanota\")).equals(\"@de_tutanota\")\n\t\to(urlify(\"#de_tutanota\")).equals(\"#de_tutanota\")\n\t\t// no phone numbers\n\t\to(urlify(\"0511202801-0\")).equals(\"0511202801-0\")\n\t\to(urlify(\"+49511202801\")).equals(\"+49511202801\")\n\t\to(urlify(\"(555)555-5555\")).equals(\"(555)555-5555\")\n\t})\n})\n","import o from \"@tutao/otest\"\nimport {\n\t_BAD_SEQUENCES,\n\t_getNbrOfSequenceChars,\n\tgetPasswordStrength,\n\tisSecurePassword,\n\tscaleToVisualPasswordStrength,\n} from \"../../../src/common/misc/passwords/PasswordUtils.js\"\n\no.spec(\"PasswordUtilsTest\", function () {\n\tfunction checkStrength(pw, min, max) {\n\t\t//\t\tconsole.log(pw, min, max, getPasswordStrength(pw));\n\t\to(min <= getPasswordStrength(pw, [])).equals(true)(\n\t\t\t\"Passphrase \" + pw + \" strength: \" + getPasswordStrength(pw, []) + \" is smaller than expected \" + min,\n\t\t)\n\t\to(getPasswordStrength(pw, []) <= max).equals(true)(\"Passphrase \" + pw + \" strength: \" + getPasswordStrength(pw, []) + \" is bigger than expected \" + max)\n\t}\n\n\to(\"password strength\", function () {\n\t\tcheckStrength(\"\", 0, 0)\n\t\tcheckStrength(\"a\", 0, 20)\n\t\tcheckStrength(\"aX\", 0, 30)\n\t\tcheckStrength(\"aX%\", 10, 35)\n\t\tcheckStrength(\"aX%7\", 20, 45)\n\t\tcheckStrength(\"aX%7#\", 30, 60)\n\t\tcheckStrength(\"aX%7#+\", 40, 70)\n\t\tcheckStrength(\"aX%7#+t\", 50, 80)\n\t\tcheckStrength(\"aX%7#+tO\", 80, 100)\n\t\tcheckStrength(\"dasisteinpasswort\", 50, 70)\n\t\tcheckStrength(\"das-ist-ein-passwort\", 80, 100)\n\t\tcheckStrength(\"helloWorld!\", 80, 90)\n\t\tcheckStrength(\"testtesttesttest\", 0, 20)\n\t\tcheckStrength(\"!*$%/()=\", 30, 50)\n\t\tcheckStrength(\"abcdefgh\", 10, 30)\n\t\tcheckStrength(\"mjudleugdh\", 50, 70)\n\t\tcheckStrength(\"12345678\", 10, 30)\n\t\tcheckStrength(\"abcde1gh\", 30, 50)\n\t\tcheckStrength(\"ab!de1gh\", 60, 79)\n\t\tcheckStrength(\"987654321\", 10, 30)\n\t\tcheckStrength(\"11111111111111111111\", 0, 20)\n\t\tcheckStrength(\"Aihlod$1\", 60, 79)\n\t\tcheckStrength(\"ai$hl1oD\", 70, 79)\n\t\tcheckStrength(\"Ai$h1oDl\", 80, 90)\n\t\tcheckStrength(\"!i$hL1D\", 70, 79)\n\t\tcheckStrength(\"Ahagitubitbl\", 70, 79)\n\t\tcheckStrength(\"Ahagitubitblz\", 80, 90)\n\t})\n\to(\"getNbrOfSequenceChars\", function () {\n\t\to(_getNbrOfSequenceChars(\"qwertz\", _BAD_SEQUENCES, true)).equals(6) // german keyboard\n\n\t\to(_getNbrOfSequenceChars(\"qwerty\", _BAD_SEQUENCES, true)).equals(6) // english keyboard\n\n\t\to(_getNbrOfSequenceChars(\"4567890\", _BAD_SEQUENCES, true)).equals(7) // number sequence\n\n\t\to(_getNbrOfSequenceChars(\"m,.-\", _BAD_SEQUENCES, true)).equals(4) // sequence with special characters\n\n\t\to(_getNbrOfSequenceChars(\"3kfh5678awf\", _BAD_SEQUENCES, true)).equals(4) // sequence in center\n\n\t\to(_getNbrOfSequenceChars(\"3kfhkjhgfawf\", _BAD_SEQUENCES, true)).equals(5) // backward sequence in center\n\n\t\to(_getNbrOfSequenceChars(\"3kfhkjhgfawf\", _BAD_SEQUENCES, false)).equals(0) // backward sequence in center no reverse\n\n\t\to(_getNbrOfSequenceChars(\"a2345ngb890d\", _BAD_SEQUENCES, true)).equals(4) // two separate sequences\n\n\t\to(_getNbrOfSequenceChars(\"a2345890d\", _BAD_SEQUENCES, true)).equals(4) // two adjoining sequences\n\n\t\to(_getNbrOfSequenceChars(\"r56b\", _BAD_SEQUENCES, true)).equals(0) // two digit sequence is not found\n\n\t\to(_getNbrOfSequenceChars(\"tzuio54\", _BAD_SEQUENCES, true)).equals(5) // sequence at the beginning\n\n\t\to(_getNbrOfSequenceChars(\"54tzuio\", _BAD_SEQUENCES, true)).equals(5) // sequence at the end\n\t})\n\to(\"scalueToVisualPasswordStrength\", function () {\n\t\to(scaleToVisualPasswordStrength(0)).equals(0) // german keyboard\n\n\t\to(scaleToVisualPasswordStrength(10)).equals(12.5) // german keyboard\n\n\t\to(scaleToVisualPasswordStrength(79)).equals(98.75) // german keyboard\n\n\t\to(scaleToVisualPasswordStrength(80)).equals(100) // german keyboard\n\n\t\to(scaleToVisualPasswordStrength(100)).equals(100) // german keyboard\n\t})\n\to(\"isSecure\", function () {\n\t\to(isSecurePassword(0)).equals(false) // german keyboard\n\t\to(isSecurePassword(10)).equals(false) // german keyboard\n\t\to(isSecurePassword(63)).equals(false) // german keyboard\n\t\to(isSecurePassword(64)).equals(true) // german keyboard\n\t\to(isSecurePassword(79)).equals(true) // german keyboard\n\t\to(isSecurePassword(80)).equals(true) // german keyboard\n\t})\n\to(\"calculatePasswordStrength -> reserved strings are case insensitive\", function () {\n\t\to(getPasswordStrength(\"7jeGABvliT\", [\"7jegabvlit\"])).equals(54)\n\t\to(getPasswordStrength(\"7jegabvlit\", [\"7jegabvlit\"])).equals(37)\n\t\to(getPasswordStrength(\"7jegabvlit\", [])).equals(77)\n\t\to(getPasswordStrength(\"7jegabvlit\", [])).equals(getPasswordStrength(\"7jegabvlit\", [\"7390535\"]))\n\t\to(getPasswordStrength(\"7jegabvlit\", [\"7jegabvlit\"])).equals(getPasswordStrength(\"7JEGABVLIT\", [\"7jegabvlit\"]))\n\t\to(getPasswordStrength(\"7jegabvlit\", [\"7jeGABvliT\"])).equals(getPasswordStrength(\"7jegabvlit\", [\"7jegabvlit\"]))\n\t})\n})\n","import o from \"@tutao/otest\"\nimport { BYTE_RANGE, PasswordGenerator } from \"../../../src/common/misc/passwords/PasswordGenerator.js\"\nimport { downcast } from \"@tutao/tutanota-utils\"\n\no.spec(\"PasswordGenerator\", function () {\n\tlet generator: PasswordGenerator\n\tlet randomNumber: number\n\tconst DICTIONARY = [\n\t\t\"dash\",\n\t\t\"flash\",\n\t\t\"neighbour\",\n\t\t\"escape\",\n\t\t\"office\",\n\t\t\"season\",\n\t\t\"priority\",\n\t\t\"liberty\",\n\t\t\"bottom\",\n\t\t\"summary\",\n\t\t\"affair\",\n\t\t\"peak\",\n\t\t\"lazy\",\n\t\t\"method\",\n\t\t\"computer\",\n\t\t\"smooth\",\n\t\t\"muzzle\",\n\t\t\"fine\",\n\t\t\"assume\",\n\t\t\"distant\",\n\t\t\"fling\",\n\t\t\"give\",\n\t\t\"borrow\",\n\t\t\"conservation\",\n\t]\n\n\to.beforeEach(function () {\n\t\trandomNumber = 0\n\t\tconst randomizerMock = {\n\t\t\tasync generateRandomNumber() {\n\t\t\t\treturn randomNumber\n\t\t\t},\n\t\t}\n\n\t\tgenerator = new PasswordGenerator(randomizerMock, [])\n\t})\n\n\to.spec(\"generate random data\", function () {\n\t\to(\"generate random number in range\", async function () {\n\t\t\t// min possible number that can be generated\n\t\t\to(await generator.generateRandomNumberInRange(10)).equals(0)\n\n\t\t\t// max possible number that can be generated\n\t\t\t// range is not included, meaning that for range 10 the max number will be 9\n\t\t\trandomNumber = BYTE_RANGE - 1\n\t\t\to(await generator.generateRandomNumberInRange(10)).equals(9)\n\n\t\t\t// check edge cases to see if scaling is uniform/correct\n\t\t\t// easiest way to check edge cases is with a graphic calculator, type in functions and check where they intersect\n\t\t\t// TODO these test do not work anymore as we changed the range from 3Bytes to 2Bytes\n\n\t\t\t// const lowerBoundFor7 = 11744052\n\t\t\t// const upperBoundFor7 = 13421772\n\t\t\t//\n\t\t\t// randomNumber = lowerBoundFor7 - 1\n\t\t\t// o(await generator.generateRandomNumberInRange(10)).equals(6)\n\t\t\t// randomNumber = lowerBoundFor7\n\t\t\t// o(await generator.generateRandomNumberInRange(10)).equals(7)\n\t\t\t//\n\t\t\t// randomNumber = upperBoundFor7\n\t\t\t// o(await generator.generateRandomNumberInRange(10)).equals(7)\n\t\t\t// randomNumber = upperBoundFor7 + 1\n\t\t\t// o(await generator.generateRandomNumberInRange(10)).equals(8)\n\t\t})\n\n\t\to(\"there should be no duplicates in the generated password\", async function () {\n\t\t\tconst passwordGenerator = new PasswordGenerator(downcast({}), [\"a\", \"B\", \"c\", \"d\", \"c\", \"e\", \"f\", \"g\"])\n\n\t\t\tlet i = 0\n\t\t\tpasswordGenerator.generateRandomNumberInRange = async function () {\n\t\t\t\treturn i++\n\t\t\t}\n\n\t\t\tconst randomPassword = await passwordGenerator.generateRandomPassphrase()\n\t\t\to(randomPassword).equals(\"a B c d e f\")\n\t\t})\n\t})\n})\n","import o from \"@tutao/otest\"\nimport { PasswordModel } from \"../../../src/common/settings/PasswordForm.js\"\nimport { matchers, object, when } from \"testdouble\"\nimport { LoginController } from \"../../../src/common/api/main/LoginController.js\"\nimport { UsageTestController } from \"@tutao/tutanota-usagetests\"\n\no.spec(\"PasswordModelTest\", function () {\n\tlet passwordModel: PasswordModel | null = null\n\tlet reservedStrings: string[] = []\n\n\to.beforeEach(function () {\n\t\treservedStrings = []\n\t\tlet logins: LoginController = object()\n\t\tlet usageTestController: UsageTestController = object()\n\t\twhen(usageTestController.getTest(matchers.anything())).thenReturn({})\n\t\tpasswordModel = new PasswordModel(usageTestController, logins, {\n\t\t\tcheckOldPassword: false,\n\t\t\tenforceStrength: true,\n\t\t\treservedStrings: () => reservedStrings,\n\t\t})\n\t})\n\n\to.spec(\"calculatePasswordStrength -> reserved strings are considered\", function () {\n\t\to(\"generate random number in range\", async function () {\n\t\t\tpasswordModel!.setNewPassword(\"7jeGABvliT\")\n\t\t\to(passwordModel!.getPasswordStrength()).equals(80)\n\n\t\t\treservedStrings = [\"7jeGABvliT\"]\n\t\t\tpasswordModel?.recalculatePasswordStrength()\n\t\t\to(passwordModel!.getPasswordStrength()).equals(54)\n\t\t})\n\t})\n})\n","import o from \"@tutao/otest\"\nimport type { DomMutation } from \"../../../../src/common/gui/animation/Animations.js\"\nimport { alpha, AlphaEnum, Animation, animations, DefaultAnimationTime, transform, TransformEnum } from \"../../../../src/common/gui/animation/Animations.js\"\nimport { ease } from \"../../../../src/common/gui/animation/Easing.js\"\nimport { client } from \"../../../../src/common/misc/ClientDetector.js\"\nimport { DeviceType } from \"../../../../src/common/misc/ClientConstants.js\"\nimport { assertNotNull, downcast } from \"@tutao/tutanota-utils\"\nimport { spy } from \"@tutao/tutanota-test-utils\"\n\nclient.device = DeviceType.DESKTOP\n\nglobalThis.HTMLElement =\n\twindow.HTMLElement ||\n\tclass HTMLElement {\n\t\tstyle: CSSStyleDeclaration\n\n\t\tconstructor() {\n\t\t\tthis.style = downcast({})\n\t\t}\n\t}\n\nconst defaultMutation: DomMutation = {\n\tupdateDom(target, percent, easing) {},\n\twillChange() {\n\t\treturn \"nothing\"\n\t},\n}\n\nfunction newTarget() {\n\treturn document.createElement(\"div\")\n}\n\no.spec(\"Animations\", function () {\n\to.spec(\"base\", function () {\n\t\tlet originalRequestAnimationFrame = window.requestAnimationFrame\n\t\tlet originalPerformance = window.performance\n\t\tlet newPerformance = {\n\t\t\tnow: () => time,\n\t\t}\n\n\t\tlet time\n\t\to.beforeEach(function () {\n\t\t\tanimations.activeAnimations = []\n\t\t\tObject.defineProperty(window, \"performance\", {\n\t\t\t\tget() {\n\t\t\t\t\treturn newPerformance\n\t\t\t\t},\n\t\t\t})\n\t\t})\n\t\to.after(function () {\n\t\t\twindow.requestAnimationFrame = originalRequestAnimationFrame\n\t\t\tObject.defineProperty(window, \"performance\", {\n\t\t\t\tget() {\n\t\t\t\t\treturn originalPerformance\n\t\t\t\t},\n\t\t\t})\n\t\t})\n\n\t\to(\"animation is created on add with default delay of 0\", function () {\n\t\t\tlet target = newTarget()\n\n\t\t\twindow.requestAnimationFrame = spy()\n\n\t\t\tanimations.add([target], defaultMutation)\n\n\t\t\to(animations.activeAnimations.length).equals(1)\n\t\t\to(animations.activeAnimations[0].delay).equals(0)\n\t\t\to(animations.activeAnimations[0].mutations).deepEquals([defaultMutation])\n\t\t\to(animations.activeAnimations[0].target).equals(target)\n\t\t})\n\n\t\to(\"single element animation with delay\", function () {\n\t\t\tlet target = newTarget()\n\n\t\t\twindow.requestAnimationFrame = spy()\n\n\t\t\tanimations.add([target], defaultMutation, { delay: 55 })\n\n\t\t\to(animations.activeAnimations.length).equals(1)\n\t\t\to(animations.activeAnimations[0].delay).equals(55)\n\t\t\to(animations.activeAnimations[0].mutations).deepEquals([defaultMutation])\n\t\t\to(animations.activeAnimations[0].target).equals(target)\n\t\t})\n\n\t\to(\"adding to an empty queue triggers the animation\", function () {\n\t\t\to(animations.activeAnimations).deepEquals([])\n\t\t\tlet target = newTarget()\n\n\t\t\twindow.requestAnimationFrame = spy()\n\t\t\tanimations.add([target], defaultMutation)\n\n\t\t\to(window.requestAnimationFrame.args).deepEquals([animations._animate])\n\t\t})\n\t\to(\"adding to a non empty queue does not trigger multiple animation frame requests\", function () {\n\t\t\to(animations.activeAnimations).deepEquals([])\n\t\t\tlet target = newTarget()\n\n\t\t\twindow.requestAnimationFrame = spy()\n\t\t\tanimations.add([target], defaultMutation)\n\t\t\tanimations.add([target], defaultMutation)\n\t\t\to(window.requestAnimationFrame.callCount).equals(1)\n\t\t})\n\n\t\to(\"unfinished animations are invoked and a new animation frame is requested\", function () {\n\t\t\ttime = 5\n\t\t\tlet animation = downcast({\n\t\t\t\tanimateFrame: spy(),\n\t\t\t\tisFinished: spy(),\n\t\t\t\tresolve: spy(),\n\t\t\t})\n\t\t\tanimations.activeAnimations = [animation]\n\n\t\t\twindow.requestAnimationFrame = spy()\n\n\t\t\tanimations._animate()\n\n\t\t\to(animation.animateFrame.args).deepEquals([time])\n\t\t\to(animations.activeAnimations).deepEquals([animation])\n\t\t\to(window.requestAnimationFrame.args).deepEquals([animations._animate])\n\t\t})\n\n\t\to(\"finished animations are removed from the queue and resolved\", function () {\n\t\t\tlet animation = downcast({\n\t\t\t\tanimateFrame: spy(),\n\t\t\t\tisFinished: () => true,\n\t\t\t\tresolve: spy(),\n\t\t\t})\n\t\t\tanimations.activeAnimations = [animation]\n\n\t\t\twindow.requestAnimationFrame = spy()\n\n\t\t\tanimations._animate()\n\n\t\t\to(animation.animateFrame.callCount).equals(1)\n\t\t\to(animations.activeAnimations).deepEquals([])\n\n\t\t\to(window.requestAnimationFrame.callCount).equals(0)\n\t\t})\n\n\t\to(\"stagger\", function () {\n\t\t\tconst targets = [newTarget(), newTarget(), newTarget()]\n\n\t\t\twindow.requestAnimationFrame = spy()\n\n\t\t\tanimations.add(targets, defaultMutation, { stagger: 55 })\n\n\t\t\to(window.requestAnimationFrame.callCount).equals(1)\n\t\t\to(animations.activeAnimations.length).equals(3)\n\t\t\to(animations.activeAnimations[0].delay).equals(0)\n\t\t\to(animations.activeAnimations[1].delay).equals(55)\n\t\t\to(animations.activeAnimations[2].delay).equals(110)\n\n\t\t\t// resolve function is only initialized for the last animation\n\t\t\to(animations.activeAnimations[0].resolve).equals(null)\n\t\t\to(animations.activeAnimations[1].resolve).equals(null)\n\t\t\to(animations.activeAnimations[2].resolve instanceof Function).equals(true)\n\n\t\t\t// remove difference for equality check\n\t\t\tanimations.activeAnimations[0].delay = 0\n\t\t\tanimations.activeAnimations[1].delay = 0\n\t\t\tanimations.activeAnimations[2].delay = 0\n\t\t\tanimations.activeAnimations[2].resolve = null\n\t\t\to(JSON.stringify(animations.activeAnimations[0])).equals(JSON.stringify(animations.activeAnimations[1]))\n\t\t\to(JSON.stringify(animations.activeAnimations[1])).equals(JSON.stringify(animations.activeAnimations[2]))\n\t\t})\n\n\t\to(\"start and finish\", function () {\n\t\t\tlet target = newTarget()\n\t\t\tlet mutation = Object.assign({}, defaultMutation, { updateDom: spy() })\n\t\t\tlet resolve = spy()\n\t\t\tlet a = new Animation(target, [mutation], resolve, 0, ease.linear)\n\n\t\t\to(a.animationStart).equals(null)\n\t\t\to(a.duration).equals(DefaultAnimationTime)\n\t\t\to(a.isFinished()).equals(false)\n\n\t\t\ta.animateFrame(4)\n\t\t\to(a.animationStart).equals(4)\n\t\t\to(a.runTime).equals(0)\n\t\t\to(a.isFinished()).equals(false)\n\n\t\t\ta.animateFrame(203)\n\t\t\to(a.animationStart).equals(4)\n\t\t\to(a.runTime).equals(199)\n\t\t\to(a.isFinished()).equals(false)\n\n\t\t\ta.animateFrame(204)\n\n\t\t\to(a.animationStart).equals(4)\n\t\t\to(a.runTime).equals(200)\n\t\t\to(a.isFinished()).equals(true)\n\n\t\t\ta.animateFrame(304)\n\n\t\t\to(a.animationStart).equals(4)\n\t\t\to(a.runTime).equals(200)\n\t\t\to(a.isFinished()).equals(true)\n\t\t})\n\n\t\to(\"delay and domMutation\", function () {\n\t\t\tlet target = newTarget()\n\t\t\tlet mutation = Object.assign({}, defaultMutation, { updateDom: spy() })\n\t\t\tlet resolve = spy()\n\t\t\tlet delay = 150\n\t\t\tlet a = new Animation(target, [mutation], resolve, delay, ease.linear)\n\n\t\t\to(a.animationStart).equals(null)\n\t\t\to(a.duration).equals(DefaultAnimationTime)\n\t\t\to(a.isFinished()).equals(false)\n\n\t\t\ta.animateFrame(0)\n\t\t\to(a.animationStart).equals(0)\n\t\t\to(a.runTime).equals(-150)\n\t\t\to(a.isFinished()).equals(false)\n\t\t\to(mutation.updateDom.callCount).equals(0)\n\n\t\t\ta.animateFrame(150)\n\t\t\to(a.animationStart).equals(0)\n\t\t\to(a.runTime).equals(0)\n\t\t\to(a.isFinished()).equals(false)\n\t\t\to(mutation.updateDom.callCount).equals(1)\n\t\t\to(mutation.updateDom.args).deepEquals([target, assertNotNull(a.runTime) / a.duration, ease.linear])\n\n\t\t\ta.animateFrame(250)\n\t\t\to(a.animationStart).equals(0)\n\t\t\to(a.runTime).equals(100)\n\t\t\to(a.isFinished()).equals(false)\n\t\t\to(mutation.updateDom.callCount).equals(2)\n\t\t\to(mutation.updateDom.args).deepEquals([target, assertNotNull(a.runTime) / a.duration, ease.linear])\n\n\t\t\ta.animateFrame(350)\n\t\t\to(a.animationStart).equals(0)\n\t\t\to(a.runTime).equals(200)\n\t\t\to(a.isFinished()).equals(true)\n\t\t\to(mutation.updateDom.callCount).equals(3)\n\t\t\to(mutation.updateDom.args).deepEquals([target, assertNotNull(a.runTime) / a.duration, ease.linear])\n\t\t})\n\t})\n\n\to.spec(\"transform dom updates\", function () {\n\t\to(\"translateX with constant y\", function () {\n\t\t\tconst target = newTarget()\n\n\t\t\tlet m = transform(TransformEnum.TranslateX, 0, 120).chain(TransformEnum.TranslateY, 8, 8)\n\n\t\t\tclient.device = DeviceType.DESKTOP\n\t\t\tm.updateDom(target, 0 / 200, ease.linear)\n\t\t\to(target.style.transform).equals(\"translateX(0px) translateY(8px)\")\n\n\t\t\tm.updateDom(target, 20 / 200, ease.linear)\n\t\t\to(target.style.transform).equals(\"translateX(12px) translateY(8px)\")\n\n\t\t\tm.updateDom(target, 199 / 200, ease.linear)\n\t\t\to(target.style.transform).equals(\"translateX(119.4px) translateY(8px)\")\n\n\t\t\tm.updateDom(target, 200 / 200, ease.linear)\n\t\t\to(target.style.transform).equals(\"translateX(120px) translateY(8px)\")\n\n\t\t\tclient.device = DeviceType.OTHER_MOBILE\n\t\t\tm.updateDom(target, 20 / 200, ease.linear)\n\t\t\to(target.style.transform).equals(\"translateX(12px) translateY(8px)\")\n\t\t})\n\n\t\to(\"translateY\", function () {\n\t\t\tconst target = newTarget()\n\n\t\t\tlet m = transform(TransformEnum.TranslateY, 0, 120)\n\n\t\t\tclient.device = DeviceType.DESKTOP\n\t\t\tm.updateDom(target, 0 / 200, ease.linear)\n\t\t\to(target.style.transform).equals(\"translateY(0px)\")\n\n\t\t\tm.updateDom(target, 20 / 200, ease.linear)\n\t\t\to(target.style.transform).equals(\"translateY(12px)\")\n\t\t})\n\n\t\to(\"force gpu on mobile devices (not on desktop)\", function () {\n\t\t\tconst target = newTarget()\n\n\t\t\tlet m = transform(TransformEnum.TranslateX, 0, 120)\n\n\t\t\tclient.device = DeviceType.DESKTOP\n\t\t\tm.updateDom(target, 0 / 200, ease.linear)\n\t\t\to(target.style.transform).equals(\"translateX(0px)\")\n\n\t\t\tclient.device = DeviceType.OTHER_MOBILE\n\t\t\tm.updateDom(target, 0 / 200, ease.linear)\n\t\t\to(target.style.transform).equals(\"translateX(0px)\")\n\t\t})\n\n\t\to(\"rotate\", function () {\n\t\t\tconst target = newTarget()\n\n\t\t\tlet m = transform(TransformEnum.RotateY, 0, 120)\n\n\t\t\tclient.device = DeviceType.DESKTOP\n\t\t\tm.updateDom(target, 0 / 200, ease.linear)\n\t\t\to(target.style.transform).equals(\"rotateY(0deg)\")\n\n\t\t\tm.updateDom(target, 20 / 200, ease.linear)\n\t\t\to(target.style.transform).equals(\"rotateY(12deg)\")\n\t\t})\n\t})\n\n\to.spec(\"Alpha\", function () {\n\t\to(\"background-color\", function () {\n\t\t\tconst target = newTarget()\n\n\t\t\tlet m = alpha(AlphaEnum.BackgroundColor, \"#000000\", 0, 1)\n\n\t\t\tclient.device = DeviceType.DESKTOP\n\t\t\tm.updateDom(target, 0 / 200, ease.linear)\n\t\t\to(target.style.backgroundColor).equals(\"rgba(0, 0, 0, 0)\")\n\n\t\t\tm.updateDom(target, 100 / 200, ease.linear)\n\t\t\to(target.style.backgroundColor).equals(\"rgba(0, 0, 0, 0.5)\")\n\n\t\t\tm.updateDom(target, 200 / 200, ease.linear)\n\n\t\t\tbrowser(() => {\n\t\t\t\to(target.style.backgroundColor).equals(\"rgba(0, 0, 0)\")\n\t\t\t})\n\t\t\tnode(() => {\n\t\t\t\to(target.style.backgroundColor).equals(\"rgba(0, 0, 0, 1)\")\n\t\t\t})\n\t\t})\n\n\t\to(\"color\", function () {\n\t\t\tconst target = newTarget()\n\n\t\t\tlet m = alpha(AlphaEnum.Color, \"#ffffff\", 0, 1)\n\n\t\t\tclient.device = DeviceType.DESKTOP\n\t\t\tm.updateDom(target, 0 / 200, ease.linear)\n\t\t\to(target.style.color).equals(\"rgba(255, 255, 255, 0)\")\n\n\t\t\tm.updateDom(target, 100 / 200, ease.linear)\n\t\t\to(target.style.color).equals(\"rgba(255, 255, 255, 0.5)\")\n\n\t\t\tm.updateDom(target, 200 / 200, ease.linear)\n\n\t\t\tbrowser(() => {\n\t\t\t\to(target.style.color).equals(\"rgba(255, 255, 255)\")\n\t\t\t})\n\t\t\tnode(() => {\n\t\t\t\to(target.style.color).equals(\"rgba(255, 255, 255, 1)\")\n\t\t\t})\n\t\t})\n\t})\n})\n","import o from \"@tutao/otest\"\nimport { ThemeController } from \"../../../src/common/gui/ThemeController.js\"\nimport type { ThemeCustomizations } from \"../../../src/common/misc/WhitelabelCustomizations.js\"\nimport { downcast } from \"@tutao/tutanota-utils\"\nimport { ThemeFacade } from \"../../../src/common/native/common/generatedipc/ThemeFacade\"\nimport { HtmlSanitizer } from \"../../../src/common/misc/HtmlSanitizer.js\"\nimport { matchers, object, when } from \"testdouble\"\nimport { verify } from \"@tutao/tutanota-test-utils\"\nimport { Theme } from \"../../../src/common/gui/theme.js\"\nimport { AppType } from \"../../../src/common/misc/ClientConstants.js\"\n\no.spec(\"ThemeController\", function () {\n\tlet themeManager: ThemeController\n\tlet themeFacadeMock: ThemeFacade\n\tlet htmlSanitizerMock: HtmlSanitizer\n\tlet theme: Partial<Theme>\n\n\to.beforeEach(async function () {\n\t\ttheme = {}\n\t\tthemeFacadeMock = object()\n\t\twhen(themeFacadeMock.getThemes()).thenResolve([])\n\n\t\thtmlSanitizerMock = object()\n\t\t// this is called in the constructor. Eh!\n\t\twhen(htmlSanitizerMock.sanitizeHTML(matchers.anything())).thenReturn({\n\t\t\thtml: \"sanitized\",\n\t\t\tblockedExternalContent: 0,\n\t\t\tinlineImageCids: [],\n\t\t\tlinks: [],\n\t\t})\n\t\tthemeManager = new ThemeController(theme, themeFacadeMock, () => Promise.resolve(htmlSanitizerMock), AppType.Integrated)\n\t\tawait themeManager.initialized\n\t})\n\n\to(\"updateCustomTheme\", async function () {\n\t\tconst theme: ThemeCustomizations = downcast({\n\t\t\tthemeId: \"HelloFancyId\",\n\t\t\tcontent_bg: \"#fffeee\",\n\t\t\tlogo: \"unsanitized_logo\",\n\t\t\tbase: \"light\",\n\t\t})\n\n\t\tawait themeManager.applyCustomizations(theme)\n\n\t\tconst captor = matchers.captor()\n\t\tverify(themeFacadeMock.setThemes(captor.capture()))\n\t\tconst savedTheme = captor.values![0][4]\n\t\to(savedTheme.themeId).equals(\"HelloFancyId\")\n\t\to(savedTheme.content_bg).equals(\"#fffeee\")\n\t\to(savedTheme.logo).equals(\"sanitized\")\n\t\to(savedTheme.content_fg).equals(themeManager.getDefaultTheme().content_fg)\n\t\to(themeManager.getCurrentTheme().logo).equals(\"sanitized\")\n\t})\n\n\to(\"when using automatic theme and preferring dark, dark theme is applied, and themeId is automatic\", async function () {\n\t\twhen(themeFacadeMock.getThemePreference()).thenResolve(\"auto:light|dark\")\n\t\twhen(themeFacadeMock.prefersDark()).thenResolve(true)\n\n\t\tawait themeManager.reloadTheme()\n\n\t\to(themeManager.getCurrentTheme().themeId).equals(\"dark\")\n\t\to(themeManager.themeId).equals(\"dark\")\n\t\to(themeManager.themePreference).equals(\"auto:light|dark\")\n\t})\n\n\to(\"when using automatic theme and preferring light, light theme is applied, and themeId is automatic\", async function () {\n\t\twhen(themeFacadeMock.getThemePreference()).thenResolve(\"auto:light|dark\")\n\t\twhen(themeFacadeMock.prefersDark()).thenResolve(false)\n\n\t\tawait themeManager.reloadTheme()\n\n\t\to(themeManager.getCurrentTheme().themeId).equals(\"light\")\n\t\to(themeManager.themeId).equals(\"light\")\n\t\to(themeManager.themePreference).equals(\"auto:light|dark\")\n\t})\n\n\to(\"when switching to automatic and preferring the light theme, light theme is applied, and themeId is automatic\", async function () {\n\t\twhen(themeFacadeMock.getThemePreference()).thenResolve(\"dark\")\n\t\tawait themeManager._initializeTheme()\n\n\t\twhen(themeFacadeMock.prefersDark()).thenResolve(false)\n\t\tawait themeManager.setThemePreference(\"automatic\")\n\n\t\to(themeManager.getCurrentTheme().themeId).equals(\"light\")\n\t\to(themeManager.themeId).equals(\"automatic\")\n\t})\n})\n","import o from \"@tutao/otest\"\nimport { EntropyCollector } from \"../../../../src/common/api/main/EntropyCollector.js\"\nimport { EntropyDataChunk, EntropyFacade } from \"../../../../src/common/api/worker/facades/EntropyFacade.js\"\nimport { matchers, object, when } from \"testdouble\"\nimport { SchedulerMock } from \"../../TestUtils.js\"\nimport { getFromMap, remove } from \"@tutao/tutanota-utils\"\n\nclass FakeWindow {\n\tlisteners: Map<string, ((e: unknown) => unknown)[]> = new Map()\n\n\taddEventListener: (typeof Window.prototype)[\"addEventListener\"] = (event, listener) => {\n\t\tthis.getListeners(event).push(listener)\n\t}\n\n\tprivate getListeners(event: string) {\n\t\treturn getFromMap(this.listeners, event, () => [])\n\t}\n\n\tremoveEventListener: (typeof Window.prototype)[\"removeEventListener\"] = (event, listener) => {\n\t\tremove(this.getListeners(event), listener)\n\t}\n\n\tdispatch<E extends keyof WindowEventMap>(name: E, event: Partial<WindowEventMap[E]>) {\n\t\tfor (let listener of this.getListeners(name)) {\n\t\t\tlistener(event)\n\t\t}\n\t}\n\n\tcrypto: Partial<(typeof Window.prototype)[\"crypto\"]> = {\n\t\tgetRandomValues<T extends ArrayBufferView | null>(array: T): T {\n\t\t\tif (array) {\n\t\t\t\tarray[0] = 32\n\t\t\t}\n\t\t\treturn array\n\t\t},\n\t}\n\n\tperformance = {\n\t\tnow: () => 3,\n\t\tgetEntries: () => [],\n\t}\n\n\tscreen = {\n\t\torientation: {\n\t\t\tangle: 90,\n\t\t},\n\t}\n}\n\n// this test is an ancient horror, please rewrite it so that it doesn't pull every internal string in the entropy collector\no.spec(\"EntropyCollector\", function () {\n\tlet collector: EntropyCollector\n\tlet entropyFacade: EntropyFacade\n\tlet scheduler: SchedulerMock\n\tlet addedEntropy: EntropyDataChunk[][]\n\tlet fakeWindow: FakeWindow\n\n\tconst TIME_ENTROPY = { source: \"time\", entropy: 2, data: 3 } as const\n\tconst RANDOM_ENTROPY = { source: \"random\", entropy: 32, data: 32 } as const\n\tconst ENTROPY_SUFFIX = [\n\t\tTIME_ENTROPY,\n\t\tRANDOM_ENTROPY,\n\t\t// together with random values\n\t\tTIME_ENTROPY,\n\t] as const\n\n\to.beforeEach(function () {\n\t\tentropyFacade = object()\n\t\taddedEntropy = []\n\t\twhen(entropyFacade.addEntropy(matchers.anything())).thenDo((e) => addedEntropy.push(e))\n\t\tscheduler = new SchedulerMock()\n\t\tfakeWindow = new FakeWindow()\n\t\tcollector = new EntropyCollector(entropyFacade, scheduler, fakeWindow as unknown as Window)\n\t})\n\n\to.afterEach(function () {\n\t\tcollector.stop()\n\t})\n\n\tfunction runInterval() {\n\t\tscheduler.scheduledPeriodic.get(EntropyCollector.SEND_INTERVAL)!.thunk()\n\t}\n\n\to(\"when collector is not started click is collected\", function () {\n\t\tfakeWindow.dispatch(\"click\", {\n\t\t\tclientX: 888,\n\t\t\tclientY: 777,\n\t\t})\n\n\t\to(scheduler.scheduledPeriodic.get(EntropyCollector.SEND_INTERVAL)).equals(undefined)\n\n\t\to(addedEntropy).deepEquals([])\n\t})\n\n\to(\"when there's nothing in the cache nothing is added\", function () {\n\t\tcollector.start()\n\n\t\trunInterval()\n\n\t\to(addedEntropy.length).equals(0)(\"nothing added\")\n\t})\n\n\to(\"when collector is started click is collected\", function () {\n\t\tcollector.start()\n\t\tfakeWindow.dispatch(\"click\", {\n\t\t\tclientX: 888,\n\t\t\tclientY: 777,\n\t\t})\n\n\t\trunInterval()\n\n\t\to(addedEntropy.length).equals(1)(\"added entropy\")\n\t\to(addedEntropy[0]).deepEquals([\n\t\t\t{\n\t\t\t\tsource: \"mouse\",\n\t\t\t\tentropy: 2,\n\t\t\t\tdata: 113,\n\t\t\t},\n\t\t\t...ENTROPY_SUFFIX,\n\t\t])\n\t})\n\n\to(\"when collector is started all events are collected\", function () {\n\t\tcollector.start()\n\t\tfakeWindow.dispatch(\"click\", {\n\t\t\tclientX: 888,\n\t\t\tclientY: 777,\n\t\t})\n\t\tfakeWindow.dispatch(\"keydown\", {\n\t\t\tkey: \"W\",\n\t\t})\n\n\t\trunInterval()\n\n\t\to(addedEntropy.length).equals(1)(\"added entropy\")\n\t\to(addedEntropy[0].length).equals(6)\n\t})\n\n\to(\"when collector is started mousemove is collected\", function () {\n\t\tcollector.start()\n\t\tfakeWindow.dispatch(\"mousemove\", {\n\t\t\tclientX: 123,\n\t\t\tclientY: 456,\n\t\t})\n\n\t\trunInterval()\n\n\t\to(addedEntropy.length).equals(1)(\"added entropy\")\n\t\to(addedEntropy[0]).deepEquals([\n\t\t\t{\n\t\t\t\tsource: \"mouse\",\n\t\t\t\tentropy: 2,\n\t\t\t\tdata: 435,\n\t\t\t},\n\t\t\t...ENTROPY_SUFFIX,\n\t\t])\n\t})\n\n\to(\"when collector is started keydown is collected\", function () {\n\t\tcollector.start()\n\t\tfakeWindow.dispatch(\"keydown\", {\n\t\t\tkey: \"0\",\n\t\t})\n\n\t\trunInterval()\n\n\t\to(addedEntropy.length).equals(1)(\"added entropy\")\n\t\to(addedEntropy[0]).deepEquals([\n\t\t\t{\n\t\t\t\tsource: \"key\",\n\t\t\t\tentropy: 2,\n\t\t\t\tdata: 48,\n\t\t\t},\n\t\t\t...ENTROPY_SUFFIX,\n\t\t])\n\t})\n\n\to(\"when collector is started touchstart is collected\", function () {\n\t\tcollector.start()\n\t\tfakeWindow.dispatch(\"touchstart\", {\n\t\t\ttouches: [\n\t\t\t\t{\n\t\t\t\t\tclientX: 3,\n\t\t\t\t\tclientY: 4,\n\t\t\t\t} as Partial<Touch> as Touch,\n\t\t\t] as unknown as TouchList,\n\t\t})\n\n\t\trunInterval()\n\n\t\to(addedEntropy.length).equals(1)(\"added entropy\")\n\t\to(addedEntropy[0]).deepEquals([\n\t\t\t{\n\t\t\t\tsource: \"touch\",\n\t\t\t\tentropy: 2,\n\t\t\t\tdata: 7,\n\t\t\t},\n\t\t\t...ENTROPY_SUFFIX,\n\t\t])\n\t})\n\n\to(\"when collector is started touchmove is collected\", function () {\n\t\tcollector.start()\n\t\tfakeWindow.dispatch(\"touchmove\", {\n\t\t\ttouches: [\n\t\t\t\t{\n\t\t\t\t\tclientX: 3,\n\t\t\t\t\tclientY: 4,\n\t\t\t\t} as Partial<Touch> as Touch,\n\t\t\t] as unknown as TouchList,\n\t\t})\n\n\t\trunInterval()\n\n\t\to(addedEntropy.length).equals(1)(\"added entropy\")\n\t\to(addedEntropy[0]).deepEquals([\n\t\t\t{\n\t\t\t\tsource: \"touch\",\n\t\t\t\tentropy: 2,\n\t\t\t\tdata: 7,\n\t\t\t},\n\t\t\t...ENTROPY_SUFFIX,\n\t\t])\n\t})\n\n\to(\"when collector is started devicemotion is collected\", function () {\n\t\tcollector.start()\n\t\tfakeWindow.dispatch(\"devicemotion\", {\n\t\t\taccelerationIncludingGravity: {\n\t\t\t\tx: 3,\n\t\t\t\ty: 4,\n\t\t\t\tz: 5,\n\t\t\t},\n\t\t})\n\n\t\trunInterval()\n\n\t\to(addedEntropy.length).equals(1)(\"added entropy\")\n\t\to(addedEntropy[0]).deepEquals([\n\t\t\t{ source: \"accel\", entropy: 2, data: 2 },\n\t\t\t{ source: \"time\", entropy: 2, data: 3 },\n\t\t\t{ source: \"accel\", entropy: 0, data: 90 },\n\t\t\t...ENTROPY_SUFFIX,\n\t\t])\n\t})\n})\n","import o from \"@tutao/otest\"\nimport { htmlSanitizer, PREVENT_EXTERNAL_IMAGE_LOADING_ICON } from \"../../../src/common/misc/HtmlSanitizer.js\"\nimport { createDataFile } from \"../../../src/common/api/common/DataFile.js\"\nimport { stringToUtf8Uint8Array, utf8Uint8ArrayToString } from \"@tutao/tutanota-utils\"\n\no.spec(\n\t\"HtmlSanitizerTest\",\n\tbrowser(function () {\n\t\to(\"OWASP XSS attacks\", function () {\n\t\t\t// see https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet\n\t\t\tlet tests = [\n\t\t\t\t{\n\t\t\t\t\thtml: \"<div>';alert(String.fromCharCode(88,83,83))//';alert(String.fromCharCode(88,83,83))//\\\";\\nalert(String.fromCharCode(88,83,83))//\\\";alert(String.fromCharCode(88,83,83))//--\\n></SCRIPT>\\\">'><SCRIPT>alert(String.fromCharCode(88,83,83))</SCRIPT></div>\",\n\t\t\t\t\texpected:\n\t\t\t\t\t\t\"<div>';alert(String.fromCharCode(88,83,83))//';alert(String.fromCharCode(88,83,83))//\\\";\\nalert(String.fromCharCode(88,83,83))//\\\";alert(String.fromCharCode(88,83,83))//--\\n&gt;\\\"&gt;'&gt;</div>\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\thtml: \"<div>'';!--\\\"<XSS>=&{()}</div>\",\n\t\t\t\t\texpected: \"<div>'';!--\\\"=&amp;{()}</div>\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\thtml: \"<SCRIPT SRC=http://ha.ckers.org/xss.js></SCRIPT>\",\n\t\t\t\t\texpected: \"\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\thtml: \"<IMG SRC=\\\"javascript:alert('XSS');\\\">\",\n\t\t\t\t\texpected: `<img style=\"max-width: 100%;\">`,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\thtml: \"<IMG SRC=javascript:alert('XSS')>\",\n\t\t\t\t\texpected: `<img style=\"max-width: 100%;\">`,\n\t\t\t\t},\n\t\t\t]\n\t\t\tfor (const test of tests) {\n\t\t\t\t// attacks should not be possible even if we load external content\n\t\t\t\to(\n\t\t\t\t\thtmlSanitizer.sanitizeHTML(test.html, {\n\t\t\t\t\t\tblockExternalContent: false,\n\t\t\t\t\t}).html,\n\t\t\t\t).equals(test.expected)\n\t\t\t}\n\t\t})\n\t\to(\"blockquotes\", function () {\n\t\t\t//var sanitizer = DOMPurify.sanitize(\"\");\n\t\t\to(\n\t\t\t\thtmlSanitizer.sanitizeHTML('<blockquote class=\"tutanota_quote\">test</blockquote>', {\n\t\t\t\t\tblockExternalContent: true,\n\t\t\t\t}).html,\n\t\t\t).equals('<blockquote class=\"tutanota_quote\">test</blockquote>')\n\t\t\to(\n\t\t\t\thtmlSanitizer.sanitizeHTML('<blockquote type=\"cite\"cite=\"mid:AC55602DD\"></blockquote>', {\n\t\t\t\t\tblockExternalContent: true,\n\t\t\t\t}).html,\n\t\t\t).equals('<blockquote type=\"cite\"></blockquote>')\n\t\t})\n\t\to(\"custom classes\", function () {\n\t\t\to(htmlSanitizer.sanitizeHTML('<div class=\"custom1 tutanota_quote custom2\">test</div>').html).equals('<div class=\"tutanota_quote\">test</div>')\n\t\t})\n\t\to(\"leading text node\", function () {\n\t\t\to(htmlSanitizer.sanitizeHTML(\"hello<blockquote>test</blockquote>\").html).equals(\"hello<blockquote>test</blockquote>\")\n\t\t})\n\t\to(\"html links\", function () {\n\t\t\tlet simpleHtmlLink = '<a href=\"https://tutanota.com\">here</a>'\n\t\t\tlet sanitizedLink = htmlSanitizer.sanitizeHTML(simpleHtmlLink).html\n\t\t\to(sanitizedLink.includes('href=\"https://tutanota.com\"')).equals(true)\n\t\t\to(sanitizedLink.includes('target=\"_blank\"')).equals(true)\n\t\t\to(sanitizedLink.includes('rel=\"noopener noreferrer\"')).equals(true)\n\t\t\to(sanitizedLink.includes(\">here</a>\")).equals(true)\n\t\t\tlet htmlLink =\n\t\t\t\t'<a href=\"https://www.coursera.org/maestro/auth/normal/change_email.php?payload=9722E7n3bcN/iM08q79eG2plUafuyc6Yj631JIMAuZgGAQL0UdTqbP7w2bH8b7fmpsljKMVVVpF81l0zD1HMVQ==|Iv5+NfeRQh0Gk7/Idr0jsIZfC69Mnixw0FNbTRNmuUTgIqLefDMOhKBqY8prtvyBB7jV8kZy9XtGDue7uuUMwNYv1ucDvn/RYt76LAVXIQrY9BhW1Y381ZyMbuhB14LERDe05DUJgQI6XkM9gxM3APT7RZs48ERUIb/MstkJtxw=\">here</a>'\n\t\t\tsanitizedLink = htmlSanitizer.sanitizeHTML(htmlLink).html\n\t\t\to(\n\t\t\t\tsanitizedLink.includes(\n\t\t\t\t\t'href=\"https://www.coursera.org/maestro/auth/normal/change_email.php?payload=9722E7n3bcN/iM08q79eG2plUafuyc6Yj631JIMAuZgGAQL0UdTqbP7w2bH8b7fmpsljKMVVVpF81l0zD1HMVQ==|Iv5+NfeRQh0Gk7/Idr0jsIZfC69Mnixw0FNbTRNmuUTgIqLefDMOhKBqY8prtvyBB7jV8kZy9XtGDue7uuUMwNYv1ucDvn/RYt76LAVXIQrY9BhW1Y381ZyMbuhB14LERDe05DUJgQI6XkM9gxM3APT7RZs48ERUIb/MstkJtxw=\"',\n\t\t\t\t),\n\t\t\t).equals(true)\n\t\t\to(sanitizedLink.includes('target=\"_blank\"')).equals(true)\n\t\t\to(sanitizedLink.includes('rel=\"noopener noreferrer\"')).equals(true)\n\t\t\to(sanitizedLink.includes(\">here</a>\")).equals(true)\n\t\t})\n\t\to(\"tutatemplate links in html\", function () {\n\t\t\tlet tutatemplateLink = '<a href=\"tutatemplate:some-id/some-entry\">#hashtag</a>'\n\t\t\tlet sanitized = htmlSanitizer.sanitizeHTML(tutatemplateLink).html\n\t\t\to(sanitized.includes('href=\"tutatemplate:some-id/some-entry\"')).equals(true)\n\t\t})\n\t\to(\"tutatemplate links in fragment\", function () {\n\t\t\tconst tutatemplateLink = '<a href=\"tutatemplate:some-id/some-entry\">#hashtag</a>'\n\t\t\tconst sanitized = htmlSanitizer.sanitizeFragment(tutatemplateLink).fragment\n\t\t\tconst a = sanitized.querySelector(\"a\")\n\t\t\to(a != null && a.href.includes(\"tutatemplate:some-id/some-entry\")).equals(true)\n\t\t})\n\t\to(\"notification mail template link\", function () {\n\t\t\tlet simpleHtmlLink = '<a href=\" {link} \">here</a>'\n\t\t\tlet sanitizedLink = htmlSanitizer.sanitizeHTML(simpleHtmlLink, {\n\t\t\t\tblockExternalContent: true,\n\t\t\t}).html\n\t\t\to(sanitizedLink.includes('href=\"{link}\"')).equals(true)\n\t\t\to(sanitizedLink.includes('target=\"_blank\"')).equals(true)\n\t\t\to(sanitizedLink.includes('rel=\"noopener noreferrer\"')).equals(true)\n\t\t\to(sanitizedLink.includes(\">here</a>\")).equals(true)\n\t\t})\n\t\to(\"area element\", function () {\n\t\t\tlet element = '<area href=\"https://tutanota.com\">here</area>'\n\t\t\tlet sanitizedElement = htmlSanitizer.sanitizeHTML(element, {\n\t\t\t\tblockExternalContent: true,\n\t\t\t}).html\n\t\t\to(sanitizedElement.includes('href=\"https://tutanota.com\"')).equals(true)\n\t\t\to(sanitizedElement.includes('target=\"_blank\"')).equals(true)\n\t\t\to(sanitizedElement.includes('rel=\"noopener noreferrer\"')).equals(true)\n\t\t})\n\t\to(\"sanitizing empty body\", function () {\n\t\t\tlet sanitized = htmlSanitizer.sanitizeHTML(\"\", {\n\t\t\t\tblockExternalContent: true,\n\t\t\t}).html\n\t\t\to(sanitized).equals(\"\")\n\t\t\tsanitized = htmlSanitizer.sanitizeHTML(\" \", {\n\t\t\t\tblockExternalContent: true,\n\t\t\t}).html\n\t\t\to(sanitized).equals(\" \")\n\t\t\tsanitized = htmlSanitizer.sanitizeHTML(\"yo\", {\n\t\t\t\tblockExternalContent: true,\n\t\t\t}).html\n\t\t\to(sanitized).equals(\"yo\")\n\t\t\tsanitized = htmlSanitizer.sanitizeHTML(\"<br>\", {\n\t\t\t\tblockExternalContent: true,\n\t\t\t}).html\n\t\t\to(sanitized).equals(\"<br>\")\n\t\t\tsanitized = htmlSanitizer.sanitizeHTML(\"<div></div>\", {\n\t\t\t\tblockExternalContent: true,\n\t\t\t}).html\n\t\t\to(sanitized).equals(\"<div></div>\")\n\t\t\tsanitized = htmlSanitizer.sanitizeHTML(\"<html></html>\", {\n\t\t\t\tblockExternalContent: true,\n\t\t\t}).html\n\t\t\to(sanitized).equals(\"\")\n\t\t\tsanitized = htmlSanitizer.sanitizeHTML(\"<html><body></body></html>\", {\n\t\t\t\tblockExternalContent: true,\n\t\t\t}).html\n\t\t\to(sanitized).equals(\"\")\n\t\t\tsanitized = htmlSanitizer.sanitizeHTML(\"<html><body>yo</body></html>\", {\n\t\t\t\tblockExternalContent: true,\n\t\t\t}).html\n\t\t\to(sanitized).equals(\"yo\")\n\t\t})\n\t\to(\"external image replacement is correct\", function () {\n\t\t\to(PREVENT_EXTERNAL_IMAGE_LOADING_ICON).equals(\n\t\t\t\t\"data:image/svg+xml;utf8,<svg version='1.1' viewBox='0 0 512 512' xmlns='http://www.w3.org/2000/svg'> <rect width='512' height='512' fill='%23f8f8f8'/> <path d='m220 212c0 12.029-9.7597 21.789-21.789 21.789-12.029 0-21.789-9.7597-21.789-21.789s9.7597-21.789 21.789-21.789c12.029 0 21.789 9.7597 21.789 21.789zm116.21 43.578v50.841h-159.79v-21.789l36.315-36.315 18.158 18.158 58.104-58.104zm10.895-79.893h-181.58c-1.9292 0-3.6315 1.7023-3.6315 3.6315v138c0 1.9292 1.7023 3.6315 3.6315 3.6315h181.58c1.9292 0 3.6315-1.7023 3.6315-3.6315v-138c0-1.9292-1.7023-3.6315-3.6315-3.6315zm18.158 3.6315v138c0 9.9867-8.1709 18.158-18.158 18.158h-181.58c-9.9867 0-18.158-8.1709-18.158-18.158v-138c0-9.9867 8.1709-18.158 18.158-18.158h181.58c9.9867 0 18.158 8.1709 18.158 18.158z' fill='%23b4b4b4' stroke-width='.11348'/></svg>\",\n\t\t\t)\n\t\t})\n\n\t\tconst REPLACEMENT_VALUE = `url(\"${PREVENT_EXTERNAL_IMAGE_LOADING_ICON}\")`\n\n\t\to.spec(\"external background images\", function () {\n\t\t\to(\"when external content is blocked background-image url is replaced\", function () {\n\t\t\t\tconst result = htmlSanitizer.sanitizeFragment(\n\t\t\t\t\t'<p style=\"background-image: url(&quot;https://emailprivacytester.com/cb/1134f6cba766bf0b/background_image&quot;)\"></p>',\n\t\t\t\t\t{\n\t\t\t\t\t\tblockExternalContent: true,\n\t\t\t\t\t},\n\t\t\t\t)\n\t\t\t\to(result.blockedExternalContent).equals(1)\n\t\t\t\tconst p = result.fragment.querySelector(\"p\")!\n\t\t\t\to(p.style.backgroundImage).equals(REPLACEMENT_VALUE)\n\t\t\t})\n\t\t\to(\"content is blocked if there is any non-data url in background-image \", function () {\n\t\t\t\tconst result = htmlSanitizer.sanitizeFragment(\n\t\t\t\t\t\"<p style=\\\"background-image: url('data:image/svg+xml;utf8,inline,'), url(&quot;https://emailprivacytester.com/cb/1134f6cba766bf0b/background_image&quot;)\\\"></p>\",\n\t\t\t\t\t{\n\t\t\t\t\t\tblockExternalContent: true,\n\t\t\t\t\t},\n\t\t\t\t)\n\t\t\t\to(result.blockedExternalContent).equals(1)\n\t\t\t\tconst p = result.fragment.querySelector(\"p\")!\n\t\t\t\to(p.style.backgroundImage).equals(`url(\"${PREVENT_EXTERNAL_IMAGE_LOADING_ICON}\")`)\n\t\t\t})\n\t\t\to(\"when external content is blocked background url in quotes is replaced\", function () {\n\t\t\t\tconst result = htmlSanitizer.sanitizeFragment(\n\t\t\t\t\t'<p style=\"background: url(&quot;https://emailprivacytester.com/cb/1134f6cba766bf0b/background_image&quot;)\"></p>',\n\t\t\t\t\t{\n\t\t\t\t\t\tblockExternalContent: true,\n\t\t\t\t\t},\n\t\t\t\t)\n\t\t\t\to(result.blockedExternalContent).equals(1)\n\t\t\t\tconst p = result.fragment.querySelector(\"p\")!\n\t\t\t\to(p.style.backgroundImage).equals(REPLACEMENT_VALUE)\n\t\t\t})\n\t\t\to(\"when external content is blocked background url in html quotes is replaced\", function () {\n\t\t\t\tconst result = htmlSanitizer.sanitizeFragment(\n\t\t\t\t\t'<p style=\"background: url(&#39;https://emailprivacytester.com/cb/1134f6cba766bf0b/background_image&#39;)\"></p>',\n\t\t\t\t\t{\n\t\t\t\t\t\tblockExternalContent: true,\n\t\t\t\t\t},\n\t\t\t\t)\n\t\t\t\to(result.blockedExternalContent).equals(1)\n\t\t\t\tconst p = result.fragment.querySelector(\"p\")!\n\t\t\t\to(p.style.backgroundImage).equals(REPLACEMENT_VALUE)\n\t\t\t})\n\t\t\to(\"when external content is not blocked background url in html quotes is not replaced\", function () {\n\t\t\t\tconst result = htmlSanitizer.sanitizeFragment(\n\t\t\t\t\t'<p style=\"background: url(&quot;https://emailprivacytester.com/cb/1134f6cba766bf0b/background_image&quot;)\"></p>',\n\t\t\t\t\t{\n\t\t\t\t\t\tblockExternalContent: false,\n\t\t\t\t\t},\n\t\t\t\t)\n\t\t\t\to(result.blockedExternalContent).equals(0)\n\t\t\t\tconst p = result.fragment.querySelector(\"p\")!\n\t\t\t\to(p.style.backgroundImage).equals(`url(\"https://emailprivacytester.com/cb/1134f6cba766bf0b/background_image\")`)\n\t\t\t})\n\n\t\t\to(\"when external content is blocked background-image image-set is replaced\", function () {\n\t\t\t\tconst cssValue = `image-set(url('https://emailprivacytester.com/cb/1134f6cba766bf0b/background_image') 1x, url('https://emailprivacytester.com/cb/1134f6cba766bf0b/background_image') 2x)`\n\t\t\t\tif (!CSS.supports(\"background-image\", cssValue)) {\n\t\t\t\t\t// Bail out if browser doesn't support it.\n\t\t\t\t\t// It is only relevant for older Chromium-based browsers, we should remove them once they are outdated\n\t\t\t\t\t// tracking issue: https://bugs.chromium.org/p/chromium/issues/detail?id=630597\n\t\t\t\t\tconsole.warn(\"HtmlSanitizerTest: Browser doesn't support image-set, skipping\")\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tconst dirty = `<p style=\"background-image: ${cssValue};\"></p>`\n\t\t\t\tconst result = htmlSanitizer.sanitizeFragment(dirty, { blockExternalContent: true })\n\t\t\t\to(result.blockedExternalContent).equals(1)\n\t\t\t\tconst p = result.fragment.querySelector(\"p\")!\n\t\t\t\to(p.style.backgroundImage).equals(REPLACEMENT_VALUE)\n\t\t\t})\n\n\t\t\to(\"when external content is blocked background-image url -webkit-image-set is replaced\", function () {\n\t\t\t\tconst cssValue = `-webkit-image-set(url('https://emailprivacytester.com/cb/1134f6cba766bf0b/background_image') 1x, url('https://emailprivacytester.com/cb/1134f6cba766bf0b/background_image') 2x)`\n\t\t\t\tif (!CSS.supports(\"background-image\", cssValue)) {\n\t\t\t\t\t// Bail out if browser doesn't support it.\n\t\t\t\t\t// It is only relevant for older Chromium-based browsers, we should remove them once they are outdated\n\t\t\t\t\t// tracking issue: https://bugs.chromium.org/p/chromium/issues/detail?id=630597\n\t\t\t\t\tconsole.warn(\"HtmlSanitizerTest: Browser doesn't support -webkit-image-set, skipping\")\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tconst dirty = `<p style=\"background-image: ${cssValue};\"></p>`\n\t\t\t\tconst result = htmlSanitizer.sanitizeFragment(dirty, { blockExternalContent: true })\n\t\t\t\to(result.blockedExternalContent).equals(1)\n\t\t\t\tconst p = result.fragment.querySelector(\"p\")!\n\t\t\t\to(p.style.backgroundImage).equals(REPLACEMENT_VALUE)\n\t\t\t})\n\n\t\t\to(\"when external content is blocked background-image with multiple url is replaced\", function () {\n\t\t\t\tconst dirty = `\n<p style=\"background: url('https://example.com/1.png'), url('https://exmaple.com/2.jpg');\">\n</p>`\n\t\t\t\tconst result = htmlSanitizer.sanitizeFragment(dirty, { blockExternalContent: true })\n\t\t\t\to(result.blockedExternalContent).equals(1)\n\t\t\t\tconst p = result.fragment.querySelector(\"p\")!\n\t\t\t\to(p.style.backgroundImage).equals(REPLACEMENT_VALUE)\n\t\t\t})\n\n\t\t\to(\"when external content is blocked background-image with gradient and url is replaced\", function () {\n\t\t\t\tconst dirty = `\n<p style=\"background: linear-gradient(blueviolet, black), url('https://exmaple.com/1.jpg')\">\n</p>`\n\t\t\t\tconst result = htmlSanitizer.sanitizeFragment(dirty, { blockExternalContent: true })\n\t\t\t\to(result.blockedExternalContent).equals(1)\n\t\t\t\tconst p = result.fragment.querySelector(\"p\")!\n\t\t\t\to(p.style.backgroundImage).equals(REPLACEMENT_VALUE)\n\t\t\t})\n\n\t\t\to(\"when external content is blocked inline background is not replaced\", function () {\n\t\t\t\tconst backgroundUrl = \"data:image/svg+xml;utf8,inline\"\n\t\t\t\tconst ditry = `\n\t<p style=\"background: url('${backgroundUrl}');\">\n\t</p>`\n\t\t\t\tconst result = htmlSanitizer.sanitizeFragment(ditry, { blockExternalContent: true })\n\t\t\t\to(result.blockedExternalContent).equals(0)\n\t\t\t\tconst p = result.fragment.querySelector(\"p\")!\n\t\t\t\to(p.style.backgroundImage).equals(`url(\"${backgroundUrl}\")`)\n\t\t\t})\n\n\t\t\to(\"when external content is blocked url border-image-source is removed\", function () {\n\t\t\t\tconst dirty = `<div style=\"border-image-source: url('https://exmaple.com/1.jpg')\">hi</div>`\n\t\t\t\tconst result = htmlSanitizer.sanitizeFragment(dirty, { blockExternalContent: true })\n\t\t\t\to(result.blockedExternalContent).equals(1)\n\t\t\t\tconst div = result.fragment.querySelector(\"div\")!\n\t\t\t\to(div.style.borderImageSource).equals(\"\")\n\t\t\t})\n\n\t\t\to(\"when external content is blocked url mask-image is removed\", function () {\n\t\t\t\tconst dirty = `<div style=\"mask-image: url('https://exmaple.com/1.jpg')\">hi</div>`\n\t\t\t\tconst result = htmlSanitizer.sanitizeFragment(dirty, { blockExternalContent: true })\n\t\t\t\t// at the moment of writing Chrome doesn't support this without prefix so we just make sure it's not there\n\t\t\t\t// o(result.externalContent).equals(1)\n\t\t\t\tconst div = result.fragment.querySelector(\"div\")!\n\t\t\t\to(div.style.maskImage == undefined || div.style.maskImage === \"\").equals(true)(`makImage is not set`)\n\t\t\t})\n\n\t\t\to(\"when external content is blocked url shape-outside is removed\", function () {\n\t\t\t\tconst dirty = `<div style=\"shape-outside: url('https://exmaple.com/1.jpg')\">hi</div>`\n\t\t\t\tconst result = htmlSanitizer.sanitizeFragment(dirty, { blockExternalContent: true })\n\t\t\t\to(result.blockedExternalContent).equals(1)\n\t\t\t\tconst div = result.fragment.querySelector(\"div\")!\n\t\t\t\to(div.style.shapeOutside).equals(\"\")\n\t\t\t})\n\n\t\t\to(\"when external content is blocked mask-border-source is removed\", function () {\n\t\t\t\tconst dirty = `<div style=\"mask-border-source: url('https://exmaple.com/1.jpg')\">hi</div>`\n\t\t\t\tconst result = htmlSanitizer.sanitizeFragment(dirty, { blockExternalContent: true })\n\t\t\t\tconst div = result.fragment.querySelector(\"div\")!\n\t\t\t\t// @ts-ignore not in all browsers\n\t\t\t\to(div.style.maskBorderSource == undefined || div.style.maskBorderSource === \"\").equals(true)(\"mask-border-source\")\n\t\t\t})\n\t\t})\n\t\to(\"detect background inline images\", function () {\n\t\t\tconst backgroundUrl = \"data:image/svg+xml;utf8,inline\"\n\t\t\tlet result = htmlSanitizer.sanitizeHTML(`<p style=\"background-image: url(${backgroundUrl})\"> </p>`, {\n\t\t\t\tblockExternalContent: true,\n\t\t\t})\n\t\t\to(result.blockedExternalContent).equals(0)\n\t\t\to(result.html.includes(backgroundUrl)).equals(true)\n\t\t\tresult = htmlSanitizer.sanitizeHTML(`<p style=\"background-image: url(${backgroundUrl}), url(${backgroundUrl})\"> </p>`, {\n\t\t\t\tblockExternalContent: true,\n\t\t\t})\n\t\t\to(result.blockedExternalContent).equals(0)\n\t\t\to(result.html.includes(backgroundUrl)).equals(true)\n\t\t\tresult = htmlSanitizer.sanitizeHTML(`<p style=\"background-image: url('${backgroundUrl}')\"> </p>`, {\n\t\t\t\tblockExternalContent: true,\n\t\t\t})\n\t\t\to(result.blockedExternalContent).equals(0)\n\t\t\to(result.html.includes(backgroundUrl)).equals(true)\n\t\t\tresult = htmlSanitizer.sanitizeHTML(`<p style='background-image: url(\"${backgroundUrl}\")'> </p>`, {\n\t\t\t\tblockExternalContent: true,\n\t\t\t})\n\t\t\to(result.blockedExternalContent).equals(0)\n\t\t\to(result.html.includes(backgroundUrl)).equals(true)\n\t\t\tresult = htmlSanitizer.sanitizeHTML(`<p style=\"background-image: url(&quot;${backgroundUrl}&quot;)\"> </p>`, {\n\t\t\t\tblockExternalContent: true,\n\t\t\t})\n\t\t\to(result.blockedExternalContent).equals(0)\n\t\t\to(result.html.includes(backgroundUrl)).equals(true)\n\t\t\tresult = htmlSanitizer.sanitizeHTML(`<p style=\"background-image: url(&#39;${backgroundUrl}&#39;)\"> </p>`, {\n\t\t\t\tblockExternalContent: true,\n\t\t\t})\n\t\t\to(result.blockedExternalContent).equals(0)\n\t\t\to(result.html.includes(backgroundUrl)).equals(true)\n\t\t})\n\t\to(\"background attribute\", function () {\n\t\t\tconst plainHtml = '<table><tr><td background=\"https://tutanota.com/image.jpg\"> ....</td></tr></table>'\n\t\t\tconst cleanHtml = htmlSanitizer.sanitizeHTML(plainHtml, {\n\t\t\t\tblockExternalContent: true,\n\t\t\t})\n\t\t\to(cleanHtml.blockedExternalContent).equals(1)\n\t\t\to(cleanHtml.html.split(\" \").some((e) => e === 'background=\"https://tutanota.com/image.jpg\"')).equals(false)\n\t\t\to(cleanHtml.html.includes(\"draft-background\")).equals(true)\n\t\t\to(\n\t\t\t\thtmlSanitizer\n\t\t\t\t\t.sanitizeHTML(plainHtml, {\n\t\t\t\t\t\tblockExternalContent: false,\n\t\t\t\t\t})\n\t\t\t\t\t.html.includes(\"background=\"),\n\t\t\t).equals(true)\n\t\t\to(\n\t\t\t\thtmlSanitizer\n\t\t\t\t\t.sanitizeHTML(plainHtml, {\n\t\t\t\t\t\tblockExternalContent: false,\n\t\t\t\t\t})\n\t\t\t\t\t.html.includes(\"draft-background=\"),\n\t\t\t).equals(false)\n\t\t})\n\t\to(\"srcset attribute\", function () {\n\t\t\tconst plainHtml =\n\t\t\t\t'<img srcset=\"https://tutanota.com/image1.jpg 1x, https://tutanota.com/image2.jpg 2x, https://tutanota.com/image3.jpg 3x\" src=\"https://tutanota.com/image.jpg\">'\n\t\t\tconst cleanHtml = htmlSanitizer.sanitizeHTML(plainHtml, {\n\t\t\t\tblockExternalContent: true,\n\t\t\t})\n\t\t\to(cleanHtml.blockedExternalContent).equals(2)\n\n\t\t\to(\n\t\t\t\tcleanHtml.html\n\t\t\t\t\t.split(\" \")\n\t\t\t\t\t.some(\n\t\t\t\t\t\t(e) =>\n\t\t\t\t\t\t\te === 'srcSet=\"https://tutanota.com/image1.jpg 1x, https://tutanota.com/image2.jpg 2x, https://tutanota.com/image3.jpg 3x\"' ||\n\t\t\t\t\t\t\te === 'srcset=\"https://tutanota.com/image1.jpg 1x, https://tutanota.com/image2.jpg 2x, https://tutanota.com/image3.jpg 3x\"',\n\t\t\t\t\t),\n\t\t\t).equals(false)\n\t\t\to(\n\t\t\t\tcleanHtml.html.includes(\n\t\t\t\t\t'draft-srcset=\"https://tutanota.com/image1.jpg 1x, https://tutanota.com/image2.jpg 2x, https://tutanota.com/image3.jpg 3x',\n\t\t\t\t),\n\t\t\t).equals(true)\n\t\t\to(cleanHtml.html.includes('src=\"data:image/svg+xml;utf8,')).equals(true)\n\t\t})\n\t\to(\"detect images and set maxWidth=100px for placeholder images\", function () {\n\t\t\tlet result = htmlSanitizer.sanitizeHTML('<img src=\"https://emailprivacytester.com/cb/510828b5a8f43ab5\">', {\n\t\t\t\tblockExternalContent: true,\n\t\t\t})\n\t\t\to(result.blockedExternalContent).equals(1)\n\t\t\to(result.html.includes('src=\"data:image/svg+xml;utf8,')).equals(true)\n\t\t\to(result.html.includes('style=\"max-width: 100px;')).equals(true)\n\t\t})\n\t\to(\"detect figure\", function () {\n\t\t\tlet inputElement = '<figure src=\"https://tutanota.com/images/favicon/favicon.ico\" type=\"image\">'\n\t\t\tlet result = htmlSanitizer.sanitizeHTML(inputElement, {\n\t\t\t\tblockExternalContent: true,\n\t\t\t})\n\t\t\to(result.blockedExternalContent).equals(1)\n\t\t\to(result.html.split(\" \").some((e) => e === 'src=\"https://tutanota.com')).equals(false)\n\t\t\to(result.html.includes('draft-src=\"https://tutanota.com')).equals(true)\n\t\t})\n\t\to(\"detect video posters\", function () {\n\t\t\tlet result = htmlSanitizer.sanitizeHTML(\n\t\t\t\t'<video poster=\"https://emailprivacytester.com/cb/04e69deda1be1c37/video_poster\" height=\"1\" width=\"1\"></video>',\n\t\t\t\t{\n\t\t\t\t\tblockExternalContent: true,\n\t\t\t\t},\n\t\t\t)\n\t\t\to(result.blockedExternalContent).equals(1)\n\t\t\to(result.html.includes('poster=\"data:image/svg+xml;utf8,')).equals(true)\n\t\t})\n\t\to(\"detect style list images\", function () {\n\t\t\tlet result = htmlSanitizer.sanitizeHTML(\n\t\t\t\t'<ul style=\"list-style-image: url(http://www.heise.de/icons/ho/heise_online_logo_top.gif);\"><li>Zeile 1</li></ul>',\n\t\t\t\t{\n\t\t\t\t\tblockExternalContent: true,\n\t\t\t\t},\n\t\t\t)\n\t\t\to(result.blockedExternalContent).equals(1)\n\t\t\to(result.html.includes(\"list-style-image: url(&quot;data:image/svg+xml;utf8,\")).equals(true)\n\t\t})\n\t\to(\"detect style content urls\", function () {\n\t\t\tlet result = htmlSanitizer.sanitizeHTML('<div style=\"content: url(http://www.heise.de/icons/ho/heise_online_logo_top.gif)\"></div>', {\n\t\t\t\tblockExternalContent: true,\n\t\t\t})\n\t\t\to(result.blockedExternalContent).equals(1)\n\t\t\to(result.html.includes(\"content: url(&quot;data:image/svg+xml;utf8,\")).equals(true)\n\t\t\t// do not modify non url content\n\t\t\tresult = htmlSanitizer.sanitizeHTML('<div style=\"content: blabla\"> </div >', {\n\t\t\t\tblockExternalContent: true,\n\t\t\t})\n\t\t\to(result.blockedExternalContent).equals(0)\n\t\t\to(result.html.includes(\"content: blabla\")).equals(true)\n\t\t})\n\t\to(\"detect style cursor images\", function () {\n\t\t\tlet result = htmlSanitizer.sanitizeHTML('<div style=\"cursor:url(https://tutanota.com/images/favicon/favicon.ico),auto;\" ></div>', {\n\t\t\t\tblockExternalContent: true,\n\t\t\t})\n\t\t\to(result.blockedExternalContent).equals(1)\n\t\t\to(result.html).equals('<div style=\"\"></div>')\n\t\t\to(result.html.includes(\"cursor:\")).equals(false)\n\t\t\tresult = htmlSanitizer.sanitizeHTML(\n\t\t\t\t'<div style=\"cursor:url(https://tutanota.com/images/favicon/favicon2.ico),url(https://tutanota.com/images/favicon/favicon.ico),auto;\"></div>',\n\t\t\t\t{\n\t\t\t\t\tblockExternalContent: false,\n\t\t\t\t},\n\t\t\t)\n\t\t\to(result.blockedExternalContent).equals(0)\n\t\t\to(result.html).equals(\n\t\t\t\t'<div style=\"cursor:url(https://tutanota.com/images/favicon/favicon2.ico),url(https://tutanota.com/images/favicon/favicon.ico),auto;\"></div>',\n\t\t\t)\n\t\t})\n\t\to(\"detect style filter files\", function () {\n\t\t\tlet result = htmlSanitizer.sanitizeHTML('<div style=\"filter:url(https://tutanota.com/images/favicon/favicon.ico);\" ></div>', {\n\t\t\t\tblockExternalContent: true,\n\t\t\t})\n\t\t\to(result.blockedExternalContent).equals(1)\n\t\t\to(result.html.includes(\"filter:\")).equals(false)\n\t\t\tresult = htmlSanitizer.sanitizeHTML('<div style=\"filter:url(https://tutanota.com/images/favicon/favicon.ico);\" ></div>', {\n\t\t\t\tblockExternalContent: false,\n\t\t\t})\n\t\t\to(result.blockedExternalContent).equals(0)\n\t\t\to(result.html).equals('<div style=\"filter:url(https://tutanota.com/images/favicon/favicon.ico);\"></div>')\n\t\t})\n\t\to(\"detect style element\", function () {\n\t\t\tlet result = htmlSanitizer.sanitizeHTML(\"<div><style>@import url(https://fonts.googleapis.com/css?family=Diplomata+SC);</style></div>\", {\n\t\t\t\tblockExternalContent: true,\n\t\t\t})\n\t\t\to(result.blockedExternalContent).equals(0)\n\t\t\to(result.html).equals(\"<div></div>\")\n\t\t\tresult = htmlSanitizer.sanitizeHTML(\"<div><style>@import url(https://fonts.googleapis.com/css?family=Diplomata+SC);</style></div>\", {\n\t\t\t\tblockExternalContent: false,\n\t\t\t})\n\t\t\to(result.blockedExternalContent).equals(0)\n\t\t\to(result.html).equals(\"<div></div>\")\n\t\t})\n\t\to(\"replace images and links\", function () {\n\t\t\tlet result = htmlSanitizer.sanitizeHTML(\n\t\t\t\t'<html><img src=\"https://localhost/1.png\"><img src=\"https://localhost/2.png\"><img src=\"https://localhost/3.png\"><img src=\"https://localhost/4.png\"><img src=\"https://localhost/5.png\"><img src=\"https://localhost/6.png\"><img src=\"https://localhost/7.png\"><img src=\"https://localhost/8.png\"><img src=\"https://localhost/9\"><a href=\"http://localhost/index.html\"></a> </html>',\n\t\t\t\t{\n\t\t\t\t\tblockExternalContent: true,\n\t\t\t\t},\n\t\t\t)\n\t\t\to(result.blockedExternalContent).equals(9)\n\t\t\t// do not replace links\n\t\t\to(\n\t\t\t\tresult.html.includes('<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"http://localhost/index.html\">') ||\n\t\t\t\t\tresult.html.includes('<a href=\"http://localhost/index.html\" rel=\"noopener noreferrer\" target=\"_blank\">'),\n\t\t\t).equals(true)\n\t\t})\n\t\to(\"do not replace inline images\", function () {\n\t\t\tconst input = '<html><img src=\"cid:asbasdf-safd_d\"><img src=\"data:image/svg+xml;utf8,sadfsdasdf\"></html>'\n\t\t\tconst result = htmlSanitizer.sanitizeHTML(input, {\n\t\t\t\tblockExternalContent: true,\n\t\t\t})\n\t\t\to(result.blockedExternalContent).equals(0)\n\t\t\to(result.inlineImageCids).deepEquals([\"asbasdf-safd_d\"])\n\t\t\to(result.html.includes(`cid=\"asbasdf-safd_d\"`)).equals(true)\n\t\t\to(result.html.includes(`data:image/svg+xml;utf8,sadfsdasdf`)).equals(true)\n\t\t\to(result.html.match(/max-width: 100%;/g)!.length).equals(2)\n\t\t})\n\t\to(\"audio tag\", function () {\n\t\t\tlet result = htmlSanitizer.sanitizeHTML(\n\t\t\t\t'<audio controls autoplay loop muted preload src=\"https://www.w3schools.com/tags/horse.mp3\" type=\"audio/mpeg\"></audio>',\n\t\t\t\t{\n\t\t\t\t\tblockExternalContent: true,\n\t\t\t\t},\n\t\t\t)\n\t\t\to(result.blockedExternalContent).equals(1)\n\t\t\to(result.html.includes(\"data:image/svg+xml;utf8,\")).equals(true)\n\t\t})\n\t\to(\"embed tag\", function () {\n\t\t\tlet result = htmlSanitizer.sanitizeHTML('<div><embed src=\"https://tutanota.com/images/favicon/favicon.ico\"></div>', {\n\t\t\t\tblockExternalContent: true,\n\t\t\t})\n\t\t\to(result.blockedExternalContent).equals(1)\n\t\t\to(result.html).equals(\"<div></div>\")\n\t\t\tresult = htmlSanitizer.sanitizeHTML('<div><embed src=\"https://tutanota.com/images/favicon/favicon.ico\"></div>', {\n\t\t\t\tblockExternalContent: false,\n\t\t\t})\n\t\t\to(result.blockedExternalContent).equals(0)\n\t\t\to(result.html).equals(\"<div></div>\")\n\t\t})\n\t\to(\"disallow relative links\", function () {\n\t\t\to(htmlSanitizer.sanitizeHTML('<a href=\"relative\">text</a>').html).equals('<a href=\"javascript:void(0)\">text</a>')\n\t\t\to(htmlSanitizer.sanitizeHTML('<a href=\"/relative\">text</a>').html).equals('<a href=\"javascript:void(0)\">text</a>')\n\t\t})\n\t\to(\"allow relative links when asked\", function () {\n\t\t\to(\n\t\t\t\thtmlSanitizer.sanitizeHTML('<a href=\"relative\">text</a>', {\n\t\t\t\t\tallowRelativeLinks: true,\n\t\t\t\t}).html,\n\t\t\t).equals('<a href=\"relative\" rel=\"noopener noreferrer\" target=\"_blank\">text</a>')\n\t\t\to(\n\t\t\t\thtmlSanitizer.sanitizeHTML('<a href=\"/relative\">text</a>', {\n\t\t\t\t\tallowRelativeLinks: true,\n\t\t\t\t}).html,\n\t\t\t).equals('<a href=\"/relative\" rel=\"noopener noreferrer\" target=\"_blank\">text</a>')\n\t\t})\n\t\to(\"filter out position css\", function () {\n\t\t\to(htmlSanitizer.sanitizeHTML(`<div style=\"color: red; position: absolute;\"></div>`).html).equals(`<div style=\"color: red;\"></div>`)\n\t\t\to(\n\t\t\t\thtmlSanitizer.sanitizeHTML(`<div style=\"color: red; position: absolute;\"></div>`, {\n\t\t\t\t\tblockExternalContent: false,\n\t\t\t\t}).html,\n\t\t\t).equals(`<div style=\"color: red;\"></div>`)\n\t\t})\n\t\to(\"use image loading placeholder\", function () {\n\t\t\tconst r1 = htmlSanitizer.sanitizeHTML(`<img src=\"cid:123456\">`, {\n\t\t\t\tusePlaceholderForInlineImages: true,\n\t\t\t}).html\n\t\t\to(r1.includes(`src=\"${PREVENT_EXTERNAL_IMAGE_LOADING_ICON}\"`)).equals(true)\n\t\t\to(r1.includes(`style=\"max-width: 100%;\"`)).equals(true)\n\t\t\to(r1.includes(`cid=\"123456\"`)).equals(true)\n\t\t\to(r1.includes(`class=\"tutanota-placeholder\"`)).equals(true)\n\n\t\t\tconst r2 = htmlSanitizer.sanitizeHTML(`<img src=\"cid:123456\">`).html\n\t\t\to(r2.includes(`src=\"${PREVENT_EXTERNAL_IMAGE_LOADING_ICON}\"`)).equals(true)\n\t\t\to(r2.includes(`style=\"max-width: 100%;\"`)).equals(true)\n\t\t\to(r2.includes(`cid=\"123456\"`)).equals(true)\n\t\t\to(r2.includes(`class=\"tutanota-placeholder\"`)).equals(true)\n\t\t})\n\t\to(\"don't use image loading placeholder\", function () {\n\t\t\tconst result = htmlSanitizer.sanitizeHTML(`<img src=\"cid:123456\">`, {\n\t\t\t\tusePlaceholderForInlineImages: false,\n\t\t\t}).html\n\t\t\to(result).equals(`<img src=\"cid:123456\" style=\"max-width: 100%;\">`)\n\t\t})\n\t\to(\"add max-width to images\", function () {\n\t\t\tconst result = htmlSanitizer.sanitizeHTML(`<img src=\"cid:123456\">`, {\n\t\t\t\tusePlaceholderForInlineImages: false,\n\t\t\t}).html\n\t\t\to(result).equals(`<img src=\"cid:123456\" style=\"max-width: 100%;\">`)\n\t\t})\n\t\to(\"add max-width to images that have a given width\", function () {\n\t\t\tconst result = htmlSanitizer.sanitizeHTML(`<img src=\"cid:123456\" style=\"width: 150px;\">`, {\n\t\t\t\tusePlaceholderForInlineImages: false,\n\t\t\t}).html\n\t\t\to(result).equals(`<img style=\"width: 150px; max-width: 100%;\" src=\"cid:123456\">`)\n\t\t})\n\t\to(\"replace max-width for inline images\", function () {\n\t\t\tconst result = htmlSanitizer.sanitizeHTML(`<img src=\"cid:123456\" style=\"max-width: 60%;\">`, {\n\t\t\t\tusePlaceholderForInlineImages: false,\n\t\t\t}).html\n\t\t\to(result).equals(`<img style=\"max-width: 100%;\" src=\"cid:123456\">`)\n\t\t})\n\t\to(\"replace max-width for external images\", function () {\n\t\t\tconst result = htmlSanitizer.sanitizeHTML(`<img src=\"https://tutanota.com/images/favicon/favicon.ico\">`, {\n\t\t\t\tblockExternalContent: false,\n\t\t\t}).html\n\t\t\to(result).equals(`<img src=\"https://tutanota.com/images/favicon/favicon.ico\" style=\"max-width: 100%;\">`)\n\t\t})\n\t\to(\"svg tag not removed\", function () {\n\t\t\tconst result = htmlSanitizer.sanitizeSVG(`<svg> <rect x=\"10\" y=\"10\" width=\"10\" height=\"10\"> </rect> </svg>`).html.trim()\n\t\t\tconst element = document.createElement(\"div\")\n\t\t\telement.innerHTML = result\n\t\t\to(element.children[0]?.nodeName).equals(\"svg\")\n\t\t\to(element.children[0]?.children[0]?.nodeName.toLowerCase()).equals(\"rect\")\n\t\t\to(element.children[0]?.children[0]?.getAttribute(\"x\")).equals(\"10\")\n\t\t\to(element.children[0]?.children[0]?.getAttribute(\"y\")).equals(\"10\")\n\t\t\to(element.children[0]?.children[0]?.getAttribute(\"width\")).equals(\"10\")\n\t\t\to(element.children[0]?.children[0]?.getAttribute(\"height\")).equals(\"10\")\n\t\t})\n\t\to(\"svg fragment should not be removed\", function () {\n\t\t\tconst result = htmlSanitizer.sanitizeSVG(`<rect x=\"10\" y=\"10\" width=\"10\" height=\"10\"> </rect>`).html.trim()\n\t\t\tconst element = document.createElement(\"svg\")\n\t\t\telement.innerHTML = result\n\t\t\to(element.children[0]?.nodeName.toLowerCase()).equals(\"rect\")\n\t\t\to(element.children[0]?.getAttribute(\"x\")).equals(\"10\")\n\t\t\to(element.children[0]?.getAttribute(\"y\")).equals(\"10\")\n\t\t\to(element.children[0]?.getAttribute(\"width\")).equals(\"10\")\n\t\t\to(element.children[0]?.getAttribute(\"height\")).equals(\"10\")\n\t\t})\n\t\to(\"svg fragment should be removed\", function () {\n\t\t\tconst result = htmlSanitizer.sanitizeHTML(`<rect x=\"10\" y=\"10\" width=\"10\" height=\"10\"> </rect>`).html.trim()\n\t\t\to(result).equals(``)\n\t\t})\n\n\t\to.spec(\"inline attachment sanitization\", function () {\n\t\t\to(\"svg with xss gets sanitized\", function () {\n\t\t\t\tconst svgDocumentWithXSS =\n\t\t\t\t\t'<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\\n' +\n\t\t\t\t\t'<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n' +\n\t\t\t\t\t\"\\n\" +\n\t\t\t\t\t'<svg version=\"1.1\" baseProfile=\"full\" xmlns=\"http://www.w3.org/2000/svg\">\\n' +\n\t\t\t\t\t'<polygon id=\"triangle\" points=\"0,0 0,50 50,0\" fill=\"#009900\" stroke=\"#004400\"/>\\n' +\n\t\t\t\t\t'<script type=\"text/javascript\">\\n' +\n\t\t\t\t\t'alert(localStorage.getItem(\"tutanotaConfig\"));\\n' +\n\t\t\t\t\t\"</script></svg>\"\n\t\t\t\tconst expectedSvgDocument =\n\t\t\t\t\t'<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\\n' +\n\t\t\t\t\t'<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\">\\n' +\n\t\t\t\t\t'<polygon stroke=\"#004400\" fill=\"#009900\" points=\"0,0 0,50 50,0\" id=\"triangle\"/>\\n' +\n\t\t\t\t\t\"</svg>\"\n\t\t\t\tconst xssDataFile = createDataFile(\"xss.svg\", \"image/svg+xml\", stringToUtf8Uint8Array(svgDocumentWithXSS), \"some-cid\")\n\t\t\t\tconst sanitizedDataFile = htmlSanitizer.sanitizeInlineAttachment(xssDataFile)\n\t\t\t\to(sanitizedDataFile.cid).equals(\"some-cid\")\n\t\t\t\to(sanitizedDataFile.mimeType).equals(\"image/svg+xml\")\n\t\t\t\to(sanitizedDataFile.name).equals(\"xss.svg\")\n\t\t\t\tconst parser = new DOMParser()\n\t\t\t\tconst cleanSvgTree = parser.parseFromString(utf8Uint8ArrayToString(sanitizedDataFile.data), \"image/svg+xml\")\n\t\t\t\tconst expectedSvgTree = parser.parseFromString(expectedSvgDocument, \"image/svg+xml\")\n\t\t\t\tconst serializer = new XMLSerializer()\n\t\t\t\tconst reserializedClean = serializer.serializeToString(cleanSvgTree)\n\t\t\t\tconst reserializedExpected = serializer.serializeToString(expectedSvgTree)\n\t\t\t\to(reserializedClean).equals(reserializedExpected)\n\t\t\t})\n\n\t\t\to(\"svg without xss gets left alone\", function () {\n\t\t\t\tconst svgDocumentWithoutXSS =\n\t\t\t\t\t'<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\\n' +\n\t\t\t\t\t'<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\\n' +\n\t\t\t\t\t'<polygon stroke=\"#004400\" fill=\"#009900\" points=\"0,0 0,50 50,0\" id=\"script\"/>\\n' +\n\t\t\t\t\t\"</svg>\"\n\t\t\t\tconst noxssDataFile = createDataFile(\"no-xss.svg\", \"image/svg+xml\", stringToUtf8Uint8Array(svgDocumentWithoutXSS), \"some-other-cid\")\n\t\t\t\tconst sanitizedDataFile = htmlSanitizer.sanitizeInlineAttachment(noxssDataFile)\n\t\t\t\tconst parser = new DOMParser()\n\t\t\t\tconst cleanSvgTree = parser.parseFromString(utf8Uint8ArrayToString(sanitizedDataFile.data), \"image/svg+xml\")\n\t\t\t\to(cleanSvgTree.getElementsByTagName(\"script\").length).equals(0)\n\t\t\t\tconst polys = cleanSvgTree.getElementsByTagName(\"polygon\")\n\t\t\t\to(polys.length).equals(1)\n\t\t\t\to(polys[0].id).equals(\"script\")\n\t\t\t\to(polys[0].getAttributeNames().sort()).deepEquals([\"stroke\", \"fill\", \"points\", \"id\"].sort())\n\t\t\t\to(polys[0].getAttribute(\"stroke\")).equals(\"#004400\")\n\t\t\t\to(polys[0].getAttribute(\"fill\")).equals(\"#009900\")\n\t\t\t\to(polys[0].getAttribute(\"points\")).equals(\"0,0 0,50 50,0\")\n\n\t\t\t\tconst svgs = cleanSvgTree.getElementsByTagName(\"svg\")\n\t\t\t\to(svgs.length).equals(1)\n\t\t\t\to(svgs[0].getAttributeNames().sort()).deepEquals([\"version\", \"xmlns\"])\n\t\t\t\to(svgs[0].getAttribute(\"version\")).equals(\"1.1\")\n\t\t\t\to(svgs[0].getAttribute(\"xmlns\")).equals(\"http://www.w3.org/2000/svg\")\n\t\t\t})\n\n\t\t\to(\"invalid svg gets replaced with empty text\", function () {\n\t\t\t\t// svg with invalid encoding (non-utf8) will and should be indistinguishable from just plain invalid svg\n\t\t\t\t// so we don't test invalid encoding separately\n\t\t\t\tconst invalidSvg = '<svg/><?xml version=\"1.0\">'\n\t\t\t\tconst utf16DataFile = createDataFile(\"no-xss.svg\", \"image/svg+xml\", stringToUtf8Uint8Array(invalidSvg), \"third-cid\")\n\t\t\t\tconst sanitizedDataFile = htmlSanitizer.sanitizeInlineAttachment(utf16DataFile)\n\t\t\t\to(sanitizedDataFile.data.length).equals(0)\n\t\t\t})\n\n\t\t\to(\"non-svg inline attachments get left alone\", function () {\n\t\t\t\tconst someData = Uint8Array.from([84, 0, 89, 0, 80, 47, 0, 47, 0, 87])\n\t\t\t\tconst someDataFile = createDataFile(\"no-xss.svg\", \"image/png\", someData, \"third-cid\")\n\t\t\t\tconst sanitizedDataFile = htmlSanitizer.sanitizeInlineAttachment(someDataFile)\n\t\t\t\to(sanitizedDataFile.data).deepEquals(someData)\n\t\t\t})\n\t\t})\n\t}),\n)\n","import o from \"@tutao/otest\"\nimport { _findMatchingRule, _matchesRegularExpression } from \"../../../src/mail-app/mail/model/InboxRuleHandler.js\"\nimport type { InboxRule, Mail } from \"../../../src/common/api/entities/tutanota/TypeRefs.js\"\nimport { InboxRuleTypeRef, MailAddressTypeRef, MailTypeRef } from \"../../../src/common/api/entities/tutanota/TypeRefs.js\"\nimport { EntityRestClientMock } from \"../api/worker/rest/EntityRestClientMock.js\"\nimport { EntityClient } from \"../../../src/common/api/common/EntityClient.js\"\nimport { InboxRuleType } from \"../../../src/common/api/common/TutanotaConstants.js\"\nimport { createTestEntity } from \"../TestUtils.js\"\n\no.spec(\"InboxRuleHandlerTest\", function () {\n\to.spec(\"Test _matchesRegularExpression\", function () {\n\t\to(\" check invalid regular expressions\", function () {\n\t\t\to(_matchesRegularExpression(\"\", _createRule(\"\"))).equals(false)\n\t\t\to(_matchesRegularExpression(\"1\", _createRule(\"1\"))).equals(false)\n\t\t\to(_matchesRegularExpression(\"$\", _createRule(\"$\"))).equals(false)\n\t\t})\n\t\to(\" check regular expressions\", function () {\n\t\t\tlet regExRuleEmpty = _createRule(\"//\")\n\n\t\t\to(_matchesRegularExpression(\"\", regExRuleEmpty)).equals(true)\n\t\t\to(_matchesRegularExpression(\" \", regExRuleEmpty)).equals(true)\n\n\t\t\tlet regExRule123 = _createRule(\"/123/\")\n\n\t\t\to(_matchesRegularExpression(\"123\", regExRule123)).equals(true)\n\t\t\to(_matchesRegularExpression(\"01234\", regExRule123)).equals(true)\n\t\t\to(_matchesRegularExpression(\"0124\", regExRule123)).equals(false)\n\n\t\t\tlet regExRuleCharacterClass = _createRule(\"/[1]+/\")\n\n\t\t\to(_matchesRegularExpression(\"1\", regExRuleCharacterClass)).equals(true)\n\t\t\to(_matchesRegularExpression(\"1111111\", regExRuleCharacterClass)).equals(true)\n\t\t\to(_matchesRegularExpression(\"1211111\", regExRuleCharacterClass)).equals(true)\n\t\t\to(_matchesRegularExpression(\"22\", regExRuleCharacterClass)).equals(false)\n\n\t\t\tlet regExRuleEscaped = _createRule(\"/\\\\[1\\\\]/\")\n\n\t\t\to(_matchesRegularExpression(\"[1]\", regExRuleEscaped)).equals(true)\n\t\t\to(_matchesRegularExpression(\"[1\", regExRuleEscaped)).equals(false)\n\t\t})\n\t\to(\"check case insensitivity\", function () {\n\t\t\tlet regExRuleLowerCase = _createRule(\"/hey/\")\n\n\t\t\to(_matchesRegularExpression(\"hey\", regExRuleLowerCase)).equals(true)\n\t\t\to(_matchesRegularExpression(\"HEY\", regExRuleLowerCase)).equals(false)\n\n\t\t\tlet regExRuleUpperCase = _createRule(\"/HEY/\")\n\n\t\t\to(_matchesRegularExpression(\"hey\", regExRuleUpperCase)).equals(false)\n\t\t\to(_matchesRegularExpression(\"HEY\", regExRuleUpperCase)).equals(true)\n\t\t})\n\t\to(\"check regular expression with flags\", function () {\n\t\t\tlet regExRuleWithFlagsLowerCase = _createRule(\"/hey/i\")\n\n\t\t\to(_matchesRegularExpression(\"hey\", regExRuleWithFlagsLowerCase)).equals(true)\n\t\t\to(_matchesRegularExpression(\"HEY\", regExRuleWithFlagsLowerCase)).equals(true)\n\t\t\to(_matchesRegularExpression(\"hEy\", regExRuleWithFlagsLowerCase)).equals(true)\n\n\t\t\tlet regExRuleWithFlagsUpperCase = _createRule(\"/HEY/i\")\n\n\t\t\to(_matchesRegularExpression(\"hey\", regExRuleWithFlagsUpperCase)).equals(true)\n\t\t\to(_matchesRegularExpression(\"HEY\", regExRuleWithFlagsUpperCase)).equals(true)\n\t\t})\n\t})\n\to.spec(\"Test _findMatchingRule\", function () {\n\t\tconst restClient: EntityRestClientMock = new EntityRestClientMock()\n\t\tconst entityClient = new EntityClient(restClient)\n\t\to(\"check FROM_EQUALS is applied to from\", async function () {\n\t\t\tconst rules: InboxRule[] = [_createRule(\"sender@tuta.com\", InboxRuleType.FROM_EQUALS, [\"ruleTarget\", \"ruleTarget\"])]\n\n\t\t\tconst mail = _createMailWithDifferentEnvelopeSender()\n\n\t\t\tconst rule = await _findMatchingRule(this.mailFacade, mail, rules)\n\t\t\to(rule).notEquals(null)\n\n\t\t\tif (rule) {\n\t\t\t\to(_equalTupels(rule.targetFolder, [\"ruleTarget\", \"ruleTarget\"])).equals(true)\n\t\t\t}\n\t\t})\n\t\to(\"check FROM_EQUALS is applied to envelope  sender\", async function () {\n\t\t\tconst rules: InboxRule[] = [_createRule(\"differentenvelopsender@something.com\", InboxRuleType.FROM_EQUALS, [\"ruleTarget\", \"ruleTarget\"])]\n\n\t\t\tconst mail = _createMailWithDifferentEnvelopeSender()\n\n\t\t\tconst rule = await _findMatchingRule(this.mailFacade, mail, rules)\n\t\t\to(rule).notEquals(null)\n\n\t\t\tif (rule) {\n\t\t\t\to(_equalTupels(rule.targetFolder, [\"ruleTarget\", \"ruleTarget\"])).equals(true)\n\t\t\t}\n\t\t})\n\t})\n})\n\nfunction _createMailWithDifferentEnvelopeSender(): Mail {\n\tlet mail = createTestEntity(MailTypeRef)\n\tlet sender = createTestEntity(MailAddressTypeRef)\n\tsender.address = \"sender@tuta.com\"\n\tmail.sender = sender\n\tmail.differentEnvelopeSender = \"differentenvelopsender@something.com\"\n\treturn mail\n}\n\nfunction _createRule(value: string, type?: string, targetFolder?: IdTuple): InboxRule {\n\tlet rule = createTestEntity(InboxRuleTypeRef)\n\trule.value = value\n\trule.type = type ? type : InboxRuleType.SUBJECT_CONTAINS\n\trule.targetFolder = targetFolder ? targetFolder : [\"empty\", \"empty\"]\n\treturn rule\n}\n\nfunction _equalTupels(t1: IdTuple, t2: IdTuple): boolean {\n\tif (t1.length === 2 && t2.length == 2) {\n\t\tif (t1[0] !== t2[0] || t1[1] !== t2[1]) {\n\t\t\treturn false\n\t\t}\n\n\t\treturn true\n\t}\n\n\treturn false\n}\n","import o from \"@tutao/otest\"\nimport { EmailSignatureType } from \"../../../src/common/api/common/TutanotaConstants.js\"\nimport { mockAttribute, unmockAttribute } from \"@tutao/tutanota-test-utils\"\nimport { downcast } from \"@tutao/tutanota-utils\"\nimport { lang } from \"../../../src/common/misc/LanguageViewModel.js\"\nimport { htmlSanitizer } from \"../../../src/common/misc/HtmlSanitizer.js\"\nimport type { LoginController } from \"../../../src/common/api/main/LoginController.js\"\nimport { appendEmailSignature, prependEmailSignature } from \"../../../src/mail-app/mail/signature/Signature.js\"\nimport { LINE_BREAK } from \"../../../src/common/mailFunctionality/SharedMailUtils.js\"\n\nconst TEST_DEFAULT_SIGNATURE = \"--\\nDefault signature\"\no.spec(\"MailUtilsSignatureTest\", function () {\n\tconst mockedAttributes: any[] = []\n\to.before(function () {\n\t\tmockedAttributes.push(\n\t\t\tmockAttribute(lang, lang.get, function (key, obj) {\n\t\t\t\tif (key === \"defaultEmailSignature_msg\") {\n\t\t\t\t\treturn TEST_DEFAULT_SIGNATURE\n\t\t\t\t}\n\n\t\t\t\tthrow new Error(\"unexpected translation key: \" + key)\n\t\t\t}),\n\t\t)\n\t\tmockedAttributes.push(\n\t\t\tmockAttribute(htmlSanitizer, htmlSanitizer.sanitizeHTML, function (text) {\n\t\t\t\treturn {\n\t\t\t\t\thtml: text,\n\t\t\t\t\texternalContent: [],\n\t\t\t\t\tinlineImageCids: [],\n\t\t\t\t\tlinks: [],\n\t\t\t\t}\n\t\t\t}),\n\t\t)\n\t})\n\to.after(function () {\n\t\tfor (const mockedAttribute of mockedAttributes) {\n\t\t\tunmockAttribute(mockedAttribute)\n\t\t}\n\t})\n\to(\"append - no signature\", function () {\n\t\tconst properties = downcast({\n\t\t\temailSignatureType: EmailSignatureType.EMAIL_SIGNATURE_TYPE_NONE,\n\t\t\tcustomEmailSignature: \"\",\n\t\t})\n\t\to(appendEmailSignature(\"\", properties)).equals(\"\")\n\t\to(appendEmailSignature(\"123\", properties)).equals(\"123\")\n\t})\n\to(\"append - default signature\", function () {\n\t\tconst properties = downcast({\n\t\t\temailSignatureType: EmailSignatureType.EMAIL_SIGNATURE_TYPE_DEFAULT,\n\t\t\tcustomEmailSignature: \"abc\",\n\t\t})\n\t\to(appendEmailSignature(\"\", properties)).equals(LINE_BREAK + LINE_BREAK + TEST_DEFAULT_SIGNATURE)\n\t\to(appendEmailSignature(\"123\", properties)).equals(\"123\" + LINE_BREAK + LINE_BREAK + TEST_DEFAULT_SIGNATURE)\n\t})\n\to(\"append - custom signature\", function () {\n\t\tconst properties = downcast({\n\t\t\temailSignatureType: EmailSignatureType.EMAIL_SIGNATURE_TYPE_CUSTOM,\n\t\t\tcustomEmailSignature: \"abc\",\n\t\t})\n\t\to(appendEmailSignature(\"\", properties)).equals(LINE_BREAK + \"abc\")\n\t\to(appendEmailSignature(\"123\", properties)).equals(\"123\" + LINE_BREAK + \"abc\")\n\t})\n\to(\"prepend - no signature\", function () {\n\t\tconst loginController = createLoginController(EmailSignatureType.EMAIL_SIGNATURE_TYPE_NONE, \"abc\", true)\n\t\to(prependEmailSignature(\"\", loginController)).equals(\"\")\n\t\to(prependEmailSignature(\"123\", loginController)).equals(LINE_BREAK + LINE_BREAK + LINE_BREAK + \"123\")\n\t})\n\to(\"prepend - default signature\", function () {\n\t\tconst loginController = createLoginController(EmailSignatureType.EMAIL_SIGNATURE_TYPE_DEFAULT, \"abc\", true)\n\t\to(prependEmailSignature(\"\", loginController)).equals(LINE_BREAK + LINE_BREAK + TEST_DEFAULT_SIGNATURE)\n\t\to(prependEmailSignature(\"123\", loginController)).equals(LINE_BREAK + LINE_BREAK + TEST_DEFAULT_SIGNATURE + LINE_BREAK + LINE_BREAK + LINE_BREAK + \"123\")\n\t})\n\to(\"prepend - default signature - do not add signature for external user\", function () {\n\t\tconst loginController = createLoginController(EmailSignatureType.EMAIL_SIGNATURE_TYPE_DEFAULT, \"abc\", false)\n\t\to(prependEmailSignature(\"\", loginController)).equals(\"\")\n\t\to(prependEmailSignature(\"123\", loginController)).equals(LINE_BREAK + LINE_BREAK + LINE_BREAK + \"123\")\n\t})\n\to(\"prepend - custom signature\", function () {\n\t\tconst loginController = createLoginController(EmailSignatureType.EMAIL_SIGNATURE_TYPE_CUSTOM, \"abc\", true)\n\t\to(prependEmailSignature(\"\", loginController)).equals(LINE_BREAK + \"abc\")\n\t\to(prependEmailSignature(\"123\", loginController)).equals(LINE_BREAK + \"abc\" + LINE_BREAK + LINE_BREAK + LINE_BREAK + \"123\")\n\t})\n\to(\"prepend - custom signature - do not add signature for external user\", function () {\n\t\tconst loginController = createLoginController(EmailSignatureType.EMAIL_SIGNATURE_TYPE_CUSTOM, \"abc\", false)\n\t\to(prependEmailSignature(\"\", loginController)).equals(\"\")\n\t\to(prependEmailSignature(\"123\", loginController)).equals(LINE_BREAK + LINE_BREAK + LINE_BREAK + \"123\")\n\t})\n})\n\nfunction createLoginController(signatureType: EmailSignatureType, signature: string, internalUser: boolean): LoginController {\n\tconst properties = downcast({\n\t\temailSignatureType: signatureType,\n\t\tcustomEmailSignature: signature,\n\t})\n\tconst loginController = downcast({\n\t\tgetUserController() {\n\t\t\treturn {\n\t\t\t\tisInternalUser: () => internalUser,\n\t\t\t\tprops: properties,\n\t\t\t}\n\t\t},\n\t})\n\treturn loginController\n}\n","import o from \"@tutao/otest\"\nimport { createMail, createMailAddress, Mail, MailAddressTypeRef, MailTypeRef } from \"../../../../../src/common/api/entities/tutanota/TypeRefs.js\"\nimport { EncryptionAuthStatus, MailState } from \"../../../../../src/common/api/common/TutanotaConstants.js\"\nimport { createTestEntity } from \"../../../TestUtils.js\"\nimport { Icons } from \"../../../../../src/common/gui/base/icons/Icons.js\"\nimport { ProgrammingError } from \"../../../../../src/common/api/common/error/ProgrammingError.js\"\nimport { getDisplayedSender } from \"../../../../../src/common/api/common/CommonMailUtils.js\"\nimport { getConfidentialIcon, isTutanotaTeamAddress, isTutanotaTeamMail } from \"../../../../../src/mail-app/mail/view/MailGuiUtils.js\"\n\nimport { isSystemNotification } from \"../../../../../src/mail-app/mail/view/MailViewerUtils.js\"\n\no.spec(\"MailUtilsTest\", function () {\n\tfunction createSystemMail(overrides: Partial<Mail> = {}): Mail {\n\t\treturn createTestEntity(MailTypeRef, {\n\t\t\t...{\n\t\t\t\tsender: createTestEntity(MailAddressTypeRef, { address: \"system@tutanota.de\", name: \"System\" }),\n\t\t\t\treplyTos: [],\n\t\t\t\tstate: MailState.RECEIVED,\n\t\t\t\tauthStatus: null,\n\t\t\t\t_errors: {},\n\t\t\t\t_id: [\"\", \"\"],\n\t\t\t\t_ownerEncSessionKey: null,\n\t\t\t\t_ownerGroup: \"\",\n\t\t\t\t_permissions: \"\",\n\t\t\t\tattachments: [],\n\t\t\t\tbccRecipients: [],\n\t\t\t\tbody: null,\n\t\t\t\tbucketKey: null,\n\t\t\t\tccRecipients: [],\n\t\t\t\tconfidential: true,\n\t\t\t\tconversationEntry: [\"\", \"\"],\n\t\t\t\tdifferentEnvelopeSender: null,\n\t\t\t\tencryptionAuthStatus: null,\n\t\t\t\tfirstRecipient: null,\n\t\t\t\theaders: null,\n\t\t\t\tlistUnsubscribe: false,\n\t\t\t\tmailDetails: null,\n\t\t\t\tmailDetailsDraft: null,\n\t\t\t\tmethod: \"\",\n\t\t\t\tmovedTime: null,\n\t\t\t\tphishingStatus: \"\",\n\t\t\t\treceivedDate: new Date(),\n\t\t\t\trecipientCount: \"\",\n\t\t\t\treplyType: \"\",\n\t\t\t\tsubject: \"\",\n\t\t\t\ttoRecipients: [],\n\t\t\t\tunread: false,\n\t\t\t},\n\t\t\t...overrides,\n\t\t})\n\t}\n\n\tconst tutanotaSender = () => createMailAddress({ address: \"sender@tutanota.de\", name: \"Tutanota sender\", contact: null })\n\tconst tutaoSender = () => createMailAddress({ address: \"sender@tutao.de\", name: \"Tutao sender\", contact: null })\n\tconst tutanotaNoReplySender = () => createMailAddress({ address: \"no-reply@tutanota.de\", name: \"Tutanota no-reply\", contact: null })\n\tconst tutaoNoReplySender = () => createMailAddress({ address: \"no-reply@tutao.de\", name: \"Tutao no-reply\", contact: null })\n\n\to(\"getDisplayedSender\", function () {\n\t\tconst mail = createSystemMail()\n\t\to(getDisplayedSender(mail)).deepEquals({ address: \"system@tutanota.de\", name: \"System\" })\n\t})\n\n\to(\"isTutanotaTeamAddress\", function () {\n\t\to(isTutanotaTeamAddress(\"system@tutanota.de\")).deepEquals(false)\n\t\to(isTutanotaTeamAddress(\"bed-free@tutanota.de\")).deepEquals(false)\n\t\to(isTutanotaTeamAddress(\"admin@somesite.com\")).deepEquals(false)\n\t\to(isTutanotaTeamAddress(\"no-reply@tutao.de\")).deepEquals(true)\n\t\to(isTutanotaTeamAddress(\"sales@tutao.de\")).deepEquals(true)\n\t\to(isTutanotaTeamAddress(\"no-reply@tutanota.de\")).deepEquals(true)\n\t})\n\n\to(\"getConfidentialIcon\", function () {\n\t\tconst mail: Mail = createTestEntity(MailTypeRef, { confidential: true, encryptionAuthStatus: EncryptionAuthStatus.TUTACRYPT_AUTHENTICATION_SUCCEEDED })\n\t\to(getConfidentialIcon(mail)).equals(Icons.PQLock)\n\n\t\tmail.encryptionAuthStatus = EncryptionAuthStatus.TUTACRYPT_AUTHENTICATION_FAILED\n\t\to(getConfidentialIcon(mail)).equals(Icons.PQLock)\n\n\t\tmail.encryptionAuthStatus = EncryptionAuthStatus.AES_NO_AUTHENTICATION\n\t\to(getConfidentialIcon(mail)).equals(Icons.Lock)\n\n\t\tmail.encryptionAuthStatus = null\n\t\to(getConfidentialIcon(mail)).equals(Icons.Lock)\n\n\t\tmail.encryptionAuthStatus = EncryptionAuthStatus.RSA_NO_AUTHENTICATION\n\t\to(getConfidentialIcon(mail)).equals(Icons.Lock)\n\n\t\tmail.encryptionAuthStatus = EncryptionAuthStatus.TUTACRYPT_SENDER\n\t\to(getConfidentialIcon(mail)).equals(Icons.PQLock)\n\n\t\tmail.confidential = false\n\t\to(() => getConfidentialIcon(mail)).throws(ProgrammingError)\n\t})\n\n\to.spec(\"isTutanotaTeamMail\", function () {\n\t\to(\"regular non-confidential email is not\", function () {\n\t\t\tconst mail = createTestEntity(MailTypeRef, {\n\t\t\t\tconfidential: false,\n\t\t\t\tstate: MailState.RECEIVED,\n\t\t\t\tsender: tutanotaSender(),\n\t\t\t})\n\t\t\to(isTutanotaTeamMail(mail)).equals(false)\n\t\t})\n\n\t\to(\"regular confidential email is not\", function () {\n\t\t\tconst mail = createTestEntity(MailTypeRef, {\n\t\t\t\tconfidential: true,\n\t\t\t\tstate: MailState.RECEIVED,\n\t\t\t\tsender: tutanotaSender(),\n\t\t\t})\n\t\t\to(isTutanotaTeamMail(mail)).equals(false)\n\t\t})\n\n\t\to(\"system email without auth is\", function () {\n\t\t\tconst mail = createSystemMail()\n\t\t\to(isTutanotaTeamMail(mail)).equals(true)\n\t\t})\n\n\t\to(\"system email failing PQ auth is not\", function () {\n\t\t\tconst mail = createSystemMail({ encryptionAuthStatus: EncryptionAuthStatus.TUTACRYPT_AUTHENTICATION_FAILED })\n\t\t\to(isTutanotaTeamMail(mail)).equals(false)\n\t\t})\n\n\t\to(\"system email with RSA (no) auth is\", function () {\n\t\t\tconst mail = createSystemMail({ encryptionAuthStatus: EncryptionAuthStatus.RSA_NO_AUTHENTICATION })\n\t\t\to(isTutanotaTeamMail(mail)).equals(true)\n\t\t})\n\n\t\to(\"system email with AES (no) auth is not\", function () {\n\t\t\tconst mail = createSystemMail({ encryptionAuthStatus: EncryptionAuthStatus.AES_NO_AUTHENTICATION })\n\t\t\to(isTutanotaTeamMail(mail)).equals(false)\n\t\t})\n\n\t\to(\"confidential email from tutao without auth is\", function () {\n\t\t\tconst mail = createTestEntity(MailTypeRef, {\n\t\t\t\tconfidential: true,\n\t\t\t\tstate: MailState.RECEIVED,\n\t\t\t\tsender: tutaoSender(),\n\t\t\t\tencryptionAuthStatus: null,\n\t\t\t})\n\t\t\to(isTutanotaTeamMail(mail)).equals(true)\n\t\t})\n\n\t\to(\"confidential email from tutao with PQ auth is\", function () {\n\t\t\tconst mail = createTestEntity(MailTypeRef, {\n\t\t\t\tconfidential: true,\n\t\t\t\tstate: MailState.RECEIVED,\n\t\t\t\tsender: tutaoSender(),\n\t\t\t\tencryptionAuthStatus: EncryptionAuthStatus.TUTACRYPT_AUTHENTICATION_SUCCEEDED,\n\t\t\t})\n\t\t\to(isTutanotaTeamMail(mail)).equals(true)\n\t\t})\n\n\t\to(\"confidential email from tutao with failing PQ auth is not\", function () {\n\t\t\tconst mail = createTestEntity(MailTypeRef, {\n\t\t\t\tconfidential: true,\n\t\t\t\tstate: MailState.RECEIVED,\n\t\t\t\tsender: tutaoSender(),\n\t\t\t\tencryptionAuthStatus: EncryptionAuthStatus.TUTACRYPT_AUTHENTICATION_FAILED,\n\t\t\t})\n\t\t\to(isTutanotaTeamMail(mail)).equals(false)\n\t\t})\n\n\t\to(\"confidential email from tutao with RSA (no) auth is\", function () {\n\t\t\tconst mail = createTestEntity(MailTypeRef, {\n\t\t\t\tconfidential: true,\n\t\t\t\tstate: MailState.RECEIVED,\n\t\t\t\tsender: tutaoSender(),\n\t\t\t\tencryptionAuthStatus: EncryptionAuthStatus.RSA_NO_AUTHENTICATION,\n\t\t\t})\n\t\t\to(isTutanotaTeamMail(mail)).equals(true)\n\t\t})\n\n\t\to(\"confidential email from tutao with AES (no) auth is not\", function () {\n\t\t\tconst mail = createTestEntity(MailTypeRef, {\n\t\t\t\tconfidential: true,\n\t\t\t\tstate: MailState.RECEIVED,\n\t\t\t\tsender: tutaoSender(),\n\t\t\t\tencryptionAuthStatus: EncryptionAuthStatus.AES_NO_AUTHENTICATION,\n\t\t\t})\n\t\t\to(isTutanotaTeamMail(mail)).equals(false)\n\t\t})\n\n\t\to(\"confidential email from no-reply is\", function () {\n\t\t\tconst mail = createTestEntity(MailTypeRef, {\n\t\t\t\tconfidential: true,\n\t\t\t\tstate: MailState.RECEIVED,\n\t\t\t\tsender: tutanotaNoReplySender(),\n\t\t\t})\n\t\t\to(isTutanotaTeamMail(mail)).equals(true)\n\t\t})\n\n\t\to(`non-confidential \"system\" email is not`, function () {\n\t\t\tconst mail = createMail({ ...createSystemMail(), confidential: false })\n\t\t\to(isTutanotaTeamMail(mail)).equals(false)\n\t\t})\n\n\t\to(\"non-confidential email from tutao is not\", function () {\n\t\t\tconst mail = createTestEntity(MailTypeRef, {\n\t\t\t\tconfidential: false,\n\t\t\t\tstate: MailState.RECEIVED,\n\t\t\t\tsender: tutaoSender(),\n\t\t\t})\n\t\t\to(isTutanotaTeamMail(mail)).equals(false)\n\t\t})\n\n\t\to(\"non confidential email from no-reply is not\", function () {\n\t\t\tconst mail = createTestEntity(MailTypeRef, {\n\t\t\t\tconfidential: false,\n\t\t\t\tstate: MailState.RECEIVED,\n\t\t\t\tsender: tutanotaNoReplySender(),\n\t\t\t})\n\t\t\to(isTutanotaTeamMail(mail)).equals(false)\n\t\t})\n\t})\n\n\to.spec(\"isSystemNotification\", function () {\n\t\to(\"regular non-confidential email is not\", function () {\n\t\t\tconst mail = createTestEntity(MailTypeRef, {\n\t\t\t\tconfidential: false,\n\t\t\t\tstate: MailState.RECEIVED,\n\t\t\t\tsender: tutanotaSender(),\n\t\t\t})\n\t\t\to(isSystemNotification(mail)).equals(false)\n\t\t})\n\n\t\to(\"regular confidential email is not\", function () {\n\t\t\tconst mail = createTestEntity(MailTypeRef, {\n\t\t\t\tconfidential: true,\n\t\t\t\tstate: MailState.RECEIVED,\n\t\t\t\tsender: tutanotaSender(),\n\t\t\t})\n\t\t\to(isSystemNotification(mail)).equals(false)\n\t\t})\n\n\t\to(\"system email without auth is\", function () {\n\t\t\tconst mail = createSystemMail()\n\t\t\to(isSystemNotification(mail)).equals(true)\n\t\t})\n\n\t\to(\"system email with PQ auth is\", function () {\n\t\t\tconst mail = createSystemMail({ encryptionAuthStatus: EncryptionAuthStatus.TUTACRYPT_AUTHENTICATION_SUCCEEDED })\n\t\t\to(isSystemNotification(mail)).equals(true)\n\t\t})\n\n\t\to(\"system email with failing PQ auth is not\", function () {\n\t\t\tconst mail = createSystemMail({ encryptionAuthStatus: EncryptionAuthStatus.TUTACRYPT_AUTHENTICATION_FAILED })\n\t\t\to(isSystemNotification(mail)).equals(false)\n\t\t})\n\n\t\to(\"system email with RSA (no) auth is\", function () {\n\t\t\tconst mail = createSystemMail({ encryptionAuthStatus: EncryptionAuthStatus.RSA_NO_AUTHENTICATION })\n\t\t\to(isSystemNotification(mail)).equals(true)\n\t\t})\n\n\t\to(\"system email with AES (no) auth is not\", function () {\n\t\t\tconst mail = createSystemMail({ encryptionAuthStatus: EncryptionAuthStatus.AES_NO_AUTHENTICATION })\n\t\t\to(isSystemNotification(mail)).equals(false)\n\t\t})\n\n\t\to(\"confidential email from tutao is not\", function () {\n\t\t\tconst mail = createTestEntity(MailTypeRef, {\n\t\t\t\tconfidential: true,\n\t\t\t\tstate: MailState.RECEIVED,\n\t\t\t\tsender: tutaoSender(),\n\t\t\t\tauthStatus: null,\n\t\t\t})\n\t\t\to(isSystemNotification(mail)).equals(false)\n\t\t})\n\n\t\to(\"confidential email from tutao with PQ auth is not\", function () {\n\t\t\tconst mail = createTestEntity(MailTypeRef, {\n\t\t\t\tconfidential: true,\n\t\t\t\tstate: MailState.RECEIVED,\n\t\t\t\tsender: tutaoSender(),\n\t\t\t\tauthStatus: EncryptionAuthStatus.TUTACRYPT_AUTHENTICATION_SUCCEEDED,\n\t\t\t})\n\t\t\to(isSystemNotification(mail)).equals(false)\n\t\t})\n\n\t\to(\"confidential email from tutanota no-reply is\", function () {\n\t\t\tconst mail = createTestEntity(MailTypeRef, {\n\t\t\t\tconfidential: true,\n\t\t\t\tstate: MailState.RECEIVED,\n\t\t\t\tsender: tutanotaNoReplySender(),\n\t\t\t})\n\t\t\to(isSystemNotification(mail)).equals(true)\n\t\t})\n\n\t\to(\"confidential email from tutao no-reply is\", function () {\n\t\t\tconst mail = createTestEntity(MailTypeRef, {\n\t\t\t\tconfidential: true,\n\t\t\t\tstate: MailState.RECEIVED,\n\t\t\t\tsender: tutaoNoReplySender(),\n\t\t\t})\n\t\t\to(isSystemNotification(mail)).equals(true)\n\t\t})\n\n\t\to(`non-confidential \"system\" email is not`, function () {\n\t\t\tconst mail = createMail({ ...createSystemMail(), confidential: false })\n\t\t\to(isSystemNotification(mail)).equals(false)\n\t\t})\n\n\t\to(\"non-confidential email from tutao is not\", function () {\n\t\t\tconst mail = createTestEntity(MailTypeRef, {\n\t\t\t\tconfidential: false,\n\t\t\t\tstate: MailState.RECEIVED,\n\t\t\t\tsender: tutaoSender(),\n\t\t\t})\n\t\t\to(isSystemNotification(mail)).equals(false)\n\t\t})\n\n\t\to(\"non confidential email from no-reply is not\", function () {\n\t\t\tconst mail = createTestEntity(MailTypeRef, {\n\t\t\t\tconfidential: false,\n\t\t\t\tstate: MailState.RECEIVED,\n\t\t\t\tsender: tutanotaNoReplySender(),\n\t\t\t})\n\t\t\to(isSystemNotification(mail)).equals(false)\n\t\t})\n\t})\n})\n","import o from \"@tutao/otest\"\nimport { Notifications } from \"../../../src/common/gui/Notifications.js\"\nimport type { Spy } from \"@tutao/tutanota-test-utils\"\nimport { spy } from \"@tutao/tutanota-test-utils\"\nimport { MailSetKind, OperationType } from \"../../../src/common/api/common/TutanotaConstants.js\"\nimport { MailFolderTypeRef, MailTypeRef } from \"../../../src/common/api/entities/tutanota/TypeRefs.js\"\nimport { EntityClient } from \"../../../src/common/api/common/EntityClient.js\"\nimport { EntityRestClientMock } from \"../api/worker/rest/EntityRestClientMock.js\"\nimport { downcast } from \"@tutao/tutanota-utils\"\nimport { LoginController } from \"../../../src/common/api/main/LoginController.js\"\nimport { instance, matchers, object, when } from \"testdouble\"\nimport { UserController } from \"../../../src/common/api/main/UserController.js\"\nimport { createTestEntity } from \"../TestUtils.js\"\nimport { EntityUpdateData } from \"../../../src/common/api/common/utils/EntityUpdateUtils.js\"\nimport { MailboxDetail, MailboxModel } from \"../../../src/common/mailFunctionality/MailboxModel.js\"\nimport { InboxRuleHandler } from \"../../../src/mail-app/mail/model/InboxRuleHandler.js\"\nimport { getElementId, getListId } from \"../../../src/common/api/common/utils/EntityUtils.js\"\nimport { MailModel } from \"../../../src/mail-app/mail/model/MailModel.js\"\nimport { EventController } from \"../../../src/common/api/main/EventController.js\"\nimport { MailFacade } from \"../../../src/common/api/worker/facades/lazy/MailFacade.js\"\n\no.spec(\"MailModelTest\", function () {\n\tlet notifications: Partial<Notifications>\n\tlet showSpy: Spy\n\tlet model: MailModel\n\tconst inboxFolder = createTestEntity(MailFolderTypeRef, { _id: [\"folderListId\", \"inboxId\"], isMailSet: false })\n\tinboxFolder.mails = \"instanceListId\"\n\tinboxFolder.folderType = MailSetKind.INBOX\n\tconst anotherFolder = createTestEntity(MailFolderTypeRef, { _id: [\"folderListId\", \"archiveId\"], isMailSet: false })\n\tanotherFolder.mails = \"anotherListId\"\n\tanotherFolder.folderType = MailSetKind.ARCHIVE\n\tlet mailboxDetails: Partial<MailboxDetail>[]\n\tlet logins: LoginController\n\tlet inboxRuleHandler: InboxRuleHandler\n\tconst restClient: EntityRestClientMock = new EntityRestClientMock()\n\n\to.beforeEach(function () {\n\t\tnotifications = {}\n\t\tconst mailboxModel = instance(MailboxModel)\n\t\tconst eventController = instance(EventController)\n\t\tconst mailFacade = instance(MailFacade)\n\t\tshowSpy = notifications.showNotification = spy()\n\t\tlogins = object()\n\t\tlet userController = object<UserController>()\n\t\twhen(userController.isUpdateForLoggedInUserInstance(matchers.anything(), matchers.anything())).thenReturn(false)\n\t\twhen(logins.getUserController()).thenReturn(userController)\n\n\t\tinboxRuleHandler = object()\n\t\tmodel = new MailModel(downcast({}), mailboxModel, eventController, new EntityClient(restClient), logins, mailFacade, null, null)\n\t\t// not pretty, but works\n\t\t// model.mailboxDetails(mailboxDetails as MailboxDetail[])\n\t})\n\to(\"doesn't send notification for another folder\", async function () {\n\t\tconst mail = createTestEntity(MailTypeRef, { _id: [anotherFolder.mails, \"mailId\"], sets: [] })\n\t\trestClient.addListInstances(mail)\n\t\tawait model.entityEventsReceived([\n\t\t\tmakeUpdate({\n\t\t\t\tinstanceListId: getListId(mail),\n\t\t\t\tinstanceId: getElementId(mail),\n\t\t\t\toperation: OperationType.CREATE,\n\t\t\t}),\n\t\t])\n\t\to(showSpy.invocations.length).equals(0)\n\t})\n\to(\"doesn't send notification for move operation\", async function () {\n\t\tconst mail = createTestEntity(MailTypeRef, { _id: [inboxFolder.mails, \"mailId\"], sets: [] })\n\t\trestClient.addListInstances(mail)\n\t\tawait model.entityEventsReceived([\n\t\t\tmakeUpdate({\n\t\t\t\tinstanceListId: getListId(mail),\n\t\t\t\tinstanceId: getElementId(mail),\n\t\t\t\toperation: OperationType.DELETE,\n\t\t\t}),\n\t\t\tmakeUpdate({\n\t\t\t\tinstanceListId: getListId(mail),\n\t\t\t\tinstanceId: getElementId(mail),\n\t\t\t\toperation: OperationType.CREATE,\n\t\t\t}),\n\t\t])\n\t\to(showSpy.invocations.length).equals(0)\n\t})\n\n\tfunction makeUpdate(arg: { instanceListId: string; instanceId: Id; operation: OperationType }): EntityUpdateData {\n\t\treturn Object.assign(\n\t\t\t{},\n\t\t\t{\n\t\t\t\ttype: MailTypeRef.type,\n\t\t\t\tapplication: MailTypeRef.app,\n\t\t\t\tinstanceId: \"instanceId\",\n\t\t\t},\n\t\t\targ,\n\t\t)\n\t}\n})\n","import o from \"@tutao/otest\"\nimport {\n\tBirthdayTypeRef,\n\tContactAddressTypeRef,\n\tContactMailAddressTypeRef,\n\tContactPhoneNumberTypeRef,\n\tContactTypeRef,\n} from \"../../../src/common/api/entities/tutanota/TypeRefs.js\"\nimport { lang } from \"../../../src/common/misc/LanguageViewModel.js\"\nimport { compareContacts } from \"../../../src/mail-app/contacts/view/ContactGuiUtils.js\"\nimport { createTestEntity } from \"../TestUtils.js\"\nimport { ContactAddressType, ContactPhoneNumberType } from \"../../../src/common/api/common/TutanotaConstants.js\"\nimport {\n\textractStructuredAddresses,\n\textractStructuredMailAddresses,\n\textractStructuredPhoneNumbers,\n\tformatBirthdayNumeric,\n} from \"../../../src/common/contactsFunctionality/ContactUtils.js\"\n\no.spec(\"ContactUtilsTest\", function () {\n\tlet compare = function (c1Firstname, c1Lastname, c1MailAddress, c2Firstname, c2Lastname, c2MailAddress, byFirstName, expectedResult) {\n\t\tlet c1 = createTestEntity(ContactTypeRef)\n\t\tlet c2 = createTestEntity(ContactTypeRef)\n\t\tc1._id = [\"a\", \"1\"]\n\t\tc2._id = [\"a\", \"2\"]\n\t\tc1.firstName = c1Firstname\n\t\tc2.firstName = c2Firstname\n\t\tc1.lastName = c1Lastname\n\t\tc2.lastName = c2Lastname\n\n\t\tif (c1MailAddress) {\n\t\t\tlet m = createTestEntity(ContactMailAddressTypeRef)\n\t\t\tm.address = c1MailAddress\n\t\t\tc1.mailAddresses.push(m)\n\t\t}\n\n\t\tif (c2MailAddress) {\n\t\t\tlet m = createTestEntity(ContactMailAddressTypeRef)\n\t\t\tm.address = c2MailAddress\n\t\t\tc2.mailAddresses.push(m)\n\t\t}\n\n\t\tlet result = compareContacts(c1, c2, byFirstName)\n\n\t\t// We should use Mithril's ability to print messages instead of this log when it will work again (and the moment of writing it's\n\t\t// fixed but not released: https://github.com/MithrilJS/mithril.js/issues/2391\n\t\tif (result != expectedResult) {\n\t\t\tconsole.log(\n\t\t\t\t\"error >>>>>>>\",\n\t\t\t\t\"'\" + c1Firstname + \"'\",\n\t\t\t\t\"'\" + c1Lastname + \"'\",\n\t\t\t\tc1MailAddress,\n\t\t\t\t\"'\" + c2Firstname + \"'\",\n\t\t\t\t\"'\" + c2Lastname + \"'\",\n\t\t\t\tc2MailAddress,\n\t\t\t\t\"expected:\",\n\t\t\t\texpectedResult,\n\t\t\t\t\"result\",\n\t\t\t\tresult,\n\t\t\t)\n\t\t}\n\n\t\to(result).equals(expectedResult)\n\t}\n\n\to(\"compareContacts by first name\", function () {\n\t\t// only first name\n\t\tcompare(\"Alf\", \"\", null, \"\", \"\", null, true, -1)\n\t\tcompare(\"Alf\", \"\", null, \"Bob\", \"\", null, true, -1)\n\t\tcompare(\"\", \"\", null, \"Bob\", \"\", null, true, 1)\n\t\tcompare(\"Bob\", \"\", null, \"Alf\", \"\", null, true, 1)\n\t\t// only last name\n\t\tcompare(\"\", \"Alf\", null, \"\", \"\", null, true, -1)\n\t\tcompare(\"\", \"Alf\", null, \"\", \"Bob\", null, true, -1)\n\t\tcompare(\"\", \"\", null, \"\", \"Bob\", null, true, 1)\n\t\tcompare(\"\", \"Bob\", null, \"\", \"Alf\", null, true, 1)\n\t\t// only mail address\n\t\tcompare(\"\", \"\", \"Alf\", \"\", \"\", null, true, -1)\n\t\tcompare(\"\", \"\", \"Alf\", \"\", \"\", \"Bob\", true, -1)\n\t\tcompare(\"\", \"\", null, \"\", \"\", \"Bob\", true, 1)\n\t\tcompare(\"\", \"\", \"Bob\", \"\", \"\", \"Alf\", true, 1)\n\t\t// first and last name\n\t\tcompare(\"\", \"Alf\", null, \"Alf\", \"Bob\", null, true, 1)\n\t\tcompare(\"Alf\", \"Bob\", null, \"Bob\", \"Alf\", null, true, -1)\n\t\tcompare(\"Alf\", \"Bob\", null, \"\", \"Bob\", null, true, -1)\n\t\tcompare(\"Alf\", \"\", null, \"Alf\", \"Bob\", null, true, 1)\n\t\t// mixed\n\t\tcompare(\"\", \"Bob\", null, \"\", \"\", \"Alf\", true, -1)\n\t\tcompare(\"Bob\", \"\", null, \"\", \"\", \"Alf\", true, -1)\n\t\tcompare(\"Alf\", \"Bob\", \"Bob\", \"Alf\", \"Bob\", \"Alf\", true, 1)\n\t\tcompare(\"Alf\", \"Bob\", null, \"\", \"\", \"Alf\", true, -1)\n\t\t// none or same\n\t\tcompare(\"\", \"\", null, \"\", \"\", null, true, 1) // reverse id\n\n\t\tcompare(\"Alf\", \"Bob\", \"Bob\", \"Alf\", \"Bob\", \"Bob\", true, 1) // reverse id\n\n\t\tcompare(\"ma\", \"p\", \"aa\", \"Gump\", \"Forrest\", \"aa\", true, 1) // reverse id\n\t})\n\to(\"compareContacts by last name\", function () {\n\t\t// only first name\n\t\tcompare(\"Alf\", \"\", null, \"\", \"\", null, false, -1)\n\t\tcompare(\"Alf\", \"\", null, \"Bob\", \"\", null, false, -1)\n\t\tcompare(\"\", \"\", null, \"Bob\", \"\", null, false, 1)\n\t\tcompare(\"Bob\", \"\", null, \"Alf\", \"\", null, false, 1)\n\t\t// only last name\n\t\tcompare(\"\", \"Alf\", null, \"\", \"\", null, false, -1)\n\t\tcompare(\"\", \"Alf\", null, \"\", \"Bob\", null, false, -1)\n\t\tcompare(\"\", \"\", null, \"\", \"Bob\", null, false, 1)\n\t\tcompare(\"\", \"Bob\", null, \"\", \"Alf\", null, false, 1)\n\t\t// only mail address\n\t\tcompare(\"\", \"\", \"Alf\", \"\", \"\", null, false, -1)\n\t\tcompare(\"\", \"\", \"Alf\", \"\", \"\", \"Bob\", false, -1)\n\t\tcompare(\"\", \"\", null, \"\", \"\", \"Bob\", false, 1)\n\t\tcompare(\"\", \"\", \"Bob\", \"\", \"\", \"Alf\", false, 1)\n\t\t// first and last name\n\t\tcompare(\"\", \"Alf\", null, \"Alf\", \"Bob\", null, false, -1)\n\t\tcompare(\"Alf\", \"Bob\", null, \"Bob\", \"Alf\", null, false, 1)\n\t\tcompare(\"Alf\", \"Bob\", null, \"\", \"Bob\", null, false, -1)\n\t\tcompare(\"Alf\", \"\", null, \"Alf\", \"Bob\", null, false, 1)\n\t\t// mixed\n\t\tcompare(\"\", \"Bob\", null, \"\", \"\", \"Alf\", false, -1)\n\t\tcompare(\"Bob\", \"\", null, \"\", \"\", \"Alf\", false, -1)\n\t\tcompare(\"Alf\", \"Bob\", \"Bob\", \"Alf\", \"Bob\", \"Alf\", false, 1)\n\t\tcompare(\"Alf\", \"Bob\", null, \"\", \"\", \"Alf\", false, -1)\n\t\t// none or same\n\t\tcompare(\"\", \"\", null, \"\", \"\", null, false, 1) // reverse id\n\n\t\tcompare(\"Alf\", \"Bob\", \"Bob\", \"Alf\", \"Bob\", \"Bob\", false, 1) // reverse id\n\n\t\tcompare(\"ma\", \"p\", \"aa\", \"Gump\", \"Forrest\", \"aa\", false, 1) // reverse id\n\t})\n\to(\"formatNewBirthdayTest\", function () {\n\t\tlang.setLanguage({\n\t\t\tcode: \"en\",\n\t\t\tlanguageTag: \"en\",\n\t\t})\n\t\tlang.updateFormats({})\n\t\tlet bday = createTestEntity(BirthdayTypeRef)\n\t\tbday.day = \"12\"\n\t\tbday.month = \"10\"\n\t\tbday.year = \"2009\"\n\t\to(formatBirthdayNumeric(bday)).equals(\"10/12/2009\")\n\t\tbday.day = \"9\"\n\t\tbday.month = \"07\"\n\t\tbday.year = null\n\t\to(formatBirthdayNumeric(bday)).equals(\"7/9\")\n\t\tbday.day = \"09\"\n\t\tbday.month = \"7\"\n\t\tbday.year = null\n\t\to(formatBirthdayNumeric(bday)).equals(\"7/9\")\n\t\tbday = createTestEntity(BirthdayTypeRef)\n\t\tbday.day = \"12\"\n\t\tbday.month = \"10\"\n\t\tbday.year = \"2009\"\n\t})\n\n\to(\"formatBirthdayNumeric\", function () {\n\t\tconst leapYearBirthday = createTestEntity(BirthdayTypeRef)\n\t\tleapYearBirthday.year = \"2016\"\n\t\tleapYearBirthday.month = \"2\"\n\t\tleapYearBirthday.day = \"29\"\n\n\t\tconst leapYearBirthdayNoYear = createTestEntity(BirthdayTypeRef)\n\t\tleapYearBirthdayNoYear.month = \"2\"\n\t\tleapYearBirthdayNoYear.day = \"29\"\n\n\t\t// Chrome date bug issue: https://github.com/tutao/tutanota/issues/414\n\t\tconst chromeBugBirthday = createTestEntity(BirthdayTypeRef)\n\t\tchromeBugBirthday.year = \"1911\"\n\t\tchromeBugBirthday.month = \"8\"\n\t\tchromeBugBirthday.day = \"15\"\n\n\t\tlang._setLanguageTag(\"en\")\n\t\to(formatBirthdayNumeric(leapYearBirthday)).equals(\"2/29/2016\")\n\t\to(formatBirthdayNumeric(leapYearBirthdayNoYear)).equals(\"2/29\")\n\t\to(formatBirthdayNumeric(chromeBugBirthday)).equals(\"8/15/1911\")\n\n\t\tlang._setLanguageTag(\"de\")\n\t\to(formatBirthdayNumeric(leapYearBirthday)).equals(\"29.2.2016\")\n\t\to(formatBirthdayNumeric(chromeBugBirthday)).equals(\"15.8.1911\")\n\n\t\tlang._setLanguageTag(\"ja\")\n\t\to(formatBirthdayNumeric(leapYearBirthday)).equals(\"2016/2/29\")\n\t\to(formatBirthdayNumeric(chromeBugBirthday)).equals(\"1911/8/15\")\n\n\t\tlang._setLanguageTag(\"pt\")\n\t\to(formatBirthdayNumeric(leapYearBirthday)).equals(\"29/02/2016\")\n\t\to(formatBirthdayNumeric(chromeBugBirthday)).equals(\"15/08/1911\")\n\t})\n\n\to(\"extractStructuredEmailAddress\", function () {\n\t\tconst contact = createTestEntity(ContactTypeRef)\n\n\t\tcontact.mailAddresses.push(createTestEntity(ContactMailAddressTypeRef))\n\t\tcontact.mailAddresses.push(createTestEntity(ContactMailAddressTypeRef))\n\n\t\to(extractStructuredMailAddresses(contact.mailAddresses)).deepEquals(\n\t\t\tcontact.mailAddresses.map((address) => ({\n\t\t\t\taddress: address.address,\n\t\t\t\ttype: address.type as ContactAddressType,\n\t\t\t\tcustomTypeName: address.customTypeName,\n\t\t\t})),\n\t\t)\n\t})\n\n\to(\"extractStructuredAddress\", function () {\n\t\tconst contact = createTestEntity(ContactTypeRef)\n\n\t\tcontact.addresses.push(createTestEntity(ContactAddressTypeRef))\n\t\tcontact.addresses.push(createTestEntity(ContactAddressTypeRef))\n\n\t\to(extractStructuredAddresses(contact.addresses)).deepEquals(\n\t\t\tcontact.addresses.map((address) => ({\n\t\t\t\taddress: address.address,\n\t\t\t\ttype: address.type as ContactAddressType,\n\t\t\t\tcustomTypeName: address.customTypeName,\n\t\t\t})),\n\t\t)\n\t})\n\n\to(\"extractStructuredPhoneNumber\", function () {\n\t\tconst contact = createTestEntity(ContactTypeRef)\n\n\t\tcontact.phoneNumbers.push(createTestEntity(ContactPhoneNumberTypeRef))\n\t\tcontact.phoneNumbers.push(createTestEntity(ContactPhoneNumberTypeRef))\n\n\t\to(extractStructuredPhoneNumbers(contact.phoneNumbers)).deepEquals(\n\t\t\tcontact.phoneNumbers.map((phone) => ({\n\t\t\t\tnumber: phone.number,\n\t\t\t\ttype: phone.type as ContactPhoneNumberType,\n\t\t\t\tcustomTypeName: phone.customTypeName,\n\t\t\t})),\n\t\t)\n\t})\n})\n","import o from \"@tutao/otest\"\nimport type { Contact } from \"../../../src/common/api/entities/tutanota/TypeRefs.js\"\nimport {\n\tBirthdayTypeRef,\n\tContactAddressTypeRef,\n\tContactMailAddressTypeRef,\n\tContactPhoneNumberTypeRef,\n\tContactSocialIdTypeRef,\n\tContactTypeRef,\n} from \"../../../src/common/api/entities/tutanota/TypeRefs.js\"\nimport {\n\t_areResidualContactFieldsEqual,\n\t_compareBirthdays,\n\t_compareContactsForMerge,\n\t_compareFullName,\n\t_compareMailAddresses,\n\t_comparePhoneNumbers,\n\t_getMergedAddresses,\n\t_getMergedEmailAddresses,\n\t_getMergedNameField,\n\t_getMergedOtherField,\n\t_getMergedPhoneNumbers,\n\t_getMergedSocialIds,\n\tgetMergeableContacts,\n\tmergeContacts,\n} from \"../../../src/mail-app/contacts/ContactMergeUtils.js\"\nimport {\n\tContactAddressType,\n\tContactComparisonResult,\n\tContactPhoneNumberType,\n\tContactSocialType,\n\tIndifferentContactComparisonResult,\n} from \"../../../src/common/api/common/TutanotaConstants.js\"\nimport { createFilledContact } from \"./VCardExporterTest.js\"\nimport { downcast, neverNull } from \"@tutao/tutanota-utils\"\nimport { _contactToVCard } from \"../../../src/mail-app/contacts/VCardExporter.js\"\nimport { birthdayToIsoDate } from \"../../../src/common/api/common/utils/BirthdayUtils.js\"\nimport { createTestEntity } from \"../TestUtils.js\"\n\no.spec(\"ContactMergeUtilsTest\", function () {\n\t// tests are made for the validation of the comparison functions to find mergable contacts\n\t// tests all ContactMergeUtils functions\n\to(\"GetMergableContactsTest\", function () {\n\t\tlet c1 = createEmailPhoneContact(\"A\", \"B\", [\"a@b.de\"])\n\t\tlet c2 = createEmailPhoneContact(\"A\", \"B\", [\"a@b.de\"])\n\t\tlet c3 = createEmailPhoneContact(\"A\", \"B\", [\"c@b.de\"])\n\t\tlet c4 = createEmailPhoneContact(\"A\", \"B\", [\"c@b.de\"])\n\t\tlet c5 = createEmailPhoneContact(\"A\", \"B\", [\"d@b.de\"])\n\t\tlet c6 = createEmailPhoneContact(\"c\", \"c\", [\"ADC@b.de\"])\n\t\tlet c7 = createEmailPhoneContact(\"c\", \"c\", [\"BDC@b.de\"])\n\t\tlet c8 = createEmailPhoneContact(\"c\", \"c\", [\"CDC@b.de\"])\n\t\tlet c9 = createEmailPhoneContact(\"a\", \"\", [\"hello@hello.de\"], [\"123456\"])\n\t\tlet c10 = createEmailPhoneContact(\"a\", \"\", [\"hello@hello.de\"], [\"789456123\"])\n\t\tc10 = addFilledContactOtherFields(c10, \"\", \"\", \"Mr.\", \"\")\n\t\tlet c11 = createEmailPhoneContact(\"\", \"\", [\"hello@hello.de\"], [\"258258\"])\n\t\tlet c12 = createEmailPhoneContact(\"b\", \"b\", [\"tuta@hello.de\"], [\"654321\"])\n\t\tlet c13 = createEmailPhoneContact(\"b\", \"b\", [\"bnt@bnt.com\"], [\"147852369\"])\n\t\tc13 = addFilledContactOtherFields(c13, \"\", \"tuta\", \"Mr.Dr.\", \"\")\n\t\tlet c14 = createEmailPhoneContact(\"b\", \"b\", [], [\"1231231258258\"])\n\t\tlet c15 = createEmailPhoneContact(\"a\", \"\", [\"hello@hello.de\"], [\"123456\", \"789456123\", \"258258\"])\n\t\tc15 = addFilledContactOtherFields(c15, \"\", \"\", \"Mr.\", \"\")\n\t\tlet c16 = createEmailPhoneContact(\"b\", \"b\", [\"tuta@hello.de\", \"bnt@bnt.com\"], [\"654321\", \"147852369\", \"1231231258258\"])\n\t\tc16 = addFilledContactOtherFields(c16, \"\", \"tuta\", \"Mr.Dr.\", \"\")\n\t\to(JSON.stringify(getMergeableContacts([c1, c2, c3]))).equals(\n\t\t\tJSON.stringify({\n\t\t\t\tmergeable: [[c1, c3]],\n\t\t\t\tdeletable: [c2],\n\t\t\t}),\n\t\t)\n\t\to(JSON.stringify(getMergeableContacts([c1, c3, c2]))).equals(\n\t\t\tJSON.stringify({\n\t\t\t\tmergeable: [[c1, c3]],\n\t\t\t\tdeletable: [c2],\n\t\t\t}),\n\t\t)\n\t\to(JSON.stringify(getMergeableContacts([c3, c1, c2]))).equals(\n\t\t\tJSON.stringify({\n\t\t\t\tmergeable: [[c3, c1]],\n\t\t\t\tdeletable: [c2],\n\t\t\t}),\n\t\t)\n\t\to(JSON.stringify(getMergeableContacts([c3, c1, c2, c4]))).equals(\n\t\t\tJSON.stringify({\n\t\t\t\tmergeable: [[c3, c1]],\n\t\t\t\tdeletable: [c2, c4],\n\t\t\t}),\n\t\t)\n\t\to(JSON.stringify(getMergeableContacts([c1, c2, c3, c4, c5]))).equals(\n\t\t\tJSON.stringify({\n\t\t\t\tmergeable: [[c1, c3, c5]],\n\t\t\t\tdeletable: [c2, c4],\n\t\t\t}),\n\t\t)\n\t\to(JSON.stringify(getMergeableContacts([c1, c2, c3, c6, c7, c8]))).equals(\n\t\t\tJSON.stringify({\n\t\t\t\tmergeable: [\n\t\t\t\t\t[c1, c3],\n\t\t\t\t\t[c6, c7, c8],\n\t\t\t\t],\n\t\t\t\tdeletable: [c2],\n\t\t\t}),\n\t\t)\n\t\to(JSON.stringify(getMergeableContacts([c15, c16, c9, c10, c11, c12, c13, c14]))).equals(\n\t\t\tJSON.stringify({\n\t\t\t\tmergeable: [\n\t\t\t\t\t[c15, c9, c10, c11],\n\t\t\t\t\t[c16, c12, c13, c14],\n\t\t\t\t],\n\t\t\t\tdeletable: [],\n\t\t\t}),\n\t\t)\n\t\to(JSON.stringify(getMergeableContacts([c15, c9, c10, c11, c12, c13, c14, c16]))).equals(\n\t\t\tJSON.stringify({\n\t\t\t\tmergeable: [\n\t\t\t\t\t[c15, c9, c10, c11],\n\t\t\t\t\t[c12, c13, c14, c16],\n\t\t\t\t],\n\t\t\t\tdeletable: [],\n\t\t\t}),\n\t\t)\n\t\to(JSON.stringify(getMergeableContacts([c15, c16, c9, c10, c12, c13, c14, c11]))).equals(\n\t\t\tJSON.stringify({\n\t\t\t\tmergeable: [\n\t\t\t\t\t[c15, c9, c10, c11],\n\t\t\t\t\t[c16, c12, c13, c14],\n\t\t\t\t],\n\t\t\t\tdeletable: [],\n\t\t\t}),\n\t\t)\n\t\to(getMergeableContacts([c10, c9, c15, c13, c11, c16, c12, c14]).mergeable[0].length).equals(4)\n\t\to(getMergeableContacts([c10, c9, c15, c13, c11, c16, c12, c14]).mergeable[1].length).equals(4) // o(getMergeableContacts([c10, c9, c15, c13, c11]).mergeable[0].length).equals(4)\n\t\t// console.log(getMergeableContacts([c10, c9, c15, c13, c11]).mergeable[0])\n\t})\n\n\tfunction createEmailPhoneContact(\n\t\tfirstName: string,\n\t\tlastName: string,\n\t\temailAddresses?: string[] | null | undefined,\n\t\tphoneNumbers?: string[] | null | undefined,\n\t): Contact {\n\t\treturn createFilledContact(firstName, lastName, \"\", \"\", \"\", \"\", \"\", \"\", \"\", emailAddresses, phoneNumbers)\n\t}\n\n\to(\"testCompareMailaddresses\", function () {\n\t\tlet c1 = createFilledContactMailAddresses([])\n\t\tlet c2 = createFilledContactMailAddresses([])\n\t\to(_compareMailAddresses(c1, c2)).equals(IndifferentContactComparisonResult.BothEmpty)\n\t\tc1 = createFilledContactMailAddresses([\"anton@mail.de\"])\n\t\tc2 = createFilledContactMailAddresses([\"anton@mail.de\"])\n\t\to(_compareMailAddresses(c1, c2)).equals(ContactComparisonResult.Equal)\n\t\tc1 = createFilledContactMailAddresses([\" anton@mail.de\"])\n\t\tc2 = createFilledContactMailAddresses([\"anton@mail.de\"])\n\t\to(_compareMailAddresses(c1, c2)).equals(ContactComparisonResult.Equal)\n\t\to(_compareMailAddresses(c2, c1)).equals(ContactComparisonResult.Equal)\n\t\tc1 = createFilledContactMailAddresses([\"TOM@mail.de\"])\n\t\tc2 = createFilledContactMailAddresses([\"anton@mail.de\"])\n\t\to(_compareMailAddresses(c1, c2)).equals(ContactComparisonResult.Unique)\n\t\to(_compareMailAddresses(c2, c1)).equals(ContactComparisonResult.Unique)\n\t\tc1 = createFilledContactMailAddresses([\"TOM@mail.de\", \"anton@mail.de\"])\n\t\tc2 = createFilledContactMailAddresses([\"anton@mail.de\"])\n\t\to(_compareMailAddresses(c1, c2)).equals(ContactComparisonResult.Similar)\n\t\to(_compareMailAddresses(c2, c1)).equals(ContactComparisonResult.Similar)\n\t\tc1 = createFilledContactMailAddresses([\"TOM@mail.de\"])\n\t\tc2 = createFilledContactMailAddresses([\"tom@mail.de\"])\n\t\to(_compareMailAddresses(c1, c2)).equals(ContactComparisonResult.Similar)\n\t\to(_compareMailAddresses(c2, c1)).equals(ContactComparisonResult.Similar)\n\t\tc1 = createFilledContactMailAddresses([\"tom@mail.de\", \"tom@mail.de\"])\n\t\tc2 = createFilledContactMailAddresses([\"tom@mail.de\"])\n\t\to(_compareMailAddresses(c1, c2)).equals(ContactComparisonResult.Similar)\n\t\to(_compareMailAddresses(c2, c1)).equals(ContactComparisonResult.Similar)\n\t\tc1 = createFilledContactMailAddresses([])\n\t\tc2 = createFilledContactMailAddresses([\"tom@mail.de\"])\n\t\to(_compareMailAddresses(c1, c2)).equals(IndifferentContactComparisonResult.OneEmpty)\n\t\to(_compareMailAddresses(c2, c1)).equals(IndifferentContactComparisonResult.OneEmpty)\n\t})\n\n\tfunction createFilledContactMailAddresses(mailAddresses: string[]) {\n\t\treturn mailAddresses.map((m) => {\n\t\t\tlet a = createTestEntity(ContactMailAddressTypeRef)\n\t\t\ta.address = m\n\t\t\ta.type = ContactAddressType.WORK\n\t\t\ta.customTypeName = \"\"\n\t\t\treturn a\n\t\t})\n\t}\n\n\to(\"testCompareFullNames\", function () {\n\t\tlet c1 = createEmailPhoneContact(\"anton\", \"schmidt\", null)\n\t\tlet c2 = createEmailPhoneContact(\"bob\", \"schmidt\", null)\n\t\to(_compareFullName(c1, c2)).equals(ContactComparisonResult.Unique)\n\t\to(_compareFullName(c2, c1)).equals(ContactComparisonResult.Unique)\n\t\tc1 = createEmailPhoneContact(\"anton\", \"schmidt\", null)\n\t\tc2 = createEmailPhoneContact(\"\", \"schmidt\", null)\n\t\to(_compareFullName(c1, c2)).equals(ContactComparisonResult.Similar)\n\t\to(_compareFullName(c2, c1)).equals(ContactComparisonResult.Similar)\n\t\tc1 = createEmailPhoneContact(\"\", \"schmidt\", null)\n\t\tc2 = createEmailPhoneContact(\"\", \"schmidt\", null)\n\t\to(_compareFullName(c1, c2)).equals(ContactComparisonResult.Equal)\n\t\tc1 = createEmailPhoneContact(\"\", \"\", null)\n\t\tc2 = createEmailPhoneContact(\"\", \"\", null)\n\t\to(_compareFullName(c1, c2)).equals(IndifferentContactComparisonResult.BothEmpty)\n\t\tc1 = createEmailPhoneContact(\"\", \"\", null)\n\t\tc2 = createEmailPhoneContact(\"a\", \"b\", null)\n\t\to(_compareFullName(c1, c2)).equals(IndifferentContactComparisonResult.OneEmpty)\n\t\to(_compareFullName(c2, c1)).equals(IndifferentContactComparisonResult.OneEmpty)\n\t\tc1 = createEmailPhoneContact(\"anton\", \"schmidt\", null)\n\t\tc2 = createEmailPhoneContact(\"anton\", \"schmidt\", null)\n\t\to(_compareFullName(c1, c2)).equals(ContactComparisonResult.Equal)\n\t\tc1 = createEmailPhoneContact(\"Anton\", \"Schmidt\", null)\n\t\tc2 = createEmailPhoneContact(\"anton\", \"schmidt\", null)\n\t\to(_compareFullName(c1, c2)).equals(ContactComparisonResult.Similar)\n\t\to(_compareFullName(c2, c1)).equals(ContactComparisonResult.Similar)\n\t\tc1 = createEmailPhoneContact(\"anton\", \"schmidt\", null)\n\t\tc2 = createEmailPhoneContact(\"Anton\", \"schmidt\", null)\n\t\to(_compareFullName(c1, c2)).equals(ContactComparisonResult.Similar)\n\t\to(_compareFullName(c2, c1)).equals(ContactComparisonResult.Similar)\n\t\tc1 = createEmailPhoneContact(\"\", \"Schmidt\", null)\n\t\tc2 = createEmailPhoneContact(\"\", \"schmidt\", null)\n\t\to(_compareFullName(c1, c2)).equals(ContactComparisonResult.Similar)\n\t\to(_compareFullName(c2, c1)).equals(ContactComparisonResult.Similar)\n\t\tc1 = createEmailPhoneContact(\"anton\", \"\", null)\n\t\tc2 = createEmailPhoneContact(\"anton\", \"\", null)\n\t\to(_compareFullName(c1, c2)).equals(ContactComparisonResult.Equal)\n\t})\n\to(\"testComparePhonenumbers\", function () {\n\t\tlet c1 = createFilledContactPhoneNumbers([])\n\t\tlet c2 = createFilledContactPhoneNumbers([])\n\t\to(_comparePhoneNumbers(c1, c2)).equals(IndifferentContactComparisonResult.BothEmpty)\n\t\tc1 = createFilledContactPhoneNumbers([\"017999854654\"])\n\t\tc2 = createFilledContactPhoneNumbers([\"017999854654\"])\n\t\to(_comparePhoneNumbers(c1, c2)).equals(ContactComparisonResult.Equal)\n\t\tc1 = createFilledContactPhoneNumbers([\"017999854654\"])\n\t\tc2 = createFilledContactPhoneNumbers([\"099999999999\"])\n\t\to(_comparePhoneNumbers(c1, c2)).equals(ContactComparisonResult.Unique)\n\t\to(_comparePhoneNumbers(c2, c1)).equals(ContactComparisonResult.Unique)\n\t\tc1 = createFilledContactPhoneNumbers([\"017999854654\"])\n\t\tc2 = createFilledContactPhoneNumbers([\"099999999999\", \"017999854654\"])\n\t\to(_comparePhoneNumbers(c2, c1)).equals(ContactComparisonResult.Similar)\n\t\to(_comparePhoneNumbers(c1, c2)).equals(ContactComparisonResult.Similar)\n\t})\n\n\tfunction createFilledContactPhoneNumbers(phoneNumbers: string[]) {\n\t\treturn phoneNumbers.map((n) => {\n\t\t\tlet a = createTestEntity(ContactPhoneNumberTypeRef)\n\t\t\ta.number = n\n\t\t\ta.type = ContactAddressType.WORK\n\t\t\ta.customTypeName = \"\"\n\t\t\treturn a\n\t\t})\n\t}\n\n\to(\"testCompareResidualContact\", function () {\n\t\tlet c1 = createFilledContactOtherFields(\"\", \"\", \"\", \"\")\n\t\tlet c2 = createFilledContactOtherFields(\"\", \"\", \"\", \"\")\n\t\to(_areResidualContactFieldsEqual(c1, c2)).equals(true)\n\t\tc1 = createFilledContactOtherFields(\"\", \"Tutao GmbH\", \"\", \"\")\n\t\tc2 = createFilledContactOtherFields(\"\", \"Tutao GmbH\", \"\", \"\")\n\t\to(_areResidualContactFieldsEqual(c1, c2)).equals(true)\n\t\tc1 = createFilledContactOtherFields(\"Tutao GmbH\", \"\", \"\", \"\")\n\t\tc2 = createFilledContactOtherFields(\"Hallo\", \"Tutao GmbH\", \"\", \"\")\n\t\to(_areResidualContactFieldsEqual(c1, c2)).equals(false)\n\t\tc1 = createFilledContactOtherFields(\"Tutao GmbH\", \"Tutao GmbH\", \"\", \"\")\n\t\tc2 = createFilledContactOtherFields(\"Hallo\", \"Tutao GmbH\", \"\", \"\")\n\t\to(_areResidualContactFieldsEqual(c1, c2)).equals(false)\n\t})\n\n\tfunction createFilledContactOtherFields(comment: string, company: string, title: string, nickname: string) {\n\t\treturn createFilledContact(\"\", \"\", \"\", \"\", \"\", comment, company, title, nickname)\n\t}\n\n\tfunction addFilledContactOtherFields(\n\t\tc: Contact,\n\t\tcomment: string,\n\t\tcompany: string,\n\t\ttitle: string,\n\t\tnickname: string,\n\t\tsocialIds?: string[] | null | undefined,\n\t\taddresses?: string[] | null | undefined,\n\t) {\n\t\tc.title = title\n\t\tc.comment = comment\n\t\tc.company = company\n\t\tc.nickname = nickname\n\n\t\tif (addresses) {\n\t\t\taddresses.map((m) => {\n\t\t\t\tlet a = createTestEntity(ContactAddressTypeRef)\n\t\t\t\ta.address = m\n\t\t\t\ta.type = ContactAddressType.WORK\n\t\t\t\ta.customTypeName = \"\"\n\t\t\t\tc.addresses.push(a)\n\t\t\t})\n\t\t}\n\n\t\tif (socialIds) {\n\t\t\tsocialIds.map((m) => {\n\t\t\t\tlet a = createTestEntity(ContactSocialIdTypeRef)\n\t\t\t\ta.socialId = m\n\t\t\t\ta.type = ContactSocialType.TWITTER\n\t\t\t\ta.customTypeName = \"\"\n\t\t\t\tc.socialIds.push(a)\n\t\t\t})\n\t\t}\n\n\t\treturn c\n\t}\n\n\to.spec(\"testCompareContactsForMerge\", function () {\n\t\to(\"contacts are equal 1\", function () {\n\t\t\tconst c1 = createEmailPhoneContact(\"anton\", \"schmidt\", [\"anton@mail.de\"], [\"123456\"])\n\t\t\tconst c2 = createEmailPhoneContact(\"anton\", \"schmidt\", [\"anton@mail.de\"], [\"123456\"])\n\t\t\to(_compareContactsForMerge(c1, c2)).equals(ContactComparisonResult.Equal)\n\t\t\to(_compareContactsForMerge(c2, c1)).equals(ContactComparisonResult.Equal)\n\t\t})\n\t\to(\"empty contacts\", function () {\n\t\t\tconst c1 = createEmailPhoneContact(\"\", \"\", [], [])\n\t\t\tconst c2 = createEmailPhoneContact(\"\", \"\", [], [])\n\t\t\to(_compareContactsForMerge(c1, c2)).equals(ContactComparisonResult.Equal)\n\t\t\to(_compareContactsForMerge(c2, c1)).equals(ContactComparisonResult.Equal)\n\t\t})\n\t\to(\"contacts are equal - phone numer matches\", function () {\n\t\t\tconst c1 = createEmailPhoneContact(\"\", \"\", [], [\"123456\"])\n\t\t\tconst c2 = createEmailPhoneContact(\"\", \"\", [], [\"123456\"])\n\t\t\to(_compareContactsForMerge(c1, c2)).equals(ContactComparisonResult.Equal)\n\t\t\to(_compareContactsForMerge(c2, c1)).equals(ContactComparisonResult.Equal)\n\t\t})\n\t\to(\"contacts are equal - mail address matches\", function () {\n\t\t\tconst c1 = createEmailPhoneContact(\"\", \"\", [\"a@b.de\"], [])\n\t\t\tconst c2 = createEmailPhoneContact(\"\", \"\", [\"a@b.de\"], [])\n\t\t\to(_compareContactsForMerge(c1, c2)).equals(ContactComparisonResult.Equal)\n\t\t\to(_compareContactsForMerge(c2, c1)).equals(ContactComparisonResult.Equal)\n\t\t})\n\t\to(\"contacts are equal 2\", function () {\n\t\t\tconst c1 = createEmailPhoneContact(\"anton\", \"schmidt\", [], [])\n\t\t\tconst c2 = createEmailPhoneContact(\"anton\", \"schmidt\", [], [])\n\t\t\to(_compareContactsForMerge(c1, c2)).equals(ContactComparisonResult.Equal)\n\t\t\to(_compareContactsForMerge(c2, c1)).equals(ContactComparisonResult.Equal)\n\t\t})\n\t\to(\"contacts are similar - additional email addresses\", function () {\n\t\t\tconst c1 = createEmailPhoneContact(\"anton\", \"schmidt\", [\"anton@mail.de\", \"tuta@io.de\"], [\"123456\"])\n\t\t\tconst c2 = createEmailPhoneContact(\"anton\", \"schmidt\", [\"anton@mail.de\"], [\"123456\"])\n\t\t\to(_compareContactsForMerge(c1, c2)).equals(ContactComparisonResult.Similar)\n\t\t\to(_compareContactsForMerge(c2, c1)).equals(ContactComparisonResult.Similar)\n\t\t})\n\t\to(\"contacts are similar - case insensitive email addresses\", function () {\n\t\t\tconst c1 = createEmailPhoneContact(\"anton\", \"schmidt\", [\"anton@mail.de\", \"tuta@io.de\"], [\"123456\"])\n\t\t\tconst c2 = createEmailPhoneContact(\"anton\", \"schmidt\", [\"anton@mail.de\", \"TUTA@io.de\"], [\"123456\"])\n\t\t\to(_compareContactsForMerge(c1, c2)).equals(ContactComparisonResult.Similar)\n\t\t\to(_compareContactsForMerge(c2, c1)).equals(ContactComparisonResult.Similar)\n\t\t})\n\t\to(\"contacts are similar - name different\", function () {\n\t\t\tconst c1 = createEmailPhoneContact(\"anton\", \"schmidt\", [], [])\n\t\t\tconst c2 = createEmailPhoneContact(\"\", \"schmidt\", [], [])\n\t\t\to(_compareContactsForMerge(c1, c2)).equals(ContactComparisonResult.Similar)\n\t\t\to(_compareContactsForMerge(c2, c1)).equals(ContactComparisonResult.Similar)\n\t\t})\n\t\to(\"contacts are similar - different email addresses\", function () {\n\t\t\tconst c1 = createEmailPhoneContact(\"anton\", \"schmidt\", [\"anton@mail.de\", \"tuta@io.de\"], [])\n\t\t\tconst c2 = createEmailPhoneContact(\"anton\", \"schmidt\", [\"b@mail.de\", \"c@io.de\"], [])\n\t\t\to(_compareContactsForMerge(c1, c2)).equals(ContactComparisonResult.Similar)\n\t\t\to(_compareContactsForMerge(c2, c1)).equals(ContactComparisonResult.Similar)\n\t\t})\n\t\to(\"contacts are similar - different phone numbers \", function () {\n\t\t\tconst c1 = createEmailPhoneContact(\"anton\", \"schmidt\", [], [\"123456\"])\n\t\t\tconst c2 = createEmailPhoneContact(\"anton\", \"schmidt\", [], [\"1234567890\"])\n\t\t\to(_compareContactsForMerge(c1, c2)).equals(ContactComparisonResult.Similar)\n\t\t\to(_compareContactsForMerge(c2, c1)).equals(ContactComparisonResult.Similar)\n\t\t})\n\t\to(\"contacts are similar - last name matches 1\", function () {\n\t\t\tconst c1 = createEmailPhoneContact(\"\", \"schmidt\", [\"anton@mail.de\", \"tuta@io.de\"], [\"123456\"])\n\t\t\tconst c2 = createEmailPhoneContact(\"anton\", \"schmidt\", [\"\"], [\"123456\"])\n\t\t\to(_compareContactsForMerge(c1, c2)).equals(ContactComparisonResult.Similar)\n\t\t\to(_compareContactsForMerge(c2, c1)).equals(ContactComparisonResult.Similar)\n\t\t})\n\t\to(\"contacts are similar - last name matches 2\", function () {\n\t\t\tconst c1 = createEmailPhoneContact(\"\", \"schmidt\", [\"anton@mail.de\", \"tuta@io.de\"], [\"123456\"])\n\t\t\tconst c2 = createEmailPhoneContact(\"\", \"schmidt\", [\"\"], [\"\"])\n\t\t\to(_compareContactsForMerge(c1, c2)).equals(ContactComparisonResult.Similar)\n\t\t\to(_compareContactsForMerge(c2, c1)).equals(ContactComparisonResult.Similar)\n\t\t})\n\t\to(\"contacts are similar - case insensitive name check\", function () {\n\t\t\tconst c1 = createEmailPhoneContact(\"Anton\", \"Schmidt\", [\"anton@mail.de\", \"tuta@io.de\"], [\"123456\"])\n\t\t\tconst c2 = createEmailPhoneContact(\"anton\", \"schmidt\", [\"\"], [\"123\"])\n\t\t\to(_compareContactsForMerge(c1, c2)).equals(ContactComparisonResult.Similar)\n\t\t\to(_compareContactsForMerge(c2, c1)).equals(ContactComparisonResult.Similar)\n\t\t})\n\t\to(\"contacts are similar - mail addess matches, name is empty\", function () {\n\t\t\tconst c1 = createEmailPhoneContact(\"\", \"\", [\"a@b.de\"], [])\n\t\t\tconst c2 = createEmailPhoneContact(\"a\", \"tom\", [\"a@b.de\"], [])\n\t\t\to(_compareContactsForMerge(c1, c2)).equals(ContactComparisonResult.Similar)\n\t\t\to(_compareContactsForMerge(c2, c1)).equals(ContactComparisonResult.Similar)\n\t\t})\n\t\to(\"contacts are similar - phone number matches, name and email empty\", function () {\n\t\t\tconst c1 = createEmailPhoneContact(\"\", \"\", [], [\"123456\"])\n\t\t\tconst c2 = createEmailPhoneContact(\"a\", \"tom\", [], [\"123456\"])\n\t\t\to(_compareContactsForMerge(c1, c2)).equals(ContactComparisonResult.Similar)\n\t\t\to(_compareContactsForMerge(c2, c1)).equals(ContactComparisonResult.Similar)\n\t\t})\n\t\to(\"contacts are unique - firstname matches\", function () {\n\t\t\tconst c1 = createEmailPhoneContact(\"anton\", \"Bob\", [\"anton@mail.de\", \"tuta@io.de\"], [\"123456\"])\n\t\t\tconst c2 = createEmailPhoneContact(\"anton\", \"schmidt\", [\"b@mail.de\", \"c@io.de\"], [\"1234567890\"])\n\t\t\to(_compareContactsForMerge(c1, c2)).equals(ContactComparisonResult.Unique)\n\t\t\to(_compareContactsForMerge(c2, c1)).equals(ContactComparisonResult.Unique)\n\t\t})\n\t\to(\"contacts are unique - last name matches, first name is different but no email addresses\", function () {\n\t\t\tconst c1 = createEmailPhoneContact(\"bob\", \"schmidt\", [], [\"123456\"])\n\t\t\tconst c2 = createEmailPhoneContact(\"anton\", \"schmidt\", [], [\"123456\"])\n\t\t\to(_compareContactsForMerge(c1, c2)).equals(ContactComparisonResult.Unique)\n\t\t\to(_compareContactsForMerge(c2, c1)).equals(ContactComparisonResult.Unique)\n\t\t})\n\t\to(\"contacts are unique - mail address matches but last name is different\", function () {\n\t\t\tconst c1 = createEmailPhoneContact(\"Anton\", \"Schmidt\", [\"anton@mail.de\", \"tuta@io.de\"], [\"123456\"])\n\t\t\tconst c2 = createEmailPhoneContact(\"anton\", \"tom\", [\"anton@mail.de\"], [\"1234567\"])\n\t\t\to(_compareContactsForMerge(c1, c2)).equals(ContactComparisonResult.Unique)\n\t\t\to(_compareContactsForMerge(c2, c1)).equals(ContactComparisonResult.Unique)\n\t\t})\n\t\to(\"contacts are unique - one contact is empty\", function () {\n\t\t\tconst c1 = createEmailPhoneContact(\"\", \"\", [], [])\n\t\t\tconst c2 = createEmailPhoneContact(\"a\", \"tom\", [], [])\n\t\t\to(_compareContactsForMerge(c1, c2)).equals(ContactComparisonResult.Unique)\n\t\t\to(_compareContactsForMerge(c2, c1)).equals(ContactComparisonResult.Unique)\n\t\t})\n\t\t//________________________________Birthday test cases for merge________________________________________<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n\t\to(\"contacts are equal - all is equal\", function () {\n\t\t\tconst c1 = createFilledContact(\"ant\", \"bent\", \"hello\", \"tuta\", \"Mr.\", \"Bob\", \"\", \"\", \"\", [], [], [], [], [], \"1991-12-8\")\n\t\t\tconst c2 = createFilledContact(\"ant\", \"bent\", \"hello\", \"tuta\", \"Mr.\", \"Bob\", \"\", \"\", \"\", [], [], [], [], [], \"1991-12-8\")\n\t\t\to(_compareContactsForMerge(c1, c2)).equals(ContactComparisonResult.Equal)\n\t\t\to(_compareContactsForMerge(c2, c1)).equals(ContactComparisonResult.Equal)\n\t\t})\n\t\to(\"contacts are equal - all is equal birthday without year\", function () {\n\t\t\tconst c1 = createFilledContact(\"ant\", \"bent\", \"hello\", \"tuta\", \"Mr.\", \"Bob\", \"\", \"\", \"\", [], [], [], [], [], \"--12-8\")\n\t\t\tconst c2 = createFilledContact(\"ant\", \"bent\", \"hello\", \"tuta\", \"Mr.\", \"Bob\", \"\", \"\", \"\", [], [], [], [], [], \"--12-8\")\n\t\t\to(_compareContactsForMerge(c1, c2)).equals(ContactComparisonResult.Equal)\n\t\t\to(_compareContactsForMerge(c2, c1)).equals(ContactComparisonResult.Equal)\n\t\t})\n\t\to(\"contacts are similar - birthday with and without year\", function () {\n\t\t\tconst c1 = createFilledContact(\"ant\", \"bent\", \"hello\", \"tuta\", \"Mr.\", \"Bob\", \"\", \"\", \"\", [\"ant@ant.de\"], [], [], [], [], \"--08-12\")\n\t\t\tconst c2 = createFilledContact(\"ant\", \"bent\", \"hello\", \"tuta\", \"Mr.\", \"Bob\", \"\", \"\", \"\", [\"ant@ant.de\"], [], [], [], [], \"1991-08-12\")\n\t\t\to(_compareContactsForMerge(c1, c2)).equals(ContactComparisonResult.Similar)\n\t\t\to(_compareContactsForMerge(c2, c1)).equals(ContactComparisonResult.Similar)\n\t\t})\n\t\to(\"contacts are similar - on birthday without year\", function () {\n\t\t\tconst c1 = createFilledContact(\"ant\", \"bent\", \"hello\", \"tuta\", \"Mr.\", \"Bob\", \"\", \"\", \"\", [], [], [], [], [], \"--08-12\")\n\t\t\tconst c2 = createFilledContact(\"ant\", \"bent\", \"hello\", \"tuta\", \"Mr.\", \"Bob\", \"\", \"\", \"\", [], [], [], [], [], null)\n\t\t\to(_compareContactsForMerge(c1, c2)).equals(ContactComparisonResult.Similar)\n\t\t\to(_compareContactsForMerge(c2, c1)).equals(ContactComparisonResult.Similar)\n\t\t})\n\t\to(\"contacts are similar - one birthday with year\", function () {\n\t\t\tconst c1 = createFilledContact(\"ant\", \"bent\", \"hello\", \"tuta\", \"Mr.\", \"Bob\", \"\", \"\", \"\", [], [], [], [], [], null)\n\t\t\tconst c2 = createFilledContact(\"ant\", \"bent\", \"hello\", \"tuta\", \"Mr.\", \"Bob\", \"\", \"\", \"\", [], [], [], [], [], \"--08-12\")\n\t\t\to(_compareContactsForMerge(c1, c2)).equals(ContactComparisonResult.Similar)\n\t\t\to(_compareContactsForMerge(c2, c1)).equals(ContactComparisonResult.Similar)\n\t\t})\n\t\to(\"contacts are unique - different birthdays\", function () {\n\t\t\tconst c1 = createFilledContact(\"ant\", \"bent\", \"hello\", \"tuta\", \"Mr.\", \"Bob\", \"\", \"\", \"\", [], [], [], [], [], \"1992-08-12\")\n\t\t\tconst c2 = createFilledContact(\"ant\", \"bent\", \"hello\", \"tuta\", \"Mr.\", \"Bob\", \"\", \"\", \"\", [], [], [], [], [], \"1991-09-13\")\n\t\t\to(_compareContactsForMerge(c1, c2)).equals(ContactComparisonResult.Unique)\n\t\t\to(_compareContactsForMerge(c2, c1)).equals(ContactComparisonResult.Unique)\n\t\t})\n\t\t//_________________More test cases for full contact simulation here --added other contact fields ___________________\n\t\to(\"contacts are equal - other contact fields\", function () {\n\t\t\tlet c1 = createEmailPhoneContact(\"anton\", \"schmidt\", [], [])\n\t\t\tlet c2 = createEmailPhoneContact(\"anton\", \"schmidt\", [], [])\n\t\t\tc1 = addFilledContactOtherFields(c1, \"A\", \"B\", \"C\", \"D\", [\"E\"], [\"F\"])\n\t\t\tc2 = addFilledContactOtherFields(c2, \"A\", \"B\", \"C\", \"D\", [\"E\"], [\"F\"])\n\t\t\to(_compareContactsForMerge(c1, c2)).equals(ContactComparisonResult.Equal)\n\t\t\to(_compareContactsForMerge(c2, c1)).equals(ContactComparisonResult.Equal)\n\t\t})\n\t\to(\"contacts are similar 1\", function () {\n\t\t\tlet c1 = createEmailPhoneContact(\"anton\", \"schmidt\", [], [])\n\t\t\tlet c2 = createEmailPhoneContact(\"anton\", \"schmidt\", [], [])\n\t\t\tc1 = addFilledContactOtherFields(c1, \"\", \"\", \"\", \"A\", [], [])\n\t\t\tc2 = addFilledContactOtherFields(c2, \"\", \"\", \"b\", \"\", [], [])\n\t\t\to(_compareContactsForMerge(c1, c2)).equals(ContactComparisonResult.Similar)\n\t\t\to(_compareContactsForMerge(c2, c1)).equals(ContactComparisonResult.Similar)\n\t\t})\n\t\to(\"contacts are similar 2\", function () {\n\t\t\tlet c1 = createEmailPhoneContact(\"anton\", \"schmidt\", [\"anton@mail.de\", \"tuta@io.de\"], [\"123456\"])\n\t\t\tlet c2 = createEmailPhoneContact(\"\", \"schmidt\", [\"anton@mail.de\", \"TUTA@io.de\"], [\"123456\"])\n\t\t\tc1 = addFilledContactOtherFields(c1, \"A\", \"A\", \"b\", \"A\", [], [])\n\t\t\tc2 = addFilledContactOtherFields(c2, \"A\", \"A\", \"b\", \"A\", [], [])\n\t\t\to(_compareContactsForMerge(c1, c2)).equals(ContactComparisonResult.Similar)\n\t\t\to(_compareContactsForMerge(c2, c1)).equals(ContactComparisonResult.Similar)\n\t\t})\n\t\to(\"contacts are similar 3\", function () {\n\t\t\tlet c1 = createEmailPhoneContact(\"anton\", \"schmidt\", [\"anton@mail.de\", \"tuta@io.de\"], [\"123456\"])\n\t\t\tlet c2 = createEmailPhoneContact(\"anton\", \"schmidt\", [\"b@mail.de\", \"c@io.de\"], [\"123456\"])\n\t\t\tc1 = addFilledContactOtherFields(c1, \"\", \"\", \"\", \"A\", [\"Facebook sucks in privacy\", \"Google also does\"], [\"Address 123\", \"Berlin 1234\", \"Hannover\"])\n\t\t\tc2 = addFilledContactOtherFields(c2, \"\", \"\", \"b\", \"\", [], [\"Hannover\"])\n\t\t\to(_compareContactsForMerge(c1, c2)).equals(ContactComparisonResult.Similar)\n\t\t\to(_compareContactsForMerge(c2, c1)).equals(ContactComparisonResult.Similar)\n\t\t})\n\t\to(\"contacts are similar 4\", function () {\n\t\t\tlet c1 = createEmailPhoneContact(\"anton\", \"schmidt\", [\"anton@mail.de\", \"tuta@io.de\"], [\"123456\"])\n\t\t\tlet c2 = createEmailPhoneContact(\"anton\", \"schmidt\", [\"b@mail.de\", \"c@io.de\"], [\"1234567890\"])\n\t\t\tc1 = addFilledContactOtherFields(c1, \"A\", \"A\", \"A\", \"A\", [\"A\", \"B\", \"C\"], [\"A\", \"B\", \"C\"])\n\t\t\tc2 = addFilledContactOtherFields(c2, \"A\", \"A\", \"A\", \"A\", [\"A\", \"B\", \"C\"], [\"A\", \"B\", \"C\"])\n\t\t\to(_compareContactsForMerge(c1, c2)).equals(ContactComparisonResult.Similar)\n\t\t\to(_compareContactsForMerge(c2, c1)).equals(ContactComparisonResult.Similar)\n\t\t})\n\t\to(\"contacts are similar 5\", function () {\n\t\t\tlet c1 = createEmailPhoneContact(\"anton\", \"Bob\", [\"anton@mail.de\", \"tuta@io.de\"], [\"123456\"])\n\t\t\tlet c2 = createEmailPhoneContact(\"anton\", \"schmidt\", [\"b@mail.de\", \"c@io.de\"], [\"1234567890\"])\n\t\t\tc1 = addFilledContactOtherFields(c1, \"A\", \"A\", \"A\", \"A\", [\"A\", \"B\", \"C\"], [\"A\", \"B\", \"C\"])\n\t\t\tc2 = addFilledContactOtherFields(c2, \"A\", \"A\", \"A\", \"A\", [\"A\", \"B\", \"C\"], [\"A\", \"B\", \"C\"])\n\t\t\to(_compareContactsForMerge(c1, c2)).equals(ContactComparisonResult.Unique)\n\t\t\to(_compareContactsForMerge(c2, c1)).equals(ContactComparisonResult.Unique)\n\t\t})\n\t\to(\"contacts are similar 6\", function () {\n\t\t\tlet c1 = createEmailPhoneContact(\"bob\", \"schmidt\", [\"\"], [\"123456\"])\n\t\t\tlet c2 = createEmailPhoneContact(\"anton\", \"schmidt\", [\"\"], [\"123456\"])\n\t\t\tc1 = addFilledContactOtherFields(c1, \"A\", \"A\", \"A\", \"A\", [\"A\", \"B\", \"C\"], [\"A\", \"B\", \"C\"])\n\t\t\tc2 = addFilledContactOtherFields(c2, \"\", \"\", \"\", \"\", [\"\", \"\", \"\"], [\"\", \"\", \"\"])\n\t\t\to(_compareContactsForMerge(c1, c2)).equals(ContactComparisonResult.Unique)\n\t\t\to(_compareContactsForMerge(c2, c1)).equals(ContactComparisonResult.Unique)\n\t\t})\n\t\to(\"contacts are similar 7\", function () {\n\t\t\tlet c1 = createEmailPhoneContact(\"\", \"schmidt\", [\"anton@mail.de\", \"tuta@io.de\"], [\"123456\"])\n\t\t\tlet c2 = createEmailPhoneContact(\"anton\", \"schmidt\", [\"\"], [\"123456\"])\n\t\t\tc1 = addFilledContactOtherFields(c1, \"A\", \"A\", \"A\", \"A\", [\"A\", \"B\", \"C\"], [\"A\", \"B\", \"C\"])\n\t\t\tc2 = addFilledContactOtherFields(c2, \"b\", \"c\", \"d\", \"e\", [\"f\", \"g\", \"h\"], [\"q\", \"w\", \"j\"])\n\t\t\to(_compareContactsForMerge(c1, c2)).equals(ContactComparisonResult.Similar)\n\t\t\to(_compareContactsForMerge(c2, c1)).equals(ContactComparisonResult.Similar)\n\t\t})\n\t\to(\"contacts are similar 8\", function () {\n\t\t\tlet c1 = createEmailPhoneContact(\"\", \"schmidt\", [\"anton@mail.de\", \"tuta@io.de\"], [\"123456\"])\n\t\t\tlet c2 = createEmailPhoneContact(\"\", \"schmidt\", [\"\"], [\"\"])\n\t\t\tc1 = addFilledContactOtherFields(c1, \"\", \"\", \"\", \"\", [\"A\", \"B\", \"C\"], [\"A\", \"B\", \"C\"])\n\t\t\tc2 = addFilledContactOtherFields(c2, \"\", \"\", \"\", \"\", [], [])\n\t\t\to(_compareContactsForMerge(c1, c2)).equals(ContactComparisonResult.Similar)\n\t\t\to(_compareContactsForMerge(c2, c1)).equals(ContactComparisonResult.Similar)\n\t\t})\n\t\to(\"contacts are similar 9\", function () {\n\t\t\tlet c1 = createEmailPhoneContact(\"Anton\", \"Schmidt\", [\"anton@mail.de\", \"tuta@io.de\"], [\"123456\"])\n\t\t\tlet c2 = createEmailPhoneContact(\"anton\", \"schmidt\", [\"\"], [\"123\"])\n\t\t\tc1 = addFilledContactOtherFields(c1, \"A\", \"A\", \"A\", \"A\", [\"A\"], [\"A\"])\n\t\t\tc2 = addFilledContactOtherFields(c2, \"A\", \"A\", \"A\", \"A\", [\"A\"], [\"A\"])\n\t\t\to(_compareContactsForMerge(c1, c2)).equals(ContactComparisonResult.Similar)\n\t\t\to(_compareContactsForMerge(c2, c1)).equals(ContactComparisonResult.Similar)\n\t\t})\n\t\to(\"contacts are similar 10\", function () {\n\t\t\tlet c1 = createEmailPhoneContact(\"Anton\", \"Schmidt\", [\"anton@mail.de\", \"tuta@io.de\"], [\"123456\"])\n\t\t\tlet c2 = createEmailPhoneContact(\"anton\", \"tom\", [\"\"], [\"123456\"])\n\t\t\tc1 = addFilledContactOtherFields(c1, \"A\", \"A\", \"A\", \"A\", [\"A\"], [\"A\"])\n\t\t\tc2 = addFilledContactOtherFields(c2, \"A\", \"A\", \"A\", \"A\", [\"A\"], [\"A\"])\n\t\t\to(_compareContactsForMerge(c1, c2)).equals(ContactComparisonResult.Unique)\n\t\t\to(_compareContactsForMerge(c2, c1)).equals(ContactComparisonResult.Unique)\n\t\t})\n\t\to(\"contacts are similar 11\", function () {\n\t\t\tlet c1 = createEmailPhoneContact(\"Anton\", \"Schmidt\", [\"anton@mail.de\", \"tuta@io.de\"], [\"123456\"])\n\t\t\tlet c2 = createEmailPhoneContact(\"anton\", \"tom\", [\"\"], [\"123456\"])\n\t\t\tc1 = addFilledContactOtherFields(c1, \"A\", \"A\", \"A\", \"A\", [\"A\"], [\"A\"])\n\t\t\tc2 = addFilledContactOtherFields(c2, \"A\", \"A\", \"A\", \"A\", [\"A\"], [\"B\"])\n\t\t\to(_compareContactsForMerge(c1, c2)).equals(ContactComparisonResult.Unique)\n\t\t\to(_compareContactsForMerge(c2, c1)).equals(ContactComparisonResult.Unique)\n\t\t})\n\t\to(\"contacts are similar 12\", function () {\n\t\t\tlet c1 = createEmailPhoneContact(\"Anton\", \"Schmidt\", [\"anton@mail.de\", \"tuta@io.de\"], [\"123456\"])\n\t\t\tlet c2 = createEmailPhoneContact(\"anton\", \"tom\", [\"anton@mail.de\"], [\"1234567\"])\n\t\t\tc1 = addFilledContactOtherFields(c1, \"\", \"\", \"\", \"\", [], [])\n\t\t\tc2 = addFilledContactOtherFields(c2, \"\", \"\", \"\", \"\", [], [])\n\t\t\to(_compareContactsForMerge(c1, c2)).equals(ContactComparisonResult.Unique)\n\t\t\to(_compareContactsForMerge(c2, c1)).equals(ContactComparisonResult.Unique)\n\t\t})\n\t\to(\"contacts are similar 13\", function () {\n\t\t\tlet c1 = createEmailPhoneContact(\"\", \"\", [], [])\n\t\t\tlet c2 = createEmailPhoneContact(\"a\", \"tom\", [], [])\n\t\t\tc1 = addFilledContactOtherFields(c1, \"\", \"\", \"\", \"\", [], [])\n\t\t\tc2 = addFilledContactOtherFields(c2, \"\", \"\", \"\", \"\", [], [])\n\t\t\to(_compareContactsForMerge(c1, c2)).equals(ContactComparisonResult.Unique)\n\t\t\to(_compareContactsForMerge(c2, c1)).equals(ContactComparisonResult.Unique)\n\t\t})\n\t\to(\"contacts are similar 14\", function () {\n\t\t\tlet c1 = createEmailPhoneContact(\"\", \"\", [\"a@b.de\"], [])\n\t\t\tlet c2 = createEmailPhoneContact(\"a\", \"tom\", [\"a@b.de\"], [])\n\t\t\tc1 = addFilledContactOtherFields(c1, \"A\", \"\", \"\", \"\", [], [])\n\t\t\tc2 = addFilledContactOtherFields(c2, \"A\", \"B\", \"\", \"\", [], [])\n\t\t\to(_compareContactsForMerge(c1, c2)).equals(ContactComparisonResult.Similar)\n\t\t\to(_compareContactsForMerge(c2, c1)).equals(ContactComparisonResult.Similar)\n\t\t})\n\t\to(\"contacts are similar 15\", function () {\n\t\t\tlet c1 = createEmailPhoneContact(\"\", \"\", [], [\"123456\"])\n\t\t\tlet c2 = createEmailPhoneContact(\"a\", \"tom\", [], [\"123456\"])\n\t\t\tc1 = addFilledContactOtherFields(c1, \"\", \"\", \"\", \"\", [\"Diaspora my be better than Facebook\"], [\"Hannover\"])\n\t\t\tc2 = addFilledContactOtherFields(c2, \"\", \"\", \"\", \"\", [], [\"Hannover\"])\n\t\t\to(_compareContactsForMerge(c1, c2)).equals(ContactComparisonResult.Similar)\n\t\t\to(_compareContactsForMerge(c2, c1)).equals(ContactComparisonResult.Similar)\n\t\t})\n\t\to(\"contacts are similar 16\", function () {\n\t\t\tlet c1 = createEmailPhoneContact(\"\", \"\", [], [\"123456\"])\n\t\t\tlet c2 = createEmailPhoneContact(\"\", \"\", [], [\"123456\"])\n\t\t\tc1 = addFilledContactOtherFields(c1, \"A\", \"\", \"\", \"\", [], [])\n\t\t\tc2 = addFilledContactOtherFields(c2, \"A\", \"B\", \"\", \"\", [], [])\n\t\t\to(_compareContactsForMerge(c1, c2)).equals(ContactComparisonResult.Similar)\n\t\t\to(_compareContactsForMerge(c2, c1)).equals(ContactComparisonResult.Similar)\n\t\t})\n\t\to(\"contacts are similar 17\", function () {\n\t\t\tlet c1 = createEmailPhoneContact(\"\", \"\", [\"a@b.de\"], [])\n\t\t\tlet c2 = createEmailPhoneContact(\"\", \"\", [\"a@b.de\"], [])\n\t\t\tc1 = addFilledContactOtherFields(c1, \"A\", \"\", \"\", \"\", [], [])\n\t\t\tc2 = addFilledContactOtherFields(c2, \"A\", \"B\", \"\", \"\", [], [])\n\t\t\to(_compareContactsForMerge(c1, c2)).equals(ContactComparisonResult.Similar)\n\t\t\to(_compareContactsForMerge(c2, c1)).equals(ContactComparisonResult.Similar)\n\t\t})\n\t})\n\to(\"testCompareContactsWithPresharedPasswordForMerge\", function () {\n\t\tlet allContacts: Contact[] = []\n\t\tallContacts[0] = createTestEntity(ContactTypeRef)\n\t\tallContacts[1] = createTestEntity(ContactTypeRef)\n\t\tallContacts[0].mailAddresses[0] = createTestEntity(ContactMailAddressTypeRef)\n\t\tallContacts[1].mailAddresses[0] = createTestEntity(ContactMailAddressTypeRef)\n\t\tallContacts[0].phoneNumbers[0] = createTestEntity(ContactPhoneNumberTypeRef)\n\t\tallContacts[1].phoneNumbers[0] = createTestEntity(ContactPhoneNumberTypeRef)\n\t\tallContacts[0].phoneNumbers[0].number = \"017999854654\"\n\t\tallContacts[1].phoneNumbers[0].number = \"017999854654\"\n\t\tallContacts[0].mailAddresses[0].address = \"anton@mail.de\"\n\t\tallContacts[1].mailAddresses[0].address = \"anton@mail.de\"\n\t\tallContacts[0].comment = \"A\"\n\t\tallContacts[1].comment = \"A\"\n\t\to(_compareContactsForMerge(allContacts[0], allContacts[1])).equals(ContactComparisonResult.Equal)\n\t\tallContacts[1].presharedPassword = \"B\"\n\t\to(_compareContactsForMerge(allContacts[0], allContacts[1])).equals(ContactComparisonResult.Similar)\n\t\tallContacts[0].presharedPassword = \"A\"\n\t\tallContacts[1].presharedPassword = null\n\t\to(_compareContactsForMerge(allContacts[0], allContacts[1])).equals(ContactComparisonResult.Similar)\n\t\tallContacts[1].presharedPassword = \"B\"\n\t\to(_compareContactsForMerge(allContacts[0], allContacts[1])).equals(ContactComparisonResult.Unique)\n\t\tallContacts[0] = createTestEntity(ContactTypeRef)\n\t\tallContacts[1] = createTestEntity(ContactTypeRef)\n\t\tallContacts[1].presharedPassword = \"B\"\n\t\to(_compareContactsForMerge(allContacts[0], allContacts[1])).equals(ContactComparisonResult.Unique)\n\t\tallContacts[0].presharedPassword = \"B\"\n\t\to(_compareContactsForMerge(allContacts[0], allContacts[1])).equals(ContactComparisonResult.Equal)\n\t})\n\t//typeRef should not affect the result of the comparison the value is most important\n\to(\"testContactTypeValuesForUnimportance\", function () {\n\t\tlet allContacts: Contact[] = []\n\t\tallContacts[0] = createTestEntity(ContactTypeRef)\n\t\tallContacts[1] = createTestEntity(ContactTypeRef)\n\t\tallContacts[0].mailAddresses[0] = createTestEntity(ContactMailAddressTypeRef)\n\t\tallContacts[1].mailAddresses[0] = createTestEntity(ContactMailAddressTypeRef)\n\t\tallContacts[0].phoneNumbers[0] = createTestEntity(ContactPhoneNumberTypeRef)\n\t\tallContacts[1].phoneNumbers[0] = createTestEntity(ContactPhoneNumberTypeRef)\n\t\tallContacts[0].phoneNumbers[0].number = \"017999854654\"\n\t\tallContacts[1].phoneNumbers[0].number = \"017999854654\"\n\t\tallContacts[0].mailAddresses[0].address = \"anton@mail.de\"\n\t\tallContacts[1].mailAddresses[0].address = \"anton@mail.de\"\n\t\to(_compareContactsForMerge(allContacts[0], allContacts[1])).equals(ContactComparisonResult.Equal)\n\t\tallContacts[0].mailAddresses[0].type = \"0\"\n\t\tallContacts[1].mailAddresses[0].type = \"1\"\n\t\tallContacts[0].phoneNumbers[0].type = \"1\"\n\t\tallContacts[1].phoneNumbers[0].type = \"0\"\n\t\to(_compareContactsForMerge(allContacts[0], allContacts[1])).equals(ContactComparisonResult.Equal)\n\t\tallContacts[0].mailAddresses[0].type = \"1\"\n\t\tallContacts[1].mailAddresses[0].type = \"1\"\n\t\to(_compareContactsForMerge(allContacts[0], allContacts[1])).equals(ContactComparisonResult.Equal)\n\t\tallContacts[1].mailAddresses[0].customTypeName = \"FUN\"\n\t\to(_compareContactsForMerge(allContacts[0], allContacts[1])).equals(ContactComparisonResult.Equal)\n\t\tallContacts[0].phoneNumbers[0].type = \"1\"\n\t\tallContacts[1].phoneNumbers[0].type = \"1\"\n\t\to(_compareContactsForMerge(allContacts[0], allContacts[1])).equals(ContactComparisonResult.Equal)\n\t})\n\to(\"getMergedBirthdaysTest\", function () {\n\t\t_testMerge(_createBirthdayContact(\"2000-01-01\"), _createBirthdayContact(\"2000-01-02\"), _createBirthdayContact(\"2000-01-01\"))\n\n\t\t_testMerge(_createBirthdayContact(null), _createBirthdayContact(\"2000-01-02\"), _createBirthdayContact(\"2000-01-02\"))\n\n\t\t_testMerge(_createBirthdayContact(\"2000-01-01\"), _createBirthdayContact(null), _createBirthdayContact(\"2000-01-01\"))\n\n\t\t_testMerge(_createBirthdayContact(null), _createBirthdayContact(\"--01-02\"), _createBirthdayContact(\"--01-02\"))\n\n\t\t_testMerge(_createBirthdayContact(\"2000-01-01\"), _createBirthdayContact(\"--01-02\"), _createBirthdayContact(\"2000-01-01\")) // more specific bday\n\n\t\t_testMerge(_createBirthdayContact(\"--01-01\"), _createBirthdayContact(\"2000-01-02\"), _createBirthdayContact(\"2000-01-02\")) // more specific bday\n\t})\n\n\tfunction _createBirthdayContact(birthdayIso: string | null | undefined): Contact {\n\t\treturn createFilledContact(\"A\", \"B\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", null, null, null, null, [], birthdayIso)\n\t}\n\n\tfunction _testMerge(c1: Contact, c2: Contact, merged: Contact) {\n\t\tmergeContacts(c1, c2)\n\t\tdelete downcast(c1)._id\n\t\tdelete downcast(merged)._id\n\t\to(c1).deepEquals(merged)\n\t}\n\n\to(\"getMergedNameFieldTest\", function () {\n\t\tlet c1 = createTestEntity(ContactTypeRef)\n\t\tlet c2 = createTestEntity(ContactTypeRef)\n\t\tc1.firstName = _getMergedNameField(c1.firstName, c2.firstName)\n\t\to(c1.firstName).equals(c1.firstName)\n\t\tc1.firstName = \"bob\"\n\t\tc1.firstName = _getMergedNameField(c1.firstName, c2.firstName)\n\t\to(c1.firstName).equals(\"bob\")\n\t\tc1.lastName = \"mob\"\n\t\tc1.lastName = _getMergedNameField(c1.lastName, c2.lastName)\n\t\to(c1.lastName).equals(\"mob\")\n\t\tc2.firstName = \"flop\"\n\t\tc1.firstName = _getMergedNameField(c1.firstName, c2.firstName)\n\t\to(c1.firstName).equals(\"bob\")\n\t\tc2.lastName = \"Top\"\n\t\tc1.lastName = _getMergedNameField(c1.lastName, c2.lastName)\n\t\to(c1.lastName).equals(\"mob\")\n\t\tc1.firstName = \"\"\n\t\tc1.firstName = _getMergedNameField(c1.firstName, c2.firstName)\n\t\to(c1.firstName).equals(\"flop\")\n\t\tc1.lastName = \"qop\"\n\t\tc1.lastName = _getMergedNameField(c1.lastName, c2.lastName)\n\t\to(c1.lastName).equals(\"qop\")\n\t})\n\to(\"getMergedOtherFieldTitleTest\", function () {\n\t\tlet c1 = createTestEntity(ContactTypeRef)\n\t\tlet c2 = createTestEntity(ContactTypeRef)\n\t\tc1.title = _getMergedOtherField(c1.title, c2.title, \", \")\n\t\to(c1.title).equals(null)\n\t\tc1.title = \"bob\"\n\t\tc1.title = _getMergedOtherField(c1.title, c2.title, \", \")\n\t\to(c1.title).equals(\"bob\")\n\t\tc2.title = \"flop\"\n\t\tc1.title = _getMergedOtherField(c1.title, c2.title, \", \")\n\t\to(c1.title).equals(\"bob, flop\")\n\t\tc1.title = \"\"\n\t\tc1.title = _getMergedOtherField(c1.title, c2.title, \", \")\n\t\to(c1.title).equals(\"flop\")\n\t})\n\to(\"getMergedOtherFieldCommentTest\", function () {\n\t\tlet c1 = createTestEntity(ContactTypeRef)\n\t\tlet c2 = createTestEntity(ContactTypeRef)\n\t\tc1.comment = neverNull(_getMergedOtherField(c1.comment, c2.comment, \"\\n\\n\"))\n\t\to(c1.comment).equals(\"\")\n\t\tc1.comment = \"bob\"\n\t\tc1.comment = neverNull(_getMergedOtherField(c1.comment, c2.comment, \"\\n\\n\"))\n\t\to(c1.comment).equals(\"bob\")\n\t\tc2.comment = \"flop\"\n\t\tc1.comment = neverNull(_getMergedOtherField(c1.comment, c2.comment, \"\\n\\n\"))\n\t\to(c1.comment).equals(\"bob\\n\\nflop\")\n\t\tc1.comment = \"\"\n\t\tc1.comment = neverNull(_getMergedOtherField(c1.comment, c2.comment, \"\\n\\n\"))\n\t\to(c1.comment).equals(\"flop\")\n\t})\n\to(\"getMergedOtherFieldCompanyTest\", function () {\n\t\tlet c1 = createTestEntity(ContactTypeRef)\n\t\tlet c2 = createTestEntity(ContactTypeRef)\n\t\tc1.company = neverNull(_getMergedOtherField(c1.company, c2.company, \", \"))\n\t\to(c1.company).equals(\"\")\n\t\tc1.company = \"bob\"\n\t\tc1.company = neverNull(_getMergedOtherField(c1.company, c2.company, \", \"))\n\t\to(c1.company).equals(\"bob\")\n\t\tc2.company = \"flop\"\n\t\tc1.company = neverNull(_getMergedOtherField(c1.company, c2.company, \", \"))\n\t\to(c1.company).equals(\"bob, flop\")\n\t\tc1.company = \"\"\n\t\tc1.company = neverNull(_getMergedOtherField(c1.company, c2.company, \", \"))\n\t\to(c1.company).equals(\"flop\")\n\t})\n\to(\"getMergedOtherFieldNicknameTest\", function () {\n\t\tlet c1 = createTestEntity(ContactTypeRef)\n\t\tlet c2 = createTestEntity(ContactTypeRef)\n\t\tc1.nickname = _getMergedOtherField(c1.nickname, c2.nickname, \", \")\n\t\to(c1.nickname).equals(null)\n\t\tc1.nickname = \"bob\"\n\t\tc1.nickname = neverNull(_getMergedOtherField(c1.nickname, c2.nickname, \", \"))\n\t\to(c1.nickname).equals(\"bob\")\n\t\tc2.nickname = \"flop\"\n\t\tc1.nickname = neverNull(_getMergedOtherField(c1.nickname, c2.nickname, \", \"))\n\t\to(c1.nickname).equals(\"bob, flop\")\n\t\tc1.nickname = \"\"\n\t\tc1.nickname = neverNull(_getMergedOtherField(c1.nickname, c2.nickname, \", \"))\n\t\to(c1.nickname).equals(\"flop\")\n\t})\n\to(\"getMergedOtherFieldRoleTest\", function () {\n\t\tlet c1 = createTestEntity(ContactTypeRef)\n\t\tlet c2 = createTestEntity(ContactTypeRef)\n\t\tc1.role = neverNull(_getMergedOtherField(c1.role, c2.role, \", \"))\n\t\to(c1.role).equals(\"\")\n\t\tc1.role = \"bob\"\n\t\tc1.role = neverNull(_getMergedOtherField(c1.role, c2.role, \", \"))\n\t\to(c1.role).equals(\"bob\")\n\t\tc2.role = \"flop\"\n\t\tc1.role = neverNull(_getMergedOtherField(c1.role, c2.role, \", \"))\n\t\to(c1.role).equals(\"bob, flop\")\n\t\tc1.role = \"\"\n\t\tc1.role = neverNull(_getMergedOtherField(c1.role, c2.role, \", \"))\n\t\to(c1.role).equals(\"flop\")\n\t})\n\to(\"getMergedOtherFieldPresharedPasswordTest\", function () {\n\t\tlet c1 = createTestEntity(ContactTypeRef)\n\t\tlet c2 = createTestEntity(ContactTypeRef)\n\t\tc1.presharedPassword = _getMergedOtherField(c1.presharedPassword, c2.presharedPassword, \"\")\n\t\to(c1.presharedPassword).equals(null)\n\t\tc1.presharedPassword = \"bob\"\n\t\tc1.presharedPassword = neverNull(_getMergedOtherField(c1.presharedPassword, c2.presharedPassword, \"\"))\n\t\to(c1.presharedPassword).equals(\"bob\")\n\t\t//this case should never happen only possible through manual merge -> restricted in function call of mergeSelected()\n\t\t//todo test in mergeContacts function\n\t\tc2.presharedPassword = \"flop\"\n\t\tc1.presharedPassword = neverNull(_getMergedOtherField(c1.presharedPassword, c2.presharedPassword, \"\"))\n\t\to(c1.presharedPassword).equals(\"bobflop\")\n\t\tc1.presharedPassword = \"\"\n\t\tc1.presharedPassword = neverNull(_getMergedOtherField(c1.presharedPassword, c2.presharedPassword, \"\"))\n\t\to(c1.presharedPassword).equals(\"flop\")\n\t})\n\to(\"getMergedEmailAddressesTest\", function () {\n\t\tlet keptContact = createFilledContact(\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [\"antste@antste.de\", \"bentste@bentste.de\"], [], [], [])\n\t\tlet eliminatedContact = createFilledContact(\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [\"antste@antste.de\", \"bentste@bentste.de\"], [], [], [])\n\t\tkeptContact.mailAddresses = _getMergedEmailAddresses(keptContact.mailAddresses, eliminatedContact.mailAddresses)\n\t\to(keptContact.mailAddresses[0].address).equals(\"antste@antste.de\")\n\t\t//type is also merged\n\t\to(keptContact.mailAddresses[0].type).equals(ContactAddressType.WORK)\n\t\to(keptContact.mailAddresses[1].address).equals(\"bentste@bentste.de\")\n\t\to(keptContact.mailAddresses[1].type).equals(ContactAddressType.WORK)\n\t\to(keptContact.mailAddresses.length).equals(2)\n\t\tkeptContact = createFilledContact(\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [\"antste@antste.de\"], [], [], [])\n\t\tkeptContact.mailAddresses[0].type = ContactAddressType.OTHER\n\t\teliminatedContact = createFilledContact(\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [\"antste@antste.de\", \"bentste@bentste.de\"], [], [], [])\n\t\teliminatedContact.mailAddresses[0].type = ContactAddressType.WORK\n\t\teliminatedContact.mailAddresses[1].type = ContactAddressType.OTHER\n\t\tkeptContact.mailAddresses = _getMergedEmailAddresses(keptContact.mailAddresses, eliminatedContact.mailAddresses)\n\t\to(keptContact.mailAddresses[0].address).equals(\"antste@antste.de\")\n\t\to(keptContact.mailAddresses[0].type).equals(ContactAddressType.OTHER)\n\t\to(keptContact.mailAddresses[1].address).equals(\"bentste@bentste.de\")\n\t\to(keptContact.mailAddresses[1].type).equals(ContactAddressType.OTHER)\n\t\to(keptContact.mailAddresses.length).equals(2)\n\t\tkeptContact = createFilledContact(\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [], [], [], [])\n\t\teliminatedContact = createFilledContact(\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [\"antste@antste.de\", \"bentste@bentste.de\"], [], [], [])\n\t\tkeptContact.mailAddresses = _getMergedEmailAddresses(keptContact.mailAddresses, eliminatedContact.mailAddresses)\n\t\to(keptContact.mailAddresses[0].address).equals(\"antste@antste.de\")\n\t\to(keptContact.mailAddresses[0].type).equals(ContactAddressType.WORK)\n\t\to(keptContact.mailAddresses[1].address).equals(\"bentste@bentste.de\")\n\t\to(keptContact.mailAddresses[0].type).equals(ContactAddressType.WORK)\n\t\to(keptContact.mailAddresses.length).equals(2)\n\t\tkeptContact = createFilledContact(\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [\"antste@antste.de\", \"bentste@bentste.de\"], [], [], [])\n\t\teliminatedContact = createFilledContact(\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [\"bentste@bentste.de\"], [], [], [])\n\t\tkeptContact.mailAddresses = _getMergedEmailAddresses(keptContact.mailAddresses, eliminatedContact.mailAddresses)\n\t\to(keptContact.mailAddresses[0].address).equals(\"antste@antste.de\")\n\t\to(keptContact.mailAddresses[1].address).equals(\"bentste@bentste.de\")\n\t\to(keptContact.mailAddresses.length).equals(2)\n\t\tkeptContact = createFilledContact(\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [\"antste@antste.de\", \"bentste@bentste.de\"], [], [], [])\n\t\teliminatedContact = createFilledContact(\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [], [], [], [])\n\t\tkeptContact.mailAddresses = _getMergedEmailAddresses(keptContact.mailAddresses, eliminatedContact.mailAddresses)\n\t\to(keptContact.mailAddresses[0].address).equals(\"antste@antste.de\")\n\t\to(keptContact.mailAddresses[1].address).equals(\"bentste@bentste.de\")\n\t\to(keptContact.mailAddresses.length).equals(2)\n\t\tkeptContact = createFilledContact(\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [], [], [], [])\n\t\teliminatedContact = createFilledContact(\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [], [], [], [])\n\t\tkeptContact.mailAddresses = _getMergedEmailAddresses(keptContact.mailAddresses, eliminatedContact.mailAddresses)\n\t\to(keptContact.mailAddresses.length).equals(0)\n\t\tkeptContact = createFilledContact(\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [\"antste@antste.de\", \"bentste@bentste.de\", \"bent@bent.de\"], [], [], [])\n\t\teliminatedContact = createFilledContact(\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [\"antste@antste.de\", \"bentste@bentste.de\"], [], [], [])\n\t\tkeptContact.mailAddresses = _getMergedEmailAddresses(keptContact.mailAddresses, eliminatedContact.mailAddresses)\n\t\to(keptContact.mailAddresses[0].address).equals(\"antste@antste.de\")\n\t\to(keptContact.mailAddresses[1].address).equals(\"bentste@bentste.de\")\n\t\to(keptContact.mailAddresses[2].address).equals(\"bent@bent.de\")\n\t\to(keptContact.mailAddresses.length).equals(3)\n\t})\n\to(\"getMergedPhoneNumbersTest\", function () {\n\t\tlet keptContact = createFilledContact(\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [], [\"789654123\", \"963258741\"], [], [])\n\t\tlet eliminatedContact = createFilledContact(\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [], [\"789654123\", \"963258741\"], [], [])\n\t\tkeptContact.phoneNumbers = _getMergedPhoneNumbers(keptContact.phoneNumbers, eliminatedContact.phoneNumbers)\n\t\to(keptContact.phoneNumbers[0].number).equals(\"789654123\")\n\t\t//type is also merged\n\t\to(keptContact.phoneNumbers[0].type).equals(ContactPhoneNumberType.WORK)\n\t\to(keptContact.phoneNumbers[1].number).equals(\"963258741\")\n\t\to(keptContact.phoneNumbers[1].type).equals(ContactPhoneNumberType.WORK)\n\t\to(keptContact.phoneNumbers.length).equals(2)\n\t\tkeptContact = createFilledContact(\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [], [\"789654123\"], [], [])\n\t\tkeptContact.phoneNumbers[0].type = ContactPhoneNumberType.OTHER\n\t\teliminatedContact = createFilledContact(\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [], [\"789654123\", \"963258741\"], [], [])\n\t\teliminatedContact.phoneNumbers[0].type = ContactPhoneNumberType.WORK\n\t\teliminatedContact.phoneNumbers[1].type = ContactPhoneNumberType.OTHER\n\t\tkeptContact.phoneNumbers = _getMergedPhoneNumbers(keptContact.phoneNumbers, eliminatedContact.phoneNumbers)\n\t\to(keptContact.phoneNumbers[0].number).equals(\"789654123\")\n\t\to(keptContact.phoneNumbers[0].type).equals(ContactPhoneNumberType.OTHER)\n\t\to(keptContact.phoneNumbers[1].number).equals(\"963258741\")\n\t\to(keptContact.phoneNumbers[1].type).equals(ContactPhoneNumberType.OTHER)\n\t\to(keptContact.phoneNumbers.length).equals(2)\n\t\tkeptContact = createFilledContact(\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [], [], [], [])\n\t\teliminatedContact = createFilledContact(\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [], [\"789654123\", \"963258741\"], [], [])\n\t\tkeptContact.phoneNumbers = _getMergedPhoneNumbers(keptContact.phoneNumbers, eliminatedContact.phoneNumbers)\n\t\to(keptContact.phoneNumbers[0].number).equals(\"789654123\")\n\t\to(keptContact.phoneNumbers[0].type).equals(ContactPhoneNumberType.WORK)\n\t\to(keptContact.phoneNumbers[1].number).equals(\"963258741\")\n\t\to(keptContact.phoneNumbers[0].type).equals(ContactPhoneNumberType.WORK)\n\t\to(keptContact.phoneNumbers.length).equals(2)\n\t\tkeptContact = createFilledContact(\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [], [\"789654123\", \"963258741\"], [], [])\n\t\teliminatedContact = createFilledContact(\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [], [\"963258741\"], [], [])\n\t\tkeptContact.phoneNumbers = _getMergedPhoneNumbers(keptContact.phoneNumbers, eliminatedContact.phoneNumbers)\n\t\to(keptContact.phoneNumbers[0].number).equals(\"789654123\")\n\t\to(keptContact.phoneNumbers[1].number).equals(\"963258741\")\n\t\to(keptContact.phoneNumbers.length).equals(2)\n\t\tkeptContact = createFilledContact(\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [], [\"789654123\", \"963258741\"], [], [])\n\t\teliminatedContact = createFilledContact(\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [], [], [], [])\n\t\tkeptContact.phoneNumbers = _getMergedPhoneNumbers(keptContact.phoneNumbers, eliminatedContact.phoneNumbers)\n\t\to(keptContact.phoneNumbers[0].number).equals(\"789654123\")\n\t\to(keptContact.phoneNumbers[1].number).equals(\"963258741\")\n\t\to(keptContact.phoneNumbers.length).equals(2)\n\t\tkeptContact = createFilledContact(\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [], [], [], [])\n\t\teliminatedContact = createFilledContact(\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [], [], [], [])\n\t\tkeptContact.phoneNumbers = _getMergedPhoneNumbers(keptContact.phoneNumbers, eliminatedContact.phoneNumbers)\n\t\to(keptContact.phoneNumbers.length).equals(0)\n\t\tkeptContact = createFilledContact(\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [], [\"789654123\", \"963258741\", \"789852\"], [], [])\n\t\teliminatedContact = createFilledContact(\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [], [\"789654123\", \"963258741\"], [], [])\n\t\tkeptContact.phoneNumbers = _getMergedPhoneNumbers(keptContact.phoneNumbers, eliminatedContact.phoneNumbers)\n\t\to(keptContact.phoneNumbers[0].number).equals(\"789654123\")\n\t\to(keptContact.phoneNumbers[1].number).equals(\"963258741\")\n\t\to(keptContact.phoneNumbers[2].number).equals(\"789852\")\n\t\to(keptContact.phoneNumbers.length).equals(3)\n\t})\n\to(\"getMergedPhoneNumber should ignore whitespace\", function () {\n\t\tconst numberWithoutWhitespace = createTestEntity(ContactPhoneNumberTypeRef, {\n\t\t\tnumber: \"789654123\",\n\t\t})\n\t\tconst numberWithWhitespace = createTestEntity(ContactPhoneNumberTypeRef, {\n\t\t\tnumber: \" 789 654123 \",\n\t\t})\n\n\t\tconst mergedPhoneNumbers = _getMergedPhoneNumbers([numberWithoutWhitespace], [numberWithWhitespace])\n\n\t\to(mergedPhoneNumbers).deepEquals([\n\t\t\tcreateTestEntity(ContactPhoneNumberTypeRef, {\n\t\t\t\tnumber: \"789654123\",\n\t\t\t}),\n\t\t])\n\t})\n\to(\"getMergedAddressesTest\", function () {\n\t\tlet keptContact = createFilledContact(\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [], [], [], [\"antste@antste.de\", \"bentste@bentste.de\"])\n\t\tlet eliminatedContact = createFilledContact(\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [], [], [], [\"antste@antste.de\", \"bentste@bentste.de\"])\n\t\tkeptContact.addresses = _getMergedAddresses(keptContact.addresses, eliminatedContact.addresses)\n\t\to(keptContact.addresses[0].address).equals(\"antste@antste.de\")\n\t\t//type is also merged\n\t\to(keptContact.addresses[0].type).equals(ContactAddressType.WORK)\n\t\to(keptContact.addresses[1].address).equals(\"bentste@bentste.de\")\n\t\to(keptContact.addresses[1].type).equals(ContactAddressType.WORK)\n\t\to(keptContact.addresses.length).equals(2)\n\t\tkeptContact = createFilledContact(\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [], [], [], [\"antste@antste.de\"])\n\t\tkeptContact.addresses[0].type = ContactAddressType.OTHER\n\t\teliminatedContact = createFilledContact(\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [], [], [], [\"antste@antste.de\", \"bentste@bentste.de\"])\n\t\teliminatedContact.addresses[0].type = ContactAddressType.WORK\n\t\teliminatedContact.addresses[1].type = ContactAddressType.OTHER\n\t\tkeptContact.addresses = _getMergedAddresses(keptContact.addresses, eliminatedContact.addresses)\n\t\to(keptContact.addresses[0].address).equals(\"antste@antste.de\")\n\t\to(keptContact.addresses[0].type).equals(ContactAddressType.OTHER)\n\t\to(keptContact.addresses[1].address).equals(\"bentste@bentste.de\")\n\t\to(keptContact.addresses[1].type).equals(ContactAddressType.OTHER)\n\t\to(keptContact.addresses.length).equals(2)\n\t\tkeptContact = createFilledContact(\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [], [], [], [])\n\t\teliminatedContact = createFilledContact(\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [], [], [], [\"antste@antste.de\", \"bentste@bentste.de\"])\n\t\tkeptContact.addresses = _getMergedAddresses(keptContact.addresses, eliminatedContact.addresses)\n\t\to(keptContact.addresses[0].address).equals(\"antste@antste.de\")\n\t\to(keptContact.addresses[0].type).equals(ContactAddressType.WORK)\n\t\to(keptContact.addresses[1].address).equals(\"bentste@bentste.de\")\n\t\to(keptContact.addresses[0].type).equals(ContactAddressType.WORK)\n\t\to(keptContact.addresses.length).equals(2)\n\t\tkeptContact = createFilledContact(\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [], [], [], [\"antste@antste.de\", \"bentste@bentste.de\"])\n\t\teliminatedContact = createFilledContact(\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [], [], [], [\"bentste@bentste.de\"])\n\t\tkeptContact.addresses = _getMergedAddresses(keptContact.addresses, eliminatedContact.addresses)\n\t\to(keptContact.addresses[0].address).equals(\"antste@antste.de\")\n\t\to(keptContact.addresses[1].address).equals(\"bentste@bentste.de\")\n\t\to(keptContact.addresses.length).equals(2)\n\t\tkeptContact = createFilledContact(\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [], [], [], [\"antste@antste.de\", \"bentste@bentste.de\"])\n\t\teliminatedContact = createFilledContact(\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [], [], [], [])\n\t\tkeptContact.addresses = _getMergedAddresses(keptContact.addresses, eliminatedContact.addresses)\n\t\to(keptContact.addresses[0].address).equals(\"antste@antste.de\")\n\t\to(keptContact.addresses[1].address).equals(\"bentste@bentste.de\")\n\t\to(keptContact.addresses.length).equals(2)\n\t\tkeptContact = createFilledContact(\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [], [], [], [])\n\t\teliminatedContact = createFilledContact(\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [], [], [], [])\n\t\tkeptContact.addresses = _getMergedAddresses(keptContact.addresses, eliminatedContact.addresses)\n\t\to(keptContact.addresses.length).equals(0)\n\t\tkeptContact = createFilledContact(\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [], [], [], [\"antste@antste.de\", \"bentste@bentste.de\", \"bent@bent.de\"])\n\t\teliminatedContact = createFilledContact(\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [], [], [], [\"antste@antste.de\", \"bentste@bentste.de\"])\n\t\tkeptContact.addresses = _getMergedAddresses(keptContact.addresses, eliminatedContact.addresses)\n\t\to(keptContact.addresses[0].address).equals(\"antste@antste.de\")\n\t\to(keptContact.addresses[1].address).equals(\"bentste@bentste.de\")\n\t\to(keptContact.addresses[2].address).equals(\"bent@bent.de\")\n\t\to(keptContact.addresses.length).equals(3)\n\t})\n\to(\"getMergedSocialIdsTest\", function () {\n\t\tlet keptContact = createFilledContact(\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [], [], [\"antste@antste.de\", \"bentste@bentste.de\"], [])\n\t\tlet eliminatedContact = createFilledContact(\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [], [], [\"antste@antste.de\", \"bentste@bentste.de\"], [])\n\t\tkeptContact.socialIds = _getMergedSocialIds(keptContact.socialIds, eliminatedContact.socialIds)\n\t\to(keptContact.socialIds[0].socialId).equals(\"antste@antste.de\")\n\t\t//type is also merged\n\t\to(keptContact.socialIds[0].type).equals(ContactSocialType.OTHER)\n\t\to(keptContact.socialIds[1].socialId).equals(\"bentste@bentste.de\")\n\t\to(keptContact.socialIds[1].type).equals(ContactSocialType.OTHER)\n\t\to(keptContact.socialIds.length).equals(2)\n\t\tkeptContact = createFilledContact(\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [], [], [\"antste@antste.de\"], [])\n\t\tkeptContact.socialIds[0].type = ContactSocialType.OTHER\n\t\teliminatedContact = createFilledContact(\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [], [], [\"antste@antste.de\", \"bentste@bentste.de\"], [])\n\t\teliminatedContact.socialIds[0].type = ContactSocialType.OTHER\n\t\teliminatedContact.socialIds[1].type = ContactSocialType.OTHER\n\t\tkeptContact.socialIds = _getMergedSocialIds(keptContact.socialIds, eliminatedContact.socialIds)\n\t\to(keptContact.socialIds[0].socialId).equals(\"antste@antste.de\")\n\t\to(keptContact.socialIds[0].type).equals(ContactSocialType.OTHER)\n\t\to(keptContact.socialIds[1].socialId).equals(\"bentste@bentste.de\")\n\t\to(keptContact.socialIds[1].type).equals(ContactSocialType.OTHER)\n\t\to(keptContact.socialIds.length).equals(2)\n\t\tkeptContact = createFilledContact(\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [], [], [], [])\n\t\teliminatedContact = createFilledContact(\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [], [], [\"antste@antste.de\", \"bentste@bentste.de\"], [])\n\t\tkeptContact.socialIds = _getMergedSocialIds(keptContact.socialIds, eliminatedContact.socialIds)\n\t\to(keptContact.socialIds[0].socialId).equals(\"antste@antste.de\")\n\t\to(keptContact.socialIds[0].type).equals(ContactSocialType.OTHER)\n\t\to(keptContact.socialIds[1].socialId).equals(\"bentste@bentste.de\")\n\t\to(keptContact.socialIds[0].type).equals(ContactSocialType.OTHER)\n\t\to(keptContact.socialIds.length).equals(2)\n\t\tkeptContact = createFilledContact(\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [], [], [\"antste@antste.de\", \"bentste@bentste.de\"], [])\n\t\teliminatedContact = createFilledContact(\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [], [], [\"bentste@bentste.de\"], [])\n\t\tkeptContact.socialIds = _getMergedSocialIds(keptContact.socialIds, eliminatedContact.socialIds)\n\t\to(keptContact.socialIds[0].socialId).equals(\"antste@antste.de\")\n\t\to(keptContact.socialIds[1].socialId).equals(\"bentste@bentste.de\")\n\t\to(keptContact.socialIds.length).equals(2)\n\t\tkeptContact = createFilledContact(\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [], [], [\"antste@antste.de\", \"bentste@bentste.de\"], [])\n\t\teliminatedContact = createFilledContact(\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [], [], [], [])\n\t\tkeptContact.socialIds = _getMergedSocialIds(keptContact.socialIds, eliminatedContact.socialIds)\n\t\to(keptContact.socialIds[0].socialId).equals(\"antste@antste.de\")\n\t\to(keptContact.socialIds[1].socialId).equals(\"bentste@bentste.de\")\n\t\to(keptContact.socialIds.length).equals(2)\n\t\tkeptContact = createFilledContact(\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [], [], [], [])\n\t\teliminatedContact = createFilledContact(\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [], [], [], [])\n\t\tkeptContact.socialIds = _getMergedSocialIds(keptContact.socialIds, eliminatedContact.socialIds)\n\t\to(keptContact.socialIds.length).equals(0)\n\t\tkeptContact = createFilledContact(\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [], [], [\"antste@antste.de\", \"bentste@bentste.de\", \"bent@bent.de\"], [])\n\t\teliminatedContact = createFilledContact(\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [], [], [\"antste@antste.de\", \"bentste@bentste.de\"], [])\n\t\tkeptContact.socialIds = _getMergedSocialIds(keptContact.socialIds, eliminatedContact.socialIds)\n\t\to(keptContact.socialIds[0].socialId).equals(\"antste@antste.de\")\n\t\to(keptContact.socialIds[1].socialId).equals(\"bentste@bentste.de\")\n\t\to(keptContact.socialIds[2].socialId).equals(\"bent@bent.de\")\n\t\to(keptContact.socialIds.length).equals(3)\n\t})\n\to(\"mergeContactsTest\", function () {\n\t\tlet keptContact = createFilledContact(\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [], [], [\"antste@antste.de\", \"bentste@bentste.de\"], [])\n\t\tlet eliminatedContact = createFilledContact(\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [], [], [\"antste@antste.de\", \"bentste@bentste.de\"], [])\n\t\tlet compareContact = createFilledContact(\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [], [], [\"antste@antste.de\", \"bentste@bentste.de\"], [])\n\t\tmergeContacts(keptContact, eliminatedContact)\n\t\to(_contactToVCard(keptContact)).equals(_contactToVCard(compareContact))\n\t\tkeptContact = createFilledContact(\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [], [], [\"antste@antste.de\"], [])\n\t\teliminatedContact = createFilledContact(\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [], [\"0989089\"], [\"antste@antste.de\", \"bentste@bentste.de\"], [])\n\t\tcompareContact = createFilledContact(\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [], [\"0989089\"], [\"antste@antste.de\", \"bentste@bentste.de\"], [])\n\t\tmergeContacts(keptContact, eliminatedContact)\n\t\to(_contactToVCard(keptContact)).equals(_contactToVCard(compareContact))\n\t\tkeptContact = createFilledContact(\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [], [], [], [])\n\t\teliminatedContact = createFilledContact(\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [], [], [], [])\n\t\tcompareContact = createFilledContact(\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", [], [], [], [])\n\t\tmergeContacts(keptContact, eliminatedContact)\n\t\to(_contactToVCard(keptContact)).equals(_contactToVCard(compareContact))\n\t\tkeptContact = createFilledContact(\"\", \"\", \"Tests are great ... noooot\", \"\", \"\", \"\", \"\", \"\", \"\", [], [], [], [])\n\t\teliminatedContact = createFilledContact(\n\t\t\t\"Ant\",\n\t\t\t\"Ste\",\n\t\t\t\"Hello World!\",\n\t\t\t\"Tutao\",\n\t\t\t\"Mr.\",\n\t\t\t\"Buffalo\",\n\t\t\t\"\",\n\t\t\t\"\",\n\t\t\t\"\",\n\t\t\t[\"antste@antste.de\", \"bentste@bentste.de\"],\n\t\t\t[\"123123123\", \"321321321\"],\n\t\t\t[\"diaspora.de\"],\n\t\t\t[\"Housestreet 123\\nTown 123\\nState 123\\nCountry 123\"],\n\t\t)\n\t\tcompareContact = createFilledContact(\n\t\t\t\"Ant\",\n\t\t\t\"Ste\",\n\t\t\t\"Tests are great ... noooot\\n\\nHello World!\",\n\t\t\t\"Tutao\",\n\t\t\t\"Mr.\",\n\t\t\t\"Buffalo\",\n\t\t\t\"\",\n\t\t\t\"\",\n\t\t\t\"\",\n\t\t\t[\"antste@antste.de\", \"bentste@bentste.de\"],\n\t\t\t[\"123123123\", \"321321321\"],\n\t\t\t[\"diaspora.de\"],\n\t\t\t[\"Housestreet 123\\nTown 123\\nState 123\\nCountry 123\"],\n\t\t)\n\t\tmergeContacts(keptContact, eliminatedContact)\n\t\to(_contactToVCard(keptContact)).equals(_contactToVCard(compareContact))\n\t})\n\to(\"_compareBirthdaysForComparisonResultTest\", function () {\n\t\tlet c1 = createTestEntity(ContactTypeRef)\n\t\tlet c2 = createTestEntity(ContactTypeRef)\n\t\tc1.birthdayIso = fillBirthday(\"14\", \"11\", \"1999\")\n\t\tc2.birthdayIso = fillBirthday(\"14\", \"11\", \"1999\")\n\t\to(_compareBirthdays(c1, c2)).equals(ContactComparisonResult.Equal)\n\t\tc1.birthdayIso = fillBirthday(\"14\", \"11\", null)\n\t\tc2.birthdayIso = fillBirthday(\"14\", \"11\", null)\n\t\to(_compareBirthdays(c1, c2)).equals(ContactComparisonResult.Equal)\n\t\tc1.birthdayIso = null\n\t\tc2.birthdayIso = null\n\t\to(_compareBirthdays(c1, c2)).equals(IndifferentContactComparisonResult.BothEmpty)\n\t\tc1.birthdayIso = fillBirthday(\"14\", \"11\", \"1999\")\n\t\tc2.birthdayIso = null\n\t\to(_compareBirthdays(c1, c2)).equals(IndifferentContactComparisonResult.OneEmpty)\n\t\tc1 = createTestEntity(ContactTypeRef)\n\t\tc2.birthdayIso = fillBirthday(\"14\", \"11\", \"1999\")\n\t\to(_compareBirthdays(c1, c2)).equals(IndifferentContactComparisonResult.OneEmpty)\n\t\tc1 = createTestEntity(ContactTypeRef)\n\t\tc2 = createTestEntity(ContactTypeRef)\n\t\tc2.birthdayIso = fillBirthday(\"14\", \"11\", null)\n\t\to(_compareBirthdays(c1, c2)).equals(IndifferentContactComparisonResult.OneEmpty)\n\t\tc1.birthdayIso = fillBirthday(\"14\", \"11\", \"2000\")\n\t\tc2.birthdayIso = fillBirthday(\"14\", \"11\", null)\n\t\to(_compareBirthdays(c1, c2)).equals(ContactComparisonResult.Similar)\n\t\tc1 = createTestEntity(ContactTypeRef)\n\t\tc2 = createTestEntity(ContactTypeRef)\n\t\tc1.birthdayIso = fillBirthday(\"12\", \"8\", null)\n\t\tc2.birthdayIso = fillBirthday(\"12\", \"8\", \"1999\")\n\t\to(_compareBirthdays(c1, c2)).equals(ContactComparisonResult.Similar)\n\t\tc1.birthdayIso = fillBirthday(\"14\", \"11\", \"1999\")\n\t\tc2.birthdayIso = fillBirthday(\"14\", \"11\", \"2000\")\n\t\to(_compareBirthdays(c1, c2)).equals(ContactComparisonResult.Unique)\n\t})\n})\n\nfunction fillBirthday(day: NumberString, month: NumberString, year: NumberString | null | undefined): string | null {\n\tlet bday = createTestEntity(BirthdayTypeRef)\n\tbday.day = day\n\tbday.month = month\n\tbday.year = year ?? null\n\treturn birthdayToIsoDate(bday)\n}\n","import o from \"@tutao/otest\"\nimport type { CalendarEvent, CalendarGroupRoot } from \"../../../src/common/api/entities/tutanota/TypeRefs.js\"\nimport {\n\tCalendarEventAttendeeTypeRef,\n\tCalendarEventTypeRef,\n\tCalendarEventUpdateTypeRef,\n\tCalendarGroupRootTypeRef,\n\tEncryptedMailAddressTypeRef,\n\tFileTypeRef,\n} from \"../../../src/common/api/entities/tutanota/TypeRefs.js\"\nimport { downcast, hexToUint8Array, neverNull, stringToUtf8Uint8Array } from \"@tutao/tutanota-utils\"\nimport { CalendarModel } from \"../../../src/calendar-app/calendar/model/CalendarModel.js\"\nimport { CalendarAttendeeStatus, CalendarMethod, OperationType, RepeatPeriod } from \"../../../src/common/api/common/TutanotaConstants.js\"\nimport { DateTime } from \"luxon\"\nimport { EntityEventsListener, EventController } from \"../../../src/common/api/main/EventController.js\"\nimport { Notifications } from \"../../../src/common/gui/Notifications.js\"\nimport { AlarmInfo, AlarmInfoTypeRef, UserAlarmInfoListTypeTypeRef, UserAlarmInfoTypeRef, UserTypeRef } from \"../../../src/common/api/entities/sys/TypeRefs.js\"\nimport { EntityRestClientMock } from \"../api/worker/rest/EntityRestClientMock.js\"\nimport type { UserController } from \"../../../src/common/api/main/UserController.js\"\nimport { NotFoundError } from \"../../../src/common/api/common/error/RestError.js\"\nimport type { LoginController } from \"../../../src/common/api/main/LoginController.js\"\nimport { ProgressTracker } from \"../../../src/common/api/main/ProgressTracker.js\"\nimport { EntityClient } from \"../../../src/common/api/common/EntityClient.js\"\nimport { CalendarEventProgenitor, CalendarFacade } from \"../../../src/common/api/worker/facades/lazy/CalendarFacade.js\"\nimport { verify } from \"@tutao/tutanota-test-utils\"\nimport type { WorkerClient } from \"../../../src/common/api/main/WorkerClient.js\"\nimport { FileController } from \"../../../src/common/file/FileController.js\"\nimport { func, matchers, object, when } from \"testdouble\"\nimport { elementIdPart, getElementId, listIdPart } from \"../../../src/common/api/common/utils/EntityUtils.js\"\nimport { createDataFile } from \"../../../src/common/api/common/DataFile.js\"\nimport { SessionKeyNotFoundError } from \"../../../src/common/api/common/error/SessionKeyNotFoundError.js\"\nimport { createTestEntity } from \"../TestUtils.js\"\nimport { NoopProgressMonitor } from \"../../../src/common/api/common/utils/ProgressMonitor.js\"\nimport { makeAlarmScheduler } from \"./CalendarTestUtils.js\"\nimport { EntityUpdateData } from \"../../../src/common/api/common/utils/EntityUpdateUtils.js\"\nimport { MailboxModel } from \"../../../src/common/mailFunctionality/MailboxModel.js\"\nimport { incrementByRepeatPeriod } from \"../../../src/common/calendar/date/CalendarUtils.js\"\nimport { ExternalCalendarFacade } from \"../../../src/common/native/common/generatedipc/ExternalCalendarFacade.js\"\nimport { DeviceConfig } from \"../../../src/common/misc/DeviceConfig.js\"\n\no.spec(\"CalendarModel\", function () {\n\to.spec(\"incrementByRepeatPeriod\", function () {\n\t\tconst timeZone = \"Europe/Berlin\"\n\t\to(\"with daylight saving\", function () {\n\t\t\tconst daylightSavingDay = DateTime.fromObject(\n\t\t\t\t{\n\t\t\t\t\tyear: 2019,\n\t\t\t\t\tmonth: 10,\n\t\t\t\t\tday: 26,\n\t\t\t\t\thour: 10,\n\t\t\t\t},\n\t\t\t\t{ zone: \"Europe/Moscow\" },\n\t\t\t).toJSDate()\n\t\t\tconst dayAfter = DateTime.fromObject(\n\t\t\t\t{\n\t\t\t\t\tyear: 2019,\n\t\t\t\t\tmonth: 10,\n\t\t\t\t\tday: 27,\n\t\t\t\t\thour: 11,\n\t\t\t\t},\n\t\t\t\t{ zone: \"Europe/Moscow\" },\n\t\t\t).toJSDate()\n\t\t\t// event timezone is subject to daylight saving but observer is not\n\t\t\to(incrementByRepeatPeriod(daylightSavingDay, RepeatPeriod.DAILY, 1, timeZone).toISOString()).equals(dayAfter.toISOString())\n\t\t})\n\t\to(\"event in timezone without daylight saving should not be subject to daylight saving\", function () {\n\t\t\tconst daylightSavingDay = DateTime.fromObject(\n\t\t\t\t{\n\t\t\t\t\tyear: 2019,\n\t\t\t\t\tmonth: 10,\n\t\t\t\t\tday: 26,\n\t\t\t\t\thour: 10,\n\t\t\t\t},\n\t\t\t\t{ zone: \"Europe/Moscow\" },\n\t\t\t).toJSDate()\n\t\t\tconst dayAfter = DateTime.fromObject(\n\t\t\t\t{\n\t\t\t\t\tyear: 2019,\n\t\t\t\t\tmonth: 10,\n\t\t\t\t\tday: 27,\n\t\t\t\t\thour: 10,\n\t\t\t\t},\n\t\t\t\t{ zone: \"Europe/Moscow\" },\n\t\t\t).toJSDate()\n\t\t\to(incrementByRepeatPeriod(daylightSavingDay, RepeatPeriod.DAILY, 1, \"Europe/Moscow\").toISOString()).equals(dayAfter.toISOString())\n\t\t})\n\t\to(\"weekly\", function () {\n\t\t\tconst onFriday = DateTime.fromObject(\n\t\t\t\t{\n\t\t\t\t\tyear: 2019,\n\t\t\t\t\tmonth: 5,\n\t\t\t\t\tday: 31,\n\t\t\t\t\thour: 10,\n\t\t\t\t},\n\t\t\t\t{ zone: timeZone },\n\t\t\t).toJSDate()\n\t\t\tconst nextFriday = DateTime.fromObject(\n\t\t\t\t{\n\t\t\t\t\tyear: 2019,\n\t\t\t\t\tmonth: 6,\n\t\t\t\t\tday: 7,\n\t\t\t\t\thour: 10,\n\t\t\t\t},\n\t\t\t\t{ zone: timeZone },\n\t\t\t).toJSDate()\n\t\t\to(incrementByRepeatPeriod(onFriday, RepeatPeriod.WEEKLY, 1, timeZone).toISOString()).equals(nextFriday.toISOString())\n\t\t\tconst oneYearAfter = DateTime.fromObject(\n\t\t\t\t{\n\t\t\t\t\tyear: 2020,\n\t\t\t\t\tmonth: 5,\n\t\t\t\t\tday: 29,\n\t\t\t\t\thour: 10,\n\t\t\t\t},\n\t\t\t\t{ zone: timeZone },\n\t\t\t).toJSDate()\n\t\t\to(incrementByRepeatPeriod(onFriday, RepeatPeriod.WEEKLY, 52, timeZone).toISOString()).equals(oneYearAfter.toISOString())\n\t\t})\n\t\to(\"monthly\", function () {\n\t\t\tconst endOfMay = DateTime.fromObject(\n\t\t\t\t{\n\t\t\t\t\tyear: 2019,\n\t\t\t\t\tmonth: 5,\n\t\t\t\t\tday: 31,\n\t\t\t\t},\n\t\t\t\t{ zone: timeZone },\n\t\t\t).toJSDate()\n\t\t\tconst endOfJune = DateTime.fromObject(\n\t\t\t\t{\n\t\t\t\t\tyear: 2019,\n\t\t\t\t\tmonth: 6,\n\t\t\t\t\tday: 30,\n\t\t\t\t},\n\t\t\t\t{ zone: timeZone },\n\t\t\t).toJSDate()\n\t\t\tconst calculatedEndOfJune = incrementByRepeatPeriod(endOfMay, RepeatPeriod.MONTHLY, 1, timeZone)\n\t\t\to(calculatedEndOfJune.toISOString()).equals(endOfJune.toISOString())\n\t\t\tconst endOfJuly = DateTime.fromObject(\n\t\t\t\t{\n\t\t\t\t\tyear: 2019,\n\t\t\t\t\tmonth: 7,\n\t\t\t\t\tday: 31,\n\t\t\t\t},\n\t\t\t\t{ zone: timeZone },\n\t\t\t).toJSDate()\n\t\t\tconst endOfJulyString = endOfJuly.toISOString()\n\t\t\tconst incrementedDateString = incrementByRepeatPeriod(endOfMay, RepeatPeriod.MONTHLY, 2, timeZone).toISOString()\n\t\t\to(incrementedDateString).equals(endOfJulyString)\n\t\t})\n\t\to(\"annually\", function () {\n\t\t\tconst leapYear = DateTime.fromObject(\n\t\t\t\t{\n\t\t\t\t\tyear: 2020,\n\t\t\t\t\tmonth: 2,\n\t\t\t\t\tday: 29,\n\t\t\t\t},\n\t\t\t\t{ zone: timeZone },\n\t\t\t).toJSDate()\n\t\t\tconst yearAfter = DateTime.fromObject(\n\t\t\t\t{\n\t\t\t\t\tyear: 2021,\n\t\t\t\t\tmonth: 2,\n\t\t\t\t\tday: 28,\n\t\t\t\t},\n\t\t\t\t{ zone: timeZone },\n\t\t\t).toJSDate()\n\t\t\to(incrementByRepeatPeriod(leapYear, RepeatPeriod.ANNUALLY, 1, timeZone).toISOString()).equals(yearAfter.toISOString())\n\t\t\tconst twoYearsAfter = DateTime.fromObject(\n\t\t\t\t{\n\t\t\t\t\tyear: 2022,\n\t\t\t\t\tmonth: 2,\n\t\t\t\t\tday: 28,\n\t\t\t\t},\n\t\t\t\t{ zone: timeZone },\n\t\t\t).toJSDate()\n\t\t\to(incrementByRepeatPeriod(leapYear, RepeatPeriod.ANNUALLY, 2, timeZone).toISOString()).equals(twoYearsAfter.toISOString())\n\t\t\tconst fourYearsAfter = DateTime.fromObject(\n\t\t\t\t{\n\t\t\t\t\tyear: 2024,\n\t\t\t\t\tmonth: 2,\n\t\t\t\t\tday: 29,\n\t\t\t\t},\n\t\t\t\t{ zone: timeZone },\n\t\t\t).toJSDate()\n\t\t\to(incrementByRepeatPeriod(leapYear, RepeatPeriod.ANNUALLY, 4, timeZone).toISOString()).equals(fourYearsAfter.toISOString())\n\t\t})\n\t})\n\to.spec(\"calendar event updates\", function () {\n\t\tlet restClientMock: EntityRestClientMock\n\t\tlet groupRoot: CalendarGroupRoot\n\t\tconst loginController = makeLoginController()\n\t\tconst alarmsListId = neverNull(loginController.getUserController().user.alarmInfoList).alarms\n\t\to.beforeEach(function () {\n\t\t\tgroupRoot = createTestEntity(CalendarGroupRootTypeRef, {\n\t\t\t\t_id: \"groupRootId\",\n\t\t\t\tlongEvents: \"longEvents\",\n\t\t\t\tshortEvents: \"shortEvents\",\n\t\t\t})\n\t\t\trestClientMock = new EntityRestClientMock()\n\t\t\trestClientMock.addElementInstances(groupRoot)\n\t\t})\n\t\to(\"reply but sender is not a guest\", async function () {\n\t\t\tconst uid = \"uid\"\n\t\t\tconst existingEvent = createTestEntity(CalendarEventTypeRef, { uid })\n\t\t\tconst calendarFacade = makeCalendarFacade(\n\t\t\t\t{\n\t\t\t\t\tgetEventsByUid: (loadUid) =>\n\t\t\t\t\t\tuid === loadUid ? Promise.resolve({ progenitor: existingEvent, alteredInstances: [] }) : Promise.resolve(null),\n\t\t\t\t},\n\t\t\t\trestClientMock,\n\t\t\t)\n\t\t\tconst workerClient = makeWorkerClient()\n\t\t\tconst model = init({\n\t\t\t\tworkerClient,\n\t\t\t\trestClientMock,\n\t\t\t\tcalendarFacade,\n\t\t\t})\n\t\t\tawait model.processCalendarData(\"sender@example.com\", {\n\t\t\t\tmethod: CalendarMethod.REPLY,\n\t\t\t\tcontents: [\n\t\t\t\t\t{\n\t\t\t\t\t\tevent: createTestEntity(CalendarEventTypeRef, {\n\t\t\t\t\t\t\tuid,\n\t\t\t\t\t\t}) as CalendarEventProgenitor,\n\t\t\t\t\t\talarms: [],\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t})\n\t\t\tverify(calendarFacade.updateCalendarEvent(matchers.anything(), matchers.anything(), matchers.anything()), { times: 0 })\n\t\t})\n\t\to(\"reply\", async function () {\n\t\t\tconst uid = \"uid\"\n\t\t\tconst sender = \"sender@example.com\"\n\t\t\tconst anotherGuest = \"another-attendee\"\n\t\t\tconst alarm = createTestEntity(AlarmInfoTypeRef, {\n\t\t\t\t_id: \"alarm-id\",\n\t\t\t})\n\t\t\tconst existingEvent = createTestEntity(CalendarEventTypeRef, {\n\t\t\t\t_id: [\"listId\", \"eventId\"],\n\t\t\t\tuid,\n\t\t\t\t_ownerGroup: groupRoot._id,\n\t\t\t\tsummary: \"v1\",\n\t\t\t\tattendees: [\n\t\t\t\t\tcreateTestEntity(CalendarEventAttendeeTypeRef, {\n\t\t\t\t\t\taddress: createTestEntity(EncryptedMailAddressTypeRef, {\n\t\t\t\t\t\t\taddress: sender,\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tstatus: CalendarAttendeeStatus.NEEDS_ACTION,\n\t\t\t\t\t}),\n\t\t\t\t\tcreateTestEntity(CalendarEventAttendeeTypeRef, {\n\t\t\t\t\t\taddress: createTestEntity(EncryptedMailAddressTypeRef, {\n\t\t\t\t\t\t\taddress: anotherGuest,\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tstatus: CalendarAttendeeStatus.NEEDS_ACTION,\n\t\t\t\t\t}),\n\t\t\t\t],\n\t\t\t\talarmInfos: [[alarmsListId, alarm._id]],\n\t\t\t})\n\t\t\trestClientMock.addListInstances(\n\t\t\t\tcreateTestEntity(UserAlarmInfoTypeRef, {\n\t\t\t\t\t_id: [alarmsListId, alarm._id],\n\t\t\t\t\talarmInfo: alarm,\n\t\t\t\t}),\n\t\t\t)\n\t\t\tconst workerClient = makeWorkerClient()\n\t\t\tconst calendarFacade = makeCalendarFacade(\n\t\t\t\t{\n\t\t\t\t\tgetEventsByUid: (loadUid) =>\n\t\t\t\t\t\tuid === loadUid ? Promise.resolve({ progenitor: existingEvent, alteredInstances: [] }) : Promise.resolve(null),\n\t\t\t\t},\n\t\t\t\trestClientMock,\n\t\t\t)\n\t\t\tconst model = init({\n\t\t\t\tworkerClient,\n\t\t\t\trestClientMock,\n\t\t\t\tcalendarFacade,\n\t\t\t})\n\t\t\tawait model.processCalendarData(sender, {\n\t\t\t\t// should be ignored\n\t\t\t\tmethod: CalendarMethod.REPLY,\n\t\t\t\tcontents: [\n\t\t\t\t\t{\n\t\t\t\t\t\tevent: createTestEntity(CalendarEventTypeRef, {\n\t\t\t\t\t\t\tuid,\n\t\t\t\t\t\t\tattendees: [\n\t\t\t\t\t\t\t\tcreateTestEntity(CalendarEventAttendeeTypeRef, {\n\t\t\t\t\t\t\t\t\taddress: createTestEntity(EncryptedMailAddressTypeRef, {\n\t\t\t\t\t\t\t\t\t\taddress: sender,\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\tstatus: CalendarAttendeeStatus.ACCEPTED,\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\tcreateTestEntity(CalendarEventAttendeeTypeRef, {\n\t\t\t\t\t\t\t\t\t// should be ignored\n\t\t\t\t\t\t\t\t\taddress: createTestEntity(EncryptedMailAddressTypeRef, {\n\t\t\t\t\t\t\t\t\t\taddress: anotherGuest,\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\tstatus: CalendarAttendeeStatus.DECLINED,\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t}) as CalendarEventProgenitor,\n\t\t\t\t\t\talarms: [],\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t})\n\t\t\tconst eventCaptor = matchers.captor()\n\t\t\tconst alarmsCaptor = matchers.captor()\n\t\t\tverify(calendarFacade.updateCalendarEvent(eventCaptor.capture(), alarmsCaptor.capture(), matchers.anything()))\n\t\t\tconst createdEvent: CalendarEvent = eventCaptor.value\n\t\t\tconst alarms: ReadonlyArray<AlarmInfo> = alarmsCaptor.value\n\t\t\to(createdEvent.uid).equals(existingEvent.uid)\n\t\t\to(createdEvent.summary).equals(existingEvent.summary)\n\t\t\to(createdEvent.attendees).deepEquals([\n\t\t\t\tcreateTestEntity(CalendarEventAttendeeTypeRef, {\n\t\t\t\t\taddress: createTestEntity(EncryptedMailAddressTypeRef, {\n\t\t\t\t\t\taddress: sender,\n\t\t\t\t\t}),\n\t\t\t\t\tstatus: CalendarAttendeeStatus.ACCEPTED,\n\t\t\t\t}),\n\t\t\t\tcreateTestEntity(CalendarEventAttendeeTypeRef, {\n\t\t\t\t\taddress: createTestEntity(EncryptedMailAddressTypeRef, {\n\t\t\t\t\t\taddress: \"another-attendee\",\n\t\t\t\t\t}),\n\t\t\t\t\tstatus: CalendarAttendeeStatus.NEEDS_ACTION,\n\t\t\t\t}),\n\t\t\t])\n\t\t\to(alarms).deepEquals([alarm])\n\t\t})\n\t\to(\"request as a new invite\", async function () {\n\t\t\tconst uid = \"uid\"\n\t\t\tconst sender = \"sender@example.com\"\n\t\t\tconst restClientMock = new EntityRestClientMock()\n\t\t\tconst workerClient = makeWorkerClient()\n\t\t\tconst calendarFacade = makeCalendarFacade(\n\t\t\t\t{\n\t\t\t\t\tgetEventsByUid: (_loadUid) => Promise.resolve(null),\n\t\t\t\t},\n\t\t\t\trestClientMock,\n\t\t\t)\n\t\t\tconst model = init({\n\t\t\t\tworkerClient,\n\t\t\t\trestClientMock,\n\t\t\t\tcalendarFacade,\n\t\t\t})\n\t\t\tawait model.processCalendarData(sender, {\n\t\t\t\tmethod: CalendarMethod.REQUEST,\n\t\t\t\tcontents: [\n\t\t\t\t\t{\n\t\t\t\t\t\tevent: createTestEntity(CalendarEventTypeRef, {\n\t\t\t\t\t\t\tuid,\n\t\t\t\t\t\t\tattendees: [\n\t\t\t\t\t\t\t\tcreateTestEntity(CalendarEventAttendeeTypeRef, {\n\t\t\t\t\t\t\t\t\taddress: createTestEntity(EncryptedMailAddressTypeRef, {\n\t\t\t\t\t\t\t\t\t\taddress: sender,\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\tstatus: CalendarAttendeeStatus.ACCEPTED,\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t}) as CalendarEventProgenitor,\n\t\t\t\t\t\talarms: [],\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t})\n\t\t\tverify(calendarFacade.updateCalendarEvent(matchers.anything(), matchers.anything(), matchers.anything()), { times: 0 })\n\t\t})\n\t\to(\"request as an update\", async function () {\n\t\t\tconst uid = \"uid\"\n\t\t\tconst sender = \"sender@example.com\"\n\t\t\tconst alarm = createTestEntity(AlarmInfoTypeRef, {\n\t\t\t\t_id: \"alarm-id\",\n\t\t\t})\n\t\t\trestClientMock.addListInstances(\n\t\t\t\tcreateTestEntity(UserAlarmInfoTypeRef, {\n\t\t\t\t\t_id: [alarmsListId, alarm._id],\n\t\t\t\t\talarmInfo: alarm,\n\t\t\t\t}),\n\t\t\t)\n\t\t\tconst startTime = new Date()\n\t\t\tconst existingEvent = createTestEntity(CalendarEventTypeRef, {\n\t\t\t\t_id: [\"listId\", \"eventId\"],\n\t\t\t\t_ownerGroup: groupRoot._id,\n\t\t\t\tsummary: \"v1\",\n\t\t\t\tsequence: \"1\",\n\t\t\t\tuid,\n\t\t\t\torganizer: createTestEntity(EncryptedMailAddressTypeRef, {\n\t\t\t\t\taddress: sender,\n\t\t\t\t}),\n\t\t\t\talarmInfos: [[alarmsListId, alarm._id]],\n\t\t\t\tstartTime,\n\t\t\t})\n\t\t\tconst workerClient = makeWorkerClient()\n\t\t\tconst calendarFacade = makeCalendarFacade(\n\t\t\t\t{\n\t\t\t\t\tgetEventsByUid: (loadUid) =>\n\t\t\t\t\t\tuid === loadUid ? Promise.resolve({ progenitor: existingEvent, alteredInstances: [] }) : Promise.resolve(null),\n\t\t\t\t},\n\t\t\t\trestClientMock,\n\t\t\t)\n\t\t\tconst model = init({\n\t\t\t\tworkerClient,\n\t\t\t\trestClientMock,\n\t\t\t\tcalendarFacade,\n\t\t\t})\n\t\t\tconst sentEvent = createTestEntity(CalendarEventTypeRef, {\n\t\t\t\tsummary: \"v2\",\n\t\t\t\tuid,\n\t\t\t\tsequence: \"2\",\n\t\t\t\torganizer: createTestEntity(EncryptedMailAddressTypeRef, {\n\t\t\t\t\taddress: sender,\n\t\t\t\t}),\n\t\t\t\tstartTime,\n\t\t\t})\n\t\t\tawait model.processCalendarData(sender, {\n\t\t\t\tmethod: CalendarMethod.REQUEST,\n\t\t\t\tcontents: [\n\t\t\t\t\t{\n\t\t\t\t\t\tevent: sentEvent as CalendarEventProgenitor,\n\t\t\t\t\t\talarms: [],\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t})\n\t\t\tconst eventCaptor = matchers.captor()\n\t\t\tconst alarmsCaptor = matchers.captor()\n\t\t\tconst oldEventCaptor = matchers.captor()\n\t\t\tverify(calendarFacade.updateCalendarEvent(eventCaptor.capture(), alarmsCaptor.capture(), oldEventCaptor.capture()))\n\t\t\tconst updatedEvent = eventCaptor.value\n\t\t\tconst updatedAlarms = alarmsCaptor.value\n\t\t\tconst oldEvent = oldEventCaptor.value\n\t\t\to(updatedEvent.summary).equals(sentEvent.summary)\n\t\t\to(updatedEvent.sequence).equals(sentEvent.sequence)\n\t\t\to(updatedAlarms).deepEquals([alarm])\n\t\t\to(oldEvent).deepEquals(existingEvent)\n\t\t})\n\t\to(\"event is re-created when the start time changes\", async function () {\n\t\t\tconst uid = \"uid\"\n\t\t\tconst sender = \"sender@example.com\"\n\t\t\tconst alarm = createTestEntity(AlarmInfoTypeRef, {\n\t\t\t\t_id: \"alarm-id\",\n\t\t\t})\n\t\t\trestClientMock.addListInstances(\n\t\t\t\tcreateTestEntity(UserAlarmInfoTypeRef, {\n\t\t\t\t\t_id: [alarmsListId, alarm._id],\n\t\t\t\t\talarmInfo: alarm,\n\t\t\t\t}),\n\t\t\t)\n\t\t\tconst existingEvent = createTestEntity(CalendarEventTypeRef, {\n\t\t\t\t_id: [\"listId\", \"eventId\"],\n\t\t\t\t_ownerGroup: groupRoot._id,\n\t\t\t\tsummary: \"v1\",\n\t\t\t\tsequence: \"1\",\n\t\t\t\tuid,\n\t\t\t\torganizer: createTestEntity(EncryptedMailAddressTypeRef, {\n\t\t\t\t\taddress: sender,\n\t\t\t\t}),\n\t\t\t\tstartTime: DateTime.fromObject(\n\t\t\t\t\t{\n\t\t\t\t\t\tyear: 2020,\n\t\t\t\t\t\tmonth: 5,\n\t\t\t\t\t\tday: 10,\n\t\t\t\t\t},\n\t\t\t\t\t{ zone: \"UTC\" },\n\t\t\t\t).toJSDate(),\n\t\t\t\talarmInfos: [[alarmsListId, alarm._id]],\n\t\t\t})\n\t\t\tconst workerClient = makeWorkerClient()\n\t\t\tconst calendarFacade = makeCalendarFacade(\n\t\t\t\t{\n\t\t\t\t\tgetEventsByUid: (loadUid) =>\n\t\t\t\t\t\tuid === loadUid ? Promise.resolve({ progenitor: existingEvent, alteredInstances: [] }) : Promise.resolve(null),\n\t\t\t\t},\n\t\t\t\trestClientMock,\n\t\t\t)\n\t\t\tconst model = init({\n\t\t\t\tworkerClient,\n\t\t\t\trestClientMock,\n\t\t\t\tcalendarFacade,\n\t\t\t})\n\t\t\tconst sentEvent = createTestEntity(CalendarEventTypeRef, {\n\t\t\t\tsummary: \"v2\",\n\t\t\t\tuid,\n\t\t\t\tsequence: \"2\",\n\t\t\t\tstartTime: DateTime.fromObject(\n\t\t\t\t\t{\n\t\t\t\t\t\tyear: 2020,\n\t\t\t\t\t\tmonth: 5,\n\t\t\t\t\t\tday: 11,\n\t\t\t\t\t},\n\t\t\t\t\t{ zone: \"UTC\" },\n\t\t\t\t).toJSDate(),\n\t\t\t\torganizer: createTestEntity(EncryptedMailAddressTypeRef, {\n\t\t\t\t\taddress: sender,\n\t\t\t\t}),\n\t\t\t})\n\t\t\tawait model.processCalendarData(sender, {\n\t\t\t\tmethod: CalendarMethod.REQUEST,\n\t\t\t\tcontents: [\n\t\t\t\t\t{\n\t\t\t\t\t\tevent: sentEvent as CalendarEventProgenitor,\n\t\t\t\t\t\talarms: [],\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t})\n\t\t\tverify(calendarFacade.updateCalendarEvent(matchers.anything(), matchers.anything(), matchers.anything()), { times: 0 })\n\n\t\t\tconst eventCaptor = matchers.captor()\n\t\t\tconst alarmsCaptor = matchers.captor()\n\t\t\tconst oldEventCaptor = matchers.captor()\n\t\t\tverify(calendarFacade.saveCalendarEvent(eventCaptor.capture(), alarmsCaptor.capture(), oldEventCaptor.capture()))\n\t\t\tconst updatedEvent = eventCaptor.value\n\t\t\tconst updatedAlarms = alarmsCaptor.value\n\t\t\tconst oldEvent = oldEventCaptor.value\n\n\t\t\to(updatedEvent.summary).equals(sentEvent.summary)\n\t\t\to(updatedEvent.sequence).equals(sentEvent.sequence)\n\t\t\to(updatedEvent.startTime.toISOString()).equals(sentEvent.startTime.toISOString())\n\t\t\to(updatedEvent.uid).equals(uid)\n\t\t\to(updatedAlarms).deepEquals([alarm])\n\t\t\to(oldEvent).deepEquals(existingEvent)\n\t\t})\n\t\to.spec(\"cancel\", function () {\n\t\t\to(\"event is cancelled by organizer\", async function () {\n\t\t\t\tconst uid = \"uid\"\n\t\t\t\tconst sender = \"sender@example.com\"\n\t\t\t\tconst existingEvent = createTestEntity(CalendarEventTypeRef, {\n\t\t\t\t\t_id: [\"listId\", \"eventId\"],\n\t\t\t\t\t_ownerGroup: groupRoot._id,\n\t\t\t\t\tsequence: \"1\",\n\t\t\t\t\tuid,\n\t\t\t\t\torganizer: createTestEntity(EncryptedMailAddressTypeRef, {\n\t\t\t\t\t\taddress: sender,\n\t\t\t\t\t}),\n\t\t\t\t})\n\t\t\t\trestClientMock.addListInstances(existingEvent)\n\t\t\t\tconst workerClient = makeWorkerClient()\n\t\t\t\tconst calendarFacade = makeCalendarFacade(\n\t\t\t\t\t{\n\t\t\t\t\t\tgetEventsByUid: (loadUid) =>\n\t\t\t\t\t\t\tuid === loadUid ? Promise.resolve({ progenitor: existingEvent, alteredInstances: [] }) : Promise.resolve(null),\n\t\t\t\t\t},\n\t\t\t\t\trestClientMock,\n\t\t\t\t)\n\t\t\t\tconst model = init({\n\t\t\t\t\tworkerClient,\n\t\t\t\t\trestClientMock,\n\t\t\t\t\tcalendarFacade: calendarFacade,\n\t\t\t\t})\n\t\t\t\tconst sentEvent = createTestEntity(CalendarEventTypeRef, {\n\t\t\t\t\tuid,\n\t\t\t\t\tsequence: \"2\",\n\t\t\t\t\torganizer: createTestEntity(EncryptedMailAddressTypeRef, {\n\t\t\t\t\t\taddress: sender,\n\t\t\t\t\t}),\n\t\t\t\t})\n\t\t\t\tawait model.processCalendarData(sender, {\n\t\t\t\t\tmethod: CalendarMethod.CANCEL,\n\t\t\t\t\tcontents: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tevent: sentEvent as CalendarEventProgenitor,\n\t\t\t\t\t\t\talarms: [],\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t})\n\t\t\t\tawait o(() => restClientMock.load(CalendarEventTypeRef, existingEvent._id)).asyncThrows(NotFoundError)\n\t\t\t})\n\t\t\to(\"event is cancelled by someone else than organizer\", async function () {\n\t\t\t\tconst uid = \"uid\"\n\t\t\t\tconst sender = \"sender@example.com\"\n\t\t\t\tconst existingEvent = createTestEntity(CalendarEventTypeRef, {\n\t\t\t\t\t_id: [\"listId\", \"eventId\"],\n\t\t\t\t\t_ownerGroup: groupRoot._id,\n\t\t\t\t\tsequence: \"1\",\n\t\t\t\t\tuid,\n\t\t\t\t\torganizer: createTestEntity(EncryptedMailAddressTypeRef, {\n\t\t\t\t\t\taddress: sender,\n\t\t\t\t\t}),\n\t\t\t\t})\n\t\t\t\trestClientMock.addListInstances(existingEvent)\n\t\t\t\tconst workerClient = makeWorkerClient()\n\t\t\t\tconst model = init({\n\t\t\t\t\tworkerClient,\n\t\t\t\t\trestClientMock,\n\t\t\t\t})\n\t\t\t\tconst sentEvent = createTestEntity(CalendarEventTypeRef, {\n\t\t\t\t\tuid,\n\t\t\t\t\tsequence: \"2\",\n\t\t\t\t\torganizer: createTestEntity(EncryptedMailAddressTypeRef, {\n\t\t\t\t\t\taddress: sender,\n\t\t\t\t\t}),\n\t\t\t\t})\n\t\t\t\tawait model.processCalendarData(\"another-sender\", {\n\t\t\t\t\tmethod: CalendarMethod.CANCEL,\n\t\t\t\t\tcontents: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tevent: sentEvent as CalendarEventProgenitor,\n\t\t\t\t\t\t\talarms: [],\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t})\n\t\t\t\to(await restClientMock.load(CalendarEventTypeRef, existingEvent._id)).equals(existingEvent)(\"Calendar event was not deleted\")\n\t\t\t})\n\t\t})\n\t\to(\"reprocess deferred calendar events with no owner enc session key\", async function () {\n\t\t\tconst calendarFile = createTestEntity(FileTypeRef, {\n\t\t\t\t_id: [\"fileListId\", \"fileId\"],\n\t\t\t})\n\n\t\t\tconst eventUpdate = createTestEntity(CalendarEventUpdateTypeRef, {\n\t\t\t\t_id: [\"calendarEventUpdateListId\", \"calendarEventUpdateId\"],\n\t\t\t\tfile: calendarFile._id,\n\t\t\t})\n\n\t\t\tconst uid = \"uid\"\n\t\t\tconst sender = \"sender@example.com\"\n\t\t\tconst existingEvent = createTestEntity(CalendarEventTypeRef, {\n\t\t\t\t_id: [\"calendarListId\", \"eventId\"],\n\t\t\t\t_ownerGroup: groupRoot._id,\n\t\t\t\tsequence: \"1\",\n\t\t\t\tuid,\n\t\t\t\torganizer: createTestEntity(EncryptedMailAddressTypeRef, {\n\t\t\t\t\taddress: sender,\n\t\t\t\t}),\n\t\t\t})\n\n\t\t\tconst fileControllerMock = makeFileController()\n\n\t\t\tconst workerClient = makeWorkerClient()\n\t\t\tconst eventControllerMock = makeEventController()\n\n\t\t\tfileControllerMock.getAsDataFile = func<FileController[\"getAsDataFile\"]>()\n\t\t\twhen(fileControllerMock.getAsDataFile(matchers.anything())).thenResolve(\n\t\t\t\tcreateDataFile(\"event.ics\", \"ical\", stringToUtf8Uint8Array(\"UID: \" + uid), \"cid\"),\n\t\t\t)\n\n\t\t\tconst actuallyLoad = restClientMock.load\n\t\t\trestClientMock.load = func<EntityRestClientMock[\"load\"]>()\n\t\t\twhen(restClientMock.load(matchers.anything(), matchers.anything()), { ignoreExtraArgs: true }).thenDo((...args) =>\n\t\t\t\tactuallyLoad.apply(restClientMock, args),\n\t\t\t)\n\t\t\twhen(restClientMock.load(FileTypeRef, calendarFile._id), { ignoreExtraArgs: true }).thenReject(new SessionKeyNotFoundError(\"test\"))\n\n\t\t\tconst model = init({\n\t\t\t\tworkerClient,\n\t\t\t\trestClientMock,\n\t\t\t\tfileFacade: fileControllerMock,\n\t\t\t\teventController: eventControllerMock.eventController,\n\t\t\t})\n\n\t\t\trestClientMock.addListInstances(calendarFile, eventUpdate, existingEvent)\n\n\t\t\t// calendar update create event\n\t\t\tawait eventControllerMock.sendEvent({\n\t\t\t\tapplication: CalendarEventUpdateTypeRef.app,\n\t\t\t\ttype: CalendarEventUpdateTypeRef.type,\n\t\t\t\tinstanceListId: listIdPart(eventUpdate._id),\n\t\t\t\tinstanceId: elementIdPart(eventUpdate._id),\n\t\t\t\toperation: OperationType.CREATE,\n\t\t\t})\n\n\t\t\to(model.getFileIdToSkippedCalendarEventUpdates().get(getElementId(calendarFile))!).deepEquals(eventUpdate)\n\n\t\t\to(await restClientMock.load(CalendarEventUpdateTypeRef, eventUpdate._id)).deepEquals(eventUpdate)\n\n\t\t\trestClientMock.load = actuallyLoad\n\n\t\t\t// set owner enc session key to ensure that we can process the calendar event file\n\t\t\tcalendarFile._ownerEncSessionKey = hexToUint8Array(\"01\")\n\t\t\tawait eventControllerMock.sendEvent({\n\t\t\t\tapplication: FileTypeRef.app,\n\t\t\t\ttype: FileTypeRef.type,\n\t\t\t\tinstanceListId: listIdPart(calendarFile._id),\n\t\t\t\tinstanceId: elementIdPart(calendarFile._id),\n\t\t\t\toperation: OperationType.UPDATE,\n\t\t\t})\n\n\t\t\to(model.getFileIdToSkippedCalendarEventUpdates().size).deepEquals(0)\n\t\t\tverify(fileControllerMock.getAsDataFile(matchers.anything()), { times: 1 })\n\t\t\tawait o(async () => restClientMock.load(CalendarEventUpdateTypeRef, eventUpdate._id)).asyncThrows(NotFoundError)\n\t\t})\n\t})\n})\n\nfunction makeNotifications(): Notifications {\n\treturn downcast({})\n}\n\nfunction makeProgressTracker(): ProgressTracker {\n\tconst progressTracker: ProgressTracker = object()\n\twhen(progressTracker.registerMonitorSync(matchers.anything())).thenReturn(0)\n\twhen(progressTracker.getMonitor(matchers.anything())).thenReturn(new NoopProgressMonitor())\n\treturn progressTracker\n}\n\nfunction makeEventController(): {\n\teventController: EventController\n\tsendEvent: (arg0: EntityUpdateData) => Promise<void>\n} {\n\tconst listeners = new Array<EntityEventsListener>()\n\treturn {\n\t\teventController: downcast({\n\t\t\tlisteners,\n\t\t\taddEntityListener(listener: EntityEventsListener) {\n\t\t\t\tlisteners.push(listener)\n\t\t\t},\n\t\t}),\n\t\tsendEvent: async (update) => {\n\t\t\tfor (let listener of listeners) {\n\t\t\t\t// @ts-ignore\n\t\t\t\tawait listener([update])\n\t\t\t}\n\t\t},\n\t}\n}\n\nfunction makeWorkerClient(): WorkerClient {\n\treturn downcast({})\n}\n\nfunction makeLoginController(): LoginController {\n\tconst loginController: LoginController = object()\n\tconst alarmInfoList = createTestEntity(UserAlarmInfoListTypeTypeRef, {\n\t\talarms: \"alarms\",\n\t})\n\tconst userController: UserController = object()\n\tuserController.user = createTestEntity(UserTypeRef, {\n\t\t_id: \"user-id\",\n\t\talarmInfoList,\n\t})\n\twhen(loginController.getUserController()).thenReturn(userController)\n\twhen(userController.getCalendarMemberships()).thenReturn([])\n\treturn loginController\n}\n\nfunction makeMailModel(): MailboxModel {\n\treturn downcast({})\n}\n\nfunction makeCalendarFacade(getEventsByUid: { getEventsByUid: (_: any) => unknown }, entityRestClient: EntityRestClientMock): CalendarFacade {\n\tconst saveCalendarEvent = func<CalendarFacade[\"saveCalendarEvent\"]>()\n\twhen(saveCalendarEvent(matchers.anything(), matchers.anything(), matchers.anything())).thenDo((event) => {\n\t\t// testdouble is very insistent on calling such callbacks even during verification and we get weird args here\n\t\tif (!event.__matches) {\n\t\t\tentityRestClient.addListInstances(event)\n\t\t}\n\t\treturn Promise.resolve()\n\t})\n\treturn {\n\t\tgetEventsByUid: getEventsByUid.getEventsByUid,\n\t\tupdateCalendarEvent: func<CalendarFacade[\"updateCalendarEvent\"]>(),\n\t\tsaveCalendarEvent,\n\t} as Partial<CalendarFacade> as CalendarFacade\n}\n\nfunction makeFileController(): FileController {\n\treturn downcast({})\n}\n\nfunction makeExternalCalendarFacade(): ExternalCalendarFacade {\n\treturn downcast({})\n}\n\nfunction makeDeviceConfig(): DeviceConfig {\n\treturn downcast({})\n}\n\nfunction init({\n\tnotifications = makeNotifications(),\n\teventController = makeEventController().eventController,\n\tworkerClient,\n\trestClientMock,\n\tloginController = makeLoginController(),\n\tprogressTracker = makeProgressTracker(),\n\tentityClient = new EntityClient(restClientMock),\n\tmailModel = makeMailModel(),\n\talarmScheduler = makeAlarmScheduler(),\n\tcalendarFacade = makeCalendarFacade(\n\t\t{\n\t\t\tgetEventsByUid: () => Promise.resolve(null),\n\t\t},\n\t\trestClientMock,\n\t),\n\tfileFacade = makeFileController(),\n\texternalCalendarFacade = makeExternalCalendarFacade(),\n\tdeviceConfig = makeDeviceConfig(),\n}): CalendarModel {\n\tconst lazyScheduler = async () => alarmScheduler\n\n\treturn new CalendarModel(\n\t\tnotifications,\n\t\tlazyScheduler,\n\t\teventController,\n\t\tworkerClient,\n\t\tloginController,\n\t\tprogressTracker,\n\t\tentityClient,\n\t\tmailModel,\n\t\tcalendarFacade,\n\t\tfileFacade,\n\t\t\"Europe/Berlin\",\n\t\texternalCalendarFacade,\n\t\tdeviceConfig,\n\t\tdowncast({\n\t\t\tgetLoadedPushIdentifier: () => ({\n\t\t\t\tidentifier: \"\",\n\t\t\t\tdisabled: false,\n\t\t\t}),\n\t\t}),\n\t)\n}\n","import o from \"@tutao/otest\"\nimport {\n\taddDaysForEventInstance,\n\taddDaysForRecurringEvent,\n\tAlarmInterval,\n\tAlarmIntervalUnit,\n\tAlarmOccurrence,\n\tcalendarEventHasMoreThanOneOccurrencesLeft,\n\tCalendarEventValidity,\n\tCalendarMonth,\n\tcheckEventValidity,\n\tcreateRepeatRuleWithValues,\n\teventEndsBefore,\n\teventStartsAfter,\n\tfindNextAlarmOccurrence,\n\tgetAllDayDateForTimezone,\n\tgetAllDayDateUTCFromZone,\n\tgetDiffIn24hIntervals,\n\tgetDiffIn60mIntervals,\n\tgetMonthRange,\n\tgetStartOfDayWithZone,\n\tgetStartOfWeek,\n\tgetTimeZone,\n\tgetWeekNumber,\n\tisEventBetweenDays,\n\tparseAlarmInterval,\n\tprepareCalendarDescription,\n\tStandardAlarmInterval,\n} from \"../../../src/common/calendar/date/CalendarUtils.js\"\nimport { lang } from \"../../../src/common/misc/LanguageViewModel.js\"\nimport { DateWrapperTypeRef, GroupMembershipTypeRef, GroupTypeRef, UserTypeRef } from \"../../../src/common/api/entities/sys/TypeRefs.js\"\nimport { AccountType, EndType, GroupType, RepeatPeriod, ShareCapability } from \"../../../src/common/api/common/TutanotaConstants.js\"\nimport { timeStringFromParts } from \"../../../src/common/misc/Formatter.js\"\nimport { DateTime } from \"luxon\"\nimport { generateEventElementId, getAllDayDateUTC, serializeAlarmInterval } from \"../../../src/common/api/common/utils/CommonCalendarUtils.js\"\nimport { hasCapabilityOnGroup } from \"../../../src/common/sharing/GroupUtils.js\"\nimport {\n\tCalendarEvent,\n\tCalendarEventAttendeeTypeRef,\n\tCalendarEventTypeRef,\n\tCalendarRepeatRuleTypeRef,\n\tcreateCalendarRepeatRule,\n\tEncryptedMailAddressTypeRef,\n\tUserSettingsGroupRootTypeRef,\n} from \"../../../src/common/api/entities/tutanota/TypeRefs.js\"\nimport { clone, getStartOfDay, identity, lastThrow, neverNull } from \"@tutao/tutanota-utils\"\nimport { replace } from \"testdouble\"\nimport { CalendarEventAlteredInstance, CalendarEventProgenitor } from \"../../../src/common/api/worker/facades/lazy/CalendarFacade.js\"\nimport { getDateInUTC, getDateInZone, makeUserController } from \"./CalendarTestUtils.js\"\nimport { ParserError } from \"../../../src/common/misc/parsing/ParserCombinator.js\"\nimport { createTestEntity } from \"../TestUtils.js\"\n\nimport { getCalendarMonth, getEventType } from \"../../../src/calendar-app/calendar/gui/CalendarGuiUtils.js\"\nimport { EventType } from \"../../../src/calendar-app/calendar/gui/eventeditor-model/CalendarEventModel.js\"\nimport { CalendarInfo } from \"../../../src/calendar-app/calendar/model/CalendarModel.js\"\nimport { Time } from \"../../../src/common/calendar/date/Time.js\"\nimport type { UserController } from \"../../../src/common/api/main/UserController.js\"\n\nconst zone = \"Europe/Berlin\"\n\no.spec(\"calendar utils tests\", function () {\n\tfunction iso(strings: TemplateStringsArray, ...dates: number[]) {\n\t\tlet result = \"\"\n\n\t\tfor (const [i, d] of dates.entries()) {\n\t\t\tconst s = strings[i]\n\t\t\tresult += s\n\t\t\tresult += `(${d}) ${DateTime.fromMillis(d).toISO({ format: \"extended\", includeOffset: true })}`\n\t\t}\n\t\tresult += lastThrow(strings)\n\t\treturn result\n\t}\n\n\to.spec(\"getAllDayDateUTCFromZone\", function () {\n\t\to(\"it produces a date with the same day in UTC\", function () {\n\t\t\t// DateTime.fromObject({year: 2023, month: 1, day: 30}, {zone: \"Asia/Krasnoyarsk\"}).toMillis()\n\t\t\tconst date = new Date(\"2023-01-29T17:00:00.000Z\")\n\t\t\t// DateTime.fromObject({year: 2023, month: 1, day: 30}, {zone:\"UTC\"}).toMillis()\n\t\t\tconst expected = \"2023-01-30T00:00:00.000Z\"\n\t\t\tconst result = getAllDayDateUTCFromZone(date, \"Asia/Krasnoyarsk\").toISOString()\n\t\t\to(result).equals(expected)(`${result} vs. ${expected}`)\n\t\t})\n\t})\n\n\to.spec(\"getStartOfDayWithZone\", function () {\n\t\to(\"it produces a date at the start of the day according to the time zone\", function () {\n\t\t\tconst date = new Date(\"2023-01-29T22:30:00.000Z\")\n\t\t\tconst expected = \"2023-01-29T17:00:00.000Z\"\n\t\t\tconst result = getStartOfDayWithZone(date, \"Asia/Krasnoyarsk\")\n\t\t\to(result.toISOString()).equals(expected)(`${result.toISOString()} vs ${expected}`)\n\t\t})\n\t\to(\"when given a date that's already start of day, that date is returned\", function () {\n\t\t\tconst date = new Date(\"2023-01-29T00:00:00.000Z\")\n\t\t\tconst expected = \"2023-01-29T00:00:00.000Z\"\n\t\t\tconst result = getStartOfDayWithZone(date, \"utc\")\n\t\t\to(result.toISOString()).equals(expected)(\"the utc date was not kept the same\")\n\t\t})\n\t})\n\n\to.spec(\"getAllDayDateForTimezone\", function () {\n\t\to(\"converts UTC all-day date into a local one\", function () {\n\t\t\t// DateTime.fromObject({year: 2023, month: 1, day: 30}, {zone: \"UTC\"}).toMillis()\n\t\t\tconst date = new Date(1675036800000)\n\t\t\t// DateTime.fromObject({year: 2023, month: 1, day: 30}, {zone: \"Asia/Krasnoyarsk\"}).toMillis()\n\t\t\tconst expected = 1675011600000\n\t\t\tconst result = getAllDayDateForTimezone(date, \"Asia/Krasnoyarsk\")\n\t\t\to(result.getTime()).equals(expected)(iso`${result.getTime()} vs ${expected}`)\n\t\t})\n\t})\n\n\to.spec(\"getCalendarMonth\", function () {\n\t\to.before(function () {\n\t\t\tlang.init({})\n\t\t\tlang.setLanguage({\n\t\t\t\tcode: \"en\",\n\t\t\t\tlanguageTag: \"en\",\n\t\t\t})\n\t\t})\n\t\to(\"getCalendarMonth starting on sunday - first day saturday\", function () {\n\t\t\tconst result = toCalendarString(getCalendarMonth(new Date(2019, 5, 10), 0, false))\n\t\t\t//console.log(result)\n\t\t\to(result).equals(\n\t\t\t\t\"Sun,Mon,Tue,Wed,Thu,Fri,Sat\\n\" +\n\t\t\t\t\t\"26,27,28,29,30,31,1\\n\" +\n\t\t\t\t\t\"2,3,4,5,6,7,8\\n\" +\n\t\t\t\t\t\"9,10,11,12,13,14,15\\n\" +\n\t\t\t\t\t\"16,17,18,19,20,21,22\\n\" +\n\t\t\t\t\t\"23,24,25,26,27,28,29\\n\" +\n\t\t\t\t\t\"30,1,2,3,4,5,6\",\n\t\t\t)\n\t\t})\n\t\to(\"getCalendarMonth starting on monday - first day saturday\", function () {\n\t\t\tconst result = toCalendarString(getCalendarMonth(new Date(2019, 5, 10), 1, false))\n\t\t\t//console.log(result)\n\t\t\to(result).equals(\n\t\t\t\t\"Mon,Tue,Wed,Thu,Fri,Sat,Sun\\n\" +\n\t\t\t\t\t\"27,28,29,30,31,1,2\\n\" +\n\t\t\t\t\t\"3,4,5,6,7,8,9\\n\" +\n\t\t\t\t\t\"10,11,12,13,14,15,16\\n\" +\n\t\t\t\t\t\"17,18,19,20,21,22,23\\n\" +\n\t\t\t\t\t\"24,25,26,27,28,29,30\\n\" +\n\t\t\t\t\t\"1,2,3,4,5,6,7\",\n\t\t\t)\n\t\t})\n\t\to(\"getCalendarMonth starting on saturday - first day saturday\", function () {\n\t\t\tconst result = toCalendarString(getCalendarMonth(new Date(2019, 5, 10), 6, false))\n\t\t\t//console.log(result)\n\t\t\to(result).equals(\n\t\t\t\t\"Sat,Sun,Mon,Tue,Wed,Thu,Fri\\n\" +\n\t\t\t\t\t\"1,2,3,4,5,6,7\\n\" +\n\t\t\t\t\t\"8,9,10,11,12,13,14\\n\" +\n\t\t\t\t\t\"15,16,17,18,19,20,21\\n\" +\n\t\t\t\t\t\"22,23,24,25,26,27,28\\n\" +\n\t\t\t\t\t\"29,30,1,2,3,4,5\\n\" +\n\t\t\t\t\t\"6,7,8,9,10,11,12\",\n\t\t\t)\n\t\t})\n\t\to(\"getCalendarMonth starting on sunday - first day sunday\", function () {\n\t\t\tconst result = toCalendarString(getCalendarMonth(new Date(2019, 8, 10), 0, false)) // september\n\n\t\t\t//console.log(result)\n\t\t\to(result).equals(\n\t\t\t\t\"Sun,Mon,Tue,Wed,Thu,Fri,Sat\\n\" +\n\t\t\t\t\t\"1,2,3,4,5,6,7\\n\" +\n\t\t\t\t\t\"8,9,10,11,12,13,14\\n\" +\n\t\t\t\t\t\"15,16,17,18,19,20,21\\n\" +\n\t\t\t\t\t\"22,23,24,25,26,27,28\\n\" +\n\t\t\t\t\t\"29,30,1,2,3,4,5\\n\" +\n\t\t\t\t\t\"6,7,8,9,10,11,12\",\n\t\t\t)\n\t\t})\n\t\to(\"getCalendarMonth starting on monday - first day sunday\", function () {\n\t\t\tconst result = toCalendarString(getCalendarMonth(new Date(2019, 8, 10), 1, false))\n\t\t\t//console.log(result)\n\t\t\to(result).equals(\n\t\t\t\t\"Mon,Tue,Wed,Thu,Fri,Sat,Sun\\n\" +\n\t\t\t\t\t\"26,27,28,29,30,31,1\\n\" +\n\t\t\t\t\t\"2,3,4,5,6,7,8\\n\" +\n\t\t\t\t\t\"9,10,11,12,13,14,15\\n\" +\n\t\t\t\t\t\"16,17,18,19,20,21,22\\n\" +\n\t\t\t\t\t\"23,24,25,26,27,28,29\\n\" +\n\t\t\t\t\t\"30,1,2,3,4,5,6\",\n\t\t\t)\n\t\t})\n\t\to(\"getCalendarMonth starting on saturday - first day sunday\", function () {\n\t\t\tconst result = toCalendarString(getCalendarMonth(new Date(2019, 8, 10), 6, false))\n\t\t\t//console.log(result)\n\t\t\to(result).equals(\n\t\t\t\t\"Sat,Sun,Mon,Tue,Wed,Thu,Fri\\n\" +\n\t\t\t\t\t\"31,1,2,3,4,5,6\\n\" +\n\t\t\t\t\t\"7,8,9,10,11,12,13\\n\" +\n\t\t\t\t\t\"14,15,16,17,18,19,20\\n\" +\n\t\t\t\t\t\"21,22,23,24,25,26,27\\n\" +\n\t\t\t\t\t\"28,29,30,1,2,3,4\\n\" +\n\t\t\t\t\t\"5,6,7,8,9,10,11\",\n\t\t\t)\n\t\t})\n\t\to(\"getCalendarMonth starting on sunday - first day monday\", function () {\n\t\t\tconst result = toCalendarString(getCalendarMonth(new Date(2019, 6, 10), 0, false)) // july\n\n\t\t\t//console.log(result)\n\t\t\to(result).equals(\n\t\t\t\t\"Sun,Mon,Tue,Wed,Thu,Fri,Sat\\n\" +\n\t\t\t\t\t\"30,1,2,3,4,5,6\\n\" +\n\t\t\t\t\t\"7,8,9,10,11,12,13\\n\" +\n\t\t\t\t\t\"14,15,16,17,18,19,20\\n\" +\n\t\t\t\t\t\"21,22,23,24,25,26,27\\n\" +\n\t\t\t\t\t\"28,29,30,31,1,2,3\\n\" +\n\t\t\t\t\t\"4,5,6,7,8,9,10\",\n\t\t\t)\n\t\t})\n\t\to(\"getCalendarMonth starting on monday - first day monday\", function () {\n\t\t\tconst result = toCalendarString(getCalendarMonth(new Date(2019, 6, 10), 1, false))\n\t\t\t//console.log(result)\n\t\t\to(result).equals(\n\t\t\t\t\"Mon,Tue,Wed,Thu,Fri,Sat,Sun\\n\" +\n\t\t\t\t\t\"1,2,3,4,5,6,7\\n\" +\n\t\t\t\t\t\"8,9,10,11,12,13,14\\n\" +\n\t\t\t\t\t\"15,16,17,18,19,20,21\\n\" +\n\t\t\t\t\t\"22,23,24,25,26,27,28\\n\" +\n\t\t\t\t\t\"29,30,31,1,2,3,4\\n\" +\n\t\t\t\t\t\"5,6,7,8,9,10,11\",\n\t\t\t)\n\t\t})\n\t\to(\"getCalendarMonth starting on saturday - first day monday\", function () {\n\t\t\tconst result = toCalendarString(getCalendarMonth(new Date(2019, 6, 10), 6, false))\n\t\t\t//console.log(result)\n\t\t\to(result).equals(\n\t\t\t\t\"Sat,Sun,Mon,Tue,Wed,Thu,Fri\\n\" +\n\t\t\t\t\t\"29,30,1,2,3,4,5\\n\" +\n\t\t\t\t\t\"6,7,8,9,10,11,12\\n\" +\n\t\t\t\t\t\"13,14,15,16,17,18,19\\n\" +\n\t\t\t\t\t\"20,21,22,23,24,25,26\\n\" +\n\t\t\t\t\t\"27,28,29,30,31,1,2\\n\" +\n\t\t\t\t\t\"3,4,5,6,7,8,9\",\n\t\t\t)\n\t\t})\n\t})\n\to.spec(\"parseTimeTo\", function () {\n\t\tfunction parseTimeString(timeString: string): { hours: number; minutes: number } {\n\t\t\treturn neverNull(Time.parseFromString(timeString)?.toObject() ?? null)\n\t\t}\n\n\t\to(\"parses full 24H time\", function () {\n\t\t\to(parseTimeString(\"12:45\")).deepEquals({\n\t\t\t\thours: 12,\n\t\t\t\tminutes: 45,\n\t\t\t})\n\t\t\to(parseTimeString(\"1245\")).deepEquals({\n\t\t\t\thours: 12,\n\t\t\t\tminutes: 45,\n\t\t\t})\n\t\t\to(parseTimeString(\"2359\")).deepEquals({\n\t\t\t\thours: 23,\n\t\t\t\tminutes: 59,\n\t\t\t})\n\t\t\to(parseTimeString(\"0000\")).deepEquals({\n\t\t\t\thours: 0,\n\t\t\t\tminutes: 0,\n\t\t\t})\n\t\t\to(parseTimeString(\"0623\")).deepEquals({\n\t\t\t\thours: 6,\n\t\t\t\tminutes: 23,\n\t\t\t})\n\t\t\to(parseTimeString(\"08:09\")).deepEquals({\n\t\t\t\thours: 8,\n\t\t\t\tminutes: 9,\n\t\t\t})\n\t\t})\n\t\to(\"parses partial 24H time\", function () {\n\t\t\to(parseTimeString(\"12\")).deepEquals({\n\t\t\t\thours: 12,\n\t\t\t\tminutes: 0,\n\t\t\t})\n\t\t\to(parseTimeString(\"1:2\")).deepEquals({\n\t\t\t\thours: 1,\n\t\t\t\tminutes: 2,\n\t\t\t})\n\t\t\to(parseTimeString(\"102\")).deepEquals({\n\t\t\t\thours: 1,\n\t\t\t\tminutes: 2,\n\t\t\t})\n\t\t\to(parseTimeString(\"17\")).deepEquals({\n\t\t\t\thours: 17,\n\t\t\t\tminutes: 0,\n\t\t\t})\n\t\t\to(parseTimeString(\"6\")).deepEquals({\n\t\t\t\thours: 6,\n\t\t\t\tminutes: 0,\n\t\t\t})\n\t\t\to(parseTimeString(\"955\")).deepEquals({\n\t\t\t\thours: 9,\n\t\t\t\tminutes: 55,\n\t\t\t})\n\t\t\to(parseTimeString(\"12:3\")).deepEquals({\n\t\t\t\thours: 12,\n\t\t\t\tminutes: 3,\n\t\t\t})\n\t\t\to(parseTimeString(\"809\")).deepEquals({\n\t\t\t\thours: 8,\n\t\t\t\tminutes: 9,\n\t\t\t})\n\t\t})\n\t\to(\"not parses incorrect time\", function () {\n\t\t\to(parseTimeString(\"12:3m\")).equals(null)\n\t\t\to(parseTimeString(\"A:3\")).equals(null)\n\t\t\to(parseTimeString(\"\")).equals(null)\n\t\t\to(parseTimeString(\":2\")).equals(null)\n\t\t\to(parseTimeString(\"25:03\")).equals(null)\n\t\t\to(parseTimeString(\"22:93\")).equals(null)\n\t\t\to(parseTimeString(\"24\")).equals(null)\n\t\t\to(parseTimeString(\"13pm\")).equals(null)\n\t\t\to(parseTimeString(\"263PM\")).equals(null)\n\t\t\to(parseTimeString(\"1403PM\")).equals(null)\n\t\t\to(parseTimeString(\"14:03:33PM\")).equals(null)\n\t\t\to(parseTimeString(\"9:37 acme\")).equals(null)\n\t\t})\n\t\to(\"parses AM/PM time\", function () {\n\t\t\to(parseTimeString(\"7PM\")).deepEquals({\n\t\t\t\thours: 19,\n\t\t\t\tminutes: 0,\n\t\t\t})\n\t\t\to(parseTimeString(\"11PM\")).deepEquals({\n\t\t\t\thours: 23,\n\t\t\t\tminutes: 0,\n\t\t\t})\n\t\t\to(parseTimeString(\"12PM\")).deepEquals({\n\t\t\t\thours: 12,\n\t\t\t\tminutes: 0,\n\t\t\t})\n\t\t\to(parseTimeString(\"11:30PM\")).deepEquals({\n\t\t\t\thours: 23,\n\t\t\t\tminutes: 30,\n\t\t\t})\n\t\t\to(parseTimeString(\"12AM\")).deepEquals({\n\t\t\t\thours: 0,\n\t\t\t\tminutes: 0,\n\t\t\t})\n\t\t\to(parseTimeString(\"12:30AM\")).deepEquals({\n\t\t\t\thours: 0,\n\t\t\t\tminutes: 30,\n\t\t\t})\n\t\t\to(parseTimeString(\"3:30AM\")).deepEquals({\n\t\t\t\thours: 3,\n\t\t\t\tminutes: 30,\n\t\t\t})\n\t\t\to(parseTimeString(\"3:30PM\")).deepEquals({\n\t\t\t\thours: 15,\n\t\t\t\tminutes: 30,\n\t\t\t})\n\t\t\to(parseTimeString(\"9:37am\")).deepEquals({\n\t\t\t\thours: 9,\n\t\t\t\tminutes: 37,\n\t\t\t})\n\t\t\to(parseTimeString(\"1:59pm\")).deepEquals({\n\t\t\t\thours: 13,\n\t\t\t\tminutes: 59,\n\t\t\t})\n\t\t\to(parseTimeString(\"3:30 AM\")).deepEquals({\n\t\t\t\thours: 3,\n\t\t\t\tminutes: 30,\n\t\t\t})\n\t\t\to(parseTimeString(\"3:30 PM\")).deepEquals({\n\t\t\t\thours: 15,\n\t\t\t\tminutes: 30,\n\t\t\t})\n\t\t\to(parseTimeString(\"9:37 am\")).deepEquals({\n\t\t\t\thours: 9,\n\t\t\t\tminutes: 37,\n\t\t\t})\n\t\t\to(parseTimeString(\"1:59 pm\")).deepEquals({\n\t\t\t\thours: 13,\n\t\t\t\tminutes: 59,\n\t\t\t})\n\t\t\to(parseTimeString(\"9:37 a.m.\")).deepEquals({\n\t\t\t\thours: 9,\n\t\t\t\tminutes: 37,\n\t\t\t})\n\t\t\to(parseTimeString(\"1:59 p.m.\")).deepEquals({\n\t\t\t\thours: 13,\n\t\t\t\tminutes: 59,\n\t\t\t})\n\t\t\to(parseTimeString(\"1052 P.M.\")).deepEquals({\n\t\t\t\thours: 22,\n\t\t\t\tminutes: 52,\n\t\t\t})\n\t\t\to(parseTimeString(\"1052 A.M.\")).deepEquals({\n\t\t\t\thours: 10,\n\t\t\t\tminutes: 52,\n\t\t\t})\n\t\t\to(parseTimeString(\"948 P.M.\")).deepEquals({\n\t\t\t\thours: 21,\n\t\t\t\tminutes: 48,\n\t\t\t})\n\t\t\to(parseTimeString(\"948 A.M.\")).deepEquals({\n\t\t\t\thours: 9,\n\t\t\t\tminutes: 48,\n\t\t\t})\n\t\t})\n\t})\n\to.spec(\"timeStringFromParts\", function () {\n\t\to(\"works\", function () {\n\t\t\to(timeStringFromParts(0, 0, true)).equals(\"12:00 am\")\n\t\t\to(timeStringFromParts(12, 0, true)).equals(\"12:00 pm\")\n\t\t\to(timeStringFromParts(10, 55, true)).equals(\"10:55 am\")\n\t\t\to(timeStringFromParts(10, 55, false)).equals(\"10:55\")\n\t\t\to(timeStringFromParts(22, 55, true)).equals(\"10:55 pm\")\n\t\t\to(timeStringFromParts(22, 55, false)).equals(\"22:55\")\n\t\t})\n\t})\n\to.spec(\"getStartOfWeek\", function () {\n\t\to(\"works\", function () {\n\t\t\to(getStartOfWeek(new Date(2019, 6, 7), 0).toISOString()).equals(new Date(2019, 6, 7).toISOString())\n\t\t\to(getStartOfWeek(new Date(2019, 6, 7), 1).toISOString()).equals(new Date(2019, 6, 1).toISOString())\n\t\t\to(getStartOfWeek(new Date(2019, 6, 7, 3, 4, 5), 1).toISOString()).equals(new Date(2019, 6, 1).toISOString())\n\t\t})\n\t})\n\to.spec(\"getWeekNumber\", function () {\n\t\to(\"works\", function () {\n\t\t\to(getWeekNumber(new Date(2019, 7, 5))).equals(32)\n\t\t\to(getWeekNumber(new Date(2019, 7, 4))).equals(31)\n\t\t\to(getWeekNumber(new Date(2017, 11, 25))).equals(52)\n\t\t\to(getWeekNumber(new Date(2018, 0, 1))).equals(1)\n\t\t})\n\t})\n\to.spec(\"capability\", function () {\n\t\tlet user\n\t\tlet ownerUser\n\t\tlet group\n\t\tlet groupMembership\n\t\tlet groupOwnerMembership\n\t\to.before(function () {\n\t\t\t// @ts-ignore\n\t\t\tgroup = createTestEntity(GroupTypeRef, {\n\t\t\t\t_id: \"g1\",\n\t\t\t\ttype: GroupType.Calendar,\n\t\t\t\tuser: \"groupOwner\",\n\t\t\t})\n\t\t\tgroupMembership = createTestEntity(GroupMembershipTypeRef, {\n\t\t\t\tgroup: group._id,\n\t\t\t})\n\t\t\tgroupOwnerMembership = createTestEntity(GroupMembershipTypeRef, {\n\t\t\t\tgroup: group._id,\n\t\t\t})\n\t\t\townerUser = createTestEntity(UserTypeRef, {\n\t\t\t\t_id: \"groupOwner\",\n\t\t\t\tmemberships: [groupOwnerMembership],\n\t\t\t})\n\t\t\tuser = createTestEntity(UserTypeRef, {\n\t\t\t\t_id: \"groupMember\",\n\t\t\t\tmemberships: [groupMembership],\n\t\t\t})\n\t\t})\n\t\to(\"hasCapability - Invite\", function () {\n\t\t\tgroupMembership.capability = ShareCapability.Invite\n\t\t\to(hasCapabilityOnGroup(user, group, ShareCapability.Invite)).equals(true)\n\t\t\to(hasCapabilityOnGroup(user, group, ShareCapability.Write)).equals(true)\n\t\t\to(hasCapabilityOnGroup(user, group, ShareCapability.Read)).equals(true)\n\t\t})\n\t\to(\"hasCapability - Write\", function () {\n\t\t\tgroupMembership.capability = ShareCapability.Write\n\t\t\to(hasCapabilityOnGroup(user, group, ShareCapability.Invite)).equals(false)\n\t\t\to(hasCapabilityOnGroup(user, group, ShareCapability.Write)).equals(true)\n\t\t\to(hasCapabilityOnGroup(user, group, ShareCapability.Read)).equals(true)\n\t\t})\n\t\to(\"hasCapability - Read\", function () {\n\t\t\tgroupMembership.capability = ShareCapability.Read\n\t\t\to(hasCapabilityOnGroup(user, group, ShareCapability.Invite)).equals(false)\n\t\t\to(hasCapabilityOnGroup(user, group, ShareCapability.Write)).equals(false)\n\t\t\to(hasCapabilityOnGroup(user, group, ShareCapability.Read)).equals(true)\n\t\t})\n\t\to(\"hasCapability - Null\", function () {\n\t\t\tgroupMembership.capability = null\n\t\t\to(hasCapabilityOnGroup(user, group, ShareCapability.Invite)).equals(false)\n\t\t\to(hasCapabilityOnGroup(user, group, ShareCapability.Write)).equals(false)\n\t\t\to(hasCapabilityOnGroup(user, group, ShareCapability.Read)).equals(false)\n\t\t})\n\t\to(\"hasCapability - Owner\", function () {\n\t\t\tgroupMembership.capability = null\n\t\t\to(hasCapabilityOnGroup(ownerUser, group, ShareCapability.Invite)).equals(true)\n\t\t\to(hasCapabilityOnGroup(ownerUser, group, ShareCapability.Write)).equals(true)\n\t\t\to(hasCapabilityOnGroup(ownerUser, group, ShareCapability.Read)).equals(true)\n\t\t})\n\t\to(\"hasCapability - no membership\", function () {\n\t\t\tuser.memberships = []\n\t\t\to(hasCapabilityOnGroup(user, group, ShareCapability.Invite)).equals(false)\n\t\t\to(hasCapabilityOnGroup(user, group, ShareCapability.Write)).equals(false)\n\t\t\to(hasCapabilityOnGroup(user, group, ShareCapability.Read)).equals(false)\n\t\t})\n\t})\n\to.spec(\"prepareCalendarDescription\", function () {\n\t\to(\"angled link replaced with a proper link\", function () {\n\t\t\to(prepareCalendarDescription(\"JoinBlahBlah<https://the-link.com/path>\", identity)).equals(\n\t\t\t\t`JoinBlahBlah<a href=\"https://the-link.com/path\">https://the-link.com/path</a>`,\n\t\t\t)\n\t\t})\n\t\to(\"normal HTML link is not touched\", function () {\n\t\t\to(prepareCalendarDescription(`JoinBlahBlah<a href=\"https://the-link.com/path\">a link</a>`, identity)).equals(\n\t\t\t\t`JoinBlahBlah<a href=\"https://the-link.com/path\">a link</a>`,\n\t\t\t)\n\t\t})\n\t\to(\"non-HTTP/HTTPS link is not allowed\", function () {\n\t\t\to(prepareCalendarDescription(`JoinBlahBlah<protocol://the-link.com/path>`, identity)).equals(`JoinBlahBlah<protocol://the-link.com/path>`)\n\t\t})\n\t\to(\"link with additional text is not allowed\", function () {\n\t\t\to(prepareCalendarDescription(\"JoinBlahBlah<https://the-link.com/path and some other text>\", identity)).equals(\n\t\t\t\t`JoinBlahBlah<https://the-link.com/path and some other text>`,\n\t\t\t)\n\t\t})\n\t\to(\"non-closed tag is not allowed\", function () {\n\t\t\to(prepareCalendarDescription(\"JoinBlahBlah<https://the-link.com/path and some other text\", identity)).equals(\n\t\t\t\t`JoinBlahBlah<https://the-link.com/path and some other text`,\n\t\t\t)\n\t\t})\n\t})\n\to.spec(\"findNextAlarmOccurrence\", function () {\n\t\tconst timeZone = \"Europe/Berlin\"\n\t\to(\"weekly never ends\", function () {\n\t\t\tconst now = DateTime.fromObject(\n\t\t\t\t{\n\t\t\t\t\tyear: 2019,\n\t\t\t\t\tmonth: 5,\n\t\t\t\t\tday: 2,\n\t\t\t\t},\n\t\t\t\t{ zone: timeZone },\n\t\t\t).toJSDate()\n\t\t\tconst eventStart = DateTime.fromObject(\n\t\t\t\t{\n\t\t\t\t\tyear: 2019,\n\t\t\t\t\tmonth: 5,\n\t\t\t\t\tday: 2,\n\t\t\t\t\thour: 12,\n\t\t\t\t},\n\t\t\t\t{ zone: timeZone },\n\t\t\t).toJSDate()\n\t\t\tconst eventEnd = DateTime.fromObject(\n\t\t\t\t{\n\t\t\t\t\tyear: 2019,\n\t\t\t\t\tmonth: 5,\n\t\t\t\t\tday: 2,\n\t\t\t\t\thour: 14,\n\t\t\t\t},\n\t\t\t\t{ zone: timeZone },\n\t\t\t).toJSDate()\n\t\t\tconst occurrences = iterateAlarmOccurrences(\n\t\t\t\tnow,\n\t\t\t\ttimeZone,\n\t\t\t\teventStart,\n\t\t\t\teventEnd,\n\t\t\t\tRepeatPeriod.WEEKLY,\n\t\t\t\t1,\n\t\t\t\tEndType.Never,\n\t\t\t\t0,\n\t\t\t\t[],\n\t\t\t\tStandardAlarmInterval.ONE_HOUR,\n\t\t\t\ttimeZone,\n\t\t\t\t10,\n\t\t\t)\n\t\t\to(occurrences.slice(0, 4)).deepEquals([\n\t\t\t\tDateTime.fromObject(\n\t\t\t\t\t{\n\t\t\t\t\t\tyear: 2019,\n\t\t\t\t\t\tmonth: 5,\n\t\t\t\t\t\tday: 2,\n\t\t\t\t\t\thour: 11,\n\t\t\t\t\t},\n\t\t\t\t\t{ zone: timeZone },\n\t\t\t\t).toJSDate(),\n\t\t\t\tDateTime.fromObject(\n\t\t\t\t\t{\n\t\t\t\t\t\tyear: 2019,\n\t\t\t\t\t\tmonth: 5,\n\t\t\t\t\t\tday: 9,\n\t\t\t\t\t\thour: 11,\n\t\t\t\t\t},\n\t\t\t\t\t{ zone: timeZone },\n\t\t\t\t).toJSDate(),\n\t\t\t\tDateTime.fromObject(\n\t\t\t\t\t{\n\t\t\t\t\t\tyear: 2019,\n\t\t\t\t\t\tmonth: 5,\n\t\t\t\t\t\tday: 16,\n\t\t\t\t\t\thour: 11,\n\t\t\t\t\t},\n\t\t\t\t\t{ zone: timeZone },\n\t\t\t\t).toJSDate(),\n\t\t\t\tDateTime.fromObject(\n\t\t\t\t\t{\n\t\t\t\t\t\tyear: 2019,\n\t\t\t\t\t\tmonth: 5,\n\t\t\t\t\t\tday: 23,\n\t\t\t\t\t\thour: 11,\n\t\t\t\t\t},\n\t\t\t\t\t{ zone: timeZone },\n\t\t\t\t).toJSDate(),\n\t\t\t])\n\t\t})\n\t\to(\"ends for all-day event correctly\", function () {\n\t\t\tconst repeatRuleTimeZone = \"Asia/Anadyr\" // +12\n\n\t\t\tconst now = DateTime.fromObject(\n\t\t\t\t{\n\t\t\t\t\tyear: 2019,\n\t\t\t\t\tmonth: 5,\n\t\t\t\t\tday: 1,\n\t\t\t\t},\n\t\t\t\t{ zone: timeZone },\n\t\t\t).toJSDate()\n\t\t\t// UTC date just encodes the date, whatever you pass to it. You just have to extract consistently\n\t\t\tconst eventStart = getAllDayDateUTC(\n\t\t\t\tDateTime.fromObject({\n\t\t\t\t\tyear: 2019,\n\t\t\t\t\tmonth: 5,\n\t\t\t\t\tday: 2,\n\t\t\t\t}).toJSDate(),\n\t\t\t)\n\t\t\tconst eventEnd = getAllDayDateUTC(\n\t\t\t\tDateTime.fromObject({\n\t\t\t\t\tyear: 2019,\n\t\t\t\t\tmonth: 5,\n\t\t\t\t\tday: 3,\n\t\t\t\t}).toJSDate(),\n\t\t\t)\n\t\t\tconst repeatEnd = getAllDayDateUTC(\n\t\t\t\tDateTime.fromObject({\n\t\t\t\t\tyear: 2019,\n\t\t\t\t\tmonth: 5,\n\t\t\t\t\tday: 4,\n\t\t\t\t}).toJSDate(),\n\t\t\t)\n\t\t\tconst occurrences = iterateAlarmOccurrences(\n\t\t\t\tnow,\n\t\t\t\trepeatRuleTimeZone,\n\t\t\t\teventStart,\n\t\t\t\teventEnd,\n\t\t\t\tRepeatPeriod.DAILY,\n\t\t\t\t1,\n\t\t\t\tEndType.UntilDate,\n\t\t\t\trepeatEnd.getTime(),\n\t\t\t\t[],\n\t\t\t\tStandardAlarmInterval.ONE_DAY,\n\t\t\t\ttimeZone,\n\t\t\t\t10,\n\t\t\t)\n\t\t\to(occurrences).deepEquals([\n\t\t\t\tDateTime.fromObject(\n\t\t\t\t\t{\n\t\t\t\t\t\tyear: 2019,\n\t\t\t\t\t\tmonth: 5,\n\t\t\t\t\t\tday: 1,\n\t\t\t\t\t\thour: 0,\n\t\t\t\t\t},\n\t\t\t\t\t{ zone: timeZone },\n\t\t\t\t).toJSDate(),\n\t\t\t\tDateTime.fromObject(\n\t\t\t\t\t{\n\t\t\t\t\t\tyear: 2019,\n\t\t\t\t\t\tmonth: 5,\n\t\t\t\t\t\tday: 2,\n\t\t\t\t\t\thour: 0,\n\t\t\t\t\t},\n\t\t\t\t\t{ zone: timeZone },\n\t\t\t\t).toJSDate(),\n\t\t\t])\n\t\t})\n\t})\n\to.spec(\"Diff between events\", function () {\n\t\to(\"getDiffIn60mIntervals\", function () {\n\t\t\to(getDiffIn60mIntervals(new Date(\"2020-12-31T23:00:00.000Z\"), new Date(\"2021-01-01T23:00:00.000Z\"))).equals(24)\n\t\t\to(getDiffIn60mIntervals(new Date(\"2021-01-01T23:00:00.000Z\"), new Date(\"2020-12-31T23:00:00.000Z\"))).equals(-24)\n\t\t\to(getDiffIn60mIntervals(new Date(\"2020-12-31T23:00:00.000Z\"), new Date(\"2020-12-31T23:30:00.000Z\"))).equals(0)\n\t\t\to(getDiffIn60mIntervals(new Date(\"2020-12-31T23:00:00.000Z\"), new Date(\"2021-01-01T00:00:00.000Z\"))).equals(1)\n\t\t})\n\t\to(\"getDiffIn24hIntervals\", function () {\n\t\t\to(getDiffIn24hIntervals(new Date(\"2020-12-31T23:00:00.000Z\"), new Date(\"2021-01-01T23:00:00.000Z\"))).equals(1)\n\t\t\to(getDiffIn24hIntervals(new Date(\"2021-01-01T23:00:00.000Z\"), new Date(\"2020-12-31T23:00:00.000Z\"))).equals(-1)\n\t\t\to(getDiffIn24hIntervals(new Date(\"2021-01-01T00:01:00.000Z\"), new Date(\"2020-12-30T23:59:00.000Z\"))).equals(-2)(\"less than 2*24, but gives -2?\")\n\t\t\to(getDiffIn24hIntervals(new Date(\"2020-12-31T23:00:00.000Z\"), new Date(\"2020-12-31T23:30:00.000Z\"))).equals(0)\n\t\t\to(getDiffIn24hIntervals(new Date(\"2020-12-31T23:00:00.000Z\"), new Date(\"2021-01-01T00:00:00.000Z\"))).equals(0)\n\t\t})\n\t})\n\to.spec(\"Event start and end time comparison\", function () {\n\t\tconst zone = getTimeZone()\n\n\t\tfunction eventOn(start: Date, end: Date): CalendarEvent {\n\t\t\treturn createTestEntity(CalendarEventTypeRef, {\n\t\t\t\tstartTime: start,\n\t\t\t\tendTime: end,\n\t\t\t})\n\t\t}\n\n\t\to(\"starts after\", function () {\n\t\t\to(eventStartsAfter(new Date(2021, 0, 1), zone, eventOn(new Date(2021, 0, 1), new Date(2021, 0, 1)))).equals(false)(`starts same day`)\n\t\t\to(eventStartsAfter(new Date(2021, 0, 1), zone, eventOn(new Date(2020, 11, 31), new Date(2021, 0, 1)))).equals(false)(`starts before`)\n\t\t\to(eventStartsAfter(new Date(2021, 0, 1), zone, eventOn(new Date(2021, 0, 2), new Date(2021, 0, 2)))).equals(true)(`starts after`)\n\t\t})\n\t\to(\"ends before\", function () {\n\t\t\to(eventEndsBefore(new Date(2021, 0, 1), zone, eventOn(new Date(2020, 11, 31), new Date(2021, 0, 1)))).equals(false)(`ends same day`)\n\t\t\to(eventEndsBefore(new Date(2021, 0, 1), zone, eventOn(new Date(2020, 11, 31), new Date(2021, 0, 2)))).equals(false)(`ends after`)\n\t\t\to(eventEndsBefore(new Date(2021, 0, 1), zone, eventOn(new Date(2020, 11, 30), new Date(2020, 11, 31)))).equals(true)(`ends before`)\n\t\t})\n\t\to(\"event is in week\", function () {\n\t\t\tconst firstDayOfWeek = new Date(2021, 8, 6)\n\t\t\tconst lastDayOfWeek = new Date(2021, 8, 12)\n\t\t\to(isEventBetweenDays(eventOn(new Date(2021, 8, 5, 13, 30), new Date(2021, 8, 6, 13, 30)), firstDayOfWeek, lastDayOfWeek, zone)).equals(true)(\n\t\t\t\t`starts before, ends first day`,\n\t\t\t)\n\t\t\to(isEventBetweenDays(eventOn(new Date(2021, 8, 5, 13, 30), new Date(2021, 8, 12, 13, 30)), firstDayOfWeek, lastDayOfWeek, zone)).equals(true)(\n\t\t\t\t`starts before, ends last day`,\n\t\t\t)\n\t\t\to(isEventBetweenDays(eventOn(new Date(2021, 8, 6, 13, 30), new Date(2021, 8, 6, 13, 30)), firstDayOfWeek, lastDayOfWeek, zone)).equals(true)(\n\t\t\t\t`starts first day, ends first day`,\n\t\t\t)\n\t\t\to(isEventBetweenDays(eventOn(new Date(2021, 8, 6, 13, 30), new Date(2021, 8, 12, 13, 30)), firstDayOfWeek, lastDayOfWeek, zone)).equals(true)(\n\t\t\t\t`starts first day, ends last day`,\n\t\t\t)\n\t\t\to(isEventBetweenDays(eventOn(new Date(2021, 8, 6, 13, 30), new Date(2021, 8, 13, 13, 30)), firstDayOfWeek, lastDayOfWeek, zone)).equals(true)(\n\t\t\t\t`starts first day, ends after`,\n\t\t\t)\n\t\t\to(isEventBetweenDays(eventOn(new Date(2021, 8, 12, 13, 30), new Date(2021, 8, 12, 13, 30)), firstDayOfWeek, lastDayOfWeek, zone)).equals(true)(\n\t\t\t\t`starts last day, ends last day`,\n\t\t\t)\n\t\t\to(isEventBetweenDays(eventOn(new Date(2021, 8, 12, 13, 30), new Date(2021, 8, 13, 13, 30)), firstDayOfWeek, lastDayOfWeek, zone)).equals(true)(\n\t\t\t\t`starts last day, ends after`,\n\t\t\t)\n\t\t\to(isEventBetweenDays(eventOn(new Date(2021, 8, 5, 13, 30), new Date(2021, 8, 13, 13, 30)), firstDayOfWeek, lastDayOfWeek, zone)).equals(true)(\n\t\t\t\t`starts before, ends after`,\n\t\t\t)\n\t\t\to(isEventBetweenDays(eventOn(new Date(2021, 8, 5, 13, 30), new Date(2021, 8, 5, 13, 30)), firstDayOfWeek, lastDayOfWeek, zone)).equals(false)(\n\t\t\t\t`starts before, ends before`,\n\t\t\t)\n\t\t\to(isEventBetweenDays(eventOn(new Date(2021, 8, 13, 13, 30), new Date(2021, 8, 13, 13, 30)), firstDayOfWeek, lastDayOfWeek, zone)).equals(false)(\n\t\t\t\t`starts after, ends after`,\n\t\t\t) // Cases not mentioned are UB\n\t\t})\n\t})\n\to.spec(\"check event validity\", function () {\n\t\to(\"events with invalid dates are detected\", function () {\n\t\t\to(\n\t\t\t\tcheckEventValidity(\n\t\t\t\t\tcreateTestEntity(CalendarEventTypeRef, {\n\t\t\t\t\t\tstartTime: new Date(\"nan\"),\n\t\t\t\t\t\tendTime: new Date(\"1990\"),\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t).equals(CalendarEventValidity.InvalidContainsInvalidDate)\n\t\t\to(\n\t\t\t\tcheckEventValidity(\n\t\t\t\t\tcreateTestEntity(CalendarEventTypeRef, {\n\t\t\t\t\t\tstartTime: new Date(\"1991\"),\n\t\t\t\t\t\tendTime: new Date(\"nan\"),\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t).equals(CalendarEventValidity.InvalidContainsInvalidDate)\n\t\t\to(\n\t\t\t\tcheckEventValidity(\n\t\t\t\t\tcreateTestEntity(CalendarEventTypeRef, {\n\t\t\t\t\t\tstartTime: new Date(\"nan\"),\n\t\t\t\t\t\tendTime: new Date(\"nan\"),\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t).equals(CalendarEventValidity.InvalidContainsInvalidDate)\n\t\t})\n\t\to(\"events with start date not before end date are detected\", function () {\n\t\t\to(\n\t\t\t\tcheckEventValidity(\n\t\t\t\t\tcreateTestEntity(CalendarEventTypeRef, {\n\t\t\t\t\t\tstartTime: new Date(\"1990\"),\n\t\t\t\t\t\tendTime: new Date(\"1990\"),\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t).equals(CalendarEventValidity.InvalidEndBeforeStart)\n\t\t\to(\n\t\t\t\tcheckEventValidity(\n\t\t\t\t\tcreateTestEntity(CalendarEventTypeRef, {\n\t\t\t\t\t\tstartTime: new Date(\"1990\"),\n\t\t\t\t\t\tendTime: new Date(\"1980\"),\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t).equals(CalendarEventValidity.InvalidEndBeforeStart)\n\t\t})\n\t\to(\"events with date before 1970 are detected\", function () {\n\t\t\to(\n\t\t\t\tcheckEventValidity(\n\t\t\t\t\tcreateTestEntity(CalendarEventTypeRef, {\n\t\t\t\t\t\tstartTime: new Date(\"1969\"),\n\t\t\t\t\t\tendTime: new Date(\"1990\"),\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t).equals(CalendarEventValidity.InvalidPre1970)\n\t\t\to(\n\t\t\t\tcheckEventValidity(\n\t\t\t\t\tcreateTestEntity(CalendarEventTypeRef, {\n\t\t\t\t\t\tstartTime: new Date(\"1960\"),\n\t\t\t\t\t\tendTime: new Date(\"1966\"),\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t).equals(CalendarEventValidity.InvalidPre1970)\n\t\t\to(\n\t\t\t\tcheckEventValidity(\n\t\t\t\t\tcreateTestEntity(CalendarEventTypeRef, {\n\t\t\t\t\t\tstartTime: new Date(\"1970\"),\n\t\t\t\t\t\tendTime: new Date(\"1966\"),\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t).equals(CalendarEventValidity.InvalidEndBeforeStart)\n\t\t})\n\t\to(\"valid events are detected\", function () {\n\t\t\to(\n\t\t\t\tcheckEventValidity(\n\t\t\t\t\tcreateTestEntity(CalendarEventTypeRef, {\n\t\t\t\t\t\tstartTime: getDateInUTC(\"1970\"),\n\t\t\t\t\t\tendTime: getDateInUTC(\"1990\"),\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t).equals(CalendarEventValidity.Valid)(\"events on the cusp of 1970 UTC are valid\")\n\t\t\to(\n\t\t\t\tcheckEventValidity(\n\t\t\t\t\tcreateTestEntity(CalendarEventTypeRef, {\n\t\t\t\t\t\tstartTime: getDateInZone(\"1971\"),\n\t\t\t\t\t\tendTime: getDateInZone(\"2022\"),\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t).equals(CalendarEventValidity.Valid)\n\t\t})\n\t})\n\to.spec(\"addDaysForEventInstance\", function () {\n\t\tlet eventsForDays: Map<number, Array<CalendarEvent>>\n\t\to.beforeEach(function () {\n\t\t\teventsForDays = new Map()\n\t\t})\n\t\to(\"short event same month\", function () {\n\t\t\tconst event = createEvent(getDateInZone(\"2019-05-01T08:00\"), getDateInZone(\"2019-05-01T10:00\"))\n\t\t\tconst month = getMonthRange(getDateInZone(\"2019-05-01\"), zone)\n\t\t\taddDaysForEventInstance(eventsForDays, event, month, zone)\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-05-01\").getTime())).deepEquals([event])\n\t\t\to(countDaysWithEvents(eventsForDays)).equals(1)\n\t\t})\n\t\to(\"short event prev month\", function () {\n\t\t\tconst event = createEvent(getDateInZone(\"2019-05-01T08:00\"), getDateInZone(\"2019-05-01T10:00\"))\n\t\t\tconst prevMonth = getMonthRange(getDateInZone(\"2019-04-01\"), zone)\n\t\t\taddDaysForEventInstance(eventsForDays, event, prevMonth, zone)\n\t\t\tconst eventsForDay = neverNull(eventsForDays.get(getStartOfDay(event.startTime).getTime()))\n\t\t\t// @ts-ignore\n\t\t\to(eventsForDay).deepEquals(undefined)\n\t\t})\n\t\to(\"short event next month\", function () {\n\t\t\tconst krsk = \"Asia/Krasnoyarsk\"\n\t\t\tconst event = createEvent(getDateInZone(\"2019-05-01T08:00\", krsk), getDateInZone(\"2019-05-01T10:00\", krsk))\n\t\t\tconst nextMonth = getMonthRange(getDateInZone(\"2019-06-01\"), krsk)\n\t\t\taddDaysForEventInstance(eventsForDays, event, nextMonth, zone)\n\t\t\tconst eventsForDay = neverNull(eventsForDays.get(getStartOfDay(event.startTime).getTime()))\n\t\t\t// @ts-ignore\n\t\t\to(eventsForDay).deepEquals(undefined)\n\t\t})\n\t\to(\"short event multiple days\", function () {\n\t\t\tconst event = createEvent(getDateInZone(\"2019-05-01T08:00\"), getDateInZone(\"2019-05-04T10:00\"))\n\t\t\tconst thisMonth = getMonthRange(getDateInZone(\"2019-05-01\"), zone)\n\t\t\tconst nextMonth = getMonthRange(getDateInZone(\"2019-06-01\"), zone)\n\t\t\t// the event is not in june, duh\n\t\t\taddDaysForEventInstance(eventsForDays, event, nextMonth, zone)\n\t\t\to(countDaysWithEvents(eventsForDays)).equals(0)\n\n\t\t\taddDaysForEventInstance(eventsForDays, event, thisMonth, zone)\n\t\t\to(countDaysWithEvents(eventsForDays)).equals(4)\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-05-01\").getTime())).deepEquals([event])\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-05-02\").getTime())).deepEquals([event])\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-05-03\").getTime())).deepEquals([event])\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-05-04\").getTime())).deepEquals([event])\n\t\t})\n\t\to(\"short event multiple days spans next month\", function () {\n\t\t\tconst event = createEvent(getDateInZone(\"2019-05-29T08:00\"), getDateInZone(\"2019-06-02T10:00\"))\n\t\t\tconst thisMonth = getMonthRange(getDateInZone(\"2019-05-01\"), zone)\n\t\t\tconst nextMonth = getMonthRange(getDateInZone(\"2019-06-01\"), zone)\n\n\t\t\taddDaysForEventInstance(eventsForDays, event, nextMonth, zone)\n\t\t\to(countDaysWithEvents(eventsForDays)).equals(2)\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-06-01\").getTime())).deepEquals([event])\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-06-02\").getTime())).deepEquals([event])\n\n\t\t\taddDaysForEventInstance(eventsForDays, event, thisMonth, zone)\n\t\t\to(countDaysWithEvents(eventsForDays)).equals(2 + 3)\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-05-29\").getTime())).deepEquals([event])\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-05-30\").getTime())).deepEquals([event])\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-05-31\").getTime())).deepEquals([event])\n\t\t})\n\t\to(\"all day event\", function () {\n\t\t\t// all day event of one day\n\t\t\tconst event = createEvent(getDateInUTC(\"2019-05-01\"), getDateInUTC(\"2019-05-02\"))\n\t\t\taddDaysForEventInstance(eventsForDays, event, getMonthRange(getDateInZone(\"2019-05-01\"), zone), zone)\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-05-01\").getTime())).deepEquals([event])\n\t\t\to(countDaysWithEvents(eventsForDays)).equals(1)\n\t\t})\n\t\to(\"all day event two days\", function () {\n\t\t\tconst event = createEvent(getDateInUTC(\"2019-04-30\"), getDateInUTC(\"2019-05-02\"))\n\t\t\taddDaysForEventInstance(eventsForDays, event, getMonthRange(getDateInZone(\"2019-05-01\"), zone), zone)\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-05-01\").getTime())).deepEquals([event])\n\t\t\to(countDaysWithEvents(eventsForDays)).equals(1)\n\n\t\t\taddDaysForEventInstance(eventsForDays, event, getMonthRange(getDateInZone(\"2019-04-01\"), zone), zone)\n\t\t\to(countDaysWithEvents(eventsForDays)).equals(2)\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-04-30\").getTime())).deepEquals([event])\n\t\t})\n\t\to(\"add same event\", function () {\n\t\t\tconst event = createEvent(getDateInZone(\"2019-05-01T08:00\"), getDateInZone(\"2019-05-01T10:00\"))\n\t\t\tconst month = getMonthRange(getDateInZone(\"2019-05-01\"), zone)\n\t\t\taddDaysForEventInstance(eventsForDays, event, month, zone)\n\t\t\tconst secondEvent = clone(event)\n\t\t\taddDaysForEventInstance(eventsForDays, secondEvent, month, zone)\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-05-01\").getTime())).deepEquals([event])\n\t\t\to(countDaysWithEvents(eventsForDays)).equals(1)\n\t\t})\n\t\to(\"event became shorter\", function () {\n\t\t\tconst event = createEvent(getDateInZone(\"2019-05-01T08:00\"), getDateInZone(\"2019-05-05T12:00\"))\n\t\t\tconst month = getMonthRange(getDateInZone(\"2019-05-01\"), zone)\n\n\t\t\t// add for may\n\t\t\taddDaysForEventInstance(eventsForDays, event, month, zone)\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-05-05\").getTime())).deepEquals([event])(\"Original event is added\")\n\t\t\tconst shorterEvent = createEvent(getDateInZone(\"2019-05-01T08:00\"), getDateInZone(\"2019-05-03T12:00\"))\n\t\t\tshorterEvent._id = event._id\n\n\t\t\t// add for may again, but with fewer days.\n\t\t\taddDaysForEventInstance(eventsForDays, shorterEvent, month, zone)\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-05-05\").getTime())).deepEquals([])(\"Original event is removed\")\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-05-03\").getTime())).deepEquals([shorterEvent])(\"New event is added\")\n\t\t})\n\t})\n\to.spec(\"addDaysForRecurringEvent\", function () {\n\t\tlet eventsForDays: Map<number, Array<CalendarEvent>>\n\t\to.beforeEach(function () {\n\t\t\teventsForDays = new Map()\n\t\t})\n\t\to(\"recurring event - short with time \", function () {\n\t\t\t// event that goes on for 2 hours and repeats weekly\n\t\t\tconst event = createEvent(getDateInZone(\"2019-05-02T10:00\"), getDateInZone(\"2019-05-02T12:00\"))\n\t\t\tevent.repeatRule = createRepeatRuleWithValues(RepeatPeriod.WEEKLY, 1, zone)\n\t\t\taddDaysForRecurringEvent(eventsForDays, event, getMonthRange(getDateInZone(\"2019-06-01\"), zone), zone)\n\t\t\to(countDaysWithEvents(eventsForDays)).equals(4)\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-06-06\").getTime())).deepEquals([\n\t\t\t\tcloneEventWithNewTime(event, getDateInZone(\"2019-06-06T10:00\"), getDateInZone(\"2019-06-06T12:00\")),\n\t\t\t])\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-06-13\").getTime())).deepEquals([\n\t\t\t\tcloneEventWithNewTime(event, getDateInZone(\"2019-06-13T10:00\"), getDateInZone(\"2019-06-13T12:00\")),\n\t\t\t])\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-06-20\").getTime())).deepEquals([\n\t\t\t\tcloneEventWithNewTime(event, getDateInZone(\"2019-06-20T10:00\"), getDateInZone(\"2019-06-20T12:00\")),\n\t\t\t])\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-06-27\").getTime())).deepEquals([\n\t\t\t\tcloneEventWithNewTime(event, getDateInZone(\"2019-06-27T10:00\"), getDateInZone(\"2019-06-27T12:00\")),\n\t\t\t])\n\n\t\t\taddDaysForRecurringEvent(eventsForDays, event, getMonthRange(getDateInZone(\"2019-05-01\"), zone), zone)\n\t\t\to(countDaysWithEvents(eventsForDays)).equals(4 + 5)\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-05-02\").getTime())).deepEquals([\n\t\t\t\tcloneEventWithNewTime(event, getDateInZone(\"2019-05-02T10:00\"), getDateInZone(\"2019-05-02T12:00\")),\n\t\t\t])\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-05-09\").getTime())).deepEquals([\n\t\t\t\tcloneEventWithNewTime(event, getDateInZone(\"2019-05-09T10:00\"), getDateInZone(\"2019-05-09T12:00\")),\n\t\t\t])\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-05-16\").getTime())).deepEquals([\n\t\t\t\tcloneEventWithNewTime(event, getDateInZone(\"2019-05-16T10:00\"), getDateInZone(\"2019-05-16T12:00\")),\n\t\t\t])\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-05-23\").getTime())).deepEquals([\n\t\t\t\tcloneEventWithNewTime(event, getDateInZone(\"2019-05-23T10:00\"), getDateInZone(\"2019-05-23T12:00\")),\n\t\t\t])\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-05-30\").getTime())).deepEquals([\n\t\t\t\tcloneEventWithNewTime(event, getDateInZone(\"2019-05-30T10:00\"), getDateInZone(\"2019-05-30T12:00\")),\n\t\t\t])\n\t\t})\n\t\to(\"recurring event - short with time & day interval\", function () {\n\t\t\t// two hour event that happens every fourth day\n\t\t\tconst event = createEvent(getDateInZone(\"2019-05-30T10:00\"), getDateInZone(\"2019-05-30T12:00\"))\n\t\t\tevent.repeatRule = createRepeatRuleWithValues(RepeatPeriod.DAILY, 4, zone)\n\t\t\taddDaysForRecurringEvent(eventsForDays, event, getMonthRange(getDateInZone(\"2019-06-01\"), zone), zone)\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-06-03\").getTime())).deepEquals([\n\t\t\t\tcloneEventWithNewTime(event, getDateInZone(\"2019-06-03T10:00\"), getDateInZone(\"2019-06-03T12:00\")),\n\t\t\t])\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-06-07\").getTime())).deepEquals([\n\t\t\t\tcloneEventWithNewTime(event, getDateInZone(\"2019-06-07T10:00\"), getDateInZone(\"2019-06-07T12:00\")),\n\t\t\t])\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-06-11\").getTime())).deepEquals([\n\t\t\t\tcloneEventWithNewTime(event, getDateInZone(\"2019-06-11T10:00\"), getDateInZone(\"2019-06-11T12:00\")),\n\t\t\t])\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-06-15\").getTime())).deepEquals([\n\t\t\t\tcloneEventWithNewTime(event, getDateInZone(\"2019-06-15T10:00\"), getDateInZone(\"2019-06-15T12:00\")),\n\t\t\t])\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-06-19\").getTime())).deepEquals([\n\t\t\t\tcloneEventWithNewTime(event, getDateInZone(\"2019-06-19T10:00\"), getDateInZone(\"2019-06-19T12:00\")),\n\t\t\t])\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-06-23\").getTime())).deepEquals([\n\t\t\t\tcloneEventWithNewTime(event, getDateInZone(\"2019-06-23T10:00\"), getDateInZone(\"2019-06-23T12:00\")),\n\t\t\t])\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-06-27\").getTime())).deepEquals([\n\t\t\t\tcloneEventWithNewTime(event, getDateInZone(\"2019-06-27T10:00\"), getDateInZone(\"2019-06-27T12:00\")),\n\t\t\t])\n\t\t\to(countDaysWithEvents(eventsForDays)).equals(7)\n\t\t})\n\t\to(\"recurring event - short with time & monthly\", function () {\n\t\t\tconst event = createEvent(getDateInZone(\"2019-05-31T10:00\"), getDateInZone(\"2019-05-31T12:00\"))\n\t\t\tevent.repeatRule = createRepeatRuleWithValues(RepeatPeriod.MONTHLY, 1, zone)\n\t\t\tconst expectedForMay = [cloneEventWithNewTime(event, getDateInZone(\"2019-05-31T10:00\"), getDateInZone(\"2019-05-31T12:00\"))]\n\t\t\tconst expectedForJune = [cloneEventWithNewTime(event, getDateInZone(\"2019-06-30T10:00\"), getDateInZone(\"2019-06-30T12:00\"))]\n\t\t\tconst expectedForJuly = [cloneEventWithNewTime(event, getDateInZone(\"2019-07-31T10:00\"), getDateInZone(\"2019-07-31T12:00\"))]\n\t\t\tconst expectedForFebruary = [cloneEventWithNewTime(event, getDateInZone(\"2020-02-29T10:00\"), getDateInZone(\"2020-02-29T12:00\"))]\n\n\t\t\t// add for may\n\t\t\taddDaysForRecurringEvent(eventsForDays, event, getMonthRange(getDateInZone(\"2019-05-01\"), zone), zone)\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-05-31\").getTime())).deepEquals(expectedForMay)\n\t\t\to(countDaysWithEvents(eventsForDays)).equals(1)\n\n\t\t\t// add for june\n\t\t\taddDaysForRecurringEvent(eventsForDays, event, getMonthRange(getDateInZone(\"2019-06-01\"), zone), zone)\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-05-31\").getTime())).deepEquals(expectedForMay)\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-06-30\").getTime())).deepEquals(expectedForJune)\n\t\t\to(countDaysWithEvents(eventsForDays)).equals(2)\n\n\t\t\t// add for july\n\t\t\taddDaysForRecurringEvent(eventsForDays, event, getMonthRange(getDateInZone(\"2019-07-01\"), zone), zone)\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-05-31\").getTime())).deepEquals(expectedForMay)\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-06-30\").getTime())).deepEquals(expectedForJune)\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-07-31\").getTime())).deepEquals(expectedForJuly)\n\t\t\to(countDaysWithEvents(eventsForDays)).equals(3)\n\n\t\t\t// add for february 2020\n\t\t\taddDaysForRecurringEvent(eventsForDays, event, getMonthRange(getDateInZone(\"2020-02-01\"), zone), zone)\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-05-31\").getTime())).deepEquals(expectedForMay)\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-06-30\").getTime())).deepEquals(expectedForJune)\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-07-31\").getTime())).deepEquals(expectedForJuly)\n\t\t\to(eventsForDays.get(getDateInZone(\"2020-02-29\").getTime())).deepEquals(expectedForFebruary)\n\t\t\to(countDaysWithEvents(eventsForDays)).equals(4)\n\t\t})\n\t\to(\"recurring event - short with time & monthly interval\", function () {\n\t\t\tconst event = createEvent(getDateInZone(\"2019-05-31T10:00\"), getDateInZone(\"2019-05-31T12:00\"))\n\t\t\tevent.repeatRule = createRepeatRuleWithValues(RepeatPeriod.MONTHLY, 2, zone)\n\t\t\t// add for june\n\t\t\taddDaysForRecurringEvent(eventsForDays, event, getMonthRange(getDateInZone(\"2019-06-01\"), zone), zone)\n\t\t\to(countDaysWithEvents(eventsForDays)).equals(0)(\"does not occur in june\")\n\n\t\t\t// add for july\n\t\t\taddDaysForRecurringEvent(eventsForDays, event, getMonthRange(getDateInZone(\"2019-07-01\"), zone), zone)\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-07-31\").getTime())).deepEquals([\n\t\t\t\tcloneEventWithNewTime(event, getDateInZone(\"2019-07-31T10:00\"), getDateInZone(\"2019-07-31T12:00\")),\n\t\t\t])(\"event instance in july is added\")\n\t\t\to(countDaysWithEvents(eventsForDays)).equals(1)\n\n\t\t\t// add for august\n\t\t\taddDaysForRecurringEvent(eventsForDays, event, getMonthRange(getDateInZone(\"2019-08-01\"), zone), zone)\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-07-31\").getTime())).deepEquals([\n\t\t\t\tcloneEventWithNewTime(event, getDateInZone(\"2019-07-31T10:00\"), getDateInZone(\"2019-07-31T12:00\")),\n\t\t\t])(\"event instance in july is still there\")\n\t\t\to(countDaysWithEvents(eventsForDays)).equals(1)(\"nothing added for august\")\n\n\t\t\t// add for september\n\t\t\taddDaysForRecurringEvent(eventsForDays, event, getMonthRange(getDateInZone(\"2019-09-01\"), zone), zone)\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-07-31\").getTime())).deepEquals([\n\t\t\t\tcloneEventWithNewTime(event, getDateInZone(\"2019-07-31T10:00\"), getDateInZone(\"2019-07-31T12:00\")),\n\t\t\t])(\"event instance in july is still still there\")\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-09-30\").getTime())).deepEquals([\n\t\t\t\tcloneEventWithNewTime(event, getDateInZone(\"2019-09-30T10:00\"), getDateInZone(\"2019-09-30T12:00\")),\n\t\t\t])(\"event instance in september was added \")\n\t\t\to(countDaysWithEvents(eventsForDays)).equals(2)(\"only september was added\")\n\n\t\t\t// add for november\n\t\t\taddDaysForRecurringEvent(eventsForDays, event, getMonthRange(getDateInZone(\"2019-11-01\"), zone), zone)\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-07-31\").getTime())).deepEquals([\n\t\t\t\tcloneEventWithNewTime(event, getDateInZone(\"2019-07-31T10:00\"), getDateInZone(\"2019-07-31T12:00\")),\n\t\t\t])(\"event instance in july is still still still there\")\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-11-30\").getTime())).deepEquals([\n\t\t\t\tcloneEventWithNewTime(event, getDateInZone(\"2019-11-30T10:00\"), getDateInZone(\"2019-11-30T12:00\")),\n\t\t\t])(\"event instance in november was added\")\n\t\t\to(countDaysWithEvents(eventsForDays)).deepEquals(3)\n\t\t})\n\t\to(\"recurring event - short multiple days \", function () {\n\t\t\tconst event = createEvent(getDateInZone(\"2019-05-03T10:00\"), getDateInZone(\"2019-05-05T12:00\"))\n\t\t\tevent.repeatRule = createRepeatRuleWithValues(RepeatPeriod.WEEKLY, 1, zone)\n\t\t\taddDaysForRecurringEvent(eventsForDays, event, getMonthRange(getDateInZone(\"2019-06-01\"), zone), zone)\n\t\t\t/**\n\t\t\t *       May 2019\n\t\t\t * So Mo Di Mi Do Fr Sa\n\t\t\t *           1  2  3  4\n\t\t\t *  5  6  7  8  9 10 11\n\t\t\t * 12 13 14 15 16 17 18\n\t\t\t * 19 20 21 22 23 24 25\n\t\t\t * 26 27 28 29 30 31\n\t\t\t *\n\t\t\t *     June 2019\n\t\t\t * So Mo Di Mi Do Fr Sa\n\t\t\t *                    1\n\t\t\t *  2  3  4  5  6  7  8\n\t\t\t *  9 10 11 12 13 14 15\n\t\t\t * 16 17 18 19 20 21 22\n\t\t\t * 23 24 25 26 27 28 29\n\t\t\t * 30\n\t\t\t *\n\t\t\t *      July 2019\n\t\t\t * So Mo Di Mi Do Fr Sa\n\t\t\t *     1  2  3  4  5  6\n\t\t\t *  7  8  9 10 11 12 13\n\t\t\t * 14 15 16 17 18 19 20\n\t\t\t * 21 22 23 24 25 26 27\n\t\t\t * 28 29 30 31\n\t\t\t */\n\t\t\t// the last occurrence in May leaks into June\n\t\t\tconst zerothjuneOccurrence = cloneEventWithNewTime(event, getDateInZone(\"2019-05-31T10:00\"), getDateInZone(\"2019-06-02T12:00\"))\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-06-01\").getTime())).deepEquals([zerothjuneOccurrence])\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-06-02\").getTime())).deepEquals([zerothjuneOccurrence])\n\t\t\tconst firstJuneOccurrence = cloneEventWithNewTime(event, getDateInZone(\"2019-06-07T10:00\"), getDateInZone(\"2019-06-09T12:00\"))\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-06-07\").getTime())).deepEquals([firstJuneOccurrence])\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-06-08\").getTime())).deepEquals([firstJuneOccurrence])\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-06-09\").getTime())).deepEquals([firstJuneOccurrence])\n\t\t\tconst secondJuneOccurrence = cloneEventWithNewTime(event, getDateInZone(\"2019-06-14T10:00\"), getDateInZone(\"2019-06-16T12:00\"))\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-06-14\").getTime())).deepEquals([secondJuneOccurrence])\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-06-15\").getTime())).deepEquals([secondJuneOccurrence])\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-06-16\").getTime())).deepEquals([secondJuneOccurrence])\n\t\t\tconst thirdJuneOccurrence = cloneEventWithNewTime(event, getDateInZone(\"2019-06-21T10:00\"), getDateInZone(\"2019-06-23T12:00\"))\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-06-21\").getTime())).deepEquals([thirdJuneOccurrence])\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-06-22\").getTime())).deepEquals([thirdJuneOccurrence])\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-06-23\").getTime())).deepEquals([thirdJuneOccurrence])\n\t\t\tconst fourthJuneOccurrence = cloneEventWithNewTime(event, getDateInZone(\"2019-06-28T10:00\"), getDateInZone(\"2019-06-30T12:00\"))\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-06-28\").getTime())).deepEquals([fourthJuneOccurrence])\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-06-29\").getTime())).deepEquals([fourthJuneOccurrence])\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-06-30\").getTime())).deepEquals([fourthJuneOccurrence])\n\t\t\to(countDaysWithEvents(eventsForDays)).equals(14)\n\n\t\t\tconst firstMayOccurrence = event\n\t\t\taddDaysForRecurringEvent(eventsForDays, event, getMonthRange(getDateInZone(\"2019-05-01\"), zone), zone)\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-05-03\").getTime())).deepEquals([firstMayOccurrence])\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-05-04\").getTime())).deepEquals([firstMayOccurrence])\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-05-05\").getTime())).deepEquals([firstMayOccurrence])\n\t\t\tconst secondMayOccurrence = cloneEventWithNewTime(event, getDateInZone(\"2019-05-10T10:00\"), getDateInZone(\"2019-05-12T12:00\"))\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-05-10\").getTime())).deepEquals([secondMayOccurrence])\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-05-11\").getTime())).deepEquals([secondMayOccurrence])\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-05-12\").getTime())).deepEquals([secondMayOccurrence])\n\t\t\tconst thirdMayOccurrence = cloneEventWithNewTime(event, getDateInZone(\"2019-05-17T10:00\"), getDateInZone(\"2019-05-19T12:00\"))\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-05-17\").getTime())).deepEquals([thirdMayOccurrence])\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-05-18\").getTime())).deepEquals([thirdMayOccurrence])\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-05-19\").getTime())).deepEquals([thirdMayOccurrence])\n\t\t\tconst fourthMayOccurrence = cloneEventWithNewTime(event, getDateInZone(\"2019-05-24T10:00\"), getDateInZone(\"2019-05-26T12:00\"))\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-05-24\").getTime())).deepEquals([fourthMayOccurrence])\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-05-25\").getTime())).deepEquals([fourthMayOccurrence])\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-05-26\").getTime())).deepEquals([fourthMayOccurrence])\n\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-05-31\").getTime())).deepEquals([zerothjuneOccurrence])\n\t\t\to(countDaysWithEvents(eventsForDays)).equals(14 + 13)\n\t\t})\n\t\to(\"weekly all-day with DST in another time zone\", function () {\n\t\t\t// This test checks that when there is a daylight saving change in UTC-m time zone all-day events in UTC+n still work like they\n\t\t\t// should\n\t\t\tconst krsk = \"Asia/Krasnoyarsk\"\n\t\t\t// all-day event with a length of 1 day\n\t\t\tconst event = createEvent(getDateInUTC(\"2020-02-12\"), getDateInUTC(\"2020-02-13\"))\n\t\t\tevent.repeatRule = createRepeatRuleWithValues(RepeatPeriod.WEEKLY, 1, zone)\n\t\t\tevent.repeatRule.timeZone = \"America/Los_angeles\"\n\t\t\tconst month = getMonthRange(getDateInZone(\"2020-03-01\", krsk), krsk)\n\t\t\taddDaysForRecurringEvent(eventsForDays, event, month, krsk)\n\t\t\to(eventsForDays.get(getDateInZone(\"2020-03-04\", krsk).getTime())).deepEquals([\n\t\t\t\tcloneEventWithNewTime(event, getDateInUTC(\"2020-03-04\"), getDateInUTC(\"2020-03-05\")),\n\t\t\t])\n\t\t\to(eventsForDays.get(getDateInZone(\"2020-03-11\", krsk).getTime())).deepEquals([\n\t\t\t\tcloneEventWithNewTime(event, getDateInUTC(\"2020-03-11\"), getDateInUTC(\"2020-03-12\")),\n\t\t\t])\n\t\t\to(eventsForDays.get(getDateInZone(\"2020-03-18\", krsk).getTime())).deepEquals([\n\t\t\t\tcloneEventWithNewTime(event, getDateInUTC(\"2020-03-18\"), getDateInUTC(\"2020-03-19\")),\n\t\t\t])\n\t\t\to(eventsForDays.get(getDateInZone(\"2020-03-25\", krsk).getTime())).deepEquals([\n\t\t\t\tcloneEventWithNewTime(event, getDateInUTC(\"2020-03-25\"), getDateInUTC(\"2020-03-26\")),\n\t\t\t])\n\t\t\to(countDaysWithEvents(eventsForDays)).equals(4)\n\t\t})\n\t\to(\"end count\", function () {\n\t\t\tconst event = createEvent(getDateInZone(\"2019-06-02T10:00\"), getDateInZone(\"2019-06-02T12:00\"))\n\t\t\tconst repeatRule = createRepeatRuleWithValues(RepeatPeriod.WEEKLY, 1, zone)\n\t\t\trepeatRule.endType = EndType.Count\n\t\t\trepeatRule.endValue = \"2\"\n\t\t\tevent.repeatRule = repeatRule\n\t\t\taddDaysForRecurringEvent(eventsForDays, event, getMonthRange(getDateInZone(\"2019-06-01\"), zone), zone)\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-06-02\").getTime())).deepEquals([\n\t\t\t\tcloneEventWithNewTime(event, getDateInZone(\"2019-06-02T10:00\"), getDateInZone(\"2019-06-02T12:00\")),\n\t\t\t])\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-06-09\").getTime())).deepEquals([\n\t\t\t\tcloneEventWithNewTime(event, getDateInZone(\"2019-06-09T10:00\"), getDateInZone(\"2019-06-09T12:00\")),\n\t\t\t])\n\t\t\to(countDaysWithEvents(eventsForDays)).equals(2)\n\t\t\taddDaysForRecurringEvent(eventsForDays, event, getMonthRange(getDateInZone(\"2019-07-01\"), zone), zone)\n\t\t\to(countDaysWithEvents(eventsForDays)).equals(2)\n\t\t})\n\t\to(\"end on date\", function () {\n\t\t\tconst event = createEvent(getDateInZone(\"2019-06-02T10:00\"), getDateInZone(\"2019-06-02T12:00\"))\n\t\t\tconst repeatRule = createRepeatRuleWithValues(RepeatPeriod.WEEKLY, 1, zone)\n\t\t\trepeatRule.endType = EndType.UntilDate\n\t\t\trepeatRule.endValue = String(getDateInZone(\"2019-06-29\").getTime())\n\t\t\tevent.repeatRule = repeatRule\n\t\t\taddDaysForRecurringEvent(eventsForDays, event, getMonthRange(getDateInZone(\"2019-06-01\"), zone), zone)\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-06-02\").getTime())).deepEquals([\n\t\t\t\tcloneEventWithNewTime(event, getDateInZone(\"2019-06-02T10:00\"), getDateInZone(\"2019-06-02T12:00\")),\n\t\t\t])\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-06-09\").getTime())).deepEquals([\n\t\t\t\tcloneEventWithNewTime(event, getDateInZone(\"2019-06-09T10:00\"), getDateInZone(\"2019-06-09T12:00\")),\n\t\t\t])\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-06-16\").getTime())).deepEquals([\n\t\t\t\tcloneEventWithNewTime(event, getDateInZone(\"2019-06-16T10:00\"), getDateInZone(\"2019-06-16T12:00\")),\n\t\t\t])\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-06-23\").getTime())).deepEquals([\n\t\t\t\tcloneEventWithNewTime(event, getDateInZone(\"2019-06-23T10:00\"), getDateInZone(\"2019-06-23T12:00\")),\n\t\t\t])\n\t\t\to(countDaysWithEvents(eventsForDays)).equals(4)\n\t\t\taddDaysForRecurringEvent(eventsForDays, event, getMonthRange(getDateInZone(\"2019-07-01\"), zone), zone)\n\t\t\to(countDaysWithEvents(eventsForDays)).equals(4)\n\t\t})\n\t\to(\"end on date - all day\", function () {\n\t\t\t// all-day event of length 1 day\n\t\t\tconst event = createEvent(getDateInUTC(\"2019-06-02\"), getDateInUTC(\"2019-06-03\"))\n\t\t\tconst repeatRule = createRepeatRuleWithValues(RepeatPeriod.DAILY, 1)\n\t\t\trepeatRule.endType = EndType.UntilDate\n\t\t\trepeatRule.endValue = String(getDateInUTC(\"2019-06-04\").getTime())\n\t\t\tevent.repeatRule = repeatRule\n\t\t\tevent.repeatRule.timeZone = \"Asia/Anadyr\" // +12\n\n\t\t\taddDaysForRecurringEvent(eventsForDays, event, getMonthRange(getDateInZone(\"2019-06-01\"), zone), zone)\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-06-02\").getTime())).deepEquals([\n\t\t\t\tcloneEventWithNewTime(event, getDateInUTC(\"2019-06-02\"), getDateInUTC(\"2019-06-03\")),\n\t\t\t])\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-06-03\").getTime())).deepEquals([\n\t\t\t\t// there are two in here?\n\t\t\t\tcloneEventWithNewTime(event, getDateInUTC(\"2019-06-03\"), getDateInUTC(\"2019-06-04\")),\n\t\t\t])\n\t\t\to(countDaysWithEvents(eventsForDays)).equals(2)\n\t\t})\n\t\to(\"add same recurring event\", function () {\n\t\t\tconst event = createEvent(getDateInZone(\"2019-05-02T10:00\"), getDateInZone(\"2019-05-02T12:00\"))\n\t\t\tevent.repeatRule = createRepeatRuleWithValues(RepeatPeriod.WEEKLY, 1, zone)\n\t\t\tconst monthDate = getDateInZone(\"2019-06-01\")\n\t\t\taddDaysForRecurringEvent(eventsForDays, event, getMonthRange(monthDate, zone), zone)\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-06-06\").getTime())).deepEquals([\n\t\t\t\tcloneEventWithNewTime(event, getDateInZone(\"2019-06-06T10:00\"), getDateInZone(\"2019-06-06T12:00\")),\n\t\t\t])\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-06-13\").getTime())).deepEquals([\n\t\t\t\tcloneEventWithNewTime(event, getDateInZone(\"2019-06-13T10:00\"), getDateInZone(\"2019-06-13T12:00\")),\n\t\t\t])\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-06-20\").getTime())).deepEquals([\n\t\t\t\tcloneEventWithNewTime(event, getDateInZone(\"2019-06-20T10:00\"), getDateInZone(\"2019-06-20T12:00\")),\n\t\t\t])\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-06-27\").getTime())).deepEquals([\n\t\t\t\tcloneEventWithNewTime(event, getDateInZone(\"2019-06-27T10:00\"), getDateInZone(\"2019-06-27T12:00\")),\n\t\t\t])\n\t\t\to(countDaysWithEvents(eventsForDays)).equals(4)\n\t\t\taddDaysForRecurringEvent(eventsForDays, event, getMonthRange(getDateInZone(\"2019-05-01\"), zone), zone)\n\t\t\tconst eventClone = clone(event)\n\t\t\taddDaysForRecurringEvent(eventsForDays, eventClone, getMonthRange(getDateInZone(\"2019-05-01\"), zone), zone)\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-05-02\").getTime())).deepEquals([event])\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-05-09\").getTime())).deepEquals([\n\t\t\t\tcloneEventWithNewTime(event, getDateInZone(\"2019-05-09T10:00\"), getDateInZone(\"2019-05-09T12:00\")),\n\t\t\t])\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-05-16\").getTime())).deepEquals([\n\t\t\t\tcloneEventWithNewTime(event, getDateInZone(\"2019-05-16T10:00\"), getDateInZone(\"2019-05-16T12:00\")),\n\t\t\t])\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-05-23\").getTime())).deepEquals([\n\t\t\t\tcloneEventWithNewTime(event, getDateInZone(\"2019-05-23T10:00\"), getDateInZone(\"2019-05-23T12:00\")),\n\t\t\t])\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-05-30\").getTime())).deepEquals([\n\t\t\t\tcloneEventWithNewTime(event, getDateInZone(\"2019-05-30T10:00\"), getDateInZone(\"2019-05-30T12:00\")),\n\t\t\t])\n\t\t\to(countDaysWithEvents(eventsForDays)).equals(9)\n\t\t})\n\t\to(\"monthly with shorter month\", function () {\n\t\t\t// Potential problem with this case is that if the end date is calculated incorrectly, event might be shortened by a few\n\t\t\t// days (see #1786).\n\t\t\t// all-day, 3 days (march 29th, 30th, 31st)\n\t\t\tconst event = createEvent(getDateInUTC(\"2020-03-29\"), getDateInUTC(\"2020-04-01\"))\n\t\t\tconst repeatRule = createRepeatRuleWithValues(RepeatPeriod.MONTHLY, 1, zone)\n\t\t\trepeatRule.endValue = \"2\"\n\t\t\trepeatRule.endType = EndType.Count\n\t\t\tevent.repeatRule = repeatRule\n\t\t\t// 2nd occurrence happens on april 29th, 30th, may 1st\n\t\t\tconst occurrence = cloneEventWithNewTime(event, getDateInUTC(\"2020-04-29\"), getDateInUTC(\"2020-05-02\"))\n\n\t\t\taddDaysForRecurringEvent(eventsForDays, event, getMonthRange(getDateInZone(\"2020-03-01\"), zone), zone)\n\t\t\to(eventsForDays.get(getDateInZone(\"2020-03-29\").getTime())).deepEquals([event])\n\t\t\to(eventsForDays.get(getDateInZone(\"2020-03-30\").getTime())).deepEquals([event])\n\t\t\to(eventsForDays.get(getDateInZone(\"2020-03-31\").getTime())).deepEquals([event])\n\t\t\to(eventsForDays.get(getDateInZone(\"2020-04-01\").getTime())).deepEquals(undefined)\n\t\t\to(countDaysWithEvents(eventsForDays)).equals(3)\n\n\t\t\taddDaysForRecurringEvent(eventsForDays, event, getMonthRange(getDateInZone(\"2020-04-01\"), zone), zone)\n\t\t\to(eventsForDays.get(getDateInZone(\"2020-04-29\").getTime())).deepEquals([occurrence])(\"29th is 1st day of the occurrence\")\n\t\t\to(eventsForDays.get(getDateInZone(\"2020-04-30\").getTime())).deepEquals([occurrence])(\"30. is 2. day of 2nd occurrence\")\n\t\t\to(eventsForDays.get(getDateInZone(\"2020-05-01\").getTime())).deepEquals(undefined)(\"outside range\")\n\t\t\to(countDaysWithEvents(eventsForDays)).equals(5)\n\t\t})\n\t\to(\"monthly with longer month\", function () {\n\t\t\t// Potential problem with this case is that if the end date is calculated incorrectly, event might be stretched by a few\n\t\t\t// days (see #1786).\n\t\t\t// all-day on the feb 29th, march 1st\n\t\t\tconst event = createEvent(getDateInZone(\"2020-02-29\", \"utc\"), getDateInZone(\"2020-03-01\", \"utc\"))\n\t\t\tconst repeatRule = createRepeatRuleWithValues(RepeatPeriod.MONTHLY, 1, zone)\n\t\t\trepeatRule.endValue = \"2\"\n\t\t\trepeatRule.endType = EndType.Count\n\t\t\tevent.repeatRule = repeatRule\n\t\t\taddDaysForRecurringEvent(eventsForDays, event, getMonthRange(getDateInZone(\"2020-02-01\"), zone), zone)\n\t\t\to(eventsForDays.get(getDateInZone(\"2020-02-29\").getTime())).deepEquals([event])(\"the 29th of feb is in the map\")\n\t\t\to(countDaysWithEvents(eventsForDays)).equals(1)(\"only the last day of february is in the map\")\n\t\t\taddDaysForRecurringEvent(eventsForDays, event, getMonthRange(getDateInZone(\"2020-03-01\"), zone), zone)\n\t\t\tconst occurrence = cloneEventWithNewTime(event, getDateInZone(\"2020-03-29\", \"utc\"), getDateInZone(\"2020-03-30\", \"utc\"))\n\t\t\to(eventsForDays.get(getDateInZone(\"2020-03-29\").getTime())).deepEquals([occurrence])(\"the 29th of march is in the map\")\n\t\t})\n\t\to(\"adding a progenitor while there are altered instances does not remove the altered instance\", function () {\n\t\t\tconst event = createEvent(getDateInZone(\"2023-07-13T13:00\"), getDateInZone(\"2023-07-13T13:30\"))\n\t\t\tevent.summary = \"summary\"\n\t\t\tconst repeatRule = createRepeatRuleWithValues(RepeatPeriod.DAILY, 1, zone)\n\t\t\trepeatRule.endValue = \"2\"\n\t\t\trepeatRule.endType = EndType.Count\n\t\t\trepeatRule.excludedDates = [createTestEntity(DateWrapperTypeRef, { date: event.startTime })]\n\t\t\tevent.repeatRule = repeatRule\n\t\t\tconst alteredEvent = clone(event)\n\t\t\talteredEvent._id = [\"shortEvents\", generateEventElementId(alteredEvent.startTime.getTime())]\n\t\t\talteredEvent.repeatRule = null\n\t\t\talteredEvent.recurrenceId = alteredEvent.startTime\n\t\t\talteredEvent.summary = \"another summary\"\n\n\t\t\taddDaysForEventInstance(eventsForDays, alteredEvent, getMonthRange(getDateInZone(\"2023-07-01\"), zone), zone)\n\t\t\taddDaysForRecurringEvent(eventsForDays, event, getMonthRange(getDateInZone(\"2023-07-01\"), zone), zone)\n\t\t\to(eventsForDays.get(getDateInZone(\"2023-07-13\").getTime())).deepEquals([alteredEvent])(\n\t\t\t\t\"altered instance is on the day it occurs, but event is excluded\",\n\t\t\t)\n\t\t\tconst eventsOn14th = eventsForDays.get(getDateInZone(\"2023-07-14\").getTime()) ?? []\n\t\t\to(eventsOn14th.length).equals(1)(\"one event on 14th\")\n\t\t\to(eventsOn14th[0].summary).equals(\"summary\")(\"occurrence of original series on 14th\")\n\t\t})\n\t})\n\to.spec(\"addDaysForEvent for long events\", function () {\n\t\tlet eventsForDays: Map<number, Array<CalendarEvent>>\n\t\to.beforeEach(function () {\n\t\t\teventsForDays = new Map()\n\t\t})\n\t\to(\"longer than a month\", function () {\n\t\t\tconst event = createEvent(getDateInZone(\"2019-05-02T10:00\"), getDateInZone(\"2019-06-02T12:00\"))\n\t\t\taddDaysForEventInstance(eventsForDays, event, getMonthRange(getDateInZone(\"2019-06-01\"), zone), zone)\n\t\t\to(eventsForDays.size).equals(3)\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-06-01\").getTime())).deepEquals([event])\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-06-02\").getTime())).deepEquals([event])\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-06-03\").getTime())).deepEquals([])\n\t\t\taddDaysForEventInstance(eventsForDays, event, getMonthRange(getDateInZone(\"2019-05-01\"), zone), zone)\n\t\t\to(eventsForDays.size).equals(2 + 31)\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-05-01\").getTime())).equals(undefined)\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-05-02\").getTime())).deepEquals([event])\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-05-31\").getTime())).deepEquals([event])\n\t\t})\n\t\to(\"longer than a month all day\", function () {\n\t\t\t// all-day event that has a last day on 2019-06-03\n\t\t\tconst event = createEvent(getDateInUTC(\"2019-05-02\"), getDateInUTC(\"2019-06-04\"))\n\t\t\t// add for june\n\t\t\taddDaysForEventInstance(eventsForDays, event, getMonthRange(getDateInZone(\"2019-06-01\"), zone), \"Europe/Berlin\")\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-06-01\").getTime())).deepEquals([event])(\"there on the first\")\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-06-02\").getTime())).deepEquals([event])(\"there on the 2nd\")\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-06-03\").getTime())).deepEquals([event])(\"also there on the 3rd\")\n\t\t\to(countDaysWithEvents(eventsForDays)).equals(3)(\"no more days added\")\n\n\t\t\t// also add for may\n\t\t\taddDaysForEventInstance(eventsForDays, event, getMonthRange(getDateInZone(\"2019-05-01\"), zone), \"Europe/Berlin\")\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-05-02\").getTime())).deepEquals([event])\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-05-03\").getTime())).deepEquals([event])\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-05-31\").getTime())).deepEquals([event])\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-06-01\").getTime())).deepEquals([event])\n\t\t\t// previous entries + each day of may minus one (31 - 1)\n\t\t\to(countDaysWithEvents(eventsForDays)).equals(3 + 30)\n\t\t})\n\t\to(\"multiple months\", function () {\n\t\t\t// event goes from april to june\n\t\t\tconst event = createEvent(getDateInZone(\"2019-04-02T10:00\"), getDateInZone(\"2019-06-02T12:00\"))\n\t\t\t// first, only add for june\n\t\t\taddDaysForEventInstance(eventsForDays, event, getMonthRange(getDateInZone(\"2019-06-01\"), zone), zone)\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-06-01\").getTime())).deepEquals([event])(\"there on the 1st\")\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-06-02\").getTime())).deepEquals([event])(\"there on the 2nd\")\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-06-03\").getTime())).deepEquals([])(\"not there on the 3rd\")\n\t\t\to(eventsForDays.size).equals(3)(\"no more days added for this call\")\n\n\t\t\t// now also add for may\n\t\t\taddDaysForEventInstance(eventsForDays, event, getMonthRange(getDateInZone(\"2019-05-01\"), zone), zone)\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-05-01\").getTime())).deepEquals([event])(\"there on the 1st\")\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-05-02\").getTime())).deepEquals([event])(\"there on the 2nd\")\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-05-31\").getTime())).deepEquals([event])(\"there on the 31st\")\n\t\t\to(eventsForDays.size).equals(3 + 31)(\"added for each day of may but no more\")\n\n\t\t\t// also add for april\n\t\t\taddDaysForEventInstance(eventsForDays, event, getMonthRange(getDateInZone(\"2019-04-01\"), zone), zone)\n\t\t\to(eventsForDays.size).equals(3 + 31 + 29)(\"now it's there for june, may, april\")\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-04-01\").getTime())).deepEquals(undefined)(\"1st of april is not touched\")\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-04-02\").getTime())).deepEquals([event])(\"2nd it's there\")\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-04-03\").getTime())).deepEquals([event])(\"3rd it's there\")\n\t\t})\n\n\t\to(\"longer than a month repeating\", function () {\n\t\t\tconst event = createEvent(new Date(\"2019-05-02T08:00:00.000Z\"), new Date(\"2019-06-02T10:00:00.000Z\"))\n\t\t\tevent.repeatRule = createRepeatRuleWithValues(RepeatPeriod.MONTHLY, 1, zone)\n\t\t\tconst startingInMay = cloneEventWithNewTime(event, getDateInZone(\"2019-05-02T10:00\"), getDateInZone(\"2019-06-02T12:00\"))\n\t\t\tconst startingInJune = cloneEventWithNewTime(event, getDateInZone(\"2019-06-02T10:00\"), getDateInZone(\"2019-07-03T12:00\"))\n\t\t\tconst startingInJuly = cloneEventWithNewTime(event, getDateInZone(\"2019-07-02T10:00\"), getDateInZone(\"2019-08-02T12:00\"))\n\n\t\t\t// invoke for june only\n\t\t\taddDaysForRecurringEvent(eventsForDays, event, getMonthRange(getDateInZone(\"2019-06-01\"), zone), zone)\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-05-31\").getTime())).deepEquals(undefined)(\"nothing added for the 31st of may\")\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-06-01\").getTime())).deepEquals([startingInMay])(\"but may instance is still going on at start of june\")\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-06-02\").getTime())).deepEquals([startingInMay, startingInJune])\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-06-30\").getTime())).deepEquals([startingInJune])\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-07-01\").getTime())).deepEquals(undefined)(\"we're not caring about july\")\n\t\t\to(eventsForDays.size).equals(30)\n\n\t\t\t// now also invoke for july\n\t\t\taddDaysForRecurringEvent(eventsForDays, event, getMonthRange(getDateInZone(\"2019-07-01\"), zone), zone)\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-07-01\").getTime())).deepEquals([startingInJune])(\"june instance still going on\")\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-07-03\").getTime())).deepEquals([startingInJune, startingInJuly])(\"july instance added as well\")\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-07-04\").getTime())).deepEquals([startingInJuly])(\"june instance now ended.\")\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-07-30\").getTime())).deepEquals([startingInJuly])(\"only starting in july at end of july\")\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-08-01\").getTime())).deepEquals(undefined)(\"nothing in august\")\n\t\t\to(eventsForDays.size).equals(31 + 30) // previous plus all of july\n\t\t})\n\t\to(\"add same event does not increase number of days with events\", function () {\n\t\t\tconst event = createEvent(getDateInZone(\"2019-05-02T10:00\"), getDateInZone(\"2019-06-02T12:00\"))\n\t\t\taddDaysForEventInstance(eventsForDays, event, getMonthRange(getDateInZone(\"2019-06-01\"), zone), zone)\n\t\t\taddDaysForEventInstance(eventsForDays, clone(event), getMonthRange(getDateInZone(\"2019-06-01\"), zone), zone)\n\t\t\to(countDaysWithEvents(eventsForDays)).equals(2)(\"days with events after adding june twice\")\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-06-01\").getTime())).deepEquals([event])\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-06-02\").getTime())).deepEquals([event])\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-06-03\").getTime())).deepEquals([]) // there's one empty day\n\t\t\taddDaysForEventInstance(eventsForDays, event, getMonthRange(getDateInZone(\"2019-05-01\"), zone), zone)\n\t\t\taddDaysForEventInstance(eventsForDays, clone(event), getMonthRange(getDateInZone(\"2019-05-01\"), zone), zone)\n\t\t\t// 2 in june plus everything in may except for the first (event starts on the 2nd)\n\t\t\to(countDaysWithEvents(eventsForDays)).equals(32)(\"days with events after adding may twice\")\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-05-01\").getTime()) == null).equals(true)\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-05-02\").getTime())).deepEquals([event])\n\t\t\to(eventsForDays.get(getDateInZone(\"2019-05-31\").getTime())).deepEquals([event])\n\t\t})\n\t})\n\to.spec(\"calendarEventHasMoreThanOneOccurrencesLeft\", function () {\n\t\to(\"event without end condition has more than one occurrence\", function () {\n\t\t\tconst repeatRule = createTestEntity(CalendarRepeatRuleTypeRef, {\n\t\t\t\tendType: EndType.Never,\n\t\t\t\tfrequency: RepeatPeriod.DAILY,\n\t\t\t\tinterval: \"1\",\n\t\t\t})\n\t\t\tconst progenitor = createTestEntity(CalendarEventTypeRef, { startTime: new Date(), endTime: new Date(), repeatRule }) as CalendarEventProgenitor\n\t\t\to(calendarEventHasMoreThanOneOccurrencesLeft({ progenitor, ownerGroup: \"\", alteredInstances: [] })).equals(true)\n\t\t})\n\n\t\to(\"event without repeat rule has less than two occurrences\", function () {\n\t\t\tconst progenitor = createTestEntity(CalendarEventTypeRef, {\n\t\t\t\tstartTime: new Date(),\n\t\t\t\tendTime: new Date(),\n\t\t\t\trepeatRule: null,\n\t\t\t}) as CalendarEventProgenitor\n\t\t\to(calendarEventHasMoreThanOneOccurrencesLeft({ progenitor, ownerGroup: \"\", alteredInstances: [] })).equals(false)\n\t\t})\n\n\t\to(\"event with higher count than exclusions+1 has more left\", function () {\n\t\t\tconst repeatRule = createTestEntity(CalendarRepeatRuleTypeRef, {\n\t\t\t\tendType: EndType.Count,\n\t\t\t\tfrequency: RepeatPeriod.DAILY,\n\t\t\t\tinterval: \"1\",\n\t\t\t\tendValue: \"3\",\n\t\t\t\texcludedDates: [createTestEntity(DateWrapperTypeRef, { date: new Date(\"2023-03-03T22:00:00Z\") })],\n\t\t\t\ttimeZone: zone,\n\t\t\t})\n\t\t\tconst progenitor = createTestEntity(CalendarEventTypeRef, {\n\t\t\t\tstartTime: new Date(\"2023-03-02T22:00:00Z\"),\n\t\t\t\tendTime: new Date(\"2023-03-02T23:00:00Z\"),\n\t\t\t\trepeatRule,\n\t\t\t}) as CalendarEventProgenitor\n\t\t\to(calendarEventHasMoreThanOneOccurrencesLeft({ progenitor, ownerGroup: \"\", alteredInstances: [] })).equals(true)\n\t\t})\n\n\t\to(\"event with count and enough exclusions has less than two left\", function () {\n\t\t\tconst repeatRule = createTestEntity(CalendarRepeatRuleTypeRef, {\n\t\t\t\tendType: EndType.Count,\n\t\t\t\tfrequency: RepeatPeriod.DAILY,\n\t\t\t\tinterval: \"1\",\n\t\t\t\tendValue: \"3\",\n\t\t\t\texcludedDates: [\n\t\t\t\t\tcreateTestEntity(DateWrapperTypeRef, { date: new Date(\"2023-03-03T22:00:00Z\") }),\n\t\t\t\t\tcreateTestEntity(DateWrapperTypeRef, { date: new Date(\"2023-03-04T22:00:00Z\") }),\n\t\t\t\t],\n\t\t\t\ttimeZone: zone,\n\t\t\t})\n\t\t\tconst progenitor = createTestEntity(CalendarEventTypeRef, {\n\t\t\t\tstartTime: new Date(\"2023-03-02T22:00:00Z\"),\n\t\t\t\tendTime: new Date(\"2023-03-02T23:00:00Z\"),\n\t\t\t\trepeatRule,\n\t\t\t}) as CalendarEventProgenitor\n\t\t\to(calendarEventHasMoreThanOneOccurrencesLeft({ progenitor, ownerGroup: \"\", alteredInstances: [] })).equals(false)\n\t\t})\n\n\t\to(\"event with count and enough exclusions has less than two left, first is excluded\", function () {\n\t\t\tconst repeatRule = createTestEntity(CalendarRepeatRuleTypeRef, {\n\t\t\t\tendType: EndType.Count,\n\t\t\t\tfrequency: RepeatPeriod.DAILY,\n\t\t\t\tinterval: \"1\",\n\t\t\t\tendValue: \"3\",\n\t\t\t\texcludedDates: [\n\t\t\t\t\tcreateTestEntity(DateWrapperTypeRef, { date: new Date(\"2023-03-02T22:00:00Z\") }),\n\t\t\t\t\tcreateTestEntity(DateWrapperTypeRef, { date: new Date(\"2023-03-04T22:00:00Z\") }),\n\t\t\t\t],\n\t\t\t\ttimeZone: zone,\n\t\t\t})\n\t\t\tconst progenitor = createTestEntity(CalendarEventTypeRef, {\n\t\t\t\tstartTime: new Date(\"2023-03-02T22:00:00Z\"),\n\t\t\t\tendTime: new Date(\"2023-03-02T23:00:00Z\"),\n\t\t\t\trepeatRule,\n\t\t\t}) as CalendarEventProgenitor\n\t\t\to(calendarEventHasMoreThanOneOccurrencesLeft({ progenitor, ownerGroup: \"\", alteredInstances: [] })).equals(false)\n\t\t})\n\n\t\to(\"event with end date and enough exclusions has less than two left, first is excluded\", function () {\n\t\t\tconst repeatRule = createCalendarRepeatRule({\n\t\t\t\tendType: EndType.UntilDate,\n\t\t\t\tfrequency: RepeatPeriod.DAILY,\n\t\t\t\tinterval: \"1\",\n\t\t\t\tendValue: String(\n\t\t\t\t\tDateTime.fromObject(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tyear: 2023,\n\t\t\t\t\t\t\tmonth: 3,\n\t\t\t\t\t\t\tday: 5,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{ zone },\n\t\t\t\t\t).toMillis(),\n\t\t\t\t),\n\t\t\t\ttimeZone: zone,\n\t\t\t\texcludedDates: [\n\t\t\t\t\tcreateTestEntity(DateWrapperTypeRef, { date: new Date(\"2023-03-02T22:00:00Z\") }),\n\t\t\t\t\tcreateTestEntity(DateWrapperTypeRef, { date: new Date(\"2023-03-04T22:00:00Z\") }),\n\t\t\t\t],\n\t\t\t\tadvancedRules: [],\n\t\t\t})\n\t\t\tconst progenitor = createTestEntity(CalendarEventTypeRef, {\n\t\t\t\tstartTime: new Date(\"2023-03-02T22:00:00Z\"),\n\t\t\t\tendTime: new Date(\"2023-03-02T23:00:00Z\"),\n\t\t\t\trepeatRule,\n\t\t\t}) as CalendarEventProgenitor\n\t\t\to(calendarEventHasMoreThanOneOccurrencesLeft({ progenitor, ownerGroup: \"\", alteredInstances: [] })).equals(false)\n\t\t})\n\n\t\to(\"event with end date and enough exclusions has more than two left, first is excluded\", function () {\n\t\t\tconst repeatRule = createCalendarRepeatRule({\n\t\t\t\tendType: EndType.UntilDate,\n\t\t\t\tfrequency: RepeatPeriod.DAILY,\n\t\t\t\tinterval: \"1\",\n\t\t\t\tendValue: String(\n\t\t\t\t\tDateTime.fromObject(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tyear: 2023,\n\t\t\t\t\t\t\tmonth: 3,\n\t\t\t\t\t\t\tday: 6,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{ zone },\n\t\t\t\t\t).toMillis(),\n\t\t\t\t),\n\t\t\t\ttimeZone: zone,\n\t\t\t\texcludedDates: [\n\t\t\t\t\tcreateTestEntity(DateWrapperTypeRef, { date: new Date(\"2023-03-02T22:00:00Z\") }),\n\t\t\t\t\tcreateTestEntity(DateWrapperTypeRef, { date: new Date(\"2023-03-04T22:00:00Z\") }),\n\t\t\t\t],\n\t\t\t\tadvancedRules: [],\n\t\t\t})\n\t\t\tconst progenitor = createTestEntity(CalendarEventTypeRef, {\n\t\t\t\tstartTime: new Date(\"2023-03-02T22:00:00Z\"),\n\t\t\t\tendTime: new Date(\"2023-03-02T23:00:00Z\"),\n\t\t\t\trepeatRule,\n\t\t\t}) as CalendarEventProgenitor\n\t\t\to(calendarEventHasMoreThanOneOccurrencesLeft({ progenitor, ownerGroup: \"\", alteredInstances: [] })).equals(true)\n\t\t})\n\n\t\to(\"event with end date and enough exclusions has more than two left, first is excluded\", function () {\n\t\t\tconst repeatRule = createCalendarRepeatRule({\n\t\t\t\tendType: EndType.UntilDate,\n\t\t\t\tfrequency: RepeatPeriod.DAILY,\n\t\t\t\tinterval: \"1\",\n\t\t\t\tendValue: String(\n\t\t\t\t\tDateTime.fromObject(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tyear: 2023,\n\t\t\t\t\t\t\tmonth: 3,\n\t\t\t\t\t\t\tday: 8,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{ zone },\n\t\t\t\t\t).toMillis(),\n\t\t\t\t),\n\t\t\t\ttimeZone: zone,\n\t\t\t\texcludedDates: [\n\t\t\t\t\tcreateTestEntity(DateWrapperTypeRef, { date: new Date(\"2023-03-02T22:00:00Z\") }),\n\t\t\t\t\t// 2023-03-03T22:00:00Z not excluded\n\t\t\t\t\tcreateTestEntity(DateWrapperTypeRef, { date: new Date(\"2023-03-04T22:00:00Z\") }),\n\t\t\t\t\tcreateTestEntity(DateWrapperTypeRef, { date: new Date(\"2023-03-05T22:00:00Z\") }),\n\t\t\t\t\t// 2023-03-06T22:00:00Z not excluded\n\t\t\t\t\t// 2023-03-07T22:00:00Z not excluded\n\t\t\t\t],\n\t\t\t\tadvancedRules: [],\n\t\t\t})\n\t\t\tconst progenitor = createTestEntity(CalendarEventTypeRef, {\n\t\t\t\tstartTime: new Date(\"2023-03-02T22:00:00Z\"),\n\t\t\t\tendTime: new Date(\"2023-03-02T23:00:00Z\"),\n\t\t\t\trepeatRule,\n\t\t\t}) as CalendarEventProgenitor\n\t\t\to(\n\t\t\t\tcalendarEventHasMoreThanOneOccurrencesLeft({\n\t\t\t\t\tprogenitor,\n\t\t\t\t\townerGroup: \"\",\n\t\t\t\t\talteredInstances: [{ recurrenceId: new Date(\"2023-03-05T22:00:00Z\") } as CalendarEventAlteredInstance],\n\t\t\t\t}),\n\t\t\t).equals(true)\n\t\t})\n\n\t\to(\"event with end date after 2 occurrences and an altered instance is considered to have more than one occurrence\", function () {\n\t\t\tconst repeatRule = createTestEntity(CalendarRepeatRuleTypeRef, {\n\t\t\t\tendType: EndType.UntilDate,\n\t\t\t\tfrequency: RepeatPeriod.DAILY,\n\t\t\t\tinterval: \"1\",\n\t\t\t\tendValue: getDateInUTC(\"2023-03-04\").getTime().toString(),\n\t\t\t\ttimeZone: zone,\n\t\t\t\texcludedDates: [\n\t\t\t\t\tcreateTestEntity(DateWrapperTypeRef, { date: getDateInZone(\"2023-03-02T22:00\") }),\n\t\t\t\t\t// 2023-03-03T22:00:00Z not excluded\n\t\t\t\t],\n\t\t\t})\n\t\t\tconst progenitor = createTestEntity(CalendarEventTypeRef, {\n\t\t\t\tstartTime: getDateInZone(\"2023-03-02T22:00\"),\n\t\t\t\tendTime: getDateInZone(\"2023-03-02T23:00\"),\n\t\t\t\trepeatRule,\n\t\t\t}) as CalendarEventProgenitor\n\t\t\to(\n\t\t\t\tcalendarEventHasMoreThanOneOccurrencesLeft({\n\t\t\t\t\tprogenitor,\n\t\t\t\t\townerGroup: \"\",\n\t\t\t\t\talteredInstances: [{ recurrenceId: getDateInZone(\"2023-03-02T22:00\") } as CalendarEventAlteredInstance],\n\t\t\t\t}),\n\t\t\t).equals(true)\n\t\t})\n\n\t\to(\"event with exclusions that are not occurrences\", function () {\n\t\t\tconst repeatRule = createTestEntity(CalendarRepeatRuleTypeRef, {\n\t\t\t\tendType: EndType.Count,\n\t\t\t\tfrequency: RepeatPeriod.DAILY,\n\t\t\t\tinterval: \"2\",\n\t\t\t\tendValue: \"2\",\n\t\t\t\ttimeZone: zone,\n\t\t\t\texcludedDates: [createTestEntity(DateWrapperTypeRef, { date: new Date(\"2023-03-03T22:00:00Z\") })],\n\t\t\t})\n\t\t\tconst progenitor = createTestEntity(CalendarEventTypeRef, {\n\t\t\t\tstartTime: new Date(\"2023-03-02T22:00:00Z\"),\n\t\t\t\tendTime: new Date(\"2023-03-02T23:00:00Z\"),\n\t\t\t\trepeatRule,\n\t\t\t}) as CalendarEventProgenitor\n\t\t\to(calendarEventHasMoreThanOneOccurrencesLeft({ progenitor, ownerGroup: \"\", alteredInstances: [] })).equals(true)\n\t\t})\n\n\t\to(\"event with one occurrence (count), no exclusions\", function () {\n\t\t\tconst repeatRule = createTestEntity(CalendarRepeatRuleTypeRef, {\n\t\t\t\tendType: EndType.Count,\n\t\t\t\tfrequency: RepeatPeriod.DAILY,\n\t\t\t\tinterval: \"1\",\n\t\t\t\tendValue: \"1\",\n\t\t\t\ttimeZone: zone,\n\t\t\t\texcludedDates: [],\n\t\t\t})\n\t\t\tconst progenitor = createTestEntity(CalendarEventTypeRef, {\n\t\t\t\tstartTime: new Date(\"2023-03-02T22:00:00Z\"),\n\t\t\t\tendTime: new Date(\"2023-03-02T23:00:00Z\"),\n\t\t\t\trepeatRule,\n\t\t\t}) as CalendarEventProgenitor\n\t\t\to(calendarEventHasMoreThanOneOccurrencesLeft({ progenitor, ownerGroup: \"\", alteredInstances: [] })).equals(false)\n\t\t})\n\n\t\to(\"event with one occurrence (untilDate), no exclusions\", function () {\n\t\t\tconst repeatRule = createCalendarRepeatRule({\n\t\t\t\tendType: EndType.UntilDate,\n\t\t\t\tfrequency: RepeatPeriod.DAILY,\n\t\t\t\tinterval: \"1\",\n\t\t\t\tendValue: String(\n\t\t\t\t\tDateTime.fromObject(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tyear: 2023,\n\t\t\t\t\t\t\tmonth: 3,\n\t\t\t\t\t\t\tday: 3,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{ zone },\n\t\t\t\t\t).toMillis(),\n\t\t\t\t),\n\t\t\t\ttimeZone: zone,\n\t\t\t\texcludedDates: [],\n\t\t\t\tadvancedRules: [],\n\t\t\t})\n\t\t\tconst progenitor = createTestEntity(CalendarEventTypeRef, {\n\t\t\t\tstartTime: new Date(\"2023-03-02T22:00:00Z\"),\n\t\t\t\tendTime: new Date(\"2023-03-02T23:00:00Z\"),\n\t\t\t\trepeatRule,\n\t\t\t}) as CalendarEventProgenitor\n\t\t\to(calendarEventHasMoreThanOneOccurrencesLeft({ progenitor, ownerGroup: \"\", alteredInstances: [] })).equals(false)\n\t\t})\n\t})\n\to.spec(\"getEventType\", function () {\n\t\tlet userController: UserController\n\t\to.beforeEach(() => {\n\t\t\tconst user = createTestEntity(UserTypeRef, { _id: \"user-id\" })\n\t\t\tconst userSettingsGroupRoot = createTestEntity(UserSettingsGroupRootTypeRef, { groupSettings: [] })\n\t\t\tuserController = makeUserController([], AccountType.PAID, undefined, false, false, user, userSettingsGroupRoot)\n\t\t})\n\t\to(\"external gets EXTERNAL\", function () {\n\t\t\tconst event = {}\n\t\t\tconst calendars: Map<string, CalendarInfo> = new Map()\n\t\t\tconst ownMailAddresses = []\n\t\t\treplace(userController.user, \"accountType\", AccountType.EXTERNAL)\n\t\t\to(getEventType(event, calendars, ownMailAddresses, userController)).equals(EventType.EXTERNAL)\n\t\t})\n\n\t\to(\"if no ownergroup but organizer, gets OWN\", function () {\n\t\t\tconst event: Partial<CalendarEvent> = { organizer: createTestEntity(EncryptedMailAddressTypeRef, { address: \"my@address.to\", name: \"my\" }) }\n\t\t\tconst calendars = new Map()\n\t\t\tconst ownMailAddresses = [\"my@address.to\"]\n\t\t\to(getEventType(event, calendars, ownMailAddresses, userController)).equals(EventType.OWN)\n\t\t})\n\n\t\to(\"if no ownergroup and not organizer, gets INVITE\", function () {\n\t\t\tconst event: Partial<CalendarEvent> = { organizer: createTestEntity(EncryptedMailAddressTypeRef, { address: \"no@address.to\", name: \"my\" }) }\n\t\t\tconst calendars = new Map()\n\t\t\tconst ownMailAddresses = [\"my@address.to\"]\n\t\t\to(getEventType(event, calendars, ownMailAddresses, userController)).equals(EventType.INVITE)\n\t\t})\n\n\t\to(\"event in not any of our calendars gets SHARED_RO\", function () {\n\t\t\tconst event: Partial<CalendarEvent> = {\n\t\t\t\torganizer: createTestEntity(EncryptedMailAddressTypeRef, { address: \"no@address.to\", name: \"my\" }),\n\t\t\t\t_ownerGroup: \"ownergroup\",\n\t\t\t}\n\t\t\tconst calendars = new Map()\n\t\t\tconst ownMailAddresses = [\"my@address.to\"]\n\t\t\to(getEventType(event, calendars, ownMailAddresses, userController)).equals(EventType.SHARED_RO)\n\t\t})\n\n\t\to(\"event in rw-shared calendar w/o attendees gets SHARED_RW\", function () {\n\t\t\tconst event: Partial<CalendarEvent> = {\n\t\t\t\torganizer: createTestEntity(EncryptedMailAddressTypeRef, { address: \"no@address.to\", name: \"my\" }),\n\t\t\t\t_ownerGroup: \"ownergroup\",\n\t\t\t}\n\t\t\tconst calendars = new Map()\n\t\t\tcalendars.set(\"ownergroup\", {\n\t\t\t\tshared: true,\n\t\t\t\tgroup: createTestEntity(GroupTypeRef, {\n\t\t\t\t\t_id: \"calendarGroup\",\n\t\t\t\t\ttype: GroupType.Calendar,\n\t\t\t\t\tuser: \"otherUser\",\n\t\t\t\t}),\n\t\t\t})\n\t\t\tconst ownMailAddresses = [\"my@address.to\"]\n\t\t\treplace(userController.user, \"_id\", [\"userList\", \"userId\"])\n\t\t\treplace(userController.user, \"memberships\", [\n\t\t\t\tcreateTestEntity(GroupMembershipTypeRef, {\n\t\t\t\t\tgroup: \"calendarGroup\",\n\t\t\t\t\tcapability: ShareCapability.Write,\n\t\t\t\t}),\n\t\t\t])\n\t\t\to(getEventType(event, calendars, ownMailAddresses, userController)).equals(EventType.SHARED_RW)\n\t\t})\n\n\t\to(\"event in rw-shared calendar w attendees gets LOCKED\", function () {\n\t\t\tconst event: Partial<CalendarEvent> = {\n\t\t\t\torganizer: createTestEntity(EncryptedMailAddressTypeRef, { address: \"no@address.to\", name: \"my\" }),\n\t\t\t\t_ownerGroup: \"ownergroup\",\n\t\t\t\tattendees: [\n\t\t\t\t\tcreateTestEntity(CalendarEventAttendeeTypeRef, {\n\t\t\t\t\t\taddress: createTestEntity(EncryptedMailAddressTypeRef, { address: \"bla\", name: \"blabla\" }),\n\t\t\t\t\t}),\n\t\t\t\t],\n\t\t\t}\n\t\t\tconst calendars = new Map()\n\t\t\tcalendars.set(\"ownergroup\", {\n\t\t\t\tshared: true,\n\t\t\t\tgroup: createTestEntity(GroupTypeRef, {\n\t\t\t\t\t_id: \"calendarGroup\",\n\t\t\t\t\ttype: GroupType.Calendar,\n\t\t\t\t\tuser: \"otherUser\",\n\t\t\t\t}),\n\t\t\t})\n\t\t\tconst ownMailAddresses = [\"my@address.to\"]\n\n\t\t\treplace(userController.user, \"_id\", [\"userList\", \"userId\"])\n\t\t\treplace(userController.user, \"memberships\", [\n\t\t\t\tcreateTestEntity(GroupMembershipTypeRef, {\n\t\t\t\t\tgroup: \"calendarGroup\",\n\t\t\t\t\tcapability: ShareCapability.Write,\n\t\t\t\t}),\n\t\t\t])\n\t\t\to(getEventType(event, calendars, ownMailAddresses, userController)).equals(EventType.LOCKED)\n\t\t})\n\n\t\to(\"event with ownergroup in own calendar where we're organizer gets OWN\", function () {\n\t\t\tconst event: Partial<CalendarEvent> = {\n\t\t\t\torganizer: createTestEntity(EncryptedMailAddressTypeRef, { address: \"my@address.to\", name: \"my\" }),\n\t\t\t\t_ownerGroup: \"ownergroup\",\n\t\t\t\tattendees: [\n\t\t\t\t\tcreateTestEntity(CalendarEventAttendeeTypeRef, {\n\t\t\t\t\t\taddress: createTestEntity(EncryptedMailAddressTypeRef, { address: \"bla\", name: \"blabla\" }),\n\t\t\t\t\t}),\n\t\t\t\t],\n\t\t\t}\n\t\t\tconst calendars = new Map()\n\t\t\tcalendars.set(\"ownergroup\", {\n\t\t\t\tshared: false,\n\t\t\t\tgroup: createTestEntity(GroupTypeRef, {\n\t\t\t\t\t_id: \"calendarGroup\",\n\t\t\t\t\ttype: GroupType.Calendar,\n\t\t\t\t\tuser: \"userId\",\n\t\t\t\t}),\n\t\t\t})\n\t\t\tconst ownMailAddresses = [\"my@address.to\"]\n\t\t\treplace(userController.user, \"_id\", [\"userList\", \"userId\"])\n\t\t\to(getEventType(event, calendars, ownMailAddresses, userController)).equals(EventType.OWN)\n\t\t})\n\t})\n\n\to(\"event with ownergroup in ro-shared calendar gets shared_ro\", function () {\n\t\tconst event: Partial<CalendarEvent> = {\n\t\t\torganizer: createTestEntity(EncryptedMailAddressTypeRef, { address: \"no@address.to\", name: \"my\" }),\n\t\t\t_ownerGroup: \"ownergroup\",\n\t\t\tattendees: [\n\t\t\t\tcreateTestEntity(CalendarEventAttendeeTypeRef, { address: createTestEntity(EncryptedMailAddressTypeRef, { address: \"bla\", name: \"blabla\" }) }),\n\t\t\t],\n\t\t}\n\t\tconst calendars = new Map()\n\t\tcalendars.set(\"ownergroup\", {\n\t\t\tshared: true,\n\t\t\tgroup: createTestEntity(GroupTypeRef, {\n\t\t\t\t_id: \"calendarGroup\",\n\t\t\t\ttype: GroupType.Calendar,\n\t\t\t\tuser: \"otherUser\",\n\t\t\t}),\n\t\t})\n\t\tconst ownMailAddresses = [\"my@address.to\"]\n\t\tconst user = createTestEntity(UserTypeRef, {\n\t\t\t_id: \"user-id\",\n\t\t\tmemberships: [\n\t\t\t\tcreateTestEntity(GroupMembershipTypeRef, {\n\t\t\t\t\tgroup: \"calendarGroup\",\n\t\t\t\t\tcapability: ShareCapability.Read,\n\t\t\t\t}),\n\t\t\t],\n\t\t})\n\t\treplace(user, \"_id\", [\"userList\", \"userId\"])\n\t\tconst userSettingsGroupRoot = createTestEntity(UserSettingsGroupRootTypeRef, { groupSettings: [] })\n\t\tconst userController = makeUserController([], AccountType.PAID, undefined, false, false, user, userSettingsGroupRoot)\n\t\to(getEventType(event, calendars, ownMailAddresses, userController)).equals(EventType.SHARED_RO)\n\t})\n\n\to(\"event with ownergroup in own calendar and a different organizer gets INVITE\", function () {\n\t\tconst event: Partial<CalendarEvent> = {\n\t\t\torganizer: createTestEntity(EncryptedMailAddressTypeRef, { address: \"other@address.to\", name: \"other\" }),\n\t\t\t_ownerGroup: \"ownergroup\",\n\t\t\tattendees: [\n\t\t\t\tcreateTestEntity(CalendarEventAttendeeTypeRef, { address: createTestEntity(EncryptedMailAddressTypeRef, { address: \"bla\", name: \"blabla\" }) }),\n\t\t\t],\n\t\t}\n\t\tconst calendars = new Map()\n\t\tcalendars.set(\"ownergroup\", {\n\t\t\tshared: false,\n\t\t\tgroup: createTestEntity(GroupTypeRef, {\n\t\t\t\t_id: \"calendarGroup\",\n\t\t\t\ttype: GroupType.Calendar,\n\t\t\t\tuser: \"userId\",\n\t\t\t}),\n\t\t})\n\t\tconst ownMailAddresses = [\"my@address.to\"]\n\t\tconst user = createTestEntity(UserTypeRef, {\n\t\t\t_id: \"user-id\",\n\t\t})\n\t\treplace(user, \"_id\", [\"userList\", \"userId\"])\n\t\tconst userSettingsGroupRoot = createTestEntity(UserSettingsGroupRootTypeRef, { groupSettings: [] })\n\t\tconst userController = makeUserController([], AccountType.PAID, undefined, false, false, user, userSettingsGroupRoot)\n\t\to(getEventType(event, calendars, ownMailAddresses, userController)).equals(EventType.INVITE)\n\t})\n\n\to.spec(\"parseAlarmInterval\", () => {\n\t\to(\"accepts valid values\", () => {\n\t\t\to(parseAlarmInterval(\"1M\")).deepEquals({ unit: AlarmIntervalUnit.MINUTE, value: 1 })\n\t\t\to(parseAlarmInterval(\"10M\")).deepEquals({ unit: AlarmIntervalUnit.MINUTE, value: 10 })\n\t\t\to(parseAlarmInterval(\"42H\")).deepEquals({ unit: AlarmIntervalUnit.HOUR, value: 42 })\n\t\t\to(parseAlarmInterval(\"35D\")).deepEquals({ unit: AlarmIntervalUnit.DAY, value: 35 })\n\t\t\to(parseAlarmInterval(\"6W\")).deepEquals({ unit: AlarmIntervalUnit.WEEK, value: 6 })\n\t\t})\n\n\t\to(\"does not accept invalid values\", () => {\n\t\t\t// it does accept values like \"05M\". should it tho?\n\t\t\tfor (const value of [\"-1M\", \"M\", \"3G\", \"3\", \"H5\"]) {\n\t\t\t\to(() => parseAlarmInterval(value)).throws(ParserError)(`Should throw on ${value}`)\n\t\t\t}\n\t\t})\n\t})\n\n\to(\"serializeAlarmInterval\", () => {\n\t\to(serializeAlarmInterval({ value: 2, unit: AlarmIntervalUnit.MINUTE })).equals(\"2M\")\n\t\to(serializeAlarmInterval({ value: 2, unit: AlarmIntervalUnit.HOUR })).equals(\"2H\")\n\t\to(serializeAlarmInterval({ value: 35, unit: AlarmIntervalUnit.DAY })).equals(\"35D\")\n\t\to(serializeAlarmInterval({ value: 2, unit: AlarmIntervalUnit.WEEK })).equals(\"2W\")\n\t})\n})\n\nfunction toCalendarString(calenderMonth: CalendarMonth) {\n\treturn calenderMonth.weekdays.join(\",\") + \"\\n\" + calenderMonth.weeks.map((w) => w.map((d) => d.day).join(\",\")).join(\"\\n\")\n}\n\nfunction iterateAlarmOccurrences(\n\tnow: Date,\n\ttimeZone: string,\n\teventStart: Date,\n\teventEnd: Date,\n\trepeatPeriod: RepeatPeriod,\n\tinterval: number,\n\tendType: EndType,\n\tendValue: number,\n\texclusions: Array<Date>,\n\talarmInterval: AlarmInterval,\n\tcalculationZone: string,\n\tmaxOccurrences: number,\n): Date[] {\n\tconst occurrences: Date[] = []\n\n\twhile (occurrences.length < maxOccurrences) {\n\t\tconst next: AlarmOccurrence = neverNull(\n\t\t\tfindNextAlarmOccurrence(now, timeZone, eventStart, eventEnd, repeatPeriod, interval, endType, endValue, exclusions, alarmInterval, calculationZone),\n\t\t)\n\n\t\tif (next) {\n\t\t\toccurrences.push(next.alarmTime)\n\t\t\tnow = new Date(next.eventTime.getTime())\n\t\t} else {\n\t\t\tbreak\n\t\t}\n\t}\n\n\treturn occurrences\n}\n\nfunction createEvent(startTime: Date, endTime: Date): CalendarEvent {\n\tconst event = createTestEntity(CalendarEventTypeRef)\n\tevent.startTime = startTime // 1 May 8:00\n\n\tevent.endTime = endTime\n\tevent._id = [\"listId\", generateEventElementId(event.startTime.getTime())]\n\treturn event\n}\n\nfunction countDaysWithEvents(eventsForDays: Map<number, Array<CalendarEvent>>) {\n\treturn Array.from(eventsForDays).filter(([_, events]) => events.length).length\n}\n\nfunction cloneEventWithNewTime(event: CalendarEvent, startTime: Date, endTime: Date): CalendarEvent {\n\tconst clonedEvent = clone(event)\n\tclonedEvent.startTime = startTime\n\tclonedEvent.endTime = endTime\n\treturn clonedEvent\n}\n","import o from \"@tutao/otest\"\nimport { CalendarInviteHandler, ReplyResult } from \"../../../src/calendar-app/calendar/view/CalendarInvites.js\"\nimport { createTestEntity } from \"../TestUtils.js\"\nimport {\n\tCalendarEventAttendeeTypeRef,\n\tCalendarEventTypeRef,\n\tcreateMailAddress,\n\tEncryptedMailAddressTypeRef,\n\tMailboxGroupRootTypeRef,\n\ttype MailboxProperties,\n\tMailboxPropertiesTypeRef,\n\tMailBoxTypeRef,\n\tMailTypeRef,\n\tUserSettingsGroupRootTypeRef,\n} from \"../../../src/common/api/entities/tutanota/TypeRefs.js\"\nimport { AccountType, CalendarAttendeeStatus } from \"../../../src/common/api/common/TutanotaConstants.js\"\nimport { findAttendeeInAddresses } from \"../../../src/common/api/common/utils/CommonCalendarUtils.js\"\nimport { instance, matchers, when } from \"testdouble\"\nimport { CalendarModel } from \"../../../src/calendar-app/calendar/model/CalendarModel.js\"\nimport { LoginController } from \"../../../src/common/api/main/LoginController.js\"\nimport { GroupInfoTypeRef, GroupTypeRef, User } from \"../../../src/common/api/entities/sys/TypeRefs.js\"\nimport { calendars, makeUserController } from \"./CalendarTestUtils.js\"\nimport { UserController } from \"../../../src/common/api/main/UserController.js\"\nimport { CalendarNotificationSender } from \"../../../src/calendar-app/calendar/view/CalendarNotificationSender.js\"\nimport { mockAttribute } from \"@tutao/tutanota-test-utils\"\nimport { SendMailModel } from \"../../../src/common/mailFunctionality/SendMailModel.js\"\nimport { MailboxDetail, MailboxModel } from \"../../../src/common/mailFunctionality/MailboxModel.js\"\nimport { FolderSystem } from \"../../../src/common/api/common/mail/FolderSystem.js\"\n\nconst { anything, argThat } = matchers\n\no.spec(\"CalendarInviteHandlerTest\", function () {\n\tlet maiboxModel: MailboxModel,\n\t\tcalendarIniviteHandler: CalendarInviteHandler,\n\t\tcalendarModel: CalendarModel,\n\t\tlogins: LoginController,\n\t\tsendMailModel: SendMailModel\n\tlet calendarNotificationSender: CalendarNotificationSender\n\tlet mailboxDetails: MailboxDetail\n\n\to.beforeEach(function () {\n\t\tconst customerId = \"customerId\"\n\t\tconst user = {\n\t\t\t_id: \"userId\",\n\t\t\tcustomer: customerId,\n\t\t} as User\n\t\tconst userSettingsGroupRoot = createTestEntity(UserSettingsGroupRootTypeRef)\n\t\tlet userController: Partial<UserController> = makeUserController([], AccountType.FREE, undefined, false, false, user, userSettingsGroupRoot)\n\n\t\tmailboxDetails = {\n\t\t\tmailbox: createTestEntity(MailBoxTypeRef),\n\t\t\tmailGroupInfo: createTestEntity(GroupInfoTypeRef, {\n\t\t\t\tmailAddress: \"mailgroup@addre.ss\",\n\t\t\t}),\n\t\t\tmailGroup: createTestEntity(GroupTypeRef),\n\t\t\tmailboxGroupRoot: createTestEntity(MailboxGroupRootTypeRef),\n\t\t}\n\t\tconst mailboxProperties: MailboxProperties = createTestEntity(MailboxPropertiesTypeRef, {})\n\n\t\tmaiboxModel = instance(MailboxModel)\n\t\twhen(maiboxModel.getMailboxProperties(anything())).thenResolve(mailboxProperties)\n\n\t\tcalendarModel = instance(CalendarModel)\n\t\twhen(calendarModel.getEventsByUid(anything())).thenResolve({\n\t\t\townerGroup: \"whatever\",\n\t\t\tprogenitor: null,\n\t\t\talteredInstances: [],\n\t\t})\n\t\t//processCalendarEventMessage is mocked to get call count\n\t\tmockAttribute(calendarModel, calendarModel.processCalendarEventMessage, () => Promise.resolve())\n\n\t\tlogins = instance(LoginController)\n\t\twhen(logins.getUserController()).thenReturn(userController)\n\n\t\tcalendarNotificationSender = instance(CalendarNotificationSender)\n\n\t\tsendMailModel = instance(SendMailModel)\n\n\t\tcalendarIniviteHandler = new CalendarInviteHandler(maiboxModel, calendarModel, logins, calendarNotificationSender, async () => {\n\t\t\treturn sendMailModel\n\t\t})\n\t})\n\n\to.spec(\"ReplyToEventInvitation\", function () {\n\t\to(\"respond yes to event\", async function () {\n\t\t\tconst sender = \"sender@example.com\"\n\t\t\tconst attendee = \"attendee@example.com\"\n\t\t\tconst event = createTestEntity(CalendarEventTypeRef, {\n\t\t\t\tuid: \"uid\",\n\t\t\t\tattendees: [\n\t\t\t\t\tcreateTestEntity(CalendarEventAttendeeTypeRef, {\n\t\t\t\t\t\taddress: createTestEntity(EncryptedMailAddressTypeRef, {\n\t\t\t\t\t\t\taddress: sender,\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tstatus: CalendarAttendeeStatus.ACCEPTED,\n\t\t\t\t\t}),\n\t\t\t\t\tcreateTestEntity(CalendarEventAttendeeTypeRef, {\n\t\t\t\t\t\taddress: createTestEntity(EncryptedMailAddressTypeRef, {\n\t\t\t\t\t\t\taddress: attendee,\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tstatus: CalendarAttendeeStatus.NEEDS_ACTION,\n\t\t\t\t\t}),\n\t\t\t\t],\n\t\t\t})\n\t\t\tconst ownAttendee = findAttendeeInAddresses(event.attendees, [attendee])\n\t\t\tlet mail = createTestEntity(MailTypeRef)\n\t\t\tmail.sender = createMailAddress({ address: sender, name: \"whatever\", contact: null })\n\t\t\twhen(calendarModel.getCalendarInfos()).thenResolve(calendars)\n\t\t\to(await calendarIniviteHandler.replyToEventInvitation(event, ownAttendee!, CalendarAttendeeStatus.ACCEPTED, mail, mailboxDetails)).equals(\n\t\t\t\tReplyResult.ReplySent,\n\t\t\t)\n\t\t\to(calendarModel.processCalendarEventMessage.callCount).equals(1)\n\t\t})\n\n\t\to(\"respond no to event\", async function () {\n\t\t\tconst sender = \"sender@example.com\"\n\t\t\tconst attendee = \"attendee@example.com\"\n\t\t\tconst event = createTestEntity(CalendarEventTypeRef, {\n\t\t\t\tuid: \"uid\",\n\t\t\t\tattendees: [\n\t\t\t\t\tcreateTestEntity(CalendarEventAttendeeTypeRef, {\n\t\t\t\t\t\taddress: createTestEntity(EncryptedMailAddressTypeRef, {\n\t\t\t\t\t\t\taddress: sender,\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tstatus: CalendarAttendeeStatus.ACCEPTED,\n\t\t\t\t\t}),\n\t\t\t\t\tcreateTestEntity(CalendarEventAttendeeTypeRef, {\n\t\t\t\t\t\taddress: createTestEntity(EncryptedMailAddressTypeRef, {\n\t\t\t\t\t\t\taddress: attendee,\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tstatus: CalendarAttendeeStatus.NEEDS_ACTION,\n\t\t\t\t\t}),\n\t\t\t\t],\n\t\t\t})\n\t\t\tconst ownAttendee = findAttendeeInAddresses(event.attendees, [attendee])\n\t\t\tlet mail = createTestEntity(MailTypeRef)\n\t\t\tmail.sender = createMailAddress({ address: sender, name: \"whatever\", contact: null })\n\t\t\twhen(calendarModel.getCalendarInfos()).thenResolve(calendars)\n\t\t\to(await calendarIniviteHandler.replyToEventInvitation(event, ownAttendee!, CalendarAttendeeStatus.DECLINED, mail, mailboxDetails)).equals(\n\t\t\t\tReplyResult.ReplySent,\n\t\t\t)\n\t\t\to(calendarModel.processCalendarEventMessage.callCount).equals(0)\n\t\t})\n\n\t\to(\"respond yes to event on read only shared calendar\", async function () {\n\t\t\tconst sender = \"sender@example.com\"\n\t\t\tconst attendee = \"attendee@example.com\"\n\t\t\tconst event = createTestEntity(CalendarEventTypeRef, {\n\t\t\t\torganizer: createTestEntity(EncryptedMailAddressTypeRef, { address: sender, name: \"sender\" }),\n\t\t\t\t_ownerGroup: \"ownergroup\",\n\t\t\t\tattendees: [\n\t\t\t\t\tcreateTestEntity(CalendarEventAttendeeTypeRef, {\n\t\t\t\t\t\taddress: createTestEntity(EncryptedMailAddressTypeRef, {\n\t\t\t\t\t\t\taddress: sender,\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tstatus: CalendarAttendeeStatus.ACCEPTED,\n\t\t\t\t\t}),\n\t\t\t\t\tcreateTestEntity(CalendarEventAttendeeTypeRef, {\n\t\t\t\t\t\taddress: createTestEntity(EncryptedMailAddressTypeRef, {\n\t\t\t\t\t\t\taddress: attendee,\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tstatus: CalendarAttendeeStatus.NEEDS_ACTION,\n\t\t\t\t\t}),\n\t\t\t\t],\n\t\t\t})\n\t\t\tconst ownAttendee = findAttendeeInAddresses(event.attendees, [attendee])\n\t\t\tlet mail = createTestEntity(MailTypeRef)\n\t\t\tmail.sender = createMailAddress({ address: sender, name: \"whatever\", contact: null })\n\t\t\twhen(calendarModel.getCalendarInfos()).thenResolve(new Map())\n\t\t\to(await calendarIniviteHandler.replyToEventInvitation(event, ownAttendee!, CalendarAttendeeStatus.DECLINED, mail, mailboxDetails)).equals(\n\t\t\t\tReplyResult.ReplySent,\n\t\t\t)\n\t\t\to(calendarModel.processCalendarEventMessage.callCount).equals(0)\n\t\t})\n\t})\n})\n","import o from \"@tutao/otest\"\nimport {\n\tparseCalendarEvents,\n\tparseDuration,\n\tparseExDates,\n\tparseICalendar,\n\tparseProperty,\n\tparsePropertyKeyValue,\n\tparseRecurrenceId,\n\tparseTime,\n\tparseUntilRruleTime,\n\tpropertySequenceParser,\n\ttriggerToAlarmInterval,\n} from \"../../../src/calendar-app/calendar/export/CalendarParser.js\"\nimport { ParserError, StringIterator } from \"../../../src/common/misc/parsing/ParserCombinator.js\"\nimport { DateTime } from \"luxon\"\nimport { DateWrapperTypeRef } from \"../../../src/common/api/entities/sys/TypeRefs.js\"\nimport { getDateInUTC, zone } from \"./CalendarTestUtils.js\"\nimport { createTestEntity } from \"../TestUtils.js\"\nimport { AlarmIntervalUnit } from \"../../../src/common/calendar/date/CalendarUtils.js\"\n\no.spec(\"CalendarParser\", function () {\n\to.spec(\"propertySequenceParser\", function () {\n\t\to(\"simple value\", function () {\n\t\t\to(propertySequenceParser(new StringIterator(\"DTSTART:20190531T083000Z\"))).deepEquals([\"DTSTART\", null, \":\", \"20190531T083000Z\"])\n\t\t})\n\n\t\to(\"simple value, property parameter\", function () {\n\t\t\to(propertySequenceParser(new StringIterator(\"DTSTART;VALUE=DATE:20190607\"))).deepEquals([\n\t\t\t\t\"DTSTART\",\n\t\t\t\t[\";\", [[\"VALUE\", \"=\", \"DATE\"]]],\n\t\t\t\t\":\",\n\t\t\t\t\"20190607\",\n\t\t\t])\n\t\t})\n\n\t\to(\"simple value, multiple property parameters\", function () {\n\t\t\to(propertySequenceParser(new StringIterator('DTSTART;VALUE=DATE;ANOTHER=VALUE;QUOTED=\"IN ; QUOTES\":20190607'))).deepEquals([\n\t\t\t\t\"DTSTART\",\n\t\t\t\t[\n\t\t\t\t\t\";\",\n\t\t\t\t\t[\n\t\t\t\t\t\t[\"VALUE\", \"=\", \"DATE\"],\n\t\t\t\t\t\t[\"ANOTHER\", \"=\", \"VALUE\"],\n\t\t\t\t\t\t[\"QUOTED\", \"=\", \"IN ; QUOTES\"],\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t\t\":\",\n\t\t\t\t\"20190607\",\n\t\t\t])\n\t\t})\n\n\t\to(\"key-value value\", function () {\n\t\t\to(propertySequenceParser(new StringIterator(\"RRULE:FREQ=WEEKLY;BYDAY=SA\"))).deepEquals([\"RRULE\", null, \":\", \"FREQ=WEEKLY;BYDAY=SA\"])\n\t\t})\n\t})\n\n\to.spec(\"parseProperty\", function () {\n\t\to(\"simple value\", function () {\n\t\t\to(parseProperty(\"DTSTART:20190531T083000Z\")).deepEquals({\n\t\t\t\tname: \"DTSTART\",\n\t\t\t\tparams: {},\n\t\t\t\tvalue: \"20190531T083000Z\",\n\t\t\t})\n\t\t})\n\t\to(\"simple value, property parameter\", function () {\n\t\t\to(parseProperty(\"DTSTART;VALUE=DATE:20190607\")).deepEquals({\n\t\t\t\tname: \"DTSTART\",\n\t\t\t\tparams: {\n\t\t\t\t\tVALUE: \"DATE\",\n\t\t\t\t},\n\t\t\t\tvalue: \"20190607\",\n\t\t\t})\n\t\t})\n\t\to(\"value with colon\", function () {\n\t\t\to(parseProperty(\"DTSTART:https://stuff\")).deepEquals({\n\t\t\t\tname: \"DTSTART\",\n\t\t\t\tparams: {},\n\t\t\t\tvalue: \"https://stuff\",\n\t\t\t})\n\t\t})\n\t\to(\"value with semicolon\", function () {\n\t\t\to(parseProperty(\"DTSTART:some\\\\;things\")).deepEquals({\n\t\t\t\tname: \"DTSTART\",\n\t\t\t\tparams: {},\n\t\t\t\tvalue: \"some;things\",\n\t\t\t})\n\t\t})\n\t\to(\"accept malformed custom property\", function () {\n\t\t\to(parseProperty(\"CUSTOM_PROP:some value\")).deepEquals({\n\t\t\t\tname: \"CUSTOM_PROP\",\n\t\t\t\tparams: {},\n\t\t\t\tvalue: \"some value\",\n\t\t\t})\n\t\t})\n\t})\n\to(\"parsePropertyKeyValue\", function () {\n\t\to(parsePropertyKeyValue(\"KEY=VALUE\")).deepEquals({\n\t\t\tKEY: \"VALUE\",\n\t\t})\n\t\to(parsePropertyKeyValue(\"KEY=VALUE;ANOTHERKEY=ANOTHERVALUE\")).deepEquals({\n\t\t\tKEY: \"VALUE\",\n\t\t\tANOTHERKEY: \"ANOTHERVALUE\",\n\t\t})\n\t})\n\to(\"parseDuration\", function () {\n\t\to(parseDuration(\"P\")).deepEquals({\n\t\t\tpositive: true,\n\t\t\tday: undefined,\n\t\t\thour: undefined,\n\t\t\tminute: undefined,\n\t\t\tweek: undefined,\n\t\t})\n\t\to(parseDuration(\"P8W\")).deepEquals({\n\t\t\tpositive: true,\n\t\t\tday: undefined,\n\t\t\thour: undefined,\n\t\t\tminute: undefined,\n\t\t\tweek: 8,\n\t\t})\n\t\to(parseDuration(\"-P11W6D\")).deepEquals({\n\t\t\tpositive: false,\n\t\t\tday: 6,\n\t\t\thour: undefined,\n\t\t\tminute: undefined,\n\t\t\tweek: 11,\n\t\t})\n\t\to(parseDuration(\"P36WT21H\")).deepEquals({\n\t\t\tpositive: true,\n\t\t\tday: undefined,\n\t\t\thour: 21,\n\t\t\tminute: undefined,\n\t\t\tweek: 36,\n\t\t})\n\t\to(parseDuration(\"P1WT1M\")).deepEquals({\n\t\t\tpositive: true,\n\t\t\tday: undefined,\n\t\t\thour: undefined,\n\t\t\tminute: 1,\n\t\t\tweek: 1,\n\t\t})\n\t\to(parseDuration(\"-P11W6DT15H\")).deepEquals({\n\t\t\tpositive: false,\n\t\t\tday: 6,\n\t\t\thour: 15,\n\t\t\tminute: undefined,\n\t\t\tweek: 11,\n\t\t})\n\t\to(parseDuration(\"P2W5DT30M\")).deepEquals({\n\t\t\tpositive: true,\n\t\t\tday: 5,\n\t\t\thour: undefined,\n\t\t\tminute: 30,\n\t\t\tweek: 2,\n\t\t})\n\t\to(parseDuration(\"-P11WT15H15M\")).deepEquals({\n\t\t\tpositive: false,\n\t\t\tday: undefined,\n\t\t\thour: 15,\n\t\t\tminute: 15,\n\t\t\tweek: 11,\n\t\t})\n\t\to(parseDuration(\"-P5W4DT3H18M\")).deepEquals({\n\t\t\tpositive: false,\n\t\t\tday: 4,\n\t\t\thour: 3,\n\t\t\tminute: 18,\n\t\t\tweek: 5,\n\t\t})\n\t\to(parseDuration(\"P3D\")).deepEquals({\n\t\t\tpositive: true,\n\t\t\tday: 3,\n\t\t\thour: undefined,\n\t\t\tminute: undefined,\n\t\t\tweek: undefined,\n\t\t})\n\t\to(parseDuration(\"P22DT60H\")).deepEquals({\n\t\t\tpositive: true,\n\t\t\tday: 22,\n\t\t\thour: 60,\n\t\t\tminute: undefined,\n\t\t\tweek: undefined,\n\t\t})\n\t\to(parseDuration(\"P4DT20M\")).deepEquals({\n\t\t\tpositive: true,\n\t\t\tday: 4,\n\t\t\thour: undefined,\n\t\t\tminute: 20,\n\t\t\tweek: undefined,\n\t\t})\n\t\to(parseDuration(\"P40DT60H120M\")).deepEquals({\n\t\t\tpositive: true,\n\t\t\tday: 40,\n\t\t\thour: 60,\n\t\t\tminute: 120,\n\t\t\tweek: undefined,\n\t\t})\n\t\to(parseDuration(\"-PT4H\")).deepEquals({\n\t\t\tpositive: false,\n\t\t\tday: undefined,\n\t\t\thour: 4,\n\t\t\tminute: undefined,\n\t\t\tweek: undefined,\n\t\t})\n\t\to(parseDuration(\"PT3H15M\")).deepEquals({\n\t\t\tpositive: true,\n\t\t\tday: undefined,\n\t\t\thour: 3,\n\t\t\tminute: 15,\n\t\t\tweek: undefined,\n\t\t})\n\t\to(parseDuration(\"PT18M\")).deepEquals({\n\t\t\tpositive: true,\n\t\t\tday: undefined,\n\t\t\thour: undefined,\n\t\t\tminute: 18,\n\t\t\tweek: undefined,\n\t\t})\n\t\to(parseDuration(\"P60DT15M05S\")).deepEquals({\n\t\t\tpositive: true,\n\t\t\tday: 60,\n\t\t\thour: undefined,\n\t\t\tminute: 15,\n\t\t\tweek: undefined,\n\t\t})\n\t\to(() => parseDuration(\"P8W15M\")).throws(Error)\n\t})\n\to(\"triggerToAlarmInterval\", function () {\n\t\to(triggerToAlarmInterval(getDateInUTC(\"2023-10-01T15:00\"), \"-PT5H30M\")).deepEquals({\n\t\t\tunit: AlarmIntervalUnit.MINUTE,\n\t\t\tvalue: 5 * 60 + 30,\n\t\t})\n\t\to(triggerToAlarmInterval(getDateInUTC(\"2023-10-01T15:00\"), \"-PT5H30M20S\")).deepEquals({\n\t\t\tunit: AlarmIntervalUnit.MINUTE,\n\t\t\tvalue: 5 * 60 + 30,\n\t\t})\n\t\to(triggerToAlarmInterval(getDateInUTC(\"2023-10-01T15:00\"), \"-PT5H0M\")).deepEquals({\n\t\t\tunit: AlarmIntervalUnit.HOUR,\n\t\t\tvalue: 5,\n\t\t})\n\t\to(triggerToAlarmInterval(getDateInUTC(\"2023-10-01T15:00\"), \"-P1DT5H0M\")).deepEquals({\n\t\t\tunit: AlarmIntervalUnit.HOUR,\n\t\t\tvalue: 29,\n\t\t})\n\t})\n\to(\"parseTime\", function () {\n\t\to(parseTime(\"20180115T214000Z\", \"Europe/Berlin\")).deepEquals({\n\t\t\tdate: new Date(Date.UTC(2018, 0, 15, 21, 40, 0)),\n\t\t\tallDay: false,\n\t\t})\n\t\to(parseTime(\"20180115T\", \"Europe/Berlin\")).deepEquals({\n\t\t\tdate: new Date(Date.UTC(2018, 0, 15, 0, 0, 0)),\n\t\t\tallDay: true,\n\t\t})\n\t\to(() => parseTime(\"20180015T214000Z\", \"Europe/Berlin\")).throws(ParserError)\n\t})\n\to.spec(\"parseCalendarEvents: fix illegal end times\", function () {\n\t\tconst makeEvent = ({ start, end }) =>\n\t\t\tparseICalendar(\n\t\t\t\t\"BEGIN:VCALENDAR\\n\" +\n\t\t\t\t\t\"VERSION:2.0\\n\" +\n\t\t\t\t\t\"BEGIN:VEVENT\\n\" +\n\t\t\t\t\t\"UID:0c838926-f826-43c9-9f17-4836c565eece\\n\" +\n\t\t\t\t\t\"DTSTAMP:20220106T214416Z\\n\" +\n\t\t\t\t\t\"SUMMARY;LANGUAGE=de:Gelber Sack\\n\" +\n\t\t\t\t\t`DTSTART:${start}\\n` +\n\t\t\t\t\t`DTEND:${end}\\n` +\n\t\t\t\t\t\"DESCRIPTION:Gelber Sack\\n\" +\n\t\t\t\t\t\"LOCATION:test\\n\" +\n\t\t\t\t\t\"END:VEVENT\\n\" +\n\t\t\t\t\t\"END:VCALENDAR\",\n\t\t\t)\n\n\t\tconst testParseIllegalCalendarEvents = ({ start, end, expect }) => {\n\t\t\tconst event = makeEvent({ start, end })\n\t\t\tconst { event: parsedEvent } = parseCalendarEvents(event, \"Europe/Berlin\").contents[0]\n\t\t\to(parsedEvent.endTime.getTime()).equals(expect)\n\t\t}\n\n\t\to(\"allday equal\", function () {\n\t\t\ttestParseIllegalCalendarEvents({ start: \"20220315T\", end: \"20220315T\", expect: parseTime(\"20220316T\", \"Europe/Berlin\").date.getTime() })\n\t\t})\n\t\to(\"allday flipped\", function () {\n\t\t\ttestParseIllegalCalendarEvents({ start: \"20220315T\", end: \"20220314T\", expect: parseTime(\"20220316T\", \"Europe/Berlin\").date.getTime() })\n\t\t})\n\t\to(\"allday with an endTime that has hours/minutes/seconds\", function () {\n\t\t\ttestParseIllegalCalendarEvents({ start: \"20220315T\", end: \"20220314T225915Z\", expect: parseTime(\"20220316T\", \"Europe/Berlin\").date.getTime() })\n\t\t})\n\n\t\to(\"endTime equal\", function () {\n\t\t\ttestParseIllegalCalendarEvents({ start: \"20220315T225900Z\", end: \"20220315T225900Z\", expect: new Date(\"2022-03-15T22:59:01.000Z\").getTime() })\n\t\t})\n\t\to(\"endTime flipped\", function () {\n\t\t\ttestParseIllegalCalendarEvents({ start: \"20220315T225900Z\", end: \"20220315T225800Z\", expect: new Date(\"2022-03-15T22:59:01.000Z\").getTime() })\n\t\t})\n\t})\n\n\to.spec(\"parseUntilRruleTime\", function () {\n\t\to(\"when given full UTC date it gives the beginning of the next day\", function () {\n\t\t\t// will take start of the next date because that's how we do it internally: end range is \"exclusive\" while it's questionable how it for ical but\n\t\t\t// mostly \"inclusive\"\n\t\t\tconst zone = \"Asia/Krasnoyarsk\"\n\t\t\to(parseUntilRruleTime(\"20190919T235959Z\", zone)).deepEquals(DateTime.fromObject({ year: 2019, month: 9, day: 20 }, { zone: zone }).toJSDate())\n\t\t})\n\t})\n\n\to.spec(\"parseExcludedDates\", function () {\n\t\to(\"are excluded dates deduplicated\", function () {\n\t\t\tconst parsedDates = parseExDates([{ name: \"EXDATES\", params: {}, value: \"20230308T230000Z,20230308T230000Z,20230309T230000Z\" }])\n\t\t\to(parsedDates).deepEquals([\n\t\t\t\tcreateTestEntity(DateWrapperTypeRef, { date: new Date(\"2023-03-08T23:00:00Z\") }),\n\t\t\t\tcreateTestEntity(DateWrapperTypeRef, { date: new Date(\"2023-03-09T23:00:00Z\") }),\n\t\t\t])\n\t\t})\n\t\to(\"are excluded dates sorted\", function () {\n\t\t\tconst parsedDates = parseExDates([{ name: \"EXDATES\", params: {}, value: \"20230313T230000Z,20230309T230000Z\" }])\n\t\t\to(parsedDates).deepEquals([\n\t\t\t\tcreateTestEntity(DateWrapperTypeRef, { date: new Date(\"2023-03-09T23:00:00Z\") }),\n\t\t\t\tcreateTestEntity(DateWrapperTypeRef, { date: new Date(\"2023-03-13T23:00:00Z\") }),\n\t\t\t])\n\t\t})\n\t\to(\"multiple exdates in separate lines are parsed\", function () {\n\t\t\tconst parsedDates = parseExDates([\n\t\t\t\t{ name: \"EXDATES\", params: {}, value: \"20230309T230000Z\" },\n\t\t\t\t{\n\t\t\t\t\tname: \"EXDATES\",\n\t\t\t\t\tparams: {},\n\t\t\t\t\tvalue: \"20230203T230000Z\",\n\t\t\t\t},\n\t\t\t])\n\t\t\to(parsedDates).deepEquals([\n\t\t\t\tcreateTestEntity(DateWrapperTypeRef, { date: new Date(\"2023-02-03T23:00:00Z\") }),\n\t\t\t\tcreateTestEntity(DateWrapperTypeRef, { date: new Date(\"2023-03-09T23:00:00Z\") }),\n\t\t\t])\n\t\t})\n\t\to(\"deduplication over multiple lines works\", function () {\n\t\t\tconst parsedDates = parseExDates([\n\t\t\t\t{ name: \"EXDATES\", params: {}, value: \"20230309T230000Z,20230302T230000Z\" },\n\t\t\t\t{\n\t\t\t\t\tname: \"EXDATES\",\n\t\t\t\t\tparams: {},\n\t\t\t\t\tvalue: \"20230309T230000Z,20230114T230000Z\",\n\t\t\t\t},\n\t\t\t])\n\t\t\to(parsedDates).deepEquals([\n\t\t\t\tcreateTestEntity(DateWrapperTypeRef, { date: new Date(\"2023-01-14T23:00:00Z\") }),\n\t\t\t\tcreateTestEntity(DateWrapperTypeRef, { date: new Date(\"2023-03-02T23:00:00Z\") }),\n\t\t\t\tcreateTestEntity(DateWrapperTypeRef, { date: new Date(\"2023-03-09T23:00:00Z\") }),\n\t\t\t])\n\t\t})\n\t\to(\"is timezone parsed\", function () {\n\t\t\tconst parsedDates = parseExDates([{ name: \"EXDATES\", params: { TZID: \"Europe/Berlin\" }, value: \"20230309T230000,20230302T230000\" }])\n\t\t\to(parsedDates).deepEquals([\n\t\t\t\tcreateTestEntity(DateWrapperTypeRef, { date: new Date(\"2023-03-02T22:00:00Z\") }),\n\t\t\t\tcreateTestEntity(DateWrapperTypeRef, { date: new Date(\"2023-03-09T22:00:00Z\") }),\n\t\t\t])\n\t\t})\n\t\to(\" deduplication over different timezones\", function () {\n\t\t\tconst parsedDates = parseExDates([\n\t\t\t\t{ name: \"EXDATES\", params: { TZID: \"Europe/Berlin\" }, value: \"20230309T230000\" },\n\t\t\t\t{ name: \"EXDATES\", params: { TZID: \"Europe/Sofia\" }, value: \"20230310T000000\" },\n\t\t\t])\n\t\t\to(parsedDates).deepEquals([createTestEntity(DateWrapperTypeRef, { date: new Date(\"2023-03-09T22:00:00Z\") })])\n\t\t})\n\t})\n\n\to.spec(\"parseRecurrenceId\", function () {\n\t\to(\"it uses UTC for absolute time\", function () {\n\t\t\tconst parsedId = parseRecurrenceId({ name: \"RECURRENCE-ID\", params: { VALUE: \"DATETIME\" }, value: \"20230809T060000Z\" }, zone)\n\t\t\to(parsedId).deepEquals(getDateInUTC(\"2023-08-09T06:00\"))\n\t\t})\n\n\t\to(\"it uses TZID from param for relative time\", function () {\n\t\t\tconst parsedId = parseRecurrenceId({ name: \"RECURRENCE-ID\", params: { VALUE: \"DATETIME\", TZID: \"Europe/Sofia\" }, value: \"20230310T000000\" }, zone)\n\t\t\to(parsedId).deepEquals(getDateInUTC(\"2023-03-09T22:00:00Z\"))\n\t\t})\n\n\t\to(\"it uses TZID from param when none are in the value\", function () {\n\t\t\tconst parsedId = parseRecurrenceId({ name: \"RECURRENCE-ID\", params: { VALUE: \"DATETIME\" }, value: \"20230310T000000\" }, \"Europe/Sofia\")\n\t\t\to(parsedId).deepEquals(getDateInUTC(\"2023-03-09T22:00:00Z\"))\n\t\t})\n\t})\n})\n","import o from \"@tutao/otest\"\nimport {\n\tserializeCalendar,\n\tserializeEvent,\n\tserializeExcludedDates,\n\tserializeRepeatRule,\n\tserializeTrigger,\n} from \"../../../src/calendar-app/calendar/export/CalendarExporter.js\"\nimport {\n\tCalendarEvent,\n\tCalendarEventAttendeeTypeRef,\n\tCalendarEventTypeRef,\n\tCalendarGroupRootTypeRef,\n\tEncryptedMailAddressTypeRef,\n} from \"../../../src/common/api/entities/tutanota/TypeRefs.js\"\nimport { DateTime } from \"luxon\"\nimport { AlarmInfo, AlarmInfoTypeRef, DateWrapperTypeRef, RepeatRuleTypeRef, UserAlarmInfoTypeRef } from \"../../../src/common/api/entities/sys/TypeRefs.js\"\nimport { CalendarAttendeeStatus, EndType, RepeatPeriod } from \"../../../src/common/api/common/TutanotaConstants.js\"\nimport { getAllDayDateUTC } from \"../../../src/common/api/common/utils/CommonCalendarUtils.js\"\nimport { getDateInZone } from \"./CalendarTestUtils.js\"\nimport { Require } from \"@tutao/tutanota-utils\"\nimport { createTestEntity } from \"../TestUtils.js\"\nimport { getAllDayDateUTCFromZone } from \"../../../src/common/calendar/date/CalendarUtils.js\"\nimport { EventImportRejectionReason, parseCalendarStringData, sortOutParsedEvents } from \"../../../src/common/calendar/import/ImportExportUtils.js\"\n\nconst zone = \"Europe/Berlin\"\nconst now = new Date(\"2019-08-13T14:01:00.630Z\")\n\nfunction jsonEquals(actual: unknown, expected: unknown, message): { pass: boolean; message: string } {\n\t// necessary because o(Uint8Array.from([])).deepEquals(Uint8Array.from([])) does not pass\n\tconst firstJson = JSON.stringify(actual)\n\tconst secondJson = JSON.stringify(expected)\n\tconst isEqual = firstJson === secondJson\n\tif (isEqual) {\n\t\treturn { pass: true, message: \"okay\" }\n\t} else {\n\t\tlet firstDiff = 0\n\t\twhile (firstJson[firstDiff] === secondJson[firstDiff]) firstDiff++\n\t\tfirstDiff = Math.max(firstDiff - 25, 0)\n\t\treturn {\n\t\t\tpass: false,\n\t\t\tmessage: `${message}:\\nfirst diff in json serialization around \\nact: ...${firstJson.substring(\n\t\t\t\tfirstDiff,\n\t\t\t\tfirstDiff + 50,\n\t\t\t)}... vs. \\nexp: ...${secondJson.substring(firstDiff, firstDiff + 50)}...`,\n\t\t}\n\t}\n}\n\nfunction testEventEquality(actual: unknown, expected: unknown, message: string = \"\"): void {\n\to(actual).satisfies((a) => jsonEquals(a, expected, message))\n}\n\no.spec(\"CalendarImporterTest\", function () {\n\to.spec(\"serializeEvent\", function () {\n\t\to(\"simple one\", function () {\n\t\t\to(\n\t\t\t\tserializeEvent(\n\t\t\t\t\tcreateTestEntity(CalendarEventTypeRef, {\n\t\t\t\t\t\t_id: [\"123\", \"456\"],\n\t\t\t\t\t\t_ownerGroup: \"ownerId\",\n\t\t\t\t\t\tsummary: \"Word \\\\ ; \\n\",\n\t\t\t\t\t\tstartTime: DateTime.fromObject(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tyear: 2019,\n\t\t\t\t\t\t\t\tmonth: 8,\n\t\t\t\t\t\t\t\tday: 13,\n\t\t\t\t\t\t\t\thour: 5,\n\t\t\t\t\t\t\t\tminute: 6,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{ zone },\n\t\t\t\t\t\t).toJSDate(),\n\t\t\t\t\t\tendTime: DateTime.fromObject(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tyear: 2019,\n\t\t\t\t\t\t\t\tmonth: 9,\n\t\t\t\t\t\t\t\tday: 13,\n\t\t\t\t\t\t\t\thour: 5,\n\t\t\t\t\t\t\t\tminute: 6,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{ zone },\n\t\t\t\t\t\t).toJSDate(),\n\t\t\t\t\t\tdescription: \"Descr \\\\ ;, \\n\",\n\t\t\t\t\t\tuid: \"test@tuta.com\",\n\t\t\t\t\t\tlocation: \"Some location\",\n\t\t\t\t\t}),\n\t\t\t\t\t[],\n\t\t\t\t\tnow,\n\t\t\t\t\tzone,\n\t\t\t\t),\n\t\t\t).deepEquals([\n\t\t\t\t\"BEGIN:VEVENT\",\n\t\t\t\t\"DTSTART:20190813T030600Z\",\n\t\t\t\t\"DTEND:20190913T030600Z\",\n\t\t\t\t`DTSTAMP:20190813T140100Z`,\n\t\t\t\t\"UID:test@tuta.com\",\n\t\t\t\t\"SEQUENCE:0\",\n\t\t\t\t\"SUMMARY:Word \\\\\\\\ \\\\; \\\\n\",\n\t\t\t\t\"DESCRIPTION:Descr \\\\\\\\ \\\\;\\\\, \\\\n\",\n\t\t\t\t\"LOCATION:Some location\",\n\t\t\t\t\"END:VEVENT\",\n\t\t\t])\n\t\t})\n\t\to(\"all day\", function () {\n\t\t\tconst zone = \"utc\"\n\t\t\to(\n\t\t\t\tserializeEvent(\n\t\t\t\t\tcreateTestEntity(CalendarEventTypeRef, {\n\t\t\t\t\t\t_id: [\"123\", \"456\"],\n\t\t\t\t\t\t_ownerGroup: \"ownerId\",\n\t\t\t\t\t\tsummary: \"Word \\\\ ; \\n\",\n\t\t\t\t\t\tstartTime: DateTime.fromObject(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tyear: 2019,\n\t\t\t\t\t\t\t\tmonth: 8,\n\t\t\t\t\t\t\t\tday: 13,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{ zone },\n\t\t\t\t\t\t).toJSDate(),\n\t\t\t\t\t\tendTime: DateTime.fromObject(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tyear: 2019,\n\t\t\t\t\t\t\t\tmonth: 9,\n\t\t\t\t\t\t\t\tday: 14,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{ zone },\n\t\t\t\t\t\t).toJSDate(),\n\t\t\t\t\t\tdescription: \"Descr \\\\ ; \\n\",\n\t\t\t\t\t}),\n\t\t\t\t\t[],\n\t\t\t\t\tnow,\n\t\t\t\t\tzone,\n\t\t\t\t),\n\t\t\t).deepEquals([\n\t\t\t\t\"BEGIN:VEVENT\",\n\t\t\t\t`DTSTART;VALUE=DATE:20190813`,\n\t\t\t\t`DTEND;VALUE=DATE:20190914`,\n\t\t\t\t`DTSTAMP:20190813T140100Z`,\n\t\t\t\t`UID:ownerId${now.getTime()}@tuta.com`,\n\t\t\t\t\"SEQUENCE:0\",\n\t\t\t\t\"SUMMARY:Word \\\\\\\\ \\\\; \\\\n\",\n\t\t\t\t\"DESCRIPTION:Descr \\\\\\\\ \\\\; \\\\n\",\n\t\t\t\t\"END:VEVENT\",\n\t\t\t])\n\t\t})\n\t\to(\"all day west of UTC\", function () {\n\t\t\t// Event though we try to set it to New York, it's not really possible to check without changing system time because of how\n\t\t\t// js Date works.\n\t\t\tconst zone = \"America/New_York\"\n\t\t\to(\n\t\t\t\tserializeEvent(\n\t\t\t\t\tcreateTestEntity(CalendarEventTypeRef, {\n\t\t\t\t\t\t_id: [\"123\", \"456\"],\n\t\t\t\t\t\t_ownerGroup: \"ownerId\",\n\t\t\t\t\t\tsummary: \"s\",\n\t\t\t\t\t\tstartTime: getAllDayDateUTC(\n\t\t\t\t\t\t\tDateTime.fromObject({\n\t\t\t\t\t\t\t\tyear: 2020,\n\t\t\t\t\t\t\t\tmonth: 7,\n\t\t\t\t\t\t\t\tday: 31,\n\t\t\t\t\t\t\t}).toJSDate(),\n\t\t\t\t\t\t),\n\t\t\t\t\t\tendTime: getAllDayDateUTC(\n\t\t\t\t\t\t\tDateTime.fromObject({\n\t\t\t\t\t\t\t\tyear: 2020,\n\t\t\t\t\t\t\t\tmonth: 8,\n\t\t\t\t\t\t\t\tday: 1,\n\t\t\t\t\t\t\t}).toJSDate(),\n\t\t\t\t\t\t),\n\t\t\t\t\t\tdescription: \"d\",\n\t\t\t\t\t}),\n\t\t\t\t\t[],\n\t\t\t\t\tnow,\n\t\t\t\t\tzone,\n\t\t\t\t),\n\t\t\t).deepEquals([\n\t\t\t\t\"BEGIN:VEVENT\",\n\t\t\t\t`DTSTART;VALUE=DATE:20200731`,\n\t\t\t\t`DTEND;VALUE=DATE:20200801`,\n\t\t\t\t`DTSTAMP:20190813T140100Z`,\n\t\t\t\t`UID:ownerId${now.getTime()}@tuta.com`,\n\t\t\t\t\"SEQUENCE:0\",\n\t\t\t\t\"SUMMARY:s\",\n\t\t\t\t\"DESCRIPTION:d\",\n\t\t\t\t\"END:VEVENT\",\n\t\t\t])\n\t\t})\n\t\to(\"with alarms\", function () {\n\t\t\tconst alarmOne = createTestEntity(UserAlarmInfoTypeRef, {\n\t\t\t\talarmInfo: createTestEntity(AlarmInfoTypeRef, {\n\t\t\t\t\talarmIdentifier: \"123\",\n\t\t\t\t\ttrigger: \"1D\",\n\t\t\t\t}),\n\t\t\t})\n\t\t\tconst alarmTwo = createTestEntity(UserAlarmInfoTypeRef, {\n\t\t\t\talarmInfo: createTestEntity(AlarmInfoTypeRef, {\n\t\t\t\t\talarmIdentifier: \"102\",\n\t\t\t\t\ttrigger: \"30M\",\n\t\t\t\t}),\n\t\t\t})\n\t\t\to(\n\t\t\t\tserializeEvent(\n\t\t\t\t\tcreateTestEntity(CalendarEventTypeRef, {\n\t\t\t\t\t\t_id: [\"123\", \"456\"],\n\t\t\t\t\t\t_ownerGroup: \"ownerId\",\n\t\t\t\t\t\tsummary: \"Word \\\\ ; \\n\",\n\t\t\t\t\t\tstartTime: DateTime.fromObject(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tyear: 2019,\n\t\t\t\t\t\t\t\tmonth: 8,\n\t\t\t\t\t\t\t\tday: 13,\n\t\t\t\t\t\t\t\thour: 5,\n\t\t\t\t\t\t\t\tminute: 6,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{ zone },\n\t\t\t\t\t\t).toJSDate(),\n\t\t\t\t\t\tendTime: DateTime.fromObject(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tyear: 2019,\n\t\t\t\t\t\t\t\tmonth: 9,\n\t\t\t\t\t\t\t\tday: 13,\n\t\t\t\t\t\t\t\thour: 5,\n\t\t\t\t\t\t\t\tminute: 6,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{ zone },\n\t\t\t\t\t\t).toJSDate(),\n\t\t\t\t\t\tdescription: \"Descr \\\\ ; \\n\",\n\t\t\t\t\t}),\n\t\t\t\t\t[alarmOne, alarmTwo],\n\t\t\t\t\tnow,\n\t\t\t\t\tzone,\n\t\t\t\t),\n\t\t\t).deepEquals([\n\t\t\t\t\"BEGIN:VEVENT\",\n\t\t\t\t\"DTSTART:20190813T030600Z\",\n\t\t\t\t\"DTEND:20190913T030600Z\",\n\t\t\t\t`DTSTAMP:20190813T140100Z`,\n\t\t\t\t`UID:ownerId${now.getTime()}@tuta.com`,\n\t\t\t\t\"SEQUENCE:0\",\n\t\t\t\t\"SUMMARY:Word \\\\\\\\ \\\\; \\\\n\",\n\t\t\t\t\"DESCRIPTION:Descr \\\\\\\\ \\\\; \\\\n\",\n\t\t\t\t\"BEGIN:VALARM\",\n\t\t\t\t\"ACTION:DISPLAY\",\n\t\t\t\t\"DESCRIPTION:This is an event reminder\",\n\t\t\t\t\"TRIGGER:-P1D\",\n\t\t\t\t\"END:VALARM\",\n\t\t\t\t\"BEGIN:VALARM\",\n\t\t\t\t\"ACTION:DISPLAY\",\n\t\t\t\t\"DESCRIPTION:This is an event reminder\",\n\t\t\t\t\"TRIGGER:-PT30M\",\n\t\t\t\t\"END:VALARM\",\n\t\t\t\t\"END:VEVENT\",\n\t\t\t])\n\t\t})\n\t\to(\"with repeat rule (never ends)\", function () {\n\t\t\to(\n\t\t\t\tserializeEvent(\n\t\t\t\t\tcreateTestEntity(CalendarEventTypeRef, {\n\t\t\t\t\t\t_id: [\"123\", \"456\"],\n\t\t\t\t\t\t_ownerGroup: \"ownerId\",\n\t\t\t\t\t\tsummary: \"Word \\\\ ; \\n\",\n\t\t\t\t\t\tstartTime: DateTime.fromObject(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tyear: 2019,\n\t\t\t\t\t\t\t\tmonth: 8,\n\t\t\t\t\t\t\t\tday: 13,\n\t\t\t\t\t\t\t\thour: 5,\n\t\t\t\t\t\t\t\tminute: 6,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{ zone },\n\t\t\t\t\t\t).toJSDate(),\n\t\t\t\t\t\tendTime: DateTime.fromObject(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tyear: 2019,\n\t\t\t\t\t\t\t\tmonth: 9,\n\t\t\t\t\t\t\t\tday: 13,\n\t\t\t\t\t\t\t\thour: 5,\n\t\t\t\t\t\t\t\tminute: 6,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{ zone },\n\t\t\t\t\t\t).toJSDate(),\n\t\t\t\t\t\trepeatRule: createTestEntity(RepeatRuleTypeRef, {\n\t\t\t\t\t\t\tendType: EndType.Never,\n\t\t\t\t\t\t\tinterval: \"3\",\n\t\t\t\t\t\t\tfrequency: RepeatPeriod.WEEKLY,\n\t\t\t\t\t\t\ttimeZone: zone,\n\t\t\t\t\t\t}),\n\t\t\t\t\t}),\n\t\t\t\t\t[],\n\t\t\t\t\tnow,\n\t\t\t\t\tzone,\n\t\t\t\t),\n\t\t\t).deepEquals([\n\t\t\t\t\"BEGIN:VEVENT\",\n\t\t\t\t`DTSTART;TZID=${zone}:20190813T050600`,\n\t\t\t\t`DTEND;TZID=${zone}:20190913T050600`,\n\t\t\t\t`DTSTAMP:20190813T140100Z`,\n\t\t\t\t`UID:ownerId${now.getTime()}@tuta.com`,\n\t\t\t\t\"SEQUENCE:0\",\n\t\t\t\t\"SUMMARY:Word \\\\\\\\ \\\\; \\\\n\",\n\t\t\t\t\"RRULE:FREQ=WEEKLY;INTERVAL=3\",\n\t\t\t\t\"END:VEVENT\",\n\t\t\t])\n\t\t})\n\t\to(\"with repeat rule (ends after occurrences)\", function () {\n\t\t\to(\n\t\t\t\tserializeEvent(\n\t\t\t\t\tcreateTestEntity(CalendarEventTypeRef, {\n\t\t\t\t\t\t_id: [\"123\", \"456\"],\n\t\t\t\t\t\t_ownerGroup: \"ownerId\",\n\t\t\t\t\t\tsummary: \"Word \\\\ ; \\n\",\n\t\t\t\t\t\tstartTime: DateTime.fromObject(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tyear: 2019,\n\t\t\t\t\t\t\t\tmonth: 8,\n\t\t\t\t\t\t\t\tday: 13,\n\t\t\t\t\t\t\t\thour: 5,\n\t\t\t\t\t\t\t\tminute: 6,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{ zone },\n\t\t\t\t\t\t).toJSDate(),\n\t\t\t\t\t\tendTime: DateTime.fromObject(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tyear: 2019,\n\t\t\t\t\t\t\t\tmonth: 9,\n\t\t\t\t\t\t\t\tday: 13,\n\t\t\t\t\t\t\t\thour: 5,\n\t\t\t\t\t\t\t\tminute: 6,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{ zone },\n\t\t\t\t\t\t).toJSDate(),\n\t\t\t\t\t\trepeatRule: createTestEntity(RepeatRuleTypeRef, {\n\t\t\t\t\t\t\tendType: EndType.Count,\n\t\t\t\t\t\t\tinterval: \"3\",\n\t\t\t\t\t\t\tfrequency: RepeatPeriod.DAILY,\n\t\t\t\t\t\t\tendValue: \"100\",\n\t\t\t\t\t\t\ttimeZone: zone,\n\t\t\t\t\t\t}),\n\t\t\t\t\t}),\n\t\t\t\t\t[],\n\t\t\t\t\tnow,\n\t\t\t\t\tzone,\n\t\t\t\t),\n\t\t\t).deepEquals([\n\t\t\t\t\"BEGIN:VEVENT\",\n\t\t\t\t`DTSTART;TZID=${zone}:20190813T050600`,\n\t\t\t\t`DTEND;TZID=${zone}:20190913T050600`,\n\t\t\t\t`DTSTAMP:20190813T140100Z`,\n\t\t\t\t`UID:ownerId${now.getTime()}@tuta.com`,\n\t\t\t\t\"SEQUENCE:0\",\n\t\t\t\t\"SUMMARY:Word \\\\\\\\ \\\\; \\\\n\",\n\t\t\t\t\"RRULE:FREQ=DAILY;INTERVAL=3;COUNT=100\",\n\t\t\t\t\"END:VEVENT\",\n\t\t\t])\n\t\t})\n\t\to(\"with repeat rule (ends on a date)\", function () {\n\t\t\to(\n\t\t\t\tserializeEvent(\n\t\t\t\t\tcreateTestEntity(CalendarEventTypeRef, {\n\t\t\t\t\t\t_id: [\"123\", \"456\"],\n\t\t\t\t\t\t_ownerGroup: \"ownerId\",\n\t\t\t\t\t\tsummary: \"Word \\\\ ; \\n\",\n\t\t\t\t\t\tstartTime: DateTime.fromObject(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tyear: 2019,\n\t\t\t\t\t\t\t\tmonth: 8,\n\t\t\t\t\t\t\t\tday: 13,\n\t\t\t\t\t\t\t\thour: 5,\n\t\t\t\t\t\t\t\tminute: 6,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{ zone },\n\t\t\t\t\t\t).toJSDate(),\n\t\t\t\t\t\tendTime: DateTime.fromObject(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tyear: 2019,\n\t\t\t\t\t\t\t\tmonth: 9,\n\t\t\t\t\t\t\t\tday: 13,\n\t\t\t\t\t\t\t\thour: 5,\n\t\t\t\t\t\t\t\tminute: 6,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{ zone },\n\t\t\t\t\t\t).toJSDate(),\n\t\t\t\t\t\trepeatRule: createTestEntity(RepeatRuleTypeRef, {\n\t\t\t\t\t\t\tendType: EndType.UntilDate,\n\t\t\t\t\t\t\tinterval: \"3\",\n\t\t\t\t\t\t\tfrequency: RepeatPeriod.MONTHLY,\n\t\t\t\t\t\t\tendValue: String(\n\t\t\t\t\t\t\t\tDateTime.fromObject(\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tyear: 2019,\n\t\t\t\t\t\t\t\t\t\tmonth: 9,\n\t\t\t\t\t\t\t\t\t\tday: 20,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{ zone },\n\t\t\t\t\t\t\t\t).toMillis(),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\ttimeZone: zone,\n\t\t\t\t\t\t}),\n\t\t\t\t\t}),\n\t\t\t\t\t[],\n\t\t\t\t\tnow,\n\t\t\t\t\tzone,\n\t\t\t\t),\n\t\t\t).deepEquals([\n\t\t\t\t\"BEGIN:VEVENT\",\n\t\t\t\t`DTSTART;TZID=${zone}:20190813T050600`,\n\t\t\t\t`DTEND;TZID=${zone}:20190913T050600`,\n\t\t\t\t`DTSTAMP:20190813T140100Z`,\n\t\t\t\t`UID:ownerId${now.getTime()}@tuta.com`,\n\t\t\t\t\"SEQUENCE:0\",\n\t\t\t\t\"SUMMARY:Word \\\\\\\\ \\\\; \\\\n\",\n\t\t\t\t\"RRULE:FREQ=MONTHLY;INTERVAL=3;UNTIL=20190919T215959Z\",\n\t\t\t\t\"END:VEVENT\",\n\t\t\t])\n\t\t})\n\t\to(\"with repeat rule (ends on a date, all-day)\", function () {\n\t\t\to(\n\t\t\t\tserializeEvent(\n\t\t\t\t\tcreateTestEntity(CalendarEventTypeRef, {\n\t\t\t\t\t\t_id: [\"123\", \"456\"],\n\t\t\t\t\t\t_ownerGroup: \"ownerId\",\n\t\t\t\t\t\tsummary: \"Word \\\\ ; \\n\",\n\t\t\t\t\t\tstartTime: getAllDayDateUTC(\n\t\t\t\t\t\t\tDateTime.fromObject({\n\t\t\t\t\t\t\t\tyear: 2019,\n\t\t\t\t\t\t\t\tmonth: 8,\n\t\t\t\t\t\t\t\tday: 13,\n\t\t\t\t\t\t\t}).toJSDate(),\n\t\t\t\t\t\t),\n\t\t\t\t\t\tendTime: getAllDayDateUTC(\n\t\t\t\t\t\t\tDateTime.fromObject({\n\t\t\t\t\t\t\t\tyear: 2019,\n\t\t\t\t\t\t\t\tmonth: 8,\n\t\t\t\t\t\t\t\tday: 15,\n\t\t\t\t\t\t\t}).toJSDate(),\n\t\t\t\t\t\t),\n\t\t\t\t\t\trepeatRule: createTestEntity(RepeatRuleTypeRef, {\n\t\t\t\t\t\t\tendType: EndType.UntilDate,\n\t\t\t\t\t\t\tinterval: \"3\",\n\t\t\t\t\t\t\tfrequency: RepeatPeriod.MONTHLY,\n\t\t\t\t\t\t\t// Beginning of 20th will be displayed to the user as 19th\n\t\t\t\t\t\t\tendValue: String(\n\t\t\t\t\t\t\t\tgetAllDayDateUTC(\n\t\t\t\t\t\t\t\t\tDateTime.fromObject({\n\t\t\t\t\t\t\t\t\t\tyear: 2019,\n\t\t\t\t\t\t\t\t\t\tmonth: 9,\n\t\t\t\t\t\t\t\t\t\tday: 20,\n\t\t\t\t\t\t\t\t\t}).toJSDate(),\n\t\t\t\t\t\t\t\t).getTime(),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\ttimeZone: zone,\n\t\t\t\t\t\t}),\n\t\t\t\t\t}),\n\t\t\t\t\t[],\n\t\t\t\t\tnow,\n\t\t\t\t\tzone,\n\t\t\t\t),\n\t\t\t).deepEquals([\n\t\t\t\t\"BEGIN:VEVENT\",\n\t\t\t\t`DTSTART;VALUE=DATE:20190813`,\n\t\t\t\t`DTEND;VALUE=DATE:20190815`,\n\t\t\t\t`DTSTAMP:20190813T140100Z`,\n\t\t\t\t`UID:ownerId${now.getTime()}@tuta.com`,\n\t\t\t\t\"SEQUENCE:0\",\n\t\t\t\t\"SUMMARY:Word \\\\\\\\ \\\\; \\\\n\",\n\t\t\t\t\"RRULE:FREQ=MONTHLY;INTERVAL=3;UNTIL=20190919\",\n\t\t\t\t\"END:VEVENT\",\n\t\t\t])\n\t\t})\n\t})\n\to.spec(\"import\", function () {\n\t\to(\"regular event\", async function () {\n\t\t\tconst actual = await parseCalendarStringData(\n\t\t\t\t[\n\t\t\t\t\t\"BEGIN:VCALENDAR\",\n\t\t\t\t\t\"PRODID:-//Tutao GmbH//Tutanota 3.57.6Yup//EN\",\n\t\t\t\t\t\"VERSION:2.0\",\n\t\t\t\t\t\"CALSCALE:GREGORIAN\",\n\t\t\t\t\t\"METHOD:PUBLISH\",\n\t\t\t\t\t\"BEGIN:VEVENT\",\n\t\t\t\t\t`DTSTART;TZID=\"W. Europe Standard Time\":20190813T050600`,\n\t\t\t\t\t`DTEND;TZID=\"W. Europe Standard Time\":20190913T050600`,\n\t\t\t\t\t`DTSTAMP:20190813T140100Z`,\n\t\t\t\t\t`UID:test@tuta.com`,\n\t\t\t\t\t\"SEQUENCE:0\",\n\t\t\t\t\t\"SUMMARY:Word \\\\N \\\\\\\\ \\\\;\\\\, \\\\n\",\n\t\t\t\t\t\"RRULE:FREQ=WEEKLY;INTERVAL=3\",\n\t\t\t\t\t\"END:VEVENT\",\n\t\t\t\t\t\"END:VCALENDAR\",\n\t\t\t\t].join(\"\\r\\n\"),\n\t\t\t\tzone,\n\t\t\t)\n\t\t\tconst expected = {\n\t\t\t\tmethod: \"PUBLISH\",\n\t\t\t\tcontents: [\n\t\t\t\t\t{\n\t\t\t\t\t\tevent: createTestEntity(CalendarEventTypeRef, {\n\t\t\t\t\t\t\tsummary: \"Word \\n \\\\ ;, \\n\",\n\t\t\t\t\t\t\tstartTime: DateTime.fromObject(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tyear: 2019,\n\t\t\t\t\t\t\t\t\tmonth: 8,\n\t\t\t\t\t\t\t\t\tday: 13,\n\t\t\t\t\t\t\t\t\thour: 5,\n\t\t\t\t\t\t\t\t\tminute: 6,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{ zone },\n\t\t\t\t\t\t\t).toJSDate(),\n\t\t\t\t\t\t\tendTime: DateTime.fromObject(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tyear: 2019,\n\t\t\t\t\t\t\t\t\tmonth: 9,\n\t\t\t\t\t\t\t\t\tday: 13,\n\t\t\t\t\t\t\t\t\thour: 5,\n\t\t\t\t\t\t\t\t\tminute: 6,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{ zone },\n\t\t\t\t\t\t\t).toJSDate(),\n\t\t\t\t\t\t\tuid: \"test@tuta.com\",\n\t\t\t\t\t\t\thashedUid: null,\n\t\t\t\t\t\t\trepeatRule: createTestEntity(RepeatRuleTypeRef, {\n\t\t\t\t\t\t\t\tendType: EndType.Never,\n\t\t\t\t\t\t\t\tinterval: \"3\",\n\t\t\t\t\t\t\t\tfrequency: RepeatPeriod.WEEKLY,\n\t\t\t\t\t\t\t\ttimeZone: zone,\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t}),\n\t\t\t\t\t\talarms: [],\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t}\n\t\t\ttestEventEquality(actual, expected)\n\t\t})\n\t\to(\"with attendee\", async function () {\n\t\t\tconst parsedEvent = parseCalendarStringData(\n\t\t\t\t[\n\t\t\t\t\t\"BEGIN:VCALENDAR\",\n\t\t\t\t\t\"PRODID:-//Tutao GmbH//Tutanota 3.57.6Yup//EN\",\n\t\t\t\t\t\"VERSION:2.0\",\n\t\t\t\t\t\"CALSCALE:GREGORIAN\",\n\t\t\t\t\t\"METHOD:PUBLISH\",\n\t\t\t\t\t\"BEGIN:VEVENT\",\n\t\t\t\t\t`DTSTART;TZID=\"W. Europe Standard Time\":20190813T050600`,\n\t\t\t\t\t`DTEND;TZID=\"W. Europe Standard Time\":20190913T050600`,\n\t\t\t\t\t`DTSTAMP:20190813T140100Z`,\n\t\t\t\t\t`UID:test@tuta.com`,\n\t\t\t\t\t\"SEQUENCE:0\",\n\t\t\t\t\t\"SUMMARY:s\",\n\t\t\t\t\t\"ORGANIZER:mailto:organizer@tuta.com\",\n\t\t\t\t\t\"ATTENDEE;PARTSTAT=NEEDS-ACTION:mailto:test@example.com\",\n\t\t\t\t\t\"END:VEVENT\",\n\t\t\t\t\t\"END:VCALENDAR\",\n\t\t\t\t].join(\"\\r\\n\"),\n\t\t\t\tzone,\n\t\t\t)\n\t\t\tconst expected = {\n\t\t\t\tmethod: \"PUBLISH\",\n\t\t\t\tcontents: [\n\t\t\t\t\t{\n\t\t\t\t\t\tevent: createTestEntity(CalendarEventTypeRef, {\n\t\t\t\t\t\t\tsummary: \"s\",\n\t\t\t\t\t\t\tstartTime: DateTime.fromObject(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tyear: 2019,\n\t\t\t\t\t\t\t\t\tmonth: 8,\n\t\t\t\t\t\t\t\t\tday: 13,\n\t\t\t\t\t\t\t\t\thour: 5,\n\t\t\t\t\t\t\t\t\tminute: 6,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{ zone },\n\t\t\t\t\t\t\t).toJSDate(),\n\t\t\t\t\t\t\tendTime: DateTime.fromObject(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tyear: 2019,\n\t\t\t\t\t\t\t\t\tmonth: 9,\n\t\t\t\t\t\t\t\t\tday: 13,\n\t\t\t\t\t\t\t\t\thour: 5,\n\t\t\t\t\t\t\t\t\tminute: 6,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{ zone },\n\t\t\t\t\t\t\t).toJSDate(),\n\t\t\t\t\t\t\tuid: \"test@tuta.com\",\n\t\t\t\t\t\t\thashedUid: null,\n\t\t\t\t\t\t\torganizer: createTestEntity(EncryptedMailAddressTypeRef, {\n\t\t\t\t\t\t\t\tname: \"\",\n\t\t\t\t\t\t\t\taddress: \"organizer@tuta.com\",\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tattendees: [\n\t\t\t\t\t\t\t\tcreateTestEntity(CalendarEventAttendeeTypeRef, {\n\t\t\t\t\t\t\t\t\taddress: createTestEntity(EncryptedMailAddressTypeRef, {\n\t\t\t\t\t\t\t\t\t\tname: \"\",\n\t\t\t\t\t\t\t\t\t\taddress: \"test@example.com\",\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\tstatus: CalendarAttendeeStatus.NEEDS_ACTION,\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t}),\n\t\t\t\t\t\talarms: [],\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t}\n\t\t\ttestEventEquality(parsedEvent, expected)\n\t\t})\n\t\to(\"with attendee uppercase mailto\", async function () {\n\t\t\t// GMX does this\n\t\t\tconst parsedEvent = parseCalendarStringData(\n\t\t\t\t[\n\t\t\t\t\t\"BEGIN:VCALENDAR\",\n\t\t\t\t\t\"PRODID:-//Tutao GmbH//Tutanota 3.57.6Yup//EN\",\n\t\t\t\t\t\"VERSION:2.0\",\n\t\t\t\t\t\"CALSCALE:GREGORIAN\",\n\t\t\t\t\t\"METHOD:PUBLISH\",\n\t\t\t\t\t\"BEGIN:VEVENT\",\n\t\t\t\t\t`DTSTART;TZID=\"W. Europe Standard Time\":20190813T050600`,\n\t\t\t\t\t`DTEND;TZID=\"W. Europe Standard Time\":20190913T050600`,\n\t\t\t\t\t`DTSTAMP:20190813T140100Z`,\n\t\t\t\t\t`UID:test@tuta.com`,\n\t\t\t\t\t\"SEQUENCE:0\",\n\t\t\t\t\t\"SUMMARY:s\",\n\t\t\t\t\t\"ORGANIZER:MAILTO:organizer@tuta.com\",\n\t\t\t\t\t\"ATTENDEE;PARTSTAT=NEEDS-ACTION:MAILTO:test@example.com\",\n\t\t\t\t\t\"END:VEVENT\",\n\t\t\t\t\t\"END:VCALENDAR\",\n\t\t\t\t].join(\"\\r\\n\"),\n\t\t\t\tzone,\n\t\t\t)\n\t\t\tconst expected = {\n\t\t\t\tmethod: \"PUBLISH\",\n\t\t\t\tcontents: [\n\t\t\t\t\t{\n\t\t\t\t\t\tevent: createTestEntity(CalendarEventTypeRef, {\n\t\t\t\t\t\t\tsummary: \"s\",\n\t\t\t\t\t\t\tstartTime: DateTime.fromObject(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tyear: 2019,\n\t\t\t\t\t\t\t\t\tmonth: 8,\n\t\t\t\t\t\t\t\t\tday: 13,\n\t\t\t\t\t\t\t\t\thour: 5,\n\t\t\t\t\t\t\t\t\tminute: 6,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{ zone },\n\t\t\t\t\t\t\t).toJSDate(),\n\t\t\t\t\t\t\tendTime: DateTime.fromObject(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tyear: 2019,\n\t\t\t\t\t\t\t\t\tmonth: 9,\n\t\t\t\t\t\t\t\t\tday: 13,\n\t\t\t\t\t\t\t\t\thour: 5,\n\t\t\t\t\t\t\t\t\tminute: 6,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{ zone },\n\t\t\t\t\t\t\t).toJSDate(),\n\t\t\t\t\t\t\tuid: \"test@tuta.com\",\n\t\t\t\t\t\t\thashedUid: null,\n\t\t\t\t\t\t\torganizer: createTestEntity(EncryptedMailAddressTypeRef, {\n\t\t\t\t\t\t\t\tname: \"\",\n\t\t\t\t\t\t\t\taddress: \"organizer@tuta.com\",\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tattendees: [\n\t\t\t\t\t\t\t\tcreateTestEntity(CalendarEventAttendeeTypeRef, {\n\t\t\t\t\t\t\t\t\taddress: createTestEntity(EncryptedMailAddressTypeRef, {\n\t\t\t\t\t\t\t\t\t\tname: \"\",\n\t\t\t\t\t\t\t\t\t\taddress: \"test@example.com\",\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\tstatus: CalendarAttendeeStatus.NEEDS_ACTION,\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t}),\n\t\t\t\t\t\talarms: [],\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t}\n\t\t\ttestEventEquality(parsedEvent, expected)\n\t\t})\n\t\to(\"with attendee without PARTSTAT\", async function () {\n\t\t\t// Outlook 16 does this\n\t\t\t// RFC says NEEDS-ACTION is default\n\t\t\t// https://tools.ietf.org/html/rfc5545#section-3.2.12\n\t\t\tconst parsedEvent = parseCalendarStringData(\n\t\t\t\t[\n\t\t\t\t\t\"BEGIN:VCALENDAR\",\n\t\t\t\t\t\"PRODID:-//Tutao GmbH//Tutanota 3.57.6Yup//EN\",\n\t\t\t\t\t\"VERSION:2.0\",\n\t\t\t\t\t\"CALSCALE:GREGORIAN\",\n\t\t\t\t\t\"METHOD:PUBLISH\",\n\t\t\t\t\t\"BEGIN:VEVENT\",\n\t\t\t\t\t`DTSTART;TZID=\"W. Europe Standard Time\":20190813T050600`,\n\t\t\t\t\t`DTEND;TZID=\"W. Europe Standard Time\":20190913T050600`,\n\t\t\t\t\t`DTSTAMP:20190813T140100Z`,\n\t\t\t\t\t`UID:test@tuta.com`,\n\t\t\t\t\t\"SEQUENCE:0\",\n\t\t\t\t\t\"SUMMARY:s\",\n\t\t\t\t\t\"ORGANIZER:MAILTO:organizer@tuta.com\",\n\t\t\t\t\t\"ATTENDEE:mailto:test@example.com\",\n\t\t\t\t\t\"END:VEVENT\",\n\t\t\t\t\t\"END:VCALENDAR\",\n\t\t\t\t].join(\"\\r\\n\"),\n\t\t\t\tzone,\n\t\t\t)\n\t\t\tconst expected = {\n\t\t\t\tmethod: \"PUBLISH\",\n\t\t\t\tcontents: [\n\t\t\t\t\t{\n\t\t\t\t\t\tevent: createTestEntity(CalendarEventTypeRef, {\n\t\t\t\t\t\t\tsummary: \"s\",\n\t\t\t\t\t\t\tstartTime: DateTime.fromObject(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tyear: 2019,\n\t\t\t\t\t\t\t\t\tmonth: 8,\n\t\t\t\t\t\t\t\t\tday: 13,\n\t\t\t\t\t\t\t\t\thour: 5,\n\t\t\t\t\t\t\t\t\tminute: 6,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{ zone },\n\t\t\t\t\t\t\t).toJSDate(),\n\t\t\t\t\t\t\tendTime: DateTime.fromObject(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tyear: 2019,\n\t\t\t\t\t\t\t\t\tmonth: 9,\n\t\t\t\t\t\t\t\t\tday: 13,\n\t\t\t\t\t\t\t\t\thour: 5,\n\t\t\t\t\t\t\t\t\tminute: 6,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{ zone },\n\t\t\t\t\t\t\t).toJSDate(),\n\t\t\t\t\t\t\tuid: \"test@tuta.com\",\n\t\t\t\t\t\t\thashedUid: null,\n\t\t\t\t\t\t\torganizer: createTestEntity(EncryptedMailAddressTypeRef, {\n\t\t\t\t\t\t\t\tname: \"\",\n\t\t\t\t\t\t\t\taddress: \"organizer@tuta.com\",\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tattendees: [\n\t\t\t\t\t\t\t\tcreateTestEntity(CalendarEventAttendeeTypeRef, {\n\t\t\t\t\t\t\t\t\taddress: createTestEntity(EncryptedMailAddressTypeRef, {\n\t\t\t\t\t\t\t\t\t\tname: \"\",\n\t\t\t\t\t\t\t\t\t\taddress: \"test@example.com\",\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\tstatus: CalendarAttendeeStatus.NEEDS_ACTION,\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t}),\n\t\t\t\t\t\talarms: [],\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t}\n\t\t\ttestEventEquality(parsedEvent, expected)\n\t\t})\n\t\to(\"all-day event\", async function () {\n\t\t\ttestEventEquality(\n\t\t\t\tparseCalendarStringData(\n\t\t\t\t\t[\n\t\t\t\t\t\t\"BEGIN:VCALENDAR\",\n\t\t\t\t\t\t\"PRODID:-//Tutao GmbH//Tutanota 3.57.6Yup//EN\",\n\t\t\t\t\t\t\"VERSION:2.0\",\n\t\t\t\t\t\t\"CALSCALE:GREGORIAN\",\n\t\t\t\t\t\t\"METHOD:PUBLISH\",\n\t\t\t\t\t\t\"BEGIN:VEVENT\",\n\t\t\t\t\t\t\"SUMMARY:Labor Day / May Day\",\n\t\t\t\t\t\t\"DTSTART;VALUE=DATE:20200501\",\n\t\t\t\t\t\t\"DTEND;VALUE=DATE:20200502\",\n\t\t\t\t\t\t\"LOCATION:Brazil\",\n\t\t\t\t\t\t\"DESCRIPTION:Some description\",\n\t\t\t\t\t\t\"UID:5e528f277e20e1582468903@calendarlabs.com\",\n\t\t\t\t\t\t\"DTSTAMP:20200223T144143Z\",\n\t\t\t\t\t\t\"STATUS:CONFIRMED\",\n\t\t\t\t\t\t\"TRANSP:TRANSPARENT\",\n\t\t\t\t\t\t\"SEQUENCE:0\",\n\t\t\t\t\t\t\"END:VEVENT\",\n\t\t\t\t\t\t\"END:VCALENDAR\",\n\t\t\t\t\t].join(\"\\r\\n\"),\n\t\t\t\t\tzone,\n\t\t\t\t).contents[0],\n\t\t\t\t{\n\t\t\t\t\tevent: createTestEntity(CalendarEventTypeRef, {\n\t\t\t\t\t\tsummary: \"Labor Day / May Day\",\n\t\t\t\t\t\tstartTime: getAllDayDateUTCFromZone(\n\t\t\t\t\t\t\tDateTime.fromObject(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tyear: 2020,\n\t\t\t\t\t\t\t\t\tmonth: 5,\n\t\t\t\t\t\t\t\t\tday: 1,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{ zone },\n\t\t\t\t\t\t\t).toJSDate(),\n\t\t\t\t\t\t\tzone,\n\t\t\t\t\t\t),\n\t\t\t\t\t\tendTime: getAllDayDateUTCFromZone(\n\t\t\t\t\t\t\tDateTime.fromObject(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tyear: 2020,\n\t\t\t\t\t\t\t\t\tmonth: 5,\n\t\t\t\t\t\t\t\t\tday: 2,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{ zone },\n\t\t\t\t\t\t\t).toJSDate(),\n\t\t\t\t\t\t\tzone,\n\t\t\t\t\t\t),\n\t\t\t\t\t\tuid: \"5e528f277e20e1582468903@calendarlabs.com\",\n\t\t\t\t\t\thashedUid: null,\n\t\t\t\t\t\tdescription: \"Some description\",\n\t\t\t\t\t\tlocation: \"Brazil\",\n\t\t\t\t\t}),\n\t\t\t\t\talarms: [],\n\t\t\t\t},\n\t\t\t)\n\t\t})\n\t\to(\"recurrence id on event without UID will be deleted\", async function () {\n\t\t\tconst expected = {\n\t\t\t\tevent: createTestEntity(CalendarEventTypeRef, {\n\t\t\t\t\tstartTime: new Date(\"2023-07-04T15:00:00.000Z\"),\n\t\t\t\t\tendTime: new Date(\"2023-07-04T15:30:00.000Z\"),\n\t\t\t\t\tsequence: \"1\",\n\t\t\t\t\tsummary: \"bkbkbkb\",\n\t\t\t\t\trecurrenceId: null,\n\t\t\t\t}),\n\t\t\t\talarms: [],\n\t\t\t}\n\t\t\tconst parsed = parseCalendarStringData(\n\t\t\t\t[\n\t\t\t\t\t\"BEGIN:VCALENDAR\",\n\t\t\t\t\t\"PRODID:-//Tutao GmbH//Tutanota 3.115.0//EN\",\n\t\t\t\t\t\"VERSION:2.0\",\n\t\t\t\t\t\"CALSCALE:GREGORIAN\",\n\t\t\t\t\t\"METHOD:PUBLISH\",\n\t\t\t\t\t\"BEGIN:VEVENT\",\n\t\t\t\t\t\"DTSTART:20230704T150000Z\",\n\t\t\t\t\t\"DTEND:20230704T153000Z\",\n\t\t\t\t\t\"DTSTAMP:20230712T142825Z\",\n\t\t\t\t\t\"SEQUENCE:1\",\n\t\t\t\t\t\"SUMMARY:bkbkbkb\",\n\t\t\t\t\t\"RECURRENCE-ID:20230704T170000\",\n\t\t\t\t\t\"END:VEVENT\",\n\t\t\t\t\t\"END:VCALENDAR\",\n\t\t\t\t].join(\"\\r\\n\"),\n\t\t\t\tzone,\n\t\t\t).contents[0]\n\t\t\to(parsed.event.uid).notEquals(null)\n\t\t\t// @ts-ignore we want to test that the other fields are the same.\n\t\t\tparsed.event.uid = null\n\t\t\ttestEventEquality(parsed, expected)\n\t\t})\n\t\to(\"all-day event with invalid DTEND\", async function () {\n\t\t\ttestEventEquality(\n\t\t\t\tparseCalendarStringData(\n\t\t\t\t\t[\n\t\t\t\t\t\t\"BEGIN:VCALENDAR\",\n\t\t\t\t\t\t\"PRODID:-//Tutao GmbH//Tutanota 3.57.6Yup//EN\",\n\t\t\t\t\t\t\"VERSION:2.0\",\n\t\t\t\t\t\t\"CALSCALE:GREGORIAN\",\n\t\t\t\t\t\t\"METHOD:PUBLISH\",\n\t\t\t\t\t\t\"BEGIN:VEVENT\",\n\t\t\t\t\t\t\"SUMMARY:Labor Day / May Day\",\n\t\t\t\t\t\t\"DTSTART;VALUE=DATE:20200501\",\n\t\t\t\t\t\t\"DTEND;VALUE=DATE:20200501\",\n\t\t\t\t\t\t\"LOCATION:Brazil\",\n\t\t\t\t\t\t\"DESCRIPTION:Some description\",\n\t\t\t\t\t\t\"UID:5e528f277e20e1582468903@calendarlabs.com\",\n\t\t\t\t\t\t\"DTSTAMP:20200223T144143Z\",\n\t\t\t\t\t\t\"STATUS:CONFIRMED\",\n\t\t\t\t\t\t\"TRANSP:TRANSPARENT\",\n\t\t\t\t\t\t\"SEQUENCE:0\",\n\t\t\t\t\t\t\"END:VEVENT\",\n\t\t\t\t\t\t\"END:VCALENDAR\",\n\t\t\t\t\t].join(\"\\r\\n\"),\n\t\t\t\t\tzone,\n\t\t\t\t).contents[0],\n\t\t\t\t{\n\t\t\t\t\tevent: createTestEntity(CalendarEventTypeRef, {\n\t\t\t\t\t\tsummary: \"Labor Day / May Day\",\n\t\t\t\t\t\tstartTime: getAllDayDateUTCFromZone(\n\t\t\t\t\t\t\tDateTime.fromObject(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tyear: 2020,\n\t\t\t\t\t\t\t\t\tmonth: 5,\n\t\t\t\t\t\t\t\t\tday: 1,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{ zone },\n\t\t\t\t\t\t\t).toJSDate(),\n\t\t\t\t\t\t\tzone,\n\t\t\t\t\t\t),\n\t\t\t\t\t\tendTime: getAllDayDateUTCFromZone(\n\t\t\t\t\t\t\tDateTime.fromObject(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tyear: 2020,\n\t\t\t\t\t\t\t\t\tmonth: 5,\n\t\t\t\t\t\t\t\t\tday: 2,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{ zone },\n\t\t\t\t\t\t\t).toJSDate(),\n\t\t\t\t\t\t\tzone,\n\t\t\t\t\t\t),\n\t\t\t\t\t\tuid: \"5e528f277e20e1582468903@calendarlabs.com\",\n\t\t\t\t\t\thashedUid: null,\n\t\t\t\t\t\tdescription: \"Some description\",\n\t\t\t\t\t\tlocation: \"Brazil\",\n\t\t\t\t\t}),\n\t\t\t\t\talarms: [],\n\t\t\t\t},\n\t\t\t)\n\t\t})\n\t\to(\"with relative non-standard alarm\", async function () {\n\t\t\ttestEventEquality(\n\t\t\t\tparseCalendarStringData(\n\t\t\t\t\t[\n\t\t\t\t\t\t\"BEGIN:VCALENDAR\",\n\t\t\t\t\t\t\"PRODID:-//Tutao GmbH//Tutanota 3.57.6//EN\",\n\t\t\t\t\t\t\"VERSION:2.0\",\n\t\t\t\t\t\t\"CALSCALE:GREGORIAN\",\n\t\t\t\t\t\t\"METHOD:PUBLISH\",\n\t\t\t\t\t\t\"BEGIN:VEVENT\",\n\t\t\t\t\t\t`DTSTART;TZID=\"W. Europe Standard Time\":20190813T050600`,\n\t\t\t\t\t\t`DTEND;TZID=\"W. Europe Standard Time\":20190913T050600`,\n\t\t\t\t\t\t`DTSTAMP:20190813T140100Z`,\n\t\t\t\t\t\t`UID:test@tuta.com`,\n\t\t\t\t\t\t\"SUMMARY:Word \\\\\\\\ \\\\; \\\\n\",\n\t\t\t\t\t\t\"BEGIN:VALARM\",\n\t\t\t\t\t\t\"ACTION:DISPLAY\",\n\t\t\t\t\t\t\"TRIGGER:-P15D\",\n\t\t\t\t\t\t\"END:VALARM\",\n\t\t\t\t\t\t\"END:VEVENT\",\n\t\t\t\t\t\t\"END:VCALENDAR\",\n\t\t\t\t\t].join(\"\\r\\n\"),\n\t\t\t\t\tzone,\n\t\t\t\t),\n\t\t\t\t{\n\t\t\t\t\tmethod: \"PUBLISH\",\n\t\t\t\t\tcontents: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tevent: createTestEntity(CalendarEventTypeRef, {\n\t\t\t\t\t\t\t\tsummary: \"Word \\\\ ; \\n\",\n\t\t\t\t\t\t\t\tstartTime: DateTime.fromObject(\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tyear: 2019,\n\t\t\t\t\t\t\t\t\t\tmonth: 8,\n\t\t\t\t\t\t\t\t\t\tday: 13,\n\t\t\t\t\t\t\t\t\t\thour: 5,\n\t\t\t\t\t\t\t\t\t\tminute: 6,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{ zone },\n\t\t\t\t\t\t\t\t).toJSDate(),\n\t\t\t\t\t\t\t\tendTime: DateTime.fromObject(\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tyear: 2019,\n\t\t\t\t\t\t\t\t\t\tmonth: 9,\n\t\t\t\t\t\t\t\t\t\tday: 13,\n\t\t\t\t\t\t\t\t\t\thour: 5,\n\t\t\t\t\t\t\t\t\t\tminute: 6,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{ zone },\n\t\t\t\t\t\t\t\t).toJSDate(),\n\t\t\t\t\t\t\t\tuid: \"test@tuta.com\",\n\t\t\t\t\t\t\t\thashedUid: null,\n\t\t\t\t\t\t\t\trepeatRule: null,\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\talarms: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttrigger: \"15D\",\n\t\t\t\t\t\t\t\t\talarmIdentifier: \"\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t)\n\t\t})\n\t\to(\"with absolute alarm\", async function () {\n\t\t\ttestEventEquality(\n\t\t\t\tparseCalendarStringData(\n\t\t\t\t\t[\n\t\t\t\t\t\t\"BEGIN:VCALENDAR\",\n\t\t\t\t\t\t\"PRODID:-//Tutao GmbH//Tutanota 3.57.6//EN\",\n\t\t\t\t\t\t\"VERSION:2.0\",\n\t\t\t\t\t\t\"CALSCALE:GREGORIAN\",\n\t\t\t\t\t\t\"METHOD:PUBLISH\",\n\t\t\t\t\t\t\"BEGIN:VEVENT\",\n\t\t\t\t\t\t`DTSTART;TZID=\"W. Europe Standard Time\":20190813T050600`,\n\t\t\t\t\t\t`DTEND;TZID=\"W. Europe Standard Time\":20190913T050600`,\n\t\t\t\t\t\t`DTSTAMP:20190813T140100Z`,\n\t\t\t\t\t\t`UID:test@tuta.com`,\n\t\t\t\t\t\t\"SUMMARY:Word \\\\\\\\ \\\\; \\\\n\",\n\t\t\t\t\t\t\"BEGIN:VALARM\",\n\t\t\t\t\t\t\"ACTION:DISPLAY\",\n\t\t\t\t\t\t// 20190813T050600 Europe/Berlin is 20190813T030600 in UTC\n\t\t\t\t\t\t// 1H and 6M before\n\t\t\t\t\t\t\"TRIGGER;VALUE=DATE-TIME:20190813T020000Z\",\n\t\t\t\t\t\t\"END:VALARM\",\n\t\t\t\t\t\t\"END:VEVENT\",\n\t\t\t\t\t\t\"END:VCALENDAR\",\n\t\t\t\t\t].join(\"\\r\\n\"),\n\t\t\t\t\tzone,\n\t\t\t\t),\n\t\t\t\t{\n\t\t\t\t\tmethod: \"PUBLISH\",\n\t\t\t\t\tcontents: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tevent: createTestEntity(CalendarEventTypeRef, {\n\t\t\t\t\t\t\t\tsummary: \"Word \\\\ ; \\n\",\n\t\t\t\t\t\t\t\tstartTime: DateTime.fromObject(\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tyear: 2019,\n\t\t\t\t\t\t\t\t\t\tmonth: 8,\n\t\t\t\t\t\t\t\t\t\tday: 13,\n\t\t\t\t\t\t\t\t\t\thour: 5,\n\t\t\t\t\t\t\t\t\t\tminute: 6,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{ zone },\n\t\t\t\t\t\t\t\t).toJSDate(),\n\t\t\t\t\t\t\t\tendTime: DateTime.fromObject(\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tyear: 2019,\n\t\t\t\t\t\t\t\t\t\tmonth: 9,\n\t\t\t\t\t\t\t\t\t\tday: 13,\n\t\t\t\t\t\t\t\t\t\thour: 5,\n\t\t\t\t\t\t\t\t\t\tminute: 6,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{ zone },\n\t\t\t\t\t\t\t\t).toJSDate(),\n\t\t\t\t\t\t\t\tuid: \"test@tuta.com\",\n\t\t\t\t\t\t\t\thashedUid: null,\n\t\t\t\t\t\t\t\trepeatRule: null,\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\talarms: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttrigger: \"66M\",\n\t\t\t\t\t\t\t\t\talarmIdentifier: \"\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t)\n\t\t})\n\t\to(\"with alarm in the future\", async function () {\n\t\t\ttestEventEquality(\n\t\t\t\tparseCalendarStringData(\n\t\t\t\t\t[\n\t\t\t\t\t\t\"BEGIN:VCALENDAR\",\n\t\t\t\t\t\t\"PRODID:-//Tutao GmbH//Tutanota 3.57.6//EN\",\n\t\t\t\t\t\t\"VERSION:2.0\",\n\t\t\t\t\t\t\"CALSCALE:GREGORIAN\",\n\t\t\t\t\t\t\"METHOD:PUBLISH\",\n\t\t\t\t\t\t\"BEGIN:VEVENT\",\n\t\t\t\t\t\t`DTSTART;TZID=\"W. Europe Standard Time\":20190813T050600`,\n\t\t\t\t\t\t`DTEND;TZID=\"W. Europe Standard Time\":20190913T050600`,\n\t\t\t\t\t\t`DTSTAMP:20190813T140100Z`,\n\t\t\t\t\t\t`UID:test@tuta.com`,\n\t\t\t\t\t\t\"SUMMARY:Word \\\\\\\\ \\\\; \\\\n\",\n\t\t\t\t\t\t\"BEGIN:VALARM\",\n\t\t\t\t\t\t\"ACTION:DISPLAY\",\n\t\t\t\t\t\t\"TRIGGER:P1D\",\n\t\t\t\t\t\t\"END:VALARM\",\n\t\t\t\t\t\t\"END:VEVENT\",\n\t\t\t\t\t\t\"END:VCALENDAR\",\n\t\t\t\t\t].join(\"\\r\\n\"),\n\t\t\t\t\tzone,\n\t\t\t\t),\n\t\t\t\t{\n\t\t\t\t\tmethod: \"PUBLISH\",\n\t\t\t\t\tcontents: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tevent: createTestEntity(CalendarEventTypeRef, {\n\t\t\t\t\t\t\t\tsummary: \"Word \\\\ ; \\n\",\n\t\t\t\t\t\t\t\tstartTime: DateTime.fromObject(\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tyear: 2019,\n\t\t\t\t\t\t\t\t\t\tmonth: 8,\n\t\t\t\t\t\t\t\t\t\tday: 13,\n\t\t\t\t\t\t\t\t\t\thour: 5,\n\t\t\t\t\t\t\t\t\t\tminute: 6,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{ zone },\n\t\t\t\t\t\t\t\t).toJSDate(),\n\t\t\t\t\t\t\t\tendTime: DateTime.fromObject(\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tyear: 2019,\n\t\t\t\t\t\t\t\t\t\tmonth: 9,\n\t\t\t\t\t\t\t\t\t\tday: 13,\n\t\t\t\t\t\t\t\t\t\thour: 5,\n\t\t\t\t\t\t\t\t\t\tminute: 6,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{ zone },\n\t\t\t\t\t\t\t\t).toJSDate(),\n\t\t\t\t\t\t\t\tuid: \"test@tuta.com\",\n\t\t\t\t\t\t\t\thashedUid: null,\n\t\t\t\t\t\t\t\trepeatRule: null,\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\talarms: [],\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t)\n\t\t})\n\t\to(\"import and re-export descriptions exported from outlook\", async function () {\n\t\t\tconst text = `BEGIN:VCALENDAR\nVERSION:2.0\nCALSCALE:GREGORIAN\nMETHOD:REPLY\nBEGIN:VEVENT\nDTSTART:20221026T210000Z\nDTEND:20221026T220000Z\nDTSTAMP:20221018T202558Z\nUID:040000008200E00074C5B7101A82E00800000000B073543805E3D801000000000000000010000000EA368AA63E095848BAEEE25C239F56C6\nSEQUENCE:0\nSUMMARY:App Feedback Session\nDESCRIPTION:\\\\n________________________________________________________________________________\\\\nMicrosoft Teams meeting\\\\nJoin on your computer\\\\, mobile app or room device\\\\nUnited States\\\\, Minneapolis\\\\nPhone Conference ID: 000 000 000\nLOCATION:Microsoft Teams Meeting\nORGANIZER;EMAIL=Mary.Doe@example.com:mailto:Mary.Doe@example.com\nATTENDEE;CUTYPE=INDIVIDUAL;ROLE=REQ-PARTICIPANT;PARTSTAT=ACCEPTED;RSVP=TRUE;CN=\"Dack\";EMAIL=dack@example.com:mailto:dack@example.com\nEND:VEVENT\nEND:VCALENDAR`\n\n\t\t\tconst parsed = parseCalendarStringData(text, zone)\n\t\t\tconst serialized = [\n\t\t\t\t\"BEGIN:VCALENDAR\",\n\t\t\t\t`VERSION:2.0`,\n\t\t\t\t`CALSCALE:GREGORIAN`,\n\t\t\t\t`METHOD:REPLY`,\n\t\t\t\t...serializeEvent(parsed.contents[0].event, [], new Date(), zone),\n\t\t\t\t\"END:VCALENDAR\",\n\t\t\t].join(\"\\n\")\n\t\t\tconst parsedAgain = parseCalendarStringData(serialized, zone)\n\t\t\to(parsedAgain.contents[0].event.description).equals(\n\t\t\t\t\"\\n________________________________________________________________________________\\nMicrosoft Teams meeting\\nJoin on your computer, mobile app or room device\\nUnited States, Minneapolis\\nPhone Conference ID: 000 000 000\",\n\t\t\t)\n\t\t})\n\t\to(\"roundtrip export -> import\", async function () {\n\t\t\tconst alarmOne = createTestEntity(UserAlarmInfoTypeRef, {\n\t\t\t\talarmInfo: createTestEntity(AlarmInfoTypeRef, {\n\t\t\t\t\ttrigger: \"1D\",\n\t\t\t\t}),\n\t\t\t})\n\t\t\tconst alarmTwo = createTestEntity(UserAlarmInfoTypeRef, {\n\t\t\t\talarmInfo: createTestEntity(AlarmInfoTypeRef, {\n\t\t\t\t\ttrigger: \"30M\",\n\t\t\t\t}),\n\t\t\t})\n\t\t\tconst events = [\n\t\t\t\t{\n\t\t\t\t\tevent: createTestEntity(CalendarEventTypeRef, {\n\t\t\t\t\t\t_id: [\"123\", \"456\"],\n\t\t\t\t\t\tsummary: \"Word \\\\ ; \\n simple\",\n\t\t\t\t\t\tstartTime: DateTime.fromObject(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tyear: 2019,\n\t\t\t\t\t\t\t\tmonth: 1,\n\t\t\t\t\t\t\t\tday: 13,\n\t\t\t\t\t\t\t\thour: 5,\n\t\t\t\t\t\t\t\tminute: 6,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{ zone },\n\t\t\t\t\t\t).toJSDate(),\n\t\t\t\t\t\tendTime: DateTime.fromObject(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tyear: 2019,\n\t\t\t\t\t\t\t\tmonth: 9,\n\t\t\t\t\t\t\t\tday: 13,\n\t\t\t\t\t\t\t\thour: 5,\n\t\t\t\t\t\t\t\tminute: 6,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{ zone },\n\t\t\t\t\t\t).toJSDate(),\n\t\t\t\t\t\tdescription: \"Descr \\\\ ; \\n\",\n\t\t\t\t\t\tuid: \"test@tuta.com\",\n\t\t\t\t\t\thashedUid: null,\n\t\t\t\t\t\tsequence: \"1\",\n\t\t\t\t\t}),\n\t\t\t\t\talarms: [],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tevent: createTestEntity(CalendarEventTypeRef, {\n\t\t\t\t\t\t_id: [\"123\", \"456\"],\n\t\t\t\t\t\t_ownerGroup: \"ownerId\",\n\t\t\t\t\t\tsummary: \"Word \\\\ ; \\n alarms\",\n\t\t\t\t\t\tstartTime: DateTime.fromObject(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tyear: 2019,\n\t\t\t\t\t\t\t\tmonth: 8,\n\t\t\t\t\t\t\t\tday: 13,\n\t\t\t\t\t\t\t\thour: 5,\n\t\t\t\t\t\t\t\tminute: 6,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{ zone },\n\t\t\t\t\t\t).toJSDate(),\n\t\t\t\t\t\tendTime: DateTime.fromObject(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tyear: 2019,\n\t\t\t\t\t\t\t\tmonth: 9,\n\t\t\t\t\t\t\t\tday: 13,\n\t\t\t\t\t\t\t\thour: 5,\n\t\t\t\t\t\t\t\tminute: 6,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{ zone },\n\t\t\t\t\t\t).toJSDate(),\n\t\t\t\t\t\tsequence: \"2\",\n\t\t\t\t\t\tuid: \"test@tuta.com\",\n\t\t\t\t\t\thashedUid: null,\n\t\t\t\t\t}),\n\t\t\t\t\talarms: [alarmOne, alarmTwo],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tevent: createTestEntity(CalendarEventTypeRef, {\n\t\t\t\t\t\t_id: [\"123\", \"456\"],\n\t\t\t\t\t\t_ownerGroup: \"ownerId\",\n\t\t\t\t\t\tsummary: \"Word \\\\ ; \\n\",\n\t\t\t\t\t\tstartTime: DateTime.fromObject(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tyear: 2019,\n\t\t\t\t\t\t\t\tmonth: 8,\n\t\t\t\t\t\t\t\tday: 13,\n\t\t\t\t\t\t\t\thour: 5,\n\t\t\t\t\t\t\t\tminute: 6,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{ zone },\n\t\t\t\t\t\t).toJSDate(),\n\t\t\t\t\t\tendTime: DateTime.fromObject(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tyear: 2019,\n\t\t\t\t\t\t\t\tmonth: 9,\n\t\t\t\t\t\t\t\tday: 13,\n\t\t\t\t\t\t\t\thour: 5,\n\t\t\t\t\t\t\t\tminute: 6,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{ zone },\n\t\t\t\t\t\t).toJSDate(),\n\t\t\t\t\t\tuid: \"test@tuta.com\",\n\t\t\t\t\t\thashedUid: null,\n\t\t\t\t\t\trepeatRule: createTestEntity(RepeatRuleTypeRef, {\n\t\t\t\t\t\t\tendType: EndType.UntilDate,\n\t\t\t\t\t\t\tinterval: \"3\",\n\t\t\t\t\t\t\tfrequency: RepeatPeriod.MONTHLY,\n\t\t\t\t\t\t\tendValue: String(\n\t\t\t\t\t\t\t\tDateTime.fromObject(\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tyear: 2019,\n\t\t\t\t\t\t\t\t\t\tmonth: 9,\n\t\t\t\t\t\t\t\t\t\tday: 20,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{ zone },\n\t\t\t\t\t\t\t\t).toMillis(),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\ttimeZone: zone,\n\t\t\t\t\t\t}),\n\t\t\t\t\t}),\n\t\t\t\t\talarms: [],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tevent: createTestEntity(CalendarEventTypeRef, {\n\t\t\t\t\t\t_id: [\"123\", \"456\"],\n\t\t\t\t\t\t_ownerGroup: \"ownerId\",\n\t\t\t\t\t\tsummary: \"Word \\\\ ; \\n\",\n\t\t\t\t\t\tstartTime: getAllDayDateUTC(\n\t\t\t\t\t\t\tDateTime.fromObject({\n\t\t\t\t\t\t\t\tyear: 2019,\n\t\t\t\t\t\t\t\tmonth: 8,\n\t\t\t\t\t\t\t\tday: 13,\n\t\t\t\t\t\t\t}).toJSDate(),\n\t\t\t\t\t\t),\n\t\t\t\t\t\tendTime: getAllDayDateUTC(\n\t\t\t\t\t\t\tDateTime.fromObject({\n\t\t\t\t\t\t\t\tyear: 2019,\n\t\t\t\t\t\t\t\tmonth: 8,\n\t\t\t\t\t\t\t\tday: 15,\n\t\t\t\t\t\t\t}).toJSDate(),\n\t\t\t\t\t\t),\n\t\t\t\t\t\tuid: \"b64lookingValue==\",\n\t\t\t\t\t\thashedUid: null,\n\t\t\t\t\t\trepeatRule: createTestEntity(RepeatRuleTypeRef, {\n\t\t\t\t\t\t\tendType: EndType.UntilDate,\n\t\t\t\t\t\t\tinterval: \"3\",\n\t\t\t\t\t\t\tfrequency: RepeatPeriod.MONTHLY,\n\t\t\t\t\t\t\t// Beginning of 20th will be displayed to the user as 19th\n\t\t\t\t\t\t\tendValue: String(\n\t\t\t\t\t\t\t\tgetAllDayDateUTC(\n\t\t\t\t\t\t\t\t\tDateTime.fromObject(\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tyear: 2019,\n\t\t\t\t\t\t\t\t\t\t\tmonth: 9,\n\t\t\t\t\t\t\t\t\t\t\tday: 20,\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{ zone },\n\t\t\t\t\t\t\t\t\t).toJSDate(),\n\t\t\t\t\t\t\t\t).getTime(),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t}),\n\t\t\t\t\t}),\n\t\t\t\t\talarms: [],\n\t\t\t\t},\n\t\t\t]\n\t\t\tconst versionNumber = \"3.57.6\"\n\t\t\tconst serialized = serializeCalendar(versionNumber, events, now, zone)\n\t\t\tconst eventsWithoutIds = events.map(({ event, alarms }) => {\n\t\t\t\treturn {\n\t\t\t\t\tevent: Object.assign({}, event, {\n\t\t\t\t\t\t_id: null,\n\t\t\t\t\t\tuid: event.uid,\n\t\t\t\t\t\thashedUid: event.hashedUid,\n\t\t\t\t\t\t_ownerGroup: null,\n\t\t\t\t\t}),\n\t\t\t\t\talarms: alarms.map((a) => ({ trigger: a.alarmInfo.trigger, alarmIdentifier: a.alarmInfo.alarmIdentifier })),\n\t\t\t\t}\n\t\t\t})\n\t\t\tconst parsed = parseCalendarStringData(serialized, zone)\n\t\t\to(parsed.method).equals(\"PUBLISH\")(\"wrong method\")\n\t\t\tfor (const i in eventsWithoutIds) {\n\t\t\t\ttestEventEquality(parsed.contents[i], eventsWithoutIds[i], `failed for event ${i}`)\n\t\t\t}\n\t\t})\n\t\to(\"roundtrip import -> export\", async function () {\n\t\t\tconst text = `BEGIN:VCALENDAR\nPRODID:-//Tutao GmbH//Tutanota 3.57.6//EN\nVERSION:2.0\nCALSCALE:GREGORIAN\nMETHOD:PUBLISH\nBEGIN:VEVENT\nDTSTART:20190813T030600Z\nDTEND:20190913T030600Z\nDTSTAMP:20190813T140100Z\nUID:test@tuta.com\nSEQUENCE:1\nSUMMARY:Word \\\\\\\\ \\\\; \\\\n simple\nDESCRIPTION:Descr \\\\\\\\ \\\\; \\\\n\nEND:VEVENT\nBEGIN:VEVENT\nDTSTART:20190813T030600Z\nDTEND:20190913T030600Z\nDTSTAMP:20190813T140100Z\nUID:123456@tuta.com\nSEQUENCE:0\nSUMMARY:Word \\\\\\\\ \\\\; \\\\n alarms\nBEGIN:VALARM\nACTION:DISPLAY\nDESCRIPTION:This is an event reminder\nTRIGGER:-P1D\nEND:VALARM\nBEGIN:VALARM\nACTION:DISPLAY\nDESCRIPTION:This is an event reminder\nTRIGGER:-PT30M\nEND:VALARM\nEND:VEVENT\nBEGIN:VEVENT\nDTSTART;TZID=Europe/Berlin:20190813T050600\nDTEND;TZID=Europe/Berlin:20190913T050600\nDTSTAMP:20190813T140100Z\nUID:123456@tuta.com\nSEQUENCE:2\nSUMMARY:Word \\\\\\\\ \\\\; \\\\n repeating\nRRULE:FREQ=MONTHLY;INTERVAL=3;UNTIL=20190919T215959Z\nEND:VEVENT\nBEGIN:VEVENT\nDTSTART;VALUE=DATE:20190813\nDTEND;VALUE=DATE:20190815\nDTSTAMP:20190813T140100Z\nUID:b64lookingValue==\nSEQUENCE:0\nSUMMARY:Word \\\\\\\\ \\\\; \\\\n\nRRULE:FREQ=MONTHLY;INTERVAL=3;UNTIL=20190919\nEND:VEVENT\nEND:VCALENDAR`\n\t\t\t\t.split(\"\\n\")\n\t\t\t\t.join(\"\\r\\n\")\n\t\t\tconst zone = \"Europe/Berlin\"\n\t\t\tconst versionNumber = \"3.57.6\"\n\t\t\tconst parsed = parseCalendarStringData(text, zone)\n\t\t\tconst serialized = serializeCalendar(\n\t\t\t\tversionNumber,\n\t\t\t\tparsed.contents.map(({ event, alarms }) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tevent: Object.assign({}, event, {\n\t\t\t\t\t\t\t_id: [\"123\", \"456\"],\n\t\t\t\t\t\t}),\n\t\t\t\t\t\talarms: alarms.map((alarmInfo) =>\n\t\t\t\t\t\t\tcreateTestEntity(UserAlarmInfoTypeRef, {\n\t\t\t\t\t\t\t\talarmInfo: alarmInfo as AlarmInfo,\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t),\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t\tnow,\n\t\t\t\tzone,\n\t\t\t)\n\t\t\to(serialized).equals(text)\n\t\t})\n\t})\n\to.spec(\"sortOutParsedEvents\", function () {\n\t\to(\"repeated progenitors are skipped\", function () {\n\t\t\tconst progenitor1 = createTestEntity(CalendarEventTypeRef, {\n\t\t\t\tuid: \"hello\",\n\t\t\t\tstartTime: getDateInZone(\"2023-01-02T13:00\"),\n\t\t\t\tendTime: getDateInZone(\"2023-01-02T13:05\"),\n\t\t\t}) as Require<\"uid\", CalendarEvent>\n\t\t\tconst progenitor2 = createTestEntity(CalendarEventTypeRef, {\n\t\t\t\tuid: \"hello\",\n\t\t\t\tstartTime: getDateInZone(\"2023-01-01T13:00\"),\n\t\t\t\tendTime: getDateInZone(\"2023-01-01T13:05\"),\n\t\t\t}) as Require<\"uid\", CalendarEvent>\n\t\t\tconst { rejectedEvents, eventsForCreation } = sortOutParsedEvents(\n\t\t\t\t[\n\t\t\t\t\t{ event: progenitor1, alarms: [] },\n\t\t\t\t\t{\n\t\t\t\t\t\tevent: progenitor2,\n\t\t\t\t\t\talarms: [],\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\t[],\n\t\t\t\tcreateTestEntity(CalendarGroupRootTypeRef),\n\t\t\t\tzone,\n\t\t\t)\n\t\t\to(eventsForCreation[0].event).equals(progenitor1)\n\t\t\to(rejectedEvents.get(EventImportRejectionReason.Duplicate)?.[0]).equals(progenitor2)\n\t\t})\n\t\to(\"imported altered instances are added as exclusions\", function () {\n\t\t\tconst progenitor = createTestEntity(CalendarEventTypeRef, {\n\t\t\t\tuid: \"hello\",\n\t\t\t\tstartTime: getDateInZone(\"2023-01-02T13:00\"),\n\t\t\t\tendTime: getDateInZone(\"2023-01-02T13:05\"),\n\t\t\t\trepeatRule: createTestEntity(RepeatRuleTypeRef),\n\t\t\t}) as Require<\"uid\", CalendarEvent>\n\t\t\tconst altered = createTestEntity(CalendarEventTypeRef, {\n\t\t\t\tuid: \"hello\",\n\t\t\t\tstartTime: getDateInZone(\"2023-01-02T14:00\"),\n\t\t\t\tendTime: getDateInZone(\"2023-01-02T14:05\"),\n\t\t\t\trecurrenceId: getDateInZone(\"2023-01-02T13:00\"),\n\t\t\t}) as Require<\"uid\", CalendarEvent>\n\t\t\tconst { rejectedEvents, eventsForCreation } = sortOutParsedEvents(\n\t\t\t\t[\n\t\t\t\t\t{ event: progenitor, alarms: [] },\n\t\t\t\t\t{ event: altered, alarms: [] },\n\t\t\t\t],\n\t\t\t\t[],\n\t\t\t\tcreateTestEntity(CalendarGroupRootTypeRef),\n\t\t\t\tzone,\n\t\t\t)\n\t\t\to(rejectedEvents.size).equals(0)\n\t\t\to(eventsForCreation[0].event.repeatRule?.excludedDates[0].date.getTime()).equals(altered.recurrenceId?.getTime())\n\t\t})\n\t})\n\n\to.spec(\"serializeRepeatRule\", function () {\n\t\to(\"when RRULE is UNTIL and not all date the timestamp of the end of last day is written\", function () {\n\t\t\tconst repeatRule = createTestEntity(RepeatRuleTypeRef, {\n\t\t\t\tendType: EndType.UntilDate,\n\t\t\t\tendValue: String(DateTime.fromObject({ year: 2019, month: 9, day: 20 }, { zone: \"UTC\" }).toMillis()),\n\t\t\t\tfrequency: RepeatPeriod.MONTHLY,\n\t\t\t\tinterval: \"3\",\n\t\t\t})\n\t\t\to(serializeRepeatRule(repeatRule, false, \"Asia/Krasnoyarsk\")).deepEquals([\"RRULE:FREQ=MONTHLY;INTERVAL=3;UNTIL=20190919T235959Z\"])\n\t\t})\n\t})\n\n\to.spec(\"serializeExcludedDates\", function () {\n\t\to(\"no excluded dates\", function () {\n\t\t\to(serializeExcludedDates([], \"Europe/Berlin\")).deepEquals([])\n\t\t})\n\n\t\to(\"one excluded date\", function () {\n\t\t\to(serializeExcludedDates([createTestEntity(DateWrapperTypeRef, { date: new Date(\"2023-01-14T22:00:00Z\") })], \"Europe/Berlin\")).deepEquals([\n\t\t\t\t\"EXDATE;TZID=Europe/Berlin:20230114T230000\",\n\t\t\t])\n\t\t})\n\n\t\to(\"more than one excluded date\", function () {\n\t\t\to(\n\t\t\t\tserializeExcludedDates(\n\t\t\t\t\t[\n\t\t\t\t\t\tcreateTestEntity(DateWrapperTypeRef, { date: new Date(\"2023-01-14T22:00:00Z\") }),\n\t\t\t\t\t\tcreateTestEntity(DateWrapperTypeRef, { date: new Date(\"2023-01-21T22:00:00Z\") }),\n\t\t\t\t\t],\n\t\t\t\t\t\"Europe/Berlin\",\n\t\t\t\t),\n\t\t\t).deepEquals([\"EXDATE;TZID=Europe/Berlin:20230114T230000,20230121T230000\"])\n\t\t})\n\t})\n\n\to(\"serializeTrigger\", () => {\n\t\to(serializeTrigger(\"5M\")).equals(\"-PT5M\")\n\t\to(serializeTrigger(\"3H\")).equals(\"-PT3H\")\n\t\to(serializeTrigger(\"30H\")).equals(\"-PT30H\")\n\t\to(serializeTrigger(\"1D\")).equals(\"-P1D\")\n\t\to(serializeTrigger(\"10D\")).equals(\"-P10D\")\n\t\to(serializeTrigger(\"5W\")).equals(\"-P5W\")\n\t\to(serializeTrigger(\"50W\")).equals(\"-P50W\")\n\t})\n})\n","import { AlarmScheduler } from \"../../../src/common/calendar/date/AlarmScheduler.js\"\nimport o from \"@tutao/otest\"\nimport { DateTime } from \"luxon\"\nimport { AlarmInfoTypeRef, DateWrapperTypeRef, RepeatRuleTypeRef } from \"../../../src/common/api/entities/sys/TypeRefs.js\"\nimport { EndType, RepeatPeriod } from \"../../../src/common/api/common/TutanotaConstants.js\"\nimport { DateProvider } from \"../../../src/common/api/common/DateProvider.js\"\nimport { createTestEntity, SchedulerMock } from \"../TestUtils.js\"\nimport { spy } from \"@tutao/tutanota-test-utils\"\n\no.spec(\"AlarmScheduler\", function () {\n\tlet alarmScheduler: AlarmScheduler\n\tlet scheduler: SchedulerMock\n\tlet now: DateTime\n\tconst dateProvider: DateProvider = {\n\t\tnow: () => now.toMillis(),\n\t\ttimeZone: () => \"Europe/Berlin\",\n\t}\n\to.beforeEach(function () {\n\t\tnow = DateTime.fromISO(\"2021-04-20T20:00Z\")\n\t\tscheduler = new SchedulerMock()\n\t\talarmScheduler = new AlarmScheduler(dateProvider, scheduler)\n\t})\n\to.spec(\"scheduleAlarm\", function () {\n\t\to(\"non-repeating\", function () {\n\t\t\tconst eventInfo = {\n\t\t\t\tstartTime: DateTime.fromISO(\"2021-04-21T20:00:00Z\").toJSDate(),\n\t\t\t\tendTime: DateTime.fromISO(\"2021-04-21T20:30Z\").toJSDate(),\n\t\t\t\tsummary: \"summary\",\n\t\t\t}\n\t\t\tconst alarmInfo = createTestEntity(AlarmInfoTypeRef, {\n\t\t\t\ttrigger: \"10M\",\n\t\t\t})\n\t\t\tconst notificationSender = spy()\n\t\t\talarmScheduler.scheduleAlarm(eventInfo, alarmInfo, null, notificationSender)\n\t\t\tconst expectedAlarmTime = DateTime.fromISO(\"2021-04-21T19:50Z\").toMillis()\n\t\t\tconst scheduled = scheduler.scheduledAt.get(expectedAlarmTime)\n\n\t\t\tif (scheduled == null) {\n\t\t\t\tthrow new Error(\"Did not schedule, \" + Array.from(scheduler.scheduledAt.keys()).map(Date).join(\",\"))\n\t\t\t}\n\n\t\t\tscheduled.thunk()\n\t\t\to(notificationSender.callCount).equals(1)\n\t\t})\n\t\to(\"repeating daily 3 times\", function () {\n\t\t\tconst eventInfo = {\n\t\t\t\tstartTime: DateTime.fromISO(\"2021-04-21T20:00:00Z\").toJSDate(),\n\t\t\t\tendTime: DateTime.fromISO(\"2021-04-21T20:30Z\").toJSDate(),\n\t\t\t\tsummary: \"summary\",\n\t\t\t}\n\t\t\tconst alarmInfo = createTestEntity(AlarmInfoTypeRef, {\n\t\t\t\ttrigger: \"30M\",\n\t\t\t})\n\t\t\tconst repeatRule = createTestEntity(RepeatRuleTypeRef, {\n\t\t\t\tfrequency: RepeatPeriod.DAILY,\n\t\t\t\tinterval: \"1\",\n\t\t\t\tendType: EndType.Count,\n\t\t\t\tendValue: \"3\",\n\t\t\t\ttimeZone: \"Europe/Berlin\",\n\t\t\t})\n\t\t\tconst notificationSender = spy()\n\t\t\talarmScheduler.scheduleAlarm(eventInfo, alarmInfo, repeatRule, notificationSender)\n\t\t\tconst expectedTimes = [DateTime.fromISO(\"2021-04-21T19:30Z\"), DateTime.fromISO(\"2021-04-22T19:30Z\"), DateTime.fromISO(\"2021-04-23T19:30Z\")]\n\n\t\t\tfor (const [idx, time] of expectedTimes.entries()) {\n\t\t\t\tconst scheduled = scheduler.scheduledAt.get(time.toMillis())\n\n\t\t\t\tif (scheduled == null) {\n\t\t\t\t\tconst got = Array.from(scheduler.scheduledAt.keys()).map((t) => DateTime.fromMillis(t).toISO())\n\t\t\t\t\tthrow new Error(`Did not schedule at ${time.toISO()}, but ${got.join(\",\")}`)\n\t\t\t\t}\n\n\t\t\t\tnow = now.plus({\n\t\t\t\t\tdays: 1,\n\t\t\t\t})\n\t\t\t\tscheduled.thunk()\n\t\t\t\to(notificationSender.callCount).equals(idx + 1)\n\t\t\t}\n\t\t})\n\t\to(\"repeating with exclusions\", function () {\n\t\t\tconst eventInfo = {\n\t\t\t\tstartTime: DateTime.fromISO(\"2021-04-21T20:00:00Z\").toJSDate(),\n\t\t\t\tendTime: DateTime.fromISO(\"2021-04-21T20:30Z\").toJSDate(),\n\t\t\t\tsummary: \"summary\",\n\t\t\t}\n\t\t\tconst alarmInfo = createTestEntity(AlarmInfoTypeRef, {\n\t\t\t\ttrigger: \"30M\",\n\t\t\t})\n\t\t\tconst repeatRule = createTestEntity(RepeatRuleTypeRef, {\n\t\t\t\tfrequency: RepeatPeriod.DAILY,\n\t\t\t\tinterval: \"1\",\n\t\t\t\tendType: EndType.Count,\n\t\t\t\tendValue: \"3\",\n\t\t\t\ttimeZone: \"Europe/Berlin\",\n\t\t\t\texcludedDates: [createTestEntity(DateWrapperTypeRef, { date: DateTime.fromISO(\"2021-04-22T20:00Z\").toJSDate() })],\n\t\t\t})\n\t\t\tconst notificationSender = spy()\n\t\t\talarmScheduler.scheduleAlarm(eventInfo, alarmInfo, repeatRule, notificationSender)\n\t\t\tconst expectedTimes = [DateTime.fromISO(\"2021-04-21T19:30Z\"), DateTime.fromISO(\"2021-04-23T19:30Z\")]\n\n\t\t\tfor (const [idx, time] of expectedTimes.entries()) {\n\t\t\t\tconst scheduled = scheduler.scheduledAt.get(time.toMillis())\n\n\t\t\t\tif (scheduled == null) {\n\t\t\t\t\tconst got = Array.from(scheduler.scheduledAt.keys()).map((t) => DateTime.fromMillis(t).toISO())\n\t\t\t\t\tthrow new Error(`Did not schedule at ${time.toISO()}, but ${got.join(\",\")}`)\n\t\t\t\t}\n\n\t\t\t\tnow = now.plus({\n\t\t\t\t\tdays: 1,\n\t\t\t\t})\n\t\t\t\tscheduled.thunk()\n\t\t\t\to(notificationSender.callCount).equals(idx + 1)\n\t\t\t}\n\t\t})\n\t})\n\to.spec(\"cancel alarm\", function () {\n\t\to(\"single\", function () {\n\t\t\tconst eventInfo = {\n\t\t\t\tstartTime: DateTime.fromISO(\"2021-04-21T20:00:00Z\").toJSDate(),\n\t\t\t\tendTime: DateTime.fromISO(\"2021-04-21T20:30Z\").toJSDate(),\n\t\t\t\tsummary: \"summary\",\n\t\t\t}\n\t\t\tconst alarmInfo = createTestEntity(AlarmInfoTypeRef, {\n\t\t\t\ttrigger: \"10M\",\n\t\t\t\talarmIdentifier: \"identifier\",\n\t\t\t})\n\t\t\tconst notificationSender = spy()\n\t\t\talarmScheduler.scheduleAlarm(eventInfo, alarmInfo, null, notificationSender)\n\t\t\tconst expectedAlarmTime = DateTime.fromISO(\"2021-04-21T19:50Z\").toMillis()\n\t\t\tconst scheduled = scheduler.scheduledAt.get(expectedAlarmTime)\n\n\t\t\tif (scheduled == null) {\n\t\t\t\tthrow new Error(\"Did not schedule, \" + Array.from(scheduler.scheduledAt.keys()).map(Date).join(\",\"))\n\t\t\t}\n\n\t\t\talarmScheduler.cancelAlarm(alarmInfo.alarmIdentifier)\n\t\t\to(scheduler.cancelledAt.has(scheduled.id)).equals(true)(\"was unscheduled\")\n\t\t})\n\t\to(\"repeating\", function () {\n\t\t\tconst eventInfo = {\n\t\t\t\tstartTime: DateTime.fromISO(\"2021-04-21T20:00:00Z\").toJSDate(),\n\t\t\t\tendTime: DateTime.fromISO(\"2021-04-21T20:30Z\").toJSDate(),\n\t\t\t\tsummary: \"summary\",\n\t\t\t}\n\t\t\tconst alarmInfo = createTestEntity(AlarmInfoTypeRef, {\n\t\t\t\ttrigger: \"30M\",\n\t\t\t})\n\t\t\tconst repeatRule = createTestEntity(RepeatRuleTypeRef, {\n\t\t\t\tfrequency: RepeatPeriod.DAILY,\n\t\t\t\tinterval: \"1\",\n\t\t\t\tendType: EndType.Count,\n\t\t\t\tendValue: \"3\",\n\t\t\t\ttimeZone: \"Europe/Berlin\",\n\t\t\t})\n\t\t\tconst notificationSender = spy()\n\t\t\talarmScheduler.scheduleAlarm(eventInfo, alarmInfo, repeatRule, notificationSender)\n\t\t\tconst scheduled = Array.from(scheduler.scheduledAt.values()).map((idThunk) => idThunk.id)\n\t\t\to(scheduled.length).equals(1)\n\t\t\talarmScheduler.cancelAlarm(alarmInfo.alarmIdentifier)\n\t\t\to(Array.from(scheduler.cancelledAt)).deepEquals(scheduled)\n\t\t})\n\t})\n})\n","import m, { Child, Children, Component, Vnode, VnodeDOM } from \"mithril\"\nimport { incrementDate, isSameDay } from \"@tutao/tutanota-utils\"\nimport { lang } from \"../../../common/misc/LanguageViewModel\"\nimport { getTimeZone, isBirthdayEvent } from \"../../../common/calendar/date/CalendarUtils\"\nimport { CalendarEvent, Contact } from \"../../../common/api/entities/tutanota/TypeRefs.js\"\nimport type { GroupColors } from \"./CalendarView\"\nimport type { CalendarEventBubbleClickHandler, CalendarEventBubbleKeyDownHandler, CalendarPreviewModels } from \"./CalendarViewModel\"\nimport { styles } from \"../../../common/gui/styles.js\"\nimport { DateTime } from \"luxon\"\nimport { CalendarAgendaItemView } from \"./CalendarAgendaItemView.js\"\nimport ColumnEmptyMessageBox from \"../../../common/gui/base/ColumnEmptyMessageBox.js\"\nimport { BootIcons } from \"../../../common/gui/base/icons/BootIcons.js\"\nimport { theme } from \"../../../common/gui/theme.js\"\nimport { px, size } from \"../../../common/gui/size.js\"\nimport { DaySelector } from \"../gui/day-selector/DaySelector.js\"\nimport { CalendarEventPreviewViewModel } from \"../gui/eventpopup/CalendarEventPreviewViewModel.js\"\nimport { EventDetailsView } from \"./EventDetailsView.js\"\nimport { getElementId, getListId } from \"../../../common/api/common/utils/EntityUtils.js\"\nimport { isAllDayEvent, setNextHalfHour } from \"../../../common/api/common/utils/CommonCalendarUtils.js\"\nimport { CalendarTimeIndicator } from \"./CalendarTimeIndicator.js\"\nimport { Time } from \"../../../common/calendar/date/Time.js\"\nimport { DaysToEvents } from \"../../../common/calendar/date/CalendarEventsRepository.js\"\n\nimport { formatEventTimes, getEventColor, shouldDisplayEvent } from \"../gui/CalendarGuiUtils.js\"\nimport { PageView } from \"../../../common/gui/base/PageView.js\"\nimport { getIfLargeScroll } from \"../../../common/gui/base/GuiUtils.js\"\nimport { isKeyPressed } from \"../../../common/misc/KeyManager.js\"\nimport { Keys } from \"../../../common/api/common/TutanotaConstants.js\"\nimport { MainCreateButton } from \"../../../common/gui/MainCreateButton.js\"\nimport { client } from \"../../../common/misc/ClientDetector.js\"\nimport { CalendarContactPreviewViewModel } from \"../gui/eventpopup/CalendarContactPreviewViewModel.js\"\nimport { ContactCardViewer } from \"../../../mail-app/contacts/view/ContactCardViewer.js\"\nimport { PartialRecipient } from \"../../../common/api/common/recipients/Recipient.js\"\n\nexport type CalendarAgendaViewAttrs = {\n\tselectedDate: Date\n\tselectedTime?: Time\n\t/**\n\t * maps start of day timestamp to events on that day\n\t */\n\teventsForDays: DaysToEvents\n\tamPmFormat: boolean\n\tonEventClicked: CalendarEventBubbleClickHandler\n\tonEventKeyDown: CalendarEventBubbleKeyDownHandler\n\tgroupColors: GroupColors\n\thiddenCalendars: ReadonlySet<Id>\n\tstartOfTheWeekOffset: number\n\tisDaySelectorExpanded: boolean\n\t/** when the user explicitly pressed on a day to show */\n\tonShowDate: (date: Date) => unknown\n\t/**  when the selected date was changed  */\n\tonDateSelected: (date: Date) => unknown\n\teventPreviewModel: CalendarPreviewModels | null\n\tscrollPosition: number\n\tonScrollPositionChange: (newPosition: number) => unknown\n\tonViewChanged: (vnode: VnodeDOM) => unknown\n\tonNewEvent: (date: Date | null) => unknown\n\tonEditContact: (contact: Contact) => unknown\n\tonWriteMail: (recipient: PartialRecipient) => unknown\n}\n\nexport class CalendarAgendaView implements Component<CalendarAgendaViewAttrs> {\n\tprivate lastScrollPosition: number | null = null\n\tprivate lastScrolledDate: Date | null = null\n\tprivate listDom: HTMLElement | null = null\n\n\tview({ attrs }: Vnode<CalendarAgendaViewAttrs>): Children {\n\t\tconst isDesktopLayout = styles.isDesktopLayout()\n\t\tconst selectedDate = attrs.selectedDate\n\n\t\tlet containerStyle\n\n\t\tif (isDesktopLayout) {\n\t\t\tcontainerStyle = {\n\t\t\t\tmarginLeft: \"5px\",\n\t\t\t\tmarginBottom: px(size.hpad_large),\n\t\t\t}\n\t\t} else {\n\t\t\tcontainerStyle = {}\n\t\t}\n\n\t\tconst agendaChildren = this.renderAgenda(attrs, isDesktopLayout)\n\n\t\tif (attrs.selectedTime && attrs.eventsForDays.size > 0 && this.lastScrolledDate != attrs.selectedDate) {\n\t\t\tthis.lastScrolledDate = attrs.selectedDate\n\t\t\trequestAnimationFrame(() => {\n\t\t\t\tif (this.listDom) {\n\t\t\t\t\tthis.listDom.scrollTop = attrs.scrollPosition\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\treturn m(\".fill-absolute.flex.col\", { class: isDesktopLayout ? \"mlr-l height-100p\" : \"mlr-safe-inset\", style: containerStyle }, [\n\t\t\tthis.renderDateSelector(attrs, isDesktopLayout, selectedDate),\n\t\t\tm(\n\t\t\t\t\".rel.flex-grow.flex.col\",\n\t\t\t\t{\n\t\t\t\t\tclass: isDesktopLayout ? \"overflow-hidden\" : \"content-bg scroll border-radius-top-left-big border-radius-top-right-big\",\n\t\t\t\t\toncreate: (vnode: VnodeDOM) => {\n\t\t\t\t\t\tif (!isDesktopLayout) this.listDom = vnode.dom as HTMLElement\n\t\t\t\t\t},\n\t\t\t\t\tonupdate: (vnode: VnodeDOM) => {\n\t\t\t\t\t\tif (!isDesktopLayout) {\n\t\t\t\t\t\t\tthis.handleScrollOnUpdate(attrs, vnode)\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tagendaChildren,\n\t\t\t),\n\t\t])\n\t}\n\n\tprivate renderDateSelector(attrs: CalendarAgendaViewAttrs, isDesktopLayout: boolean, selectedDate: Date): Children {\n\t\t// This time width is used to create a container above the day slider\n\t\t// So the hidden dates \"seems\" to be following the same margin of the view\n\t\tconst timeWidth = !isDesktopLayout ? size.calendar_hour_width_mobile : size.calendar_hour_width\n\t\treturn isDesktopLayout\n\t\t\t? null\n\t\t\t: m(\n\t\t\t\t\t\"\",\n\t\t\t\t\tm(\n\t\t\t\t\t\t\".header-bg.pb-s.overflow-hidden\",\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\t\"margin-left\": px(size.calendar_hour_width_mobile),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tm(DaySelector, {\n\t\t\t\t\t\t\tselectedDate: selectedDate,\n\t\t\t\t\t\t\tonDateSelected: (selectedDate: Date) => attrs.onDateSelected(selectedDate),\n\t\t\t\t\t\t\twide: true,\n\t\t\t\t\t\t\tstartOfTheWeekOffset: attrs.startOfTheWeekOffset,\n\t\t\t\t\t\t\tisDaySelectorExpanded: attrs.isDaySelectorExpanded,\n\t\t\t\t\t\t\thandleDayPickerSwipe: (isNext: boolean) => {\n\t\t\t\t\t\t\t\tconst sign = isNext ? 1 : -1\n\t\t\t\t\t\t\t\tconst duration = {\n\t\t\t\t\t\t\t\t\tmonth: sign * (attrs.isDaySelectorExpanded ? 1 : 0),\n\t\t\t\t\t\t\t\t\tweek: sign * (attrs.isDaySelectorExpanded ? 0 : 1),\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tattrs.onDateSelected(DateTime.fromJSDate(attrs.selectedDate).plus(duration).toJSDate())\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tshowDaySelection: true,\n\t\t\t\t\t\t\thighlightToday: true,\n\t\t\t\t\t\t\thighlightSelectedWeek: false,\n\t\t\t\t\t\t\tuseNarrowWeekName: styles.isSingleColumnLayout(),\n\t\t\t\t\t\t\thasEventOn: (date) =>\n\t\t\t\t\t\t\t\tattrs.eventsForDays.get(date.getTime())?.some((event) => shouldDisplayEvent(event, attrs.hiddenCalendars)) ?? false,\n\t\t\t\t\t\t}),\n\t\t\t\t\t),\n\t\t\t  )\n\t}\n\n\tprivate renderDesktopEventList(attrs: CalendarAgendaViewAttrs): Children {\n\t\tconst events = this.getEventsToRender(attrs.selectedDate, attrs)\n\t\tif (events.length === 0) {\n\t\t\treturn m(ColumnEmptyMessageBox, {\n\t\t\t\ticon: BootIcons.Calendar,\n\t\t\t\tmessage: \"noEntries_msg\",\n\t\t\t\tcolor: theme.list_message_bg,\n\t\t\t})\n\t\t} else {\n\t\t\treturn m(\".flex.mb-s.col\", this.renderEventsForDay(events, getTimeZone(), attrs.selectedDate, attrs))\n\t\t}\n\t}\n\n\tprivate renderMobileAgendaView(attrs: CalendarAgendaViewAttrs) {\n\t\tconst day = attrs.selectedDate\n\t\tconst previousDay = incrementDate(new Date(day), -1)\n\t\tconst nextDay = incrementDate(new Date(day), 1)\n\t\treturn m(PageView, {\n\t\t\tpreviousPage: {\n\t\t\t\tkey: previousDay.getTime(),\n\t\t\t\tnodes: this.renderMobileEventList(previousDay, attrs),\n\t\t\t},\n\t\t\tcurrentPage: {\n\t\t\t\tkey: day.getTime(),\n\t\t\t\tnodes: this.renderMobileEventList(day, attrs),\n\t\t\t},\n\t\t\tnextPage: {\n\t\t\t\tkey: nextDay.getTime(),\n\t\t\t\tnodes: this.renderMobileEventList(nextDay, attrs),\n\t\t\t},\n\t\t\tonChangePage: (next) => attrs.onDateSelected(next ? nextDay : previousDay),\n\t\t})\n\t}\n\n\tprivate renderMobileEventList(day: Date, attrs: CalendarAgendaViewAttrs): Children {\n\t\tconst events = this.getEventsToRender(day, attrs)\n\t\tif (events.length === 0) {\n\t\t\treturn m(ColumnEmptyMessageBox, {\n\t\t\t\ticon: BootIcons.Calendar,\n\t\t\t\tmessage: \"noEntries_msg\",\n\t\t\t\tcolor: theme.list_message_bg,\n\t\t\t\tbottomContent: !client.isCalendarApp()\n\t\t\t\t\t? m(MainCreateButton, {\n\t\t\t\t\t\t\tlabel: \"newEvent_action\",\n\t\t\t\t\t\t\tclick: (e: MouseEvent) => {\n\t\t\t\t\t\t\t\tlet newDate = new Date(attrs.selectedDate)\n\t\t\t\t\t\t\t\tattrs.onNewEvent(setNextHalfHour(newDate))\n\n\t\t\t\t\t\t\t\te.preventDefault()\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tclass: \"mt-s\",\n\t\t\t\t\t  })\n\t\t\t\t\t: null,\n\t\t\t})\n\t\t} else {\n\t\t\treturn m(\n\t\t\t\t\".pt-s.flex.mb-s.col.overflow-y-scroll.height-100p\",\n\t\t\t\t{\n\t\t\t\t\tstyle: { marginLeft: px(size.calendar_hour_width_mobile) },\n\t\t\t\t\toncreate: (vnode: VnodeDOM) => {\n\t\t\t\t\t\tattrs.onViewChanged(vnode)\n\t\t\t\t\t},\n\t\t\t\t\tonupdate: (vnode: VnodeDOM) => {\n\t\t\t\t\t\tthis.handleScrollOnUpdate(attrs, vnode)\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tthis.renderEventsForDay(events, getTimeZone(), day, attrs),\n\t\t\t)\n\t\t}\n\t}\n\n\tprivate getEventsToRender(day: Date, attrs: CalendarAgendaViewAttrs): readonly CalendarEvent[] {\n\t\treturn (attrs.eventsForDays.get(day.getTime()) ?? []).filter((e) => {\n\t\t\treturn shouldDisplayEvent(e, attrs.hiddenCalendars)\n\t\t})\n\t}\n\n\tprivate renderAgenda(attrs: CalendarAgendaViewAttrs, isDesktopLayout: boolean): Children {\n\t\tif (!isDesktopLayout) return this.renderMobileAgendaView(attrs)\n\n\t\treturn m(\".flex.flex-grow.height-100p\", [\n\t\t\tm(\n\t\t\t\t\".flex-grow.rel.overflow-y-scroll\",\n\t\t\t\t{\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\"min-width\": px(size.second_col_min_width),\n\t\t\t\t\t\t\"max-width\": px(size.second_col_max_width),\n\t\t\t\t\t},\n\t\t\t\t\toncreate: (vnode: VnodeDOM) => {\n\t\t\t\t\t\tthis.listDom = vnode.dom as HTMLElement\n\t\t\t\t\t\tattrs.onViewChanged(vnode)\n\t\t\t\t\t},\n\t\t\t\t\tonupdate: (vnode: VnodeDOM) => {\n\t\t\t\t\t\tthis.handleScrollOnUpdate(attrs, vnode)\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t[this.renderDesktopEventList(attrs)],\n\t\t\t),\n\t\t\tm(\n\t\t\t\t\".ml-l.flex-grow.scroll\",\n\t\t\t\t{\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\"min-width\": px(size.third_col_min_width),\n\t\t\t\t\t\t\"max-width\": px(size.third_col_max_width),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tattrs.eventPreviewModel == null\n\t\t\t\t\t? m(\n\t\t\t\t\t\t\t\".rel.flex-grow.height-100p\",\n\t\t\t\t\t\t\tm(ColumnEmptyMessageBox, {\n\t\t\t\t\t\t\t\ticon: BootIcons.Calendar,\n\t\t\t\t\t\t\t\tmessage: \"noEventSelect_msg\",\n\t\t\t\t\t\t\t\tcolor: theme.list_message_bg,\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t  )\n\t\t\t\t\t: this.renderEventPreview(attrs),\n\t\t\t),\n\t\t])\n\t}\n\n\tprivate getBirthdayEventModel(eventPreviewModel: CalendarPreviewModels | null): CalendarContactPreviewViewModel | null {\n\t\tif (isBirthdayEvent((eventPreviewModel as CalendarContactPreviewViewModel).event?.uid)) {\n\t\t\treturn eventPreviewModel as CalendarContactPreviewViewModel\n\t\t}\n\t\treturn null\n\t}\n\n\tprivate renderEventPreview(attrs: CalendarAgendaViewAttrs) {\n\t\tconst { eventPreviewModel, onEditContact, onWriteMail } = attrs\n\t\tconst model = this.getBirthdayEventModel(eventPreviewModel)\n\n\t\tif (model) {\n\t\t\treturn m(\n\t\t\t\t\".flex.col\",\n\t\t\t\tm(ContactCardViewer, {\n\t\t\t\t\tcontact: model.contact,\n\t\t\t\t\teditAction: onEditContact,\n\t\t\t\t\tonWriteMail: onWriteMail,\n\t\t\t\t\textendedActions: true,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tmargin: \"0\",\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t)\n\t\t}\n\t\treturn m(EventDetailsView, {\n\t\t\teventPreviewModel: eventPreviewModel as CalendarEventPreviewViewModel,\n\t\t})\n\t}\n\n\t// Updates the view model's copy of the view dom and scrolls to the current `scrollPosition`\n\tprivate handleScrollOnUpdate(attrs: CalendarAgendaViewAttrs, vnode: VnodeDOM): void {\n\t\tattrs.onViewChanged(vnode)\n\t\tif (getIfLargeScroll(this.lastScrollPosition, attrs.scrollPosition)) {\n\t\t\tvnode.dom.scrollTo({ top: attrs.scrollPosition, behavior: \"smooth\" })\n\t\t} else {\n\t\t\tvnode.dom.scrollTop = attrs.scrollPosition\n\t\t}\n\t\tthis.lastScrollPosition = attrs.scrollPosition\n\t}\n\n\tprivate renderEventsForDay(events: readonly CalendarEvent[], zone: string, day: Date, attrs: CalendarAgendaViewAttrs) {\n\t\tconst { groupColors: colors, onEventClicked: click, onEventKeyDown: keyDown, eventPreviewModel: modelPromise } = attrs\n\t\tconst agendaItemHeight = 62\n\t\tconst agendaGap = 3\n\t\tconst currentTime = attrs.selectedTime?.toDate()\n\t\tlet newScrollPosition = 0\n\n\t\t// Find what event to display a time indicator for; do this even if it is not the same day, as we might want to refresh the view when the date rolls over to this day\n\t\tconst eventToShowTimeIndicator = earliestEventToShowTimeIndicator(events, new Date())\n\t\t// Flat list structure so that we don't have problems with keys\n\t\tlet eventsNodes: Child[] = []\n\t\tfor (const [eventIndex, event] of events.entries()) {\n\t\t\tif (eventToShowTimeIndicator === eventIndex && isSameDay(new Date(), event.startTime)) {\n\t\t\t\teventsNodes.push(m(\".mt-xs.mb-xs\", { key: \"timeIndicator\" }, m(CalendarTimeIndicator, { circleLeftTangent: true })))\n\t\t\t}\n\t\t\tif (currentTime && event.startTime < currentTime) {\n\t\t\t\tnewScrollPosition += agendaItemHeight + agendaGap\n\t\t\t}\n\t\t\teventsNodes.push(\n\t\t\t\tm(CalendarAgendaItemView, {\n\t\t\t\t\tkey: getListId(event) + getElementId(event) + event.startTime.toISOString(),\n\t\t\t\t\tevent: event,\n\t\t\t\t\tcolor: getEventColor(event, colors),\n\t\t\t\t\tselected: event === (modelPromise as CalendarEventPreviewViewModel)?.calendarEvent,\n\t\t\t\t\tclick: (domEvent) => click(event, domEvent),\n\t\t\t\t\tkeyDown: (domEvent) => {\n\t\t\t\t\t\tconst target = domEvent.target as HTMLElement\n\t\t\t\t\t\tif (isKeyPressed(domEvent.key, Keys.UP, Keys.K) && !domEvent.repeat) {\n\t\t\t\t\t\t\tconst previousItem = target.previousElementSibling as HTMLElement | null\n\t\t\t\t\t\t\tconst previousIndex = eventIndex - 1\n\t\t\t\t\t\t\tif (previousItem) {\n\t\t\t\t\t\t\t\tpreviousItem.focus()\n\t\t\t\t\t\t\t\tattrs.onScrollPositionChange(previousItem.offsetTop)\n\t\t\t\t\t\t\t\tif (previousIndex >= 0 && !styles.isSingleColumnLayout()) {\n\t\t\t\t\t\t\t\t\tkeyDown(events[previousIndex], new KeyboardEvent(\"keydown\", { key: Keys.RETURN.code }))\n\t\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tattrs.onScrollPositionChange(0)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (isKeyPressed(domEvent.key, Keys.DOWN, Keys.J) && !domEvent.repeat) {\n\t\t\t\t\t\t\tconst nextItem = target.nextElementSibling as HTMLElement | null\n\t\t\t\t\t\t\tconst nextIndex = eventIndex + 1\n\t\t\t\t\t\t\tif (nextItem) {\n\t\t\t\t\t\t\t\tnextItem.focus()\n\t\t\t\t\t\t\t\tattrs.onScrollPositionChange(nextItem.offsetTop)\n\t\t\t\t\t\t\t\tif (nextIndex < events.length && !styles.isSingleColumnLayout()) {\n\t\t\t\t\t\t\t\t\tkeyDown(events[nextIndex], new KeyboardEvent(\"keydown\", { key: Keys.RETURN.code }))\n\t\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tattrs.onScrollPositionChange(target.offsetTop)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tkeyDown(event, domEvent)\n\t\t\t\t\t},\n\t\t\t\t\tzone,\n\t\t\t\t\tday: day,\n\t\t\t\t\theight: agendaItemHeight,\n\t\t\t\t\ttimeText: formatEventTimes(day, event, zone),\n\t\t\t\t}),\n\t\t\t)\n\t\t}\n\t\t// one agenda item height needs to be removed to show the correct item\n\t\t// Do not scroll to the next element if a scroll command (page up etc.) is given\n\t\tif (attrs.scrollPosition === this.lastScrollPosition) attrs.onScrollPositionChange(newScrollPosition - (agendaItemHeight + agendaGap))\n\t\treturn events.length === 0\n\t\t\t? m(\".mb-s\", lang.get(\"noEntries_msg\"))\n\t\t\t: m(\n\t\t\t\t\t\".flex.col\",\n\t\t\t\t\t{\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\tgap: px(agendaGap),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\teventsNodes,\n\t\t\t  )\n\t}\n}\n\n/**\n * Calculate the next event to occur with a given date; all-day events will be ignored\n * @param events list of events to check\n * @param date date to use\n * @return the index, or null if there is no next event\n */\nexport function earliestEventToShowTimeIndicator(events: readonly CalendarEvent[], date: Date): number | null {\n\t// We do not want to show the time indicator above any all day events\n\tconst firstNonAllDayEvent = events.findIndex((event) => !isAllDayEvent(event))\n\tif (firstNonAllDayEvent < 0) {\n\t\treturn null\n\t}\n\n\t// Next, we want to locate the first event where the start time has yet to be reached\n\tconst nonAllDayEvents = events.slice(firstNonAllDayEvent)\n\tconst nextEvent = nonAllDayEvents.findIndex((event) => event.startTime > date)\n\tif (nextEvent < 0) {\n\t\treturn null\n\t}\n\n\treturn nextEvent + firstNonAllDayEvent\n}\n","import o from \"@tutao/otest\"\nimport { CalendarEvent, CalendarEventTypeRef } from \"../../../src/common/api/entities/tutanota/TypeRefs.js\"\nimport { createTestEntity } from \"../TestUtils.js\"\nimport { incrementDate } from \"@tutao/tutanota-utils\"\nimport { earliestEventToShowTimeIndicator } from \"../../../src/calendar-app/calendar/view/CalendarAgendaView.js\"\n\no.spec(\"CalendarAgendaViewTest\", function () {\n\to(\"earliestEventToShowTimeIndicator\", () => {\n\t\tlet allDayStartDate = new Date()\n\t\tallDayStartDate.setUTCHours(0, 0, 0, 0)\n\n\t\tlet allDayEndDate = new Date(allDayStartDate)\n\t\tallDayEndDate.setUTCHours(0, 0, 0, 0)\n\t\tincrementDate(allDayEndDate, 1)\n\n\t\t// If there are two events with the same start time, prefer the one with the lower index\n\t\tlet actualEventStart = new Date(allDayStartDate)\n\t\tactualEventStart.setUTCHours(4, 0, 0, 0)\n\t\tlet actualEventEnd = new Date(allDayStartDate)\n\t\tactualEventEnd.setUTCHours(5, 0, 0, 0)\n\n\t\tconst sameTimeEventStart = actualEventStart\n\t\tlet sameTimeEventEnd = new Date(allDayStartDate)\n\t\tsameTimeEventEnd.setUTCHours(6, 0, 0, 0)\n\n\t\tlet nextEventStart = new Date(allDayStartDate)\n\t\tnextEventStart.setUTCHours(10, 0, 0, 0)\n\t\tlet nextEventEnd = new Date(allDayStartDate)\n\t\tnextEventEnd.setUTCHours(12, 0, 0, 0)\n\n\t\tconst events: CalendarEvent[] = [\n\t\t\tcreateTestEntity<CalendarEvent>(CalendarEventTypeRef, {\n\t\t\t\tstartTime: allDayStartDate,\n\t\t\t\tendTime: allDayEndDate,\n\t\t\t}),\n\t\t\tcreateTestEntity<CalendarEvent>(CalendarEventTypeRef, {\n\t\t\t\tstartTime: actualEventStart,\n\t\t\t\tendTime: actualEventEnd,\n\t\t\t}),\n\t\t\tcreateTestEntity<CalendarEvent>(CalendarEventTypeRef, {\n\t\t\t\tstartTime: sameTimeEventStart,\n\t\t\t\tendTime: sameTimeEventEnd,\n\t\t\t}),\n\t\t\tcreateTestEntity<CalendarEvent>(CalendarEventTypeRef, {\n\t\t\t\tstartTime: nextEventStart,\n\t\t\t\tendTime: nextEventEnd,\n\t\t\t}),\n\t\t]\n\n\t\to(earliestEventToShowTimeIndicator(events, allDayStartDate)).equals(1)(\"lower index preferred\")\n\t\to(earliestEventToShowTimeIndicator(events, actualEventStart)).equals(3)(\"if the date is equal, skip the event\")\n\t\to(earliestEventToShowTimeIndicator(events, nextEventStart)).equals(null)(\"no dates left\")\n\t\to(earliestEventToShowTimeIndicator(events, new Date(0))).equals(1)(\"even before the day, all-day events are skipped\")\n\t})\n})\n","import o from \"@tutao/otest\"\nimport { FaqModel } from \"../../../src/common/support/FaqModel.js\"\nimport { downcast } from \"@tutao/tutanota-utils\"\nimport { lang } from \"../../../src/common/misc/LanguageViewModel.js\"\nimport { spy } from \"@tutao/tutanota-test-utils\"\n\nasync function collect(generator: AsyncGenerator): Promise<Array<unknown>> {\n\tconst result: Array<unknown> = []\n\tfor await (const element of generator) {\n\t\tresult.push(element)\n\t}\n\treturn result\n}\n\no.spec(\"FaqModelTest\", function () {\n\tlet faqModel\n\tlet fetchFaqSpy\n\tconst deTranslations = {\n\t\tname: \"de\",\n\t\tcode: \"de\",\n\t\tkeys: {\n\t\t\t\"faq.otherEntry_title\": \"Eine Überschrift\",\n\t\t\t\"faq.otherEntry_markdown\": \"Ganz langer Inhalt\",\n\t\t\t\"faq.otherEntry_tags\": \"tag\",\n\t\t\t\"faq.entry_markdown\": \"Inhalt\",\n\t\t\t\"faq.entry_tags\": \"a, b, c\",\n\t\t\totherTranslation_label: \"test\",\n\t\t},\n\t}\n\tconst enTranslations = {\n\t\tname: \"en\",\n\t\tcode: \"en\",\n\t\tkeys: {\n\t\t\t\"faq.entry_title\": \"Heading\",\n\t\t\t\"faq.entry_markdown\": \"Content\",\n\t\t\t\"faq.entry_tags\": \"a, b, c\",\n\t\t\t\"faq.otherEntry_title\": \"Other Heading\",\n\t\t\t\"faq.otherEntry_markdown\": \"Much longer Content\",\n\t\t\t\"faq.otherEntry_tags\": \"tag\",\n\t\t\totherTranslation_label: \"test\",\n\t\t},\n\t}\n\to.beforeEach(function () {\n\t\tlang.code = \"de\"\n\t\tfaqModel = new FaqModel()\n\t\tfetchFaqSpy = spy((language) => {\n\t\t\tif (language === \"en\") {\n\t\t\t\treturn Promise.resolve(enTranslations)\n\t\t\t} else if (language === \"de\") {\n\t\t\t\treturn Promise.resolve(deTranslations)\n\t\t\t} else {\n\t\t\t\treturn Promise.resolve({\n\t\t\t\t\tkeys: {},\n\t\t\t\t\tcode: language,\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t\tdowncast(faqModel).fetchFAQ = fetchFaqSpy\n\t})\n\to(\"initialize faq model\", async function () {\n\t\tconst translation = await faqModel.fetchFAQ(\"en\")\n\t\to(translation).deepEquals(enTranslations)\n\t})\n\to(\"test init\", async function () {\n\t\tawait faqModel.init()\n\t\to(fetchFaqSpy.callCount).equals(2)\n\t\to(fetchFaqSpy.calls[0][0]).equals(\"en\")\n\t\to(fetchFaqSpy.calls[1][0]).equals(\"de\")\n\t\to(faqModel.faqLanguages.fallback).deepEquals(enTranslations)\n\t\to(faqModel.faqLanguages.translations).deepEquals(deTranslations)\n\t\tconst list = faqModel.getList()\n\t\to(list.length).equals(2)\n\t\tconst faqEntry = list[0]\n\t\t//use fallback for missing title\n\t\to(faqEntry.title).equals(\"Heading\")\n\t\t//use current language for missing title\n\t\to(faqEntry.text).equals(\"Inhalt\")\n\t\to(faqEntry.tags).deepEquals([\"a\", \"b\", \"c\"])\n\t\t// do not invoke fetch faq entries twice\n\t\tawait faqModel.init()\n\t\to(fetchFaqSpy.callCount).equals(2)\n\t})\n\to(\"init with language without faq entries\", async function () {\n\t\tlang.code = \"es\"\n\t\tawait faqModel.init()\n\t\to(fetchFaqSpy.callCount).equals(2)\n\t\to(fetchFaqSpy.calls[0][0]).equals(\"en\")\n\t\to(fetchFaqSpy.calls[1][0]).equals(\"es\")\n\t\to(faqModel.faqLanguages.fallback).deepEquals(enTranslations)\n\t\to(faqModel.faqLanguages.translations).deepEquals({\n\t\t\tkeys: {},\n\t\t\tcode: \"es\",\n\t\t})\n\t\tconst list = faqModel.getList()\n\t\to(list.length).equals(2)\n\t\tconst faqEntry = list[0]\n\t\to(faqEntry.title).equals(\"Heading\")\n\t\to(faqEntry.text).equals(\"Content\")\n\t\to(faqEntry.tags).deepEquals([\"a\", \"b\", \"c\"])\n\t})\n\to(\"init and search with failing fetch faq entries\", async function () {\n\t\tfetchFaqSpy = spy((language) => {\n\t\t\treturn {\n\t\t\t\tkeys: {},\n\t\t\t\tcode: language,\n\t\t\t}\n\t\t})\n\t\tdowncast(faqModel).fetchFAQ = fetchFaqSpy\n\t\tawait faqModel.init()\n\t\to(fetchFaqSpy.callCount).equals(2)\n\t\to(fetchFaqSpy.calls[0][0]).equals(\"en\")\n\t\to(fetchFaqSpy.calls[1][0]).equals(\"de\")\n\t\to(faqModel.faqLanguages.fallback).deepEquals({\n\t\t\tkeys: {},\n\t\t\tcode: \"en\",\n\t\t})\n\t\to(faqModel.faqLanguages.translations).deepEquals({\n\t\t\tkeys: {},\n\t\t\tcode: \"de\",\n\t\t})\n\t\tconst list = faqModel.getList()\n\t\to(list.length).equals(0)\n\t\to(await collect(faqModel.search(\"test\"))).deepEquals([])\n\t})\n\to(\"basic successful search in title\", async function () {\n\t\tawait faqModel.init()\n\t\to(await collect(faqModel.search(\"Heading\"))).deepEquals([\n\t\t\t{\n\t\t\t\tid: \"entry\",\n\t\t\t\ttitle: \"<mark>Heading</mark>\",\n\t\t\t\ttext: \"Inhalt\",\n\t\t\t\ttags: [\"a\", \"b\", \"c\"],\n\t\t\t},\n\t\t])\n\t})\n\to(\"basic successful search in tags\", async function () {\n\t\tawait faqModel.init()\n\t\to(await collect(faqModel.search(\"tag\"))).deepEquals([\n\t\t\t{\n\t\t\t\tid: \"otherEntry\",\n\t\t\t\ttitle: \"Eine Überschrift\",\n\t\t\t\ttext: \"Ganz langer Inhalt\",\n\t\t\t\ttags: [\"<mark>tag</mark>\"],\n\t\t\t},\n\t\t])\n\t})\n\to(\"basic successful search in text\", async function () {\n\t\tawait faqModel.init()\n\t\to(await collect(faqModel.search(\"Inhalt\"))).deepEquals([\n\t\t\t{\n\t\t\t\tid: \"entry\",\n\t\t\t\ttitle: \"Heading\",\n\t\t\t\ttext: \"<mark>Inhalt</mark>\",\n\t\t\t\ttags: [\"a\", \"b\", \"c\"],\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: \"otherEntry\",\n\t\t\t\ttitle: \"Eine Überschrift\",\n\t\t\t\ttext: \"Ganz langer <mark>Inhalt</mark>\",\n\t\t\t\ttags: [\"tag\"],\n\t\t\t},\n\t\t])\n\t})\n\to(\"search without results\", async function () {\n\t\tawait faqModel.init()\n\t\tconst results = await collect(faqModel.search(\"Testquery_without_result\"))\n\t\to(results).deepEquals([])\n\t})\n})\n","import m, { Children, Vnode, VnodeDOM } from \"mithril\"\nimport { Autocapitalize, TextField } from \"../../../common/gui/base/TextField.js\"\nimport { isDomainName } from \"../../../common/misc/FormatValidator\"\nimport { Dialog } from \"../../../common/gui/base/Dialog\"\nimport type { AddDomainData } from \"./AddDomainWizard\"\nimport type { TranslationKey } from \"../../../common/misc/LanguageViewModel\"\nimport { lang } from \"../../../common/misc/LanguageViewModel\"\nimport type { WizardPageAttrs, WizardPageN } from \"../../../common/gui/base/WizardDialog.js\"\nimport { emitWizardEvent, WizardEventType } from \"../../../common/gui/base/WizardDialog.js\"\nimport { assertMainOrNode } from \"../../../common/api/common/Env\"\nimport { LoginButton } from \"../../../common/gui/base/buttons/LoginButton.js\"\n\nassertMainOrNode()\n\nexport class EnterDomainPage implements WizardPageN<AddDomainData> {\n\tprivate dom: HTMLElement | null = null\n\n\toncreate(vnode: VnodeDOM<WizardPageAttrs<AddDomainData>>) {\n\t\tthis.dom = vnode.dom as HTMLElement\n\t}\n\n\tview(vnode: Vnode<WizardPageAttrs<AddDomainData>>): Children {\n\t\treturn m(\"\", [\n\t\t\tm(\"h4.mt-l.text-center\", lang.get(\"enterCustomDomain_title\")),\n\t\t\tm(\".mt\", lang.get(\"enterDomainIntroduction_msg\")),\n\t\t\tm(\".mt\", lang.get(\"enterDomainGetReady_msg\")),\n\t\t\tm(TextField, {\n\t\t\t\tlabel: \"customDomain_label\",\n\t\t\t\tautocapitalize: Autocapitalize.none,\n\t\t\t\tvalue: vnode.attrs.data.domain(),\n\t\t\t\toninput: vnode.attrs.data.domain,\n\t\t\t\thelpLabel: () => {\n\t\t\t\t\tconst domain = vnode.attrs.data.domain()\n\t\t\t\t\tconst errorMsg = validateDomain(domain)\n\n\t\t\t\t\tif (errorMsg) {\n\t\t\t\t\t\treturn lang.get(errorMsg)\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn lang.get(\"enterDomainFieldHelp_label\", {\n\t\t\t\t\t\t\t\"{domain}\": domain.toLocaleLowerCase().trim(),\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t}),\n\t\t\tm(\n\t\t\t\t\".flex-center.full-width.pt-l.mb-l\",\n\t\t\t\tm(LoginButton, {\n\t\t\t\t\tlabel: \"next_action\",\n\t\t\t\t\tclass: \"small-login-button\",\n\t\t\t\t\tonclick: () => emitWizardEvent(this.dom as HTMLElement, WizardEventType.SHOW_NEXT_PAGE),\n\t\t\t\t}),\n\t\t\t),\n\t\t])\n\t}\n}\n\nfunction validateDomain(domain: string): TranslationKey | null {\n\tlet cleanDomainName = domain.toLocaleLowerCase().trim()\n\n\tif (!cleanDomainName.length) {\n\t\treturn \"customDomainNeutral_msg\"\n\t}\n\n\tif (!isDomainName(cleanDomainName)) {\n\t\treturn \"customDomainInvalid_msg\"\n\t} else {\n\t\treturn null\n\t}\n}\n\nexport class EnterDomainPageAttrs implements WizardPageAttrs<AddDomainData> {\n\tdata: AddDomainData\n\n\tconstructor(domainData: AddDomainData) {\n\t\tthis.data = domainData\n\t}\n\n\theaderTitle(): TranslationKey {\n\t\treturn \"domainSetup_title\"\n\t}\n\n\tnextAction(showErrorDialog: boolean = true): Promise<boolean> {\n\t\tconst errorMsg = validateDomain(this.data.domain())\n\n\t\tif (errorMsg) {\n\t\t\treturn showErrorDialog ? Dialog.message(errorMsg).then(() => false) : Promise.resolve(false)\n\t\t} else {\n\t\t\treturn Promise.resolve(true)\n\t\t}\n\t}\n\n\tisSkipAvailable(): boolean {\n\t\treturn false\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn true\n\t}\n}\n","import { createCustomDomainCheckGetIn } from \"../../common/api/entities/sys/TypeRefs.js\"\nimport type { CustomDomainCheckGetOut } from \"../../common/api/entities/sys/TypeRefs.js\"\nimport { CustomDomainCheckResult, DnsRecordType, DnsRecordValidation } from \"../../common/api/common/TutanotaConstants\"\nimport { LazyLoaded, noOp } from \"@tutao/tutanota-utils\"\nimport { lang } from \"../../common/misc/LanguageViewModel\"\nimport { assertMainOrNode } from \"../../common/api/common/Env\"\nimport { locator } from \"../../common/api/main/CommonLocator\"\nimport { CustomDomainCheckService } from \"../../common/api/entities/sys/Services\"\n\nassertMainOrNode()\n\nexport class DomainDnsStatus {\n\tstatus: LazyLoaded<CustomDomainCheckGetOut>\n\tdomain: string\n\n\tconstructor(cleanDomainName: string, customerId?: Id) {\n\t\tthis.domain = cleanDomainName\n\t\tthis.status = new LazyLoaded(() => {\n\t\t\tlet data = createCustomDomainCheckGetIn({\n\t\t\t\tdomain: cleanDomainName,\n\t\t\t\tcustomer: customerId ?? null,\n\t\t\t})\n\t\t\treturn locator.serviceExecutor.get(CustomDomainCheckService, data)\n\t\t})\n\t}\n\n\tgetLoadedCustomDomainCheckGetOut(): CustomDomainCheckGetOut {\n\t\treturn this.status.getLoaded()\n\t}\n\n\t/**\n\t * Only checks for the required records (MX and spf) to be fine.\n\t * We have this less strict check because one can already use the custom domain (with limitations) even if certain records like dmarc are not yet set properly.\n\t * We want to allow finishing the dialogs succesfully even if just these basic check pass.\n\t * @returns {boolean} true if records are fine.\n\t */\n\tareRecordsFine(): boolean {\n\t\tif (!this.status.isLoaded() || this.status.getLoaded().checkResult !== CustomDomainCheckResult.CUSTOM_DOMAIN_CHECK_RESULT_OK) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst requiredMissingRecords = this.status\n\t\t\t.getLoaded()\n\t\t\t.missingRecords.filter((r) => r.type === DnsRecordType.DNS_RECORD_TYPE_MX || r.type === DnsRecordType.DNS_RECORD_TYPE_TXT_SPF)\n\t\treturn !requiredMissingRecords.length\n\t}\n\n\t/**\n\t * Checks that ALL records are fine. Even the ones that are only recommended.\n\t * We need this check on top of areRecordsFine() because we want to display if some records are not yet set correctly even if the domain can already be used.\n\t * @returns {boolean} true if all records are fine.\n\t */\n\tareAllRecordsFine(): boolean {\n\t\treturn (\n\t\t\tthis.status.isLoaded() &&\n\t\t\tthis.status.getLoaded().checkResult === CustomDomainCheckResult.CUSTOM_DOMAIN_CHECK_RESULT_OK &&\n\t\t\tthis.status.getLoaded().missingRecords.length === 0 &&\n\t\t\tthis.status.getLoaded().invalidRecords.length === 0\n\t\t)\n\t}\n\n\tgetDnsStatusInfo(): string {\n\t\tif (this.status.isLoaded()) {\n\t\t\tlet result = this.status.getLoaded()\n\n\t\t\tif (result.checkResult === CustomDomainCheckResult.CUSTOM_DOMAIN_CHECK_RESULT_OK) {\n\t\t\t\tlet mxOk =\n\t\t\t\t\t!result.missingRecords.some((r) => r.type === DnsRecordType.DNS_RECORD_TYPE_MX) &&\n\t\t\t\t\t!result.invalidRecords.some((r) => r.type === DnsRecordType.DNS_RECORD_TYPE_MX)\n\t\t\t\tlet spfOk =\n\t\t\t\t\t!result.missingRecords.some((r) => r.type === DnsRecordType.DNS_RECORD_TYPE_TXT_SPF) &&\n\t\t\t\t\t!result.invalidRecords.some((r) => r.type === DnsRecordType.DNS_RECORD_TYPE_TXT_SPF)\n\t\t\t\tlet dkimOk =\n\t\t\t\t\t!result.missingRecords.some((r) => r.type === DnsRecordType.DNS_RECORD_TYPE_CNAME_DKIM) &&\n\t\t\t\t\t!result.invalidRecords.some((r) => r.type === DnsRecordType.DNS_RECORD_TYPE_CNAME_DKIM)\n\t\t\t\tlet mtaStsOk =\n\t\t\t\t\t!result.missingRecords.some((r) => r.type === DnsRecordType.DNS_RECORD_TYPE_CNAME_MTA_STS) &&\n\t\t\t\t\t!result.invalidRecords.some((r) => r.type === DnsRecordType.DNS_RECORD_TYPE_CNAME_MTA_STS)\n\t\t\t\tlet dmarcWarn = result.missingRecords.find((r) => r.type === DnsRecordType.DNS_RECORD_TYPE_TXT_DMARC)\n\t\t\t\tlet dmarcBad = result.invalidRecords.find((r) => r.type === DnsRecordType.DNS_RECORD_TYPE_TXT_DMARC)\n\t\t\t\treturn (\n\t\t\t\t\t\"MX \" +\n\t\t\t\t\t(mxOk ? DnsRecordValidation.OK : DnsRecordValidation.BAD) +\n\t\t\t\t\t\", SPF \" +\n\t\t\t\t\t(spfOk ? DnsRecordValidation.OK : DnsRecordValidation.BAD) +\n\t\t\t\t\t\", MTA-STS \" +\n\t\t\t\t\t(mtaStsOk ? DnsRecordValidation.OK : DnsRecordValidation.BAD) +\n\t\t\t\t\t\", DKIM \" +\n\t\t\t\t\t(dkimOk ? DnsRecordValidation.OK : DnsRecordValidation.BAD) +\n\t\t\t\t\t\", DMARC \" +\n\t\t\t\t\t(dmarcBad || dmarcWarn ? DnsRecordValidation.BAD : DnsRecordValidation.OK)\n\t\t\t\t)\n\t\t\t} else {\n\t\t\t\treturn \"DNS \" + DnsRecordValidation.BAD\n\t\t\t}\n\t\t} else {\n\t\t\treturn lang.get(\"loading_msg\")\n\t\t}\n\t}\n\n\tloadCurrentStatus(): Promise<void> {\n\t\tif (this.status.isLoaded()) {\n\t\t\t// keep the old status as long as checking again\n\t\t\treturn this.status.reload().then(noOp)\n\t\t} else {\n\t\t\treturn this.status.getAsync().then(noOp)\n\t\t}\n\t}\n}\n","import o from \"@tutao/otest\"\nimport { createWizardDialog, WizardPageWrapper } from \"../../../../src/common/gui/base/WizardDialog.js\"\nimport { Dialog, DialogType } from \"../../../../src/common/gui/base/Dialog.js\"\nimport { EnterDomainPageAttrs } from \"../../../../src/mail-app/settings/emaildomain/EnterDomainPage.js\"\nimport stream from \"mithril/stream\"\nimport { CustomerInfoTypeRef, DnsRecordTypeRef } from \"../../../../src/common/api/entities/sys/TypeRefs.js\"\nimport { DomainDnsStatus } from \"../../../../src/mail-app/settings/DomainDnsStatus.js\"\nimport { AddDomainData } from \"../../../../src/mail-app/settings/emaildomain/AddDomainWizard.js\"\nimport { MailAddressTableModel } from \"../../../../src/common/settings/mailaddress/MailAddressTableModel.js\"\nimport { object } from \"testdouble\"\nimport { noOp } from \"@tutao/tutanota-utils\"\nimport { createTestEntity } from \"../../TestUtils.js\"\n\nconst data: AddDomainData = {\n\tdomain: stream(\"domain\"),\n\tcustomerInfo: createTestEntity(CustomerInfoTypeRef),\n\texpectedVerificationRecord: createTestEntity(DnsRecordTypeRef),\n\teditAliasFormAttrs: {\n\t\tmodel: object<MailAddressTableModel>(),\n\t\texpanded: false,\n\t\tonExpanded: noOp,\n\t},\n\tdomainStatus: new DomainDnsStatus(\"domain\"),\n}\n\nconst wizardPages: WizardPageWrapper<AddDomainData>[] = [\n\t{\n\t\tattrs: new EnterDomainPageAttrs(data),\n\t\tview: () => null,\n\t},\n]\n\nlet counter = 0\n\nconst closeAction = () => {\n\tcounter += 1\n\treturn Promise.resolve()\n}\n\no.spec(\"WizardDialogN\", function () {\n\to(\"createWizardDialog without pages\", function () {\n\t\tconst dialogBuilder = createWizardDialog(data, [], null, DialogType.EditLarge)\n\t\to(dialogBuilder.dialog instanceof Dialog).equals(true)\n\t\to(dialogBuilder.attrs.currentPage).equals(null)\n\t\to(dialogBuilder.attrs.pages.length).equals(0)\n\t})\n\n\to(\"createWizardDialog with pages and closeAction\", function () {\n\t\tconst dialogBuilder = createWizardDialog(data, wizardPages, closeAction, DialogType.EditLarge)\n\t\to(dialogBuilder.attrs.currentPage).equals(wizardPages[0])\n\t\to(dialogBuilder.attrs.pages.length).equals(1)\n\t\tconst before = counter\n\t\tdialogBuilder.attrs.closeAction()\n\t\to(counter).equals(before + 1)\n\t})\n\n\to(\"createWizardDialog with pages and without closeAction\", function () {\n\t\tconst dialogBuilder = createWizardDialog(data, wizardPages, null, DialogType.EditLarge)\n\t\to(dialogBuilder.attrs.currentPage).equals(wizardPages[0])\n\t\to(dialogBuilder.attrs.pages.length).equals(1)\n\t\tconst before = counter\n\t\tdialogBuilder.attrs.closeAction()\n\t\to(counter).equals(before)\n\t})\n})\n","import o from \"@tutao/otest\"\nimport { noOp } from \"@tutao/tutanota-utils\"\nimport { getEventWithDefaultTimes, isAllDayEvent } from \"../../../../src/common/api/common/utils/CommonCalendarUtils.js\"\nimport { EndType, RepeatPeriod } from \"../../../../src/common/api/common/TutanotaConstants.js\"\nimport { DateWrapperTypeRef, RepeatRuleTypeRef } from \"../../../../src/common/api/entities/sys/TypeRefs.js\"\nimport { CalendarEvent, CalendarEventTypeRef } from \"../../../../src/common/api/entities/tutanota/TypeRefs.js\"\nimport { DateTime } from \"luxon\"\nimport { createTestEntity } from \"../../TestUtils.js\"\nimport { CalendarEventWhenModel, getDefaultEndCountValue } from \"../../../../src/calendar-app/calendar/gui/eventeditor-model/CalendarEventWhenModel.js\"\nimport { Time } from \"../../../../src/common/calendar/date/Time.js\"\n\no.spec(\"CalendarEventWhenModel\", function () {\n\tconst getModelBerlin = (initialValues: Partial<CalendarEvent>) => new CalendarEventWhenModel(initialValues, \"Europe/Berlin\", noOp)\n\n\tconst getModelKrasnoyarsk = (initialValues: Partial<CalendarEvent>) => new CalendarEventWhenModel(initialValues, \"Asia/Krasnoyarsk\", noOp)\n\n\to.spec(\"date modifications\", function () {\n\t\to(\"if the start date is set to before 1970, it will be set to this year\", function () {\n\t\t\tconst model = getModelBerlin({\n\t\t\t\tstartTime: new Date(\"2023-04-27T08:27:45.523Z\"),\n\t\t\t\tendTime: new Date(\"2023-04-27T08:57:45.523Z\"),\n\t\t\t})\n\t\t\tmodel.startDate = new Date(\"1969-04-27T08:27:00.000Z\")\n\t\t\to(model.startDate.getFullYear()).equals(new Date().getFullYear())\n\t\t})\n\t\to(\"if the start time is changed while not all-day, the end time changes by the same amount\", function () {\n\t\t\tconst model = getModelBerlin({\n\t\t\t\tstartTime: new Date(\"2023-04-27T08:27:00.000Z\"),\n\t\t\t\tendTime: new Date(\"2023-04-27T08:57:00.000Z\"),\n\t\t\t})\n\t\t\tconst startTime = model.startTime\n\t\t\to(startTime.to24HourString()).equals(\"10:27\")\n\t\t\tmodel.startTime = new Time(startTime.hour, startTime.minute + 3)\n\n\t\t\to(model.startTime.to24HourString()).equals(\"10:30\")\n\t\t\to(model.endTime.to24HourString()).equals(\"11:00\")\n\t\t\tconst result = model.result\n\t\t\to(result.startTime.toISOString()).equals(\"2023-04-27T08:30:00.000Z\")\n\t\t\to(result.endTime.toISOString()).equals(\"2023-04-27T09:00:00.000Z\")\n\t\t})\n\t\to(\"if the start date is changed while not all-day, the end time changes by the same amount\", function () {\n\t\t\tconst model = getModelBerlin({\n\t\t\t\tstartTime: new Date(\"2023-04-27T08:27:00.000Z\"),\n\t\t\t\tendTime: new Date(\"2023-04-27T08:57:00.000Z\"),\n\t\t\t})\n\t\t\tconst startDate = model.startDate\n\t\t\to(startDate.toISOString()).equals(\"2023-04-26T22:00:00.000Z\")(\"start date is start of the day in utc\")\n\t\t\tmodel.startDate = new Date(\"2023-04-30T05:15:00.000Z\")\n\n\t\t\to(model.startDate.toISOString()).equals(\"2023-04-29T22:00:00.000Z\")(\"start date was moved by three days\")\n\t\t\to(model.endDate.toISOString()).equals(\"2023-04-29T22:00:00.000Z\")(\"end date was moved by three days\")\n\t\t\tconst result = model.result\n\t\t\to(result.startTime.toISOString()).equals(\"2023-04-30T08:27:00.000Z\")(\"start time on result is correct and includes time\")\n\t\t\to(result.endTime.toISOString()).equals(\"2023-04-30T08:57:00.000Z\")(\"end time on result is correct and includes time\")\n\t\t})\n\t\to(\"if the start date is changed while all-day, the end time changes by the same amount\", function () {\n\t\t\tconst model = getModelBerlin({\n\t\t\t\tstartTime: new Date(\"2023-04-27T08:27:00.000Z\"),\n\t\t\t\tendTime: new Date(\"2023-04-27T08:57:00.000Z\"),\n\t\t\t})\n\t\t\tmodel.isAllDay = true\n\t\t\to(model.startDate.toISOString()).equals(\"2023-04-26T22:00:00.000Z\")(\"start date for display is start of day in local timezone, not UTC\")\n\t\t\to(model.endDate.toISOString()).equals(\"2023-04-26T22:00:00.000Z\")(\"end date for display is start of day in local timezone, not UTC\")\n\t\t\t// plus three days\n\t\t\tmodel.startDate = new Date(\"2023-04-30T08:27:00.000Z\")\n\n\t\t\to(model.startDate.toISOString()).equals(\"2023-04-29T22:00:00.000Z\")(\"new start date is displayed as start of current day in local tz\")\n\t\t\to(model.endDate.toISOString()).equals(\"2023-04-29T22:00:00.000Z\")(\"new end date has also been changed\")\n\t\t\tconst result = model.result\n\t\t\to(result.startTime.toISOString()).equals(\"2023-04-30T00:00:00.000Z\")(\"start date on result is correct\")\n\t\t\to(result.endTime.toISOString()).equals(\"2023-05-01T00:00:00.000Z\")(\"end date on result is correct\")\n\t\t})\n\t\to(\"modifying the start time while the event is all-day has no effect after unsetting all-day\", function () {\n\t\t\tconst model = getModelBerlin({\n\t\t\t\tstartTime: new Date(\"2023-04-27T08:27:45.523Z\"),\n\t\t\t\tendTime: new Date(\"2023-04-27T08:57:45.523Z\"),\n\t\t\t})\n\t\t\to(model.isAllDay).equals(false)\n\t\t\to(model.startTime.to24HourString()).equals(\"10:27\")(\"still the start time we gave the model\")\n\t\t\tmodel.isAllDay = true\n\t\t\tmodel.startTime = new Time(13, 30)\n\t\t\tconst allDayResult = model.result\n\t\t\to(allDayResult.startTime.toISOString()).equals(\"2023-04-27T00:00:00.000Z\")\n\t\t\tmodel.isAllDay = false\n\t\t\to(model.startTime.to24HourString()).equals(\"10:27\")(\"still the start time we gave the model after change\")\n\t\t\tconst result = model.result\n\t\t\to(result.startTime.toISOString()).equals(\"2023-04-27T08:27:00.000Z\")\n\t\t})\n\t\to(\"modifying the end time while the event is all-day has no effect after unsetting all-day\", function () {\n\t\t\tconst model = getModelBerlin({\n\t\t\t\tstartTime: new Date(\"2023-04-27T08:27:45.523Z\"),\n\t\t\t\tendTime: new Date(\"2023-04-27T08:57:45.523Z\"),\n\t\t\t})\n\t\t\to(model.endTime.to24HourString()).equals(\"10:57\")(\"initialization correctly applied\")\n\t\t\tmodel.isAllDay = true\n\t\t\tmodel.endTime = new Time(13, 30)\n\t\t\to(model.endTime.to24HourString()).equals(\"00:00\")(\"all-day causes zeroed time\")\n\t\t\tconst allDayResult = model.result\n\t\t\to(allDayResult.endTime.toISOString()).equals(\"2023-04-28T00:00:00.000Z\")(\"the result also comes without a time part\")\n\t\t\tmodel.isAllDay = false\n\t\t\to(model.endTime.to24HourString()).equals(\"10:57\")(\"still has old time after unsetting all-day\")\n\t\t\tconst result = model.result\n\t\t\to(result.endTime.toISOString()).equals(\"2023-04-27T08:57:00.000Z\")(\"the not-all-day-result includes the time\")\n\t\t})\n\t\to(\"rescheduling the event by a few hours correctly updates start and end time\", function () {\n\t\t\tconst model = getModelBerlin({\n\t\t\t\tstartTime: new Date(\"2023-04-27T08:27:45.523Z\"),\n\t\t\t\tendTime: new Date(\"2023-04-28T08:57:45.523Z\"),\n\t\t\t})\n\n\t\t\to(model.startDate.toISOString()).equals(\"2023-04-26T22:00:00.000Z\")(\"correct display start date\")\n\t\t\to(model.endDate.toISOString()).equals(\"2023-04-27T22:00:00.000Z\")(\"correct display end date\")\n\t\t\to(model.startTime.to24HourString()).equals(\"10:27\")(\"display start time correct\")\n\t\t\to(model.endTime.to24HourString()).equals(\"10:57\")(\"display end time correct\")\n\t\t\tmodel.rescheduleEvent({ hours: 10 })\n\t\t\to(model.startTime.to24HourString()).equals(\"20:27\")(\"start time changed correct amount\")\n\t\t\to(model.endTime.to24HourString()).equals(\"20:57\")(\"end time changed correct amount\")\n\t\t\to(model.startDate.toISOString()).equals(\"2023-04-26T22:00:00.000Z\")(\"the display start date did not change\")\n\t\t\to(model.endDate.toISOString()).equals(\"2023-04-27T22:00:00.000Z\")(\"the display end date did not change\")\n\t\t\tconst result = model.result\n\t\t\to(result.startTime.toISOString()).equals(\"2023-04-27T18:27:00.000Z\")(\"result start time is correct\")\n\t\t\to(result.endTime.toISOString()).equals(\"2023-04-28T18:57:00.000Z\")(\"result end time is correct\")\n\t\t})\n\t\to(\"rescheduling the event by a few days and hours correctly updates start and end times\", function () {\n\t\t\tconst model = getModelBerlin({\n\t\t\t\tstartTime: new Date(\"2023-04-27T08:27:45.523Z\"),\n\t\t\t\tendTime: new Date(\"2023-04-28T08:57:45.523Z\"),\n\t\t\t})\n\n\t\t\to(model.startDate.toISOString()).equals(\"2023-04-26T22:00:00.000Z\")(\"correct display start date\")\n\t\t\to(model.endDate.toISOString()).equals(\"2023-04-27T22:00:00.000Z\")(\"correct display end date\")\n\t\t\tmodel.rescheduleEvent({ days: -3, hours: 10 })\n\t\t\to(model.startTime.to24HourString()).equals(\"20:27\")(\"start time updated\")\n\t\t\to(model.endTime.to24HourString()).equals(\"20:57\")(\"end time updated\")\n\t\t\to(model.startDate.toISOString()).equals(\"2023-04-23T22:00:00.000Z\")(\"the display start date did change\")\n\t\t\to(model.endDate.toISOString()).equals(\"2023-04-24T22:00:00.000Z\")(\"the display end date did change\")\n\t\t\tconst result = model.result\n\t\t\to(result.startTime.toISOString()).equals(\"2023-04-24T18:27:00.000Z\")(\"result start time is correct\")\n\t\t\to(result.endTime.toISOString()).equals(\"2023-04-25T18:57:00.000Z\")(\"result end time is correct\")\n\t\t})\n\t\to(\"rescheduling the event by a few days correctly updates start and end times for all-day events\", function () {\n\t\t\tconst model = getModelBerlin({\n\t\t\t\tstartTime: new Date(\"2023-04-27T00:00:00.000Z\"),\n\t\t\t\tendTime: new Date(\"2023-04-28T00:00:00.000Z\"),\n\t\t\t})\n\n\t\t\to(model.startDate.toISOString()).equals(\"2023-04-26T22:00:00.000Z\")(\"correct display start date\")\n\t\t\to(model.endDate.toISOString()).equals(\"2023-04-26T22:00:00.000Z\")(\"correct display end date\")\n\t\t\tmodel.rescheduleEvent({ days: 3, hours: 10 })\n\t\t\to(model.startTime.to24HourString()).equals(\"00:00\")(\"start time changed correct amount\")\n\t\t\to(model.endTime.to24HourString()).equals(\"00:00\")(\"end time changed correct amount\")\n\t\t\to(model.startDate.toISOString()).equals(\"2023-04-29T22:00:00.000Z\")(\"the display start date did not change\")\n\t\t\to(model.endDate.toISOString()).equals(\"2023-04-29T22:00:00.000Z\")(\"the display end date did not change\")\n\t\t\tconst result = model.result\n\t\t\to(result.startTime.toISOString()).equals(\"2023-04-30T00:00:00.000Z\")(\"result start time is correct\")\n\t\t\to(result.endTime.toISOString()).equals(\"2023-05-01T00:00:00.000Z\")(\"result end time is correct\")\n\t\t})\n\t\to(\"setting the start date correctly updates the start date and end date\", function () {\n\t\t\tconst model = getModelBerlin({\n\t\t\t\tstartTime: new Date(\"2023-04-27T08:27:45.523Z\"),\n\t\t\t\tendTime: new Date(\"2023-04-28T08:57:45.523Z\"),\n\t\t\t})\n\n\t\t\tmodel.startDate = new Date(\"2023-04-28T04:00:00.000Z\")\n\t\t\to(model.startTime.to24HourString()).equals(\"10:27\")(\"start time did not change\")\n\t\t\to(model.endTime.to24HourString()).equals(\"10:57\")(\"end time did not change\")\n\t\t\to(model.startDate.toISOString()).equals(\"2023-04-27T22:00:00.000Z\")(\"the display start date is shifted by one day\")\n\t\t\to(model.endDate.toISOString()).equals(\"2023-04-28T22:00:00.000Z\")(\"the display end date was also moved by one day\")\n\t\t\tconst result = model.result\n\t\t\to(result.startTime.toISOString()).equals(\"2023-04-28T08:27:00.000Z\")(\"result start time is correct\")\n\t\t\to(result.endTime.toISOString()).equals(\"2023-04-29T08:57:00.000Z\")(\"result end time is correct\")\n\t\t})\n\t\to(\"setting the start date correctly updates the start date and end date, all day true\", function () {\n\t\t\tconst model = getModelBerlin({\n\t\t\t\tstartTime: new Date(\"2023-04-27T00:00:00.000Z\"),\n\t\t\t\tendTime: new Date(\"2023-04-28T00:00:00.000Z\"),\n\t\t\t})\n\n\t\t\to(model.startDate.toISOString()).equals(\"2023-04-26T22:00:00.000Z\")(\"correct display start date\")\n\t\t\to(model.endDate.toISOString()).equals(\"2023-04-26T22:00:00.000Z\")(\"correct display end date\")\n\t\t\tmodel.startDate = new Date(\"2023-04-28T04:00:00.000Z\")\n\t\t\to(model.startTime.to24HourString()).equals(\"00:00\")(\"start time did not change\")\n\t\t\to(model.endTime.to24HourString()).equals(\"00:00\")(\"end time did not change\")\n\t\t\to(model.startDate.toISOString()).equals(\"2023-04-27T22:00:00.000Z\")(\"the display start date is shifted by one day\")\n\t\t\to(model.endDate.toISOString()).equals(\"2023-04-27T22:00:00.000Z\")(\"the display end date was also moved by one day\")\n\t\t\tconst result = model.result\n\t\t\to(result.startTime.toISOString()).equals(\"2023-04-28T00:00:00.000Z\")(\"result start time is correct\")\n\t\t\to(result.endTime.toISOString()).equals(\"2023-04-29T00:00:00.000Z\")(\"result end time is correct\")\n\t\t})\n\t\to(\"setting the end date correctly updates the end date\", function () {\n\t\t\tconst model = getModelBerlin({\n\t\t\t\tstartTime: new Date(\"2023-04-27T08:27:45.523Z\"),\n\t\t\t\tendTime: new Date(\"2023-04-28T08:57:45.523Z\"),\n\t\t\t})\n\t\t\to(model.endDate.toISOString()).equals(\"2023-04-27T22:00:00.000Z\")(\"the initialization was correctly applied\")\n\t\t\tmodel.endDate = new Date(\"2023-05-27T04:00:00.000Z\")\n\t\t\to(model.startTime.to24HourString()).equals(\"10:27\")(\"start time did not change\")\n\t\t\to(model.endTime.to24HourString()).equals(\"10:57\")(\"end time did not change\")\n\t\t\to(model.startDate.toISOString()).equals(\"2023-04-26T22:00:00.000Z\")(\"start date did not change\")\n\t\t\to(model.endDate.toISOString()).equals(\"2023-05-26T22:00:00.000Z\")(\"end date is correctly shifted\")\n\t\t\tconst result = model.result\n\t\t\to(result.startTime.toISOString()).equals(\"2023-04-27T08:27:00.000Z\")(\"result start time is correct\")\n\t\t\to(result.endTime.toISOString()).equals(\"2023-05-27T08:57:00.000Z\")(\"result end time is correct\")\n\t\t})\n\t})\n\n\to.spec(\"all day\", function () {\n\t\to(\"all day is set correctly for an event that is all-day by times\", function () {\n\t\t\tconst model = getModelBerlin({\n\t\t\t\tstartTime: new Date(\"2023-04-27T00:00:00.000Z\"),\n\t\t\t\tendTime: new Date(\"2023-04-28T00:00:00.000Z\"),\n\t\t\t})\n\t\t\to(model.isAllDay).equals(true)\n\t\t})\n\t\to(\"all day is set correctly for an event that is not all-day by times\", function () {\n\t\t\tconst model = getModelBerlin({\n\t\t\t\tstartTime: new Date(\"2023-04-27T01:00:00.000Z\"),\n\t\t\t\tendTime: new Date(\"2023-04-28T00:02:00.000Z\"),\n\t\t\t})\n\t\t\to(model.isAllDay).equals(false)\n\t\t})\n\t\to(\"setting all-day correctly sets utc times to midnight\", function () {\n\t\t\tconst model = getModelBerlin({\n\t\t\t\tstartTime: new Date(\"2023-04-27T01:00:00.000Z\"),\n\t\t\t\tendTime: new Date(\"2023-04-28T00:02:00.000Z\"),\n\t\t\t})\n\t\t\tmodel.isAllDay = true\n\t\t\tconst result = model.result\n\t\t\to(result.startTime.toISOString()).equals(\"2023-04-27T00:00:00.000Z\")\n\t\t\to(result.endTime.toISOString()).equals(\"2023-04-29T00:00:00.000Z\")\n\t\t\to(isAllDayEvent(result)).equals(true)\n\t\t})\n\t\to(\"setting all-day correctly sets utc times to midnight on an event with same start and end date\", function () {\n\t\t\tconst model = getModelBerlin({\n\t\t\t\tstartTime: new Date(\"2023-04-27T01:00:00.000Z\"),\n\t\t\t\tendTime: new Date(\"2023-04-27T00:02:00.000Z\"),\n\t\t\t})\n\t\t\tmodel.isAllDay = true\n\t\t\tconst result = model.result\n\t\t\to(result.startTime.toISOString()).equals(\"2023-04-27T00:00:00.000Z\")\n\t\t\to(result.endTime.toISOString()).equals(\"2023-04-28T00:00:00.000Z\")\n\t\t\to(isAllDayEvent(result)).equals(true)\n\t\t})\n\t\to(\"setting all-day to false will cause result to not be considered all-day and the times to be set to the default\", function () {\n\t\t\t// NOTE: this test might fail if run on exactly a full half hour. it's time dependent because the default\n\t\t\t// is created by the model by calling new Date()\n\t\t\tconst now = new Date()\n\t\t\tconst eventWithDefaults = getEventWithDefaultTimes()\n\t\t\teventWithDefaults.startTime = DateTime.fromJSDate(eventWithDefaults.startTime).set({ millisecond: 0, second: 0 }).toJSDate()\n\t\t\teventWithDefaults.endTime = DateTime.fromJSDate(eventWithDefaults.endTime).set({ millisecond: 0, second: 0 }).toJSDate()\n\t\t\tconst model = getModelBerlin({\n\t\t\t\tstartTime: DateTime.fromJSDate(now, { zone: \"utc\" }).set({ hour: 0, minute: 0, second: 0, millisecond: 0 }).toJSDate(),\n\t\t\t\tendTime: DateTime.fromJSDate(now, { zone: \"utc\" }).set({ hour: 0, minute: 0, second: 0, millisecond: 0 }).plus({ day: 1 }).toJSDate(),\n\t\t\t})\n\n\t\t\to(model.isAllDay).equals(true)(\"correctly devised the all-day status\")\n\t\t\tmodel.isAllDay = false\n\t\t\tconst result = model.result\n\t\t\to(result.startTime.toISOString()).equals(eventWithDefaults.startTime?.toISOString())(\"default start time was correctly applied\")\n\t\t\to(result.endTime.toISOString()).equals(eventWithDefaults.endTime?.toISOString())(\"default end time was correctly applied\")\n\t\t\to(isAllDayEvent(result)).equals(false)(\"the result is not considered all-day\")\n\t\t})\n\t})\n\n\to.spec(\"timezones\", function () {\n\t\to(\"creating an all-day event in one time zone will be considered all-day in another time zone\", function () {\n\t\t\tconst berlinModel = getModelBerlin({\n\t\t\t\tstartTime: new Date(\"2023-04-27T01:00:00.000Z\"),\n\t\t\t\tendTime: new Date(\"2023-04-27T00:02:00.000Z\"),\n\t\t\t})\n\t\t\to(berlinModel.isAllDay).equals(false)\n\t\t\tberlinModel.isAllDay = true\n\t\t\tconst berlinResult = berlinModel.result\n\t\t\to(berlinResult.startTime.toISOString()).equals(\"2023-04-27T00:00:00.000Z\")\n\t\t\to(berlinResult.endTime.toISOString()).equals(\"2023-04-28T00:00:00.000Z\")\n\n\t\t\t// now, around the planet...\n\t\t\tconst krasnoyarskModel = getModelKrasnoyarsk(berlinResult)\n\t\t\to(krasnoyarskModel.isAllDay).equals(true)\n\t\t})\n\n\t\to(\"events from another timezone correctly translate the displayed start and end times\", function () {\n\t\t\tconst berlinModel = getModelBerlin({\n\t\t\t\tstartTime: new Date(\"2023-04-27T01:00:00.000Z\"),\n\t\t\t\tendTime: new Date(\"2023-04-27T00:02:00.000Z\"),\n\t\t\t})\n\t\t\to(berlinModel.isAllDay).equals(false)\n\t\t\tberlinModel.startTime = new Time(13, 0)\n\t\t\tberlinModel.endTime = new Time(13, 30)\n\t\t\tconst berlinResult = berlinModel.result\n\t\t\to(berlinResult.startTime.toISOString()).equals(\"2023-04-27T11:00:00.000Z\")\n\t\t\to(berlinResult.endTime.toISOString()).equals(\"2023-04-27T11:30:00.000Z\")\n\n\t\t\tconst krasnoyarskModel = getModelKrasnoyarsk(berlinResult)\n\t\t\to(krasnoyarskModel.isAllDay).equals(false)\n\t\t\to(krasnoyarskModel.startTime.to24HourString()).equals(\"18:00\")\n\t\t\to(krasnoyarskModel.endTime.to24HourString()).equals(\"18:30\")\n\t\t})\n\n\t\to(\"repeat rules from one time zone are updated for the current time zone\", function () {\n\t\t\tconst berlinModel = getModelBerlin({\n\t\t\t\tstartTime: new Date(\"2023-04-27T01:00:00.000Z\"),\n\t\t\t\tendTime: new Date(\"2023-04-27T00:02:00.000Z\"),\n\t\t\t})\n\t\t\tberlinModel.repeatPeriod = RepeatPeriod.DAILY\n\t\t\tconst result = berlinModel.result\n\t\t\to(result.repeatRule?.timeZone).equals(berlinModel.zone)\n\t\t\tconst krasnoyarskModel = getModelKrasnoyarsk({\n\t\t\t\tstartTime: result.startTime,\n\t\t\t\tendTime: result.endTime,\n\t\t\t\trepeatRule: result.repeatRule,\n\t\t\t})\n\t\t\tconst newResult = krasnoyarskModel.result\n\t\t\to(newResult.repeatRule?.timeZone).equals(krasnoyarskModel.zone)\n\t\t})\n\t})\n\n\to.spec(\"repeat rules\", function () {\n\t\to(\"the repeat interval is reflected on the result and for display, no repeat\", function () {\n\t\t\tconst model = getModelBerlin({\n\t\t\t\tstartTime: new Date(\"2023-04-27T00:00:00.000Z\"),\n\t\t\t\tendTime: new Date(\"2023-04-28T00:00:00.000Z\"),\n\t\t\t\trepeatRule: null,\n\t\t\t})\n\t\t\to(model.repeatPeriod).equals(null)\n\t\t\to(model.result.repeatRule).equals(null)\n\t\t})\n\n\t\to(\"repeat interval is set to daily\", function () {\n\t\t\tconst model = getModelBerlin({\n\t\t\t\tstartTime: new Date(\"2023-04-27T00:00:00.000Z\"),\n\t\t\t\tendTime: new Date(\"2023-04-28T00:00:00.000Z\"),\n\t\t\t\trepeatRule: null,\n\t\t\t})\n\n\t\t\tmodel.repeatPeriod = RepeatPeriod.DAILY\n\t\t\to(model.repeatPeriod).equals(RepeatPeriod.DAILY)\n\t\t\to(model.result.repeatRule).deepEquals(\n\t\t\t\tcreateTestEntity(RepeatRuleTypeRef, {\n\t\t\t\t\tinterval: \"1\",\n\t\t\t\t\tendType: EndType.Never,\n\t\t\t\t\tendValue: \"1\",\n\t\t\t\t\tfrequency: RepeatPeriod.DAILY,\n\t\t\t\t\texcludedDates: [],\n\t\t\t\t\ttimeZone: model.zone,\n\t\t\t\t}),\n\t\t\t)\n\t\t})\n\n\t\to(\"setting repeat end type after count works\", function () {\n\t\t\tconst model = getModelBerlin({\n\t\t\t\tstartTime: new Date(\"2023-04-27T00:00:00.000Z\"),\n\t\t\t\tendTime: new Date(\"2023-04-28T00:00:00.000Z\"),\n\t\t\t\trepeatRule: createTestEntity(RepeatRuleTypeRef, {\n\t\t\t\t\tinterval: \"1\",\n\t\t\t\t\tendType: EndType.Never,\n\t\t\t\t\tendValue: \"1\",\n\t\t\t\t\tfrequency: RepeatPeriod.DAILY,\n\t\t\t\t\texcludedDates: [],\n\t\t\t\t}),\n\t\t\t})\n\t\t\tconst result = model.result\n\n\t\t\tmodel.repeatEndType = EndType.Count\n\t\t\tmodel.repeatEndOccurrences = 13\n\t\t\to(model.repeatEndOccurrences).equals(13)\n\n\t\t\to(model.result.repeatRule?.endType).equals(EndType.Count)\n\t\t\to(model.result.repeatRule?.endValue).equals(\"13\")\n\t\t\tconst before = model.repeatEndDateForDisplay\n\t\t\tmodel.repeatEndDateForDisplay = new Date(\"2022-04-03T13:00:00.000Z\")\n\t\t\tconst after = model.repeatEndDateForDisplay\n\t\t\to(before.toISOString()).equals(after.toISOString())\n\t\t\to(model.repeatEndType).equals(EndType.Count)\n\t\t})\n\n\t\to(\"setting repeat end type after date works\", function () {\n\t\t\tconst model = getModelBerlin({\n\t\t\t\tstartTime: new Date(\"2023-04-27T00:00:00.000Z\"),\n\t\t\t\tendTime: new Date(\"2023-04-28T00:00:00.000Z\"),\n\t\t\t\trepeatRule: createTestEntity(RepeatRuleTypeRef, {\n\t\t\t\t\tinterval: \"1\",\n\t\t\t\t\tendType: EndType.Never,\n\t\t\t\t\tendValue: \"1\",\n\t\t\t\t\tfrequency: RepeatPeriod.DAILY,\n\t\t\t\t\texcludedDates: [],\n\t\t\t\t}),\n\t\t\t})\n\t\t\to(model.isAllDay).equals(true)\n\t\t\tconst endDateForSetting = new Date(\"2023-05-27T13:00:00.000Z\")\n\t\t\tconst endDateForSaving = new Date(\"2023-05-28T00:00:00.000Z\")\n\t\t\tconst cleanEndDate = new Date(\"2023-05-26T22:00:00.000Z\")\n\t\t\tmodel.repeatEndType = EndType.UntilDate\n\t\t\tmodel.repeatEndDateForDisplay = endDateForSetting\n\t\t\to(model.repeatEndType).equals(EndType.UntilDate)\n\t\t\to(model.repeatEndDateForDisplay.toISOString()).equals(cleanEndDate.toISOString())\n\t\t\tconst result = model.result\n\t\t\to(result.repeatRule?.endType).equals(EndType.UntilDate)\n\t\t\to(new Date(parseInt(result.repeatRule?.endValue ?? \"\")).toISOString()).equals(endDateForSaving.toISOString())(\n\t\t\t\t\"saved value is one day after the date we set through GUI\",\n\t\t\t)\n\n\t\t\to(model.repeatEndOccurrences).equals(Number(getDefaultEndCountValue()))\n\n\t\t\tmodel.repeatPeriod = null\n\t\t\to(model.repeatPeriod).equals(null)\n\t\t\to(model.result.repeatRule).equals(null)\n\t\t})\n\n\t\to(\"changing the end date or end count if the event is not repeating is a no-op\", function () {\n\t\t\tconst model = getModelBerlin({\n\t\t\t\tstartTime: new Date(\"2023-04-27T00:00:00.000Z\"),\n\t\t\t\tendTime: new Date(\"2023-04-28T00:00:00.000Z\"),\n\t\t\t})\n\t\t\tconst resultBefore = model.result\n\t\t\tmodel.repeatEndOccurrences = 42\n\t\t\to(model.result).deepEquals(resultBefore)\n\t\t\tmodel.repeatEndDateForDisplay = new Date(\"2023-04-30T13:00:00.000Z\")\n\t\t\to(model.result).deepEquals(resultBefore)\n\t\t\to(model.repeatEndDateForDisplay.toISOString()).equals(\"2023-05-26T22:00:00.000Z\")\n\t\t})\n\n\t\to(\"changing the end date if the event ends after count is a no-op\", function () {\n\t\t\tconst model = getModelBerlin({\n\t\t\t\tstartTime: new Date(\"2023-04-27T00:00:00.000Z\"),\n\t\t\t\tendTime: new Date(\"2023-04-28T00:00:00.000Z\"),\n\t\t\t\trepeatRule: createTestEntity(RepeatRuleTypeRef, {\n\t\t\t\t\tinterval: \"1\",\n\t\t\t\t\tendType: EndType.Count,\n\t\t\t\t\tendValue: \"42\",\n\t\t\t\t\tfrequency: RepeatPeriod.DAILY,\n\t\t\t\t\texcludedDates: [],\n\t\t\t\t}),\n\t\t\t})\n\t\t\tconst resultBefore = model.result\n\t\t\tmodel.repeatEndDateForDisplay = new Date(\"2023-04-30T13:00:00.000Z\")\n\t\t\to(model.result).deepEquals(resultBefore)\n\t\t\to(model.repeatEndDateForDisplay.toISOString()).equals(\"2023-05-26T22:00:00.000Z\")\n\t\t\to(model.repeatEndOccurrences).equals(42)\n\t\t})\n\n\t\to(\"changing the end count if the event ends on date is a no-op\", function () {\n\t\t\tconst model = getModelBerlin({\n\t\t\t\tstartTime: new Date(\"2023-04-27T00:00:00.000Z\"),\n\t\t\t\tendTime: new Date(\"2023-04-28T00:00:00.000Z\"),\n\t\t\t\trepeatRule: createTestEntity(RepeatRuleTypeRef, {\n\t\t\t\t\tinterval: \"1\",\n\t\t\t\t\tendType: EndType.UntilDate,\n\t\t\t\t\tendValue: new Date(\"2023-04-30T00:00:00.000Z\").getTime().toString(),\n\t\t\t\t\tfrequency: RepeatPeriod.DAILY,\n\t\t\t\t\texcludedDates: [],\n\t\t\t\t}),\n\t\t\t})\n\t\t\to(model.repeatEndDateForDisplay.toISOString()).equals(\"2023-04-28T22:00:00.000Z\")(\"before was correct end date\")\n\t\t\tconst resultBefore = model.result\n\t\t\to(resultBefore.repeatRule?.endValue).equals(new Date(\"2023-04-30T00:00:00.000Z\").getTime().toString())\n\t\t\tmodel.repeatEndOccurrences = 42\n\t\t\to(model.result).deepEquals(resultBefore)\n\t\t\to(model.repeatEndOccurrences).equals(10)\n\t\t\to(model.repeatEndType).equals(EndType.UntilDate)\n\t\t\to(model.repeatEndDateForDisplay.toISOString()).equals(\"2023-04-28T22:00:00.000Z\")(\"still correct end date\")\n\t\t})\n\n\t\to(\"changing the repeat interval to something less than 1 sets it to 1\", function () {\n\t\t\tconst model = getModelBerlin({\n\t\t\t\tstartTime: new Date(\"2023-04-27T00:00:00.000Z\"),\n\t\t\t\tendTime: new Date(\"2023-04-28T00:00:00.000Z\"),\n\t\t\t\trepeatRule: createTestEntity(RepeatRuleTypeRef, {\n\t\t\t\t\tinterval: \"10\",\n\t\t\t\t\tendType: EndType.Count,\n\t\t\t\t\tendValue: \"10\",\n\t\t\t\t\tfrequency: RepeatPeriod.DAILY,\n\t\t\t\t\texcludedDates: [],\n\t\t\t\t}),\n\t\t\t})\n\n\t\t\tmodel.repeatInterval = -1\n\t\t\to(model.repeatInterval).equals(1)\n\t\t\to(model.result.repeatRule?.interval).equals(\"1\")\n\t\t})\n\n\t\to(\"repeat interval changes are reflected in the result and display\", function () {\n\t\t\tconst model = getModelBerlin({\n\t\t\t\tstartTime: new Date(\"2023-04-27T00:00:00.000Z\"),\n\t\t\t\tendTime: new Date(\"2023-04-28T00:00:00.000Z\"),\n\t\t\t\trepeatRule: createTestEntity(RepeatRuleTypeRef, {\n\t\t\t\t\tinterval: \"10\",\n\t\t\t\t\tendType: EndType.Count,\n\t\t\t\t\tendValue: \"10\",\n\t\t\t\t\tfrequency: RepeatPeriod.DAILY,\n\t\t\t\t\texcludedDates: [],\n\t\t\t\t}),\n\t\t\t})\n\t\t\to(model.repeatInterval).equals(10)\n\t\t\to(model.result.repeatRule?.interval).equals(\"10\")\n\t\t\tmodel.repeatInterval = 5\n\t\t\to(model.repeatInterval).equals(5)\n\t\t\to(model.result.repeatRule?.interval).equals(\"5\")\n\t\t})\n\t})\n\n\to.spec(\"deleteExcludedDates\", function () {\n\t\to(\"clears the array of excluded dates\", async function () {\n\t\t\tconst model = await getModelBerlin(\n\t\t\t\tcreateTestEntity(CalendarEventTypeRef, {\n\t\t\t\t\tstartTime: new Date(\"2023-03-13T00:00:00Z\"),\n\t\t\t\t\trepeatRule: createTestEntity(RepeatRuleTypeRef, {\n\t\t\t\t\t\texcludedDates: [createTestEntity(DateWrapperTypeRef, { date: new Date(\"2023-03-13T00:00:00Z\") })],\n\t\t\t\t\t}),\n\t\t\t\t}),\n\t\t\t)\n\n\t\t\tmodel.deleteExcludedDates()\n\t\t\to(model.excludedDates).deepEquals([])\n\t\t\to(model.result.repeatRule?.excludedDates).deepEquals([])\n\t\t})\n\t\to(\"end occurrence changed to smaller -> delete exclusions\", async function () {\n\t\t\tconst model = await getModelBerlin(\n\t\t\t\tcreateTestEntity(CalendarEventTypeRef, {\n\t\t\t\t\tstartTime: new Date(\"2023-03-13T00:00:00Z\"),\n\t\t\t\t\trepeatRule: createTestEntity(RepeatRuleTypeRef, {\n\t\t\t\t\t\tendType: EndType.Count,\n\t\t\t\t\t\tendValue: \"42\",\n\t\t\t\t\t\texcludedDates: [createTestEntity(DateWrapperTypeRef, { date: new Date(\"2023-03-13T00:00:00Z\") })],\n\t\t\t\t\t}),\n\t\t\t\t}),\n\t\t\t)\n\t\t\tmodel.repeatEndOccurrences = 30\n\t\t\to(model.excludedDates.length).equals(1)\n\t\t\to(model.result.repeatRule?.excludedDates.length).equals(0)\n\t\t})\n\t\to(\"end occurrence changed to bigger -> delete exclusions\", async function () {\n\t\t\tconst model = await getModelBerlin(\n\t\t\t\tcreateTestEntity(CalendarEventTypeRef, {\n\t\t\t\t\tstartTime: new Date(\"2023-03-13T00:00:00Z\"),\n\t\t\t\t\trepeatRule: createTestEntity(RepeatRuleTypeRef, {\n\t\t\t\t\t\tendType: EndType.Count,\n\t\t\t\t\t\tendValue: \"42\",\n\t\t\t\t\t\texcludedDates: [createTestEntity(DateWrapperTypeRef, { date: new Date(\"2023-03-13T00:00:00Z\") })],\n\t\t\t\t\t}),\n\t\t\t\t}),\n\t\t\t)\n\t\t\tmodel.repeatEndOccurrences = 300\n\t\t\to(model.excludedDates.length).equals(1)\n\t\t\to(model.result.repeatRule?.excludedDates.length).equals(0)\n\t\t})\n\t\to(\"interval changes delete exclusions\", async function () {\n\t\t\tconst excludedDates = [new Date(\"2023-03-13T00:00:00Z\")]\n\t\t\tconst event = createTestEntity(CalendarEventTypeRef, {\n\t\t\t\tstartTime: new Date(\"2023-03-13T00:00:00Z\"),\n\t\t\t\trepeatRule: createTestEntity(RepeatRuleTypeRef, {\n\t\t\t\t\tfrequency: \"1\",\n\t\t\t\t\tinterval: \"1\",\n\t\t\t\t\tendType: EndType.Count,\n\t\t\t\t\tendValue: \"10\",\n\t\t\t\t\texcludedDates: excludedDates.map((date) => createTestEntity(DateWrapperTypeRef, { date })),\n\t\t\t\t\ttimeZone: \"Europe/Berlin\",\n\t\t\t\t}),\n\t\t\t})\n\t\t\tconst model = getModelBerlin(event)\n\n\t\t\tmodel.repeatInterval = 1\n\t\t\to(model.excludedDates).deepEquals(excludedDates)(\"model has same exclusions as original event\")\n\t\t\to(model.result.repeatRule?.excludedDates).deepEquals(event.repeatRule?.excludedDates)(\"result has same exclusion as original event\")\n\t\t\tmodel.repeatInterval = 2\n\t\t\to(model.excludedDates).deepEquals(excludedDates)\n\t\t\to(model.result.repeatRule?.excludedDates).deepEquals([])\n\t\t})\n\t\to(\"frequency changes delete exclusions\", async function () {\n\t\t\tconst excludedDates = [new Date(\"2023-03-13T00:00:00Z\")]\n\t\t\tconst event = createTestEntity(CalendarEventTypeRef, {\n\t\t\t\tstartTime: new Date(\"2023-03-13T00:00:00Z\"),\n\t\t\t\trepeatRule: createTestEntity(RepeatRuleTypeRef, {\n\t\t\t\t\tfrequency: \"1\",\n\t\t\t\t\tinterval: \"1\",\n\t\t\t\t\tendType: EndType.Count,\n\t\t\t\t\tendValue: \"10\",\n\t\t\t\t\texcludedDates: excludedDates.map((date) => createTestEntity(DateWrapperTypeRef, { date })),\n\t\t\t\t\ttimeZone: \"Europe/Berlin\",\n\t\t\t\t}),\n\t\t\t})\n\t\t\tconst model = getModelBerlin(event)\n\t\t\tmodel.repeatPeriod = RepeatPeriod.WEEKLY\n\t\t\to(model.excludedDates).deepEquals(excludedDates)\n\t\t\to(model.result.repeatRule?.excludedDates).deepEquals(event.repeatRule?.excludedDates)\n\t\t\tmodel.repeatPeriod = RepeatPeriod.DAILY\n\t\t\to(model.excludedDates).deepEquals(excludedDates)\n\t\t\to(model.result.repeatRule?.excludedDates).deepEquals([])\n\t\t})\n\t\to(\"repeat end date changes delete exclusions\", async function () {\n\t\t\tconst excludedDates = [new Date(\"2023-04-13T15:00:00Z\")]\n\t\t\tconst originalUntilDate = new Date(\"2023-05-13T00:00:00Z\")\n\t\t\tconst event = createTestEntity(CalendarEventTypeRef, {\n\t\t\t\tstartTime: new Date(\"2023-01-13T15:00:00Z\"),\n\t\t\t\tendTime: new Date(\"2023-01-13T20:00:00Z\"),\n\t\t\t\trepeatRule: createTestEntity(RepeatRuleTypeRef, {\n\t\t\t\t\tfrequency: RepeatPeriod.DAILY,\n\t\t\t\t\tinterval: \"1\",\n\t\t\t\t\tendType: EndType.UntilDate,\n\t\t\t\t\tendValue: originalUntilDate.getTime().toString(),\n\t\t\t\t\texcludedDates: excludedDates.map((date) => createTestEntity(DateWrapperTypeRef, { date })),\n\t\t\t\t\ttimeZone: \"Europe/Berlin\",\n\t\t\t\t}),\n\t\t\t})\n\t\t\tconst model = getModelBerlin(event)\n\t\t\tmodel.repeatEndDateForDisplay = new Date(model.repeatEndDateForDisplay.getTime())\n\t\t\to(model.excludedDates).deepEquals(excludedDates)(\"we still have them available for display\")\n\t\t\to(model.result.repeatRule?.excludedDates).deepEquals(event.repeatRule?.excludedDates)(\n\t\t\t\t\"in the result, they're still there because the end date did not change\",\n\t\t\t)\n\t\t\tmodel.repeatEndDateForDisplay = new Date(\"2023-06-13T00:00:00Z\")\n\t\t\to(model.excludedDates).deepEquals(excludedDates)\n\t\t\to(model.result.repeatRule?.excludedDates).deepEquals([])\n\t\t})\n\t\to(\"repeat end date changes delete exclusions, all-day events\", function () {\n\t\t\tconst excludedDates = [new Date(\"2023-04-13T15:00:00Z\")]\n\t\t\tconst originalUntilDate = new Date(\"2023-05-13T00:00:00Z\")\n\t\t\tconst event = createTestEntity(CalendarEventTypeRef, {\n\t\t\t\tstartTime: new Date(\"2023-01-13T00:00:00Z\"),\n\t\t\t\tendTime: new Date(\"2023-01-14T00:00:00Z\"),\n\t\t\t\trepeatRule: createTestEntity(RepeatRuleTypeRef, {\n\t\t\t\t\tfrequency: RepeatPeriod.DAILY,\n\t\t\t\t\tinterval: \"1\",\n\t\t\t\t\tendType: EndType.UntilDate,\n\t\t\t\t\tendValue: originalUntilDate.getTime().toString(),\n\t\t\t\t\texcludedDates: excludedDates.map((date) => createTestEntity(DateWrapperTypeRef, { date })),\n\t\t\t\t\ttimeZone: \"Europe/Berlin\",\n\t\t\t\t}),\n\t\t\t})\n\t\t\tconst model = getModelBerlin(event)\n\t\t\to(model.isAllDay).equals(true)\n\t\t\tmodel.repeatEndDateForDisplay = new Date(model.repeatEndDateForDisplay.getTime())\n\t\t\to(model.excludedDates).deepEquals(excludedDates)(\"we still have them available for display\")\n\t\t\to(model.result.repeatRule?.excludedDates).deepEquals(event.repeatRule?.excludedDates)(\n\t\t\t\t\"in the result, they're still there because the end date did not change\",\n\t\t\t)\n\t\t\tmodel.repeatEndDateForDisplay = new Date(\"2023-06-13T00:00:00Z\")\n\t\t\to(model.excludedDates).deepEquals(excludedDates)\n\t\t\to(model.result.repeatRule?.excludedDates).deepEquals([])\n\t\t})\n\t\to(\"time zone changes do not delete exclusions\", async function () {\n\t\t\tconst excludedDates = [new Date(\"2023-04-13T15:00:00Z\")]\n\t\t\tconst originalUntilDate = new Date(\"2023-05-13T00:00:00Z\")\n\t\t\tconst event = createTestEntity(CalendarEventTypeRef, {\n\t\t\t\tstartTime: new Date(\"2023-01-13T00:00:00Z\"),\n\t\t\t\tendTime: new Date(\"2023-01-14T00:00:00Z\"),\n\t\t\t\trepeatRule: createTestEntity(RepeatRuleTypeRef, {\n\t\t\t\t\tfrequency: RepeatPeriod.DAILY,\n\t\t\t\t\tinterval: \"1\",\n\t\t\t\t\tendType: EndType.UntilDate,\n\t\t\t\t\tendValue: originalUntilDate.getTime().toString(),\n\t\t\t\t\texcludedDates: excludedDates.map((date) => createTestEntity(DateWrapperTypeRef, { date })),\n\t\t\t\t\ttimeZone: \"Asia/Krasnoyarsk\",\n\t\t\t\t}),\n\t\t\t})\n\t\t\tconst model = getModelBerlin(event)\n\t\t\to(model.excludedDates).deepEquals(excludedDates)\n\t\t\tconst result = model.result\n\t\t\to(result.repeatRule?.excludedDates).deepEquals(event.repeatRule?.excludedDates)\n\t\t\to(result.repeatRule?.timeZone).equals(\"Europe/Berlin\")\n\t\t})\n\t})\n\to.spec(\"excludeDate\", function () {\n\t\to(\"no exclusion is added if event has no repeat rule\", async function () {\n\t\t\tconst event = createTestEntity(CalendarEventTypeRef, {\n\t\t\t\tstartTime: new Date(\"2023-01-13T00:00:00Z\"),\n\t\t\t\tendTime: new Date(\"2023-01-14T00:00:00Z\"),\n\t\t\t\trepeatRule: null,\n\t\t\t})\n\t\t\tconst model = getModelBerlin(event)\n\t\t\tmodel.excludeDate(new Date(\"2023-01-13T00:00:00Z\"))\n\t\t\to(model.repeatPeriod).equals(null)\n\t\t\to(model.result.repeatRule).equals(null)\n\t\t})\n\t\to(\"adding two exclusions in reverse order sorts them\", async function () {\n\t\t\tconst event = createTestEntity(CalendarEventTypeRef, {\n\t\t\t\tstartTime: new Date(\"2023-01-13T00:00:00Z\"),\n\t\t\t\tendTime: new Date(\"2023-01-14T00:00:00Z\"),\n\t\t\t\trepeatRule: createTestEntity(RepeatRuleTypeRef, {\n\t\t\t\t\tfrequency: RepeatPeriod.DAILY,\n\t\t\t\t\tinterval: \"1\",\n\t\t\t\t\tendType: EndType.Never,\n\t\t\t\t\tendValue: null,\n\t\t\t\t\texcludedDates: [],\n\t\t\t\t}),\n\t\t\t})\n\t\t\tconst model = getModelBerlin(event)\n\t\t\tconst exclusions = [new Date(\"2023-03-12T00:00:00Z\"), new Date(\"2023-03-13T00:00:00Z\")]\n\t\t\tmodel.excludeDate(exclusions[1])\n\t\t\tmodel.excludeDate(exclusions[0])\n\n\t\t\to(model.result.repeatRule?.excludedDates).deepEquals(exclusions.map((date) => createTestEntity(DateWrapperTypeRef, { date })))\n\t\t\to(model.excludedDates).deepEquals(exclusions)\n\t\t})\n\t\to(\"adding two exclusions in order sorts them\", async function () {\n\t\t\tconst event = createTestEntity(CalendarEventTypeRef, {\n\t\t\t\tstartTime: new Date(\"2023-01-13T00:00:00Z\"),\n\t\t\t\tendTime: new Date(\"2023-01-14T00:00:00Z\"),\n\t\t\t\trepeatRule: createTestEntity(RepeatRuleTypeRef, {\n\t\t\t\t\tfrequency: RepeatPeriod.DAILY,\n\t\t\t\t\tinterval: \"1\",\n\t\t\t\t\tendType: EndType.Never,\n\t\t\t\t\tendValue: null,\n\t\t\t\t\texcludedDates: [],\n\t\t\t\t}),\n\t\t\t})\n\t\t\tconst model = getModelBerlin(event)\n\t\t\tconst exclusions = [new Date(\"2023-03-12T00:00:00Z\"), new Date(\"2023-03-13T00:00:00Z\")]\n\t\t\tmodel.excludeDate(exclusions[0])\n\t\t\tmodel.excludeDate(exclusions[1])\n\n\t\t\to(model.result.repeatRule?.excludedDates).deepEquals(exclusions.map((date) => createTestEntity(DateWrapperTypeRef, { date })))\n\t\t\to(model.excludedDates).deepEquals(exclusions)\n\t\t})\n\t\to(\"adding the same exclusion multiple times deduplicates them\", async function () {\n\t\t\tconst event = createTestEntity(CalendarEventTypeRef, {\n\t\t\t\tstartTime: new Date(\"2023-01-13T00:00:00Z\"),\n\t\t\t\tendTime: new Date(\"2023-01-14T00:00:00Z\"),\n\t\t\t\trepeatRule: createTestEntity(RepeatRuleTypeRef, {\n\t\t\t\t\tfrequency: RepeatPeriod.DAILY,\n\t\t\t\t\tinterval: \"1\",\n\t\t\t\t\tendType: EndType.Never,\n\t\t\t\t\tendValue: null,\n\t\t\t\t\texcludedDates: [],\n\t\t\t\t}),\n\t\t\t})\n\t\t\tconst model = getModelBerlin(event)\n\t\t\tconst exclusion = new Date(\"2023-03-12T00:00:00Z\")\n\t\t\tmodel.excludeDate(exclusion)\n\t\t\tmodel.excludeDate(exclusion)\n\n\t\t\to(model.result.repeatRule?.excludedDates).deepEquals([createTestEntity(DateWrapperTypeRef, { date: exclusion })])\n\t\t\to(model.excludedDates).deepEquals([exclusion])\n\t\t})\n\t})\n})\n","import o from \"@tutao/otest\"\nimport {\n\tCalendarEvent,\n\tCalendarEventAttendeeTypeRef,\n\tCalendarEventTypeRef,\n\tContactTypeRef,\n\tUserSettingsGroupRootTypeRef,\n} from \"../../../../src/common/api/entities/tutanota/TypeRefs.js\"\nimport { matchers, object, replace, verify, when } from \"testdouble\"\nimport { RecipientsModel } from \"../../../../src/common/api/main/RecipientsModel.js\"\nimport { Recipient, RecipientType } from \"../../../../src/common/api/common/recipients/Recipient.js\"\nimport { AccountType, CalendarAttendeeStatus, ShareCapability } from \"../../../../src/common/api/common/TutanotaConstants.js\"\nimport { UserTypeRef } from \"../../../../src/common/api/entities/sys/TypeRefs.js\"\nimport { UserController } from \"../../../../src/common/api/main/UserController.js\"\nimport { CalendarOperation, EventType } from \"../../../../src/calendar-app/calendar/gui/eventeditor-model/CalendarEventModel.js\"\nimport {\n\taddCapability,\n\tcalendars,\n\tgetDateInZone,\n\tmakeUserController,\n\totherAddress,\n\totherAddress2,\n\totherRecipient,\n\totherRecipient2,\n\townAddresses,\n\townerAddress,\n\townerAlias,\n\townerAliasRecipient,\n\townerRecipient,\n\tthirdAddress,\n\tthirdRecipient,\n} from \"../CalendarTestUtils.js\"\nimport { assertNotNull, downcast, neverNull } from \"@tutao/tutanota-utils\"\nimport { RecipientField } from \"../../../../src/common/mailFunctionality/SharedMailUtils.js\"\nimport { ProgrammingError } from \"../../../../src/common/api/common/error/ProgrammingError.js\"\nimport { createTestEntity } from \"../../TestUtils.js\"\nimport { SendMailModel } from \"../../../../src/common/mailFunctionality/SendMailModel.js\"\nimport { CalendarEventWhoModel } from \"../../../../src/calendar-app/calendar/gui/eventeditor-model/CalendarEventWhoModel.js\"\n\no.spec(\"CalendarEventWhoModel\", function () {\n\tconst passwordStrengthModel = () => 1\n\n\tlet recipients: RecipientsModel\n\tlet sendMailModel: SendMailModel\n\tlet userController: UserController\n\n\tconst setupRecipient = (recipient: Recipient) => {\n\t\tconst sameAddressMatcher = matchers.argThat((p) => p.address === recipient.address)\n\t\twhen(recipients.resolve(sameAddressMatcher, matchers.anything())).thenReturn({\n\t\t\tresolved: () => Promise.resolve(recipient),\n\t\t})\n\t}\n\n\to.beforeEach(() => {\n\t\tuserController = makeUserController()\n\t\tsendMailModel = object()\n\t\trecipients = object()\n\t\tsetupRecipient(ownerRecipient)\n\t\tsetupRecipient(ownerAliasRecipient)\n\t\tsetupRecipient(otherRecipient)\n\t\tsetupRecipient(otherRecipient2)\n\t\tsetupRecipient(thirdRecipient)\n\t})\n\n\tconst getNewModel = (initialValues: Partial<CalendarEvent>) =>\n\t\tnew CalendarEventWhoModel(\n\t\t\tinitialValues,\n\t\t\tEventType.OWN,\n\t\t\tCalendarOperation.Create,\n\t\t\tcalendars,\n\t\t\tcalendars.get(\"ownCalendar\")!,\n\t\t\tuserController,\n\t\t\ttrue,\n\t\t\townAddresses,\n\t\t\trecipients,\n\t\t\tnull,\n\t\t\tpasswordStrengthModel,\n\t\t\t() => sendMailModel,\n\t\t)\n\tconst getOldModel = (initialValues: Partial<CalendarEvent>, eventType = EventType.OWN) =>\n\t\tnew CalendarEventWhoModel(\n\t\t\tinitialValues,\n\t\t\teventType,\n\t\t\tCalendarOperation.EditAll,\n\t\t\tcalendars,\n\t\t\tcalendars.get(\"ownCalendar\")!,\n\t\t\tuserController,\n\t\t\tfalse,\n\t\t\townAddresses,\n\t\t\trecipients,\n\t\t\tnull,\n\t\t\tpasswordStrengthModel,\n\t\t\t() => sendMailModel,\n\t\t)\n\n\tconst getOldSharedModel = (initialValues: Partial<CalendarEvent>, eventType = EventType.SHARED_RW) =>\n\t\tnew CalendarEventWhoModel(\n\t\t\tinitialValues,\n\t\t\teventType,\n\t\t\tCalendarOperation.EditAll,\n\t\t\tcalendars,\n\t\t\tcalendars.get(\"sharedCalendar\")!,\n\t\t\tuserController,\n\t\t\tfalse,\n\t\t\townAddresses,\n\t\t\trecipients,\n\t\t\tnull,\n\t\t\tpasswordStrengthModel,\n\t\t\t() => sendMailModel,\n\t\t)\n\n\tconst getOldModelWithSingleEdit = (initialValues: Partial<CalendarEvent>, eventType = EventType.OWN) =>\n\t\tnew CalendarEventWhoModel(\n\t\t\tinitialValues,\n\t\t\teventType,\n\t\t\tCalendarOperation.EditThis,\n\t\t\tcalendars,\n\t\t\tcalendars.get(\"ownCalendar\")!,\n\t\t\tuserController,\n\t\t\tfalse,\n\t\t\townAddresses,\n\t\t\trecipients,\n\t\t\tnull,\n\t\t\tpasswordStrengthModel,\n\t\t\t() => sendMailModel,\n\t\t)\n\n\tconst getOldInviteModel = (initialValues: Partial<CalendarEvent>) =>\n\t\tnew CalendarEventWhoModel(\n\t\t\tinitialValues,\n\t\t\tEventType.INVITE,\n\t\t\tCalendarOperation.EditAll,\n\t\t\tcalendars,\n\t\t\tcalendars.get(\"ownCalendar\")!,\n\t\t\tuserController,\n\t\t\tfalse,\n\t\t\townAddresses,\n\t\t\trecipients,\n\t\t\tnull,\n\t\t\tpasswordStrengthModel,\n\t\t\t() => sendMailModel,\n\t\t)\n\n\tconst getNewInviteModel = (initialValues: Partial<CalendarEvent>) =>\n\t\tnew CalendarEventWhoModel(\n\t\t\tinitialValues,\n\t\t\tEventType.INVITE,\n\t\t\tCalendarOperation.Create,\n\t\t\tcalendars,\n\t\t\tcalendars.get(\"ownCalendar\")!,\n\t\t\tuserController,\n\t\t\ttrue,\n\t\t\townAddresses,\n\t\t\trecipients,\n\t\t\tnull,\n\t\t\tpasswordStrengthModel,\n\t\t\t() => sendMailModel,\n\t\t)\n\n\to.spec(\"invite capabilities for different events\", function () {\n\t\to(\"invite in our own calendar can only modify own attendance\", async function () {\n\t\t\tconst existingEvent = createTestEntity(CalendarEventTypeRef, {\n\t\t\t\tsummary: \"existing event\",\n\t\t\t\tstartTime: new Date(2020, 4, 26, 12),\n\t\t\t\tendTime: new Date(2020, 4, 26, 13),\n\t\t\t\torganizer: otherAddress,\n\t\t\t\t_ownerGroup: \"ownCalendar\",\n\t\t\t\tattendees: [\n\t\t\t\t\tcreateTestEntity(CalendarEventAttendeeTypeRef, {\n\t\t\t\t\t\taddress: ownerAddress,\n\t\t\t\t\t\tstatus: CalendarAttendeeStatus.ACCEPTED,\n\t\t\t\t\t}),\n\t\t\t\t\tcreateTestEntity(CalendarEventAttendeeTypeRef, {\n\t\t\t\t\t\taddress: otherAddress,\n\t\t\t\t\t}),\n\t\t\t\t],\n\t\t\t})\n\t\t\tconst model = getOldInviteModel(existingEvent)\n\t\t\to(model.ownGuest?.status).equals(CalendarAttendeeStatus.ACCEPTED)\n\t\t\to(model.canModifyGuests).equals(false)\n\t\t\tmodel.setOwnAttendance(CalendarAttendeeStatus.DECLINED)\n\t\t\to(model.ownGuest?.status).equals(CalendarAttendeeStatus.DECLINED)\n\t\t\to(model.possibleOrganizers).deepEquals([neverNull(existingEvent.organizer)])\n\t\t})\n\t\to(\"existing normal event in writable calendar can not modify guests\", async function () {\n\t\t\tconst userController = makeUserController()\n\t\t\taddCapability(userController.user, \"sharedCalendar\", ShareCapability.Write)\n\t\t\tconst existingEvent = createTestEntity(CalendarEventTypeRef, {\n\t\t\t\tsummary: \"existing event\",\n\t\t\t\tstartTime: new Date(2020, 4, 26, 12),\n\t\t\t\tendTime: new Date(2020, 4, 26, 13),\n\t\t\t\torganizer: otherAddress,\n\t\t\t\t_ownerGroup: \"sharedCalendar\",\n\t\t\t\tattendees: [\n\t\t\t\t\tcreateTestEntity(CalendarEventAttendeeTypeRef, {\n\t\t\t\t\t\taddress: ownerAddress,\n\t\t\t\t\t\tstatus: CalendarAttendeeStatus.ACCEPTED,\n\t\t\t\t\t}),\n\t\t\t\t\tcreateTestEntity(CalendarEventAttendeeTypeRef, {\n\t\t\t\t\t\taddress: otherAddress,\n\t\t\t\t\t}),\n\t\t\t\t],\n\t\t\t})\n\n\t\t\tconst model = getOldModel(existingEvent, EventType.SHARED_RW)\n\t\t\tmodel.selectedCalendar = calendars.get(\"sharedCalendar\")!\n\t\t\to(model.canModifyGuests).equals(false)\n\t\t\to(model.possibleOrganizers).deepEquals([neverNull(existingEvent.organizer)])\n\t\t})\n\t\to(\"for an invite in writable calendar, we cannot modify guests\", async function () {\n\t\t\tconst userController = makeUserController()\n\t\t\taddCapability(userController.user, \"sharedCalendar\", ShareCapability.Write)\n\t\t\tconst existingEvent = createTestEntity(CalendarEventTypeRef, {\n\t\t\t\tsummary: \"existing event\",\n\t\t\t\tstartTime: new Date(2020, 4, 26, 12),\n\t\t\t\tendTime: new Date(2020, 4, 26, 13),\n\t\t\t\torganizer: otherAddress,\n\t\t\t\t_ownerGroup: \"sharedCalendar\",\n\t\t\t\tattendees: [\n\t\t\t\t\tcreateTestEntity(CalendarEventAttendeeTypeRef, {\n\t\t\t\t\t\taddress: otherAddress,\n\t\t\t\t\t}),\n\t\t\t\t\tcreateTestEntity(CalendarEventAttendeeTypeRef, {\n\t\t\t\t\t\taddress: otherAddress2,\n\t\t\t\t\t}),\n\t\t\t\t],\n\t\t\t})\n\t\t\tconst model = getOldSharedModel(existingEvent, EventType.LOCKED)\n\t\t\to(model.canModifyGuests).equals(false)(\"cannot modify guests\")\n\t\t\to(model.possibleOrganizers).deepEquals([neverNull(existingEvent.organizer)])\n\t\t})\n\t\to(\"in readonly calendar, cannot modify guests\", async function () {\n\t\t\tconst userController = makeUserController()\n\t\t\taddCapability(userController.user, \"sharedCalendar\", ShareCapability.Read)\n\t\t\tconst existingEvent = createTestEntity(CalendarEventTypeRef, {\n\t\t\t\t_ownerGroup: \"sharedCalendar\",\n\t\t\t})\n\t\t\tconst model = getOldSharedModel(existingEvent, EventType.SHARED_RO)\n\t\t\to(model.canModifyGuests).equals(false)(\"canModifyGuests\")\n\t\t\to(model.possibleOrganizers).deepEquals([])\n\t\t})\n\t\to(\"in writable calendar w/ guests, we cannot modify guests\", async function () {\n\t\t\tconst userController = makeUserController()\n\t\t\taddCapability(userController.user, \"sharedCalendar\", ShareCapability.Write)\n\t\t\tconst existingEvent = createTestEntity(CalendarEventTypeRef, {\n\t\t\t\tsummary: \"existing event\",\n\t\t\t\tstartTime: new Date(2020, 4, 26, 12),\n\t\t\t\tendTime: new Date(2020, 4, 26, 13),\n\t\t\t\torganizer: otherAddress,\n\t\t\t\t_ownerGroup: \"sharedCalendar\",\n\t\t\t\tattendees: [\n\t\t\t\t\tcreateTestEntity(CalendarEventAttendeeTypeRef, {\n\t\t\t\t\t\taddress: otherAddress,\n\t\t\t\t\t}),\n\t\t\t\t\tcreateTestEntity(CalendarEventAttendeeTypeRef, {\n\t\t\t\t\t\taddress: ownerAddress,\n\t\t\t\t\t}),\n\t\t\t\t],\n\t\t\t})\n\t\t\tconst model = getOldSharedModel(existingEvent, EventType.SHARED_RO)\n\t\t\to(model.canModifyGuests).equals(false)\n\t\t\to(model.possibleOrganizers).deepEquals([neverNull(existingEvent.organizer)])\n\t\t})\n\t})\n\to.spec(\"adding and removing attendees\", function () {\n\t\to(\"adding another alias on your own event replaces the old attendee and updates the organizer\", async function () {\n\t\t\tconst model = getNewModel({\n\t\t\t\tattendees: [\n\t\t\t\t\tcreateTestEntity(CalendarEventAttendeeTypeRef, { address: ownAddresses[0] }),\n\t\t\t\t\tcreateTestEntity(CalendarEventAttendeeTypeRef, { address: otherAddress }),\n\t\t\t\t],\n\t\t\t\torganizer: ownAddresses[0],\n\t\t\t})\n\n\t\t\tmodel.addAttendee(ownerAlias.address, null)\n\t\t\tawait model.recipientsSettled\n\t\t\to(model.guests).deepEquals([\n\t\t\t\t{\n\t\t\t\t\taddress: otherAddress.address,\n\t\t\t\t\tname: otherAddress.name,\n\t\t\t\t\ttype: RecipientType.EXTERNAL,\n\t\t\t\t\tcontact: otherRecipient.contact,\n\t\t\t\t\tstatus: CalendarAttendeeStatus.ADDED,\n\t\t\t\t},\n\t\t\t])(\"the single non-organizer guest is in guests array\")\n\t\t\to(model.ownGuest).deepEquals(model.organizer)(\"the own guest is the organizer\")\n\t\t\tconst result = model.result\n\t\t\to(result.inviteModel).notEquals(null)(\"on a new model, everyone but the organizer needs to be invited, even if added during initialization\")\n\t\t\to(result.updateModel).equals(null)\n\t\t\to(result.cancelModel).equals(null)\n\t\t\to(result.responseModel).equals(null)\n\t\t\to(result.attendees).deepEquals([\n\t\t\t\tcreateTestEntity(CalendarEventAttendeeTypeRef, { address: ownerAlias, status: CalendarAttendeeStatus.ACCEPTED }),\n\t\t\t\tcreateTestEntity(CalendarEventAttendeeTypeRef, { address: otherAddress, status: CalendarAttendeeStatus.ADDED }),\n\t\t\t])(\"the result contains all attendees including the organizer\")\n\t\t\to(result.organizer).deepEquals(ownerAlias)\n\t\t})\n\t\to(\"setting multiple ownAddresses correctly gives the possible organizers\", function () {\n\t\t\tconst model = getNewModel({\n\t\t\t\tattendees: [\n\t\t\t\t\tcreateTestEntity(CalendarEventAttendeeTypeRef, { address: ownAddresses[0] }),\n\t\t\t\t\tcreateTestEntity(CalendarEventAttendeeTypeRef, { address: otherAddress }),\n\t\t\t\t],\n\t\t\t\torganizer: ownAddresses[0],\n\t\t\t})\n\t\t\to(model.possibleOrganizers).deepEquals([ownerAddress, ownerAlias])\n\t\t})\n\t\to(\"add attendee that is not the user while without organizer -> organizer is now the first of the current users' mail addresses\", async function () {\n\t\t\tconst model = getNewModel({\n\t\t\t\tattendees: [],\n\t\t\t\torganizer: null,\n\t\t\t})\n\t\t\tmodel.addAttendee(otherAddress.address, otherRecipient.contact)\n\t\t\tawait model.recipientsSettled\n\t\t\to(model.organizer).deepEquals({\n\t\t\t\taddress: ownAddresses[0].address,\n\t\t\t\tname: ownAddresses[0].name,\n\t\t\t\ttype: RecipientType.INTERNAL,\n\t\t\t\tstatus: CalendarAttendeeStatus.ACCEPTED,\n\t\t\t\tcontact: null,\n\t\t\t})\n\t\t\tconst result = model.result\n\t\t\to(result.attendees.map((a) => a.address)).deepEquals([ownerAddress, otherAddress])\n\t\t\to(result.organizer).deepEquals(ownerAddress)\n\t\t})\n\t\to(\"remove last attendee that is not the organizer also removes the organizer on the result, but not on the attendees getter\", function () {\n\t\t\tconst model = getNewModel({\n\t\t\t\tattendees: [],\n\t\t\t\torganizer: null,\n\t\t\t})\n\t\t\tmodel.addAttendee(otherAddress.address, otherRecipient.contact)\n\t\t\to(model.organizer).notEquals(null)\n\t\t\tmodel.removeAttendee(otherAddress.address)\n\t\t\tconst result = model.result\n\t\t\to(result.attendees.length).equals(0)\n\t\t\to(result.organizer).equals(null)\n\t\t})\n\t\to(\"trying to remove the organizer while there are other attendees does nothing\", function () {\n\t\t\tconst model = getNewModel({\n\t\t\t\tattendees: [\n\t\t\t\t\tcreateTestEntity(CalendarEventAttendeeTypeRef, { address: ownAddresses[0] }),\n\t\t\t\t\tcreateTestEntity(CalendarEventAttendeeTypeRef, { address: otherAddress }),\n\t\t\t\t],\n\t\t\t\torganizer: ownerAddress,\n\t\t\t})\n\t\t\tmodel.removeAttendee(ownerAddress.address)\n\t\t\tconst result = model.result\n\t\t\to(result.attendees.length).equals(2)\n\t\t\to(result.organizer).deepEquals(ownerAddress)\n\t\t})\n\t\to(\"getting the result on an old model is idempotent\", function () {\n\t\t\tconst model = getOldModel({\n\t\t\t\tattendees: [\n\t\t\t\t\tcreateTestEntity(CalendarEventAttendeeTypeRef, { address: ownAddresses[0], status: CalendarAttendeeStatus.ACCEPTED }),\n\t\t\t\t\tcreateTestEntity(CalendarEventAttendeeTypeRef, { address: otherAddress, status: CalendarAttendeeStatus.ACCEPTED }),\n\t\t\t\t],\n\t\t\t\torganizer: ownerAddress,\n\t\t\t})\n\t\t\tmodel.removeAttendee(otherAddress.address)\n\t\t\tmodel.addAttendee(otherAddress2.address, otherRecipient2.contact)\n\t\t\to(model.result).deepEquals(model.result)\n\t\t})\n\t\to(\"removing an attendee while there are other attendees removes only that attendee\", async function () {\n\t\t\tconst model = getOldModel({\n\t\t\t\tattendees: [\n\t\t\t\t\tcreateTestEntity(CalendarEventAttendeeTypeRef, { address: ownAddresses[0], status: CalendarAttendeeStatus.ACCEPTED }),\n\t\t\t\t\tcreateTestEntity(CalendarEventAttendeeTypeRef, { address: otherAddress }),\n\t\t\t\t],\n\t\t\t\torganizer: ownerAddress,\n\t\t\t})\n\t\t\tmodel.addAttendee(otherAddress.address, otherRecipient.contact)\n\t\t\tmodel.addAttendee(otherAddress2.address, otherRecipient2.contact)\n\t\t\tawait model.recipientsSettled\n\t\t\tconst resultBeforeRemove = model.result\n\t\t\to(resultBeforeRemove.attendees).deepEquals([\n\t\t\t\tcreateTestEntity(CalendarEventAttendeeTypeRef, { address: ownerAddress, status: CalendarAttendeeStatus.ACCEPTED }),\n\t\t\t\tcreateTestEntity(CalendarEventAttendeeTypeRef, { address: otherAddress, status: CalendarAttendeeStatus.ADDED }),\n\t\t\t\tcreateTestEntity(CalendarEventAttendeeTypeRef, { address: otherAddress2, status: CalendarAttendeeStatus.ADDED }),\n\t\t\t])(\"there are three attendees in the event\")\n\t\t\to(resultBeforeRemove.organizer).deepEquals(ownerAddress)\n\t\t\tmodel.removeAttendee(otherAddress.address)\n\t\t\tconst result = model.result\n\t\t\to(result.attendees).deepEquals([\n\t\t\t\tcreateTestEntity(CalendarEventAttendeeTypeRef, { address: ownerAddress, status: CalendarAttendeeStatus.ACCEPTED }),\n\t\t\t\tcreateTestEntity(CalendarEventAttendeeTypeRef, { address: otherAddress2, status: CalendarAttendeeStatus.ADDED }),\n\t\t\t])\n\t\t\to(result.organizer).deepEquals(ownerAddress)\n\t\t})\n\t\to(\"setting external passwords is reflected in the getters and result\", async function () {\n\t\t\tconst model = getNewModel({\n\t\t\t\tattendees: [\n\t\t\t\t\tcreateTestEntity(CalendarEventAttendeeTypeRef, { address: ownAddresses[0] }),\n\t\t\t\t\tcreateTestEntity(CalendarEventAttendeeTypeRef, { address: otherAddress, status: CalendarAttendeeStatus.NEEDS_ACTION }),\n\t\t\t\t],\n\t\t\t\torganizer: ownerAddress,\n\t\t\t\tinvitedConfidentially: true,\n\t\t\t})\n\n\t\t\to(model.guests).deepEquals([\n\t\t\t\t{\n\t\t\t\t\taddress: \"someone@tutanota.de\",\n\t\t\t\t\tname: \"Some One\",\n\t\t\t\t\tstatus: CalendarAttendeeStatus.NEEDS_ACTION,\n\t\t\t\t\ttype: RecipientType.UNKNOWN,\n\t\t\t\t\tcontact: null,\n\t\t\t\t},\n\t\t\t])\n\t\t\to(model.getPresharedPassword(otherAddress.address)).deepEquals({ password: \"\", strength: 0 })(\"password is not set\")\n\t\t\tawait model.recipientsSettled\n\t\t\to(model.guests).deepEquals([\n\t\t\t\t{\n\t\t\t\t\taddress: \"someone@tutanota.de\",\n\t\t\t\t\tname: \"Some One\",\n\t\t\t\t\tstatus: CalendarAttendeeStatus.NEEDS_ACTION,\n\t\t\t\t\ttype: RecipientType.EXTERNAL,\n\t\t\t\t\tcontact: otherRecipient.contact,\n\t\t\t\t},\n\t\t\t])\n\t\t\to(model.getPresharedPassword(otherAddress.address)).deepEquals({ password: \"otherPassword\", strength: 1 })\n\t\t\tconst { attendees } = model.result\n\t\t\to(attendees).deepEquals([\n\t\t\t\tcreateTestEntity(CalendarEventAttendeeTypeRef, {\n\t\t\t\t\taddress: ownerAddress,\n\t\t\t\t\tstatus: CalendarAttendeeStatus.ADDED,\n\t\t\t\t}),\n\t\t\t\tcreateTestEntity(CalendarEventAttendeeTypeRef, {\n\t\t\t\t\taddress: otherAddress,\n\t\t\t\t\tstatus: CalendarAttendeeStatus.NEEDS_ACTION,\n\t\t\t\t}),\n\t\t\t])\n\t\t})\n\t\to(\"adding only oneself as an organizer but no attendees results in a result without organizer or attendees\", function () {\n\t\t\tconst model = getNewModel({})\n\t\t\tmodel.addAttendee(ownAddresses[0].address)\n\t\t\to(model.guests.length).equals(0)\n\t\t\to(model.organizer?.address).equals(ownAddresses[0].address)\n\t\t\to(model.result.organizer).equals(null)\n\t\t\to(model.result.attendees.length).equals(0)\n\t\t})\n\t\to(\"organizer is replaced with ourselves when an own event with someone else as organizer is opened\", function () {\n\t\t\tconst model = getNewModel({\n\t\t\t\tattendees: [\n\t\t\t\t\tcreateTestEntity(CalendarEventAttendeeTypeRef, { address: ownAddresses[0], status: CalendarAttendeeStatus.ACCEPTED }),\n\t\t\t\t\tcreateTestEntity(CalendarEventAttendeeTypeRef, { address: otherAddress, status: CalendarAttendeeStatus.ACCEPTED }),\n\t\t\t\t\tcreateTestEntity(CalendarEventAttendeeTypeRef, { address: otherAddress2, status: CalendarAttendeeStatus.NEEDS_ACTION }),\n\t\t\t\t],\n\t\t\t\torganizer: otherAddress,\n\t\t\t})\n\t\t\to(model.guests.length).equals(2)(\"only two guests besides the organizer\")\n\t\t\to(model.organizer?.address).equals(ownAddresses[0].address)(\"model states us as organizer\")\n\t\t\to(model.result.organizer).deepEquals(ownAddresses[0])(\"result has us as an organizer\")\n\t\t\to(model.result.attendees.length).equals(3)(\"we as organizer + the original organizer + the other attendee are in the result\")\n\t\t})\n\t\to(\"removing/adding attendees on existing event correctly creates the send models\", function () {\n\t\t\tconst sendModels: Array<SendMailModel> = [object<SendMailModel>(\"first\"), object<SendMailModel>(\"second\"), object<SendMailModel>(\"third\")]\n\t\t\tconst userController = makeUserController([], AccountType.PAID)\n\n\t\t\tconst existingEvent = createTestEntity(CalendarEventTypeRef, {\n\t\t\t\t_ownerGroup: \"ownCalendar\",\n\t\t\t\tstartTime: getDateInZone(\"2020-06-01\"),\n\t\t\t\tendTime: getDateInZone(\"2020-06-02\"),\n\t\t\t\torganizer: ownerAddress,\n\t\t\t\tattendees: [\n\t\t\t\t\tcreateTestEntity(CalendarEventAttendeeTypeRef, {\n\t\t\t\t\t\tstatus: CalendarAttendeeStatus.NEEDS_ACTION,\n\t\t\t\t\t\taddress: ownerAddress,\n\t\t\t\t\t}),\n\t\t\t\t\tcreateTestEntity(CalendarEventAttendeeTypeRef, {\n\t\t\t\t\t\tstatus: CalendarAttendeeStatus.NEEDS_ACTION,\n\t\t\t\t\t\taddress: otherAddress2,\n\t\t\t\t\t}),\n\t\t\t\t\tcreateTestEntity(CalendarEventAttendeeTypeRef, {\n\t\t\t\t\t\tstatus: CalendarAttendeeStatus.NEEDS_ACTION,\n\t\t\t\t\t\taddress: thirdAddress,\n\t\t\t\t\t}),\n\t\t\t\t],\n\t\t\t})\n\t\t\tconst model = new CalendarEventWhoModel(\n\t\t\t\texistingEvent,\n\t\t\t\tEventType.OWN,\n\t\t\t\tCalendarOperation.EditAll,\n\t\t\t\tcalendars,\n\t\t\t\tcalendars.get(\"ownCalendar\")!,\n\t\t\t\tuserController,\n\t\t\t\tfalse,\n\t\t\t\townAddresses,\n\t\t\t\trecipients,\n\t\t\t\tnull,\n\t\t\t\tpasswordStrengthModel,\n\t\t\t\t() => assertNotNull(sendModels.pop(), \"requested more sendModels than expected\"),\n\t\t\t)\n\t\t\tmodel.shouldSendUpdates = true\n\t\t\tmodel.removeAttendee(otherAddress2.address)\n\t\t\tmodel.addAttendee(otherAddress.address, createTestEntity(ContactTypeRef, { nickname: otherAddress.name }))\n\t\t\tconst result = model.result\n\t\t\t// this is not an invite to us, so we do not respond\n\t\t\to(result.responseModel).equals(null)\n\t\t\t// thirdAddress should be updated since they were invited before and not removed.\n\t\t\tverify(result.updateModel?.addRecipient(RecipientField.BCC, thirdAddress), { times: 1 })\n\t\t\t// otherAddress2 was removed, so needs cancel\n\t\t\tverify(result.cancelModel?.addRecipient(RecipientField.BCC, otherAddress2), { times: 1 })\n\t\t\t// otherAddress was added, so needs invite.\n\t\t\tverify(result.inviteModel?.addRecipient(RecipientField.BCC, otherAddress), { times: 1 })\n\t\t\to(sendModels.length).equals(0)(\"all sendmodels have been requested\")\n\t\t\to(result.attendees.length).equals(3)(\"all the attendees are there\")\n\t\t})\n\t\to(\"adding attendees on new event correctly creates invite model\", function () {\n\t\t\tconst sendModels: Array<SendMailModel> = [object()]\n\t\t\tconst userController = makeUserController([], AccountType.PAID)\n\t\t\tconst existingEvent = createTestEntity(CalendarEventTypeRef, {\n\t\t\t\t_ownerGroup: \"ownCalendar\",\n\t\t\t\tstartTime: new Date(2020, 5, 1),\n\t\t\t\tendTime: new Date(2020, 5, 2),\n\t\t\t\torganizer: ownerAddress,\n\t\t\t\tattendees: [\n\t\t\t\t\tcreateTestEntity(CalendarEventAttendeeTypeRef, {\n\t\t\t\t\t\tstatus: CalendarAttendeeStatus.NEEDS_ACTION,\n\t\t\t\t\t\taddress: ownerAddress,\n\t\t\t\t\t}),\n\t\t\t\t\tcreateTestEntity(CalendarEventAttendeeTypeRef, {\n\t\t\t\t\t\tstatus: CalendarAttendeeStatus.NEEDS_ACTION,\n\t\t\t\t\t\taddress: otherAddress2,\n\t\t\t\t\t}),\n\t\t\t\t],\n\t\t\t})\n\t\t\tconst model = new CalendarEventWhoModel(\n\t\t\t\texistingEvent,\n\t\t\t\tEventType.OWN,\n\t\t\t\tCalendarOperation.Create,\n\t\t\t\tcalendars,\n\t\t\t\tcalendars.get(\"ownCalendar\")!,\n\t\t\t\tuserController,\n\t\t\t\ttrue,\n\t\t\t\townAddresses,\n\t\t\t\trecipients,\n\t\t\t\tnull,\n\t\t\t\tpasswordStrengthModel,\n\t\t\t\t() => sendModels.pop()!,\n\t\t\t)\n\t\t\tmodel.addAttendee(otherAddress.address, createTestEntity(ContactTypeRef, { nickname: otherAddress.name }))\n\t\t\tconst result = model.result\n\t\t\to(result.responseModel).equals(null)\n\t\t\to(sendModels.length).equals(0)\n\t\t\to(result.cancelModel).equals(null)\n\t\t\to(result.updateModel).equals(null)\n\t\t\tverify(result.inviteModel?.addRecipient(RecipientField.BCC, otherAddress), { times: 1 })\n\t\t\tverify(result.inviteModel?.addRecipient(RecipientField.BCC, otherAddress2), { times: 1 })\n\t\t\to(result.attendees.length).equals(3)(\"all the attendees are there\")\n\t\t})\n\t})\n\to.spec(\"calendar selection\", function () {\n\t\to.spec(\"getAvailableCalendars\", function () {\n\t\t\to.beforeEach(() => {\n\t\t\t\tconst userSettingsGroupRoot = createTestEntity(\n\t\t\t\t\tUserSettingsGroupRootTypeRef,\n\t\t\t\t\tdowncast({\n\t\t\t\t\t\tgroupSettings: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgroup: \"ownExternalCalendar\",\n\t\t\t\t\t\t\t\tsourceUrl: \"dummy\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t}),\n\t\t\t\t)\n\t\t\t\treplace(userController, \"userSettingsGroupRoot\", Object.assign({}, userController.userSettingsGroupRoot, userSettingsGroupRoot))\n\t\t\t\treplace(userController, \"user\", createTestEntity(UserTypeRef, { _id: \"ownerId\" }))\n\t\t\t\taddCapability(userController.user, \"ownExternalCalendar\", ShareCapability.Read) // External calendars are actually normal user owned calendars handled as Read Only\n\t\t\t})\n\t\t\to(\"it returns the owned calendars and shared calendars we have write access to when there are no attendees\", function () {\n\t\t\t\t// add it as a writable calendar so that we see that it's filtered out\n\t\t\t\taddCapability(userController.user, \"sharedCalendar\", ShareCapability.Write)\n\t\t\t\tconst model = getNewModel({})\n\t\t\t\to(model.getAvailableCalendars()).deepEquals([\n\t\t\t\t\tcalendars.get(\"ownCalendar\")!,\n\t\t\t\t\tcalendars.get(\"ownSharedCalendar\")!,\n\t\t\t\t\tcalendars.get(\"sharedCalendar\")!,\n\t\t\t\t])\n\t\t\t})\n\n\t\t\to(\"it returns only the calendars we have write access to\", function () {\n\t\t\t\t// add it as a read only calendar so that we see that it's filtered out\n\t\t\t\taddCapability(userController.user, \"sharedCalendar\", ShareCapability.Read)\n\t\t\t\tconst model = getNewModel({})\n\t\t\t\to(model.getAvailableCalendars()).deepEquals([calendars.get(\"ownCalendar\")!, calendars.get(\"ownSharedCalendar\")!])\n\t\t\t})\n\n\t\t\to(\"it returns only own calendars after adding attendees to an existing event\", function () {\n\t\t\t\t// add it as a writable calendar so that we see that it's filtered out\n\t\t\t\taddCapability(userController.user, \"sharedCalendar\", ShareCapability.Write)\n\t\t\t\tconst model = getOldModel({})\n\t\t\t\tmodel.addAttendee(otherAddress.address)\n\t\t\t\to(model.getAvailableCalendars()).deepEquals([calendars.get(\"ownCalendar\")!, calendars.get(\"ownSharedCalendar\")!])\n\t\t\t})\n\n\t\t\to(\"it returns only own calendars for existing own event with attendees \", function () {\n\t\t\t\t// add it as a writable calendar so that we see that it's filtered out\n\t\t\t\taddCapability(userController.user, \"sharedCalendar\", ShareCapability.Write)\n\t\t\t\tconst model = getOldModel({\n\t\t\t\t\tattendees: [createTestEntity(CalendarEventAttendeeTypeRef, { address: otherAddress, status: CalendarAttendeeStatus.NEEDS_ACTION })],\n\t\t\t\t})\n\t\t\t\to(model.getAvailableCalendars()).deepEquals([calendars.get(\"ownCalendar\")!, calendars.get(\"ownSharedCalendar\")!])\n\t\t\t})\n\n\t\t\to(\"it returns only own private calendars for invite\", function () {\n\t\t\t\t// add it as a writable calendar so that we see that it's filtered out\n\t\t\t\taddCapability(userController.user, \"sharedCalendar\", ShareCapability.Write)\n\t\t\t\tconst model = getOldInviteModel({})\n\t\t\t\to(model.getAvailableCalendars()).deepEquals([calendars.get(\"ownCalendar\")!])\n\t\t\t})\n\n\t\t\to(\"it returns only existing calendar if it's existing shared event with attendees\", function () {\n\t\t\t\t// add it as a writable calendar so that we see that it's filtered out\n\t\t\t\taddCapability(userController.user, \"sharedCalendar\", ShareCapability.Write)\n\t\t\t\tconst model = getOldSharedModel(\n\t\t\t\t\t{\n\t\t\t\t\t\tattendees: [createTestEntity(CalendarEventAttendeeTypeRef, { address: otherAddress, status: CalendarAttendeeStatus.NEEDS_ACTION })],\n\t\t\t\t\t},\n\t\t\t\t\tEventType.LOCKED,\n\t\t\t\t)\n\t\t\t\to(model.getAvailableCalendars()).deepEquals([calendars.get(\"sharedCalendar\")!])\n\t\t\t})\n\n\t\t\to(\"it returns only the current calendar for single-instance editing\", function () {\n\t\t\t\taddCapability(userController.user, \"sharedCalendar\", ShareCapability.Write)\n\t\t\t\tconst model = getOldModelWithSingleEdit({ attendees: [] })\n\t\t\t\to(model.getAvailableCalendars()).deepEquals([calendars.get(\"ownCalendar\")!])\n\t\t\t})\n\t\t})\n\n\t\to(\"changing the calendar to a shared one while the event has attendees is an error\", function () {\n\t\t\tconst model = getNewModel({})\n\t\t\tmodel.addAttendee(otherAddress.address)\n\t\t\to(model.guests.length).equals(1)\n\t\t\to(() => (model.selectedCalendar = calendars.get(\"sharedCalendar\")!)).throws(ProgrammingError)\n\t\t\to(model.selectedCalendar).deepEquals(calendars.get(\"ownCalendar\")!)\n\t\t})\n\t})\n\to.spec(\"invites in own calendar, changing own attendance\", function () {\n\t\to(\"changing own attendance on new event results in responseModel and correct status\", async function () {\n\t\t\tconst userController = makeUserController([], AccountType.PAID)\n\t\t\tconst existingEvent = createTestEntity(CalendarEventTypeRef, {\n\t\t\t\t_ownerGroup: \"ownCalendar\",\n\t\t\t\tstartTime: getDateInZone(\"2020-06-01\"),\n\t\t\t\tendTime: getDateInZone(\"2020-06-02\"),\n\t\t\t\torganizer: otherAddress,\n\t\t\t\tattendees: [\n\t\t\t\t\tcreateTestEntity(CalendarEventAttendeeTypeRef, {\n\t\t\t\t\t\tstatus: CalendarAttendeeStatus.DECLINED,\n\t\t\t\t\t\taddress: otherAddress,\n\t\t\t\t\t}),\n\t\t\t\t\tcreateTestEntity(CalendarEventAttendeeTypeRef, {\n\t\t\t\t\t\tstatus: CalendarAttendeeStatus.NEEDS_ACTION,\n\t\t\t\t\t\taddress: ownerAddress,\n\t\t\t\t\t}),\n\t\t\t\t\tcreateTestEntity(CalendarEventAttendeeTypeRef, {\n\t\t\t\t\t\tstatus: CalendarAttendeeStatus.NEEDS_ACTION,\n\t\t\t\t\t\taddress: otherAddress2,\n\t\t\t\t\t}),\n\t\t\t\t],\n\t\t\t})\n\t\t\tconst model = new CalendarEventWhoModel(\n\t\t\t\texistingEvent,\n\t\t\t\tEventType.INVITE,\n\t\t\t\tCalendarOperation.Create,\n\t\t\t\tcalendars,\n\t\t\t\tcalendars.get(\"ownCalendar\")!,\n\t\t\t\tuserController,\n\t\t\t\ttrue,\n\t\t\t\townAddresses,\n\t\t\t\trecipients,\n\t\t\t\tnull,\n\t\t\t\tpasswordStrengthModel,\n\t\t\t\t() => sendMailModel,\n\t\t\t)\n\t\t\tmodel.setOwnAttendance(CalendarAttendeeStatus.ACCEPTED)\n\t\t\tconst result = model.result\n\t\t\tverify(result.responseModel?.addRecipient(RecipientField.TO, otherAddress), { times: 1 })\n\t\t\to(result.attendees.length).equals(3)(\"all the attendees are still there\")\n\t\t\to(result.attendees[1].status).deepEquals(CalendarAttendeeStatus.ACCEPTED)\n\t\t\to(result.inviteModel).equals(null)(\"no invite model\")\n\t\t\to(result.cancelModel).equals(null)(\"no cancel model\")\n\t\t\to(result.updateModel).equals(null)(\"no update model\")\n\t\t})\n\t\to(\"changing own attendance on existing event results in responseModel and correct status\", async function () {\n\t\t\tconst userController = makeUserController([], AccountType.PAID)\n\t\t\tconst existingEvent = createTestEntity(CalendarEventTypeRef, {\n\t\t\t\t_ownerGroup: \"ownCalendar\",\n\t\t\t\tstartTime: new Date(2020, 5, 1),\n\t\t\t\tendTime: new Date(2020, 5, 2),\n\t\t\t\torganizer: otherAddress,\n\t\t\t\tattendees: [\n\t\t\t\t\tcreateTestEntity(CalendarEventAttendeeTypeRef, {\n\t\t\t\t\t\tstatus: CalendarAttendeeStatus.DECLINED,\n\t\t\t\t\t\taddress: otherAddress,\n\t\t\t\t\t}),\n\t\t\t\t\tcreateTestEntity(CalendarEventAttendeeTypeRef, {\n\t\t\t\t\t\tstatus: CalendarAttendeeStatus.NEEDS_ACTION,\n\t\t\t\t\t\taddress: ownerAddress,\n\t\t\t\t\t}),\n\t\t\t\t\tcreateTestEntity(CalendarEventAttendeeTypeRef, {\n\t\t\t\t\t\tstatus: CalendarAttendeeStatus.NEEDS_ACTION,\n\t\t\t\t\t\taddress: otherAddress2,\n\t\t\t\t\t}),\n\t\t\t\t],\n\t\t\t})\n\t\t\tconst model = new CalendarEventWhoModel(\n\t\t\t\texistingEvent,\n\t\t\t\tEventType.INVITE,\n\t\t\t\tCalendarOperation.EditAll,\n\t\t\t\tcalendars,\n\t\t\t\tcalendars.get(\"ownCalendar\")!,\n\t\t\t\tuserController,\n\t\t\t\tfalse,\n\t\t\t\townAddresses,\n\t\t\t\trecipients,\n\t\t\t\tnull,\n\t\t\t\tpasswordStrengthModel,\n\t\t\t\t() => sendMailModel,\n\t\t\t)\n\t\t\tmodel.setOwnAttendance(CalendarAttendeeStatus.DECLINED)\n\t\t\tconst result = model.result\n\t\t\tverify(result.responseModel?.addRecipient(RecipientField.TO, otherAddress), { times: 1 })\n\t\t\to(result.attendees.length).equals(3)(\"all the attendees are still there\")\n\t\t\to(result.attendees[1].status).deepEquals(CalendarAttendeeStatus.DECLINED)\n\t\t\to(result.inviteModel).equals(null)(\"no invite model\")\n\t\t\to(result.cancelModel).equals(null)(\"no cancel model\")\n\t\t\to(result.updateModel).equals(null)(\"no update model\")\n\t\t})\n\t})\n})\n","import o from \"@tutao/otest\"\nimport { CalendarEventAlarmModel } from \"../../../../src/calendar-app/calendar/gui/eventeditor-model/CalendarEventAlarmModel.js\"\nimport { lang } from \"../../../../src/common/misc/LanguageViewModel.js\"\nimport en from \"../../../../src/mail-app/translations/en.js\"\nimport { EventType } from \"../../../../src/calendar-app/calendar/gui/eventeditor-model/CalendarEventModel.js\"\nimport { object, when } from \"testdouble\"\nimport { DateProvider } from \"../../../../src/common/api/common/DateProvider.js\"\nimport { AlarmIntervalUnit, StandardAlarmInterval } from \"../../../../src/common/calendar/date/CalendarUtils.js\"\n\nconst dateProvider: DateProvider = object()\nwhen(dateProvider.now()).thenReturn(42)\n\no.spec(\"CalendarEventAlarmModel\", function () {\n\tconst languageTag = \"en\"\n\to.before(async function () {\n\t\tawait lang.init(en)\n\t\tawait lang.setLanguage({\n\t\t\tcode: languageTag,\n\t\t\tlanguageTag: languageTag,\n\t\t})\n\t})\n\to.spec(\"alarm trigger sets\", function () {\n\t\to(\"alarm initialization works\", function () {\n\t\t\tconst model = new CalendarEventAlarmModel(EventType.OWN, [StandardAlarmInterval.ONE_HOUR], dateProvider)\n\t\t\to(model.alarms).deepEquals([StandardAlarmInterval.ONE_HOUR])\n\t\t\to(model.result.alarms.map(({ trigger }) => trigger)).deepEquals([\"1H\"])\n\t\t})\n\n\t\to(\"adding alarms works\", function () {\n\t\t\tconst model = new CalendarEventAlarmModel(EventType.OWN, [StandardAlarmInterval.ONE_HOUR], dateProvider)\n\n\t\t\tmodel.addAlarm(StandardAlarmInterval.ONE_DAY)\n\t\t\to(model.alarms).deepEquals([StandardAlarmInterval.ONE_HOUR, StandardAlarmInterval.ONE_DAY])\n\t\t\tconst { alarms } = model.result\n\t\t\to(alarms.map(({ trigger }) => trigger)).deepEquals([\"1H\", \"1D\"])\n\t\t})\n\n\t\to(\"removing an alarm works\", function () {\n\t\t\tconst model = new CalendarEventAlarmModel(EventType.OWN, [StandardAlarmInterval.ONE_HOUR], dateProvider)\n\t\t\tmodel.removeAlarm(StandardAlarmInterval.ONE_HOUR)\n\t\t\tmodel.removeAlarm(StandardAlarmInterval.ONE_DAY)\n\t\t\to(model.alarms).deepEquals([])\n\t\t\tconst { alarms } = model.result\n\t\t\to(alarms).deepEquals([])\n\t\t})\n\n\t\to(\"editing capability\", function () {\n\t\t\to(new CalendarEventAlarmModel(EventType.SHARED_RO, [], dateProvider).canEditReminders).equals(false)\n\t\t\to(new CalendarEventAlarmModel(EventType.EXTERNAL, [], dateProvider).canEditReminders).equals(false)\n\n\t\t\to(new CalendarEventAlarmModel(EventType.LOCKED, [], dateProvider).canEditReminders).equals(true)\n\t\t\to(new CalendarEventAlarmModel(EventType.SHARED_RW, [], dateProvider).canEditReminders).equals(true)\n\t\t\to(new CalendarEventAlarmModel(EventType.INVITE, [], dateProvider).canEditReminders).equals(true)\n\t\t\to(new CalendarEventAlarmModel(EventType.OWN, [], dateProvider).canEditReminders).equals(true)\n\t\t})\n\t})\n\n\to.spec(\"isEqualAlarms\", function () {\n\t\to(\"two equal alarms\", function () {\n\t\t\tconst model = new CalendarEventAlarmModel(EventType.OWN, [StandardAlarmInterval.ONE_HOUR], dateProvider)\n\t\t\to(model.isEqualAlarms(StandardAlarmInterval.ONE_HOUR, { value: 60, unit: AlarmIntervalUnit.MINUTE })).equals(true)\n\t\t})\n\n\t\to(\"two different alarms\", function () {\n\t\t\tconst model = new CalendarEventAlarmModel(EventType.OWN, [StandardAlarmInterval.ONE_HOUR], dateProvider)\n\t\t\to(model.isEqualAlarms(StandardAlarmInterval.ONE_HOUR, { value: 1, unit: AlarmIntervalUnit.DAY })).equals(false)\n\t\t})\n\t})\n})\n","import o from \"@tutao/otest\"\nimport { AccountType, CalendarAttendeeStatus, EndType, RepeatPeriod } from \"../../../../src/common/api/common/TutanotaConstants.js\"\nimport { func, matchers, object, verify, when } from \"testdouble\"\nimport { UserController } from \"../../../../src/common/api/main/UserController.js\"\nimport {\n\tCalendarEventEditModels,\n\tCalendarOperation,\n\teventHasChanged,\n\tEventSaveResult,\n\tmakeCalendarEventModel,\n} from \"../../../../src/calendar-app/calendar/gui/eventeditor-model/CalendarEventModel.js\"\nimport { CalendarNotificationSender } from \"../../../../src/calendar-app/calendar/view/CalendarNotificationSender.js\"\nimport { CalendarModel } from \"../../../../src/calendar-app/calendar/model/CalendarModel.js\"\nimport {\n\tCalendarEventAttendeeTypeRef,\n\tCalendarEventTypeRef,\n\tEncryptedMailAddressTypeRef,\n\tMailboxGroupRootTypeRef,\n\tMailboxProperties,\n\tMailboxPropertiesTypeRef,\n\tMailBoxTypeRef,\n\tUserSettingsGroupRootTypeRef,\n} from \"../../../../src/common/api/entities/tutanota/TypeRefs.js\"\nimport { EntityClient } from \"../../../../src/common/api/common/EntityClient.js\"\nimport { calendars, getDateInZone, makeUserController, otherAddress, ownerAddress, ownerAlias, ownerId, ownerMailAddress } from \"../CalendarTestUtils.js\"\nimport {\n\tAlarmInfoTypeRef,\n\tCalendarEventRefTypeRef,\n\tDateWrapper,\n\tDateWrapperTypeRef,\n\tGroupInfoTypeRef,\n\tGroupTypeRef,\n\tRepeatRuleTypeRef,\n\tUserAlarmInfoTypeRef,\n} from \"../../../../src/common/api/entities/sys/TypeRefs.js\"\nimport { clone, identity, noOp } from \"@tutao/tutanota-utils\"\nimport { RecipientsModel, ResolvableRecipient, ResolveMode } from \"../../../../src/common/api/main/RecipientsModel.js\"\nimport { LoginController } from \"../../../../src/common/api/main/LoginController.js\"\nimport { createTestEntity } from \"../../TestUtils.js\"\nimport { areExcludedDatesEqual, areRepeatRulesEqual } from \"../../../../src/common/calendar/date/CalendarUtils.js\"\nimport { SendMailModel } from \"../../../../src/common/mailFunctionality/SendMailModel.js\"\nimport { MailboxDetail } from \"../../../../src/common/mailFunctionality/MailboxModel.js\"\nimport { FolderSystem } from \"../../../../src/common/api/common/mail/FolderSystem.js\"\n\no.spec(\"CalendarEventModelTest\", function () {\n\tlet userController: UserController\n\tlet distributor: CalendarNotificationSender\n\tlet calendarModel: CalendarModel\n\tlet entityClient: EntityClient\n\tlet editModels: CalendarEventEditModels\n\n\to.beforeEach(function () {\n\t\tuserController = object()\n\t\tdistributor = object()\n\t\tcalendarModel = object()\n\t\tentityClient = object()\n\n\t\teditModels = {\n\t\t\talarmModel: object(),\n\t\t\twhenModel: object(),\n\t\t\twhoModel: object(),\n\t\t\tsummary: object(),\n\t\t\tdescription: object(),\n\t\t\tlocation: object(),\n\t\t}\n\t})\n\n\to.spec(\"integration tests\", function () {\n\t\to(\"doing no edit operation on an existing event updates it as expected, no updates.\", async function () {\n\t\t\t// this test case is insane and only serves as a warning example to not do such things.\n\t\t\tconst event = createTestEntity(CalendarEventTypeRef, {\n\t\t\t\tsequence: \"0\",\n\t\t\t\t_id: [\"eventListId\", \"eventElementId\"],\n\t\t\t\t_ownerGroup: \"ownCalendar\",\n\t\t\t\t_permissions: \"permissionId\",\n\t\t\t\tsummary: \"hello event\",\n\t\t\t\tlocation: \"in a boat\",\n\t\t\t\tdescription: \"about 3 inches tall\",\n\t\t\t\tuid: \"eventUid\",\n\t\t\t\thashedUid: null,\n\t\t\t\tstartTime: new Date(\"2023-04-27T15:00:00.000Z\"),\n\t\t\t\tinvitedConfidentially: false,\n\t\t\t\tendTime: new Date(\"2023-04-27T15:30:00.000Z\"),\n\t\t\t\trepeatRule: createTestEntity(RepeatRuleTypeRef, {\n\t\t\t\t\tinterval: \"10\",\n\t\t\t\t\t_id: \"repeatRuleId\",\n\t\t\t\t\tendType: EndType.Count,\n\t\t\t\t\tendValue: \"10\",\n\t\t\t\t\tfrequency: RepeatPeriod.DAILY,\n\t\t\t\t\texcludedDates: [],\n\t\t\t\t}),\n\t\t\t\torganizer: ownerAddress,\n\t\t\t\talarmInfos: [[\"alarmListId\", \"alarmElementId\"]],\n\t\t\t\tattendees: [\n\t\t\t\t\tcreateTestEntity(CalendarEventAttendeeTypeRef, {\n\t\t\t\t\t\taddress: ownerAddress,\n\t\t\t\t\t\tstatus: CalendarAttendeeStatus.ACCEPTED,\n\t\t\t\t\t}),\n\t\t\t\t\tcreateTestEntity(CalendarEventAttendeeTypeRef, {\n\t\t\t\t\t\taddress: otherAddress,\n\t\t\t\t\t\tstatus: CalendarAttendeeStatus.ACCEPTED,\n\t\t\t\t\t}),\n\t\t\t\t],\n\t\t\t})\n\t\t\tconst recipientsModel: RecipientsModel = object()\n\t\t\tconst logins: LoginController = object()\n\t\t\tconst userSettingsGroupRoot = createTestEntity(UserSettingsGroupRootTypeRef, { groupSettings: [] })\n\t\t\tconst userController = makeUserController([ownerAlias.address], AccountType.PAID, ownerMailAddress, true, false, undefined, userSettingsGroupRoot)\n\t\t\twhen(logins.getUserController()).thenReturn(userController)\n\t\t\twhen(calendarModel.loadAlarms(event.alarmInfos, userController.user)).thenResolve([\n\t\t\t\tcreateTestEntity(UserAlarmInfoTypeRef, {\n\t\t\t\t\t_id: event.alarmInfos[0],\n\t\t\t\t\talarmInfo: createTestEntity(AlarmInfoTypeRef, {\n\t\t\t\t\t\talarmIdentifier: \"alarmIdentifier\",\n\t\t\t\t\t\ttrigger: \"5M\",\n\t\t\t\t\t\tcalendarRef: createTestEntity(CalendarEventRefTypeRef, {\n\t\t\t\t\t\t\telementId: event._id[1],\n\t\t\t\t\t\t\tlistId: event._id[0],\n\t\t\t\t\t\t}),\n\t\t\t\t\t}),\n\t\t\t\t}),\n\t\t\t])\n\t\t\twhen(calendarModel.getCalendarInfos()).thenResolve(calendars)\n\t\t\twhen(calendarModel.resolveCalendarEventProgenitor(matchers.anything())).thenResolve(event)\n\t\t\tconst resolvableOwner: ResolvableRecipient = object()\n\t\t\twhen(resolvableOwner.resolved()).thenResolve(ownerAddress)\n\t\t\tconst resolvableRecipient: ResolvableRecipient = object()\n\t\t\twhen(resolvableRecipient.resolved()).thenResolve(otherAddress)\n\t\t\tconst resolvables = [resolvableOwner, resolvableRecipient, resolvableOwner]\n\t\t\tlet tryCount = 0\n\t\t\twhen(recipientsModel.resolve(matchers.anything(), ResolveMode.Eager)).thenDo(() => resolvables[tryCount++])\n\t\t\tconst mailboxDetail: MailboxDetail = {\n\t\t\t\tmailbox: createTestEntity(MailBoxTypeRef),\n\t\t\t\tmailGroupInfo: createTestEntity(GroupInfoTypeRef),\n\t\t\t\tmailGroup: createTestEntity(GroupTypeRef, {\n\t\t\t\t\tuser: ownerId,\n\t\t\t\t}),\n\t\t\t\tmailboxGroupRoot: createTestEntity(MailboxGroupRootTypeRef),\n\t\t\t}\n\t\t\tconst mailboxProperties: MailboxProperties = createTestEntity(MailboxPropertiesTypeRef, {})\n\t\t\tconst sendModelFac: () => SendMailModel = func<() => SendMailModel>()\n\t\t\tconst model = await makeCalendarEventModel(\n\t\t\t\tCalendarOperation.EditAll,\n\t\t\t\tevent,\n\t\t\t\trecipientsModel,\n\t\t\t\tcalendarModel,\n\t\t\t\tlogins,\n\t\t\t\tmailboxDetail,\n\t\t\t\tmailboxProperties,\n\t\t\t\tsendModelFac,\n\t\t\t\tdistributor,\n\t\t\t\tentityClient,\n\t\t\t\tnull,\n\t\t\t\t\"Europe/Berlin\",\n\t\t\t\tidentity,\n\t\t\t\tnoOp,\n\t\t\t)\n\t\t\tconst result = await model?.apply()\n\t\t\to(result).equals(EventSaveResult.Saved)\n\t\t\tverify(\n\t\t\t\tcalendarModel.updateEvent(\n\t\t\t\t\tmatchers.contains({\n\t\t\t\t\t\t...event,\n\t\t\t\t\t\tsequence: \"1\",\n\t\t\t\t\t\talarmInfos: [],\n\t\t\t\t\t\trepeatRule: {\n\t\t\t\t\t\t\t...event.repeatRule,\n\t\t\t\t\t\t\t_id: null,\n\t\t\t\t\t\t},\n\t\t\t\t\t}),\n\t\t\t\t\tmatchers.argThat((n) => n.length === 1 && n[0].trigger === \"5M\"),\n\t\t\t\t\t\"Europe/Berlin\",\n\t\t\t\t\tcalendars.get(\"ownCalendar\")!.groupRoot,\n\t\t\t\t\tevent,\n\t\t\t\t),\n\t\t\t\t{ times: 1 },\n\t\t\t)\n\t\t\tverify(sendModelFac(), { times: 0 })\n\t\t})\n\t})\n\n\to.spec(\"eventHasChanged\", function () {\n\t\tconst fixedOrganizer = createTestEntity(EncryptedMailAddressTypeRef, {\n\t\t\taddress: \"moo@d.de\",\n\t\t\tname: \"bla\",\n\t\t})\n\t\tconst att = (a, n, s) =>\n\t\t\tcreateTestEntity(CalendarEventAttendeeTypeRef, {\n\t\t\t\taddress: createTestEntity(EncryptedMailAddressTypeRef, { address: a, name: n }),\n\t\t\t\tstatus: s,\n\t\t\t})\n\t\t// attr, now, previous, expected, msg\n\t\tconst cases = [\n\t\t\t[\"alarmInfos\", [], [\"some\", \"alarm\"], false, \"alarmInfos are ignored\"],\n\t\t\t[\"summary\", \"new\", \"old\", true],\n\t\t\t[\"location\", \"here\", \"there\", true],\n\t\t\t[\"description\", \"ho\", \"ha\", true],\n\t\t\t[\"invitedConfidentially\", true, false, true],\n\t\t\t[\"startTime\", getDateInZone(\"2023-05-10T13:30\"), getDateInZone(\"2023-05-15T13:30\"), true],\n\t\t\t[\"endTime\", getDateInZone(\"2023-05-26\"), getDateInZone(\"2023-05-27\"), true],\n\t\t\t[\"uid\", \"newUid\", \"oldUid\", true],\n\t\t\t[\"organizer\", fixedOrganizer, fixedOrganizer, false, \"same object in organizer\"],\n\t\t\t[\n\t\t\t\t\"organizer\",\n\t\t\t\tfixedOrganizer,\n\t\t\t\tcreateTestEntity(EncryptedMailAddressTypeRef, { address: \"moo@d.de\", name: \"bla\" }),\n\t\t\t\tfalse,\n\t\t\t\t\"same organizer, different object\",\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"organizer\",\n\t\t\t\tfixedOrganizer,\n\t\t\t\tcreateTestEntity(EncryptedMailAddressTypeRef, { address: \"moo@d.de\", name: \"blabla\" }),\n\t\t\t\tfalse,\n\t\t\t\t\"different address, same name\",\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"organizer\",\n\t\t\t\tfixedOrganizer,\n\t\t\t\tcreateTestEntity(EncryptedMailAddressTypeRef, { address: \"moo@d.io\", name: \"bla\" }),\n\t\t\t\ttrue,\n\t\t\t\t\"same name, different address\",\n\t\t\t],\n\t\t\t[\"attendees\", [], [], false, \"no attendees in either event\"],\n\t\t\t[\n\t\t\t\t\"attendees\",\n\t\t\t\t[att(\"b@c.d\", \"b\", CalendarAttendeeStatus.NEEDS_ACTION)],\n\t\t\t\t[att(\"b@c.d\", \"C\", CalendarAttendeeStatus.NEEDS_ACTION)],\n\t\t\t\tfalse,\n\t\t\t\t\"only names changed\",\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"attendees\",\n\t\t\t\t[att(\"b@c.d\", \"b\", CalendarAttendeeStatus.NEEDS_ACTION)],\n\t\t\t\t[att(\"B@C.D\", \"b\", CalendarAttendeeStatus.NEEDS_ACTION)],\n\t\t\t\tfalse,\n\t\t\t\t\"only address case changed\",\n\t\t\t],\n\t\t\t[\"attendees\", [att(\"b@c.d\", \"b\", CalendarAttendeeStatus.NEEDS_ACTION)], [], true, \"attendee changed\"],\n\t\t\t[\n\t\t\t\t\"attendees\",\n\t\t\t\t[att(\"b@c.d\", \"b\", CalendarAttendeeStatus.NEEDS_ACTION)],\n\t\t\t\t[att(\"b@c.d\", \"b\", CalendarAttendeeStatus.ACCEPTED)],\n\t\t\t\ttrue,\n\t\t\t\t\"status changed\",\n\t\t\t],\n\t\t\t// repeat rule is tested with areRepeatRulesEqual\n\t\t] as const\n\n\t\tfor (const [attr, now, previous, expected, msg] of cases) {\n\t\t\to(`${attr} changed -> ${expected}`, function () {\n\t\t\t\t// createCalendarEvent will create events with a startTime and endTime created by \"new Date()\",\n\t\t\t\t// which is not repeatable, so we only do it once.\n\t\t\t\tconst template = createTestEntity(CalendarEventTypeRef, { [attr]: previous })\n\t\t\t\tconst copy = Object.assign({}, template, { [attr]: now })\n\t\t\t\to(eventHasChanged(copy, template)).equals(expected)(msg ?? attr)\n\t\t\t\to(eventHasChanged(copy, clone(copy))).equals(false)(`do not change ${msg}`)\n\t\t\t})\n\t\t}\n\n\t\to(\"same object -> false\", function () {\n\t\t\tconst event = createTestEntity(CalendarEventTypeRef, {})\n\t\t\to(eventHasChanged(event, event)).equals(false)\n\t\t})\n\t})\n\n\tconst dw = (d) => createTestEntity(DateWrapperTypeRef, { date: getDateInZone(d) })\n\to.spec(\"areRepeatRulesEqual\", function () {\n\t\t// property, now, previous, expected, msg\n\t\tconst cases = [\n\t\t\t[\"endType\", EndType.Never, EndType.Count, false],\n\t\t\t[\"endValue\", \"10\", \"15\", false],\n\t\t\t[\"frequency\", RepeatPeriod.DAILY, RepeatPeriod.MONTHLY, false],\n\t\t\t[\"interval\", \"10\", \"15\", false],\n\t\t\t[\"excludedDates\", [] as Array<DateWrapper>, [] as Array<DateWrapper>, true, \"no exclusions\"],\n\t\t\t[\"excludedDates\", [] as Array<DateWrapper>, [dw(\"2023-02-01\")] as Array<DateWrapper>, false, \"added exclusion\"],\n\t\t\t[\"excludedDates\", [dw(\"2023-02-01\")] as Array<DateWrapper>, [dw(\"2023-02-01\")] as Array<DateWrapper>, true, \"same exclusions\"],\n\t\t] as const\n\n\t\tfor (const [attr, now, previous, expected, msg] of cases) {\n\t\t\to(`${attr} changed -> ${expected}`, function () {\n\t\t\t\to(areRepeatRulesEqual(createTestEntity(RepeatRuleTypeRef, { [attr]: now }), createTestEntity(RepeatRuleTypeRef, { [attr]: previous }))).equals(\n\t\t\t\t\texpected,\n\t\t\t\t)(msg ?? attr)\n\t\t\t\to(areRepeatRulesEqual(createTestEntity(RepeatRuleTypeRef, { [attr]: now }), createTestEntity(RepeatRuleTypeRef, { [attr]: now }))).equals(true)(\n\t\t\t\t\t`do not change ${msg}`,\n\t\t\t\t)\n\t\t\t})\n\t\t}\n\t\to(\"same object -> true\", function () {\n\t\t\tconst r1 = createTestEntity(RepeatRuleTypeRef, {})\n\t\t\to(areRepeatRulesEqual(r1, r1)).equals(true)\n\t\t})\n\t})\n\n\to.spec(\"areExcludedDatesEqual\", function () {\n\t\to(\"empty arrays are equal\", function () {\n\t\t\to(areExcludedDatesEqual([], [])).equals(true)\n\t\t})\n\t\to(\"a nonempty array with an empty array is unequal\", function () {\n\t\t\to(areExcludedDatesEqual([], [dw(\"2023-03-06T13:56\")])).equals(false)\n\t\t\to(areExcludedDatesEqual([dw(\"2023-03-06T13:56\")], [])).equals(false)\n\t\t})\n\t\to(\"nonequal if an array is a subsequence of the other\", function () {\n\t\t\tconst a = [dw(\"2023-03-06T13:56\"), dw(\"2023-03-09T13:56\")]\n\t\t\to(areExcludedDatesEqual(a, a.slice(1))).equals(false)\n\t\t})\n\n\t\to(\"nonequal if the dates are different\", function () {\n\t\t\to(areExcludedDatesEqual([dw(\"2023-03-06T13:56\")], [dw(\"2023-03-09T13:56\")])).equals(false)\n\t\t})\n\n\t\to(\"equal if the dates are the same\", function () {\n\t\t\to(areExcludedDatesEqual([dw(\"2023-03-06T13:56\")], [dw(\"2023-03-06T13:56\")])).equals(true)\n\t\t})\n\t})\n})\n","import o from \"@tutao/otest\"\nimport {\n\thexToHSL,\n\thexToRgb,\n\thslToHex,\n\thslToRGB,\n\tisColorLight,\n\tisValidColorCode,\n\tnormalizeHueAngle,\n\trgbToHex,\n\trgbToHSL,\n} from \"../../../src/common/gui/base/Color.js\"\n\no.spec(\"color\", function () {\n\to(\"hexToRGB 6digit\", function () {\n\t\to(hexToRgb(\"#b73a9a\")).deepEquals({\n\t\t\tr: 183,\n\t\t\tg: 58,\n\t\t\tb: 154,\n\t\t})\n\t})\n\to(\"hexToRGB 3digit\", function () {\n\t\to(hexToRgb(\"#ABC\")).deepEquals({\n\t\t\tr: 170,\n\t\t\tg: 187,\n\t\t\tb: 204,\n\t\t})\n\t})\n\to(\"normalizeHueAngle\", function () {\n\t\to(normalizeHueAngle(0)).equals(0)\n\t\to(normalizeHueAngle(259)).equals(259)\n\t\to(normalizeHueAngle(360)).equals(0)\n\t\to(normalizeHueAngle(576)).equals(216)\n\t\to(normalizeHueAngle(-120)).equals(240)\n\t\to(normalizeHueAngle(-576)).equals(144)\n\t})\n\to(\"rgbToHSL\", function () {\n\t\to(\n\t\t\trgbToHSL({\n\t\t\t\tr: 186,\n\t\t\t\tg: 165,\n\t\t\t\tb: 228,\n\t\t\t}),\n\t\t).deepEquals({\n\t\t\th: 260,\n\t\t\ts: 54,\n\t\t\tl: 77,\n\t\t})\n\t})\n\to(\"hslToRGB\", function () {\n\t\to(\n\t\t\thslToRGB({\n\t\t\t\th: 260,\n\t\t\t\ts: 54,\n\t\t\t\tl: 77,\n\t\t\t}),\n\t\t).deepEquals({\n\t\t\tr: 186,\n\t\t\tg: 165,\n\t\t\tb: 228,\n\t\t})\n\t})\n\to(\"hexToHSLToHex\", function () {\n\t\to(hslToHex(hexToHSL(\"#baa5e4\"))).equals(\"#baa5e4\")\n\t})\n\to(\"hslToHexToHSL\", function () {\n\t\to(\n\t\t\thexToHSL(\n\t\t\t\thslToHex({\n\t\t\t\t\th: 260,\n\t\t\t\t\ts: 54,\n\t\t\t\t\tl: 77,\n\t\t\t\t}),\n\t\t\t),\n\t\t).deepEquals({\n\t\t\th: 260,\n\t\t\ts: 54,\n\t\t\tl: 77,\n\t\t})\n\t})\n\to(\"isValidColorCode\", function () {\n\t\to(isValidColorCode(\"#abc\")).equals(true)\n\t\to(isValidColorCode(\"#ABC\")).equals(true)\n\t\to(isValidColorCode(\"#aBc\")).equals(true)\n\t\to(isValidColorCode(\"#aabbcc\")).equals(true)\n\t\to(isValidColorCode(\"#AABBCC\")).equals(true)\n\t\to(isValidColorCode(\"#aAbBcC\")).equals(true)\n\t\to(isValidColorCode(\"AABBCC\")).equals(false)\n\t\to(isValidColorCode(\"#ABCDEG\")).equals(false)\n\t})\n\to(\"rgbToHex\", function () {\n\t\to(\n\t\t\trgbToHex({\n\t\t\t\tr: 183,\n\t\t\t\tg: 58,\n\t\t\t\tb: 154,\n\t\t\t}),\n\t\t).equals(\"#b73a9a\")\n\t})\n\to.spec(\"isColorLight\", function () {\n\t\to(\"pink is dark\", function () {\n\t\t\to(isColorLight(\"#B73A9A\")).equals(false)\n\t\t})\n\t\to(\"blue is light\", function () {\n\t\t\to(isColorLight(\"#3A9AFF\")).equals(true)\n\t\t})\n\t\to(\"three digit white is light\", function () {\n\t\t\to(isColorLight(\"#FFF\")).equals(true)\n\t\t})\n\t\to(\"three digit black is dark\", function () {\n\t\t\to(isColorLight(\"#000\")).equals(false)\n\t\t})\n\t\to(\"three digit cyan is light\", function () {\n\t\t\to(isColorLight(\"#0FF\")).equals(true)\n\t\t})\n\t})\n})\n","import { ResolvableRecipient, ResolveMode } from \"../../../src/common/api/main/RecipientsModel.js\"\nimport { Recipient, RecipientType } from \"../../../src/common/api/common/recipients/Recipient.js\"\nimport { LazyLoaded } from \"@tutao/tutanota-utils\"\nimport { Contact } from \"../../../src/common/api/entities/tutanota/TypeRefs.js\"\nimport { User } from \"../../../src/common/api/entities/sys/TypeRefs.js\"\nimport { createNewContact, isTutaMailAddress } from \"../../../src/common/mailFunctionality/SharedMailUtils.js\"\n\n/**\n * Creating actual ResolvableRecipients is annoying because you have to mock a bunch of stuff in other model classes\n */\nexport class ResolvableRecipientMock implements ResolvableRecipient {\n\tpublic name: string\n\tpublic type: RecipientType\n\n\tprivate _resolved = false\n\tprivate lazyResolve = new LazyLoaded<Recipient>(async () => {\n\t\tthis._resolved = true\n\t\tthis.type =\n\t\t\tthis.type !== RecipientType.UNKNOWN ? this.type : this.internalAddresses.includes(this.address) ? RecipientType.INTERNAL : RecipientType.EXTERNAL\n\t\tthis.contact =\n\t\t\tthis.contact ??\n\t\t\tthis.existingContacts.find(({ mailAddresses }) => mailAddresses.some(({ address }) => address === this.address)) ??\n\t\t\tcreateNewContact(this.user, this.address, this.name)\n\n\t\treturn {\n\t\t\taddress: this.address,\n\t\t\tname: this.name,\n\t\t\tcontact: this.contact,\n\t\t\ttype: this.type,\n\t\t}\n\t})\n\n\tconstructor(\n\t\tpublic address: string,\n\t\tname: string | null,\n\t\tpublic contact: Contact | null,\n\t\ttype: RecipientType | null,\n\t\t/** non-tutanota addresses that should resolve to be INTERNAL */\n\t\tprivate internalAddresses: string[],\n\t\t/** contacts that should be resolved as though they were found by the contact model */\n\t\tprivate existingContacts: Contact[],\n\t\tresolveMode: ResolveMode,\n\t\tprivate user: User,\n\t) {\n\t\tthis.name = name ?? \"\"\n\t\tthis.type = type ?? (isTutaMailAddress(address) ? RecipientType.INTERNAL : RecipientType.UNKNOWN)\n\n\t\tif (resolveMode === ResolveMode.Eager) {\n\t\t\tthis.lazyResolve.getAsync()\n\t\t}\n\t}\n\n\tisResolved(): boolean {\n\t\treturn this._resolved\n\t}\n\n\tresolved(): Promise<Recipient> {\n\t\treturn this.lazyResolve.getAsync()\n\t}\n\n\tsetContact(contact: Contact): void {\n\t\tthis.contact = contact\n\t}\n\n\tsetName(name: string): void {\n\t\tthis.name = name\n\t}\n\n\twhenResolved(onResolved: (resolvedRecipient: Recipient) => void): this {\n\t\tthrow new Error(\"STUB\")\n\t}\n}\n","import o from \"@tutao/otest\"\n// @ts-ignore[untyped-import]\nimport en from \"../../../src/mail-app/translations/en.js\"\nimport type { UserController } from \"../../../src/common/api/main/UserController.js\"\nimport type { LoginController } from \"../../../src/common/api/main/LoginController.js\"\nimport {\n\tBodyTypeRef,\n\tContact,\n\tContactListTypeRef,\n\tContactTypeRef,\n\tConversationEntryTypeRef,\n\tcreateContact,\n\tCustomerAccountCreateDataTypeRef,\n\tMail,\n\tMailAddressTypeRef,\n\tMailboxGroupRootTypeRef,\n\tMailboxPropertiesTypeRef,\n\tMailBoxTypeRef,\n\tMailDetailsTypeRef,\n\tMailTypeRef,\n\tNotificationMailTypeRef,\n\tRecipientsTypeRef,\n\tTutanotaPropertiesTypeRef,\n} from \"../../../src/common/api/entities/tutanota/TypeRefs.js\"\nimport { assertThrows, verify } from \"@tutao/tutanota-test-utils\"\nimport { downcast, isSameTypeRef } from \"@tutao/tutanota-utils\"\nimport {\n\tChallengeTypeRef,\n\tCustomerTypeRef,\n\tGroupInfoTypeRef,\n\tGroupMembershipTypeRef,\n\tGroupTypeRef,\n\tUserTypeRef,\n} from \"../../../src/common/api/entities/sys/TypeRefs.js\"\nimport { ConversationType, GroupType, MailMethod, OperationType } from \"../../../src/common/api/common/TutanotaConstants.js\"\nimport { lang, TranslationKey } from \"../../../src/common/misc/LanguageViewModel.js\"\nimport { EventController } from \"../../../src/common/api/main/EventController.js\"\nimport { UserError } from \"../../../src/common/api/main/UserError.js\"\nimport { EntityClient } from \"../../../src/common/api/common/EntityClient.js\"\nimport { isSameId } from \"../../../src/common/api/common/utils/EntityUtils.js\"\nimport { MailFacade } from \"../../../src/common/api/worker/facades/lazy/MailFacade.js\"\nimport { func, instance, matchers, object, replace, when } from \"testdouble\"\nimport { RecipientsModel, ResolveMode } from \"../../../src/common/api/main/RecipientsModel\"\nimport { ResolvableRecipientMock } from \"./ResolvableRecipientMock.js\"\nimport { NoZoneDateProvider } from \"../../../src/common/api/common/utils/NoZoneDateProvider.js\"\nimport { createTestEntity } from \"../TestUtils.js\"\nimport { ContactModel } from \"../../../src/common/contactsFunctionality/ContactModel.js\"\nimport { MailboxDetail, MailboxModel } from \"../../../src/common/mailFunctionality/MailboxModel.js\"\nimport { SendMailModel, TOO_MANY_VISIBLE_RECIPIENTS } from \"../../../src/common/mailFunctionality/SendMailModel.js\"\nimport { RecipientField } from \"../../../src/common/mailFunctionality/SharedMailUtils.js\"\nimport { getContactDisplayName } from \"../../../src/common/contactsFunctionality/ContactUtils.js\"\nimport { FolderSystem } from \"../../../src/common/api/common/mail/FolderSystem.js\"\n\nconst { anything, argThat } = matchers\n\ntype TestIdGenerator = {\n\tcurrentIdValue: number\n\tcurrentListIdValue: number\n\tnewId: () => Id\n\tnewListId: () => Id\n\tnewIdTuple: () => IdTuple\n}\nlet testIdGenerator: TestIdGenerator = {\n\tcurrentIdValue: 0,\n\tcurrentListIdValue: 0,\n\n\tnewId(): Id {\n\t\treturn (this.currentIdValue++).toString()\n\t},\n\n\tnewListId(): Id {\n\t\treturn (this.currentListIdValue++).toString()\n\t},\n\n\tnewIdTuple(): IdTuple {\n\t\treturn [this.newListId(), this.newId()]\n\t},\n}\n\nconst EXTERNAL_ADDRESS_1 = \"address1@test.com\"\nconst EXTERNAL_ADDRESS_2 = \"address2@test.com\"\nconst DEFAULT_SENDER_FOR_TESTING = \"test@tutanota.de\"\nconst INTERNAL_RECIPIENT_1 = {\n\tname: \"test1\",\n\taddress: \"test1@tutanota.de\",\n\tcontact: null,\n}\nconst BODY_TEXT_1 = \"lorem ipsum dolor yaddah yaddah\"\nconst SUBJECT_LINE_1 = \"Did you get that thing I sent ya\"\nconst STRONG_PASSWORD = \"@()IE!)(@FME)0-123jfDSA32SDACmmnvnvddEW\"\nconst WEAK_PASSWORD = \"123\"\n\no.spec(\"SendMailModel\", function () {\n\to.before(function () {\n\t\t// we need lang initialized because the SendMailModel constructor requires some translation\n\t\tlang.init(en)\n\t})\n\n\tlet mailboxModel: MailboxModel, entity: EntityClient, mailFacade: MailFacade, recipientsModel: RecipientsModel\n\n\tlet model: SendMailModel\n\n\to.beforeEach(function () {\n\t\tentity = instance(EntityClient)\n\t\twhen(\n\t\t\tentity.loadRoot(\n\t\t\t\targThat((typeRef) => isSameTypeRef(typeRef, ContactListTypeRef)),\n\t\t\t\tanything(),\n\t\t\t),\n\t\t).thenDo(() => ({ contacts: testIdGenerator.newId() }))\n\t\twhen(entity.load(anything(), anything(), anything())).thenDo((typeRef, id, params) => ({ _type: typeRef, _id: id }))\n\n\t\tmailboxModel = instance(MailboxModel)\n\n\t\tconst contactModel = object<ContactModel>()\n\t\twhen(contactModel.getContactListId()).thenResolve(\"contactListId\")\n\t\twhen(contactModel.searchForContact(anything())).thenResolve(null)\n\n\t\tmailFacade = instance(MailFacade)\n\t\twhen(mailFacade.createDraft(anything())).thenDo(() => createTestEntity(MailTypeRef))\n\t\twhen(mailFacade.updateDraft(anything())).thenDo(() => createTestEntity(MailTypeRef))\n\t\twhen(mailFacade.getRecipientKeyData(anything())).thenResolve(null)\n\t\twhen(mailFacade.getAttachmentIds(anything())).thenResolve([])\n\n\t\tconst tutanotaProperties = createTestEntity(TutanotaPropertiesTypeRef, {\n\t\t\tdefaultSender: DEFAULT_SENDER_FOR_TESTING,\n\t\t\tdefaultUnconfidential: true,\n\t\t\tnotificationMailLanguage: \"en\",\n\t\t\tnoAutomaticContacts: false,\n\t\t})\n\t\tconst user = createTestEntity(UserTypeRef, {\n\t\t\tuserGroup: createTestEntity(GroupMembershipTypeRef, {\n\t\t\t\t_id: testIdGenerator.newId(),\n\t\t\t\tgroup: testIdGenerator.newId(),\n\t\t\t}),\n\t\t\tmemberships: [\n\t\t\t\tcreateTestEntity(GroupMembershipTypeRef, {\n\t\t\t\t\t_id: testIdGenerator.newId(),\n\t\t\t\t\tgroupType: GroupType.Contact,\n\t\t\t\t}),\n\t\t\t],\n\t\t})\n\n\t\tconst userController = object<UserController>()\n\t\treplace(userController, \"user\", user)\n\t\treplace(userController, \"props\", tutanotaProperties)\n\t\twhen(userController.loadCustomer()).thenResolve(createTestEntity(CustomerTypeRef))\n\n\t\tconst loginController = object<LoginController>()\n\t\twhen(loginController.isInternalUserLoggedIn()).thenReturn(true)\n\t\twhen(loginController.getUserController()).thenReturn(userController)\n\n\t\tconst eventController = instance(EventController)\n\n\t\tconst mailboxDetails: MailboxDetail = {\n\t\t\tmailbox: createTestEntity(MailBoxTypeRef),\n\t\t\tmailGroupInfo: createTestEntity(GroupInfoTypeRef, {\n\t\t\t\tmailAddress: \"mailgroup@addre.ss\",\n\t\t\t}),\n\t\t\tmailGroup: createTestEntity(GroupTypeRef),\n\t\t\tmailboxGroupRoot: createTestEntity(MailboxGroupRootTypeRef),\n\t\t}\n\n\t\trecipientsModel = instance(RecipientsModel)\n\t\twhen(recipientsModel.resolve(anything(), anything())).thenDo((recipient, resolveMode) => {\n\t\t\treturn new ResolvableRecipientMock(\n\t\t\t\trecipient.address,\n\t\t\t\trecipient.name,\n\t\t\t\trecipient.contact,\n\t\t\t\trecipient.type,\n\t\t\t\t[INTERNAL_RECIPIENT_1.address],\n\t\t\t\t[],\n\t\t\t\tresolveMode,\n\t\t\t\tuser,\n\t\t\t)\n\t\t})\n\n\t\tconst mailboxProperties = createTestEntity(MailboxPropertiesTypeRef)\n\t\tmodel = new SendMailModel(\n\t\t\tmailFacade,\n\t\t\tentity,\n\t\t\tloginController,\n\t\t\tmailboxModel,\n\t\t\tcontactModel,\n\t\t\teventController,\n\t\t\tmailboxDetails,\n\t\t\trecipientsModel,\n\t\t\tnew NoZoneDateProvider(),\n\t\t\tmailboxProperties,\n\t\t\tasync (mail: Mail) => {\n\t\t\t\treturn false\n\t\t\t},\n\t\t)\n\n\t\treplace(model, \"getDefaultSender\", () => DEFAULT_SENDER_FOR_TESTING)\n\t})\n\n\to.spec(\"initialization\", function () {\n\t\to(\"initWithTemplate empty\", async function () {\n\t\t\tawait model.initWithTemplate({}, \"\", \"\", [], false)\n\t\t\to(model.getConversationType()).equals(ConversationType.NEW)\n\t\t\to(model.getSubject()).equals(\"\")\n\t\t\to(model.getBody()).equals(\"\")\n\t\t\to(model.getDraft()).equals(null)\n\t\t\to(model.allRecipients().length).equals(0)\n\t\t\to(model.getSender()).equals(DEFAULT_SENDER_FOR_TESTING)\n\t\t\to(model.isConfidential()).equals(true)\n\t\t\to(model.containsExternalRecipients()).equals(false)\n\t\t\to(model.getAttachments().length).equals(0)\n\t\t\to(model.hasMailChanged()).equals(false)(\"initialization should not flag mail changed\")\n\t\t})\n\t\to(\"initWithTemplate data\", async function () {\n\t\t\tconst initializedModel = await model.initWithTemplate(\n\t\t\t\t{\n\t\t\t\t\tto: [INTERNAL_RECIPIENT_1],\n\t\t\t\t},\n\t\t\t\tSUBJECT_LINE_1,\n\t\t\t\tBODY_TEXT_1,\n\t\t\t\t[],\n\t\t\t\tfalse,\n\t\t\t\tDEFAULT_SENDER_FOR_TESTING,\n\t\t\t)\n\t\t\to(initializedModel.getConversationType()).equals(ConversationType.NEW)\n\t\t\to(initializedModel.getSubject()).equals(SUBJECT_LINE_1)\n\t\t\to(initializedModel.getBody()).equals(BODY_TEXT_1)\n\t\t\to(initializedModel.getDraft()).equals(null)\n\t\t\to(initializedModel.allRecipients().length).equals(1)\n\t\t\to(initializedModel.getSender()).equals(DEFAULT_SENDER_FOR_TESTING)\n\t\t\to(model.isConfidential()).equals(true)\n\t\t\to(model.containsExternalRecipients()).equals(false)\n\t\t\to(initializedModel.getAttachments().length).equals(0)\n\t\t\to(initializedModel.hasMailChanged()).equals(false)(\"initialization should not flag mail changed\")\n\t\t})\n\t\to(\"initWithTemplate duplicated recipients\", async function () {\n\t\t\tconst duplicate = {\n\t\t\t\tname: INTERNAL_RECIPIENT_1.name,\n\t\t\t\taddress: INTERNAL_RECIPIENT_1.address,\n\t\t\t\tcontact: INTERNAL_RECIPIENT_1.contact,\n\t\t\t}\n\t\t\tconst initializedModel = await model.initWithTemplate(\n\t\t\t\t{\n\t\t\t\t\tto: [INTERNAL_RECIPIENT_1, duplicate],\n\t\t\t\t},\n\t\t\t\tSUBJECT_LINE_1,\n\t\t\t\tBODY_TEXT_1,\n\t\t\t\t[],\n\t\t\t\tfalse,\n\t\t\t\tDEFAULT_SENDER_FOR_TESTING,\n\t\t\t)\n\t\t\to(initializedModel.getConversationType()).equals(ConversationType.NEW)\n\t\t\to(initializedModel.getSubject()).equals(SUBJECT_LINE_1)\n\t\t\to(initializedModel.getBody()).equals(BODY_TEXT_1)\n\t\t\to(initializedModel.getDraft()).equals(null)\n\t\t\to(initializedModel.allRecipients().length).equals(1)\n\t\t\to(initializedModel.getSender()).equals(DEFAULT_SENDER_FOR_TESTING)\n\t\t\to(model.isConfidential()).equals(true)\n\t\t\to(model.containsExternalRecipients()).equals(false)\n\t\t\to(initializedModel.getAttachments().length).equals(0)\n\t\t\to(initializedModel.hasMailChanged()).equals(false)(\"initialization should not flag mail changed\")\n\t\t})\n\t\to(\"initWithDraft with blank data\", async function () {\n\t\t\tconst draft = createTestEntity(MailTypeRef, {\n\t\t\t\tconfidential: false,\n\t\t\t\tsender: createTestEntity(MailAddressTypeRef),\n\t\t\t\tsubject: \"\",\n\t\t\t\tconversationEntry: testIdGenerator.newIdTuple(),\n\t\t\t})\n\t\t\tconst draftDetails = createTestEntity(MailDetailsTypeRef, {\n\t\t\t\trecipients: createTestEntity(RecipientsTypeRef),\n\t\t\t\tbody: createTestEntity(BodyTypeRef, {\n\t\t\t\t\ttext: BODY_TEXT_1,\n\t\t\t\t}),\n\t\t\t})\n\t\t\twhen(entity.load(ConversationEntryTypeRef, draft.conversationEntry)).thenResolve(\n\t\t\t\tcreateTestEntity(ConversationEntryTypeRef, { conversationType: ConversationType.REPLY }),\n\t\t\t)\n\t\t\tconst initializedModel = await model.initWithDraft(draft, draftDetails, [], new Map())\n\t\t\to(initializedModel.getConversationType()).equals(ConversationType.REPLY)\n\t\t\to(initializedModel.getSubject()).equals(draft.subject)\n\t\t\to(initializedModel.getBody()).equals(BODY_TEXT_1)\n\t\t\to(initializedModel.getDraft()).equals(draft)\n\t\t\to(initializedModel.allRecipients().length).equals(0)\n\t\t\to(initializedModel.getSender()).equals(DEFAULT_SENDER_FOR_TESTING)\n\t\t\to(model.isConfidential()).equals(true)\n\t\t\to(model.containsExternalRecipients()).equals(false)\n\t\t\to(initializedModel.getAttachments().length).equals(0)\n\t\t\to(initializedModel.hasMailChanged()).equals(false)(\"initialization should not flag mail changed\")\n\t\t})\n\t\to(\"initWithDraft with some data\", async function () {\n\t\t\tconst draft = createTestEntity(MailTypeRef, {\n\t\t\t\tconfidential: true,\n\t\t\t\tsender: createTestEntity(MailAddressTypeRef),\n\t\t\t\tsubject: SUBJECT_LINE_1,\n\t\t\t\tconversationEntry: testIdGenerator.newIdTuple(),\n\t\t\t})\n\t\t\tconst recipients = createTestEntity(RecipientsTypeRef, {\n\t\t\t\ttoRecipients: [\n\t\t\t\t\tcreateTestEntity(MailAddressTypeRef, {\n\t\t\t\t\t\taddress: \"\",\n\t\t\t\t\t}),\n\t\t\t\t\tcreateTestEntity(MailAddressTypeRef, {\n\t\t\t\t\t\taddress: EXTERNAL_ADDRESS_1,\n\t\t\t\t\t}),\n\t\t\t\t],\n\t\t\t\tccRecipients: [\n\t\t\t\t\tcreateTestEntity(MailAddressTypeRef, {\n\t\t\t\t\t\taddress: EXTERNAL_ADDRESS_2,\n\t\t\t\t\t}),\n\t\t\t\t],\n\t\t\t})\n\t\t\tconst draftDetails = createTestEntity(MailDetailsTypeRef, {\n\t\t\t\trecipients,\n\t\t\t\tbody: createTestEntity(BodyTypeRef, { text: BODY_TEXT_1 }),\n\t\t\t})\n\n\t\t\twhen(entity.load(ConversationEntryTypeRef, draft.conversationEntry)).thenResolve(\n\t\t\t\tcreateTestEntity(ConversationEntryTypeRef, { conversationType: ConversationType.FORWARD }),\n\t\t\t)\n\n\t\t\tconst initializedModel = await model.initWithDraft(draft, draftDetails, [], new Map())\n\t\t\to(initializedModel.getConversationType()).equals(ConversationType.FORWARD)\n\t\t\to(initializedModel.getSubject()).equals(draft.subject)\n\t\t\to(initializedModel.getBody()).equals(BODY_TEXT_1)\n\t\t\to(initializedModel.getDraft()).equals(draft)\n\t\t\to(initializedModel.allRecipients().length).equals(2)(\"Only MailAddresses with a valid address will be accepted as recipients\")\n\t\t\to(initializedModel.toRecipients().length).equals(1)\n\t\t\to(initializedModel.ccRecipients().length).equals(1)\n\t\t\to(initializedModel.bccRecipients().length).equals(0)\n\t\t\to(initializedModel.getSender()).equals(DEFAULT_SENDER_FOR_TESTING)\n\t\t\to(model.isConfidential()).equals(true)\n\t\t\to(model.containsExternalRecipients()).equals(true)\n\t\t\to(initializedModel.getAttachments().length).equals(0)\n\t\t})\n\t})\n\to.spec(\"Adding and removing recipients\", function () {\n\t\to.beforeEach(async function () {\n\t\t\tawait model.initWithTemplate({}, \"\", \"\", [], false, \"\")\n\t\t})\n\n\t\to(\"adding duplicate to-recipient\", async function () {\n\t\t\tconst recipient = {\n\t\t\t\tname: \"sanchez\",\n\t\t\t\taddress: \"123@test.com\",\n\t\t\t\tcontact: null,\n\t\t\t\ttype: null,\n\t\t\t}\n\t\t\tmodel.addRecipient(RecipientField.TO, recipient, ResolveMode.Eager)\n\t\t\tconst r1 = model.getRecipient(RecipientField.TO, recipient.address)!\n\n\t\t\tmodel.addRecipient(RecipientField.TO, recipient, ResolveMode.Eager)\n\n\t\t\tverify(recipientsModel.resolve(recipient, ResolveMode.Eager), { times: 1 })\n\n\t\t\to(model.toRecipients().length).equals(1)\n\t\t\to(model.ccRecipients().length).equals(0)\n\t\t\to(model.bccRecipients().length).equals(0)\n\t\t})\n\t\to(\"add different to-recipients\", async function () {\n\t\t\tconst pablo = {\n\t\t\t\tname: \"pablo\",\n\t\t\t\taddress: \"pablo94@test.co.uk\",\n\t\t\t\tcontact: null,\n\t\t\t\ttype: null,\n\t\t\t}\n\t\t\tconst cortez = {\n\t\t\t\tname: \"cortez\",\n\t\t\t\taddress: \"c.asd@test.net\",\n\t\t\t\tcontact: null,\n\t\t\t\ttype: null,\n\t\t\t}\n\t\t\tmodel.addRecipient(RecipientField.TO, pablo, ResolveMode.Eager)\n\t\t\tmodel.addRecipient(RecipientField.TO, cortez, ResolveMode.Eager)\n\n\t\t\tverify(recipientsModel.resolve(pablo, ResolveMode.Eager))\n\t\t\tverify(recipientsModel.resolve(cortez, ResolveMode.Eager))\n\n\t\t\to(model.toRecipients().length).equals(2)\n\t\t\to(model.ccRecipients().length).equals(0)\n\t\t\to(model.bccRecipients().length).equals(0)\n\t\t})\n\t\to(\"add duplicate recipients to different fields\", async function () {\n\t\t\tconst recipient = {\n\t\t\t\tname: \"sanchez\",\n\t\t\t\taddress: \"123@test.com\",\n\t\t\t\tcontact: null,\n\t\t\t\ttype: null,\n\t\t\t}\n\t\t\tmodel.addRecipient(RecipientField.TO, recipient, ResolveMode.Eager)\n\t\t\tmodel.addRecipient(RecipientField.CC, recipient, ResolveMode.Eager)\n\n\t\t\tverify(recipientsModel.resolve(recipient, ResolveMode.Eager), { times: 2 })\n\n\t\t\to(model.toRecipients().length).equals(1)\n\t\t\to(model.ccRecipients().length).equals(1)\n\t\t\to(model.bccRecipients().length).equals(0)\n\t\t})\n\t})\n\to.spec(\"Sending\", function () {\n\t\to(\"completely blank email\", async function () {\n\t\t\tconst method = MailMethod.NONE\n\t\t\tconst getConfirmation = func<() => Promise<boolean>>()\n\t\t\tconst e = await assertThrows(UserError, () => model.send(method, getConfirmation))\n\t\t\to(e?.message).equals(lang.get(\"noRecipients_msg\"))\n\t\t\tverify(getConfirmation(), { times: 0 })\n\t\t\tverify(mailFacade.sendDraft(anything(), anything(), anything()), { times: 0 })\n\t\t\tverify(mailFacade.createDraft(anything()), { times: 0 })\n\t\t\tverify(mailFacade.updateDraft(anything()), { times: 0 })\n\t\t})\n\t\to(\"blank subject no confirm\", async function () {\n\t\t\tmodel.addRecipient(RecipientField.TO, {\n\t\t\t\tname: \"test\",\n\t\t\t\taddress: \"test@address.com\",\n\t\t\t\tcontact: null,\n\t\t\t})\n\n\t\t\tconst method = MailMethod.NONE\n\t\t\tconst getConfirmation = func<() => Promise<boolean>>()\n\t\t\tconst r = await model.send(method, getConfirmation)\n\t\t\to(r).equals(false)\n\t\t\tverify(getConfirmation(), { times: 0 })\n\t\t\tverify(mailFacade.sendDraft(anything(), anything(), anything()), { times: 0 })\n\t\t\tverify(mailFacade.createDraft(anything()), { times: 0 })\n\t\t\tverify(mailFacade.updateDraft(anything()), { times: 0 })\n\t\t})\n\t\to(\"confidential missing password\", async function () {\n\t\t\tawait model.addRecipient(RecipientField.TO, {\n\t\t\t\tname: \"test\",\n\t\t\t\taddress: \"test@address.com\",\n\t\t\t\tcontact: null,\n\t\t\t})\n\t\t\tmodel.setConfidential(true)\n\t\t\tconst method = MailMethod.NONE\n\n\t\t\tconst getConfirmation = func<(TranslationKey) => Promise<boolean>>()\n\t\t\twhen(getConfirmation(anything())).thenResolve(true)\n\n\t\t\tconst e = await assertThrows(UserError, () => model.send(method, getConfirmation))\n\t\t\to(e?.message).equals(lang.get(\"noPreSharedPassword_msg\"))\n\n\t\t\tverify(mailFacade.sendDraft(anything(), anything(), anything()), { times: 0 })\n\t\t\tverify(mailFacade.createDraft(anything()), { times: 0 })\n\t\t\tverify(mailFacade.updateDraft(anything()), { times: 0 })\n\t\t})\n\t\to(\"confidential weak password no confirm\", async function () {\n\t\t\tconst recipient = {\n\t\t\t\tname: \"test\",\n\t\t\t\taddress: \"test@address.com\",\n\t\t\t\tcontact: null,\n\t\t\t}\n\t\t\tawait model.initWithTemplate({ to: [recipient] }, \"subject\", \"\", [], true, \"me@tuta.com\", false)\n\t\t\tmodel.setPassword(\"test@address.com\", \"abc\")\n\t\t\to(model.getPassword(recipient.address)).equals(\"abc\")\n\t\t\tconst method = MailMethod.NONE\n\n\t\t\tconst getConfirmation = func<(TranslationKey) => Promise<boolean>>()\n\t\t\twhen(getConfirmation(anything())).thenResolve(false)\n\t\t\tconst r = await model.send(method, getConfirmation)\n\t\t\to(r).equals(false)\n\t\t\tverify(mailFacade.sendDraft(anything(), anything(), anything()), { times: 0 })\n\t\t\tverify(mailFacade.createDraft(anything()), { times: 0 })\n\t\t\tverify(mailFacade.updateDraft(anything()), { times: 0 })\n\t\t})\n\t\to(\"confidential weak password confirm\", async function () {\n\t\t\tconst recipient = {\n\t\t\t\tname: \"test\",\n\t\t\t\taddress: \"test@address.com\",\n\t\t\t\tcontact: null,\n\t\t\t}\n\t\t\tawait model.initWithTemplate({ to: [recipient] }, \"did you get that thing i sent ya?\", \"\", [], true, \"me@tutanota.de\", false)\n\t\t\tconst password = WEAK_PASSWORD\n\t\t\tmodel.setPassword(\"test@address.com\", password)\n\t\t\to(model.getPassword(recipient.address)).equals(password)\n\t\t\tconst method = MailMethod.NONE\n\t\t\tconst getConfirmation = func<(TranslationKey) => Promise<boolean>>()\n\t\t\twhen(getConfirmation(anything())).thenResolve(true)\n\n\t\t\tconst r = await model.send(method, getConfirmation)\n\t\t\to(r).equals(true)\n\n\t\t\tverify(mailFacade.sendDraft(anything(), anything(), anything()), { times: 1 })\n\t\t\tverify(mailFacade.createDraft(anything()), { times: 1 })\n\t\t\tverify(mailFacade.updateDraft(anything()), { times: 0 })\n\n\t\t\tconst contact = model.getRecipientList(RecipientField.TO)[0].contact!\n\t\t\to(contact.presharedPassword).equals(password)\n\t\t})\n\n\t\to(\"correct password will be returned from getPassword after calling setPassword\", function () {\n\t\t\tmodel.setPassword(\"address1\", \"password1\")\n\t\t\tmodel.setPassword(\"address2\", \"password2\")\n\n\t\t\to(model.getPassword(\"address2\")).equals(\"password2\")\n\t\t\to(model.getPassword(\"address1\")).equals(\"password1\")\n\t\t})\n\n\t\to(\"confidential strong password\", async function () {\n\t\t\tconst address = \"test@address.com\"\n\t\t\tconst recipient = {\n\t\t\t\tname: \"test\",\n\t\t\t\taddress: address,\n\t\t\t\tcontact: null,\n\t\t\t}\n\t\t\tawait model.initWithTemplate({ to: [recipient] }, \"subjecttttt\", \"\", [], true, \"me@tutanota.de\", false)\n\t\t\tconst password = STRONG_PASSWORD\n\t\t\tmodel.setPassword(address, password)\n\t\t\tconst method = MailMethod.NONE\n\n\t\t\tconst getConfirmation = func<(TranslationKey) => Promise<boolean>>()\n\n\t\t\tconst r = await model.send(method, getConfirmation)\n\t\t\to(r).equals(true)\n\n\t\t\tverify(getConfirmation(anything), { times: 0 })\n\n\t\t\tverify(mailFacade.sendDraft(anything(), anything(), anything()), { times: 1 })\n\t\t\tverify(mailFacade.createDraft(anything()), { times: 1 })\n\t\t\tverify(mailFacade.updateDraft(anything()), { times: 0 })\n\n\t\t\tconst contact = model.getRecipientList(RecipientField.TO)[0].contact!\n\t\t\to(contact.presharedPassword).equals(password)\n\t\t})\n\n\t\to(\"when a recipient has an existing contact, and the saved password changes, then the contact will be updated\", async function () {\n\t\t\tconst getConfirmation = func<(TranslationKey) => Promise<boolean>>()\n\n\t\t\tconst contact = createTestEntity(ContactTypeRef, {\n\t\t\t\t_id: testIdGenerator.newIdTuple(),\n\t\t\t\tfirstName: \"my\",\n\t\t\t\tlastName: \"chippie\",\n\t\t\t\tpresharedPassword: \"weak password\",\n\t\t\t})\n\t\t\tawait model.initWithTemplate({ to: [] }, \"did you get that thing i sent ya?\", \"no?\", [], true, \"me@tutanota.de\", false)\n\n\t\t\tawait model.addRecipient(RecipientField.TO, {\n\t\t\t\tname: \"chippie\",\n\t\t\t\taddress: \"chippie@cinco.net\",\n\t\t\t\tcontact,\n\t\t\t})\n\n\t\t\tmodel.setPassword(\"chippie@cinco.net\", STRONG_PASSWORD)\n\t\t\tawait model.send(MailMethod.NONE, getConfirmation)\n\t\t\tverify(entity.update(contact), { times: 1 })\n\t\t})\n\t})\n\n\to.spec(\"Entity Event Updates\", function () {\n\t\tlet existingContact\n\t\tlet recipients\n\t\to.before(function () {\n\t\t\texistingContact = createTestEntity(ContactTypeRef, {\n\t\t\t\t_id: testIdGenerator.newIdTuple(),\n\t\t\t\tfirstName: \"james\",\n\t\t\t\tlastName: \"hetfield\",\n\t\t\t})\n\n\t\t\trecipients = [\n\t\t\t\t{\n\t\t\t\t\tname: \"paul gilbert\",\n\t\t\t\t\taddress: \"paul@gmail.com\",\n\t\t\t\t\tcontact: null,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"james hetfield\",\n\t\t\t\t\taddress: \"james@tuta.com\",\n\t\t\t\t\tcontact: existingContact,\n\t\t\t\t},\n\t\t\t]\n\t\t})\n\n\t\to(\"nonmatching event\", async function () {\n\t\t\tawait model.handleEntityEvent(downcast(CustomerAccountCreateDataTypeRef))\n\t\t\tawait model.handleEntityEvent(downcast(UserTypeRef))\n\t\t\tawait model.handleEntityEvent(downcast(CustomerTypeRef))\n\t\t\tawait model.handleEntityEvent(downcast(NotificationMailTypeRef))\n\t\t\tawait model.handleEntityEvent(downcast(ChallengeTypeRef))\n\t\t\tawait model.handleEntityEvent(downcast(MailTypeRef))\n\t\t\tverify(entity.load(anything(), anything(), anything()), { times: 0 })\n\t\t})\n\n\t\to(\"contact updated email kept\", async function () {\n\t\t\tconst { app, type } = ContactTypeRef\n\t\t\tconst [instanceListId, instanceId] = existingContact._id\n\t\t\tconst contactForUpdate = {\n\t\t\t\tfirstName: \"newfirstname\",\n\t\t\t\tlastName: \"newlastname\",\n\t\t\t\tmailAddresses: [\n\t\t\t\t\tcreateTestEntity(MailAddressTypeRef, {\n\t\t\t\t\t\taddress: \"james@tuta.com\",\n\t\t\t\t\t}),\n\t\t\t\t\tcreateTestEntity(MailAddressTypeRef, {\n\t\t\t\t\t\taddress: \"address2@hotmail.com\",\n\t\t\t\t\t}),\n\t\t\t\t],\n\t\t\t}\n\t\t\twhen(\n\t\t\t\tentity.load(\n\t\t\t\t\tContactTypeRef,\n\t\t\t\t\targThat((id) => isSameId(id, existingContact._id)),\n\t\t\t\t),\n\t\t\t).thenResolve(createContact(Object.assign({ _id: existingContact._id } as Contact, contactForUpdate)))\n\t\t\tawait model.initWithTemplate({ to: recipients }, \"somb\", \"\", [], true, \"a@b.c\", false)\n\t\t\tawait model.handleEntityEvent({\n\t\t\t\tapplication: app,\n\t\t\t\ttype,\n\t\t\t\toperation: OperationType.UPDATE,\n\t\t\t\tinstanceListId,\n\t\t\t\tinstanceId,\n\t\t\t})\n\t\t\to(model.allRecipients().length).equals(2)\n\t\t\tconst updatedRecipient = model.allRecipients().find((r) => r.contact && isSameId(r.contact._id, existingContact._id))\n\t\t\to(updatedRecipient && updatedRecipient.name).equals(getContactDisplayName(downcast(contactForUpdate)))\n\t\t})\n\t\to(\"contact updated email removed or changed\", async function () {\n\t\t\tconst { app, type } = ContactTypeRef\n\t\t\tconst [instanceListId, instanceId] = existingContact._id\n\t\t\tconst contactForUpdate = {\n\t\t\t\tfirstName: \"james\",\n\t\t\t\tlastName: \"hetfield\",\n\t\t\t\tmailAddresses: [\n\t\t\t\t\tcreateTestEntity(MailAddressTypeRef, {\n\t\t\t\t\t\taddress: \"nolongerjames@hotmail.com\",\n\t\t\t\t\t}),\n\t\t\t\t],\n\t\t\t}\n\n\t\t\twhen(entity.load(ContactTypeRef, existingContact._id)).thenResolve(\n\t\t\t\tcreateContact(\n\t\t\t\t\tObject.assign(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t_id: existingContact._id,\n\t\t\t\t\t\t} as Contact,\n\t\t\t\t\t\tcontactForUpdate,\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t)\n\t\t\tawait model.initWithTemplate({ to: recipients }, \"b\", \"c\", [], true, \"\", false)\n\t\t\tawait model.handleEntityEvent({\n\t\t\t\tapplication: app,\n\t\t\t\ttype,\n\t\t\t\toperation: OperationType.UPDATE,\n\t\t\t\tinstanceListId,\n\t\t\t\tinstanceId,\n\t\t\t})\n\t\t\to(model.allRecipients().length).equals(1)\n\t\t\tconst updatedContact = model.allRecipients().find((r) => r.contact && isSameId(r.contact._id, existingContact._id))\n\t\t\to(updatedContact ?? null).equals(null)\n\t\t})\n\t\to(\"contact removed\", async function () {\n\t\t\tconst { app, type } = ContactTypeRef\n\t\t\tconst [instanceListId, instanceId] = existingContact._id\n\t\t\tawait model.initWithTemplate({ to: recipients }, \"subj\", \"\", [], true, \"a@b.c\", false)\n\t\t\tawait model.handleEntityEvent({\n\t\t\t\tapplication: app,\n\t\t\t\ttype,\n\t\t\t\toperation: OperationType.DELETE,\n\t\t\t\tinstanceListId,\n\t\t\t\tinstanceId,\n\t\t\t})\n\t\t\to(model.allRecipients().length).equals(1)\n\t\t\tconst updatedContact = model.allRecipients().find((r) => r.contact && isSameId(r.contact._id, existingContact._id))\n\t\t\to(updatedContact == null).equals(true)\n\t\t})\n\t\to(\"too many to recipients dont confirm\", async function () {\n\t\t\tconst recipients = {\n\t\t\t\tto: [] as { name: string; address: string }[],\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < TOO_MANY_VISIBLE_RECIPIENTS; ++i) {\n\t\t\t\trecipients.to.push({\n\t\t\t\t\tname: `person ${i}`,\n\t\t\t\t\taddress: `person${i}@tutanota.de`,\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tconst subject = \"subyekt\"\n\t\t\tconst body = \"bodie\"\n\n\t\t\tconst getConfirmation = func<(key: TranslationKey) => Promise<boolean>>()\n\t\t\twhen(getConfirmation(\"manyRecipients_msg\")).thenResolve(false)\n\n\t\t\tawait model.initWithTemplate(recipients, subject, body, [], false, \"eggs@tutanota.de\", false)\n\t\t\tconst hasBeenSent = await model.send(MailMethod.NONE, getConfirmation)\n\t\t\to(hasBeenSent).equals(false)(\"nothing was sent\")\n\t\t\tverify(getConfirmation(\"manyRecipients_msg\"), { times: 1 })\n\t\t})\n\t\to(\"too many to recipients confirm\", async function () {\n\t\t\tconst recipients = {\n\t\t\t\tto: [] as { name: string; address: string }[],\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < TOO_MANY_VISIBLE_RECIPIENTS; ++i) {\n\t\t\t\trecipients.to.push({\n\t\t\t\t\tname: `person ${i}`,\n\t\t\t\t\taddress: `person${i}@tutanota.de`,\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tconst subject = \"subyekt\"\n\t\t\tconst body = \"bodie\"\n\n\t\t\tconst getConfirmation = func<(key: TranslationKey) => Promise<boolean>>()\n\t\t\twhen(getConfirmation(\"manyRecipients_msg\")).thenResolve(true)\n\n\t\t\tawait model.initWithTemplate(recipients, subject, body, [], false, \"eggs@tutanota.de\")\n\n\t\t\to(await model.send(MailMethod.NONE, getConfirmation)).equals(true)\n\t\t\tverify(getConfirmation(\"manyRecipients_msg\"), { times: 1 })\n\t\t})\n\t\to(\"too many cc recipients dont confirm\", async function () {\n\t\t\tconst recipients = {\n\t\t\t\tcc: [] as { name: string; address: string }[],\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < TOO_MANY_VISIBLE_RECIPIENTS; ++i) {\n\t\t\t\trecipients.cc.push({\n\t\t\t\t\tname: `person ${i}`,\n\t\t\t\t\taddress: `person${i}@tutanota.de`,\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tconst subject = \"subyekt\"\n\t\t\tconst body = \"bodie\"\n\n\t\t\tconst getConfirmation = func<(key: TranslationKey) => Promise<boolean>>()\n\t\t\twhen(getConfirmation(\"manyRecipients_msg\")).thenResolve(false)\n\n\t\t\tawait model.initWithTemplate(recipients, subject, body, [], false, \"eggs@tutanota.de\")\n\t\t\to(await model.send(MailMethod.NONE, getConfirmation)).equals(false)\n\t\t\tverify(getConfirmation(\"manyRecipients_msg\"), { times: 1 })\n\t\t})\n\t\to(\"too many cc recipients confirm\", async function () {\n\t\t\tconst recipients = {\n\t\t\t\tcc: [] as { name: string; address: string }[],\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < TOO_MANY_VISIBLE_RECIPIENTS; ++i) {\n\t\t\t\trecipients.cc.push({\n\t\t\t\t\tname: `person ${i}`,\n\t\t\t\t\taddress: `person${i}@tutanota.de`,\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tconst subject = \"subyekt\"\n\t\t\tconst body = \"bodie\"\n\n\t\t\tconst getConfirmation = func<(key: TranslationKey) => Promise<boolean>>()\n\t\t\twhen(getConfirmation(\"manyRecipients_msg\")).thenResolve(true)\n\n\t\t\tawait model.initWithTemplate(recipients, subject, body, [], false, \"eggs@tutanota.de\")\n\t\t\to(await model.send(MailMethod.NONE, getConfirmation)).equals(true)\n\t\t\tverify(getConfirmation(\"manyRecipients_msg\"), { times: 1 })\n\t\t})\n\t})\n})\n","import o from \"@tutao/otest\"\nimport { OutOfOfficeNotificationTypeRef } from \"../../../src/common/api/entities/tutanota/TypeRefs.js\"\nimport { mockAttribute, unmockAttribute } from \"@tutao/tutanota-test-utils\"\nimport { getDayShifted, getStartOfDay, getStartOfNextDay } from \"@tutao/tutanota-utils\"\nimport { lang } from \"../../../src/common/misc/LanguageViewModel.js\"\nimport { formatActivateState, isNotificationCurrentlyActive } from \"../../../src/common/misc/OutOfOfficeNotificationUtils.js\"\nimport { createTestEntity } from \"../TestUtils.js\"\n\no.spec(\"OutOfOfficeNotificationTest\", function () {\n\tconst mockedAttributes: any = []\n\to.before(function () {\n\t\tmockedAttributes.push(\n\t\t\tmockAttribute(lang, lang.get, function (key, obj) {\n\t\t\t\tif (key === \"activated_label\") {\n\t\t\t\t\treturn \"Activated\"\n\t\t\t\t} else if (key === \"deactivated_label\") {\n\t\t\t\t\treturn \"Deactivated\"\n\t\t\t\t}\n\n\t\t\t\tthrow new Error(\"unexpected translation key: \" + key)\n\t\t\t}),\n\t\t)\n\t})\n\to.after(function () {\n\t\tfor (const mockedAttribute of mockedAttributes) {\n\t\t\tunmockAttribute(mockedAttribute)\n\t\t}\n\t})\n\to(\"Active state formatting\", function () {\n\t\tlang._setLanguageTag(\"en\")\n\n\t\tlet notification = createTestEntity(OutOfOfficeNotificationTypeRef, {\n\t\t\tenabled: true,\n\t\t\tstartDate: null,\n\t\t\tendDate: null,\n\t\t})\n\t\to(formatActivateState(notification)).equals(\"Activated\")\n\t\tnotification = createTestEntity(OutOfOfficeNotificationTypeRef, {\n\t\t\tenabled: true,\n\t\t\tstartDate: new Date(2020, 11, 15),\n\t\t\tendDate: null,\n\t\t})\n\t\to(formatActivateState(notification)).equals(\"Activated (12/15/2020)\")\n\t\tnotification = createTestEntity(OutOfOfficeNotificationTypeRef, {\n\t\t\tenabled: true,\n\t\t\tstartDate: new Date(2020, 11, 15),\n\t\t\tendDate: new Date(2021, 0, 9),\n\t\t})\n\t\to(formatActivateState(notification)).equals(\"Activated (12/15/2020 - 1/8/2021)\") // end date should be shifted\n\n\t\tnotification = createTestEntity(OutOfOfficeNotificationTypeRef, {\n\t\t\tenabled: false,\n\t\t\tstartDate: new Date(2020, 11, 15),\n\t\t\tendDate: new Date(2021, 0, 10),\n\t\t})\n\t\to(formatActivateState(notification)).equals(\"Deactivated\")\n\t})\n\to(\"is active with enabled notification\", function () {\n\t\tconst now = new Date()\n\t\tconst oneDayBefore = getDayShifted(now, -1)\n\t\tconst oneDayAfter = getDayShifted(now, +1)\n\t\tlet notification = createTestEntity(OutOfOfficeNotificationTypeRef, {\n\t\t\tenabled: true,\n\t\t\tstartDate: null,\n\t\t\tendDate: null,\n\t\t})\n\t\to(isNotificationCurrentlyActive(notification, now)).equals(true)\n\t\to(isNotificationCurrentlyActive(notification, oneDayBefore)).equals(true)\n\t\to(isNotificationCurrentlyActive(notification, oneDayAfter)).equals(true)\n\t})\n\to(\"is active with disabled notification\", function () {\n\t\tconst now = new Date()\n\t\tconst oneDayBefore = getDayShifted(now, -1)\n\t\tconst oneDayAfter = getDayShifted(now, +1)\n\t\tlet notification = createTestEntity(OutOfOfficeNotificationTypeRef, {\n\t\t\tenabled: false,\n\t\t\tstartDate: null,\n\t\t\tendDate: null,\n\t\t})\n\t\to(isNotificationCurrentlyActive(notification, now)).equals(false)\n\t\to(isNotificationCurrentlyActive(notification, oneDayBefore)).equals(false)\n\t\to(isNotificationCurrentlyActive(notification, oneDayAfter)).equals(false)\n\t})\n\to(\"is active with startDate\", function () {\n\t\tconst now = new Date()\n\t\tconst oneDayBefore = getDayShifted(now, -1)\n\t\tconst oneDayAfter = getDayShifted(now, +1)\n\t\tlet notification = createTestEntity(OutOfOfficeNotificationTypeRef, {\n\t\t\tenabled: true,\n\t\t\tstartDate: getStartOfDay(now),\n\t\t\tendDate: null,\n\t\t})\n\t\to(isNotificationCurrentlyActive(notification, now)).equals(true)\n\t\to(isNotificationCurrentlyActive(notification, oneDayBefore)).equals(false)\n\t\to(isNotificationCurrentlyActive(notification, oneDayAfter)).equals(true)\n\t})\n\to(\"is active with start and end date\", function () {\n\t\tconst now = new Date()\n\t\tconst oneDayBefore = getDayShifted(now, -1)\n\t\tconst oneDayAfter = getDayShifted(now, +1)\n\t\tlet notification = createTestEntity(OutOfOfficeNotificationTypeRef, {\n\t\t\tenabled: true,\n\t\t\tstartDate: getStartOfDay(now),\n\t\t\tendDate: getStartOfNextDay(now),\n\t\t})\n\t\to(isNotificationCurrentlyActive(notification, now)).equals(true)\n\t\to(isNotificationCurrentlyActive(notification, oneDayBefore)).equals(false)\n\t\to(isNotificationCurrentlyActive(notification, oneDayAfter)).equals(false)\n\t})\n\to(\"is active with start and end date 2\", function () {\n\t\tconst now = new Date()\n\t\tconst activeUntil = getDayShifted(now, +5)\n\t\tconst oneDayAfter = getStartOfNextDay(activeUntil)\n\t\tlet notification = createTestEntity(OutOfOfficeNotificationTypeRef, {\n\t\t\tenabled: true,\n\t\t\tstartDate: getStartOfDay(now),\n\t\t\tendDate: getStartOfNextDay(activeUntil),\n\t\t})\n\t\to(isNotificationCurrentlyActive(notification, now)).equals(true)\n\t\to(isNotificationCurrentlyActive(notification, activeUntil)).equals(true)\n\t\to(isNotificationCurrentlyActive(notification, oneDayAfter)).equals(false)\n\t})\n})\n","import { matchers, object, when } from \"testdouble\"\nimport { IServiceExecutor } from \"../../../src/common/api/common/ServiceRequest.js\"\nimport { UpgradePriceService } from \"../../../src/common/api/entities/sys/Services.js\"\nimport { PlanConfigurationTypeRef, PlanPricesTypeRef } from \"../../../src/common/api/entities/sys/TypeRefs.js\"\nimport { createTestEntity } from \"../TestUtils.js\"\n\nexport const PLAN_PRICES = {\n\tFree: createTestEntity(PlanPricesTypeRef, {\n\t\tadditionalUserPriceMonthly: \"0.00\",\n\t\tbusiness: false,\n\t\tfirstYearDiscount: \"0\",\n\t\tincludedAliases: \"0\",\n\t\tincludedStorage: \"1\",\n\t\tmonthlyPrice: \"0.00\",\n\t\tmonthlyReferencePrice: \"0.00\",\n\t\tsharing: false,\n\t\twhitelabel: false,\n\t\tplanName: \"Free\",\n\t\tbusinessPlan: false,\n\t\tplanConfiguration: createTestEntity(PlanConfigurationTypeRef, {\n\t\t\tnbrOfAliases: \"0\",\n\t\t\twhitelabel: false,\n\t\t}),\n\t}),\n\tPremiumBusiness: createTestEntity(PlanPricesTypeRef, {\n\t\t_id: \"\",\n\t\t_type: undefined,\n\t\tcustomDomains: \"\",\n\t\tsharing: false,\n\t\twhitelabel: false,\n\t\tadditionalUserPriceMonthly: \"2.40\",\n\t\tbusiness: true,\n\t\tfirstYearDiscount: \"0\",\n\t\tincludedAliases: \"5\",\n\t\tincludedStorage: \"1\",\n\t\tmonthlyPrice: \"2.40\",\n\t\tmonthlyReferencePrice: \"2.40\",\n\t\tplanName: \"PremiumBusiness\",\n\t\tbusinessPlan: true,\n\t\tplanConfiguration: createTestEntity(PlanConfigurationTypeRef, {\n\t\t\tnbrOfAliases: \"5\",\n\t\t\twhitelabel: false,\n\t\t}),\n\t}),\n\tPremium: createTestEntity(PlanPricesTypeRef, {\n\t\tadditionalUserPriceMonthly: \"1.20\",\n\t\tbusiness: false,\n\t\tfirstYearDiscount: \"0\",\n\t\tincludedAliases: \"5\",\n\t\tincludedStorage: \"1\",\n\t\tmonthlyPrice: \"1.20\",\n\t\tmonthlyReferencePrice: \"1.20\",\n\t\tplanName: \"Premium\",\n\t\tbusinessPlan: false,\n\t\tplanConfiguration: createTestEntity(PlanConfigurationTypeRef, {\n\t\t\tnbrOfAliases: \"5\",\n\t\t\twhitelabel: false,\n\t\t}),\n\t}),\n\tPro: createTestEntity(PlanPricesTypeRef, {\n\t\tadditionalUserPriceMonthly: \"4.80\",\n\t\tbusiness: true,\n\t\tfirstYearDiscount: \"0\",\n\t\tincludedAliases: \"20\",\n\t\tincludedStorage: \"10\",\n\t\tmonthlyPrice: \"8.40\",\n\t\tmonthlyReferencePrice: \"8.40\",\n\t\tplanName: \"Pro\",\n\t\tbusinessPlan: true,\n\t\tplanConfiguration: createTestEntity(PlanConfigurationTypeRef, {\n\t\t\tnbrOfAliases: \"20\",\n\t\t\twhitelabel: false,\n\t\t}),\n\t}),\n\tTeamsBusiness: createTestEntity(PlanPricesTypeRef, {\n\t\tadditionalUserPriceMonthly: \"3.60\",\n\t\tbusiness: true,\n\t\tfirstYearDiscount: \"0\",\n\t\tincludedAliases: \"5\",\n\t\tincludedStorage: \"10\",\n\t\tmonthlyPrice: \"6.00\",\n\t\tmonthlyReferencePrice: \"6.00\",\n\t\tplanName: \"TeamsBusiness\",\n\t\tbusinessPlan: true,\n\t\tplanConfiguration: createTestEntity(PlanConfigurationTypeRef, {\n\t\t\tnbrOfAliases: \"5\",\n\t\t\twhitelabel: false,\n\t\t}),\n\t}),\n\tTeams: createTestEntity(PlanPricesTypeRef, {\n\t\tadditionalUserPriceMonthly: \"2.40\",\n\t\tbusiness: false,\n\t\tfirstYearDiscount: \"0\",\n\t\tincludedAliases: \"5\",\n\t\tincludedStorage: \"10\",\n\t\tmonthlyPrice: \"4.80\",\n\t\tmonthlyReferencePrice: \"4.80\",\n\t\tplanName: \"Teams\",\n\t\tbusinessPlan: false,\n\t\tplanConfiguration: createTestEntity(PlanConfigurationTypeRef, {\n\t\t\tnbrOfAliases: \"5\",\n\t\t\twhitelabel: false,\n\t\t}),\n\t}),\n\tRevolutionary: createTestEntity(PlanPricesTypeRef, {\n\t\tadditionalUserPriceMonthly: \"3.60\",\n\t\tbusiness: true,\n\t\tfirstYearDiscount: \"0\",\n\t\tincludedAliases: \"15\",\n\t\tincludedStorage: \"20\",\n\t\tmonthlyPrice: \"3.60\",\n\t\tmonthlyReferencePrice: \"3.60\",\n\t\tsharing: true,\n\t\twhitelabel: false,\n\t\tplanName: \"Revolutionary\",\n\t\tbusinessPlan: false,\n\t\tplanConfiguration: createTestEntity(PlanConfigurationTypeRef, {\n\t\t\tnbrOfAliases: \"15\",\n\t\t\twhitelabel: false,\n\t\t}),\n\t}),\n\tLegend: createTestEntity(PlanPricesTypeRef, {\n\t\tadditionalUserPriceMonthly: \"9.60\",\n\t\tbusiness: true,\n\t\tfirstYearDiscount: \"0\",\n\t\tincludedAliases: \"30\",\n\t\tincludedStorage: \"500\",\n\t\tmonthlyPrice: \"9.60\",\n\t\tmonthlyReferencePrice: \"9.60\",\n\t\tsharing: true,\n\t\twhitelabel: false,\n\t\tplanName: \"Legend\",\n\t\tbusinessPlan: false,\n\t\tplanConfiguration: createTestEntity(PlanConfigurationTypeRef, {\n\t\t\tnbrOfAliases: \"30\",\n\t\t\twhitelabel: false,\n\t\t}),\n\t}),\n\tEssential: createTestEntity(PlanPricesTypeRef, {\n\t\tadditionalUserPriceMonthly: \"7.20\",\n\t\tbusiness: true,\n\t\tfirstYearDiscount: \"0\",\n\t\tincludedAliases: \"15\",\n\t\tincludedStorage: \"50\",\n\t\tmonthlyPrice: \"7.20\",\n\t\tmonthlyReferencePrice: \"7.20\",\n\t\tsharing: true,\n\t\twhitelabel: false,\n\t\tplanName: \"Essential\",\n\t\tbusinessPlan: true,\n\t\tplanConfiguration: createTestEntity(PlanConfigurationTypeRef, {\n\t\t\tnbrOfAliases: \"15\",\n\t\t\twhitelabel: false,\n\t\t}),\n\t}),\n\tAdvanced: createTestEntity(PlanPricesTypeRef, {\n\t\tadditionalUserPriceMonthly: \"9.60\",\n\t\tbusiness: true,\n\t\tfirstYearDiscount: \"0\",\n\t\tincludedAliases: \"30\",\n\t\tincludedStorage: \"500\",\n\t\tmonthlyPrice: \"9.60\",\n\t\tmonthlyReferencePrice: \"9.60\",\n\t\tsharing: true,\n\t\twhitelabel: false,\n\t\tplanName: \"Advanced\",\n\t\tbusinessPlan: true,\n\t\tplanConfiguration: createTestEntity(PlanConfigurationTypeRef, {\n\t\t\tnbrOfAliases: \"30\",\n\t\t\twhitelabel: false,\n\t\t}),\n\t}),\n\tUnlimited: createTestEntity(PlanPricesTypeRef, {\n\t\tadditionalUserPriceMonthly: \"14.40\",\n\t\tbusiness: true,\n\t\tfirstYearDiscount: \"0\",\n\t\tincludedAliases: \"30\",\n\t\tincludedStorage: \"1000\",\n\t\tmonthlyPrice: \"14.40\",\n\t\tmonthlyReferencePrice: \"14.40\",\n\t\tsharing: true,\n\t\twhitelabel: true,\n\t\tplanName: \"Unlimited\",\n\t\tbusinessPlan: true,\n\t\tplanConfiguration: createTestEntity(PlanConfigurationTypeRef, {\n\t\t\tnbrOfAliases: \"30\",\n\t\t\twhitelabel: true,\n\t\t}),\n\t}),\n}\n\n/**\n * gives a real PriceAndConfigProvider with mocked data\n */\nexport function createUpgradePriceServiceMock(\n\tplanPrices: typeof PLAN_PRICES = PLAN_PRICES,\n\tregistrationDataId: string | null = null,\n\tbonusMonths: number = 0,\n): IServiceExecutor {\n\tconst executorMock = object<IServiceExecutor>()\n\twhen(executorMock.get(UpgradePriceService, matchers.anything())).thenResolve({\n\t\tpremiumPrices: planPrices.Premium,\n\t\tpremiumBusinessPrices: planPrices.PremiumBusiness,\n\t\tteamsPrices: planPrices.Teams,\n\t\tteamsBusinessPrices: planPrices.TeamsBusiness,\n\t\tproPrices: planPrices.Pro,\n\t\trevolutionaryPrices: planPrices.Revolutionary,\n\t\tlegendaryPrices: planPrices.Legend,\n\t\tessentialPrices: planPrices.Essential,\n\t\tadvancedPrices: planPrices.Advanced,\n\t\tunlimitedPrices: planPrices.Unlimited,\n\t\tfreePrices: planPrices.Free,\n\t\tbonusMonthsForYearlyPlan: String(bonusMonths),\n\t\tplans: Object.values(planPrices),\n\t})\n\treturn executorMock\n}\n","import o from \"@tutao/otest\"\nimport { asPaymentInterval, formatMonthlyPrice, formatPrice, PaymentInterval, PriceAndConfigProvider } from \"../../../src/common/subscription/PriceUtils.js\"\nimport { clone } from \"@tutao/tutanota-utils\"\nimport { UpgradePriceType } from \"../../../src/common/subscription/FeatureListProvider\"\nimport { lang } from \"../../../src/common/misc/LanguageViewModel\"\nimport en from \"../../../src/mail-app/translations/en\"\nimport { ProgrammingError } from \"../../../src/common/api/common/error/ProgrammingError.js\"\nimport { createUpgradePriceServiceMock, PLAN_PRICES } from \"./priceTestUtils.js\"\nimport { PlanType } from \"../../../src/common/api/common/TutanotaConstants.js\"\nimport { UserError } from \"../../../src/common/api/main/UserError.js\"\n\no.spec(\"PriceUtilsTest\", function () {\n\to.before(async function () {\n\t\t// We need this because SendMailModel queries for default language. We should refactor to avoid this.\n\t\tlang.init(en)\n\t})\n\n\to(\"getSubscriptionPrice premium yearly price\", async function () {\n\t\t// the return value is not rounded, but formatPrice handles that\n\t\tconst provider = await initPriceAndConfigProvider()\n\t\to(provider.getSubscriptionPrice(PaymentInterval.Yearly, PlanType.Premium, UpgradePriceType.PlanReferencePrice)).equals(12)\n\t\to(provider.getSubscriptionPrice(PaymentInterval.Yearly, PlanType.Premium, UpgradePriceType.PlanActualPrice)).equals(12)\n\t\to(provider.getSubscriptionPrice(PaymentInterval.Yearly, PlanType.Premium, UpgradePriceType.AdditionalUserPrice)).equals(12)\n\t\to(provider.getSubscriptionPrice(PaymentInterval.Yearly, PlanType.Premium, UpgradePriceType.PlanNextYearsPrice)).equals(12)\n\t})\n\to(\"getSubscriptionPrice premium monthly price\", async function () {\n\t\tconst provider = await initPriceAndConfigProvider()\n\t\to(provider.getSubscriptionPrice(PaymentInterval.Monthly, PlanType.Premium, UpgradePriceType.PlanReferencePrice)).equals(1.2)\n\t\to(provider.getSubscriptionPrice(PaymentInterval.Monthly, PlanType.Premium, UpgradePriceType.PlanActualPrice)).equals(1.2)\n\t\to(provider.getSubscriptionPrice(PaymentInterval.Monthly, PlanType.Premium, UpgradePriceType.AdditionalUserPrice)).equals(1.2)\n\t\to(provider.getSubscriptionPrice(PaymentInterval.Monthly, PlanType.Premium, UpgradePriceType.PlanNextYearsPrice)).equals(1.2)\n\t})\n\to(\"getSubscriptionPrice Premium discount yearly\", async function () {\n\t\tconst discountPlanPrices = clone(PLAN_PRICES)\n\t\tdiscountPlanPrices.Premium.firstYearDiscount = \"12\"\n\t\tconst priceServiceMock = createUpgradePriceServiceMock(discountPlanPrices)\n\t\tconst provider = await PriceAndConfigProvider.getInitializedInstance(null, priceServiceMock, null)\n\t\to(provider.getSubscriptionPrice(PaymentInterval.Yearly, PlanType.Premium, UpgradePriceType.PlanReferencePrice)).equals(12)\n\t\to(provider.getSubscriptionPrice(PaymentInterval.Yearly, PlanType.Premium, UpgradePriceType.PlanActualPrice)).equals(0)\n\t\to(provider.getSubscriptionPrice(PaymentInterval.Yearly, PlanType.Premium, UpgradePriceType.AdditionalUserPrice)).equals(12)\n\t\to(provider.getSubscriptionPrice(PaymentInterval.Yearly, PlanType.Premium, UpgradePriceType.PlanNextYearsPrice)).equals(12)\n\t})\n\to(\"getSubscriptionPrice Pro discount yearly\", async function () {\n\t\tconst discountPlanPrices = clone(PLAN_PRICES)\n\t\tdiscountPlanPrices.Pro.firstYearDiscount = \"84\"\n\t\tconst priceServiceMock = createUpgradePriceServiceMock(discountPlanPrices)\n\t\tconst provider = await PriceAndConfigProvider.getInitializedInstance(null, priceServiceMock, null)\n\t\to(provider.getSubscriptionPrice(PaymentInterval.Yearly, PlanType.Pro, UpgradePriceType.PlanReferencePrice)).equals(84)\n\t\to(provider.getSubscriptionPrice(PaymentInterval.Yearly, PlanType.Pro, UpgradePriceType.PlanActualPrice)).equals(0)\n\t\to(provider.getSubscriptionPrice(PaymentInterval.Yearly, PlanType.Pro, UpgradePriceType.AdditionalUserPrice)).equals(48)\n\t\to(provider.getSubscriptionPrice(PaymentInterval.Yearly, PlanType.Pro, UpgradePriceType.PlanNextYearsPrice)).equals(84)\n\t})\n\to(\"getSubscriptionPrice Premium discount monthly\", async function () {\n\t\tconst discountPlanPrices = clone(PLAN_PRICES)\n\t\tdiscountPlanPrices.Premium.firstYearDiscount = \"12\"\n\t\tconst priceServiceMock = createUpgradePriceServiceMock(discountPlanPrices)\n\t\tconst provider = await PriceAndConfigProvider.getInitializedInstance(null, priceServiceMock, null)\n\t\to(provider.getSubscriptionPrice(PaymentInterval.Monthly, PlanType.Premium, UpgradePriceType.PlanReferencePrice)).equals(1.2)\n\t\to(provider.getSubscriptionPrice(PaymentInterval.Monthly, PlanType.Premium, UpgradePriceType.PlanActualPrice)).equals(1.2)\n\t\to(provider.getSubscriptionPrice(PaymentInterval.Monthly, PlanType.Premium, UpgradePriceType.AdditionalUserPrice)).equals(1.2)\n\t\to(provider.getSubscriptionPrice(PaymentInterval.Monthly, PlanType.Premium, UpgradePriceType.PlanNextYearsPrice)).equals(1.2)\n\t})\n\n\to(\"getSubscriptionPrice Revolutionary discount monthly\", async function () {\n\t\tconst discountPlanPrices = clone(PLAN_PRICES)\n\t\tdiscountPlanPrices.Premium.firstYearDiscount = \"36\"\n\t\tconst priceServiceMock = createUpgradePriceServiceMock(discountPlanPrices)\n\t\tconst provider = await PriceAndConfigProvider.getInitializedInstance(null, priceServiceMock, null)\n\t\to(provider.getSubscriptionPrice(PaymentInterval.Monthly, PlanType.Revolutionary, UpgradePriceType.PlanReferencePrice)).equals(3.6)\n\t\to(provider.getSubscriptionPrice(PaymentInterval.Monthly, PlanType.Revolutionary, UpgradePriceType.PlanActualPrice)).equals(3.6)\n\t\to(provider.getSubscriptionPrice(PaymentInterval.Monthly, PlanType.Revolutionary, UpgradePriceType.AdditionalUserPrice)).equals(3.6)\n\t\to(provider.getSubscriptionPrice(PaymentInterval.Monthly, PlanType.Revolutionary, UpgradePriceType.PlanNextYearsPrice)).equals(3.6)\n\t})\n\n\to(\"getSubscriptionPrice Revolutionary discount yearly\", async function () {\n\t\tconst discountPlanPrices = clone(PLAN_PRICES)\n\t\tdiscountPlanPrices.Revolutionary.firstYearDiscount = \"36\"\n\t\tconst priceServiceMock = createUpgradePriceServiceMock(discountPlanPrices)\n\t\tconst provider = await PriceAndConfigProvider.getInitializedInstance(null, priceServiceMock, null)\n\t\to(provider.getSubscriptionPrice(PaymentInterval.Yearly, PlanType.Revolutionary, UpgradePriceType.PlanReferencePrice)).equals(36)\n\t\to(provider.getSubscriptionPrice(PaymentInterval.Yearly, PlanType.Revolutionary, UpgradePriceType.PlanActualPrice)).equals(0)\n\t\to(provider.getSubscriptionPrice(PaymentInterval.Yearly, PlanType.Revolutionary, UpgradePriceType.AdditionalUserPrice)).equals(36)\n\t\to(provider.getSubscriptionPrice(PaymentInterval.Yearly, PlanType.Revolutionary, UpgradePriceType.PlanNextYearsPrice)).equals(36)\n\t})\n\n\to(\"formatMonthlyPrices\", function () {\n\t\to(formatMonthlyPrice(0, 12)).equals(\"€0\")\n\t\to(formatMonthlyPrice(0, 1)).equals(\"€0\")\n\t\to(formatMonthlyPrice(12, 12)).equals(\"€1\")\n\t\to(formatMonthlyPrice(12, 1)).equals(\"€12\")\n\t\to(formatMonthlyPrice(1.2, 12)).equals(\"€0.10\")\n\t\to(formatMonthlyPrice(1.2, 1)).equals(\"€1.20\")\n\t})\n\n\to(\"getPriceInfoMessage - default\", async function () {\n\t\tconst discountPlanPrices = clone(PLAN_PRICES)\n\t\tconst priceServiceMock = createUpgradePriceServiceMock(discountPlanPrices)\n\t\tconst provider = await PriceAndConfigProvider.getInitializedInstance(null, priceServiceMock, null)\n\t\to(provider.getPriceInfoMessage()).equals(null)\n\t})\n\n\to(\"getPriceInfoMessage - bonus months\", async function () {\n\t\tconst discountPlanPrices = clone(PLAN_PRICES)\n\t\tconst priceServiceMock = createUpgradePriceServiceMock(discountPlanPrices, null, 12)\n\t\tconst provider = await PriceAndConfigProvider.getInitializedInstance(null, priceServiceMock, null)\n\t\to(provider.getPriceInfoMessage()).equals(\"chooseYearlyForOffer_msg\")\n\t})\n\n\to(\"getPriceInfoMessage - referral code\", async function () {\n\t\tconst discountPlanPrices = clone(PLAN_PRICES)\n\t\tconst priceServiceMock = createUpgradePriceServiceMock(discountPlanPrices, null, 1)\n\t\tconst provider = await PriceAndConfigProvider.getInitializedInstance(null, priceServiceMock, \"abc\")\n\t\to(provider.getPriceInfoMessage()).equals(\"referralSignup_msg\")\n\t})\n\to(\"getPriceInfoMessage - referral code invalid\", async function () {\n\t\tconst discountPlanPrices = clone(PLAN_PRICES)\n\t\tconst priceServiceMock = createUpgradePriceServiceMock(discountPlanPrices, null, 0)\n\t\tconst provider = await PriceAndConfigProvider.getInitializedInstance(null, priceServiceMock, \"abc\")\n\t\to(provider.getPriceInfoMessage()).equals(\"referralSignupInvalid_msg\")\n\t})\n\n\to(\"getPriceInfoMessage - referral code and registration id not allowed\", async function () {\n\t\tconst discountPlanPrices = clone(PLAN_PRICES)\n\t\tconst priceServiceMock = createUpgradePriceServiceMock(discountPlanPrices, null, 0)\n\t\ttry {\n\t\t\tawait PriceAndConfigProvider.getInitializedInstance(\"reg-data-id\", priceServiceMock, \"abc\")\n\t\t\tthrow new Error(\"exception expected\")\n\t\t} catch (e) {\n\t\t\to(e instanceof UserError).equals(true)\n\t\t}\n\t})\n})\n\no.spec(\"PaymentInterval\", function () {\n\to(\"asPaymentInterval correct values\", function () {\n\t\to(asPaymentInterval(1)).equals(PaymentInterval.Monthly)\n\t\to(asPaymentInterval(12)).equals(PaymentInterval.Yearly)\n\t\to(asPaymentInterval(\"1\")).equals(PaymentInterval.Monthly)\n\t\to(asPaymentInterval(\"12\")).equals(PaymentInterval.Yearly)\n\t})\n\n\to(\"asPaymentInterval rejects invalid values\", function () {\n\t\to(() => asPaymentInterval(0)).throws(ProgrammingError)\n\t\to(() => asPaymentInterval(\"0\")).throws(ProgrammingError)\n\t\to(() => asPaymentInterval(\"\")).throws(ProgrammingError)\n\t\to(() => asPaymentInterval(null as any)).throws(ProgrammingError)\n\t\to(() => asPaymentInterval(undefined as any)).throws(ProgrammingError)\n\t})\n})\n\nasync function initPriceAndConfigProvider(): Promise<PriceAndConfigProvider> {\n\tconst serviceExecutor = createUpgradePriceServiceMock()\n\treturn PriceAndConfigProvider.getInitializedInstance(null, serviceExecutor, null)\n}\n","import o from \"@tutao/otest\"\nimport { NewPaidPlans, PlanType } from \"../../../src/common/api/common/TutanotaConstants.js\"\nimport { IServiceExecutor } from \"../../../src/common/api/common/ServiceRequest.js\"\nimport { createUpgradePriceServiceMock, PLAN_PRICES } from \"./priceTestUtils.js\"\nimport { clone } from \"@tutao/tutanota-utils\"\n\nimport { getAvailableMatchingPlans } from \"../../../src/common/subscription/SubscriptionUtils.js\"\n\no.spec(\"SubscriptionUtilsTest\", function () {\n\tlet serviceExecutor: IServiceExecutor\n\to.beforeEach(async function () {\n\t\tserviceExecutor = createUpgradePriceServiceMock(clone(PLAN_PRICES))\n\t})\n\n\to.spec(\"getAvailableMatchingPlans\", function () {\n\t\to(\"no filter returns all plans\", async function () {\n\t\t\to(await getAvailableMatchingPlans(serviceExecutor, () => true)).deepEquals(NewPaidPlans)\n\t\t})\n\t\to(\"filter for whitelabel\", async function () {\n\t\t\to(await getAvailableMatchingPlans(serviceExecutor, (configuration) => configuration.whitelabel)).deepEquals([PlanType.Unlimited])\n\t\t})\n\t})\n})\n","import o from \"@tutao/otest\"\nimport { object } from \"testdouble\"\nimport {\n\tCardType,\n\tgetCardTypeRange,\n\tinferExpirationDate,\n\tSimplifiedCreditCardViewModel,\n} from \"../../../src/common/subscription/SimplifiedCreditCardInputModel.js\"\n\no.spec(\"inferExpirationDate month\", function () {\n\to(\"starting with invalid character returns empty string\", function () {\n\t\to(inferExpirationDate(\"a\")).equals(\"\")\n\t\to(inferExpirationDate(\"a12\")).equals(\"\")\n\t\to(inferExpirationDate(\"/\")).equals(\"\")\n\t\to(inferExpirationDate(\"/23\")).equals(\"\")\n\t\to(inferExpirationDate(\"?\")).equals(\"\")\n\t\to(inferExpirationDate(\"?01/24\")).equals(\"\")\n\t\to(inferExpirationDate(\"\")).equals(\"\")\n\t})\n\n\to(\"starting with definite month returns expanded month\", function () {\n\t\to(inferExpirationDate(\"2\")).equals(\"02 / \")\n\t\to(inferExpirationDate(\"3\")).equals(\"03 / \")\n\t\to(inferExpirationDate(\"4\")).equals(\"04 / \")\n\t\to(inferExpirationDate(\"5\")).equals(\"05 / \")\n\t\to(inferExpirationDate(\"6\")).equals(\"06 / \")\n\t\to(inferExpirationDate(\"7\")).equals(\"07 / \")\n\t\to(inferExpirationDate(\"8\")).equals(\"08 / \")\n\t\to(inferExpirationDate(\"9\")).equals(\"09 / \")\n\t\to(inferExpirationDate(\"2/\")).equals(\"02 / \")\n\t\to(inferExpirationDate(\"3/\")).equals(\"03 / \")\n\t\to(inferExpirationDate(\"4/\")).equals(\"04 / \")\n\t\to(inferExpirationDate(\"5/\")).equals(\"05 / \")\n\t\to(inferExpirationDate(\"6/\")).equals(\"06 / \")\n\t\to(inferExpirationDate(\"7/\")).equals(\"07 / \")\n\t\to(inferExpirationDate(\"8/\")).equals(\"08 / \")\n\t\to(inferExpirationDate(\"9/\")).equals(\"09 / \")\n\t})\n\n\to.spec(\"starting with indefinite month\", function () {\n\t\to(\"starting with 1 returns 1\", function () {\n\t\t\to(inferExpirationDate(\"1\")).equals(\"1\")\n\t\t})\n\n\t\to(\"starting with 0 returns 0\", function () {\n\t\t\to(inferExpirationDate(\"0\")).equals(\"0\")\n\t\t})\n\n\t\to(\"starting with 1/ returns 01/\", function () {\n\t\t\to(inferExpirationDate(\"1/\")).equals(\"01 / \")\n\t\t})\n\n\t\to(\"starting with 10, 11, 12 gives input plus slash, strips invalid suffix\", function () {\n\t\t\to(inferExpirationDate(\"10\")).equals(\"10 / \")\n\t\t\to(inferExpirationDate(\"11\")).equals(\"11 / \")\n\t\t\to(inferExpirationDate(\"12\")).equals(\"12 / \")\n\t\t\to(inferExpirationDate(\"10 /\")).equals(\"10 / \")\n\t\t\to(inferExpirationDate(\"11 /\")).equals(\"11 / \")\n\t\t\to(inferExpirationDate(\"12 /\")).equals(\"12 / \")\n\t\t\to(inferExpirationDate(\"10 / a\")).equals(\"10 / \")\n\t\t\to(inferExpirationDate(\"11/ ?\")).equals(\"11 / \")\n\t\t\to(inferExpirationDate(\"11//\")).equals(\"11 / \")\n\t\t\to(inferExpirationDate(\"12 / 3\")).equals(\"12 / 3\")\n\t\t})\n\n\t\to(\"starting with 13-19 infers january and uses rest of input\", function () {\n\t\t\to(inferExpirationDate(\"13\")).equals(\"01 / 3\")\n\t\t\to(inferExpirationDate(\"14\")).equals(\"01 / 4\")\n\t\t\to(inferExpirationDate(\"15\")).equals(\"01 / 5\")\n\t\t\to(inferExpirationDate(\"16\")).equals(\"01 / 6\")\n\t\t\to(inferExpirationDate(\"17\")).equals(\"01 / 7\")\n\t\t\to(inferExpirationDate(\"18\")).equals(\"01 / 8\")\n\t\t\to(inferExpirationDate(\"19\")).equals(\"01 / 9\")\n\t\t})\n\n\t\to(\"starting with 0x x={0 or non digit} returns 0\", function () {\n\t\t\to(inferExpirationDate(\"0/\")).equals(\"0\")\n\t\t\to(inferExpirationDate(\"00\")).equals(\"0\")\n\t\t\to(inferExpirationDate(\"0W\")).equals(\"0\")\n\t\t\to(inferExpirationDate(\"0//\")).equals(\"0\")\n\t\t\to(inferExpirationDate(\"0 \")).equals(\"0\")\n\t\t\to(inferExpirationDate(\"0 ?\")).equals(\"0\")\n\t\t})\n\n\t\to(\"starting with 01 - 09 returns input, potentially with slash\", function () {\n\t\t\to(inferExpirationDate(\"01\")).equals(\"01 / \")\n\t\t\to(inferExpirationDate(\"02\")).equals(\"02 / \")\n\t\t\to(inferExpirationDate(\"03\")).equals(\"03 / \")\n\t\t\to(inferExpirationDate(\"04\")).equals(\"04 / \")\n\t\t\to(inferExpirationDate(\"05\")).equals(\"05 / \")\n\t\t\to(inferExpirationDate(\"06\")).equals(\"06 / \")\n\t\t\to(inferExpirationDate(\"07\")).equals(\"07 / \")\n\t\t\to(inferExpirationDate(\"08\")).equals(\"08 / \")\n\t\t\to(inferExpirationDate(\"09\")).equals(\"09 / \")\n\t\t\to(inferExpirationDate(\"012\")).equals(\"01 / 2\")\n\t\t\to(inferExpirationDate(\"022\")).equals(\"02 / 2\")\n\t\t\to(inferExpirationDate(\"032\")).equals(\"03 / 2\")\n\t\t\to(inferExpirationDate(\"042\")).equals(\"04 / 2\")\n\t\t\to(inferExpirationDate(\"052\")).equals(\"05 / 2\")\n\t\t\to(inferExpirationDate(\"062\")).equals(\"06 / 2\")\n\t\t\to(inferExpirationDate(\"072\")).equals(\"07 / 2\")\n\t\t\to(inferExpirationDate(\"082\")).equals(\"08 / 2\")\n\t\t\to(inferExpirationDate(\"092\")).equals(\"09 / 2\")\n\t\t})\n\n\t\to(\"adding a slash to a complete month adds that slash with whitespace\", function () {\n\t\t\to(inferExpirationDate(\"01/\")).equals(\"01 / \")\n\t\t\to(inferExpirationDate(\"02/\")).equals(\"02 / \")\n\t\t\to(inferExpirationDate(\"03/\")).equals(\"03 / \")\n\t\t\to(inferExpirationDate(\"04/\")).equals(\"04 / \")\n\t\t\to(inferExpirationDate(\"05/\")).equals(\"05 / \")\n\t\t\to(inferExpirationDate(\"06/\")).equals(\"06 / \")\n\t\t\to(inferExpirationDate(\"07/\")).equals(\"07 / \")\n\t\t\to(inferExpirationDate(\"08/\")).equals(\"08 / \")\n\t\t\to(inferExpirationDate(\"09/\")).equals(\"09 / \")\n\t\t})\n\n\t\to(\"four digit input with valid month gets slash\", function () {\n\t\t\to(inferExpirationDate(\"0123\")).equals(\"01 / 23\")\n\t\t\to(inferExpirationDate(\"0224\")).equals(\"02 / 24\")\n\t\t\to(inferExpirationDate(\"0325\")).equals(\"03 / 25\")\n\t\t\to(inferExpirationDate(\"4205\")).equals(\"04 / 205\")\n\t\t})\n\n\t\to(\"four digit input and slash with valid month returns same\", function () {\n\t\t\to(inferExpirationDate(\"01/23\")).equals(\"01 / 23\")\n\t\t\to(inferExpirationDate(\"02/24\")).equals(\"02 / 24\")\n\t\t\to(inferExpirationDate(\"03/25\")).equals(\"03 / 25\")\n\t\t})\n\n\t\to(\"six digit input with valid month gets slash\", function () {\n\t\t\to(inferExpirationDate(\"012030\")).equals(\"01 / 2030\")\n\t\t\to(inferExpirationDate(\"022045\")).equals(\"02 / 2045\")\n\t\t\to(inferExpirationDate(\"032023\")).equals(\"03 / 2023\")\n\t\t\to(inferExpirationDate(\"122020\")).equals(\"12 / 2020\")\n\t\t})\n\n\t\to(\"six digit input and slash with valid month return same\", function () {\n\t\t\to(inferExpirationDate(\"01/2030\")).equals(\"01 / 2030\")\n\t\t\to(inferExpirationDate(\"02/2045\")).equals(\"02 / 2045\")\n\t\t\to(inferExpirationDate(\"03/2023\")).equals(\"03 / 2023\")\n\t\t\to(inferExpirationDate(\"12/2020\")).equals(\"12 / 2020\")\n\t\t\to(inferExpirationDate(\"12//2020\")).equals(\"12 / 2020\")\n\t\t})\n\n\t\to(\"year contains non digit chars that stops the rest from getting parsed\", function () {\n\t\t\to(inferExpirationDate(\"01/21%30\")).equals(\"01 / 21\")\n\t\t\to(inferExpirationDate(\"02/2!445\")).equals(\"02 / 2\")\n\t\t\to(inferExpirationDate(\"03/202_ 3\")).equals(\"03 / 202\")\n\t\t})\n\n\t\to(\"does not parse the rest if the year has already 4 digits\", function () {\n\t\t\to(inferExpirationDate(\"01 / 2030sd\")).equals(\"01 / 2030\")\n\t\t\to(inferExpirationDate(\"02/20452\")).equals(\"02 / 2045\")\n\t\t\to(inferExpirationDate(\"03/2023__ \")).equals(\"03 / 2023\")\n\t\t})\n\n\t\to(\"pasting valid format ignores any whitespace\", function () {\n\t\t\to(inferExpirationDate(\" \\n\\t1\\t\\n  2 /2\\n02 4\\t\\n\\n\")).equals(\"12 / 2024\")\n\t\t\to(inferExpirationDate(\" \\n\\t0\\t\\n  6 /       2 6\\t\\n\\n\")).equals(\"06 / 26\")\n\t\t})\n\n\t\to(\"using backspace removes first year digit and trailing separator\", function () {\n\t\t\to(inferExpirationDate(\"01 / \", \"01 / 5\")).equals(\"01\")\n\t\t\to(inferExpirationDate(\"1\", \"11\")).equals(\"1\")\n\t\t\to(inferExpirationDate(\"01 / 2\", \"01 / 24\")).equals(\"01 / 2\")\n\t\t})\n\n\t\to(\"typing / backspacing across the slash works as intended\", function () {\n\t\t\to(inferExpirationDate(\"01 / \", \"01 / 2\")).equals(\"01\")\n\t\t\to(inferExpirationDate(\"01\", \"0\")).equals(\"01 / \")\n\t\t\to(inferExpirationDate(\"01 /\", \"01 / 2\")).equals(\"01\")\n\t\t\to(inferExpirationDate(\"01 \", \"01 / 2\")).equals(\"01\")\n\t\t\to(inferExpirationDate(\"01\", \"0\")).equals(\"01 / \")\n\t\t\to(inferExpirationDate(\"03 / \", \"03 / 2\")).equals(\"03\")\n\t\t})\n\t})\n})\n\no.spec(\"inferExpirationDate integration\", function () {\n\to(\"all dates we may care about at the moment can be typed in four-digit-year format, with leading zero on month\", function () {\n\t\tconst currentYear = new Date().getFullYear()\n\t\tlet currentMonth = new Date().getMonth() + 1\n\n\t\tfor (let y = currentYear; y < currentYear + 15; y = y + 1) {\n\t\t\tfor (currentMonth; currentMonth < 13; currentMonth = currentMonth + 1) {\n\t\t\t\tconst correctDateAsTyped = `${currentMonth.toString().padStart(2, \"0\")}/${currentYear}`\n\t\t\t\tconst correctDateAsShown = correctDateAsTyped.replace(\"/\", \" / \")\n\t\t\t\tlet lastVal = \"\"\n\t\t\t\tfor (const c of correctDateAsTyped) {\n\t\t\t\t\tlastVal = inferExpirationDate(lastVal + c, lastVal)\n\t\t\t\t}\n\t\t\t\to(lastVal).equals(correctDateAsShown)\n\t\t\t}\n\t\t\tcurrentMonth = 1\n\t\t}\n\t})\n\n\to(\"all dates we may care about at the moment can be typed in two-digit-year format, without leading zero on month\", function () {\n\t\tconst currentYear = new Date().getFullYear()\n\t\tlet currentMonth = new Date().getMonth() + 1\n\n\t\tfor (let y = currentYear; y < currentYear + 15; y = y + 1) {\n\t\t\tfor (currentMonth; currentMonth < 13; currentMonth = currentMonth + 1) {\n\t\t\t\tconst correctDateAsTyped = `${currentMonth}/${currentYear.toString().slice(2)}`\n\t\t\t\t// 9/2022 -> 09 / 2022\n\t\t\t\tconst correctDateAsShown = correctDateAsTyped.padStart(5, \"0\").replace(\"/\", \" / \")\n\t\t\t\tlet lastVal = \"\"\n\t\t\t\tfor (const c of correctDateAsTyped) {\n\t\t\t\t\tlastVal = inferExpirationDate(lastVal + c, lastVal)\n\t\t\t\t}\n\t\t\t\to(lastVal).equals(correctDateAsShown)\n\t\t\t}\n\t\t\tcurrentMonth = 1\n\t\t}\n\t})\n})\n\no.spec(\"detectCreditCardIssuer\", function () {\n\to(\"amex\", function () {\n\t\to(getCardTypeRange(\"34\")).equals(CardType.Amex)\n\t\to(getCardTypeRange(\"37\")).equals(CardType.Amex)\n\t\to(getCardTypeRange(\"340\")).equals(CardType.Amex)\n\t\to(getCardTypeRange(\"371\")).equals(CardType.Amex)\n\t\to(getCardTypeRange(\"35\")).notEquals(CardType.Amex)\n\t\to(getCardTypeRange(\"374283089890073\")).equals(CardType.Amex)\n\t\to(getCardTypeRange(\"347562087582806\")).equals(CardType.Amex)\n\t\to(getCardTypeRange(\"377118013765255\")).equals(CardType.Amex)\n\t\to(getCardTypeRange(\"377188176009494\")).equals(CardType.Amex)\n\t})\n\to(\"visa\", function () {\n\t\to(getCardTypeRange(\"4\")).equals(CardType.Visa)\n\t\to(getCardTypeRange(\"40\")).equals(CardType.Visa)\n\t\to(getCardTypeRange(\"48\")).equals(CardType.Visa)\n\t\to(getCardTypeRange(\"04\")).notEquals(CardType.Visa)\n\t\to(getCardTypeRange(\"4219430910018892\")).equals(CardType.Visa)\n\t\to(getCardTypeRange(\"4020964956067842\")).equals(CardType.Visa)\n\t\to(getCardTypeRange(\"4522131094541\")).equals(CardType.Visa)\n\t\to(getCardTypeRange(\"4398342951138\")).equals(CardType.Visa)\n\t\to(getCardTypeRange(\"4111621867312903\")).equals(CardType.Visa)\n\t})\n\to(\"mastercard\", function () {\n\t\to(getCardTypeRange(\"51\")).equals(CardType.Mastercard)\n\t\to(getCardTypeRange(\"55\")).equals(CardType.Mastercard)\n\t\to(getCardTypeRange(\"52\")).equals(CardType.Mastercard)\n\t\to(getCardTypeRange(\"50\")).notEquals(CardType.Mastercard)\n\t\to(getCardTypeRange(\"2221\")).equals(CardType.Mastercard)\n\t\to(getCardTypeRange(\"2720\")).equals(CardType.Mastercard)\n\t\to(getCardTypeRange(\"2504\")).equals(CardType.Mastercard)\n\t\to(getCardTypeRange(\"23\")).equals(CardType.Mastercard)\n\t\to(getCardTypeRange(\"2220\")).notEquals(CardType.Mastercard)\n\t\to(getCardTypeRange(\"5392341340810814\")).equals(CardType.Mastercard)\n\t\to(getCardTypeRange(\"5571772194621274\")).equals(CardType.Mastercard)\n\t\to(getCardTypeRange(\"5155544629392217\")).equals(CardType.Mastercard)\n\t\to(getCardTypeRange(\"5464942746631846\")).equals(CardType.Mastercard)\n\t\to(getCardTypeRange(\"5183606138506219\")).equals(CardType.Mastercard)\n\t})\n\to(\"maestro\", function () {\n\t\to(getCardTypeRange(\"6759\")).equals(CardType.Maestro)\n\t\to(getCardTypeRange(\"676770\")).equals(CardType.Maestro)\n\t\to(getCardTypeRange(\"67677\")).notEquals(CardType.Maestro)\n\t\to(getCardTypeRange(\"5\")).notEquals(CardType.Maestro)\n\t\to(getCardTypeRange(\"5018\")).equals(CardType.Maestro)\n\t\to(getCardTypeRange(\"6762\")).equals(CardType.Maestro)\n\t\to(getCardTypeRange(\"67631\")).equals(CardType.Maestro)\n\t\to(getCardTypeRange(\"67630\")).equals(CardType.Maestro)\n\t\to(getCardTypeRange(\"67644\")).notEquals(CardType.Maestro)\n\t\to(getCardTypeRange(\"676\")).notEquals(CardType.Maestro)\n\t\to(getCardTypeRange(\"503896955559\")).equals(CardType.Maestro)\n\t\to(getCardTypeRange(\"6763964146952\")).equals(CardType.Maestro)\n\t\to(getCardTypeRange(\"63049263291396\")).equals(CardType.Maestro)\n\t\to(getCardTypeRange(\"675990328450529\")).equals(CardType.Maestro)\n\t\to(getCardTypeRange(\"6761384679616833\")).equals(CardType.Maestro)\n\t\to(getCardTypeRange(\"50185787002582074\")).equals(CardType.Maestro)\n\t\to(getCardTypeRange(\"630468508293435054\")).equals(CardType.Maestro)\n\t\to(getCardTypeRange(\"6759033525570348799\")).equals(CardType.Maestro)\n\t})\n\to(\"discover\", function () {\n\t\to(getCardTypeRange(\"6011\")).equals(CardType.Discover)\n\t\to(getCardTypeRange(\"645\")).equals(CardType.Discover)\n\t\to(getCardTypeRange(\"66\")).notEquals(CardType.Discover)\n\t\to(getCardTypeRange(\"64\")).notEquals(CardType.Discover)\n\t\to(getCardTypeRange(\"65\")).equals(CardType.Discover)\n\t\to(getCardTypeRange(\"622126\")).equals(CardType.Discover)\n\t\to(getCardTypeRange(\"6228\")).equals(CardType.Discover)\n\t\to(getCardTypeRange(\"6221299974430470\")).equals(CardType.Discover)\n\t\to(getCardTypeRange(\"6497238438147624\")).equals(CardType.Discover)\n\t\to(getCardTypeRange(\"6457995163050848\")).equals(CardType.Discover)\n\t\to(getCardTypeRange(\"6225765854038001\")).equals(CardType.Discover)\n\t})\n\to(\"other\", function () {\n\t\to(getCardTypeRange(\"\")).equals(CardType.Other)\n\t\to(getCardTypeRange(\" \")).equals(CardType.Other)\n\t\to(getCardTypeRange(\"0\")).equals(CardType.Other)\n\t\to(getCardTypeRange(\"00\")).equals(CardType.Other)\n\t\to(getCardTypeRange(\"02\")).equals(CardType.Other)\n\t})\n})\n\no.spec(\"inferCreditCardNumber\", function () {\n\to(\"non-digits are stripped and the remaining input is reduced to at most 20 digits\", function () {\n\t\tconst model = new SimplifiedCreditCardViewModel(object())\n\t\tmodel.creditCardNumber = \"aath5ö5\\nü5s🤣 \"\n\t\to(model.creditCardNumber).equals(\"555\")\n\t\tmodel.creditCardNumber = \"\"\n\t\tmodel.creditCardNumber = \"555\"\n\t\to(model.creditCardNumber).equals(\"555\")\n\t\tmodel.creditCardNumber = \"\"\n\t\tmodel.creditCardNumber = \"111122223333444412346666\"\n\t\to(model.creditCardNumber).equals(\"1111 2222 3333 4444 1234\")\n\t\tmodel.creditCardNumber = \"\"\n\t\tmodel.creditCardNumber = \"341111111111111\"\n\t\to(model.creditCardNumber).equals(\"3411 111111 11111\") // Amex\n\t\tmodel.creditCardNumber = \"1234-2222-3333-4444-5555\"\n\t\to(model.creditCardNumber).equals(\"1234 2222 3333 4444 5555\")\n\t\tmodel.creditCardNumber = \"\"\n\t\tmodel.creditCardNumber = \"1234/5678/3333/44\"\n\t\to(model.creditCardNumber).equals(\"1234 5678 3333 44\")\n\t\tmodel.creditCardNumber = \"\"\n\t\tmodel.creditCardNumber = \"\\t1111 22223333aoeu[{---+/+++ tsnh 4444555566667777\"\n\t\to(model.creditCardNumber).equals(\"1111 2222 3333 4444 5555\")\n\t})\n\n\to(\"non-digits are ignored\", function () {\n\t\tconst model = new SimplifiedCreditCardViewModel(object())\n\t\tmodel.creditCardNumber = \"1234-\"\n\t\to(model.creditCardNumber).equals(\"1234\")\n\t\tmodel.creditCardNumber = \"\"\n\t\tmodel.creditCardNumber = \"12345 \"\n\t\to(model.creditCardNumber).equals(\"1234 5\")\n\t})\n\n\to(\"backspace is handled correctly\", function () {\n\t\tconst model = new SimplifiedCreditCardViewModel(object())\n\t\tmodel.creditCardNumber = \"1234 5\"\n\t\tmodel.creditCardNumber = \"1234 \"\n\t\to(model.creditCardNumber).equals(\"1234\")\n\t\tmodel.creditCardNumber = \"\"\n\t\tmodel.creditCardNumber = \"1234 5678\"\n\t\tmodel.creditCardNumber = \"1234 567\"\n\t\to(model.creditCardNumber).equals(\"1234 567\")\n\t})\n})\n\no.spec(\"inferCreditCardNumber integration\", function () {\n\to(\"it's possible to type a credit card number\", function () {\n\t\tconst model = new SimplifiedCreditCardViewModel(object())\n\t\tconst numberAsTyped = \"1234567890123456\"\n\t\tconst numberAsShown = \"1234 5678 9012 3456\"\n\t\tmodel.creditCardNumber = \"\"\n\t\tfor (const c of numberAsTyped) {\n\t\t\tmodel.creditCardNumber = model.creditCardNumber + c\n\t\t}\n\t\to(model.creditCardNumber).equals(numberAsShown)\n\t})\n\n\to(\"it's possible to type an amex credit card number\", function () {\n\t\tconst model = new SimplifiedCreditCardViewModel(object())\n\t\tconst numberAsTyped = \"345678901234567\"\n\t\tconst numberAsShown = \"3456 789012 34567\"\n\t\tmodel.creditCardNumber = \"\"\n\t\tfor (const c of numberAsTyped) {\n\t\t\tmodel.creditCardNumber = model.creditCardNumber + c\n\t\t}\n\t\to(model.creditCardNumber).equals(numberAsShown)\n\t})\n\n\to(\"it's possible to type an overlong credit card number\", function () {\n\t\tconst model = new SimplifiedCreditCardViewModel(object())\n\t\tconst numberAsTyped = \"345678901234567890890\"\n\t\tconst numberAsShown = \"3456 789012 34567 89089\"\n\t\tmodel.creditCardNumber = \"\"\n\t\tfor (const c of numberAsTyped) {\n\t\t\tmodel.creditCardNumber = model.creditCardNumber + c\n\t\t}\n\t\to(model.creditCardNumber).equals(numberAsShown)\n\t})\n})\n","import o from \"@tutao/otest\"\nimport type { EmailTemplate } from \"../../../src/common/api/entities/tutanota/TypeRefs.js\"\nimport {\n\tcreateEmailTemplate,\n\tcreateEmailTemplateContent,\n\tEmailTemplateContentTypeRef,\n\tEmailTemplateTypeRef,\n} from \"../../../src/common/api/entities/tutanota/TypeRefs.js\"\nimport { searchInTemplates } from \"../../../src/mail-app/templates/model/TemplatePopupModel.js\"\nimport { createTestEntity } from \"../TestUtils.js\"\n\no.spec(\"TemplateSearchFilter\", function () {\n\tconst abcTemplate = createTestEntity(EmailTemplateTypeRef, {\n\t\ttag: \"aBc_tag\",\n\t\ttitle: \"aBc_title\",\n\t\tcontents: [\n\t\t\tcreateTestEntity(EmailTemplateContentTypeRef, {\n\t\t\t\tlanguageCode: \"en\",\n\t\t\t\ttext: \"aBc english\",\n\t\t\t}),\n\t\t\tcreateTestEntity(EmailTemplateContentTypeRef, {\n\t\t\t\tlanguageCode: \"de\",\n\t\t\t\ttext: \"aBc deutsch\",\n\t\t\t}),\n\t\t],\n\t})\n\tconst defTemplate = createTestEntity(EmailTemplateTypeRef, {\n\t\ttag: \"dEf_tag\",\n\t\ttitle: \"dEf_title\",\n\t\tcontents: [\n\t\t\tcreateTestEntity(EmailTemplateContentTypeRef, {\n\t\t\t\tlanguageCode: \"en\",\n\t\t\t\ttext: \"dEf english\",\n\t\t\t}),\n\t\t\tcreateTestEntity(EmailTemplateContentTypeRef, {\n\t\t\t\tlanguageCode: \"de\",\n\t\t\t\ttext: \"dEf deutsch\",\n\t\t\t}),\n\t\t],\n\t})\n\tconst abcdefTemplate = createTestEntity(EmailTemplateTypeRef, {\n\t\ttag: \"abcdef_tag\",\n\t\ttitle: \"abcdef_title\",\n\t\tcontents: [\n\t\t\tcreateTestEntity(EmailTemplateContentTypeRef, {\n\t\t\t\tlanguageCode: \"en\",\n\t\t\t\ttext: \"abcdef english\",\n\t\t\t}),\n\t\t\tcreateTestEntity(EmailTemplateContentTypeRef, {\n\t\t\t\tlanguageCode: \"de\",\n\t\t\t\ttext: \"abcdef deutsch\",\n\t\t\t}),\n\t\t],\n\t})\n\tconst emailTemplates: Array<EmailTemplate> = [abcTemplate, defTemplate, abcdefTemplate]\n\to(\"find nothing \", function () {\n\t\to(searchInTemplates(\"xyz\", emailTemplates)).deepEquals([])\n\t\to(searchInTemplates(\"123 xyz\", emailTemplates)).deepEquals([])\n\t})\n\to(\"no words\", function () {\n\t\to(searchInTemplates(\"\", emailTemplates)).deepEquals(emailTemplates)\n\t\to(searchInTemplates(\"\", emailTemplates)).deepEquals(emailTemplates)\n\t})\n\to(\"finds in tag\", function () {\n\t\to(searchInTemplates(\"tag\", emailTemplates)).deepEquals(emailTemplates)\n\t\to(searchInTemplates(\"AbC_Tag\", emailTemplates)).deepEquals([abcTemplate])\n\t\to(searchInTemplates(\"def_tag\", emailTemplates)).deepEquals([defTemplate, abcdefTemplate])\n\t\to(searchInTemplates(\"cdef_tag\", emailTemplates)).deepEquals([abcdefTemplate])\n\t\to(searchInTemplates(\"cdef_tag \", emailTemplates)).deepEquals([abcdefTemplate])\n\t})\n\to(\"tag search\", function () {\n\t\to(searchInTemplates(\"#abc_tag\", emailTemplates)).deepEquals([abcTemplate])\n\t\to(searchInTemplates(\"#abc 123\", emailTemplates)).deepEquals([abcTemplate, abcdefTemplate])\n\t\to(searchInTemplates(\"#abc_title\", emailTemplates)).deepEquals([]) // do not search in title\n\n\t\to(searchInTemplates(\"#abc\", emailTemplates)).deepEquals([abcTemplate, abcdefTemplate])\n\t\to(searchInTemplates(\"#def_\", emailTemplates)).deepEquals([defTemplate, abcdefTemplate])\n\t\t// explicit tag search uses contains as well\n\t\to(searchInTemplates(\"#tag\", emailTemplates)).deepEquals(emailTemplates)\n\t\to(searchInTemplates(\"#def\", emailTemplates)).deepEquals([defTemplate, abcdefTemplate])\n\t\to(searchInTemplates(\"#_\", emailTemplates)).deepEquals(emailTemplates)\n\t})\n\to(\"finds in title\", function () {\n\t\to(searchInTemplates(\"title\", emailTemplates)).deepEquals(emailTemplates)\n\t\to(searchInTemplates(\"abc_title\", emailTemplates)).deepEquals([abcTemplate])\n\t\to(searchInTemplates(\"def_title\", emailTemplates)).deepEquals([defTemplate, abcdefTemplate])\n\t\to(searchInTemplates(\"abcdef_title\", emailTemplates)).deepEquals([abcdefTemplate])\n\t})\n\to(\"finds in content\", function () {\n\t\to(searchInTemplates(\"english\", emailTemplates)).deepEquals(emailTemplates)\n\t\to(searchInTemplates(\"deutsch\", emailTemplates)).deepEquals(emailTemplates)\n\t})\n\to(\"multiple words - one word must match but result order is changed\", function () {\n\t\to(searchInTemplates(\"abcdef title\", emailTemplates)).deepEquals([abcdefTemplate, abcTemplate, defTemplate])\n\t\to(searchInTemplates(\"#abc tag\", emailTemplates)).deepEquals([abcTemplate, abcdefTemplate, defTemplate])\n\t})\n})\n","import o from \"@tutao/otest\"\nimport { knowledgeBaseSearch } from \"../../../src/mail-app/knowledgebase/model/KnowledgeBaseSearchFilter.js\"\nimport type { KnowledgeBaseEntry } from \"../../../src/common/api/entities/tutanota/TypeRefs.js\"\nimport { KnowledgeBaseEntryKeywordTypeRef, KnowledgeBaseEntryTypeRef } from \"../../../src/common/api/entities/tutanota/TypeRefs.js\"\nimport { createTestEntity } from \"../TestUtils.js\"\n\no.spec(\"KnowledgeBaseSearchFilter\", function () {\n\to(\"finds in title with two filtered keywords\", function () {\n\t\tconst knowledgebaseEntry1: KnowledgeBaseEntry = createTestEntity(KnowledgeBaseEntryTypeRef, {\n\t\t\ttitle: \"User forgot their password\",\n\t\t\tdescription:\n\t\t\t\t\"When a user is certain that they do not remember their password anymore, \" +\n\t\t\t\t\"first, ask the user if they tried all passwords that come to mind\" +\n\t\t\t\t\"if the user completed step 1, ask if they can provide proof that they own the account\",\n\t\t\tkeywords: [\n\t\t\t\tcreateTestEntity(KnowledgeBaseEntryKeywordTypeRef, {\n\t\t\t\t\tkeyword: \"password\",\n\t\t\t\t}),\n\t\t\t\tcreateTestEntity(KnowledgeBaseEntryKeywordTypeRef, {\n\t\t\t\t\tkeyword: \"forgotten\",\n\t\t\t\t}),\n\t\t\t\tcreateTestEntity(KnowledgeBaseEntryKeywordTypeRef, {\n\t\t\t\t\tkeyword: \"reset\",\n\t\t\t\t}),\n\t\t\t\tcreateTestEntity(KnowledgeBaseEntryKeywordTypeRef, {\n\t\t\t\t\tkeyword: \"account\",\n\t\t\t\t}),\n\t\t\t\tcreateTestEntity(KnowledgeBaseEntryKeywordTypeRef, {\n\t\t\t\t\tkeyword: \"access\",\n\t\t\t\t}),\n\t\t\t],\n\t\t})\n\t\tconst knowledgebaseEntry2: KnowledgeBaseEntry = createTestEntity(KnowledgeBaseEntryTypeRef, {\n\t\t\ttitle: \"User cannot access account anymore\",\n\t\t\tdescription: \"A general entry for when the user cannot access their account\",\n\t\t\tkeywords: [\n\t\t\t\tcreateTestEntity(KnowledgeBaseEntryKeywordTypeRef, {\n\t\t\t\t\tkeyword: \"access\",\n\t\t\t\t}),\n\t\t\t\tcreateTestEntity(KnowledgeBaseEntryKeywordTypeRef, {\n\t\t\t\t\tkeyword: \"account\",\n\t\t\t\t}),\n\t\t\t\tcreateTestEntity(KnowledgeBaseEntryKeywordTypeRef, {\n\t\t\t\t\tkeyword: \"lost\",\n\t\t\t\t}),\n\t\t\t],\n\t\t})\n\t\tconst allFakeEntries = [knowledgebaseEntry1, knowledgebaseEntry2]\n\t\to(knowledgeBaseSearch(\"password\", allFakeEntries)).deepEquals([knowledgebaseEntry1]) // should find knowledgebaseEntry1\n\t})\n\to(\"finds in title without filtered keywords\", function () {\n\t\tconst knowledgebaseEntry1: KnowledgeBaseEntry = createTestEntity(KnowledgeBaseEntryTypeRef, {\n\t\t\ttitle: \"User forgot their password\",\n\t\t\tdescription:\n\t\t\t\t\"When a user is certain that they do not remember their password anymore\" +\n\t\t\t\t\"first, ask the user if they tried all passwords that come to mind\" +\n\t\t\t\t\"if the user completed step 1, ask if they can provide proof that they own the account\",\n\t\t\tkeywords: [\n\t\t\t\tcreateTestEntity(KnowledgeBaseEntryKeywordTypeRef, {\n\t\t\t\t\tkeyword: \"password\",\n\t\t\t\t}),\n\t\t\t\tcreateTestEntity(KnowledgeBaseEntryKeywordTypeRef, {\n\t\t\t\t\tkeyword: \"forgotten\",\n\t\t\t\t}),\n\t\t\t\tcreateTestEntity(KnowledgeBaseEntryKeywordTypeRef, {\n\t\t\t\t\tkeyword: \"reset\",\n\t\t\t\t}),\n\t\t\t\tcreateTestEntity(KnowledgeBaseEntryKeywordTypeRef, {\n\t\t\t\t\tkeyword: \"account\",\n\t\t\t\t}),\n\t\t\t\tcreateTestEntity(KnowledgeBaseEntryKeywordTypeRef, {\n\t\t\t\t\tkeyword: \"access\",\n\t\t\t\t}),\n\t\t\t],\n\t\t})\n\t\tconst knowledgebaseEntry2: KnowledgeBaseEntry = createTestEntity(KnowledgeBaseEntryTypeRef, {\n\t\t\ttitle: \"User cannot access account anymore\",\n\t\t\tdescription:\n\t\t\t\t\"A general entry for when the user cannot access their account\" +\n\t\t\t\t\"ask user whether its because of the password or other factors as to why they cannot access their account\",\n\t\t\tkeywords: [\n\t\t\t\tcreateTestEntity(KnowledgeBaseEntryKeywordTypeRef, {\n\t\t\t\t\tkeyword: \"access\",\n\t\t\t\t}),\n\t\t\t\tcreateTestEntity(KnowledgeBaseEntryKeywordTypeRef, {\n\t\t\t\t\tkeyword: \"account\",\n\t\t\t\t}),\n\t\t\t\tcreateTestEntity(KnowledgeBaseEntryKeywordTypeRef, {\n\t\t\t\t\tkeyword: \"lost\",\n\t\t\t\t}),\n\t\t\t],\n\t\t})\n\t\tconst allFakeEntries = [knowledgebaseEntry1, knowledgebaseEntry2]\n\t\to(knowledgeBaseSearch(\"user\", allFakeEntries)).deepEquals([knowledgebaseEntry1, knowledgebaseEntry2]) // should find in both entries\n\t})\n\to(\"more than one filter word\", function () {\n\t\tconst knowledgebaseEntry1: KnowledgeBaseEntry = createTestEntity(KnowledgeBaseEntryTypeRef, {\n\t\t\ttitle: \"Payment has been booked but features arent accessible\",\n\t\t\tdescription:\n\t\t\t\t\"Something went wrong and the payment registered, but the user believes their features arent accessible yet\" +\n\t\t\t\t\"first, check how long the time between payment and contact has been\" +\n\t\t\t\t\"if it has been more than X days, ask the user to provide a bill or payment proof\",\n\t\t\tkeywords: [\n\t\t\t\tcreateTestEntity(KnowledgeBaseEntryKeywordTypeRef, {\n\t\t\t\t\tkeyword: \"payment\",\n\t\t\t\t}),\n\t\t\t\tcreateTestEntity(KnowledgeBaseEntryKeywordTypeRef, {\n\t\t\t\t\tkeyword: \"features\",\n\t\t\t\t}),\n\t\t\t\tcreateTestEntity(KnowledgeBaseEntryKeywordTypeRef, {\n\t\t\t\t\tkeyword: \"inaccessible\",\n\t\t\t\t}),\n\t\t\t],\n\t\t})\n\t\tconst knowledgebaseEntry2: KnowledgeBaseEntry = createTestEntity(KnowledgeBaseEntryTypeRef, {\n\t\t\ttitle: \"Payment hasn't been booked yet, features aren't accessible either\",\n\t\t\tdescription:\n\t\t\t\t\"Something went wrong and the payment never registered\" +\n\t\t\t\t\"ask user if they can provide a bill or payment proof\" +\n\t\t\t\t\"if provided, re-do the booking and enable the features for the user\",\n\t\t\tkeywords: [\n\t\t\t\tcreateTestEntity(KnowledgeBaseEntryKeywordTypeRef, {\n\t\t\t\t\tkeyword: \"payment\",\n\t\t\t\t}),\n\t\t\t\tcreateTestEntity(KnowledgeBaseEntryKeywordTypeRef, {\n\t\t\t\t\tkeyword: \"unregistered\",\n\t\t\t\t}),\n\t\t\t\tcreateTestEntity(KnowledgeBaseEntryKeywordTypeRef, {\n\t\t\t\t\tkeyword: \"inaccessible\",\n\t\t\t\t}),\n\t\t\t\tcreateTestEntity(KnowledgeBaseEntryKeywordTypeRef, {\n\t\t\t\t\tkeyword: \"features\",\n\t\t\t\t}),\n\t\t\t],\n\t\t})\n\t\tconst knowledgebaseEntry3: KnowledgeBaseEntry = createTestEntity(KnowledgeBaseEntryTypeRef, {\n\t\t\ttitle: \"Features don't work as intended, or are buggy\",\n\t\t\tdescription:\n\t\t\t\t\"The user has reported features that do not work as intended and hinder the users' experience\" +\n\t\t\t\t\"if needed, ask user if they can elaborate on their issue\" +\n\t\t\t\t\"if the problem is known, explain that the team is working on a fix, or explain a temporary fix\" +\n\t\t\t\t\"if its a new problem, tell the user that it has been reported to the team and will be taken care of\",\n\t\t\tkeywords: [\n\t\t\t\tcreateTestEntity(KnowledgeBaseEntryKeywordTypeRef, {\n\t\t\t\t\tkeyword: \"functionality\",\n\t\t\t\t}),\n\t\t\t\tcreateTestEntity(KnowledgeBaseEntryKeywordTypeRef, {\n\t\t\t\t\tkeyword: \"not\",\n\t\t\t\t}),\n\t\t\t\tcreateTestEntity(KnowledgeBaseEntryKeywordTypeRef, {\n\t\t\t\t\tkeyword: \"working\",\n\t\t\t\t}),\n\t\t\t\tcreateTestEntity(KnowledgeBaseEntryKeywordTypeRef, {\n\t\t\t\t\tkeyword: \"bug\",\n\t\t\t\t}),\n\t\t\t],\n\t\t})\n\t\tconst fakeEntries = [knowledgebaseEntry1, knowledgebaseEntry2, knowledgebaseEntry3]\n\t\to(knowledgeBaseSearch(\"payment functionality\", fakeEntries)).deepEquals([knowledgebaseEntry1, knowledgebaseEntry2, knowledgebaseEntry3]) // should find all entries\n\t})\n})\n","import o from \"@tutao/otest\"\nimport { func, matchers, object, when } from \"testdouble\"\nimport { createMailExportTokenServicePostOut } from \"../../../../../src/common/api/entities/tutanota/TypeRefs\"\nimport { MailExportTokenService } from \"../../../../../src/common/api/entities/tutanota/Services\"\nimport { AccessExpiredError, TooManyRequestsError } from \"../../../../../src/common/api/common/error/RestError\"\nimport { MailExportTokenFacade } from \"../../../../../src/common/api/worker/facades/lazy/MailExportTokenFacade.js\"\nimport { ServiceExecutor } from \"../../../../../src/common/api/worker/rest/ServiceExecutor.js\"\n\no.spec(\"MailExportTokenFacade\", () => {\n\tlet facade!: MailExportTokenFacade\n\tlet serviceExecutor!: ServiceExecutor\n\n\to.beforeEach(() => {\n\t\tserviceExecutor = object()\n\t\tfacade = new MailExportTokenFacade(serviceExecutor)\n\t})\n\n\to.spec(\"loading\", () => {\n\t\tconst validToken = \"my token\"\n\t\tconst expiredToken = \"my expired token\"\n\n\t\to.test(\"when there's no token, a new one is requested\", async () => {\n\t\t\tconst expected = \"result\"\n\t\t\tconst cb = func<(token: string) => Promise<string>>()\n\t\t\twhen(cb(validToken)).thenResolve(expected)\n\t\t\twhen(serviceExecutor.post(MailExportTokenService, null, matchers.anything())).thenResolve(\n\t\t\t\tcreateMailExportTokenServicePostOut({ mailExportToken: validToken }),\n\t\t\t)\n\n\t\t\tconst result = await facade.loadWithToken(cb)\n\n\t\t\to(result).equals(expected)\n\t\t})\n\n\t\to.test(\"when there is a valid token it is used\", async () => {\n\t\t\tconst expected = \"result\"\n\t\t\tconst cb = func<(token: string) => Promise<string>>()\n\t\t\twhen(cb(validToken)).thenResolve(expected)\n\t\t\tfacade._setCurrentExportToken(validToken)\n\n\t\t\tconst result = await facade.loadWithToken(cb)\n\n\t\t\to(result).equals(expected)\n\t\t})\n\n\t\to.test(\"when token is expired a new one is requested and used\", async () => {\n\t\t\tconst expected = \"result\"\n\t\t\tconst cb = func<(token: string) => Promise<string>>()\n\t\t\twhen(cb(validToken)).thenResolve(expected)\n\t\t\twhen(cb(expiredToken)).thenReject(new AccessExpiredError(\"token expired\"))\n\t\t\tfacade._setCurrentExportToken(expiredToken)\n\t\t\twhen(serviceExecutor.post(MailExportTokenService, null, matchers.anything())).thenResolve(\n\t\t\t\tcreateMailExportTokenServicePostOut({ mailExportToken: validToken }),\n\t\t\t)\n\n\t\t\tconst result = await facade.loadWithToken(cb)\n\n\t\t\to(result).equals(expected)\n\t\t})\n\n\t\to.test(\"when requesting token fails none are stored\", async () => {\n\t\t\tconst cb = func<(token: string) => Promise<string>>()\n\t\t\twhen(cb(expiredToken)).thenReject(new AccessExpiredError(\"token expired\"))\n\t\t\twhen(serviceExecutor.post(MailExportTokenService, null, matchers.anything())).thenReject(new TooManyRequestsError(\"no more tokens :(\"))\n\n\t\t\tawait o(() => facade.loadWithToken(cb)).asyncThrows(TooManyRequestsError)\n\n\t\t\to(facade._getCurrentExportToken()).equals(null)\n\t\t})\n\t})\n})\n","import o from \"@tutao/otest\"\nimport { base64ToUint8Array, stringToUtf8Uint8Array } from \"@tutao/tutanota-utils\"\nimport { createDataFile } from \"../../../../src/common/api/common/DataFile.js\"\nimport { MailBundle } from \"../../../../src/common/mailFunctionality/SharedMailUtils.js\"\nimport { _formatSmtpDateTime, mailToEml } from \"../../../../src/mail-app/mail/export/emlUtils.js\"\n\no.spec(\"Exporter\", function () {\n\to.spec(\"mail to eml\", function () {\n\t\to(\"most minimal eml\", function () {\n\t\t\tconst now = Date.now()\n\t\t\tconst mostMinimalBundle: MailBundle = {\n\t\t\t\tmailId: [\"\", \"\"],\n\t\t\t\tsubject: \"\",\n\t\t\t\tbody: \"\",\n\t\t\t\tsender: { address: \"complaints@johnbotr.is\" },\n\t\t\t\tto: [],\n\t\t\t\tcc: [],\n\t\t\t\tbcc: [],\n\t\t\t\treplyTo: [],\n\t\t\t\tisDraft: false,\n\t\t\t\tisRead: true,\n\t\t\t\tsentOn: now,\n\t\t\t\treceivedOn: now,\n\t\t\t\theaders: null,\n\t\t\t\tattachments: [],\n\t\t\t}\n\n\t\t\tconst actual = mailToEml(mostMinimalBundle)\n\t\t\tconst expected = `From: complaints@johnbotr.is\\r\\n\\\nMIME-Version: 1.0\\r\\n\\\nSubject: \\r\\n\\\nDate: ${_formatSmtpDateTime(new Date(now))}\\r\\n\\\nContent-Type: multipart/related; boundary=\"------------79Bu5A16qPEYcVIZL@tutanota\"\\r\\n\\\n\\r\\n\\\n--------------79Bu5A16qPEYcVIZL@tutanota\\r\\n\\\nContent-Type: text/html; charset=UTF-8\\r\\n\\\nContent-transfer-encoding: base64\\r\\n\\\n\\r\\n\\\n\\r\\n\\\n--------------79Bu5A16qPEYcVIZL@tutanota--`\n\n\t\t\tconst actualLines = actual.split(\"\\r\\n\")\n\t\t\tconst expectedLines = expected.split(\"\\r\\n\")\n\t\t\to(actualLines.length).equals(expectedLines.length)\n\t\t\tfor (let i = 0; i < Math.min(expectedLines.length, actualLines.length); ++i) {\n\t\t\t\to(actualLines[i]).equals(expectedLines[i])(`Line: ${i}`)\n\t\t\t}\n\t\t})\n\n\t\to(\"non minimal eml with no headers\", function () {\n\t\t\tconst now = Date.now()\n\t\t\tconst subject = \"Hey, I know that guy, he’s a nihilist.\"\n\t\t\tconst body = `I’m the Dude, so that’s what you call me. That or, uh, His Dudeness, or uh, Duder, or El Duderino, if you’re not into the whole brevity thing. <img src=\"cid:cid123\" />`\n\t\t\tconst attachment1 = createDataFile(\"file1.txt\", \"text/plain\", stringToUtf8Uint8Array(\"this is a text file\"))\n\t\t\tconst attachment2 = createDataFile(\n\t\t\t\t\"icon10x10.png\",\n\t\t\t\t\"image/png\",\n\t\t\t\tbase64ToUint8Array(\n\t\t\t\t\t\"iVBORw0KGgoAAAANSUhEUgAAAAoAAAAKCAMAAAC67D+PAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAgVBMVEWgHiCgHh+gHiEAAACfHyGgHiCgHiCgHiCgHiCgHiCgHiCgHiCgHiCgHiCgHiCgHiCgHiCgHiCgHiCgHiCgHiCgHiCgHiCgHiCgHiCgHiCgHiCgHiCgHiCgHiCgHiCgHiCgHiCgHiCgHiCgHiCgHiCgHiCgHiCgHiCgHiCgHiD////HdIxaAAAAKXRSTlMAAAAAAImrqvvx5OX+oGaj1/r1w1MjV7P5lwEPjO+dIRb83pU8BnMqAyX2q3sAAAABYktHRCpTvtSeAAAACXBIWXMAAAcDAAAHAwGHNB/CAAAAB3RJTUUH5AkBDTcdD3SpngAAAE5JREFUCNc9ykUSgDAABMGFCIHg7q7//yCVhGJOfRgw7ug4g3i+BJ4/RdeT0jcMwihODNMsL8qqNm/TousVh3GChRnLuu0HbEIpzusG0b05dgnLISKbuAAAACV0RVh0ZGF0ZTpjcmVhdGUAMjAyMC0wOS0wMVQxMTo1NToyOSswMjowMNbkv24AAAAldEVYdGRhdGU6bW9kaWZ5ADIwMjAtMDktMDFUMTE6NTU6MjkrMDI6MDCnuQfSAAAAGXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAAAABJRU5ErkJggg==\",\n\t\t\t\t),\n\t\t\t)\n\t\t\tattachment2.cid = \"123cid\"\n\t\t\tconst bundle: MailBundle = {\n\t\t\t\tmailId: [\"\", \"\"],\n\t\t\t\tsubject,\n\t\t\t\tbody,\n\t\t\t\tsender: { address: \"lorem@ipsum.net\", name: \"\" },\n\t\t\t\tto: [{ name: \"guy1\", address: \"guy1@guys.net\" }, { name: \"guy2\", address: \"guy2@guys.net\" }, { address: \"guy2.5@guys.net\" }],\n\t\t\t\tcc: [{ address: \"guy3@guys.net\" }, { name: \"Dennis Dennisman\", address: \"guy4@guys.net\" }],\n\t\t\t\tbcc: [{ address: \"guy5@guys.net\" }, { name: \"Sixth guy\", address: \"guy6@guys.net\" }],\n\t\t\t\treplyTo: [{ address: \"guy7@guys.net\" }, { name: \"guy8\", address: \"guy8@guys.net\" }],\n\t\t\t\tisDraft: false,\n\t\t\t\tisRead: true,\n\t\t\t\tsentOn: now,\n\t\t\t\treceivedOn: now,\n\t\t\t\theaders: null,\n\t\t\t\tattachments: [attachment1, attachment2],\n\t\t\t}\n\n\t\t\tconst actual = mailToEml(bundle)\n\t\t\tconst expected = `From: lorem@ipsum.net\\r\\n\\\nMIME-Version: 1.0\\r\\n\\\nTo: guy1 <guy1@guys.net>,guy2 <guy2@guys.net>,<guy2.5@guys.net>\\r\\n\\\nCC: <guy3@guys.net>,Dennis Dennisman <guy4@guys.net>\\r\\n\\\nBCC: <guy5@guys.net>,Sixth guy <guy6@guys.net>\\r\\n\\\nSubject: =?UTF-8?B?SGV5LCBJIGtub3cgdGhhdCBndXksIGhl4oCZcyBhIG5paGlsaXN0Lg==?=\\r\\n\\\nDate: ${_formatSmtpDateTime(new Date(now))}\\r\\n\\\nContent-Type: multipart/related; boundary=\"------------79Bu5A16qPEYcVIZL@tutanota\"\\r\\n\\\n\\r\\n\\\n--------------79Bu5A16qPEYcVIZL@tutanota\\r\\n\\\nContent-Type: text/html; charset=UTF-8\\r\\n\\\nContent-transfer-encoding: base64\\r\\n\\\n\\r\\n\\\nSeKAmW0gdGhlIER1ZGUsIHNvIHRoYXTigJlzIHdoYXQgeW91IGNhbGwgbWUuIFRoYXQgb3IsIHVoLC\\r\\n\\\nBIaXMgRHVkZW5lc3MsIG9yIHVoLCBEdWRlciwgb3IgRWwgRHVkZXJpbm8sIGlmIHlvdeKAmXJlIG5v\\r\\n\\\ndCBpbnRvIHRoZSB3aG9sZSBicmV2aXR5IHRoaW5nLiA8aW1nIHNyYz0iY2lkOmNpZDEyMyIgLz4=\\r\\n\\\n\\r\\n\\\n--------------79Bu5A16qPEYcVIZL@tutanota\\r\\n\\\nContent-Type: text/plain;\\r\\n\\\n name==?UTF-8?B?ZmlsZTEudHh0?=\\r\\n\\\nContent-Transfer-Encoding: base64\\r\\n\\\nContent-Disposition: attachment;\\r\\n\\\n filename==?UTF-8?B?ZmlsZTEudHh0?=\\r\\n\\\n\\r\\n\\\ndGhpcyBpcyBhIHRleHQgZmlsZQ==\\r\\n\\\n\\r\\n\\\n--------------79Bu5A16qPEYcVIZL@tutanota\\r\\n\\\nContent-Type: image/png;\\r\\n\\\n name==?UTF-8?B?aWNvbjEweDEwLnBuZw==?=\\r\\n\\\nContent-Transfer-Encoding: base64\\r\\n\\\nContent-Disposition: attachment;\\r\\n\\\n filename==?UTF-8?B?aWNvbjEweDEwLnBuZw==?=\\r\\n\\\nContent-Id: <123cid>\\r\\n\\\n\\r\\n\\\niVBORw0KGgoAAAANSUhEUgAAAAoAAAAKCAMAAAC67D+PAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAA\\r\\n\\\nB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAgVBMVEWgHiCgHh+gHiEAAACfHyGg\\r\\n\\\nHiCgHiCgHiCgHiCgHiCgHiCgHiCgHiCgHiCgHiCgHiCgHiCgHiCgHiCgHiCgHiCgHiCgHiCgHiCgHi\\r\\n\\\nCgHiCgHiCgHiCgHiCgHiCgHiCgHiCgHiCgHiCgHiCgHiCgHiCgHiCgHiCgHiCgHiCgHiD////HdIxa\\r\\n\\\nAAAAKXRSTlMAAAAAAImrqvvx5OX+oGaj1/r1w1MjV7P5lwEPjO+dIRb83pU8BnMqAyX2q3sAAAABYk\\r\\n\\\ntHRCpTvtSeAAAACXBIWXMAAAcDAAAHAwGHNB/CAAAAB3RJTUUH5AkBDTcdD3SpngAAAE5JREFUCNc9\\r\\n\\\nykUSgDAABMGFCIHg7q7//yCVhGJOfRgw7ug4g3i+BJ4/RdeT0jcMwihODNMsL8qqNm/TousVh3GChR\\r\\n\\\nnLuu0HbEIpzusG0b05dgnLISKbuAAAACV0RVh0ZGF0ZTpjcmVhdGUAMjAyMC0wOS0wMVQxMTo1NToy\\r\\n\\\nOSswMjowMNbkv24AAAAldEVYdGRhdGU6bW9kaWZ5ADIwMjAtMDktMDFUMTE6NTU6MjkrMDI6MDCnuQ\\r\\n\\\nfSAAAAGXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAAAABJRU5ErkJggg==\\r\\n\\\n\\r\\n\\\n--------------79Bu5A16qPEYcVIZL@tutanota--`\n\n\t\t\tconst actualLines = actual.split(\"\\r\\n\")\n\t\t\tconst expectedLines = expected.split(\"\\r\\n\")\n\t\t\to(actualLines.length).equals(expectedLines.length)(\"check length\")\n\t\t\tfor (let i = 0; i < Math.min(expectedLines.length, actualLines.length); ++i) {\n\t\t\t\to(actualLines[i]).equals(expectedLines[i])(`Line: ${i}`)\n\t\t\t}\n\t\t})\n\n\t\to(\"email with headers\", function () {\n\t\t\t// the first few lines have wrong line endings, but we should handle that\n\t\t\tconst headers = `Received: from x.y.test\\n\\\n   by example.net\\n\\\n   via TCP\\n\\\n   with ESMTP\\r\\n\\\n   id ABC12345\\r\\n\\\n   for <mary@example.net>;  21 Nov 1997 10:05:43 -0600\\r\\n\\\nReceived: from node.example by x.y.test; 21 Nov 1997 10:01:22 -0600\\r\\n\\\nFrom: John Doe <jdoe@node.example>\\r\\n\\\nTo: Mary Smith <mary@example.net>\\r\\n\\\nSubject: Saying Hello\\r\\n\\\nDate: Fri, 21 Nov 1997 09:55:06 -0600\\r\\n\\\nMessage-ID: <1234@local.node.example>`\n\n\t\t\tconst now = Date.now()\n\t\t\tconst bundle: MailBundle = {\n\t\t\t\tmailId: [\"\", \"\"],\n\t\t\t\tsubject: \"Saying hello\",\n\t\t\t\tbody: \"\",\n\t\t\t\tsender: { address: \"jdoe@node.example\" },\n\t\t\t\tto: [{ address: \"mary@example.net\" }],\n\t\t\t\tcc: [],\n\t\t\t\tbcc: [],\n\t\t\t\treplyTo: [],\n\t\t\t\tisDraft: false,\n\t\t\t\tisRead: true,\n\t\t\t\tsentOn: now,\n\t\t\t\treceivedOn: now,\n\t\t\t\theaders,\n\t\t\t\tattachments: [],\n\t\t\t}\n\n\t\t\tconst actual = mailToEml(bundle)\n\t\t\tconst expected = `Received: from x.y.test\\r\\n\\\n   by example.net\\r\\n\\\n   via TCP\\r\\n\\\n   with ESMTP\\r\\n\\\n   id ABC12345\\r\\n\\\n   for <mary@example.net>;  21 Nov 1997 10:05:43 -0600\\r\\n\\\nReceived: from node.example by x.y.test; 21 Nov 1997 10:01:22 -0600\\r\\n\\\nFrom: John Doe <jdoe@node.example>\\r\\n\\\nTo: Mary Smith <mary@example.net>\\r\\n\\\nSubject: Saying Hello\\r\\n\\\nDate: Fri, 21 Nov 1997 09:55:06 -0600\\r\\n\\\nMessage-ID: <1234@local.node.example>\\r\\n\\\nContent-Type: multipart/related; boundary=\"------------79Bu5A16qPEYcVIZL@tutanota\"\\r\\n\\\n\\r\\n\\\n--------------79Bu5A16qPEYcVIZL@tutanota\\r\\n\\\nContent-Type: text/html; charset=UTF-8\\r\\n\\\nContent-transfer-encoding: base64\\r\\n\\\n\\r\\n\\\n\\r\\n\\\n--------------79Bu5A16qPEYcVIZL@tutanota--`\n\n\t\t\tconst actualLines = actual.split(\"\\r\\n\")\n\t\t\tconst expectedLines = expected.split(\"\\r\\n\")\n\t\t\to(actualLines.length).equals(expectedLines.length)\n\t\t\tfor (let i = 0; i < Math.min(expectedLines.length, actualLines.length); ++i) {\n\t\t\t\to(actualLines[i]).equals(expectedLines[i])(`Line: ${i}`)\n\t\t\t}\n\t\t})\n\t})\n})\n","import o from \"@tutao/otest\"\nimport { downloadMailBundle } from \"../../../../src/mail-app/mail/export/Bundler.js\"\nimport {\n\tBodyTypeRef,\n\tFileTypeRef,\n\tHeaderTypeRef,\n\tMail,\n\tMailAddressTypeRef,\n\tMailDetailsBlobTypeRef,\n\tMailDetailsTypeRef,\n\tMailTypeRef,\n\tRecipientsTypeRef,\n} from \"../../../../src/common/api/entities/tutanota/TypeRefs.js\"\nimport { MailState } from \"../../../../src/common/api/common/TutanotaConstants.js\"\nimport { DataFile } from \"../../../../src/common/api/common/DataFile.js\"\nimport { HtmlSanitizer } from \"../../../../src/common/misc/HtmlSanitizer.js\"\nimport { EntityClient } from \"../../../../src/common/api/common/EntityClient.js\"\nimport { FileController } from \"../../../../src/common/file/FileController.js\"\nimport { matchers, object, verify, when } from \"testdouble\"\nimport { MailFacade } from \"../../../../src/common/api/worker/facades/lazy/MailFacade.js\"\nimport { createTestEntity } from \"../../TestUtils.js\"\nimport { CryptoFacade } from \"../../../../src/common/api/worker/crypto/CryptoFacade.js\"\n\no.spec(\"Bundler\", function () {\n\tlet entityClientMock: EntityClient\n\tlet fileControllerMock: FileController\n\tlet sanitizerMock: HtmlSanitizer\n\tlet mailFacadeMock: MailFacade\n\tlet cryptoMock: CryptoFacade\n\n\to.beforeEach(function () {\n\t\tentityClientMock = object()\n\t\tfileControllerMock = object()\n\t\tsanitizerMock = object()\n\t\tmailFacadeMock = object()\n\t\tcryptoMock = object()\n\t})\n\to(\"make mail bundle non compressed headers\", async function () {\n\t\tconst mailId: IdTuple = [\"maillistid\", \"maillid\"]\n\t\tconst subject = \"hello\"\n\t\tconst sanitizedBodyText = \"this is the sanitized body text of the email\"\n\t\tconst sender = { address: \"sender@mycoolsite.co.uk\", name: \"the sender\" }\n\t\tconst sentOn = new Date()\n\t\tconst receivedOn = new Date()\n\t\tconst attachmentListId: Id = \"attachmentListId\"\n\t\tconst attachmentIds: Id[] = [\"attachmentId1\", \"attachmentId2\", \"attachmentId3\"]\n\t\tconst attachments: Array<DataFile> = attachmentIds.map((id) => {\n\t\t\treturn {\n\t\t\t\t_type: \"DataFile\",\n\t\t\t\tid: undefined,\n\t\t\t\tname: id,\n\t\t\t\tcid: id,\n\t\t\t\tdata: new Uint8Array(),\n\t\t\t\tsize: 4,\n\t\t\t\tmimeType: \"test\",\n\t\t\t}\n\t\t})\n\n\t\tconst bodyText = \"This is the body text of the body of the email\"\n\t\tconst body = createTestEntity(BodyTypeRef, { text: bodyText })\n\t\tconst toValues = {\n\t\t\taddress: \"to@mycoolsite.co.uk\",\n\t\t\tname: \"the to\",\n\t\t}\n\t\tconst ccValues = {\n\t\t\taddress: \"cc@mycoolsite.co.uk\",\n\t\t\tname: \"the cc\",\n\t\t}\n\t\tconst bccValues = {\n\t\t\taddress: \"bcc@mycoolsite.co.uk\",\n\t\t\tname: \"the bcc\",\n\t\t}\n\t\tconst recipients = createTestEntity(RecipientsTypeRef, {\n\t\t\ttoRecipients: [createTestEntity(MailAddressTypeRef, toValues)],\n\t\t\tccRecipients: [createTestEntity(MailAddressTypeRef, ccValues)],\n\t\t\tbccRecipients: [createTestEntity(MailAddressTypeRef, bccValues)],\n\t\t})\n\t\tconst headersText = \"this is the headers\"\n\t\tconst replyToValues = {\n\t\t\taddress: \"replyto@mycoolsite.co.uk\",\n\t\t\tname: \"the replyto\",\n\t\t}\n\t\tconst mailDetails = createTestEntity(MailDetailsTypeRef, {\n\t\t\t_id: \"detailsId\",\n\t\t\theaders: createTestEntity(HeaderTypeRef, { headers: headersText }),\n\t\t\tbody: body,\n\t\t\trecipients,\n\t\t\tsentDate: new Date(sentOn),\n\t\t\treplyTos: [createTestEntity(MailAddressTypeRef, replyToValues)],\n\t\t})\n\t\tconst mailDetailsBlob = createTestEntity(MailDetailsBlobTypeRef, { _id: [\"archiveId\", mailDetails._id], details: mailDetails })\n\n\t\tconst mail = createTestEntity(MailTypeRef, {\n\t\t\t_id: mailId,\n\t\t\tsubject,\n\t\t\tsender: createTestEntity(MailAddressTypeRef, sender),\n\t\t\tstate: MailState.RECEIVED,\n\t\t\tunread: false,\n\t\t\treceivedDate: new Date(receivedOn),\n\t\t\tattachments: attachmentIds.map((id) => [attachmentListId, id] as IdTuple),\n\t\t\tmailDetails: mailDetailsBlob._id,\n\t\t})\n\n\t\twhen(mailFacadeMock.loadMailDetailsBlob(mail)).thenResolve(mailDetails)\n\n\t\tfor (const attachment of attachments) {\n\t\t\t// the file is only needed to pass to the fileController and is not kept, so we mock it as a string for convenience\n\t\t\twhen(entityClientMock.load(FileTypeRef, [attachmentListId, attachment.name])).thenResolve(`file ${attachment.name}` as any)\n\t\t\twhen(fileControllerMock.getAsDataFile(`file ${attachment.name}` as any)).thenResolve(attachment)\n\t\t}\n\n\t\twhen(\n\t\t\tsanitizerMock.sanitizeHTML(bodyText, {\n\t\t\t\tblockExternalContent: false,\n\t\t\t\tallowRelativeLinks: false,\n\t\t\t\tusePlaceholderForInlineImages: false,\n\t\t\t}),\n\t\t).thenReturn({ html: sanitizedBodyText })\n\n\t\tconst attachmentsCaptor = matchers.captor()\n\t\twhen(cryptoMock.enforceSessionKeyUpdateIfNeeded(mail, attachmentsCaptor.capture())).thenDo((mail: Mail, attachments: File) =>\n\t\t\tPromise.resolve(attachments),\n\t\t)\n\n\t\tconst bundle = await downloadMailBundle(mail, mailFacadeMock, entityClientMock, fileControllerMock, sanitizerMock, cryptoMock)\n\t\tverify(cryptoMock.enforceSessionKeyUpdateIfNeeded(mail, attachments.map((a) => `file ${a.name}`) as any))\n\n\t\to(bundle).deepEquals({\n\t\t\tmailId: mailId,\n\t\t\tsubject: subject,\n\t\t\tsender: sender,\n\t\t\tbody: sanitizedBodyText,\n\t\t\tto: [toValues],\n\t\t\tcc: [ccValues],\n\t\t\tbcc: [bccValues],\n\t\t\treplyTo: [replyToValues],\n\t\t\tisDraft: false,\n\t\t\tisRead: true,\n\t\t\theaders: headersText,\n\t\t\tattachments: attachments,\n\t\t\tsentOn: sentOn.getTime(),\n\t\t\treceivedOn: receivedOn.getTime(),\n\t\t})\n\t})\n})\n","import o from \"@tutao/otest\"\nimport { deduplicateFilenames, sanitizeFilename } from \"../../../../../src/common/api/common/utils/FileUtils.js\"\n\no.spec(\"FileUtilsTest\", function () {\n\to(\"sanitizeFilename\", function () {\n\t\to(sanitizeFilename(\"hello\")).equals(\"hello\")\n\t\to(sanitizeFilename(\"foo/bar\")).equals(\"foo_bar\")\n\t\to(sanitizeFilename(\"\\x001/./  \")).equals(\"_1_.__\")\n\t\to(sanitizeFilename(\"test.\")).equals(\"test_\")\n\t})\n\n\to.spec(\"deduplicate filenames\", function () {\n\t\to(\"no duplicates\", function () {\n\t\t\tconst filenames = [\"abc\", \"def\", \"ghi\", \"jkl\"]\n\t\t\tconst taken = new Set([\"mno\", \"pqr\", \"stu\"])\n\t\t\tconst actual = deduplicateFilenames(filenames, taken)\n\t\t\tconst expected = {\n\t\t\t\tabc: [\"abc\"],\n\t\t\t\tdef: [\"def\"],\n\t\t\t\tghi: [\"ghi\"],\n\t\t\t\tjkl: [\"jkl\"],\n\t\t\t}\n\t\t\to(actual).deepEquals(expected)\n\t\t})\n\n\t\to(\"yes duplicates, no taken\", function () {\n\t\t\tconst filenames = [\"abc\", \"abc\", \"Abc\", \"def\", \"DEF\", \"ghi\", \"jkl\"]\n\t\t\tconst taken = new Set<string>()\n\t\t\tconst actual = deduplicateFilenames(filenames, taken)\n\t\t\tconst expected = {\n\t\t\t\tabc: [\"abc\", \"abc (1)\"],\n\t\t\t\tAbc: [\"Abc (2)\"],\n\t\t\t\tdef: [\"def\"],\n\t\t\t\tDEF: [\"DEF (1)\"],\n\t\t\t\tghi: [\"ghi\"],\n\t\t\t\tjkl: [\"jkl\"],\n\t\t\t}\n\t\t\to(actual).deepEquals(expected)\n\t\t})\n\t\to(\"yes duplicates, yes taken with no duplicates\", function () {\n\t\t\tconst filenames = [\"abc\", \"abc\", \"Abc\", \"def\", \"DEF\", \"ghi\", \"jkl\"]\n\t\t\tconst taken = new Set([\"mno\", \"pqr\", \"stu\"])\n\t\t\tconst actual = deduplicateFilenames(filenames, taken)\n\t\t\tconst expected = {\n\t\t\t\tabc: [\"abc\", \"abc (1)\"],\n\t\t\t\tAbc: [\"Abc (2)\"],\n\t\t\t\tdef: [\"def\"],\n\t\t\t\tDEF: [\"DEF (1)\"],\n\t\t\t\tghi: [\"ghi\"],\n\t\t\t\tjkl: [\"jkl\"],\n\t\t\t}\n\t\t\to(actual).deepEquals(expected)\n\t\t})\n\t\to(\"yes duplicates, yes taken with yes duplicates\", function () {\n\t\t\tconst filenames = [\"abc\", \"abc\", \"Abc\", \"def\", \"DEF\", \"ghi\", \"jkl\", \"file.txt\", \"FILE.txt\", \"FILE.TXT\", \"file1.txt\"]\n\t\t\tconst taken = new Set([\"ghi\", \"JKL\", \"mno\", \"pqr\", \"stu\"])\n\t\t\tconst actual = deduplicateFilenames(filenames, taken)\n\t\t\tconst expected = {\n\t\t\t\tabc: [\"abc\", \"abc (1)\"],\n\t\t\t\tAbc: [\"Abc (2)\"],\n\t\t\t\tdef: [\"def\"],\n\t\t\t\tDEF: [\"DEF (1)\"],\n\t\t\t\tghi: [\"ghi (1)\"],\n\t\t\t\tjkl: [\"jkl (1)\"],\n\t\t\t\t\"file.txt\": [\"file.txt\"],\n\t\t\t\t\"FILE.txt\": [\"FILE (1).txt\"],\n\t\t\t\t\"FILE.TXT\": [\"FILE (2).TXT\"],\n\t\t\t\t\"file1.txt\": [\"file1.txt\"],\n\t\t\t}\n\t\t\to(actual).deepEquals(expected)\n\t\t})\n\t})\n})\n","import o from \"@tutao/otest\"\nimport { Dialog } from \"../../../src/common/gui/base/Dialog.js\"\nimport { getConfirmation } from \"../../../src/common/gui/base/GuiUtils.js\"\nimport { downcast } from \"@tutao/tutanota-utils\"\nimport { spy } from \"@tutao/tutanota-test-utils\"\n\no.spec(\"GuiUtils\", function () {\n\to.spec(\"getConfirmation ok\", function () {\n\t\to.beforeEach(function () {\n\t\t\tDialog.confirm = spy(function (...args) {\n\t\t\t\treturn Promise.resolve(true)\n\t\t\t})\n\t\t})\n\t\to(\"calls confirmed\", async function () {\n\t\t\tconst confirmAction = spy(() => {})\n\t\t\tconst confirmation = getConfirmation(downcast(\"message\"), downcast(\"ok action\")).confirmed(confirmAction)\n\t\t\tawait confirmation.result\n\t\t\to(confirmAction.callCount).equals(1)\n\t\t\to(Dialog.confirm.callCount).equals(1)\n\t\t\to(Dialog.confirm.args).deepEquals([\"message\", \"ok action\"])\n\t\t})\n\t\to(\"calls cancelled\", async function () {\n\t\t\tconst cancelAction = spy(() => {})\n\t\t\tconst confirmation = getConfirmation(downcast(\"message\"), downcast(\"ok action\")).cancelled(cancelAction)\n\t\t\tawait confirmation.result\n\t\t\to(cancelAction.callCount).equals(0)\n\t\t\to(Dialog.confirm.callCount).equals(1)\n\t\t\to(Dialog.confirm.args).deepEquals([\"message\", \"ok action\"])\n\t\t})\n\t\to(\"calls confirmed and cancelled\", async function () {\n\t\t\tconst confirmAction = spy(() => {})\n\t\t\tconst cancelAction = spy(() => {})\n\t\t\tconst confirmation = getConfirmation(downcast(\"message\"), downcast(\"ok action\")).confirmed(confirmAction).cancelled(cancelAction)\n\t\t\tawait confirmation.result\n\t\t\to(confirmAction.callCount).equals(1)\n\t\t\to(cancelAction.callCount).equals(0)\n\t\t\to(Dialog.confirm.callCount).equals(1)\n\t\t\to(Dialog.confirm.args).deepEquals([\"message\", \"ok action\"])\n\t\t})\n\t})\n\to.spec(\"getConfirmation !ok\", function () {\n\t\to.beforeEach(function () {\n\t\t\tDialog.confirm = spy(function (...args) {\n\t\t\t\treturn Promise.resolve(false)\n\t\t\t})\n\t\t})\n\t\to(\"calls confirmed\", async function () {\n\t\t\tconst confirmAction = spy(() => {})\n\t\t\tconst confirmation = getConfirmation(downcast(\"message\"), downcast(\"ok action\")).confirmed(confirmAction)\n\t\t\tawait confirmation.result\n\t\t\to(confirmAction.callCount).equals(0)\n\t\t\to(Dialog.confirm.callCount).equals(1)\n\t\t\to(Dialog.confirm.args).deepEquals([\"message\", \"ok action\"])\n\t\t})\n\t\to(\"calls cancelled\", async function () {\n\t\t\tconst cancelAction = spy(() => {})\n\t\t\tconst confirmation = getConfirmation(downcast(\"message\"), downcast(\"ok action\")).cancelled(cancelAction)\n\t\t\tawait confirmation.result\n\t\t\to(cancelAction.callCount).equals(1)\n\t\t\to(Dialog.confirm.callCount).equals(1)\n\t\t\to(Dialog.confirm.args).deepEquals([\"message\", \"ok action\"])\n\t\t})\n\t\to(\"calls confirmed and cancelled\", async function () {\n\t\t\tconst confirmAction = spy(() => {})\n\t\t\tconst cancelAction = spy(() => {})\n\t\t\tconst confirmation = getConfirmation(downcast(\"message\"), downcast(\"ok action\")).confirmed(confirmAction).cancelled(cancelAction)\n\t\t\tawait confirmation.result\n\t\t\to(confirmAction.callCount).equals(0)\n\t\t\to(cancelAction.callCount).equals(1)\n\t\t\to(Dialog.confirm.callCount).equals(1)\n\t\t\to(Dialog.confirm.args).deepEquals([\"message\", \"ok action\"])\n\t\t})\n\t})\n})\n","import type { Parser } from \"./ParserCombinator\"\nimport {\n\tcombineParsers,\n\tmakeCharacterParser,\n\tmakeEitherParser,\n\tmakeNotOneOfCharactersParser,\n\tmakeOneOrMoreParser,\n\tmakeSeparatedByParser,\n\tmakeZeroOrMoreParser,\n\tmapParser,\n\tParserError,\n\tStringIterator,\n} from \"./ParserCombinator\"\n\ntype ParsedCsv = {\n\trows: Array<Array<string>>\n}\ntype CsvParseOptions = {\n\tdelimiter: Delimiter\n}\ntype Delimiter = \",\" | \"|\" | \":\" | \";\"\nconst DEFAULT_CSV_PARSE_OPTIONS = {\n\tdelimiter: \",\",\n}\n\nexport function parseCsv(input: string, options?: Partial<CsvParseOptions>): ParsedCsv {\n\tconst { delimiter } = Object.assign({}, DEFAULT_CSV_PARSE_OPTIONS, options)\n\tconst lineDelimiterParser = makeOneOrMoreParser(makeCharacterParser(\"\\n\"))\n\tconst parser = makeSeparatedByParser(lineDelimiterParser, makeRowParser(delimiter))\n\tconst rows = parser(new StringIterator(input.replace(/\\r\\n/g, \"\\n\")))\n\treturn {\n\t\trows: rows,\n\t}\n}\n\nfunction makeRowParser(delimiter: Delimiter): Parser<Array<string>> {\n\treturn makeSeparatedByParser(makeCharacterParser(delimiter), makeColumnParser(delimiter))\n}\n\nfunction makeColumnParser(delimiter: Delimiter): Parser<string> {\n\treturn makeEitherParser(quotedColumnParser, makeUnquotedColumnParser(delimiter))\n}\n\nconst quotedColumnParser: Parser<string> = mapParser(\n\tcombineParsers(makeZeroOrMoreParser(makeCharacterParser(\" \")), parseQuotedColumn, makeZeroOrMoreParser(makeCharacterParser(\" \"))),\n\t(result) => result[1],\n)\n\n/**\n * Parse a column that is nonempty, doesn't contain any quotes, newlines, or delimiters\n * @param delimiter\n * @returns {Parser<*>}\n */\nfunction makeUnquotedColumnParser(delimiter: string): Parser<string> {\n\t// We don't use trim spaces parser because it won't remove trailing spaces in this case\n\treturn mapParser(makeZeroOrMoreParser(makeNotOneOfCharactersParser(['\"', \"\\n\", delimiter])), (arr) => arr.join(\"\"))\n}\n\n/**\n * Parse the inside of a double-quote quoted string, returning the string without the outer double-quotes\n * @param iterator\n */\nfunction parseQuotedColumn(iterator: StringIterator): string {\n\tconst initial = iterator.next()\n\n\tif (initial.done || initial.value !== '\"') {\n\t\tthrow new ParserError(\"expected quote\")\n\t}\n\n\tlet result = \"\"\n\n\twhile (true) {\n\t\tconst token = iterator.next()\n\n\t\tif (token.done) {\n\t\t\tthrow new ParserError(\"unexpected end of input\")\n\t\t}\n\n\t\tif (token.value === '\"') {\n\t\t\t// We will either be at an escaped quote, or at the end of the string\n\t\t\tif (iterator.peek() === '\"') {\n\t\t\t\t// It's escaped, append only a single quote to the result\n\t\t\t\titerator.next()\n\t\t\t\tresult += '\"'\n\t\t\t} else {\n\t\t\t\t// it's not escaped, so it's the final delimiter\n\t\t\t\tbreak\n\t\t\t}\n\t\t} else {\n\t\t\tresult += token.value\n\t\t}\n\t}\n\n\treturn result\n}\n","import o from \"@tutao/otest\"\nimport { parseCsv } from \"../../../src/common/misc/parsing/CsvParser.js\"\no.spec(\"Parser combinator test\", function () {})\no.spec(\"CSV parsing test\", function () {\n\to(\"Parse good csv no quotes no empty columns no surrounding spaces\", function () {\n\t\tconst csv = \"foo,bar,baz,quux\\nshrek and fiona,donkey,farquaad\"\n\t\tconst actual = parseCsv(csv).rows\n\t\tconst expected = [\n\t\t\t[\"foo\", \"bar\", \"baz\", \"quux\"],\n\t\t\t[\"shrek and fiona\", \"donkey\", \"farquaad\"],\n\t\t]\n\t\to(actual).deepEquals(expected)\n\t})\n\to(\"Parse good csv no quotes no empty columns\", function () {\n\t\tconst csv = \" foo , bar ,  baz  ,  quux  \\n  shrek and fiona  , donkey , farquaad \"\n\t\tconst actual = parseCsv(csv).rows\n\t\tconst expected = [\n\t\t\t[\" foo \", \" bar \", \"  baz  \", \"  quux  \"],\n\t\t\t[\"  shrek and fiona  \", \" donkey \", \" farquaad \"],\n\t\t]\n\t\to(actual).deepEquals(expected)\n\t})\n\to(\"Parse good csv no quotes\", function () {\n\t\tconst csv = \" foo,,  ,quux\\n shrek and fiona  , donkey ,farquaad\"\n\t\tconst actual = parseCsv(csv).rows\n\t\tconst expected = [\n\t\t\t[\" foo\", \"\", \"  \", \"quux\"],\n\t\t\t[\" shrek and fiona  \", \" donkey \", \"farquaad\"],\n\t\t]\n\t\to(actual).deepEquals(expected)\n\t})\n\to(\"Parse good csv with quotes and surrounding spaces and empty columns\", function () {\n\t\tconst csv = ` \"foo\",\"\",\"  \", \" quux \" \\n\" shrek and fiona\"  ,\" donkey\" ,\"farquaad\"`\n\t\tconst actual = parseCsv(csv).rows\n\t\tconst expected = [\n\t\t\t[\"foo\", \"\", \"  \", \" quux \"],\n\t\t\t[\" shrek and fiona\", \" donkey\", \"farquaad\"],\n\t\t]\n\t\to(actual).deepEquals(expected)\n\t})\n\to(\"Parse good csv with empty lines\", function () {\n\t\tconst csv = `\\n\\nfoo,bar,baz,quux\\n\\n\\nshrek and fiona,donkey,farquaad\\n,  ,\\n phoebe,rachael,monica,chandler,joey,ross\\n\\n`\n\t\tconst actual = parseCsv(csv).rows\n\t\tconst expected = [\n\t\t\t[\"\"],\n\t\t\t[\"foo\", \"bar\", \"baz\", \"quux\"],\n\t\t\t[\"shrek and fiona\", \"donkey\", \"farquaad\"],\n\t\t\t[\"\", \"  \", \"\"],\n\t\t\t[\" phoebe\", \"rachael\", \"monica\", \"chandler\", \"joey\", \"ross\"],\n\t\t\t[\"\"],\n\t\t]\n\t\to(actual).deepEquals(expected)\n\t})\n\to(\"Parse good csv with quotes inside quotes\", function () {\n\t\tconst csv = `\"\"\"this is a quote\"\" - some guy\", \"this is a regular quoted column, that has a comma in it\"\\n\"this is the second line with a single quoted column\"`\n\t\tconst actual = parseCsv(csv).rows\n\t\tconst expected = [\n\t\t\t[`\"this is a quote\" - some guy`, \"this is a regular quoted column, that has a comma in it\"],\n\t\t\t[\"this is the second line with a single quoted column\"],\n\t\t]\n\t\to(actual).deepEquals(expected)\n\t})\n})\n","import o from \"@tutao/otest\"\nimport { DateProvider } from \"../../../../../src/common/api/common/DateProvider.js\"\nimport { NewsModel } from \"../../../../../src/common/misc/news/NewsModel.js\"\nimport { object, replace, when } from \"testdouble\"\nimport { ReferralLinkViewer } from \"../../../../../src/common/misc/news/items/ReferralLinkViewer.js\"\nimport { getDayShifted } from \"@tutao/tutanota-utils\"\nimport { ReferralLinkNews } from \"../../../../../src/common/misc/news/items/ReferralLinkNews.js\"\nimport { timestampToGeneratedId } from \"../../../../../src/common/api/common/utils/EntityUtils.js\"\nimport { UserController } from \"../../../../../src/common/api/main/UserController.js\"\nimport { Customer, User } from \"../../../../../src/common/api/entities/sys/TypeRefs.js\"\nimport { initCommonLocator } from \"../../../../../src/common/api/main/CommonLocator.js\"\nimport { IMailLocator } from \"../../../../../src/mail-app/mailLocator.js\"\n\no.spec(\"ReferralLinkNews\", function () {\n\tlet dateProvider: DateProvider\n\tlet newsModel: NewsModel\n\tlet referralViewModel: ReferralLinkViewer\n\tlet referralLinkNews: ReferralLinkNews\n\tlet userController: UserController\n\tlet locator: IMailLocator = object()\n\tlet domainConfig: DomainConfig = {\n\t\tfirstPartyDomain: true,\n\t\tpartneredDomainTransitionUrl: \"https://test.tutanota.com\",\n\t\tapiUrl: \"https://app.test.tuta.com\",\n\t\tpaymentUrl: \"https://pay.test.tutanota.com/braintree.html\",\n\t\twebauthnUrl: \"https://app.test.tuta.com/webauthn\",\n\t\tlegacyWebauthnUrl: \"https://test.tutanota.com/webauthn\",\n\t\twebauthnMobileUrl: \"https://app.test.tuta.com/webauthnmobile\",\n\t\tlegacyWebauthnMobileUrl: \"https://test.tutanota.com/webauthnmobile\",\n\t\twebauthnRpId: \"tuta.com\",\n\t\tu2fAppId: \"https://app.test.tuta.com/u2f-appid.json\",\n\t\tgiftCardBaseUrl: \"https://app.test.tuta.com/giftcard\",\n\t\treferralBaseUrl: \"https://app.test.tuta.com/signup\",\n\t\twebsiteBaseUrl: \"https://tuta.com\",\n\t}\n\n\to.beforeEach(function () {\n\t\tinitCommonLocator(locator)\n\t\tdateProvider = object()\n\t\tnewsModel = object()\n\t\treferralViewModel = object()\n\t\tuserController = object()\n\t\tconst user: User = object()\n\t\tconst customer: Customer = object()\n\n\t\treplace(userController, \"user\", user)\n\t\treplace(user, \"customer\", timestampToGeneratedId(0))\n\t\treplace(customer, \"referralCode\", \"referralCodeId\")\n\t\twhen(userController.loadCustomer()).thenResolve(customer)\n\n\t\treferralLinkNews = new ReferralLinkNews(newsModel, dateProvider, userController)\n\t})\n\n\to(\"ReferralLinkNews not shown if account is not old enough\", async function () {\n\t\twhen(locator.domainConfigProvider()).thenReturn({\n\t\t\tgetCurrentDomainConfig: () => domainConfig,\n\t\t})\n\n\t\twhen(userController.isGlobalAdmin()).thenReturn(true)\n\t\twhen(dateProvider.now()).thenReturn(getDayShifted(new Date(0), 6).getTime())\n\t\to(await referralLinkNews.isShown()).equals(false)\n\t})\n\n\to(\"ReferralLinkNews shown if account is old enough\", async function () {\n\t\twhen(locator.domainConfigProvider()).thenReturn({\n\t\t\tgetCurrentDomainConfig: () => domainConfig,\n\t\t})\n\n\t\twhen(userController.isGlobalAdmin()).thenReturn(true)\n\t\twhen(dateProvider.now()).thenReturn(getDayShifted(new Date(0), 7).getTime())\n\t\to(await referralLinkNews.isShown()).equals(true)\n\t})\n\n\to(\"ReferralLinkNews not shown if account is not old admin\", async function () {\n\t\twhen(locator.domainConfigProvider()).thenReturn({\n\t\t\tgetCurrentDomainConfig: () => domainConfig,\n\t\t})\n\n\t\twhen(userController.isGlobalAdmin()).thenReturn(false)\n\t\twhen(dateProvider.now()).thenReturn(getDayShifted(new Date(0), 7).getTime())\n\t\to(await referralLinkNews.isShown()).equals(false)\n\t})\n})\n","import o from \"@tutao/otest\"\nimport { EmailTemplateContentTypeRef, EmailTemplateTypeRef, TemplateGroupRootTypeRef } from \"../../../src/common/api/entities/tutanota/TypeRefs.js\"\nimport { TemplateEditorModel } from \"../../../src/mail-app/settings/TemplateEditorModel.js\"\nimport { EntityClient } from \"../../../src/common/api/common/EntityClient.js\"\nimport { downcast } from \"@tutao/tutanota-utils\"\nimport { LanguageNames, languages } from \"../../../src/common/misc/LanguageViewModel.js\"\nimport { createTestEntity } from \"../TestUtils.js\"\n\no.spec(\"TemplateEditorModel\", function () {\n\tlet entityClient: EntityClient\n\to.beforeEach(function () {\n\t\tentityClient = downcast({})\n\t})\n\to(\"content languages\", function () {\n\t\tconst template = createTestEntity(EmailTemplateTypeRef, {\n\t\t\tcontents: [\n\t\t\t\tcreateTestEntity(EmailTemplateContentTypeRef, {\n\t\t\t\t\tlanguageCode: \"en\",\n\t\t\t\t\ttext: \"\",\n\t\t\t\t}),\n\t\t\t\tcreateTestEntity(EmailTemplateContentTypeRef, {\n\t\t\t\t\tlanguageCode: \"de\",\n\t\t\t\t\ttext: \"\",\n\t\t\t\t}),\n\t\t\t],\n\t\t})\n\t\tconst templateGroupRoot = createTestEntity(TemplateGroupRootTypeRef)\n\t\tconst model = new TemplateEditorModel(template, templateGroupRoot, entityClient)\n\t\tconst addedLanguages = model.getAddedLanguages()\n\t\tconst additionalLanguages = model.getAdditionalLanguages()\n\t\to(additionalLanguages).deepEquals(languages.filter((language) => language.code !== \"en\" && language.code !== \"de\"))\n\t\to(addedLanguages).deepEquals([\n\t\t\t{\n\t\t\t\tcode: \"en\",\n\t\t\t\ttextId: LanguageNames.en,\n\t\t\t},\n\t\t\t{\n\t\t\t\tcode: \"de\",\n\t\t\t\ttextId: LanguageNames.de,\n\t\t\t},\n\t\t])\n\t})\n})\n","import o from \"@tutao/otest\"\nimport { MailAddressNameChanger, MailAddressTableModel } from \"../../../../src/common/settings/mailaddress/MailAddressTableModel.js\"\nimport { EntityClient } from \"../../../../src/common/api/common/EntityClient.js\"\nimport { matchers, object, when } from \"testdouble\"\nimport { MailAddressFacade } from \"../../../../src/common/api/worker/facades/lazy/MailAddressFacade.js\"\nimport { LoginController } from \"../../../../src/common/api/main/LoginController.js\"\nimport { EventController } from \"../../../../src/common/api/main/EventController.js\"\nimport { GroupInfo, MailAddressAliasTypeRef } from \"../../../../src/common/api/entities/sys/TypeRefs.js\"\nimport { LimitReachedError } from \"../../../../src/common/api/common/error/RestError.js\"\nimport { createUpgradePriceServiceMock, PLAN_PRICES } from \"../../subscription/priceTestUtils.js\"\nimport { clone, noOp } from \"@tutao/tutanota-utils\"\nimport { PlanType } from \"../../../../src/common/api/common/TutanotaConstants.js\"\nimport { UpgradeRequiredError } from \"../../../../src/common/api/main/UpgradeRequiredError.js\"\nimport { UserError } from \"../../../../src/common/api/main/UserError.js\"\nimport { assertThrows } from \"@tutao/tutanota-test-utils\"\nimport { createTestEntity } from \"../../TestUtils.js\"\n\no.spec(\"MailAddressTableModel\", function () {\n\tlet model: MailAddressTableModel\n\tlet nameChanger: MailAddressNameChanger\n\tlet mailAddressFacade: MailAddressFacade\n\tlet entityClient: EntityClient\n\tlet userGroupInfo: GroupInfo\n\n\to.beforeEach(function () {\n\t\tnameChanger = object<MailAddressNameChanger>()\n\t\tmailAddressFacade = object<MailAddressFacade>()\n\n\t\tconst priceServiceMock = createUpgradePriceServiceMock(clone(PLAN_PRICES))\n\t\tentityClient = object<EntityClient>()\n\t\tuserGroupInfo = object<GroupInfo>()\n\t\tmodel = new MailAddressTableModel(\n\t\t\tentityClient,\n\t\t\tpriceServiceMock,\n\t\t\tmailAddressFacade,\n\t\t\tobject<LoginController>(),\n\t\t\tobject<EventController>(),\n\t\t\tuserGroupInfo,\n\t\t\tnameChanger,\n\t\t\tnoOp,\n\t\t)\n\t})\n\n\to(\"suggest buying plans with more mail addresses - some new paid plans provide more aliases\", async function () {\n\t\twhen(mailAddressFacade.addMailAlias(matchers.anything(), matchers.anything())).thenReject(new LimitReachedError(\"limit reached\"))\n\t\tconst alias1 = createTestEntity(MailAddressAliasTypeRef)\n\t\tuserGroupInfo.mailAddressAliases = Array(15).fill(alias1)\n\t\tconst error = await assertThrows(UpgradeRequiredError, () => model.addAlias(\"overthelimit@tuta.com\", \"Over, the Limit\"))\n\t\to(error.constructor.name).equals(UpgradeRequiredError.name)\n\t\to(error.plans).deepEquals([PlanType.Legend, PlanType.Advanced, PlanType.Unlimited])\n\t})\n\n\to(\"suggest buying plans with more mail addresses - no other plans available\", async function () {\n\t\twhen(mailAddressFacade.addMailAlias(matchers.anything(), matchers.anything())).thenReject(new LimitReachedError(\"limit reached\"))\n\t\tconst alias1 = createTestEntity(MailAddressAliasTypeRef)\n\t\tuserGroupInfo.mailAddressAliases = Array(30).fill(alias1)\n\t\tawait o(() => model.addAlias(\"overthelimit@tuta.com\", \"Over, the Limit\")).asyncThrows(UserError)\n\t})\n\n\to(\"suggest buying plans with more mail addresses - inactive email aliases\", async function () {\n\t\twhen(mailAddressFacade.addMailAlias(matchers.anything(), matchers.anything())).thenReject(new LimitReachedError(\"limit reached\"))\n\t\tconst alias1 = createTestEntity(MailAddressAliasTypeRef, { enabled: false })\n\t\tuserGroupInfo.mailAddressAliases = Array(30).fill(alias1)\n\t\tawait o(() => model.addAlias(\"overthelimit@tuta.com\", \"Over, the Limit\")).asyncThrows(UserError)\n\t})\n})\n","import { LoginController } from \"../api/main/LoginController.js\"\nimport { CustomerTypeRef, GroupInfoTypeRef, GroupTypeRef } from \"../api/entities/sys/TypeRefs.js\"\nimport { assertNotNull, mapNullable, neverNull, pad, promiseMap, renderCsv, stringToUtf8Uint8Array } from \"@tutao/tutanota-utils\"\nimport { EntityClient } from \"../api/common/EntityClient.js\"\nimport { FileController } from \"../file/FileController.js\"\nimport { createDataFile } from \"../api/common/DataFile.js\"\nimport { CounterFacade } from \"../api/worker/facades/lazy/CounterFacade.js\"\nimport { CounterType } from \"../api/common/TutanotaConstants.js\"\n\nexport const CSV_MIMETYPE = \"text/csv\"\nexport const USER_CSV_FILENAME = \"users.csv\"\n\ninterface UserExportData {\n\tname: string\n\tmailAddress: string\n\tcreated: Date\n\tdeleted: Date | null\n\tusedStorage: number\n\taliases: Array<string>\n}\n\nexport async function exportUserCsv(entityClient: EntityClient, logins: LoginController, fileController: FileController, counterFacade: CounterFacade) {\n\tconst data = await loadUserExportData(entityClient, logins, counterFacade)\n\tconst csv = renderCsv(\n\t\t[\"name\", \"mail address\", \"date created\", \"date deleted\", \"storage used (in bytes)\", \"aliases\"],\n\t\tdata.map((user) => [\n\t\t\tuser.name,\n\t\t\tuser.mailAddress,\n\t\t\tformatDate(user.created),\n\t\t\tmapNullable(user.deleted, formatDate) ?? \"\",\n\t\t\t`${user.usedStorage}`,\n\t\t\tuser.aliases.join(\" \"),\n\t\t]),\n\t)\n\tconst dataFile = createDataFile(USER_CSV_FILENAME, CSV_MIMETYPE, stringToUtf8Uint8Array(csv))\n\tawait fileController.saveDataFile(dataFile)\n}\n\nfunction formatDate(date: Date): string {\n\treturn `${date.getFullYear()}-${pad(date.getMonth() + 1, 2)}-${pad(date.getDate(), 2)}`\n}\n\n/**\n * Load data for each user administrated by the logged in user, in order to be exported\n */\nexport async function loadUserExportData(entityClient: EntityClient, logins: LoginController, counterFacade: CounterFacade): Promise<Array<UserExportData>> {\n\tconst { user } = logins.getUserController()\n\tconst { userGroups } = await entityClient.load(CustomerTypeRef, assertNotNull(user.customer))\n\n\tconst groupsAdministeredByUser = await entityClient.loadAll(GroupInfoTypeRef, userGroups)\n\n\tconst usedCustomerStorageCounterValues = await counterFacade.readAllCustomerCounterValues(CounterType.UserStorageLegacy, neverNull(user.customer))\n\treturn promiseMap(groupsAdministeredByUser, async (info) => {\n\t\tconst group = await entityClient.load(GroupTypeRef, info.group)\n\t\tconst userStorageCounterValue = usedCustomerStorageCounterValues.find((counterValue) => counterValue.counterId === group.storageCounter)\n\t\tconst usedStorage = userStorageCounterValue != null ? Number(userStorageCounterValue.value) : 0\n\n\t\treturn {\n\t\t\tname: info.name,\n\t\t\tmailAddress: info.mailAddress ?? \"\",\n\t\t\tcreated: info.created,\n\t\t\tdeleted: info.deleted,\n\t\t\tusedStorage,\n\t\t\taliases: info.mailAddressAliases.map((alias) => alias.mailAddress),\n\t\t}\n\t})\n}\n","import o from \"@tutao/otest\"\nimport { loadUserExportData } from \"../../../src/common/settings/UserDataExporter.js\"\nimport { EntityClient } from \"../../../src/common/api/common/EntityClient.js\"\nimport { LoginController } from \"../../../src/common/api/main/LoginController.js\"\nimport { FileController } from \"../../../src/common/file/FileController.js\"\nimport { object, when } from \"testdouble\"\nimport { CustomerTypeRef, Group, GroupInfo, GroupInfoTypeRef, GroupTypeRef, User } from \"../../../src/common/api/entities/sys/TypeRefs.js\"\nimport { formatDateTimeUTC } from \"../../../src/calendar-app/calendar/export/CalendarExporter.js\"\nimport { CounterFacade } from \"../../../src/common/api/worker/facades/lazy/CounterFacade.js\"\nimport { CounterType } from \"../../../src/common/api/common/TutanotaConstants.js\"\nimport { CounterValueTypeRef } from \"../../../src/common/api/entities/monitor/TypeRefs.js\"\nimport { createTestEntity } from \"../TestUtils.js\"\n\no.spec(\"user data export\", function () {\n\tconst customerId = \"customerId\"\n\tconst userGroupsId = \"userGroupsId\"\n\tconst user = {\n\t\t_id: \"userId\",\n\t\tcustomer: customerId,\n\t} as User\n\n\tlet allUserGroupInfos: Array<GroupInfo>\n\n\tlet entityClientMock: EntityClient\n\tlet counterFacadeMock: CounterFacade\n\tlet loginsMock: LoginController\n\tlet fileControllerMock: FileController\n\n\to.beforeEach(function () {\n\t\tallUserGroupInfos = []\n\n\t\tloginsMock = object()\n\t\twhen(loginsMock.getUserController()).thenReturn({\n\t\t\tuser,\n\t\t\t// we only test the case where we are global admin for now\n\t\t\tisGlobalAdmin: () => true,\n\t\t})\n\n\t\tentityClientMock = object()\n\t\twhen(entityClientMock.load(CustomerTypeRef, customerId)).thenResolve({\n\t\t\tuserGroups: userGroupsId,\n\t\t})\n\t\twhen(entityClientMock.loadAll(GroupInfoTypeRef, userGroupsId)).thenResolve(allUserGroupInfos)\n\n\t\tcounterFacadeMock = object()\n\t\tfileControllerMock = object()\n\t})\n\n\to(\"should load and return correct user data \", async function () {\n\t\tconst oneCreated = new Date(1655294400000) // 2022-06-15 12:00:00 GMT+0\n\t\tconst oneDeleted = new Date(1655469000000) // \"2022-06-17 12:30:00 GMT +0\"\n\t\tconst twoCreated = new Date(1657886400000) // \"2022-07-15 12:00:00 GMT+0\"\n\t\taddUser(\"my name\", \"mail1@mail.com\", oneCreated, oneDeleted, 100, [\"alias1@alias.com\", \"alias2@alias.com\"], \"user1\", \"group1\", \"storage1\")\n\t\taddUser(\"eman ym\", \"mail2@mail.com\", twoCreated, null, null, [], \"user2\", \"group2\", \"storage2\")\n\n\t\twhen(counterFacadeMock.readAllCustomerCounterValues(CounterType.UserStorageLegacy, customerId)).thenResolve([\n\t\t\tcreateTestEntity(CounterValueTypeRef, { counterId: \"storage1\", value: \"100\" }),\n\t\t\tcreateTestEntity(CounterValueTypeRef, { counterId: \"wrongId\", value: \"42\" }), // some other counter\n\t\t\t// missing counter for second user!\n\t\t])\n\n\t\tconst [first, second] = await loadUserExportData(entityClientMock, loginsMock, counterFacadeMock)\n\n\t\to(first.name).equals(\"my name\")\n\t\to(second.name).equals(\"eman ym\")\n\n\t\to(first.mailAddress).equals(\"mail1@mail.com\")\n\t\to(second.mailAddress).equals(\"mail2@mail.com\")\n\n\t\to(formatDateTimeUTC(first.created)).equals(\"20220615T120000Z\")\n\t\to(formatDateTimeUTC(second.created)).equals(\"20220715T120000Z\")\n\n\t\to(formatDateTimeUTC(first.deleted!)).equals(\"20220617T123000Z\")\n\t\to(second.deleted).equals(null)\n\n\t\to(first.usedStorage).equals(100)\n\t\to(second.usedStorage).equals(0)\n\n\t\to(first.aliases).deepEquals([\"alias1@alias.com\", \"alias2@alias.com\"])\n\t\to(second.aliases).deepEquals([])\n\t})\n\n\tfunction addUser(name, mailAddress, created, deleted, usedStorage, aliases, userId, groupId, storageCounterId) {\n\t\tallUserGroupInfos.push({\n\t\t\tname,\n\t\t\tmailAddress,\n\t\t\tcreated,\n\t\t\tdeleted,\n\t\t\tmailAddressAliases: aliases.map((alias) => ({ mailAddress: alias })),\n\t\t\tgroup: groupId,\n\t\t} as GroupInfo)\n\n\t\tconst group = { storageCounter: storageCounterId } as Group\n\t\twhen(entityClientMock.load(GroupTypeRef, groupId)).thenResolve({ storageCounter: group.storageCounter })\n\t}\n})\n","import { EntityClient } from \"../../../api/common/EntityClient.js\"\nimport { createSecondFactor, GroupInfoTypeRef, U2fRegisteredDevice, User } from \"../../../api/entities/sys/TypeRefs.js\"\nimport { validateWebauthnDisplayName, WebauthnClient } from \"../../../misc/2fa/webauthn/WebauthnClient.js\"\nimport { TotpSecret } from \"@tutao/tutanota-crypto\"\nimport { assertNotNull, LazyLoaded, neverNull } from \"@tutao/tutanota-utils\"\nimport { isApp } from \"../../../api/common/Env.js\"\nimport { LanguageViewModel, TranslationKey } from \"../../../misc/LanguageViewModel.js\"\nimport { SecondFactorType } from \"../../../api/common/TutanotaConstants.js\"\nimport { ProgrammingError } from \"../../../api/common/error/ProgrammingError.js\"\nimport { LoginFacade } from \"../../../api/worker/facades/LoginFacade.js\"\nimport { UserError } from \"../../../api/main/UserError.js\"\nimport { htmlSanitizer } from \"../../../misc/HtmlSanitizer.js\"\nimport QRCode from \"qrcode-svg\"\n\nexport const enum VerificationStatus {\n\tInitial = \"Initial\",\n\tProgress = \"Progress\",\n\tFailed = \"Failed\",\n\tSuccess = \"Success\",\n}\n\nexport const DEFAULT_U2F_NAME = \"U2F\"\nexport const DEFAULT_TOTP_NAME = \"TOTP\"\n\nexport enum NameValidationStatus {\n\tValid,\n\tInvalid,\n}\n\nexport const SecondFactorTypeToNameTextId: Record<SecondFactorType, TranslationKey> = Object.freeze({\n\t[SecondFactorType.totp]: \"totpAuthenticator_label\",\n\t[SecondFactorType.u2f]: \"u2fSecurityKey_label\",\n\t[SecondFactorType.webauthn]: \"u2fSecurityKey_label\",\n})\n\nexport class SecondFactorEditModel {\n\ttotpCode: string = \"\"\n\tselectedType: SecondFactorType\n\tname: string = \"\"\n\tnameValidationStatus: NameValidationStatus = NameValidationStatus.Valid\n\tverificationStatus: VerificationStatus = VerificationStatus.Initial\n\treadonly otpInfo: LazyLoaded<{\n\t\tqrCodeSvg: string | null\n\t\turl: string\n\t}>\n\tprivate u2fRegistrationData: U2fRegisteredDevice | null = null\n\n\tconstructor(\n\t\tprivate readonly entityClient: EntityClient,\n\t\tprivate readonly user: User,\n\t\tprivate readonly webauthnClient: WebauthnClient,\n\t\treadonly totpKeys: TotpSecret,\n\t\tprivate readonly webauthnSupported: boolean,\n\t\tprivate readonly loginFacade: LoginFacade,\n\t\tprivate readonly hostname: string,\n\t\tprivate readonly domainConfig: DomainConfig,\n\t\tprivate readonly updateViewCallback: () => void,\n\t\tprivate readonly token?: string,\n\t) {\n\t\tthis.selectedType = webauthnSupported ? SecondFactorType.webauthn : SecondFactorType.totp\n\t\tthis.setDefaultNameIfNeeded()\n\t\tthis.otpInfo = new LazyLoaded(async () => {\n\t\t\tconst url = await this.getOtpAuthUrl(this.totpKeys.readableKey)\n\n\t\t\tconst totpQRCodeSvg = isApp()\n\t\t\t\t? null\n\t\t\t\t: htmlSanitizer.sanitizeSVG(\n\t\t\t\t\t\tnew QRCode({\n\t\t\t\t\t\t\theight: 150,\n\t\t\t\t\t\t\twidth: 150,\n\t\t\t\t\t\t\tcontent: url,\n\t\t\t\t\t\t\tpadding: 2,\n\t\t\t\t\t\t\t// We don't want <xml> around the content, we actually enforce <svg> namespace, and we want it to be parsed as such.\n\t\t\t\t\t\t\txmlDeclaration: false,\n\t\t\t\t\t\t}).svg(),\n\t\t\t\t  ).html\n\n\t\t\treturn {\n\t\t\t\tqrCodeSvg: totpQRCodeSvg,\n\t\t\t\turl,\n\t\t\t}\n\t\t})\n\n\t\tthis.otpInfo.getAsync().then(() => this.updateViewCallback())\n\t}\n\n\t/**\n\t * if the user cancels the second factor creation while it's already talking to webAuthn, we want to cancel that\n\t * process before closing the dialog.\n\t */\n\tabort() {\n\t\t// noinspection JSIgnoredPromiseFromCall\n\t\tthis.webauthnClient.abortCurrentOperation()\n\t}\n\n\t/**\n\t * validation message for use in dialog validators\n\t */\n\tvalidationMessage(): TranslationKey | null {\n\t\treturn this.nameValidationStatus === NameValidationStatus.Valid ? null : \"textTooLong_msg\"\n\t}\n\n\t/**\n\t * get a list of supported second factor types\n\t */\n\tgetFactorTypesOptions(): Array<SecondFactorType> {\n\t\tconst options: Array<SecondFactorType> = []\n\t\toptions.push(SecondFactorType.totp)\n\n\t\tif (this.webauthnSupported) {\n\t\t\toptions.push(SecondFactorType.webauthn)\n\t\t}\n\t\treturn options\n\t}\n\n\t/**\n\t * call when the selected second factor type changes\n\t */\n\tonTypeSelected(newValue: SecondFactorType) {\n\t\tthis.selectedType = newValue\n\t\tthis.verificationStatus = newValue === SecondFactorType.webauthn ? VerificationStatus.Initial : VerificationStatus.Progress\n\n\t\tthis.setDefaultNameIfNeeded()\n\t\tthis.updateNameValidation()\n\n\t\tif (newValue !== SecondFactorType.webauthn) {\n\t\t\t// noinspection JSIgnoredPromiseFromCall\n\t\t\tthis.webauthnClient.abortCurrentOperation()\n\t\t}\n\t}\n\n\t/**\n\t * call when the display name of the second factor instance changes\n\t */\n\tonNameChange(newValue: string): void {\n\t\tthis.name = newValue\n\t\tthis.updateNameValidation()\n\t}\n\n\t/**\n\t * call when the validation code for setting up TOTP changes\n\t */\n\tasync onTotpValueChange(newValue: string) {\n\t\tthis.totpCode = newValue\n\t\tlet cleanedValue = newValue.replace(/ /g, \"\")\n\n\t\tif (cleanedValue.length === 6) {\n\t\t\tconst expectedCode = Number(cleanedValue)\n\t\t\tthis.verificationStatus = await this.tryCodes(expectedCode, this.totpKeys.key)\n\t\t} else {\n\t\t\tthis.verificationStatus = VerificationStatus.Progress\n\t\t}\n\t\tthis.updateViewCallback()\n\t}\n\n\t/**\n\t * re-validates the input and makes the server calls to actually create a second factor\n\t * returns the user that the second factor was created in case any follow-up operations\n\t * are needed\n\t */\n\tasync save(): Promise<User | null> {\n\t\tthis.setDefaultNameIfNeeded()\n\t\tif (this.selectedType === SecondFactorType.webauthn) {\n\t\t\t// Prevent starting in parallel\n\t\t\tif (this.verificationStatus === VerificationStatus.Progress) {\n\t\t\t\treturn null\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tthis.u2fRegistrationData = await this.webauthnClient.register(this.user._id, this.name)\n\t\t\t\tthis.verificationStatus = VerificationStatus.Success\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log(\"Webauthn registration failed: \", e)\n\t\t\t\tthis.u2fRegistrationData = null\n\t\t\t\tthis.verificationStatus = VerificationStatus.Failed\n\t\t\t\treturn null\n\t\t\t}\n\t\t}\n\n\t\tthis.updateViewCallback()\n\n\t\tif (this.selectedType === SecondFactorType.u2f) {\n\t\t\tthrow new ProgrammingError(`invalid factor type: ${this.selectedType}`)\n\t\t}\n\n\t\tconst sf = createSecondFactor({\n\t\t\t_ownerGroup: this.user._ownerGroup!,\n\t\t\tname: this.name,\n\t\t\ttype: this.selectedType,\n\t\t\totpSecret: null,\n\t\t\tu2f: null,\n\t\t})\n\n\t\tif (this.selectedType === SecondFactorType.webauthn) {\n\t\t\tif (this.verificationStatus !== VerificationStatus.Success) {\n\t\t\t\tthrow new UserError(\"unrecognizedU2fDevice_msg\")\n\t\t\t} else {\n\t\t\t\tsf.u2f = this.u2fRegistrationData\n\t\t\t}\n\t\t} else if (this.selectedType === SecondFactorType.totp) {\n\t\t\tif (this.verificationStatus === VerificationStatus.Failed) {\n\t\t\t\tthrow new UserError(\"totpCodeWrong_msg\")\n\t\t\t} else if (this.verificationStatus === VerificationStatus.Initial || this.verificationStatus === VerificationStatus.Progress) {\n\t\t\t\tthrow new UserError(\"totpCodeEnter_msg\")\n\t\t\t} else {\n\t\t\t\tsf.otpSecret = this.totpKeys.key\n\t\t\t}\n\t\t}\n\t\tawait this.entityClient.setup(assertNotNull(this.user.auth).secondFactors, sf, this.token ? { token: this.token } : undefined)\n\t\treturn this.user\n\t}\n\n\t/** see https://github.com/google/google-authenticator/wiki/Key-Uri-Format */\n\tprivate async getOtpAuthUrl(secret: string): Promise<string> {\n\t\tconst userGroupInfo = await this.entityClient.load(GroupInfoTypeRef, this.user.userGroup.groupInfo)\n\t\tconst issuer = this.domainConfig.firstPartyDomain ? \"Tutanota\" : this.hostname\n\t\tconst account = encodeURI(issuer + \":\" + neverNull(userGroupInfo.mailAddress))\n\t\tconst url = new URL(\"otpauth://totp/\" + account)\n\t\turl.searchParams.set(\"issuer\", issuer)\n\t\turl.searchParams.set(\"secret\", secret.replace(/ /g, \"\"))\n\t\turl.searchParams.set(\"algorithm\", \"SHA1\")\n\t\turl.searchParams.set(\"digits\", \"6\")\n\t\turl.searchParams.set(\"period\", \"30\")\n\t\treturn url.toString()\n\t}\n\n\t/**\n\t * re-check if the given display name is valid for the current second factor type\n\t */\n\tprivate updateNameValidation(): void {\n\t\tthis.nameValidationStatus =\n\t\t\tthis.selectedType !== SecondFactorType.webauthn || validateWebauthnDisplayName(this.name)\n\t\t\t\t? NameValidationStatus.Valid\n\t\t\t\t: NameValidationStatus.Invalid\n\t}\n\n\t/**\n\t * empty names sometimes lead to errors, so we make sure we have something semi-sensible set in the field.\n\t */\n\tprivate setDefaultNameIfNeeded() {\n\t\tconst trimmed = this.name.trim()\n\t\tif (this.selectedType === SecondFactorType.webauthn && (trimmed === DEFAULT_TOTP_NAME || trimmed.length === 0)) {\n\t\t\tthis.name = DEFAULT_U2F_NAME\n\t\t} else if (this.selectedType === SecondFactorType.totp && (trimmed === DEFAULT_U2F_NAME || trimmed.length === 0)) {\n\t\t\tthis.name = DEFAULT_TOTP_NAME\n\t\t}\n\t}\n\n\t/**\n\t * check if the given validation code is the current, next or last code for the TOTP\n\t */\n\tprivate async tryCodes(expectedCode: number, key: Uint8Array): Promise<VerificationStatus> {\n\t\tconst time = Math.floor(new Date().getTime() / 1000 / 30)\n\t\t// We try out 3 codes: current minute, 30 seconds before and 30 seconds after.\n\t\t// If at least one of them works, we accept it.\n\t\tconst number = await this.loginFacade.generateTotpCode(time, key)\n\n\t\tif (number === expectedCode) {\n\t\t\treturn VerificationStatus.Success\n\t\t}\n\n\t\tconst number2 = await this.loginFacade.generateTotpCode(time - 1, key)\n\n\t\tif (number2 === expectedCode) {\n\t\t\treturn VerificationStatus.Success\n\t\t}\n\n\t\tconst number3 = await this.loginFacade.generateTotpCode(time + 1, key)\n\n\t\tif (number3 === expectedCode) {\n\t\t\treturn VerificationStatus.Success\n\t\t}\n\n\t\treturn VerificationStatus.Failed\n\t}\n}\n","import o from \"@tutao/otest\"\nimport { function as tdfn, matchers, object, verify, when } from \"testdouble\"\nimport {\n\tDEFAULT_TOTP_NAME,\n\tDEFAULT_U2F_NAME,\n\tNameValidationStatus,\n\tSecondFactorEditModel,\n} from \"../../../../../src/common/settings/login/secondfactor/SecondFactorEditModel.js\"\nimport { EntityClient } from \"../../../../../src/common/api/common/EntityClient.js\"\nimport { WebauthnClient } from \"../../../../../src/common/misc/2fa/webauthn/WebauthnClient.js\"\nimport { GroupInfoTypeRef, User } from \"../../../../../src/common/api/entities/sys/TypeRefs.js\"\nimport { TotpSecret, TotpVerifier } from \"@tutao/tutanota-crypto\"\nimport { noOp } from \"@tutao/tutanota-utils\"\nimport { LoginFacade } from \"../../../../../src/common/api/worker/facades/LoginFacade.js\"\nimport { SecondFactorType } from \"../../../../../src/common/api/common/TutanotaConstants.js\"\nimport { createTestEntity, domainConfigStub } from \"../../../TestUtils.js\"\n\nfunction createTotpKeys(): TotpSecret {\n\tconst key = new Uint8Array(16)\n\tconst readableKey = TotpVerifier.readableKey(key)\n\treturn { key, readableKey }\n}\n\no.spec(\"SecondFactorEditModel\", function () {\n\tlet entityClientMock: EntityClient\n\tlet userMock: User\n\tlet webAuthnClientMock: WebauthnClient\n\tlet loginFacadeMock: LoginFacade\n\tconst totpKeys = createTotpKeys()\n\tconst validName = \"myU2Fkey\"\n\t// this is too long if you convert it to bytes\n\tconst invalidName = \"🏳️‍🌈🏳️‍🌈🏳️‍🌈🏳️‍🌈🏴‍☠️🏴‍☠️🏴‍☠️🏴‍☠️🏴‍☠️\"\n\tconst hostname = \"testhostname\"\n\n\tasync function createSecondFactorModel(params: any): Promise<SecondFactorEditModel> {\n\t\tconst model = new SecondFactorEditModel(\n\t\t\tparams.entityClient ?? entityClientMock,\n\t\t\tparams.user ?? userMock,\n\t\t\tparams.webAuthnClient ?? webAuthnClientMock,\n\t\t\ttotpKeys,\n\t\t\tparams.webauthnSupported ?? true,\n\t\t\tloginFacadeMock,\n\t\t\thostname,\n\t\t\tdomainConfigStub,\n\t\t\tparams.updateView ?? noOp,\n\t\t)\n\t\tawait model.otpInfo.getAsync()\n\t\treturn model\n\t}\n\n\to.beforeEach(function () {\n\t\tentityClientMock = object()\n\t\twhen(entityClientMock.load(GroupInfoTypeRef, matchers.anything())).thenResolve(\n\t\t\tcreateTestEntity(GroupInfoTypeRef, {\n\t\t\t\tmailAddress: \"testaddress@tutanota.de\",\n\t\t\t}),\n\t\t)\n\t\tuserMock = object()\n\t\twebAuthnClientMock = object()\n\t\tloginFacadeMock = object()\n\t})\n\n\to.spec(\"getFactorTypesOptions\", function () {\n\t\to(\"if webauthn is not supported, we get only one option\", async function () {\n\t\t\tconst model = await createSecondFactorModel({ webauthnSupported: false })\n\t\t\tconst options = model.getFactorTypesOptions()\n\t\t\to(options.length).equals(1)\n\t\t\to(options.find((o) => o === SecondFactorType.webauthn)).equals(undefined)\n\t\t})\n\n\t\to(\"if webauthn is supported, we get it as an option\", async function () {\n\t\t\tconst model = await createSecondFactorModel({})\n\t\t\tconst options = model.getFactorTypesOptions()\n\t\t\to(options.filter((o) => o === SecondFactorType.webauthn).length).equals(1)\n\t\t})\n\t})\n\n\to.spec(\"onTypeChange\", function () {\n\t\to(\"when the type changes, we set the default name if necessary\", async function () {\n\t\t\tconst model = await createSecondFactorModel({})\n\t\t\t// empty name gets replaced if we change totp->u2f\n\t\t\tmodel.onTypeSelected(SecondFactorType.totp)\n\t\t\tmodel.onNameChange(\"\")\n\t\t\tmodel.onTypeSelected(SecondFactorType.webauthn)\n\t\t\to(model.nameValidationStatus).equals(NameValidationStatus.Valid)\n\t\t\to(model.name).equals(DEFAULT_U2F_NAME)\n\n\t\t\t// empty name gets replaced if we change u2f->totp\n\t\t\tmodel.onNameChange(\"\")\n\t\t\tmodel.onTypeSelected(SecondFactorType.totp)\n\t\t\to(model.nameValidationStatus).equals(NameValidationStatus.Valid)\n\t\t\to(model.name).equals(DEFAULT_TOTP_NAME)\n\n\t\t\t// default name gets replaced if we change type\n\t\t\tmodel.onTypeSelected(SecondFactorType.webauthn)\n\t\t\to(model.nameValidationStatus).equals(NameValidationStatus.Valid)\n\t\t\to(model.name).equals(DEFAULT_U2F_NAME)\n\t\t})\n\n\t\to(\"when name too long changing the factor updates name validation status\", async function () {\n\t\t\tconst model = await createSecondFactorModel({})\n\n\t\t\tmodel.onTypeSelected(SecondFactorType.totp)\n\t\t\tmodel.onNameChange(invalidName)\n\t\t\to(model.nameValidationStatus).equals(NameValidationStatus.Valid)\n\n\t\t\t// WEBAUTHN allows names up to 64 bytes\n\t\t\tmodel.onTypeSelected(SecondFactorType.webauthn)\n\t\t\to(model.nameValidationStatus).equals(NameValidationStatus.Invalid)\n\t\t\to(model.name).equals(invalidName)\n\n\t\t\t// when the name gets shorter, all is well\n\t\t\tmodel.onNameChange(validName)\n\t\t\to(model.nameValidationStatus).equals(NameValidationStatus.Valid)\n\n\t\t\t// long Name is valid for TOTP\n\t\t\tmodel.onNameChange(invalidName)\n\t\t\tmodel.onTypeSelected(SecondFactorType.totp)\n\t\t\to(model.nameValidationStatus).equals(NameValidationStatus.Valid)\n\t\t})\n\t})\n\n\to.spec(\"saving a second factor\", function () {\n\t\to(\"saving a u2f key, happy path\", async function () {\n\t\t\tconst redrawMock = tdfn(\"redrawMock\")\n\t\t\twhen(entityClientMock.setup(matchers.anything(), matchers.anything(), matchers.anything())).thenResolve(\"randomID\")\n\t\t\twhen(webAuthnClientMock.register(matchers.anything(), matchers.anything())).thenResolve({})\n\t\t\tconst model = await createSecondFactorModel({ updateView: redrawMock })\n\n\t\t\tmodel.onTypeSelected(SecondFactorType.webauthn)\n\t\t\tmodel.onNameChange(\" \\t \")\n\t\t\tconst user = await model.save()\n\t\t\to(user).deepEquals(userMock)\n\n\t\t\tverify(redrawMock(), { times: 2 })\n\t\t\tverify(entityClientMock.setup(matchers.anything(), matchers.anything(), matchers.anything()), { times: 1 })\n\t\t})\n\n\t\to(\"saving a totp key, happy path\", async function () {\n\t\t\tconst redrawMock = tdfn(\"redrawMock\")\n\t\t\twhen(entityClientMock.setup(matchers.anything(), matchers.anything(), matchers.anything())).thenResolve(\"randomID\")\n\t\t\twhen(webAuthnClientMock.register(matchers.anything(), matchers.anything())).thenResolve({})\n\t\t\twhen(loginFacadeMock.generateTotpCode(matchers.anything(), matchers.anything())).thenResolve(123456)\n\t\t\tconst model = await createSecondFactorModel({ updateView: redrawMock })\n\n\t\t\tmodel.onTypeSelected(SecondFactorType.totp)\n\t\t\tmodel.onNameChange(\" \\t \")\n\t\t\tawait model.onTotpValueChange(\"123456\")\n\t\t\tconst user = await model.save()\n\t\t\to(user).deepEquals(userMock)\n\n\t\t\tverify(redrawMock(), { times: 3 })\n\t\t\tverify(entityClientMock.setup(matchers.anything(), matchers.anything(), matchers.anything()), { times: 1 })\n\t\t})\n\t})\n\n\to.spec(\"TOTP value changed\", function () {\n\t\to(\"don't generate totp codes when the validation code has the wrong length\", async function () {\n\t\t\tconst model = await createSecondFactorModel({})\n\t\t\tawait model.onTotpValueChange(\"1234567\")\n\t\t\tverify(loginFacadeMock.generateTotpCode(matchers.anything(), matchers.anything()), { times: 0 })\n\t\t})\n\t})\n})\n","import o from \"@tutao/otest\"\nimport type { ScheduledTimeoutId, Scheduler, SystemInterval, SystemTimeout } from \"../../../src/common/api/common/utils/Scheduler.js\"\nimport { SchedulerImpl, SET_TIMEOUT_LIMIT } from \"../../../src/common/api/common/utils/Scheduler.js\"\nimport type { Thunk } from \"@tutao/tutanota-utils\"\nimport { assertNotNull, downcast } from \"@tutao/tutanota-utils\"\nimport { DateTime, Duration } from \"luxon\"\nimport { DateProvider } from \"../../../src/common/api/common/DateProvider.js\"\nimport { spy } from \"@tutao/tutanota-test-utils\"\n\no.spec(\"Scheduler\", function () {\n\tlet dateProvider: DateProvider\n\tlet scheduler: SchedulerImpl\n\tlet timeoutMock: TimeoutMock\n\tlet now\n\to.beforeEach(function () {\n\t\tnow = DateTime.fromISO(\"2020-04-21T22:00:00\")\n\t\tdateProvider = {\n\t\t\tnow: () => now.toMillis(),\n\t\t\ttimeZone: () => \"Europe/Berlin\",\n\t\t}\n\t\ttimeoutMock = new TimeoutMock()\n\t\tscheduler = new SchedulerImpl(dateProvider, downcast<SystemTimeout>(timeoutMock), new IntervalMock())\n\t})\n\to(\"scheduleAt close\", function () {\n\t\tconst cb = spy()\n\t\tconst duration = Duration.fromObject({\n\t\t\tminutes: 10,\n\t\t})\n\t\tconst scheduleTime = now.plus(duration)\n\t\tscheduler.scheduleAt(cb, scheduleTime.toJSDate())\n\t\to(Array.from(timeoutMock.scheduledAfter.keys())).deepEquals([duration.toMillis()])\n\t\to(cb.callCount).equals(0)(\"Not called earlier\")\n\t\tassertNotNull(timeoutMock.scheduledAfter.get(duration.toMillis())).thunk()\n\t\to(cb.callCount).equals(1)(\"Was called after timeout\")\n\t})\n\to(\"scheduleAt far\", function () {\n\t\tconst cb = spy()\n\t\tconst duration = Duration.fromObject({\n\t\t\tmilliseconds: SET_TIMEOUT_LIMIT + 2000,\n\t\t})\n\t\tconst scheduleTime = now.plus(duration)\n\t\tscheduler.scheduleAt(cb, scheduleTime.toJSDate())\n\t\to(Array.from(timeoutMock.scheduledAfter.keys())).deepEquals([SET_TIMEOUT_LIMIT])\n\t\to(cb.callCount).equals(0)(\"Not called earlier\")\n\t\tconst intermediateTimeout = assertNotNull(timeoutMock.scheduledAfter.get(SET_TIMEOUT_LIMIT))\n\t\ttimeoutMock.scheduledAfter.clear()\n\t\tnow = now.plus({\n\t\t\tmilliseconds: SET_TIMEOUT_LIMIT,\n\t\t})\n\t\tintermediateTimeout.thunk()\n\t\t// The remaining time\n\t\to(Array.from(timeoutMock.scheduledAfter.keys())).deepEquals([2000])\n\t\to(cb.callCount).equals(0)(\"Not called after later\")\n\t\tconst newTimeout = assertNotNull(timeoutMock.scheduledAfter.get(2000))\n\t\tnewTimeout.thunk()\n\t\to(cb.callCount).equals(1)(\"Was called after timeout\")\n\t})\n\to(\"scheduleAt far, cancelled intermediate timeout\", function () {\n\t\tconst cb = spy()\n\t\tconst duration = Duration.fromObject({\n\t\t\tmilliseconds: SET_TIMEOUT_LIMIT + 2000,\n\t\t})\n\t\tconst scheduleTime = now.plus(duration)\n\t\tconst scheduledId = scheduler.scheduleAt(cb, scheduleTime.toJSDate())\n\t\to(Array.from(timeoutMock.scheduledAfter.keys())).deepEquals([SET_TIMEOUT_LIMIT])\n\t\to(cb.callCount).equals(0)(\"Not called earlier\")\n\t\tconst intermediateTimeout = assertNotNull(timeoutMock.scheduledAfter.get(SET_TIMEOUT_LIMIT))\n\t\tscheduler.unscheduleTimeout(scheduledId)\n\t\to(Array.from(timeoutMock.cancelled.values())).deepEquals([intermediateTimeout.id])\n\t})\n\to(\"scheduleAt far, cancelled final timeout\", function () {\n\t\tconst cb = spy()\n\t\tconst duration = Duration.fromObject({\n\t\t\tmilliseconds: SET_TIMEOUT_LIMIT + 2000,\n\t\t})\n\t\tconst scheduleTime = now.plus(duration)\n\t\tconst scheduledId = scheduler.scheduleAt(cb, scheduleTime.toJSDate())\n\t\to(Array.from(timeoutMock.scheduledAfter.keys())).deepEquals([SET_TIMEOUT_LIMIT])\n\t\to(cb.callCount).equals(0)(\"Not called earlier\")\n\t\tconst intermediateTimeout = assertNotNull(timeoutMock.scheduledAfter.get(SET_TIMEOUT_LIMIT))\n\t\ttimeoutMock.scheduledAfter.clear()\n\t\tnow = now.plus({\n\t\t\tmilliseconds: SET_TIMEOUT_LIMIT,\n\t\t})\n\t\tintermediateTimeout.thunk()\n\t\t// The remaining time\n\t\to(Array.from(timeoutMock.scheduledAfter.keys())).deepEquals([2000])\n\t\tconst newTimeout = assertNotNull(timeoutMock.scheduledAfter.get(2000))\n\t\tscheduler.unscheduleTimeout(scheduledId)\n\t\to(cb.callCount).equals(0)(\"Not called after later\")\n\t\to(Array.from(timeoutMock.cancelled)).deepEquals([newTimeout.id])\n\t})\n})\ntype IdThunk = {\n\tid: ScheduledTimeoutId\n\tthunk: Thunk\n}\n\nclass TimeoutMock implements SystemTimeout {\n\talarmId: number\n\tscheduledAfter: Map<number, IdThunk>\n\tcancelled: Set<TimeoutID>\n\n\tconstructor() {\n\t\tthis.alarmId = 0\n\t\tthis.scheduledAfter = new Map()\n\t\tthis.cancelled = new Set()\n\t\tthis.setTimeout.bind(this)\n\t\tthis.clearTimeout.bind(this)\n\t}\n\n\tsetTimeout(callback, ms): ScheduledTimeoutId {\n\t\tconst id = this._incAlarmId()\n\n\t\tthis.scheduledAfter.set(ms, {\n\t\t\tid,\n\t\t\tthunk: callback,\n\t\t})\n\t\treturn id\n\t}\n\n\tclearTimeout(id) {\n\t\tthis.cancelled.add(id)\n\t}\n\n\t_incAlarmId() {\n\t\treturn downcast<ScheduledTimeoutId>(this.alarmId++)\n\t}\n}\n\nclass IntervalMock implements SystemInterval {\n\tsetInterval(cb, ms): number {\n\t\tthrow new Error(\"Not implemented\")\n\t}\n\n\tclearInterval() {\n\t\tthrow new Error(\"Not implemented\")\n\t}\n}\n","import o from \"@tutao/otest\"\nimport {\n\tfullNameToFirstAndLastName,\n\tgetCleanedMailAddress,\n\tmailAddressToFirstAndLastName,\n\tparseMailtoUrl,\n\tstringToNameAndMailAddress,\n} from \"../../../../src/common/misc/parsing/MailAddressParser.js\"\nimport { isMailAddress } from \"../../../../src/common/misc/FormatValidator.js\"\n\no.spec(\"MailAddressParser\", function () {\n\to(\"parseMailtoUrl single address\", function () {\n\t\tlet { recipients, subject, body } = parseMailtoUrl(\"mailto:chris@example.com\")\n\t\to(recipients.to!).deepEquals([{ name: \"\", address: \"chris@example.com\" }])\n\t\to(subject).equals(null)\n\t\to(body).equals(null)\n\t})\n\n\to(\"parseMailtoUrl with subject and body\", function () {\n\t\tlet { recipients, subject, body, attach } = parseMailtoUrl(\n\t\t\t\"mailto:someone@example.com?subject=This%20is%20the%20subject&cc=someone_else@example.com&body=This%20is%20the%20body%0AKind regards%20someone\",\n\t\t)\n\t\to(recipients.to!).deepEquals([{ name: \"\", address: \"someone@example.com\" }])\n\t\to(recipients.cc!).deepEquals([{ name: \"\", address: \"someone_else@example.com\" }])\n\t\to(subject).equals(\"This is the subject\")\n\t\to(attach).equals(null)\n\t\to(body).equals(\"This is the body<br>Kind regards someone\")\n\t})\n\n\to(\"parseMailtoUrl with multiple recipients\", function () {\n\t\tlet { recipients, body } = parseMailtoUrl(\n\t\t\t\"mailto:joe1@example.com,joe2@example.com?to=joe3@example.com&cc=bob1@example.com%2C%20bob2@example.com&body=hello&bcc=carol1@example.com%2C%20carol2@example.com\",\n\t\t)\n\t\to((recipients.to || []).map((to) => to.address)).deepEquals([\"joe1@example.com\", \"joe2@example.com\", \"joe3@example.com\"])\n\t\to((recipients.cc || []).map((cc) => cc.address)).deepEquals([\"bob1@example.com\", \"bob2@example.com\"])\n\t\to((recipients.bcc || []).map((bcc) => bcc.address)).deepEquals([\"carol1@example.com\", \"carol2@example.com\"])\n\t\to(body).equals(\"hello\")\n\t})\n\n\to(\"parseMailtoUrl to lower case\", function () {\n\t\tlet { recipients, subject, body } = parseMailtoUrl(\n\t\t\t\"\tmailto:matthias@test.de?CC=matthias@test.de&BCC=matthias@test.de&Subject=Blah&Body=What%3F%20Everything%20encoded%20in%20mailto%3F\",\n\t\t)\n\t\to((recipients.to || []).map((to) => to.address)).deepEquals([\"matthias@test.de\"])\n\t\to((recipients.cc || []).map((cc) => cc.address)).deepEquals([\"matthias@test.de\"])\n\t\to((recipients.bcc || []).map((bcc) => bcc.address)).deepEquals([\"matthias@test.de\"])\n\t\to(subject).equals(\"Blah\")\n\t\to(body).equals(\"What? Everything encoded in mailto?\")\n\t})\n\n\to(\"parseMailtoUrl with full addressing scheme\", function () {\n\t\tlet { recipients } = parseMailtoUrl(\"mailto:Fritz%20Eierschale%20%3Ceierschale@irgend.wo%3E\")\n\t\to(recipients.to!).deepEquals([\n\t\t\t{\n\t\t\t\taddress: \"eierschale@irgend.wo\",\n\t\t\t\tname: \"Fritz Eierschale\",\n\t\t\t},\n\t\t])\n\t})\n\n\to(\"parseMailtoUrl with attachments\", function () {\n\t\tlet { attach, body } = parseMailtoUrl(\n\t\t\t\"mailto:a@b.c?attach=file:///home/user/cat.jpg&body=hello%20world&attach=file:///home/user/dog%20man.jpg&attach=/home/user/pig.jpg\",\n\t\t)\n\t\to(attach!).deepEquals([\"file:///home/user/cat.jpg\", \"file:///home/user/dog man.jpg\", \"/home/user/pig.jpg\"])\n\t\to(body).equals(\"hello world\")\n\t})\n\n\to(\"parseMailtoUrl with empty params\", function () {\n\t\tlet { attach, body, recipients } = parseMailtoUrl(\"mailto:?attach=&body=&bcc=\")\n\t\to(attach!).deepEquals([\"\"])\n\t\to(recipients).deepEquals({\n\t\t\tto: undefined,\n\t\t\tcc: undefined,\n\t\t\tbcc: [],\n\t\t})\n\t\to(body).equals(\"\")\n\t})\n\n\to(\"parseMailtoUrl without params\", function () {\n\t\tlet { attach, body, subject, recipients } = parseMailtoUrl(\"mailto:\")\n\t\to(attach).equals(null)\n\t\to(body).equals(null)\n\t\to(subject).equals(null)\n\t\to(recipients).deepEquals({\n\t\t\tto: undefined,\n\t\t\tcc: undefined,\n\t\t\tbcc: undefined,\n\t\t})\n\t})\n\n\to(\"parseMailtoUrl with bogus params\", function () {\n\t\tlet { bogus } = parseMailtoUrl(\"mailto:?bogus=hello\") as any\n\t\to(bogus).equals(undefined)\n\t})\n\n\to(\"isStrictMailAddress\", function () {\n\t\t// test valid adresses\n\t\to(isMailAddress(\"a@b.de\", true)).equals(true)\n\t\to(isMailAddress(\"a@hello.c\", true)).equals(true)\n\t\to(isMailAddress(\"a.b@hello.de\", true)).equals(true)\n\t\t// test uppercase\n\t\to(isMailAddress(\"A@b.hello.de\", true)).equals(true)\n\t\t// test missing parts\n\t\to(isMailAddress(\"@b.hello.de\", true)).equals(false)\n\t\to(isMailAddress(\"batello.de\", true)).equals(false)\n\t\to(isMailAddress(\"ba@tello\", true)).equals(false)\n\t\to(isMailAddress(\"@hello.de\", true)).equals(false)\n\t\to(isMailAddress(\"a@@hello.de\", true)).equals(false)\n\t\to(isMailAddress(\"a@h@hello.de\", true)).equals(false)\n\t\to(isMailAddress(\"aa@.de\", true)).equals(false)\n\t\to(isMailAddress(\"aa@\", true)).equals(false)\n\t\to(isMailAddress(\"aa@.\", true)).equals(false)\n\t\t// test empty adresses\n\t\to(isMailAddress(\"\", true)).equals(false)\n\t\to(isMailAddress(\" \", true)).equals(false)\n\t\t// test space at any place\n\t\to(isMailAddress(\" ab@cd.de\", true)).equals(false)\n\t\to(isMailAddress(\"a b@cb.de\", true)).equals(false)\n\t\to(isMailAddress(\"ab @cb.de\", true)).equals(false)\n\t\to(isMailAddress(\"ab@ cd.de\", true)).equals(false)\n\t\to(isMailAddress(\"ab@c b.de\", true)).equals(false)\n\t\to(isMailAddress(\"ab@cd .de\", true)).equals(false)\n\t\to(isMailAddress(\"ab@cd. de\", true)).equals(false)\n\t\to(isMailAddress(\"ab@cd.d e\", true)).equals(false)\n\t\to(isMailAddress(\"ab@cd.de \", true)).equals(false)\n\n\t\t// long local part\n\t\to(isMailAddress(new Array(64 + 1).join(\"a\") + \"@tutanota.de\", true)).equals(true)\n\t\to(isMailAddress(new Array(65 + 1).join(\"a\") + \"@tutanota.de\", true)).equals(false)\n\t\t// long mail address\n\t\to(isMailAddress(\"aaaaaaaaaa@\" + new Array(240 + 1).join(\"a\") + \".de\", true)).equals(true)\n\t\to(isMailAddress(\"aaaaaaaaaa@\" + new Array(241 + 1).join(\"a\") + \".de\", true)).equals(false)\n\n\t\to(isMailAddress(\"abcefghijklmnopqrstuvwxyzabcefghijklmnopqrstuvwxyzabcefghijklmno@cd.de\", true)).equals(true)\n\t\to(isMailAddress(\"abcefghijklmnopqrstuvwxyzabcefghijklmnopqrstuvwxyzabcefghijklmnop@cd.de\", true)).equals(false)\n\t})\n\n\to(\"cleanedMailAddress\", function () {\n\t\to(getCleanedMailAddress(\"   a@b.de   \")).equals(\"a@b.de\")\n\t\to(getCleanedMailAddress(\"xxxx\")).equals(null)\n\t})\n\n\to(\"stringToNameAndMailAddress\", function () {\n\t\t// test valid strings\n\t\to(stringToNameAndMailAddress(\" a@b.de \")!).deepEquals({ name: \"\", mailAddress: \"a@b.de\" })\n\t\to(stringToNameAndMailAddress(\" <a@b.de > \")!).deepEquals({ name: \"\", mailAddress: \"a@b.de\" })\n\t\to(stringToNameAndMailAddress(\" Aas Bos a@b.de\")!).deepEquals({ name: \"Aas Bos\", mailAddress: \"a@b.de\" })\n\t\to(stringToNameAndMailAddress(\" Aas Bos  <a@b.de>\")!).deepEquals({ name: \"Aas Bos\", mailAddress: \"a@b.de\" })\n\t\to(stringToNameAndMailAddress(\" Aas Bos<a@b.de>\")!).deepEquals({ name: \"Aas Bos\", mailAddress: \"a@b.de\" })\n\t\t// test invalid strings\n\t\to(stringToNameAndMailAddress(\" Aas Bos  <a@de>\")).equals(null)\n\t\to(stringToNameAndMailAddress(\" Aas Bos \")).equals(null)\n\t\to(stringToNameAndMailAddress(\" Aas Bos  a@de\")).equals(null)\n\t})\n\n\to(\"fullNameToNameAndMailAddress\", function () {\n\t\to(fullNameToFirstAndLastName(\"Peter Pan\")).deepEquals({ firstName: \"Peter\", lastName: \"Pan\" })\n\t\to(fullNameToFirstAndLastName(\"peter pan\")).deepEquals({ firstName: \"peter\", lastName: \"pan\" })\n\t\to(fullNameToFirstAndLastName(\"Peter Pater Pan\")).deepEquals({ firstName: \"Peter\", lastName: \"Pater Pan\" })\n\t\to(fullNameToFirstAndLastName(\" Peter \")).deepEquals({ firstName: \"Peter\", lastName: \"\" })\n\t})\n\n\to(\"mailAddressToFirstAndLastName\", function () {\n\t\to(mailAddressToFirstAndLastName(\"Peter.Pan@x.de\")).deepEquals({ firstName: \"Peter\", lastName: \"Pan\" })\n\t\to(mailAddressToFirstAndLastName(\"peter.pan@x.de\")).deepEquals({ firstName: \"Peter\", lastName: \"Pan\" })\n\t\to(mailAddressToFirstAndLastName(\"peter_pan@x.de\")).deepEquals({ firstName: \"Peter\", lastName: \"Pan\" })\n\t\to(mailAddressToFirstAndLastName(\"peter-pan@x.de\")).deepEquals({ firstName: \"Peter\", lastName: \"Pan\" })\n\t\to(mailAddressToFirstAndLastName(\"peter_pan@x.de\")).deepEquals({ firstName: \"Peter\", lastName: \"Pan\" })\n\t\to(mailAddressToFirstAndLastName(\"peter.pater.pan@x.de\")).deepEquals({ firstName: \"Peter\", lastName: \"Pater Pan\" })\n\t\to(mailAddressToFirstAndLastName(\"peter@x.de\")).deepEquals({ firstName: \"Peter\", lastName: \"\" })\n\t})\n})\n","import o from \"@tutao/otest\"\nimport { isMailAddress, isRegularExpression, isValidCreditCardNumber } from \"../../../src/common/misc/FormatValidator.js\"\no.spec(\"FormatValidatorTest\", function () {\n\to(\" isRegularExpression\", function () {\n\t\t// no regular expressions\n\t\to(isRegularExpression(\"\")).equals(false)\n\t\to(isRegularExpression(\"1\")).equals(false)\n\t\to(isRegularExpression(\"$\")).equals(false)\n\t\to(isRegularExpression(\"//\")).equals(true)\n\t\to(isRegularExpression(\"/123/\")).equals(true)\n\t\to(isRegularExpression(\"/[1]*/\")).equals(true)\n\t\to(isRegularExpression(\"/$/\")).equals(true)\n\t\t// escaped characters\n\t\to(isRegularExpression(\"/./\")).equals(true)\n\t\to(isRegularExpression(\"/\\\\/\")).equals(true)\n\t\to(isRegularExpression(\"/$/\")).equals(true)\n\t\t// with flags\n\t\to(isRegularExpression(\"/hey/i\")).equals(true)\n\t\to(isRegularExpression(\"//muy\")).equals(true)\n\t\to(isRegularExpression(\"/hey/x\")).equals(false)\n\t})\n\to(\"credit card validation\", function () {\n\t\t// taken from https://developers.braintreepayments.com/guides/credit-cards/testing-go-live/php\n\t\tconst goodValues = [\n\t\t\t\"378282246310005\",\n\t\t\t\"371449635398431\",\n\t\t\t\"36259600000004\",\n\t\t\t\"6011 0009 9130 0009\",\n\t\t\t\"3530 1113 3330 0000\",\n\t\t\t\"6304000000000000\",\n\t\t\t\"55555555 55554444\",\n\t\t\t\"2223000048400011\",\n\t\t\t\"4111111111111111\",\n\t\t\t\"4005519200000004\",\n\t\t\t\"400 934 888 888 188 1\",\n\t\t\t\"4012000033330026\",\n\t\t\t\"4012000077777777\",\n\t\t\t\"4012888888881881\",\n\t\t\t\"4217651111111119\",\n\t\t\t\" 4500600000000061\",\n\t\t]\n\t\tconst badValues = [\n\t\t\t\"79927398710\",\n\t\t\t\"79927398711\",\n\t\t\t\"79 9273 98712\",\n\t\t\t\"7992 7398 714\",\n\t\t\t\"7992 7398715\",\n\t\t\t\"79927398716\",\n\t\t\t\"7992 7398 717\",\n\t\t\t\"79927398718\",\n\t\t\t\"79927398719\",\n\t\t\t\"128937asd\",\n\t\t\t\"i am not a credit card number\",\n\t\t\t\"601100099a1300009\",\n\t\t\t\"353011asd1333300000\",\n\t\t\t\"630400000!000&0000\",\n\t\t\t\"55555555d5555s 4444\",\n\t\t\t\"a4111111111111111\",\n\t\t]\n\n\t\t// not sure why ospec doesn't print a context message when a test fails but this is my workaround\n\t\tfunction testCreditCardNumberValidation(val: string, isValid: boolean) {\n\t\t\to(isValidCreditCardNumber(val)).equals(isValid)(`${val} is ${isValid ? \"valid\" : \"invalid\"}`)\n\t\t}\n\n\t\tfor (let good of goodValues) testCreditCardNumberValidation(good, true)\n\n\t\tfor (let bad of badValues) testCreditCardNumberValidation(bad, false)\n\t})\n\to(\"isMailAddress\", function () {\n\t\to(isMailAddress(\"abcefghijklmnopqrstuvwxyzabcefghijklmnopqrstuvwxyzabcefghijklmnopqrstuvwxyz@cd.de\", false)).equals(true)\n\t\to(isMailAddress(\"a@d.de\", false)).equals(true)\n\t\to(isMailAddress(\"*@d.de\", false)).equals(true)\n\t\to(isMailAddress(\"asfldawef+@d.de\", false)).equals(true)\n\t\to(isMailAddress(\"asfldawef=@d.de\", false)).equals(true)\n\t\to(isMailAddress(\"+@d.de\", false)).equals(true)\n\t\to(isMailAddress(\"=@d.de\", false)).equals(true)\n\t\to(isMailAddress(\"@d.de\", false)).equals(false)\n\t\to(isMailAddress(\" @d.de\", false)).equals(false)\n\t\to(isMailAddress(\"\\t@d.de\", false)).equals(false)\n\t\to(isMailAddress(\"asdf asdf@d.de\", false)).equals(false)\n\t\to(isMailAddress(\"@@d.de\", false)).equals(false)\n\t\to(isMailAddress(\"a@b@d.de\", false)).equals(false)\n\t\to(isMailAddress(\"abc@döh.de\", false)).equals(false) // no IDNA support\n\n\t\to(isMailAddress(\"a,b@d.de\", false)).equals(false)\n\t\to(isMailAddress(\"a)b@d.de\", false)).equals(false)\n\t})\n})\n","import { assertMainOrNode } from \"../../api/common/Env\"\nimport type { BaseThemeId, Theme } from \"../../gui/theme\"\nimport { assertNotNull, clone, debounceStart, downcast } from \"@tutao/tutanota-utils\"\nimport type { DomainInfo, WhitelabelConfig } from \"../../api/entities/sys/TypeRefs.js\"\nimport { isValidColorCode } from \"../../gui/base/Color\"\nimport stream from \"mithril/stream\"\nimport Stream from \"mithril/stream\"\nimport type { CustomizationKey, ThemeCustomizations, ThemeKey } from \"../../misc/WhitelabelCustomizations\"\nimport { ThemeController } from \"../../gui/ThemeController\"\nimport { EntityClient } from \"../../api/common/EntityClient\"\nimport type { LoginController } from \"../../api/main/LoginController\"\n\nassertMainOrNode()\nexport type CustomColor = {\n\tname: ThemeKey\n\tvalue: string\n\tdefaultValue: string\n\tvalid: boolean\n}\n\nexport class CustomColorsEditorViewModel {\n\tprivate _customizations: ThemeCustomizations\n\tprivate readonly _whitelabelConfig: WhitelabelConfig\n\tprivate readonly _whitelabelDomainInfo: DomainInfo\n\tprivate _accentColor!: string\n\tprivate _baseTheme!: BaseThemeId\n\tprivate readonly _themeController: ThemeController\n\tprivate readonly _entityClient: EntityClient\n\tprivate readonly _loginController: LoginController\n\tprivate readonly _themeBeforePreview: Theme\n\treadonly builtTheme: Stream<Theme>\n\n\tconstructor(\n\t\tcurrentTheme: Theme,\n\t\tthemeCustomizations: ThemeCustomizations,\n\t\twhitelabelConfig: WhitelabelConfig,\n\t\twhitelabelDomainInfo: DomainInfo,\n\t\tthemeController: ThemeController,\n\t\tentityClient: EntityClient,\n\t\tloginController: LoginController,\n\t) {\n\t\tthis._themeBeforePreview = Object.freeze(currentTheme)\n\t\tthis._customizations = clone(themeCustomizations)\n\t\tthis._whitelabelDomainInfo = whitelabelDomainInfo\n\t\tthis._whitelabelConfig = whitelabelConfig\n\t\tthis._themeController = themeController\n\t\tthis._entityClient = entityClient\n\t\tthis._loginController = loginController\n\t\tthis.builtTheme = stream()\n\t\tconst baseThemeId = themeCustomizations.base ?? \"light\"\n\n\t\tconst accentColor = themeCustomizations.content_accent ?? this._themeController.getDefaultTheme().content_accent\n\n\t\tthis.changeBaseTheme(baseThemeId)\n\t\tthis.changeAccentColor(accentColor)\n\t}\n\n\tinit() {\n\t\tthis._applyEditedTheme()\n\t}\n\n\tget customColors(): ReadonlyArray<CustomColor> {\n\t\tconst base = this._themeController.getBaseTheme(this.baseThemeId)\n\n\t\treturn Object.keys(base)\n\t\t\t.map((key) => key as CustomizationKey)\n\t\t\t.filter((name) => !this._shallBeExcluded(name))\n\t\t\t.map((key) => key as ThemeKey)\n\t\t\t.sort((a, b) => a.localeCompare(b))\n\t\t\t.map((key) => {\n\t\t\t\tconst value = this._customizations[key] ?? \"\"\n\t\t\t\t// @ts-ignore we already checked that it's safe\n\t\t\t\tconst defaultValue = base[key]\n\t\t\t\treturn {\n\t\t\t\t\tname: key,\n\t\t\t\t\tvalue,\n\t\t\t\t\tdefaultValue: assertNotNull(defaultValue),\n\t\t\t\t\tvalid: this._isValidColorValue(value),\n\t\t\t\t}\n\t\t\t})\n\t}\n\n\tget accentColor(): string {\n\t\treturn this._accentColor\n\t}\n\n\tget customizations(): ThemeCustomizations {\n\t\treturn this._customizations\n\t}\n\n\tget baseThemeId(): BaseThemeId {\n\t\treturn this._baseTheme\n\t}\n\n\tgetDefaultColor(colorName: ThemeKey): string {\n\t\treturn assertNotNull(this._themeController.getBaseTheme(this.baseThemeId)[colorName])\n\t}\n\n\tchangeAccentColor(accentColor: string) {\n\t\tthis._accentColor = accentColor\n\t\tthis.addCustomization(\"list_accent_fg\", accentColor)\n\t\tthis.addCustomization(\"content_accent\", accentColor)\n\t\tthis.addCustomization(\"content_button_selected\", accentColor)\n\t\tthis.addCustomization(\"navigation_button_selected\", accentColor)\n\t\tthis.addCustomization(\"header_button_selected\", accentColor)\n\n\t\tthis._applyEditedTheme()\n\t}\n\n\tchangeBaseTheme(baseThemeId: BaseThemeId) {\n\t\tthis._baseTheme = baseThemeId\n\t\tthis.addCustomization(\"base\", baseThemeId)\n\n\t\tthis._applyEditedTheme()\n\t}\n\n\t/**\n\t * Try to save changes. if there are invalid color values in the theme doesn't save and returns false, else saves and returns true\n\t */\n\tasync save(): Promise<boolean> {\n\t\tconst colors = Object.keys(this.customizations).filter((name) => name !== \"logo\" && name !== \"themeId\" && name !== \"base\") as CustomizationKey[]\n\n\t\tfor (let i = 0; i < colors.length; i++) {\n\t\t\tif (!this._isValidColorValue(this.customizations[colors[i]] ?? \"\")) {\n\t\t\t\treturn false\n\t\t\t}\n\t\t}\n\n\t\tthis.addCustomization(\"themeId\", this._whitelabelDomainInfo.domain)\n\t\tthis._whitelabelConfig.jsonTheme = JSON.stringify(this.customizations)\n\t\tawait this._entityClient.update(this._whitelabelConfig)\n\n\t\tif (!this._loginController.isWhitelabel()) {\n\t\t\tawait this.resetActiveClientTheme()\n\t\t}\n\n\t\treturn true\n\t}\n\n\tasync resetActiveClientTheme(): Promise<void> {\n\t\tawait this._themeController.applyCustomizations(\n\t\t\tdowncast(\n\t\t\t\tObject.assign(\n\t\t\t\t\t{},\n\t\t\t\t\t{\n\t\t\t\t\t\tbase: null,\n\t\t\t\t\t},\n\t\t\t\t\tthis._themeBeforePreview,\n\t\t\t\t),\n\t\t\t),\n\t\t\tfalse,\n\t\t)\n\t}\n\n\taddCustomization(nameOfKey: CustomizationKey, colorValue: string) {\n\t\t// @ts-ignore it's pretty hard to define what we want\n\t\tthis.customizations[nameOfKey] = colorValue\n\n\t\tthis._applyEditedTheme()\n\t}\n\n\t_isValidColorValue(colorValue: string): boolean {\n\t\treturn isValidColorCode(colorValue.trim()) || colorValue.trim() === \"\"\n\t}\n\n\t/**\n\t * These values shall be excluded when rendering the advanced TextFields\n\t * @return boolean, true iff provided parameter 'name' shall be excluded\n\t */\n\t_shallBeExcluded(name: CustomizationKey): boolean {\n\t\tconst excludedColors = [\n\t\t\t\"logo\",\n\t\t\t\"themeId\",\n\t\t\t\"base\",\n\t\t\t\"list_accent_fg\",\n\t\t\t\"content_button_selected\",\n\t\t\t\"navigation_button_selected\",\n\t\t\t\"header_button_selected\",\n\t\t\t\"content_accent\",\n\t\t\t\"content_accent_cyber_monday\",\n\t\t\t\"content_bg_cyber_monday\",\n\t\t\t\"content_border_cyber_monday\",\n\t\t]\n\t\treturn excludedColors.includes(name)\n\t}\n\n\t_applyEditedTheme: () => void = debounceStart(100, () => {\n\t\tthis._removeEmptyCustomizations()\n\n\t\tthis._themeController.applyCustomizations(this._filterAndReturnCustomizations(), false)\n\t})\n\n\t_removeEmptyCustomizations() {\n\t\tthis._customizations = downcast(Object.fromEntries(Object.entries(this.customizations).filter(([k, v]) => v !== \"\")))\n\t}\n\n\t/**\n\t *  filters out all invalid color values from ThemeCustomizations whilst keeping logo, base and themeId\n\t */\n\t_filterAndReturnCustomizations(): ThemeCustomizations {\n\t\tconst colorValues = Object.entries(this.customizations).filter(([n, v]) => n !== \"themeId\" && n !== \"base\" && n !== \"logo\")\n\t\tconst filteredColorValues = colorValues.filter(([n, v]) => this._isValidColorValue(downcast(v)))\n\t\tfor (const [n, v] of Object.entries(this.customizations)) {\n\t\t\tif (n === \"themeId\" || n === \"base\" || n === \"logo\") {\n\t\t\t\tfilteredColorValues.push([n, v])\n\t\t\t}\n\t\t}\n\t\treturn downcast(Object.fromEntries(filteredColorValues))\n\t}\n}\n","import o from \"@tutao/otest\"\nimport { CustomColorsEditorViewModel } from \"../../../../src/common/settings/whitelabel/CustomColorsEditorViewModel.js\"\nimport { ThemeController } from \"../../../../src/common/gui/ThemeController.js\"\nimport { DomainInfoTypeRef, WhitelabelConfigTypeRef } from \"../../../../src/common/api/entities/sys/TypeRefs.js\"\nimport { downcast } from \"@tutao/tutanota-utils\"\nimport type { ThemeCustomizations } from \"../../../../src/common/misc/WhitelabelCustomizations.js\"\nimport { EntityClient } from \"../../../../src/common/api/common/EntityClient.js\"\nimport { themes } from \"../../../../src/common/gui/builtinThemes.js\"\nimport type { LoginController } from \"../../../../src/common/api/main/LoginController.js\"\nimport { spy } from \"@tutao/tutanota-test-utils\"\nimport { createTestEntity } from \"../../TestUtils.js\"\n\no.spec(\"SimpleColorEditor\", function () {\n\tlet model: CustomColorsEditorViewModel\n\tlet themeController: ThemeController\n\tlet whitelabelConfig\n\tlet whitelabelDomainInfo\n\tlet defaultTheme\n\t// These customizations should always be set if no changes are made\n\tconst defaultCustomizations: ThemeCustomizations = downcast({\n\t\tlist_accent_fg: \"#850122\",\n\t\tcontent_accent: \"#850122\",\n\t\tcontent_button_selected: \"#850122\",\n\t\tnavigation_button_selected: \"#850122\",\n\t\theader_button_selected: \"#850122\",\n\t\tbase: \"light\",\n\t})\n\tlet entityClient: EntityClient\n\tlet loginController: LoginController\n\tlet isWhitelabelEnabled: boolean = false\n\to.beforeEach(function () {\n\t\tisWhitelabelEnabled = false\n\t\tthemeController = {\n\t\t\tapplyCustomizations: spy(),\n\t\t\tgetDefaultTheme: () => {\n\t\t\t\treturn themes()[\"light\"]\n\t\t\t},\n\t\t} as Partial<ThemeController> as ThemeController\n\t\twhitelabelConfig = createTestEntity(WhitelabelConfigTypeRef)\n\t\twhitelabelDomainInfo = createTestEntity(DomainInfoTypeRef)\n\t\twhitelabelDomainInfo.domain = \"test.domain.com\"\n\t\tdefaultTheme = themeController.getDefaultTheme()\n\t\tentityClient = downcast({\n\t\t\tupdate: spy(),\n\t\t})\n\t\tloginController = downcast({\n\t\t\tisWhitelabel: () => {\n\t\t\t\treturn isWhitelabelEnabled\n\t\t\t},\n\t\t})\n\t})\n\to.spec(\"openEditor\", function () {\n\t\to(\"open Editor without custom theme, default values should be applied no matter what\", function () {\n\t\t\tconst customizations: ThemeCustomizations = downcast({})\n\t\t\tmodel = new CustomColorsEditorViewModel(\n\t\t\t\tdefaultTheme,\n\t\t\t\tcustomizations,\n\t\t\t\twhitelabelConfig,\n\t\t\t\twhitelabelDomainInfo,\n\t\t\t\tthemeController,\n\t\t\t\tentityClient,\n\t\t\t\tloginController,\n\t\t\t)\n\t\t\to(model.accentColor).equals(\"#850122\")\n\t\t\to(model.baseThemeId).equals(\"light\")\n\t\t\to(themeController.applyCustomizations.callCount).equals(1)\n\t\t})\n\t\to(\"open Editor with custom theme, all customizations should be applied\", async function () {\n\t\t\tconst customizations: ThemeCustomizations = downcast({\n\t\t\t\tthemeId: \"test.domain.com\",\n\t\t\t\tlist_accent_fg: \"#ee051f\",\n\t\t\t\tcontent_accent: \"#ee051f\",\n\t\t\t\tcontent_button_selected: \"#ee051f\",\n\t\t\t\tnavigation_button_selected: \"#ee051f\",\n\t\t\t\theader_button_selected: \"#ee051f\",\n\t\t\t\tbase: \"dark\",\n\t\t\t\tcontent_bg: \"#1df3ed\",\n\t\t\t\tmodal_bg: \"#1aa1aa\",\n\t\t\t})\n\t\t\tmodel = new CustomColorsEditorViewModel(\n\t\t\t\tdefaultTheme,\n\t\t\t\tcustomizations,\n\t\t\t\twhitelabelConfig,\n\t\t\t\twhitelabelDomainInfo,\n\t\t\t\tthemeController,\n\t\t\t\tentityClient,\n\t\t\t\tloginController,\n\t\t\t)\n\t\t\to(model.accentColor).equals(customizations.content_accent!)\n\t\t\to(model.baseThemeId).equals(customizations.base!)\n\t\t\tawait model.save()\n\t\t\to(entityClient.update.callCount).equals(1)\n\t\t\to(JSON.parse(entityClient.update.args[0].jsonTheme)).deepEquals(customizations)\n\t\t})\n\t})\n\to.spec(\"addCustomization\", function () {\n\t\to(\"valid value is applied\", async function () {\n\t\t\tconst customizations: ThemeCustomizations = downcast({})\n\t\t\tmodel = new CustomColorsEditorViewModel(\n\t\t\t\tdefaultTheme,\n\t\t\t\tcustomizations,\n\t\t\t\twhitelabelConfig,\n\t\t\t\twhitelabelDomainInfo,\n\t\t\t\tthemeController,\n\t\t\t\tentityClient,\n\t\t\t\tloginController,\n\t\t\t)\n\t\t\tmodel.addCustomization(\"content_button\", \"#abcdef\")\n\t\t\tmodel.addCustomization(\"modal_bg\", \"#fedcba\")\n\t\t\t// should only contain 2 customizations here\n\t\t\to(model.customizations).deepEquals(\n\t\t\t\tdowncast(\n\t\t\t\t\tObject.assign({}, defaultCustomizations, {\n\t\t\t\t\t\tcontent_button: \"#abcdef\",\n\t\t\t\t\t\tmodal_bg: \"#fedcba\",\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t)\n\t\t\tawait model.save()\n\t\t\to(entityClient.update.callCount).equals(1)\n\t\t\t// should now equal the themeCustomizations including accentColor and baseTheme\n\t\t\to(JSON.parse(entityClient.update.args[0].jsonTheme)).deepEquals(\n\t\t\t\tObject.assign({}, defaultCustomizations, {\n\t\t\t\t\tcontent_button: \"#abcdef\",\n\t\t\t\t\tmodal_bg: \"#fedcba\",\n\t\t\t\t\tthemeId: \"test.domain.com\",\n\t\t\t\t}),\n\t\t\t)\n\t\t})\n\t\t// Invalid practically means 'empty' as well but I created a separate test just for that\n\t\to(\"invalid value is not applied\", function () {\n\t\t\tconst customizations: ThemeCustomizations = downcast({})\n\t\t\tmodel = new CustomColorsEditorViewModel(\n\t\t\t\tdefaultTheme,\n\t\t\t\tcustomizations,\n\t\t\t\twhitelabelConfig,\n\t\t\t\twhitelabelDomainInfo,\n\t\t\t\tthemeController,\n\t\t\t\tentityClient,\n\t\t\t\tloginController,\n\t\t\t)\n\t\t\tmodel.addCustomization(\"modal_bg\", \"#false\")\n\t\t\tmodel.addCustomization(\"button_bubble_bg\", \"#69\")\n\t\t\tmodel.addCustomization(\"content_fg\", \"#zzzzzz\")\n\t\t\tmodel.addCustomization(\"navigation_bg\", \"#abcdefghi\")\n\t\t\t// Customizations should hold the wrong key\n\t\t\to(model.customizations).deepEquals(\n\t\t\t\tdowncast(\n\t\t\t\t\tObject.assign({}, defaultCustomizations, {\n\t\t\t\t\t\tmodal_bg: \"#false\",\n\t\t\t\t\t\tbutton_bubble_bg: \"#69\",\n\t\t\t\t\t\tcontent_fg: \"#zzzzzz\",\n\t\t\t\t\t\tnavigation_bg: \"#abcdefghi\",\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t)\n\t\t\t//\tWhen assembling it should however remove the wrong key\n\t\t\to(model._filterAndReturnCustomizations()).deepEquals(defaultCustomizations)\n\t\t})\n\t\to(\"valid and invalid, only valid is applied\", function () {\n\t\t\tconst customizations: ThemeCustomizations = downcast({})\n\t\t\tmodel = new CustomColorsEditorViewModel(\n\t\t\t\tdefaultTheme,\n\t\t\t\tcustomizations,\n\t\t\t\twhitelabelConfig,\n\t\t\t\twhitelabelDomainInfo,\n\t\t\t\tthemeController,\n\t\t\t\tentityClient,\n\t\t\t\tloginController,\n\t\t\t)\n\t\t\tmodel.addCustomization(\"modal_bg\", \"#fedcba\")\n\t\t\tmodel.addCustomization(\"button_bubble_bg\", \"#69\")\n\t\t\tmodel.addCustomization(\"content_fg\", \"#deffed\")\n\t\t\tmodel.addCustomization(\"navigation_bg\", \"#abcdefghi\")\n\t\t\tmodel.addCustomization(\"content_button\", \"#abcdef\")\n\t\t\to(model.customizations).deepEquals(\n\t\t\t\tdowncast(\n\t\t\t\t\tObject.assign({}, defaultCustomizations, {\n\t\t\t\t\t\tmodal_bg: \"#fedcba\",\n\t\t\t\t\t\tbutton_bubble_bg: \"#69\",\n\t\t\t\t\t\tcontent_fg: \"#deffed\",\n\t\t\t\t\t\tnavigation_bg: \"#abcdefghi\",\n\t\t\t\t\t\tcontent_button: \"#abcdef\",\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t)\n\t\t\to(model._filterAndReturnCustomizations()).deepEquals(\n\t\t\t\tObject.assign({}, defaultCustomizations, {\n\t\t\t\t\tmodal_bg: \"#fedcba\",\n\t\t\t\t\tcontent_fg: \"#deffed\",\n\t\t\t\t\tcontent_button: \"#abcdef\",\n\t\t\t\t}),\n\t\t\t)\n\t\t})\n\t\to(\"empty customizations should be cleared out\", function () {\n\t\t\tconst customizations: ThemeCustomizations = downcast({})\n\t\t\tmodel = new CustomColorsEditorViewModel(\n\t\t\t\tdefaultTheme,\n\t\t\t\tcustomizations,\n\t\t\t\twhitelabelConfig,\n\t\t\t\twhitelabelDomainInfo,\n\t\t\t\tthemeController,\n\t\t\t\tentityClient,\n\t\t\t\tloginController,\n\t\t\t)\n\t\t\tmodel.addCustomization(\"modal_bg\", \"\")\n\t\t\tmodel.addCustomization(\"content_fg\", \"\")\n\t\t\tmodel.addCustomization(\"content_button\", \"\")\n\n\t\t\t// usually this is called on its own, since theres a debounce however it doesnt work in this test\n\t\t\tmodel._removeEmptyCustomizations()\n\n\t\t\to(model.customizations).deepEquals(defaultCustomizations)\n\t\t})\n\t})\n\to.spec(\"closeEditor\", function () {\n\t\to(\"pressed cancel, all values should reset\", async function () {\n\t\t\tconst customizations: ThemeCustomizations = downcast({})\n\t\t\tmodel = new CustomColorsEditorViewModel(\n\t\t\t\tdefaultTheme,\n\t\t\t\tcustomizations,\n\t\t\t\twhitelabelConfig,\n\t\t\t\twhitelabelDomainInfo,\n\t\t\t\tthemeController,\n\t\t\t\tentityClient,\n\t\t\t\tloginController,\n\t\t\t)\n\t\t\tawait model.resetActiveClientTheme()\n\t\t\t// Should equal 2 since we call it once upon opening and then once when closing\n\t\t\to(themeController.applyCustomizations.callCount).equals(2)\n\t\t\to(themeController.applyCustomizations.args[0]).deepEquals(\n\t\t\t\tObject.assign({}, defaultTheme, {\n\t\t\t\t\tbase: null,\n\t\t\t\t}),\n\t\t\t)\n\t\t})\n\t\to(\"pressed save, all custom values should be saved\", async function () {\n\t\t\tconst customizations: ThemeCustomizations = downcast({})\n\t\t\tmodel = new CustomColorsEditorViewModel(\n\t\t\t\tdefaultTheme,\n\t\t\t\tcustomizations,\n\t\t\t\twhitelabelConfig,\n\t\t\t\twhitelabelDomainInfo,\n\t\t\t\tthemeController,\n\t\t\t\tentityClient,\n\t\t\t\tloginController,\n\t\t\t)\n\t\t\tmodel.addCustomization(\"modal_bg\", \"#fedcba\")\n\t\t\tmodel.addCustomization(\"content_fg\", \"#deffed\")\n\t\t\tmodel.changeBaseTheme(\"dark\")\n\t\t\tmodel.changeAccentColor(\"#aaaaaa\")\n\t\t\tawait model.save()\n\t\t\to(entityClient.update.callCount).equals(1)\n\t\t\to(JSON.parse(entityClient.update.args[0].jsonTheme)).deepEquals(\n\t\t\t\tObject.assign({}, defaultCustomizations, {\n\t\t\t\t\tmodal_bg: \"#fedcba\",\n\t\t\t\t\tcontent_fg: \"#deffed\",\n\t\t\t\t\tbase: \"dark\",\n\t\t\t\t\tlist_accent_fg: \"#aaaaaa\",\n\t\t\t\t\tcontent_accent: \"#aaaaaa\",\n\t\t\t\t\tcontent_button_selected: \"#aaaaaa\",\n\t\t\t\t\tnavigation_button_selected: \"#aaaaaa\",\n\t\t\t\t\theader_button_selected: \"#aaaaaa\",\n\t\t\t\t\tthemeId: \"test.domain.com\",\n\t\t\t\t}),\n\t\t\t)\n\t\t})\n\t\to(\"pressed save when on whitelabelDomain, should not revert back to initial theme\", async function () {\n\t\t\tconst customizations: ThemeCustomizations = downcast({})\n\t\t\tisWhitelabelEnabled = true\n\t\t\tmodel = new CustomColorsEditorViewModel(\n\t\t\t\tdefaultTheme,\n\t\t\t\tcustomizations,\n\t\t\t\twhitelabelConfig,\n\t\t\t\twhitelabelDomainInfo,\n\t\t\t\tthemeController,\n\t\t\t\tentityClient,\n\t\t\t\tloginController,\n\t\t\t)\n\t\t\tawait model.save()\n\t\t\t// Should equal 1 here since we call updateCustomTheme once when initializing the viewModel, and then not anymore when saving\n\t\t\to(themeController.applyCustomizations.callCount).equals(1)\n\t\t})\n\t})\n\to.spec(\"changeAccentColor\", function () {\n\t\to(\"changing accent changed preview\", async function () {\n\t\t\tconst customizations: ThemeCustomizations = downcast({})\n\t\t\tconst expectedCustomizations = {\n\t\t\t\tlist_accent_fg: \"#ff00f2\",\n\t\t\t\tcontent_accent: \"#ff00f2\",\n\t\t\t\tcontent_button_selected: \"#ff00f2\",\n\t\t\t\tnavigation_button_selected: \"#ff00f2\",\n\t\t\t\theader_button_selected: \"#ff00f2\",\n\t\t\t\tthemeId: \"test.domain.com\",\n\t\t\t}\n\t\t\tmodel = new CustomColorsEditorViewModel(\n\t\t\t\tdefaultTheme,\n\t\t\t\tcustomizations,\n\t\t\t\twhitelabelConfig,\n\t\t\t\twhitelabelDomainInfo,\n\t\t\t\tthemeController,\n\t\t\t\tentityClient,\n\t\t\t\tloginController,\n\t\t\t)\n\t\t\tmodel.changeAccentColor(\"#ff00f2\")\n\t\t\to(themeController.applyCustomizations.callCount).equals(1)\n\t\t\tawait model.save()\n\t\t\to(entityClient.update.callCount).equals(1)\n\t\t\to(JSON.parse(entityClient.update.args[0].jsonTheme)).deepEquals(\n\t\t\t\tObject.assign({}, expectedCustomizations, {\n\t\t\t\t\tbase: \"light\",\n\t\t\t\t}),\n\t\t\t)\n\t\t\to(themeController.applyCustomizations.callCount).equals(2) // called twice since we a) set the preview and b) return to previous theme\n\t\t})\n\t})\n\to.spec(\"changeBaseTheme\", function () {\n\t\to(\"does not overwrite custom colors and changes preview\", async function () {\n\t\t\tconst customizations: ThemeCustomizations = downcast({})\n\t\t\tconst expectedCustomizations = {\n\t\t\t\tthemeId: \"test.domain.com\",\n\t\t\t\tbase: \"dark\",\n\t\t\t}\n\t\t\tmodel = new CustomColorsEditorViewModel(\n\t\t\t\tdefaultTheme,\n\t\t\t\tcustomizations,\n\t\t\t\twhitelabelConfig,\n\t\t\t\twhitelabelDomainInfo,\n\t\t\t\tthemeController,\n\t\t\t\tentityClient,\n\t\t\t\tloginController,\n\t\t\t)\n\t\t\tmodel.changeBaseTheme(\"dark\")\n\t\t\tawait model.save()\n\t\t\to(entityClient.update.callCount).equals(1)\n\t\t\t// We have to do base -> customizations because otherwise we would overwrite the 'base' key\n\t\t\to(JSON.parse(entityClient.update.args[0].jsonTheme)).deepEquals(Object.assign({}, defaultCustomizations, expectedCustomizations))\n\t\t})\n\t})\n})\n","import o from \"@tutao/otest\"\nimport { DisplayMode, LoginState, LoginViewModel } from \"../../../src/common/login/LoginViewModel.js\"\nimport type { LoginController } from \"../../../src/common/api/main/LoginController.js\"\nimport { GroupInfoTypeRef, UserTypeRef } from \"../../../src/common/api/entities/sys/TypeRefs.js\"\nimport type { UserController } from \"../../../src/common/api/main/UserController.js\"\nimport { KeyPermanentlyInvalidatedError } from \"../../../src/common/api/common/error/KeyPermanentlyInvalidatedError.js\"\nimport { CredentialAuthenticationError } from \"../../../src/common/api/common/error/CredentialAuthenticationError.js\"\nimport { Credentials, credentialsToUnencrypted } from \"../../../src/common/misc/credentials/Credentials.js\"\nimport { SecondFactorHandler } from \"../../../src/common/misc/2fa/SecondFactorHandler\"\nimport { assertThrows } from \"@tutao/tutanota-test-utils\"\nimport { CredentialsProvider } from \"../../../src/common/misc/credentials/CredentialsProvider.js\"\nimport { SessionType } from \"../../../src/common/api/common/SessionType.js\"\nimport { instance, matchers, object, replace, verify, when } from \"testdouble\"\nimport { AccessExpiredError, ConnectionError, NotAuthenticatedError } from \"../../../src/common/api/common/error/RestError\"\nimport { DeviceConfig } from \"../../../src/common/misc/DeviceConfig\"\nimport { ResumeSessionErrorReason } from \"../../../src/common/api/worker/facades/LoginFacade\"\nimport { createTestEntity, domainConfigStub, textIncludes } from \"../TestUtils.js\"\nimport { CredentialRemovalHandler } from \"../../../src/common/login/CredentialRemovalHandler.js\"\nimport { NativePushServiceApp } from \"../../../src/common/native/main/NativePushServiceApp.js\"\nimport { PersistedCredentials } from \"../../../src/common/native/common/generatedipc/PersistedCredentials.js\"\nimport { CredentialType } from \"../../../src/common/misc/credentials/CredentialType.js\"\nimport { UnencryptedCredentials } from \"../../../src/common/native/common/generatedipc/UnencryptedCredentials.js\"\nimport { stringToUtf8Uint8Array, utf8Uint8ArrayToString } from \"@tutao/tutanota-utils\"\nimport { AppLock } from \"../../../src/common/login/AppLock.js\"\nimport { lang } from \"../../../src/common/misc/LanguageViewModel.js\"\n\nconst { anything } = matchers\n\n/**\n * A mocked implementation of an ICredentialsProvider\n * It's easiest to have the mock still maintain an internal state\n * because there is expected to be some consistency between it's methods\n * and it's a pain to mock this correctly for any given test\n *\n * This isn't ideal because rehearsals and verifications might have an effect on the state, so it's not ideal when verifying calls to `store` (for example)\n * This means you should be careful when verifying it, but in general it works for most use cases\n */\nfunction getCredentialsProviderStub(): CredentialsProvider {\n\tconst provider = object<CredentialsProvider>()\n\n\tlet credentials = new Map<string, PersistedCredentials>()\n\n\twhen(provider.getCredentialsInfoByUserId(anything())).thenDo((async (userId) => {\n\t\tconst persistentCredentials = credentials.get(userId)\n\t\treturn persistentCredentials?.credentialInfo ?? null\n\t}) satisfies CredentialsProvider[\"getCredentialsInfoByUserId\"])\n\n\twhen(provider.getDecryptedCredentialsByUserId(anything())).thenDo((async (userId) => {\n\t\tconst storedCredentials = credentials.get(userId)\n\t\tif (!storedCredentials) return null\n\t\treturn {\n\t\t\tcredentialInfo: {\n\t\t\t\tuserId: storedCredentials.credentialInfo.userId,\n\t\t\t\tlogin: storedCredentials.credentialInfo.login,\n\t\t\t\ttype: storedCredentials.credentialInfo.type,\n\t\t\t},\n\t\t\taccessToken: utf8Uint8ArrayToString(storedCredentials.accessToken),\n\t\t\tencryptedPassword: storedCredentials.encryptedPassword,\n\t\t\tencryptedPassphraseKey: storedCredentials.encryptedPassphraseKey,\n\t\t\tdatabaseKey: storedCredentials.databaseKey,\n\t\t}\n\t}) satisfies CredentialsProvider[\"getDecryptedCredentialsByUserId\"])\n\n\twhen(provider.store(anything())).thenDo((async (credential) => {\n\t\tcredentials.set(credential.credentialInfo.userId, {\n\t\t\tcredentialInfo: {\n\t\t\t\tuserId: credential.credentialInfo.userId,\n\t\t\t\tlogin: credential.credentialInfo.login,\n\t\t\t\ttype: credential.credentialInfo.type,\n\t\t\t},\n\t\t\taccessToken: stringToUtf8Uint8Array(credential.accessToken),\n\t\t\tencryptedPassword: credential.encryptedPassword,\n\t\t\tencryptedPassphraseKey: credential.encryptedPassphraseKey,\n\t\t\tdatabaseKey: credential.databaseKey,\n\t\t})\n\t}) satisfies CredentialsProvider[\"store\"])\n\n\twhen(provider.deleteByUserId(anything())).thenDo((async (userId) => {\n\t\tcredentials.delete(userId)\n\t}) satisfies CredentialsProvider[\"deleteByUserId\"])\n\n\twhen(provider.getInternalCredentialsInfos()).thenDo((async () => {\n\t\treturn Array.from(credentials.values()).map((persistentCredentials) => persistentCredentials.credentialInfo)\n\t}) satisfies CredentialsProvider[\"getInternalCredentialsInfos\"])\n\n\twhen(provider.getSupportedEncryptionModes()).thenResolve([])\n\n\twhen(provider.clearCredentials(anything())).thenDo(() => {\n\t\tcredentials = new Map()\n\t})\n\n\treturn provider\n}\n\no.spec(\"LoginViewModelTest\", () => {\n\tconst encryptedTestCredentials: PersistedCredentials = Object.freeze({\n\t\tcredentialInfo: {\n\t\t\tuserId: \"user-id-1\",\n\t\t\tlogin: \"test@example.com\",\n\t\t\ttype: CredentialType.Internal,\n\t\t},\n\t\tencryptedPassword: \"encryptedPassword\",\n\t\tencryptedPassphraseKey: null,\n\t\taccessToken: stringToUtf8Uint8Array(\"accessToken\"),\n\t\tdatabaseKey: null,\n\t} as const)\n\n\tconst testCredentials: Credentials = Object.freeze({\n\t\tuserId: \"user-id-1\",\n\t\tlogin: \"test@example.com\",\n\t\tencryptedPassword: \"encryptedPassword\",\n\t\tencryptedPassphraseKey: null,\n\t\taccessToken: \"accessToken\",\n\t\ttype: CredentialType.Internal,\n\t})\n\n\tlet loginControllerMock: LoginController\n\tlet credentialsProviderMock: CredentialsProvider\n\tlet secondFactorHandlerMock: SecondFactorHandler\n\tlet deviceConfigMock: DeviceConfig\n\tlet credentialRemovalHandler: CredentialRemovalHandler\n\tlet pushServiceApp: NativePushServiceApp\n\tlet appLock: AppLock\n\n\to.beforeEach(async () => {\n\t\tloginControllerMock = object<LoginController>()\n\t\tconst userControllerMock = object<UserController>()\n\n\t\treplace(userControllerMock, \"user\", createTestEntity(UserTypeRef))\n\t\treplace(\n\t\t\tuserControllerMock,\n\t\t\t\"userGroupInfo\",\n\t\t\tcreateTestEntity(GroupInfoTypeRef, {\n\t\t\t\tmailAddress: \"test@example.com\",\n\t\t\t}),\n\t\t)\n\n\t\twhen(loginControllerMock.getUserController()).thenReturn(userControllerMock)\n\n\t\tcredentialsProviderMock = getCredentialsProviderStub()\n\t\tsecondFactorHandlerMock = instance(SecondFactorHandler)\n\t\tdeviceConfigMock = instance(DeviceConfig)\n\t\tcredentialRemovalHandler = object()\n\t\tpushServiceApp = object()\n\t\tappLock = object()\n\t})\n\n\t/**\n\t * viewModel.init() relies on some state of the credentials provider, which maight need to be mocked differently\n\t * on a per test basis, so instead of having a global viewModel to test we just have a factory function to get one in each test\n\t */\n\tasync function getViewModel() {\n\t\tconst viewModel = new LoginViewModel(\n\t\t\tloginControllerMock,\n\t\t\tcredentialsProviderMock,\n\t\t\tsecondFactorHandlerMock,\n\t\t\tdeviceConfigMock,\n\t\t\tdomainConfigStub,\n\t\t\tcredentialRemovalHandler,\n\t\t\tpushServiceApp,\n\t\t\tappLock,\n\t\t)\n\t\tawait viewModel.init()\n\t\treturn viewModel\n\t}\n\n\to.spec(\"Display mode transitions\", function () {\n\t\to(\"Should switch to form mode if no stored credentials can be found\", async function () {\n\t\t\tconst viewModel = await getViewModel()\n\t\t\tawait viewModel.useUserId(testCredentials.userId)\n\t\t\to(viewModel.displayMode).equals(DisplayMode.Form)\n\t\t})\n\t\to(\"Should switch to credentials mode if stored credentials can be found\", async function () {\n\t\t\tawait credentialsProviderMock.store(credentialsToUnencrypted(testCredentials, null))\n\t\t\tconst viewModel = await getViewModel()\n\t\t\tawait viewModel.useUserId(testCredentials.userId)\n\t\t\to(viewModel.displayMode).equals(DisplayMode.Credentials)\n\t\t})\n\t\to(\"Should switch to form mode if stored credentials cannot be found\", async function () {\n\t\t\tconst viewModel = await getViewModel()\n\t\t\tawait viewModel.useUserId(testCredentials.userId)\n\t\t\to(viewModel.displayMode).equals(DisplayMode.Form)\n\t\t})\n\t\to(\"Should switch to credentials mode if credentials are set\", async function () {\n\t\t\tawait credentialsProviderMock.store(credentialsToUnencrypted(testCredentials, null))\n\t\t\tconst viewModel = await getViewModel()\n\n\t\t\tawait viewModel.useCredentials(encryptedTestCredentials.credentialInfo)\n\t\t\to(viewModel.displayMode).equals(DisplayMode.Credentials)\n\t\t})\n\t\to(\"Should switch to credentials mode\", async function () {\n\t\t\tconst viewModel = await getViewModel()\n\n\t\t\tviewModel.displayMode = DisplayMode.DeleteCredentials\n\t\t\tviewModel.switchDeleteState()\n\t\t\to(viewModel.displayMode as DisplayMode).equals(DisplayMode.Credentials)\n\t\t})\n\t\to(\"Should switch to delete credentials mode\", async function () {\n\t\t\tconst viewModel = await getViewModel()\n\n\t\t\tviewModel.displayMode = DisplayMode.Credentials\n\t\t\tviewModel.switchDeleteState()\n\t\t\to(viewModel.displayMode as DisplayMode).equals(DisplayMode.DeleteCredentials)\n\t\t})\n\t\to(\"Should throw if in invalid state\", async function () {\n\t\t\tconst viewModel = await getViewModel()\n\n\t\t\tviewModel.displayMode = DisplayMode.Form\n\t\t\tawait assertThrows(Error, async () => {\n\t\t\t\tawait viewModel.switchDeleteState()\n\t\t\t})\n\t\t})\n\t})\n\to.spec(\"deleteCredentials\", function () {\n\t\to(\"Should switch to form mode if last stored credential is deleted\", async function () {\n\t\t\tawait credentialsProviderMock.store(credentialsToUnencrypted(testCredentials, null))\n\t\t\tconst viewModel = await getViewModel()\n\n\t\t\tviewModel.displayMode = DisplayMode.Credentials\n\t\t\tawait viewModel.deleteCredentials(encryptedTestCredentials.credentialInfo)\n\t\t\to(viewModel.displayMode as DisplayMode).equals(DisplayMode.Form)\n\t\t})\n\t\to(\"Should handle CredentialAuthenticationError\", async function () {\n\t\t\tawait credentialsProviderMock.store(credentialsToUnencrypted(testCredentials, null))\n\t\t\twhen(credentialsProviderMock.getDecryptedCredentialsByUserId(testCredentials.userId)).thenReject(new CredentialAuthenticationError(\"test\"))\n\t\t\tconst viewModel = await getViewModel()\n\n\t\t\tviewModel.displayMode = DisplayMode.DeleteCredentials\n\t\t\tawait viewModel.deleteCredentials(encryptedTestCredentials.credentialInfo)\n\t\t\to(viewModel.state).equals(LoginState.NotAuthenticated)\n\t\t\to(viewModel.displayMode).equals(DisplayMode.DeleteCredentials)\n\t\t\to(viewModel.getSavedCredentials()).deepEquals([encryptedTestCredentials.credentialInfo])\n\t\t\tverify(credentialsProviderMock.clearCredentials(anything()), { times: 0 })\n\t\t})\n\t\to(\"Should handle KeyPermanentlyInvalidatedError\", async function () {\n\t\t\tawait credentialsProviderMock.store(credentialsToUnencrypted(testCredentials, null))\n\t\t\twhen(credentialsProviderMock.getDecryptedCredentialsByUserId(testCredentials.userId)).thenReject(new KeyPermanentlyInvalidatedError(\"test\"))\n\t\t\tconst viewModel = await getViewModel()\n\n\t\t\tviewModel.displayMode = DisplayMode.DeleteCredentials\n\t\t\tawait viewModel.deleteCredentials(encryptedTestCredentials.credentialInfo)\n\t\t\to(viewModel.state).equals(LoginState.NotAuthenticated)\n\t\t\to(viewModel.displayMode as DisplayMode).equals(DisplayMode.Form)\n\t\t\to(viewModel.getSavedCredentials()).deepEquals([])\n\t\t\tverify(credentialsProviderMock.clearCredentials(anything()), { times: 1 })\n\t\t})\n\t\to(\"deletes push identifier\", async function () {\n\t\t\tconst viewModel = await getViewModel()\n\t\t\tviewModel.displayMode = DisplayMode.DeleteCredentials\n\t\t\tconst pushIdentifier = \"iAmPushIdentifier\"\n\t\t\tconst credentialsAndKey = credentialsToUnencrypted(testCredentials, null)\n\t\t\tawait credentialsProviderMock.store(credentialsAndKey)\n\t\t\twhen(pushServiceApp.loadPushIdentifierFromNative()).thenResolve(pushIdentifier)\n\n\t\t\tawait viewModel.deleteCredentials(encryptedTestCredentials.credentialInfo)\n\n\t\t\tverify(credentialRemovalHandler.onCredentialsRemoved(credentialsAndKey.credentialInfo))\n\t\t\tverify(loginControllerMock.deleteOldSession(credentialsToUnencrypted(testCredentials, null), pushIdentifier))\n\t\t})\n\t\to(\"deletes push identifier when offline and return warning\", async function () {\n\t\t\tconst viewModel = await getViewModel()\n\t\t\tviewModel.displayMode = DisplayMode.DeleteCredentials\n\t\t\tconst credentialsAndKey = credentialsToUnencrypted(testCredentials, null)\n\t\t\tawait credentialsProviderMock.store(credentialsAndKey)\n\t\t\twhen(loginControllerMock.deleteOldSession(credentialsAndKey, null)).thenReject(new ConnectionError(\"testmessage\"))\n\n\t\t\tconst result = await viewModel.deleteCredentials(encryptedTestCredentials.credentialInfo)\n\n\t\t\tverify(credentialRemovalHandler.onCredentialsRemoved(credentialsAndKey.credentialInfo))\n\t\t\to(result).equals(\"networkError\")\n\t\t})\n\t})\n\to.spec(\"Login with stored credentials\", function () {\n\t\tconst offlineTimeRangeDays = 42\n\t\to.beforeEach(() => {\n\t\t\twhen(deviceConfigMock.getOfflineTimeRangeDays(testCredentials.userId)).thenReturn(offlineTimeRangeDays)\n\t\t})\n\t\to(\"login should succeed with valid stored credentials\", async function () {\n\t\t\tawait credentialsProviderMock.store(credentialsToUnencrypted(testCredentials, null))\n\t\t\twhen(loginControllerMock.resumeSession(credentialsToUnencrypted(testCredentials, null), null, offlineTimeRangeDays)).thenResolve({\n\t\t\t\ttype: \"success\",\n\t\t\t})\n\t\t\tconst viewModel = await getViewModel()\n\n\t\t\tawait viewModel.useCredentials(encryptedTestCredentials.credentialInfo)\n\t\t\tawait viewModel.login()\n\t\t\to(viewModel.state).equals(LoginState.LoggedIn)\n\t\t\tverify(appLock.enforce())\n\t\t})\n\t\to(\"login should succeed with valid stored credentials in DeleteCredentials display mode\", async function () {\n\t\t\tawait credentialsProviderMock.store(credentialsToUnencrypted(testCredentials, null))\n\t\t\twhen(loginControllerMock.resumeSession(credentialsToUnencrypted(testCredentials, null), null, offlineTimeRangeDays)).thenResolve({\n\t\t\t\ttype: \"success\",\n\t\t\t})\n\t\t\tconst viewModel = await getViewModel()\n\n\t\t\tawait viewModel.useCredentials(encryptedTestCredentials.credentialInfo)\n\t\t\tviewModel.switchDeleteState()\n\t\t\tawait viewModel.login()\n\t\t\to(viewModel.state).equals(LoginState.LoggedIn)\n\t\t})\n\t\to(\"login should fail with invalid stored credentials\", async function () {\n\t\t\tconst credentialsAndKey = credentialsToUnencrypted(testCredentials, null)\n\t\t\tawait credentialsProviderMock.store(credentialsAndKey)\n\t\t\twhen(loginControllerMock.resumeSession(anything(), null, offlineTimeRangeDays)).thenReject(new NotAuthenticatedError(\"test\"))\n\t\t\tconst viewModel = await getViewModel()\n\n\t\t\tawait viewModel.useCredentials(encryptedTestCredentials.credentialInfo)\n\t\t\tawait viewModel.login()\n\n\t\t\to(viewModel.state).equals(LoginState.InvalidCredentials)\n\t\t\to(viewModel.displayMode).equals(DisplayMode.Form)\n\t\t\tverify(credentialsProviderMock.deleteByUserId(testCredentials.userId))\n\t\t\tverify(credentialRemovalHandler.onCredentialsRemoved(credentialsAndKey.credentialInfo))\n\t\t\to(viewModel.getSavedCredentials()).deepEquals([])\n\t\t\to(viewModel.autoLoginCredentials).equals(null)\n\t\t})\n\t\to(\"login should fail for expired stored credentials\", async function () {\n\t\t\tawait credentialsProviderMock.store(credentialsToUnencrypted(testCredentials, null))\n\t\t\twhen(loginControllerMock.resumeSession(anything(), null, offlineTimeRangeDays)).thenReject(new AccessExpiredError(\"test\"))\n\t\t\tconst viewModel = await getViewModel()\n\n\t\t\tawait viewModel.useCredentials(encryptedTestCredentials.credentialInfo)\n\t\t\tawait viewModel.login()\n\t\t\to(viewModel.state).equals(LoginState.AccessExpired)\n\t\t\to(viewModel.displayMode).equals(DisplayMode.Form)\n\t\t})\n\t\to(\"should handle KeyPermanentlyInvalidatedError and clear credentials\", async function () {\n\t\t\tawait credentialsProviderMock.store(credentialsToUnencrypted(testCredentials, null))\n\t\t\twhen(credentialsProviderMock.getDecryptedCredentialsByUserId(testCredentials.userId)).thenReject(new KeyPermanentlyInvalidatedError(\"oh no\"))\n\t\t\tconst viewModel = await getViewModel()\n\n\t\t\tawait viewModel.useCredentials(encryptedTestCredentials.credentialInfo)\n\t\t\tawait viewModel.login()\n\t\t\to(viewModel.state).equals(LoginState.NotAuthenticated)\n\t\t\to(viewModel.displayMode).equals(DisplayMode.Form)\n\t\t\to(viewModel.getSavedCredentials()).deepEquals([])\n\t\t\tverify(credentialsProviderMock.clearCredentials(anything()), { times: 1 })\n\t\t})\n\t\to(\"should handle error result\", async function () {\n\t\t\tawait credentialsProviderMock.store(credentialsToUnencrypted(testCredentials, null))\n\t\t\twhen(loginControllerMock.resumeSession(credentialsToUnencrypted(testCredentials, null), null, offlineTimeRangeDays)).thenResolve({\n\t\t\t\ttype: \"error\",\n\t\t\t\treason: ResumeSessionErrorReason.OfflineNotAvailableForFree,\n\t\t\t})\n\t\t\tconst viewModel = await getViewModel()\n\n\t\t\tawait viewModel.useCredentials(encryptedTestCredentials.credentialInfo)\n\t\t\tawait viewModel.login()\n\t\t\to(viewModel.state).equals(LoginState.NotAuthenticated)\n\t\t})\n\t\to(\"handles CredentialAuthenticationError\", async () => {\n\t\t\tconst unencryptedCredentials = credentialsToUnencrypted(testCredentials, null)\n\t\t\tawait credentialsProviderMock.store(unencryptedCredentials)\n\t\t\twhen(credentialsProviderMock.getDecryptedCredentialsByUserId(testCredentials.userId)).thenReject(new KeyPermanentlyInvalidatedError(\"oh no\"))\n\t\t\tconst viewModel = await getViewModel()\n\t\t\twhen(appLock.enforce()).thenReject(new CredentialAuthenticationError(\"test\"))\n\n\t\t\tawait viewModel.useCredentials(encryptedTestCredentials.credentialInfo)\n\t\t\tawait viewModel.login()\n\t\t\to(viewModel.state).equals(LoginState.UnknownError)\n\t\t\to(viewModel.displayMode).equals(DisplayMode.Credentials)\n\t\t\to(viewModel.getSavedCredentials()).deepEquals([unencryptedCredentials.credentialInfo])\n\t\t\to(lang.getTranslationText(viewModel.helpText)).satisfies(textIncludes(\"test\"))\n\t\t})\n\t})\n\to.spec(\"Login with email and password\", function () {\n\t\tconst credentialsWithoutPassword: Credentials = {\n\t\t\tlogin: testCredentials.login,\n\t\t\tencryptedPassword: null,\n\t\t\tencryptedPassphraseKey: null,\n\t\t\taccessToken: testCredentials.accessToken,\n\t\t\tuserId: testCredentials.userId,\n\t\t\ttype: CredentialType.Internal,\n\t\t}\n\t\tconst password = \"password\"\n\t\to(\"should login and not store password\", async function () {\n\t\t\tconst viewModel = await getViewModel()\n\n\t\t\twhen(loginControllerMock.createSession(testCredentials.login, password, SessionType.Login)).thenResolve({ credentials: credentialsWithoutPassword })\n\n\t\t\tviewModel.showLoginForm()\n\t\t\tviewModel.mailAddress(credentialsWithoutPassword.login)\n\t\t\tviewModel.password(password)\n\t\t\tviewModel.savePassword(false)\n\t\t\tawait viewModel.login()\n\t\t\to(viewModel.state).equals(LoginState.LoggedIn)\n\t\t\tverify(credentialsProviderMock.store(matchers.anything()), { times: 0 })\n\t\t})\n\t\to(\"should login and store password\", async function () {\n\t\t\twhen(loginControllerMock.createSession(testCredentials.login, password, SessionType.Persistent)).thenResolve({ credentials: testCredentials })\n\n\t\t\tconst viewModel = await getViewModel()\n\n\t\t\tviewModel.showLoginForm()\n\t\t\tviewModel.mailAddress(testCredentials.login)\n\t\t\tviewModel.password(password)\n\t\t\tviewModel.savePassword(true)\n\t\t\tawait viewModel.login()\n\t\t\to(viewModel.state).equals(LoginState.LoggedIn)\n\t\t\tverify(\n\t\t\t\tcredentialsProviderMock.store(\n\t\t\t\t\tmatchers.argThat((unencrypted: UnencryptedCredentials) => unencrypted.credentialInfo.login === testCredentials.login),\n\t\t\t\t),\n\t\t\t\t{ times: 1 },\n\t\t\t)\n\t\t\tverify(appLock.enforce())\n\t\t})\n\t\to(\"should login and overwrite existing stored credentials\", async function () {\n\t\t\tconst oldCredentials: UnencryptedCredentials = {\n\t\t\t\tcredentialInfo: {\n\t\t\t\t\tuserId: testCredentials.userId,\n\t\t\t\t\tlogin: testCredentials.login,\n\t\t\t\t\ttype: CredentialType.Internal,\n\t\t\t\t},\n\t\t\t\tencryptedPassword: \"encPw\",\n\t\t\t\taccessToken: \"oldAccessToken\",\n\t\t\t\tencryptedPassphraseKey: null,\n\t\t\t\tdatabaseKey: null,\n\t\t\t}\n\t\t\tawait credentialsProviderMock.store(oldCredentials)\n\t\t\twhen(loginControllerMock.createSession(testCredentials.login, password, SessionType.Persistent)).thenResolve({\n\t\t\t\tcredentials: testCredentials,\n\t\t\t\tdatabaseKey: null,\n\t\t\t})\n\n\t\t\tconst viewModel = await getViewModel()\n\n\t\t\tviewModel.showLoginForm()\n\t\t\tviewModel.mailAddress(testCredentials.login)\n\t\t\tviewModel.password(password)\n\t\t\tviewModel.savePassword(true)\n\t\t\tawait viewModel.login()\n\t\t\to(viewModel.state).equals(LoginState.LoggedIn)\n\t\t\tverify(credentialsProviderMock.store(credentialsToUnencrypted(testCredentials, null)))\n\t\t\tverify(loginControllerMock.deleteOldSession(oldCredentials), { times: 1 })\n\t\t})\n\n\t\to.spec(\"Should clear old credentials on login\", function () {\n\t\t\tconst oldCredentials: Credentials = Object.assign({}, credentialsWithoutPassword, {\n\t\t\t\taccessToken: \"oldAccessToken\",\n\t\t\t\tencryptedPassword: \"encPw\",\n\t\t\t})\n\n\t\t\to(\"same address & same user id\", async function () {\n\t\t\t\tawait doTest(oldCredentials)\n\t\t\t})\n\t\t\to(\"same address & different user id\", async function () {\n\t\t\t\tawait doTest(Object.assign({}, oldCredentials, { userId: \"differentId\" }))\n\t\t\t})\n\t\t\to(\"different address & same user id\", async function () {\n\t\t\t\tawait doTest(Object.assign({}, oldCredentials, { login: \"another@login.de\" }))\n\t\t\t})\n\n\t\t\tasync function doTest(oldCredentials: Credentials) {\n\t\t\t\twhen(loginControllerMock.createSession(credentialsWithoutPassword.login, password, SessionType.Login)).thenResolve({\n\t\t\t\t\tcredentials: credentialsWithoutPassword,\n\t\t\t\t})\n\t\t\t\tconst unencryptedCredentials = credentialsToUnencrypted(oldCredentials, null)\n\t\t\t\tawait credentialsProviderMock.store(unencryptedCredentials)\n\t\t\t\tconst viewModel = await getViewModel()\n\t\t\t\tviewModel.showLoginForm()\n\n\t\t\t\tviewModel.mailAddress(credentialsWithoutPassword.login)\n\t\t\t\tviewModel.password(password)\n\t\t\t\tviewModel.savePassword(false)\n\n\t\t\t\tawait viewModel.login()\n\n\t\t\t\to(viewModel.state).equals(LoginState.LoggedIn)\n\t\t\t\tverify(credentialsProviderMock.deleteByUserId(oldCredentials.userId, { deleteOfflineDb: false }))\n\t\t\t\tverify(loginControllerMock.deleteOldSession(unencryptedCredentials))\n\t\t\t}\n\t\t})\n\n\t\to(\"Should throw if login controller throws\", async function () {\n\t\t\twhen(loginControllerMock.createSession(anything(), anything(), anything())).thenReject(new Error(\"oops\"))\n\n\t\t\tconst viewModel = await getViewModel()\n\n\t\t\tviewModel.mailAddress(credentialsWithoutPassword.login)\n\t\t\tviewModel.password(password)\n\t\t\tawait assertThrows(Error, async () => {\n\t\t\t\tawait viewModel.login()\n\t\t\t})\n\t\t\to(viewModel.state).equals(LoginState.UnknownError)\n\t\t})\n\t\to(\"should handle KeyPermanentlyInvalidatedError and clear credentials\", async function () {\n\t\t\tawait credentialsProviderMock.store(credentialsToUnencrypted(testCredentials, null))\n\t\t\twhen(credentialsProviderMock.store(matchers.anything())).thenReject(new KeyPermanentlyInvalidatedError(\"oops\"))\n\t\t\twhen(loginControllerMock.createSession(anything(), anything(), anything())).thenResolve({ credentials: testCredentials })\n\n\t\t\tconst viewModel = await getViewModel()\n\n\t\t\tviewModel.showLoginForm()\n\t\t\tviewModel.mailAddress(testCredentials.login)\n\t\t\tviewModel.password(password)\n\t\t\tviewModel.savePassword(true)\n\t\t\tawait viewModel.login()\n\t\t\to(viewModel.state).equals(LoginState.LoggedIn)\n\t\t\to(viewModel.getSavedCredentials()).deepEquals([])\n\t\t\tverify(credentialsProviderMock.clearCredentials(anything()), { times: 1 })\n\t\t})\n\t\to(\"should be in error state if email address is empty\", async function () {\n\t\t\tconst viewModel = await getViewModel()\n\n\t\t\tviewModel.showLoginForm()\n\t\t\tviewModel.mailAddress(\"\")\n\t\t\tviewModel.password(\"123\")\n\t\t\tawait viewModel.login()\n\t\t\to(viewModel.state).equals(LoginState.InvalidCredentials)\n\t\t\to(viewModel.helpText).equals(\"loginFailed_msg\")\n\t\t\tverify(loginControllerMock.createSession(anything(), anything(), anything()), { times: 0 })\n\t\t})\n\t\to(\"should be in error state if password is empty\", async function () {\n\t\t\tconst viewModel = await getViewModel()\n\n\t\t\tviewModel.showLoginForm()\n\t\t\tviewModel.mailAddress(\"test@example.com\")\n\t\t\tviewModel.password(\"\")\n\t\t\tawait viewModel.login()\n\t\t\to(viewModel.state).equals(LoginState.InvalidCredentials)\n\t\t\to(viewModel.helpText).equals(\"loginFailed_msg\")\n\t\t\tverify(loginControllerMock.createSession(anything(), anything(), anything()), { times: 0 })\n\t\t})\n\t})\n})\n","import o from \"@tutao/otest\"\nimport { CredentialsProvider } from \"../../../../src/common/misc/credentials/CredentialsProvider.js\"\nimport { assertNotNull, stringToUtf8Uint8Array } from \"@tutao/tutanota-utils\"\nimport { CredentialEncryptionMode } from \"../../../../src/common/misc/credentials/CredentialEncryptionMode.js\"\nimport { object, when } from \"testdouble\"\nimport { verify } from \"@tutao/tutanota-test-utils\"\nimport { InterWindowEventFacadeSendDispatcher } from \"../../../../src/common/native/common/generatedipc/InterWindowEventFacadeSendDispatcher.js\"\nimport { SqlCipherFacade } from \"../../../../src/common/native/common/generatedipc/SqlCipherFacade.js\"\nimport { PersistedCredentials } from \"../../../../src/common/native/common/generatedipc/PersistedCredentials.js\"\nimport { UnencryptedCredentials } from \"../../../../src/common/native/common/generatedipc/UnencryptedCredentials.js\"\nimport { CredentialType } from \"../../../../src/common/misc/credentials/CredentialType.js\"\nimport { NativeCredentialsFacade } from \"../../../../src/common/native/common/generatedipc/NativeCredentialsFacade.js\"\nimport { CredentialsInfo } from \"../../../../src/common/native/common/generatedipc/CredentialsInfo.js\"\n\no.spec(\"CredentialsProvider\", function () {\n\tlet credentialsProvider: CredentialsProvider\n\tlet internalCredentials: UnencryptedCredentials\n\tlet internalCredentials2: UnencryptedCredentials\n\tlet internalCredentialsBob: UnencryptedCredentials\n\tlet internalCredentialsAlice: UnencryptedCredentials\n\tlet externalCredentials: UnencryptedCredentials\n\tlet encryptedInternalCredentials: PersistedCredentials\n\tlet encryptedInternalCredentialsBob: PersistedCredentials\n\tlet encryptedInternalCredentialsAlice: PersistedCredentials\n\tlet encryptedExternalCredentials: PersistedCredentials\n\tlet encryptedInternalCredentialsWithoutDatabaseKey: Omit<PersistedCredentials, \"databaseKey\">\n\tlet sqlCipherFacadeMock: SqlCipherFacade\n\tlet interWindowEventSenderMock: InterWindowEventFacadeSendDispatcher\n\tlet nativeCredentialFacadeMock: NativeCredentialsFacade\n\to.beforeEach(function () {\n\t\tinternalCredentials = {\n\t\t\tcredentialInfo: {\n\t\t\t\tlogin: \"test@example.com\",\n\t\t\t\tuserId: \"789\",\n\t\t\t\ttype: CredentialType.Internal,\n\t\t\t},\n\t\t\tencryptedPassword: \"123\",\n\t\t\tencryptedPassphraseKey: null,\n\t\t\taccessToken: \"456\",\n\t\t\tdatabaseKey: null,\n\t\t}\n\t\tinternalCredentials2 = {\n\t\t\tcredentialInfo: {\n\t\t\t\tlogin: \"test@example.com\",\n\t\t\t\tuserId: \"789012\",\n\t\t\t\ttype: CredentialType.Internal,\n\t\t\t},\n\t\t\tencryptedPassword: \"123456\",\n\t\t\tencryptedPassphraseKey: null,\n\t\t\taccessToken: \"456789\",\n\t\t\tdatabaseKey: null,\n\t\t}\n\t\tinternalCredentialsAlice = {\n\t\t\tcredentialInfo: {\n\t\t\t\tlogin: \"alice@example.com\",\n\t\t\t\tuserId: \"789012\",\n\t\t\t\ttype: CredentialType.Internal,\n\t\t\t},\n\t\t\tencryptedPassword: \"123456\",\n\t\t\tencryptedPassphraseKey: null,\n\t\t\taccessToken: \"456789\",\n\t\t\tdatabaseKey: null,\n\t\t}\n\t\tinternalCredentialsBob = {\n\t\t\tcredentialInfo: {\n\t\t\t\tlogin: \"bob@example.com\",\n\t\t\t\tuserId: \"789012\",\n\t\t\t\ttype: CredentialType.Internal,\n\t\t\t},\n\t\t\tencryptedPassword: \"123456\",\n\t\t\tencryptedPassphraseKey: null,\n\t\t\taccessToken: \"456789\",\n\t\t\tdatabaseKey: null,\n\t\t}\n\t\texternalCredentials = {\n\t\t\tcredentialInfo: {\n\t\t\t\tlogin: \"test2@example.com\",\n\t\t\t\tuserId: \"7892\",\n\t\t\t\ttype: CredentialType.External,\n\t\t\t},\n\t\t\tencryptedPassword: \"1232\",\n\t\t\tencryptedPassphraseKey: null,\n\t\t\taccessToken: \"4562\",\n\t\t\tdatabaseKey: null,\n\t\t}\n\t\tencryptedInternalCredentials = {\n\t\t\tcredentialInfo: {\n\t\t\t\tlogin: internalCredentials.credentialInfo.login,\n\t\t\t\tuserId: internalCredentials.credentialInfo.userId,\n\t\t\t\ttype: internalCredentials.credentialInfo.type,\n\t\t\t},\n\t\t\tencryptedPassword: assertNotNull(internalCredentials.encryptedPassword),\n\t\t\tencryptedPassphraseKey: null,\n\t\t\taccessToken: stringToUtf8Uint8Array(internalCredentials.accessToken),\n\t\t\tdatabaseKey: new Uint8Array([1, 2, 3]),\n\t\t}\n\t\tencryptedInternalCredentialsAlice = {\n\t\t\tcredentialInfo: {\n\t\t\t\tlogin: internalCredentialsAlice.credentialInfo.login,\n\t\t\t\tuserId: internalCredentialsAlice.credentialInfo.userId,\n\t\t\t\ttype: internalCredentialsAlice.credentialInfo.type,\n\t\t\t},\n\t\t\tencryptedPassword: assertNotNull(internalCredentialsAlice.encryptedPassword),\n\t\t\tencryptedPassphraseKey: null,\n\t\t\taccessToken: stringToUtf8Uint8Array(internalCredentialsAlice.accessToken),\n\t\t\tdatabaseKey: new Uint8Array([1, 2, 3]),\n\t\t}\n\t\tencryptedInternalCredentialsBob = {\n\t\t\tcredentialInfo: {\n\t\t\t\tlogin: internalCredentialsBob.credentialInfo.login,\n\t\t\t\tuserId: internalCredentialsBob.credentialInfo.userId,\n\t\t\t\ttype: internalCredentialsBob.credentialInfo.type,\n\t\t\t},\n\t\t\tencryptedPassword: assertNotNull(internalCredentialsBob.encryptedPassword),\n\t\t\tencryptedPassphraseKey: null,\n\t\t\taccessToken: stringToUtf8Uint8Array(internalCredentialsBob.accessToken),\n\t\t\tdatabaseKey: new Uint8Array([1, 2, 3]),\n\t\t}\n\t\tencryptedExternalCredentials = {\n\t\t\tcredentialInfo: {\n\t\t\t\tlogin: externalCredentials.credentialInfo.login,\n\t\t\t\tuserId: externalCredentials.credentialInfo.userId,\n\t\t\t\ttype: externalCredentials.credentialInfo.type,\n\t\t\t},\n\t\t\tencryptedPassword: assertNotNull(externalCredentials.encryptedPassword),\n\t\t\tencryptedPassphraseKey: null,\n\t\t\taccessToken: stringToUtf8Uint8Array(externalCredentials.accessToken),\n\t\t\tdatabaseKey: new Uint8Array([1, 2, 3]),\n\t\t}\n\t\tencryptedInternalCredentialsWithoutDatabaseKey = {\n\t\t\tcredentialInfo: {\n\t\t\t\tlogin: internalCredentials.credentialInfo.login,\n\t\t\t\tuserId: internalCredentials.credentialInfo.userId,\n\t\t\t\ttype: internalCredentials.credentialInfo.type,\n\t\t\t},\n\t\t\tencryptedPassword: assertNotNull(internalCredentials2.encryptedPassword),\n\t\t\tencryptedPassphraseKey: null,\n\t\t\taccessToken: stringToUtf8Uint8Array(internalCredentials2.accessToken),\n\t\t}\n\t\tsqlCipherFacadeMock = object()\n\t\tinterWindowEventSenderMock = object()\n\t\tnativeCredentialFacadeMock = object()\n\t\tcredentialsProvider = new CredentialsProvider(nativeCredentialFacadeMock, sqlCipherFacadeMock, interWindowEventSenderMock)\n\t})\n\n\to.spec(\"Storing credentials\", function () {\n\t\to(\"Should store credentials\", async function () {\n\t\t\tawait credentialsProvider.store(internalCredentials)\n\t\t\tverify(nativeCredentialFacadeMock.store(internalCredentials))\n\t\t})\n\t})\n\n\to.spec(\"Reading Credentials\", function () {\n\t\to.beforeEach(async function () {\n\t\t\twhen(nativeCredentialFacadeMock.loadByUserId(internalCredentials.credentialInfo.userId)).thenResolve(internalCredentials)\n\t\t\twhen(nativeCredentialFacadeMock.loadByUserId(externalCredentials.credentialInfo.userId)).thenResolve(externalCredentials)\n\t\t\twhen(nativeCredentialFacadeMock.loadAll()).thenResolve([encryptedInternalCredentials, encryptedExternalCredentials])\n\t\t})\n\t\to(\"Should return internal Credentials\", async function () {\n\t\t\tconst retrievedCredentials = await credentialsProvider.getDecryptedCredentialsByUserId(internalCredentials.credentialInfo.userId)\n\n\t\t\to(retrievedCredentials).deepEquals(internalCredentials)\n\t\t})\n\n\t\to(\"Should return credential infos for internal users\", async function () {\n\t\t\tconst retrievedCredentials = await credentialsProvider.getInternalCredentialsInfos()\n\n\t\t\to(retrievedCredentials).deepEquals([encryptedInternalCredentials.credentialInfo])\n\t\t})\n\n\t\to(\"Should return sorted internal credentials regardless of internal ordering\", async function () {\n\t\t\tconst alice = encryptedInternalCredentialsAlice\n\t\t\tconst bob = encryptedInternalCredentialsBob\n\t\t\tconst test = encryptedInternalCredentials\n\t\t\tconst sorted = [alice.credentialInfo, bob.credentialInfo, test.credentialInfo]\n\n\t\t\tasync function testSorted(list: readonly PersistedCredentials[]) {\n\t\t\t\twhen(nativeCredentialFacadeMock.loadAll()).thenResolve(list)\n\t\t\t\tconst retrieved = await credentialsProvider.getInternalCredentialsInfos()\n\t\t\t\to(retrieved).deepEquals(sorted)\n\t\t\t}\n\n\t\t\tawait testSorted([alice, bob, test])\n\t\t\tawait testSorted([alice, test, bob])\n\t\t\tawait testSorted([bob, alice, test])\n\t\t\tawait testSorted([bob, test, alice])\n\t\t\tawait testSorted([test, alice, bob])\n\t\t\tawait testSorted([test, bob, alice])\n\t\t})\n\t})\n\n\to.spec(\"Deleting credentials\", function () {\n\t\to(\"Should delete credentials from storage\", async function () {\n\t\t\tawait credentialsProvider.deleteByUserId(internalCredentials.credentialInfo.userId)\n\t\t\tverify(nativeCredentialFacadeMock.deleteByUserId(internalCredentials.credentialInfo.userId), { times: 1 })\n\t\t})\n\t\to(\"Deletes offline database\", async function () {\n\t\t\tawait credentialsProvider.deleteByUserId(internalCredentials.credentialInfo.userId)\n\t\t\tverify(sqlCipherFacadeMock.deleteDb(internalCredentials.credentialInfo.userId))\n\t\t})\n\t\to(\"Sends event over EventBus\", async function () {\n\t\t\tawait credentialsProvider.deleteByUserId(internalCredentials.credentialInfo.userId)\n\t\t\tverify(interWindowEventSenderMock.localUserDataInvalidated(internalCredentials.credentialInfo.userId))\n\t\t})\n\t})\n\n\to.spec(\"Setting credentials encryption mode\", function () {\n\t\to(\"Enrolling\", async function () {\n\t\t\tconst newEncryptionMode = CredentialEncryptionMode.DEVICE_LOCK\n\t\t\tawait credentialsProvider.setCredentialEncryptionMode(newEncryptionMode)\n\t\t\tverify(nativeCredentialFacadeMock.setCredentialEncryptionMode(newEncryptionMode), { times: 1 })\n\t\t})\n\t})\n\n\to.spec(\"Changing credentials encryption mode\", function () {\n\t\to(\"Changing encryption mode\", async function () {\n\t\t\tconst oldEncryptionMode = CredentialEncryptionMode.SYSTEM_PASSWORD\n\t\t\tconst newEncryptionMode = CredentialEncryptionMode.DEVICE_LOCK\n\n\t\t\twhen(nativeCredentialFacadeMock.getCredentialEncryptionMode()).thenResolve(oldEncryptionMode)\n\n\t\t\tawait credentialsProvider.setCredentialEncryptionMode(newEncryptionMode)\n\n\t\t\tverify(nativeCredentialFacadeMock.setCredentialEncryptionMode(newEncryptionMode))\n\t\t})\n\t})\n\n\to.spec(\"clearCredentials\", function () {\n\t\to.beforeEach(function () {\n\t\t\twhen(nativeCredentialFacadeMock.loadAll()).thenResolve([encryptedInternalCredentials, encryptedExternalCredentials])\n\t\t})\n\t\to(\"deleted credentials, key and mode\", async function () {\n\t\t\tawait credentialsProvider.clearCredentials(\"testing\")\n\n\t\t\tverify(nativeCredentialFacadeMock.clear())\n\t\t})\n\t})\n\n\to.spec(\"replace the stored password\", function () {\n\t\tconst userId = \"userId\"\n\t\tconst credentials: CredentialsInfo = {\n\t\t\tlogin: \"login\",\n\t\t\tuserId: userId,\n\t\t\ttype: CredentialType.Internal,\n\t\t}\n\t\tconst persistentCredentials: PersistedCredentials = {\n\t\t\tcredentialInfo: credentials,\n\t\t\taccessToken: stringToUtf8Uint8Array(\"accessToken\"),\n\t\t\tdatabaseKey: new Uint8Array([1, 2, 3]),\n\t\t\tencryptedPassword: \"old encrypted password\",\n\t\t\tencryptedPassphraseKey: null,\n\t\t}\n\t\tconst newEncryptedPassword = \"uhagre2\"\n\t\tconst newEncryptedPassphraseKey = new Uint8Array([0x0, 0x0e, 0x9])\n\t\to.beforeEach(function () {\n\t\t\twhen(nativeCredentialFacadeMock.loadAll()).thenResolve([persistentCredentials])\n\t\t})\n\n\t\to(\"replace only\", async function () {\n\t\t\tawait credentialsProvider.replacePassword(credentials, newEncryptedPassword, newEncryptedPassphraseKey)\n\n\t\t\tverify(\n\t\t\t\tnativeCredentialFacadeMock.storeEncrypted({\n\t\t\t\t\tcredentialInfo: credentials,\n\t\t\t\t\taccessToken: stringToUtf8Uint8Array(\"accessToken\"),\n\t\t\t\t\tdatabaseKey: new Uint8Array([1, 2, 3]),\n\t\t\t\t\tencryptedPassword: newEncryptedPassword,\n\t\t\t\t\tencryptedPassphraseKey: newEncryptedPassphraseKey,\n\t\t\t\t}),\n\t\t\t)\n\t\t})\n\t})\n})\n","import o from \"@tutao/otest\"\nimport { DeviceConfig, DeviceConfigCredentials, ListAutoSelectBehavior, migrateConfig, migrateConfigV2to3 } from \"../../../src/common/misc/DeviceConfig.js\"\nimport { matchers, object, when } from \"testdouble\"\nimport { verify } from \"@tutao/tutanota-test-utils\"\nimport { CredentialEncryptionMode } from \"../../../src/common/misc/credentials/CredentialEncryptionMode.js\"\nimport { CredentialType } from \"../../../src/common/misc/credentials/CredentialType.js\"\n\no.spec(\"DeviceConfig\", function () {\n\to.spec(\"migrateConfig\", function () {\n\t\to(\"migrating from v2 to v3 preserves internal logins\", function () {\n\t\t\tconst oldConfig: any = {\n\t\t\t\t_version: 2,\n\t\t\t\t_credentials: [\n\t\t\t\t\t{\n\t\t\t\t\t\tmailAddress: \"internal@example.com\",\n\t\t\t\t\t\tuserId: \"internalUserId\",\n\t\t\t\t\t\taccessToken: \"internalAccessToken\",\n\t\t\t\t\t\tencryptedPassword: \"internalEncPassword\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tmailAddress: \"externalUserId\",\n\t\t\t\t\t\tuserId: \"externalUserId\",\n\t\t\t\t\t\taccessToken: \"externalAccessToken\",\n\t\t\t\t\t\tencryptedPassword: \"externalEncPassword\",\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t}\n\n\t\t\tmigrateConfigV2to3(oldConfig)\n\n\t\t\tconst expectedCredentialsAfterMigration: Record<string, Omit<DeviceConfigCredentials, \"databaseKey\">> = {\n\t\t\t\tinternalUserId: {\n\t\t\t\t\tcredentialInfo: {\n\t\t\t\t\t\tlogin: \"internal@example.com\",\n\t\t\t\t\t\tuserId: \"internalUserId\",\n\t\t\t\t\t\ttype: CredentialType.Internal,\n\t\t\t\t\t},\n\t\t\t\t\taccessToken: \"internalAccessToken\",\n\t\t\t\t\tencryptedPassword: \"internalEncPassword\",\n\t\t\t\t\tencryptedPassphraseKey: null,\n\t\t\t\t},\n\t\t\t\texternalUserId: {\n\t\t\t\t\tcredentialInfo: {\n\t\t\t\t\t\tlogin: \"externalUserId\",\n\t\t\t\t\t\tuserId: \"externalUserId\",\n\t\t\t\t\t\ttype: CredentialType.External,\n\t\t\t\t\t},\n\t\t\t\t\taccessToken: \"externalAccessToken\",\n\t\t\t\t\tencryptedPassword: \"externalEncPassword\",\n\t\t\t\t\tencryptedPassphraseKey: null,\n\t\t\t\t},\n\t\t\t}\n\n\t\t\to(oldConfig._credentials).deepEquals(expectedCredentialsAfterMigration)\n\t\t})\n\t})\n\n\to.spec(\"loading config\", function () {\n\t\tlet localStorageMock: Storage\n\n\t\to.beforeEach(function () {\n\t\t\tlocalStorageMock = object<Storage>()\n\t\t})\n\n\t\to(\"Won't write anything to localStorage when signupToken exists and the config version is the same\", function () {\n\t\t\twhen(localStorageMock.getItem(DeviceConfig.LocalStorageKey)).thenReturn(\n\t\t\t\tJSON.stringify({\n\t\t\t\t\t_version: DeviceConfig.Version,\n\t\t\t\t\t_signupToken: \"somebase64value\",\n\t\t\t\t}),\n\t\t\t)\n\n\t\t\tnew DeviceConfig(DeviceConfig.Version, localStorageMock)\n\n\t\t\tverify(localStorageMock.setItem(DeviceConfig.LocalStorageKey, matchers.anything()), { times: 0 })\n\t\t})\n\n\t\to(\"When loading, migrations will not lose any config fields\", function () {\n\t\t\tconst storedInLocalStorage = {\n\t\t\t\t_version: 2,\n\t\t\t\t_credentials: [\n\t\t\t\t\t{\n\t\t\t\t\t\tmailAddress: \"internal@example.com\",\n\t\t\t\t\t\tuserId: \"internalUserId\",\n\t\t\t\t\t\taccessToken: \"internalAccessToken\",\n\t\t\t\t\t\tencryptedPassword: \"internalEncPassword\",\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\t_credentialEncryptionMode: CredentialEncryptionMode.DEVICE_LOCK,\n\t\t\t\t_encryptedCredentialsKey: \"somekey\",\n\t\t\t\tacknowledgedNewsItems: [],\n\t\t\t\t_themeId: \"mytheme\",\n\t\t\t\tscheduledAlarmModelVersionPerUser: {},\n\t\t\t\t_language: \"en\",\n\t\t\t\t_defaultCalendarView: {},\n\t\t\t\t_hiddenCalendars: {},\n\t\t\t\texpandedMailFolders: {},\n\t\t\t\t_testDeviceId: \"testId\",\n\t\t\t\t_testAssignments: null,\n\t\t\t\t_signupToken: \"signupToken\",\n\t\t\t\tofflineTimeRangeDaysByUser: { userId1: 42 },\n\t\t\t\tconversationViewShowOnlySelectedMail: false,\n\t\t\t\tsyncContactsWithPhonePreference: {},\n\t\t\t\tisCalendarDaySelectorExpanded: false,\n\t\t\t\tmailAutoSelectBehavior: ListAutoSelectBehavior.OLDER,\n\t\t\t\tisSetupComplete: true,\n\t\t\t\tlastExternalCalendarSync: {},\n\t\t\t\tclientOnlyCalendars: new Map(),\n\t\t\t\tevents: [],\n\t\t\t\tlastRatingPromptedDate: null,\n\t\t\t\tretryRatingPromptAfter: null,\n\t\t\t}\n\n\t\t\twhen(localStorageMock.getItem(DeviceConfig.LocalStorageKey)).thenReturn(JSON.stringify(storedInLocalStorage))\n\n\t\t\tlet storedJson\n\t\t\twhen(localStorageMock.setItem(DeviceConfig.LocalStorageKey, matchers.anything())).thenDo((_, json) => {\n\t\t\t\tstoredJson = json\n\t\t\t})\n\n\t\t\tnew DeviceConfig(DeviceConfig.Version, localStorageMock)\n\n\t\t\tconst migratedConfig = Object.assign({}, storedInLocalStorage, {\n\t\t\t\t_version: DeviceConfig.Version,\n\t\t\t\t_credentials: {\n\t\t\t\t\tinternalUserId: {\n\t\t\t\t\t\tcredentialInfo: {\n\t\t\t\t\t\t\tlogin: \"internal@example.com\",\n\t\t\t\t\t\t\tuserId: \"internalUserId\",\n\t\t\t\t\t\t\ttype: \"internal\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\taccessToken: \"internalAccessToken\",\n\t\t\t\t\t\tencryptedPassword: \"internalEncPassword\",\n\t\t\t\t\t\tencryptedPassphraseKey: null,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tisSetupComplete: true,\n\t\t\t\tisCredentialsMigratedToNative: false,\n\t\t\t})\n\n\t\t\t// We can't just call verify on localStorageMock.setItem because the JSON string may not match perfectly\n\t\t\to(JSON.parse(storedJson)).deepEquals(migratedConfig)\n\t\t})\n\t})\n})\n","import type { CalendarEvent } from \"../../../common/api/entities/tutanota/TypeRefs.js\"\nimport m from \"mithril\"\nimport { getAllDayDateUTC, isAllDayEvent } from \"../../../common/api/common/utils/CommonCalendarUtils\"\nimport { Time } from \"../../../common/calendar/date/Time.js\"\nimport { showDropdownAtPosition } from \"../../../common/gui/base/Dropdown.js\"\nimport { CalendarOperation } from \"../gui/eventeditor-model/CalendarEventModel.js\"\n\nconst DRAG_THRESHOLD = 10\nexport type MousePos = {\n\tx: number\n\ty: number\n}\n// Convenience wrapper for nullability\ntype DragData = {\n\toriginalEvent: CalendarEvent\n\toriginalDateUnderMouse: Date\n\toriginalMousePos: MousePos\n\tkeepTime: boolean // Indicates whether the time on the original event should be kept or modified. In case this is set to true the drag operation just shifts event start by whole days.\n}\n\nexport interface EventDragHandlerCallbacks {\n\treadonly onDragStart: (calendarEvent: CalendarEvent, timeToMoveBy: number) => void\n\treadonly onDragUpdate: (timeToMoveBy: number) => void\n\treadonly onDragEnd: (timeToMoveBy: number, mode: CalendarOperation | null) => Promise<void>\n\treadonly onDragCancel: () => void\n}\n\n/**\n * Handles logic for dragging events in the calendar child views.\n */\nexport class EventDragHandler {\n\tprivate data: DragData | null = null\n\tprivate dragging: boolean = false\n\tprivate lastDiffBetweenDates: number | null = null\n\tprivate hasChanged: boolean = false\n\n\tconstructor(private readonly draggingArea: HTMLBodyElement, private readonly eventDragCallbacks: EventDragHandlerCallbacks) {}\n\n\tget isDragging(): boolean {\n\t\treturn this.dragging\n\t}\n\n\tget originalEvent(): CalendarEvent | null {\n\t\treturn this.data?.originalEvent ?? null\n\t}\n\n\t/**\n\t * Check if the handler has changed since the last time you called this function\n\t */\n\tqueryHasChanged(): boolean {\n\t\tconst isChanged = this.hasChanged\n\t\tthis.hasChanged = false\n\t\treturn isChanged\n\t}\n\n\t/**\n\t * Call on mouse down, to initialize an upcoming drag event.\n\t * Doesn't start the drag yet, because we want to wait until the mouse has moved beyond some threshhold\n\t * @param calendarEvent The calendar event for which a drag operation is prepared.\n\t * @param dateUnderMouse The original date under mouse when preparing the drag.\n\t * @param mousePos The current position of the mouse.\n\t * @param keepTime Indicates whether the time on the original event should be kept or modified. In case this is set to true the drag\n\t * operation just shifts event start by whole days otherwise the time from dateUnderMouse should be used as new time for the event.\n\t */\n\tprepareDrag(calendarEvent: CalendarEvent, dateUnderMouse: Date, mousePos: MousePos, keepTime: boolean) {\n\t\tthis.draggingArea.classList.add(\"cursor-grabbing\")\n\n\t\tthis.data = {\n\t\t\toriginalEvent: calendarEvent,\n\t\t\t// We always differentiate between eventStart and originalDateUnderMouse to be able to shift it relative to the mouse position\n\t\t\t// and not the start date. This is important for larger events in day/week view\n\t\t\toriginalDateUnderMouse: this.adjustDateUnderMouse(calendarEvent.startTime, dateUnderMouse, keepTime),\n\t\t\toriginalMousePos: mousePos,\n\t\t\tkeepTime: keepTime,\n\t\t}\n\t\tthis.hasChanged = false\n\t\tthis.dragging = false\n\t}\n\n\t/**\n\t * Call on mouse move.\n\t * Will be a no-op if the prepareDrag hasn't been called or if cancelDrag has been called since the last prepareDrag call\n\t * The dragging doesn't actually begin until the distance between the mouse and its original location is greater than some threshold\n\t * @param dateUnderMouse The current date under the mouse courser, may include a time.\n\t * @param mousePos the position of the mouse when the drag ended.\n\t */\n\thandleDrag(dateUnderMouse: Date, mousePos: MousePos) {\n\t\tif (this.data) {\n\t\t\tconst dragData = this.data\n\t\t\tconst adjustedDateUnderMouse = this.adjustDateUnderMouse(dragData.originalEvent.startTime, dateUnderMouse, dragData.keepTime)\n\t\t\t// Calculate the distance from the original mouse location to the current mouse location\n\t\t\t// We don't want to actually start the drag until the mouse has moved by some distance\n\t\t\t// So as to avoid accidentally dragging when you meant to click but moved the mouse a little\n\t\t\tconst distanceX = dragData.originalMousePos.x - mousePos.x\n\t\t\tconst distanceY = dragData.originalMousePos.y - mousePos.y\n\t\t\tconst distance = Math.sqrt(distanceX ** 2 + distanceY ** 2)\n\n\t\t\tif (this.dragging) {\n\t\t\t\tconst diffBetweenDates = this.getDayUnderMouseDiff(dragData, adjustedDateUnderMouse)\n\n\t\t\t\t// We don't want to trigger a redraw everytime the drag call is triggered, only when necessary\n\t\t\t\tif (diffBetweenDates !== this.lastDiffBetweenDates) {\n\t\t\t\t\tthis.lastDiffBetweenDates = diffBetweenDates\n\n\t\t\t\t\tthis.eventDragCallbacks.onDragUpdate(diffBetweenDates)\n\n\t\t\t\t\tthis.hasChanged = true\n\t\t\t\t\tm.redraw()\n\t\t\t\t}\n\t\t\t} else if (distance > DRAG_THRESHOLD) {\n\t\t\t\tthis.dragging = true\n\t\t\t\tthis.lastDiffBetweenDates = this.getDayUnderMouseDiff(dragData, adjustedDateUnderMouse)\n\n\t\t\t\tthis.eventDragCallbacks.onDragStart(dragData.originalEvent, this.lastDiffBetweenDates)\n\n\t\t\t\tthis.hasChanged = true\n\t\t\t\tm.redraw()\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Call on mouseup or mouseleave. Ends a drag event if one has been started, and hasn't been cancelled.\n\t *\n\t * This function will only trigger when prepareDrag has been called\n\t */\n\tasync endDrag(dateUnderMouse: Date, pos: MousePos): Promise<void> {\n\t\tthis.draggingArea.classList.remove(\"cursor-grabbing\")\n\n\t\tif (this.dragging && this.data) {\n\t\t\tconst dragData = this.data\n\t\t\tconst adjustedDateUnderMouse = this.adjustDateUnderMouse(dragData.originalEvent.startTime, dateUnderMouse, dragData.keepTime)\n\t\t\t// We update our state first because the updateCallback might take some time, and\n\t\t\t// we want the UI to be able to react to the drop having happened before we get the result\n\t\t\tthis.dragging = false\n\t\t\tthis.data = null\n\t\t\tconst diffBetweenDates = this.getDayUnderMouseDiff(dragData, adjustedDateUnderMouse)\n\n\t\t\t// technically, we should check that this event is EventType OWN or SHARED_RW, but we'll assume that we're\n\t\t\t// not allowed to drag events where that's not the case.\n\t\t\t// note that we're not allowing changing the whole series from dragging an altered instance.\n\t\t\tconst { repeatRule, recurrenceId } = dragData.originalEvent\n\t\t\t// prettier-ignore\n\t\t\tconst mode = repeatRule != null\n\t\t\t\t? await showModeSelectionDropdown(pos)\n\t\t\t\t: recurrenceId != null\n\t\t\t\t\t? CalendarOperation.EditThis\n\t\t\t\t\t: CalendarOperation.EditAll\n\n\t\t\t// If the date hasn't changed we still have to do the callback so the view model can cancel the drag\n\t\t\ttry {\n\t\t\t\tawait this.eventDragCallbacks.onDragEnd(diffBetweenDates, mode)\n\t\t\t} finally {\n\t\t\t\tthis.hasChanged = true\n\t\t\t\tm.redraw()\n\t\t\t}\n\t\t} else {\n\t\t\tthis.cancelDrag()\n\t\t}\n\t}\n\n\tadjustDateUnderMouse(eventStart: Date, dateUnderMouse: Date, keepTime: boolean): Date {\n\t\tif (keepTime) {\n\t\t\treturn Time.fromDate(eventStart).toDate(dateUnderMouse)\n\t\t} else {\n\t\t\treturn dateUnderMouse\n\t\t}\n\t}\n\n\tgetDayUnderMouseDiff(dragData: DragData, adjustedDateUnderMouse: Date): number {\n\t\tconst { originalEvent, originalDateUnderMouse } = dragData\n\t\treturn isAllDayEvent(originalEvent)\n\t\t\t? getAllDayDateUTC(adjustedDateUnderMouse).getTime() - getAllDayDateUTC(originalDateUnderMouse).getTime()\n\t\t\t: adjustedDateUnderMouse.getTime() - originalDateUnderMouse.getTime()\n\t}\n\n\tcancelDrag() {\n\t\tthis.draggingArea.classList.remove(\"cursor-grabbing\")\n\t\tthis.eventDragCallbacks.onDragCancel()\n\n\t\tthis.data = null\n\t\tthis.dragging = false\n\t\tthis.hasChanged = true\n\t\tthis.lastDiffBetweenDates = null\n\n\t\tm.redraw()\n\t}\n}\n\nasync function showModeSelectionDropdown(pos: MousePos): Promise<CalendarOperation | null> {\n\treturn new Promise((resolve) => {\n\t\tshowDropdownAtPosition(\n\t\t\t[\n\t\t\t\t{ label: \"updateOneCalendarEvent_action\", click: () => resolve(CalendarOperation.EditThis) },\n\t\t\t\t{ label: \"updateAllCalendarEvents_action\", click: () => resolve(CalendarOperation.EditAll) },\n\t\t\t],\n\t\t\tpos.x,\n\t\t\tpos.y,\n\t\t\t() => resolve(null),\n\t\t)\n\t})\n}\n","import o from \"@tutao/otest\"\nimport { EventDragHandler, EventDragHandlerCallbacks } from \"../../../src/calendar-app/calendar/view/EventDragHandler.js\"\nimport { DAY_IN_MILLIS, defer, downcast } from \"@tutao/tutanota-utils\"\nimport type { DraggedEvent } from \"../../../src/calendar-app/calendar/view/CalendarViewModel.js\"\nimport { makeEvent } from \"./CalendarTestUtils.js\"\nimport { isAllDayEvent } from \"../../../src/common/api/common/utils/CommonCalendarUtils.js\"\nimport { DateTime } from \"luxon\"\nimport { spy } from \"@tutao/tutanota-test-utils\"\nimport { getAllDayDateUTCFromZone, getStartOfDayWithZone, getStartOfNextDayWithZone } from \"../../../src/common/calendar/date/CalendarUtils.js\"\n\nconst INIT_MOUSE_POS = {\n\tx: 0,\n\ty: 0,\n}\nconst NOT_DRAG_MOUSE_POS = {\n\tx: 0,\n\ty: 0,\n}\nconst DRAG_MOUSE_POS = {\n\tx: 100,\n\ty: 0,\n}\no.spec(\"Event Drag Handler\", function () {\n\tconst zone = \"Europe/Berlin\"\n\to.spec(\"Dragging\", function () {\n\t\tconst body: HTMLBodyElement = downcast({\n\t\t\tclassList: {\n\t\t\t\tadd: () => {},\n\t\t\t\tremove: () => {},\n\t\t\t},\n\t\t})\n\t\tlet callbackMock: EventDragHandlerCallbacks\n\t\tlet handler: EventDragHandler\n\t\to.beforeEach(() => {\n\t\t\tcallbackMock = downcast({\n\t\t\t\tonDragStart: spy((draggedEvent: DraggedEvent, diff: number) => {}),\n\t\t\t\tonDragUpdate: spy((diff: number) => {}),\n\t\t\t\tonDragEnd: spy((diff: number) => Promise.resolve()),\n\t\t\t\tonDragCancel: spy(() => {}),\n\t\t\t})\n\t\t\thandler = new EventDragHandler(body, callbackMock)\n\t\t})\n\t\to(\"Noop move drag\", function () {\n\t\t\thandler.handleDrag(new Date(2021, 8, 22), {\n\t\t\t\tx: 0,\n\t\t\t\ty: 0,\n\t\t\t})\n\t\t\to(handler.isDragging).equals(false)\n\t\t\to(callbackMock.onDragStart.callCount).equals(0)\n\t\t})\n\t\to(\"Start then drag then change mind is noop\", async function () {\n\t\t\tconst event = makeEvent(\"event\", new Date(2021, 8, 22), new Date(2021, 8, 23))\n\t\t\thandler.prepareDrag(event, new Date(2021, 8, 22), INIT_MOUSE_POS, true)\n\t\t\t// Dragged a bit\n\t\t\thandler.handleDrag(new Date(2021, 8, 21), DRAG_MOUSE_POS)\n\t\t\to(callbackMock.onDragStart.callCount).equals(1)\n\t\t\t// end drag callback is called with diff set to 0 so no startTime change\n\t\t\tawait handler.endDrag(new Date(2021, 8, 22), DRAG_MOUSE_POS)\n\t\t\to(callbackMock.onDragEnd.callCount).equals(1)\n\t\t\to(callbackMock.onDragEnd.args[0]).equals(0)\n\t\t\to(handler.isDragging).equals(false)\n\t\t})\n\t\to(\"Not moving mouse past 10px threshhold is noop\", async function () {\n\t\t\tconst event = makeEvent(\"event\", new Date(2021, 8, 22), new Date(2021, 8, 23))\n\t\t\tconst callback = spy(() => Promise.resolve(true))\n\t\t\thandler.prepareDrag(event, new Date(2021, 8, 22), INIT_MOUSE_POS, true)\n\t\t\t// Dragged a bit\n\t\t\thandler.handleDrag(new Date(2021, 8, 21), NOT_DRAG_MOUSE_POS)\n\t\t\to(callbackMock.onDragStart.callCount).equals(0)\n\t\t\to(handler.isDragging).equals(false)\n\t\t\t// Drop but didn't move any more\n\t\t\tawait handler.endDrag(new Date(2021, 8, 21), DRAG_MOUSE_POS)\n\t\t\to(callbackMock.onDragEnd.callCount).equals(0)\n\t\t\to(handler.isDragging).equals(false)\n\t\t})\n\t\to(\"Cancel drag\", async function () {\n\t\t\tconst event = makeEvent(\"event\", new Date(2021, 8, 22), new Date(2021, 8, 23))\n\t\t\thandler.prepareDrag(event, new Date(2021, 8, 22), INIT_MOUSE_POS, true)\n\t\t\thandler.handleDrag(new Date(2021, 8, 24), DRAG_MOUSE_POS)\n\t\t\to(handler.isDragging).equals(true)\n\t\t\thandler.cancelDrag()\n\t\t\to(callbackMock.onDragEnd.callCount).equals(0)\n\t\t\to(callbackMock.onDragCancel.callCount).equals(1)\n\t\t\to(handler.isDragging).equals(false)\n\t\t})\n\t\to(\"A good drag and drop run\", async function () {\n\t\t\tlet originalDate = new Date(2021, 8, 22)\n\t\t\tconst event = makeEvent(\"event\", originalDate, new Date(2021, 8, 23))\n\t\t\thandler.prepareDrag(event, new Date(2021, 8, 22), INIT_MOUSE_POS, true)\n\t\t\t// drag start\n\t\t\thandler.handleDrag(new Date(2021, 8, 24), DRAG_MOUSE_POS)\n\t\t\to(callbackMock.onDragStart.callCount).equals(1)\n\t\t\to(callbackMock.onDragStart.callCount).equals(1)\n\t\t\tconst [calendarEvent, timeToMoveBy] = callbackMock.onDragStart.args\n\t\t\to(timeToMoveBy).equals(2 * DAY_IN_MILLIS)\n\t\t\to(handler.isDragging).equals(true)\n\t\t\t// drag update\n\t\t\tlet dragDate = new Date(2021, 8, 25)\n\t\t\thandler.handleDrag(dragDate, DRAG_MOUSE_POS)\n\t\t\to(callbackMock.onDragUpdate.callCount).equals(1)\n\t\t\tconst [updateTimeToMoveBy] = callbackMock.onDragUpdate.args\n\t\t\to(updateTimeToMoveBy).equals(3 * DAY_IN_MILLIS)\n\t\t\t// drag end\n\t\t\tconst deferredCallbackComplete = defer()\n\t\t\t// @ts-ignore\n\t\t\tcallbackMock.onDragEnd = spy(() => deferredCallbackComplete.promise)\n\t\t\tconst endDragPromise = handler.endDrag(dragDate, DRAG_MOUSE_POS)\n\t\t\to(callbackMock.onDragEnd.callCount).equals(1)\n\t\t\tconst [endTimeToMoveBy] = callbackMock.onDragEnd.args\n\t\t\to(endTimeToMoveBy).equals(3 * DAY_IN_MILLIS)\n\t\t\t// check that drag handler state resets itself before onDragEnd callback is complete\n\t\t\to(handler.isDragging).equals(false)\n\t\t\tdeferredCallbackComplete.resolve(true)\n\t\t\tawait endDragPromise\n\t\t})\n\t\to(\"A good drag and drop run from summer to winter time\", async function () {\n\t\t\tlet originalStartDate = DateTime.fromObject(\n\t\t\t\t{\n\t\t\t\t\tyear: 2021,\n\t\t\t\t\tmonth: 10,\n\t\t\t\t\tday: 30,\n\t\t\t\t\thour: 13,\n\t\t\t\t},\n\t\t\t\t{ zone },\n\t\t\t).toJSDate()\n\t\t\tlet newStartDate = DateTime.fromObject(\n\t\t\t\t{\n\t\t\t\t\tyear: 2021,\n\t\t\t\t\tmonth: 10,\n\t\t\t\t\tday: 31,\n\t\t\t\t\thour: 13,\n\t\t\t\t},\n\t\t\t\t{ zone },\n\t\t\t).toJSDate()\n\t\t\tconst shortEvent = makeEvent(\"shortEvent\", originalStartDate, new Date(2021, 9, 30, 13))\n\t\t\t//short event\n\t\t\thandler.prepareDrag(shortEvent, originalStartDate, INIT_MOUSE_POS, false)\n\t\t\thandler.handleDrag(newStartDate, DRAG_MOUSE_POS)\n\t\t\to(callbackMock.onDragStart.callCount).equals(1)\n\t\t\tawait handler.endDrag(newStartDate, DRAG_MOUSE_POS)\n\t\t\tconst oneDayPlusOneHour = 25 * 60 * 60 * 1000\n\t\t\to(callbackMock.onDragEnd.callCount).equals(1)\n\t\t\to(callbackMock.onDragEnd.args[0]).equals(oneDayPlusOneHour) //we want the event to start at the exact same time ignoring changing the clocks\n\n\t\t\to(handler.isDragging).equals(false)\n\t\t})\n\t\to(\"A good drag and drop run from summer to winter time with all day event\", async function () {\n\t\t\tlet originalStartDate = DateTime.fromObject(\n\t\t\t\t{\n\t\t\t\t\tyear: 2021,\n\t\t\t\t\tmonth: 10,\n\t\t\t\t\tday: 30,\n\t\t\t\t\thour: 13,\n\t\t\t\t},\n\t\t\t\t{ zone },\n\t\t\t).toJSDate()\n\t\t\tlet newStartDate = DateTime.fromObject(\n\t\t\t\t{\n\t\t\t\t\tyear: 2021,\n\t\t\t\t\tmonth: 10,\n\t\t\t\t\tday: 31,\n\t\t\t\t\thour: 13,\n\t\t\t\t},\n\t\t\t\t{ zone },\n\t\t\t).toJSDate()\n\t\t\toriginalStartDate = getStartOfDayWithZone(originalStartDate, zone)\n\t\t\tnewStartDate = getStartOfDayWithZone(newStartDate, zone)\n\t\t\tconst alldayEvent = makeEvent(\n\t\t\t\t\"alldayEvent\",\n\t\t\t\tgetAllDayDateUTCFromZone(originalStartDate, zone),\n\t\t\t\tgetAllDayDateUTCFromZone(getStartOfNextDayWithZone(originalStartDate, zone), zone),\n\t\t\t)\n\t\t\to(isAllDayEvent(alldayEvent)).equals(true)(\"is all day event\")\n\t\t\t//short event\n\t\t\thandler.prepareDrag(alldayEvent, originalStartDate, INIT_MOUSE_POS, true)\n\t\t\thandler.handleDrag(newStartDate, DRAG_MOUSE_POS)\n\t\t\to(callbackMock.onDragStart.callCount).equals(1)\n\t\t\tawait handler.endDrag(newStartDate, DRAG_MOUSE_POS)\n\t\t\tconst oneDay = 24 * 60 * 60 * 1000\n\t\t\to(callbackMock.onDragEnd.callCount).equals(1)\n\t\t\to(callbackMock.onDragEnd.args[0]).equals(oneDay) //we want the event to start at the beginning of the day taking changing the clocks into account\n\n\t\t\to(handler.isDragging).equals(false)\n\t\t})\n\t})\n})\n","import o from \"@tutao/otest\"\nimport { getDateFromMousePos, getTimeFromMousePos } from \"../../../src/calendar-app/calendar/gui/CalendarGuiUtils.js\"\n\no.spec(\"CalendarGuiUtils\", function () {\n\to(\"getDateFromMouseClick\", function () {\n\t\tfunction input(x, y, targetWidth, targetHeight) {\n\t\t\treturn {\n\t\t\t\tx,\n\t\t\t\ty,\n\t\t\t\ttargetWidth,\n\t\t\t\ttargetHeight,\n\t\t\t}\n\t\t}\n\n\t\tconst weeks = [\n\t\t\t[new Date(0), new Date(1), new Date(2), new Date(3)],\n\t\t\t[new Date(4), new Date(5), new Date(6), new Date(7)],\n\t\t\t[new Date(8), new Date(9), new Date(10), new Date(11)],\n\t\t]\n\t\to(getDateFromMousePos(input(1, 1, 12, 9), weeks).getTime()).equals(0)\n\t\to(getDateFromMousePos(input(4, 1, 12, 9), weeks).getTime()).equals(1)\n\t\to(getDateFromMousePos(input(7, 1, 12, 9), weeks).getTime()).equals(2)\n\t\to(getDateFromMousePos(input(10, 1, 12, 9), weeks).getTime()).equals(3)\n\t\to(getDateFromMousePos(input(1, 4, 12, 9), weeks).getTime()).equals(4)\n\t\to(getDateFromMousePos(input(4, 4, 12, 9), weeks).getTime()).equals(5)\n\t\to(getDateFromMousePos(input(7, 4, 12, 9), weeks).getTime()).equals(6)\n\t\to(getDateFromMousePos(input(10, 4, 12, 9), weeks).getTime()).equals(7)\n\t\to(getDateFromMousePos(input(1, 7, 12, 9), weeks).getTime()).equals(8)\n\t\to(getDateFromMousePos(input(4, 7, 12, 9), weeks).getTime()).equals(9)\n\t\to(getDateFromMousePos(input(7, 7, 12, 9), weeks).getTime()).equals(10)\n\t\to(getDateFromMousePos(input(10, 7, 12, 9), weeks).getTime()).equals(11)\n\t})\n\to(\"getTimeFromMouseClick\", function () {\n\t\tfunction input(y, targetHeight) {\n\t\t\treturn {\n\t\t\t\tx: 0,\n\t\t\t\ty,\n\t\t\t\ttargetWidth: 0,\n\t\t\t\ttargetHeight,\n\t\t\t}\n\t\t}\n\n\t\to(getTimeFromMousePos(input(0, 4 * 24), 4).toObject()).deepEquals({\n\t\t\thours: 0,\n\t\t\tminutes: 0,\n\t\t})\n\t\to(getTimeFromMousePos(input(1, 4 * 24), 4).toObject()).deepEquals({\n\t\t\thours: 0,\n\t\t\tminutes: 15,\n\t\t})\n\t\to(getTimeFromMousePos(input(2, 4 * 24), 4).toObject()).deepEquals({\n\t\t\thours: 0,\n\t\t\tminutes: 30,\n\t\t})\n\t\to(getTimeFromMousePos(input(3, 4 * 24), 4).toObject()).deepEquals({\n\t\t\thours: 0,\n\t\t\tminutes: 45,\n\t\t})\n\t\to(getTimeFromMousePos(input(4, 4 * 24), 4).toObject()).deepEquals({\n\t\t\thours: 1,\n\t\t\tminutes: 0,\n\t\t})\n\t\to(getTimeFromMousePos(input(2 * 24 - 1, 4 * 24), 4).toObject()).deepEquals({\n\t\t\thours: 11,\n\t\t\tminutes: 45,\n\t\t})\n\t\to(getTimeFromMousePos(input(4 * 24 - 1, 4 * 24), 4).toObject()).deepEquals({\n\t\t\thours: 23,\n\t\t\tminutes: 45,\n\t\t})\n\t})\n})\n","import o from \"@tutao/otest\"\nimport { getDateInZone, makeEvent, makeUserController, zone } from \"./CalendarTestUtils.js\"\nimport type { LoginController } from \"../../../src/common/api/main/LoginController.js\"\nimport { assertThrows, spy } from \"@tutao/tutanota-test-utils\"\nimport { assertNotNull, downcast, getStartOfDay, neverNull, noOp } from \"@tutao/tutanota-utils\"\nimport { CalendarEvent } from \"../../../src/common/api/entities/tutanota/TypeRefs.js\"\nimport { EntityClient } from \"../../../src/common/api/common/EntityClient.js\"\nimport { EventController } from \"../../../src/common/api/main/EventController.js\"\nimport { ProgressTracker } from \"../../../src/common/api/main/ProgressTracker.js\"\nimport { DeviceConfig } from \"../../../src/common/misc/DeviceConfig.js\"\nimport { GroupType, OperationType } from \"../../../src/common/api/common/TutanotaConstants.js\"\nimport { getElementId, getListId } from \"../../../src/common/api/common/utils/EntityUtils.js\"\nimport { EntityRestClientMock } from \"../api/worker/rest/EntityRestClientMock.js\"\nimport { ReceivedGroupInvitationsModel } from \"../../../src/common/sharing/model/ReceivedGroupInvitationsModel.js\"\nimport { ProgressMonitor } from \"../../../src/common/api/common/utils/ProgressMonitor.js\"\nimport { object, when } from \"testdouble\"\nimport { EntityUpdateData } from \"../../../src/common/api/common/utils/EntityUpdateUtils.js\"\nimport stream from \"mithril/stream\"\nimport Stream from \"mithril/stream\"\nimport {\n\tCalendarContactPreviewModelFactory,\n\tCalendarEventEditModelsFactory,\n\tCalendarEventPreviewModelFactory,\n\tCalendarViewModel,\n} from \"../../../src/calendar-app/calendar/view/CalendarViewModel.js\"\nimport { CalendarInfo, CalendarModel } from \"../../../src/calendar-app/calendar/model/CalendarModel.js\"\nimport { CalendarEventsRepository, DaysToEvents } from \"../../../src/common/calendar/date/CalendarEventsRepository.js\"\nimport { MailboxModel } from \"../../../src/common/mailFunctionality/MailboxModel.js\"\nimport { addDaysForEventInstance, getMonthRange } from \"../../../src/common/calendar/date/CalendarUtils.js\"\nimport { CalendarEventModel, CalendarOperation, EventSaveResult } from \"../../../src/calendar-app/calendar/gui/eventeditor-model/CalendarEventModel.js\"\nimport { ContactModel } from \"../../../src/common/contactsFunctionality/ContactModel.js\"\n\nlet saveAndSendMock\nlet rescheduleEventMock\no.spec(\"CalendarViewModel\", function () {\n\tlet entityClientMock: EntityRestClientMock\n\n\tfunction initCalendarViewModel(\n\t\tmakeViewModelCallback: CalendarEventEditModelsFactory,\n\t\teventController?,\n\t): {\n\t\tviewModel: CalendarViewModel\n\t\tcalendarModel: CalendarModel\n\t\teventsRepository: CalendarEventsRepository\n\t} {\n\t\tif (eventController == null) {\n\t\t\teventController = downcast({\n\t\t\t\taddEntityListener: () => Promise.resolve(),\n\t\t\t})\n\t\t}\n\n\t\tconst progressTracker: ProgressTracker = {\n\t\t\tregisterMonitorSync: () => 1,\n\t\t\tgetMonitor: () => {\n\t\t\t\treturn new ProgressMonitor(100, noOp)\n\t\t\t},\n\t\t} as Partial<ProgressTracker> as ProgressTracker\n\t\tconst deviceConfig: DeviceConfig = downcast({\n\t\t\tgetHiddenCalendars: (Id) => [],\n\t\t})\n\t\tconst calendarInvitations: ReceivedGroupInvitationsModel<GroupType.Calendar> = downcast({\n\t\t\tinit() {\n\t\t\t\tnoOp()\n\t\t\t},\n\t\t})\n\t\tconst calendarModel: CalendarModel = object()\n\t\tconst contactModel: ContactModel = object()\n\t\tconst eventMapStream: Stream<DaysToEvents> = stream(new Map())\n\t\tconst calendarInfosStream: Stream<ReadonlyMap<Id, CalendarInfo>> = stream(new Map())\n\t\tconst eventsRepository: CalendarEventsRepository = object()\n\t\twhen(eventsRepository.getEventsForMonths()).thenReturn(eventMapStream)\n\t\twhen(calendarModel.getCalendarInfosStream()).thenReturn(calendarInfosStream)\n\t\tconst userController = makeUserController()\n\t\tconst isNewPaidPlan = async () => true\n\t\tconst loginController: LoginController = downcast({\n\t\t\tgetUserController: () => ({ ...userController, isNewPaidPlan }),\n\t\t\tisInternalUserLoggedIn: () => true,\n\t\t})\n\t\tconst mailboxModel: MailboxModel = object()\n\t\tconst previewModelFactory: CalendarEventPreviewModelFactory = async () => object()\n\t\tconst contactPreviewModelFactory: CalendarContactPreviewModelFactory = async () => object()\n\t\tconst viewModel = new CalendarViewModel(\n\t\t\tloginController,\n\t\t\tmakeViewModelCallback,\n\t\t\tpreviewModelFactory,\n\t\t\tcontactPreviewModelFactory,\n\t\t\tcalendarModel,\n\t\t\teventsRepository,\n\t\t\tnew EntityClient(entityClientMock),\n\t\t\teventController,\n\t\t\tprogressTracker,\n\t\t\tdeviceConfig,\n\t\t\tcalendarInvitations,\n\t\t\tzone,\n\t\t\tmailboxModel,\n\t\t\tcontactModel,\n\t\t)\n\t\tviewModel.allowDrag = () => true\n\t\treturn { viewModel, calendarModel, eventsRepository }\n\t}\n\n\tfunction init(events) {\n\t\tconst month = getMonthRange(getDateInZone(\"2021-01-01\"), zone)\n\t\tconst eventsForDays = new Map()\n\n\t\tfor (let event of events) {\n\t\t\taddDaysForEventInstance(eventsForDays, event, month, zone)\n\t\t}\n\n\t\treturn {\n\t\t\tdays: [\n\t\t\t\tgetDateInZone(\"2021-01-01\"),\n\t\t\t\tgetDateInZone(\"2021-01-02\"),\n\t\t\t\tgetDateInZone(\"2021-01-03\"),\n\t\t\t\tgetDateInZone(\"2021-01-04\"),\n\t\t\t\tgetDateInZone(\"2021-01-05\"),\n\t\t\t\tgetDateInZone(\"2021-01-06\"),\n\t\t\t\tgetDateInZone(\"2021-01-07\"),\n\t\t\t],\n\t\t\teventsForDays,\n\t\t\tmonth,\n\t\t}\n\t}\n\n\to.beforeEach(function () {\n\t\tentityClientMock = new EntityRestClientMock()\n\t\tsaveAndSendMock = spy(() => Promise.resolve(true))\n\t\trescheduleEventMock = spy(() => Promise.resolve())\n\t})\n\to(\"Can init view model\", function () {\n\t\tconst { viewModel } = initCalendarViewModel(makeCalendarEventModel)\n\t\to(viewModel).notEquals(undefined)\n\t\to(viewModel.selectedDate()).deepEquals(getStartOfDay(new Date()))\n\t})\n\to.spec(\"Dragging Events\", function () {\n\t\to(\"Start then drag then change mind is noop\", async function () {\n\t\t\tconst { viewModel } = initCalendarViewModel(makeCalendarEventModel)\n\t\t\tlet originalEventStartTime = new Date(2021, 8, 22)\n\t\t\tconst event = makeEvent(\"event\", originalEventStartTime, new Date(2021, 8, 23))\n\t\t\t// Dragged a bit\n\t\t\tsimulateDrag(event, new Date(2021, 8, 21), viewModel)\n\t\t\t// Went back to original date\n\t\t\tawait simulateEndDrag(originalEventStartTime, new Date(2021, 8, 22), viewModel)\n\t\t\to(viewModel._draggedEvent?.eventClone).equals(undefined)\n\t\t\to(viewModel._transientEvents).deepEquals([])\n\t\t})\n\t\to(\"A good drag and drop run\", async function () {\n\t\t\tconst { viewModel } = initCalendarViewModel(makeCalendarEventModel)\n\t\t\tlet originalDate = new Date(2021, 8, 22)\n\t\t\tconst event = makeEvent(\"event\", originalDate, new Date(2021, 8, 23))\n\t\t\tsimulateDrag(event, new Date(2021, 8, 24), viewModel)\n\t\t\to(viewModel._draggedEvent?.eventClone.startTime.toISOString()).equals(new Date(2021, 8, 24).toISOString())\n\t\t\to(viewModel._draggedEvent?.eventClone.endTime.toISOString()).equals(new Date(2021, 8, 25).toISOString())\n\t\t\tconst temporaryEvent = neverNull(viewModel._draggedEvent?.eventClone)\n\t\t\tlet diff = new Date(2021, 8, 25).getTime() - originalDate.getTime()\n\t\t\tconst endDragPromise = viewModel.onDragEnd(CalendarOperation.EditAll, diff)\n\t\t\to(viewModel._draggedEvent?.eventClone).equals(undefined)\n\t\t\to(viewModel._transientEvents).deepEquals([temporaryEvent])\n\t\t\tawait endDragPromise\n\t\t\t// Don't reset yourself if there is no problems\n\t\t\to(viewModel._draggedEvent?.eventClone).equals(undefined)\n\t\t\to(viewModel._transientEvents).deepEquals([temporaryEvent])\n\t\t})\n\t\to(\"Complete drag and drop and saving fails\", async function () {\n\t\t\tconst { viewModel } = initCalendarViewModel(makeCalendarEventEditModelThatFailsSaving)\n\t\t\tlet originalDate = new Date(2021, 8, 22)\n\t\t\tconst event = makeEvent(\"event\", originalDate, new Date(2021, 8, 23))\n\t\t\tsimulateDrag(event, new Date(2021, 8, 24), viewModel)\n\t\t\tawait simulateEndDrag(originalDate, new Date(2021, 8, 25), viewModel)\n\t\t\t// The callback returned false, so we remove our event from transient events\n\t\t\to(viewModel._draggedEvent?.eventClone).equals(undefined)\n\t\t\to(viewModel._transientEvents).deepEquals([])\n\t\t})\n\t\to(\"Complete drag and drop and saving does an error\", async function () {\n\t\t\tconst { viewModel } = initCalendarViewModel(makeCalendarEventEditModelThatThrowsOnSaving)\n\t\t\tlet originalDate = new Date(2021, 8, 22)\n\t\t\tconst event = makeEvent(\"event\", originalDate, new Date(2021, 8, 23))\n\t\t\tsimulateDrag(event, new Date(2021, 8, 24), viewModel)\n\t\t\tlet diff = new Date(2021, 8, 25).getTime() - originalDate.getTime()\n\t\t\tconst endDragPromise = viewModel.onDragEnd(CalendarOperation.EditAll, diff)\n\t\t\tawait assertThrows(Error, () => endDragPromise)\n\t\t\t// The callback threw, so we remove our event from transient events\n\t\t\to(viewModel._draggedEvent?.eventClone).equals(undefined)\n\t\t\to(viewModel._transientEvents).deepEquals([])\n\t\t})\n\t\to(\"Drag while having temporary events should still work\", async function () {\n\t\t\tconst { viewModel } = initCalendarViewModel(makeCalendarEventModel)\n\t\t\tlet origStartDate1 = new Date(2021, 8, 22)\n\t\t\tconst event1 = makeEvent(\"event1\", origStartDate1, new Date(2021, 8, 23))\n\t\t\tlet origStartDate2 = new Date(2021, 8, 22)\n\t\t\tconst event2 = makeEvent(\"event2\", origStartDate2, new Date(2021, 8, 23))\n\t\t\t//start first drag\n\t\t\tsimulateDrag(event1, new Date(2021, 8, 24), viewModel)\n\t\t\tconst temporaryEvent1 = neverNull(viewModel._draggedEvent?.eventClone)\n\t\t\t//star first drop\n\t\t\tlet diff = new Date(2021, 8, 25).getTime() - origStartDate1.getTime()\n\t\t\tconst endDragPromise1 = viewModel.onDragEnd(CalendarOperation.EditAll, diff)\n\t\t\t//start second drag\n\t\t\tsimulateDrag(event2, new Date(2021, 8, 24), viewModel)\n\t\t\tconst temporaryEvent2 = neverNull(viewModel._draggedEvent?.eventClone)\n\t\t\t//we have a temporary and a transient event\n\t\t\to(viewModel._draggedEvent?.eventClone).equals(temporaryEvent2)\n\t\t\to(viewModel._transientEvents).deepEquals([temporaryEvent1])\n\t\t\t//start second drop\n\t\t\tdiff = new Date(2021, 8, 25).getTime() - origStartDate2.getTime()\n\t\t\tconst endDragPromise2 = viewModel.onDragEnd(CalendarOperation.EditAll, diff)\n\t\t\t// Now we have two transient events\n\t\t\to(viewModel._draggedEvent?.originalEvent).equals(undefined)\n\t\t\to(viewModel._transientEvents).deepEquals([temporaryEvent1, temporaryEvent2])\n\t\t\t//end first drop\n\t\t\tawait endDragPromise1\n\t\t\t//end second drop\n\t\t\tawait endDragPromise2\n\t\t\t// the callback was successful so we keep it in temporary events\n\t\t\to(viewModel._draggedEvent?.originalEvent).equals(undefined)\n\t\t\to(viewModel._transientEvents).deepEquals([temporaryEvent1, temporaryEvent2])\n\t\t})\n\t\to(\"Drag while having temporary events but the second update failed\", async function () {\n\t\t\t// testdouble seems to have difficulty with multiple arguments on .thenResolve\n\t\t\tlet tryCount = 0\n\t\t\tconst { viewModel } = initCalendarViewModel(async () => {\n\t\t\t\tconst eventModel: CalendarEventModel = object()\n\t\t\t\twhen(eventModel.apply()).thenDo(() => {\n\t\t\t\t\ttryCount++\n\t\t\t\t\tif (tryCount === 1) {\n\t\t\t\t\t\treturn EventSaveResult.Saved\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn EventSaveResult.Failed\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\treturn eventModel\n\t\t\t})\n\t\t\tlet origStartDate1 = new Date(2021, 8, 22)\n\t\t\tconst event1 = makeEvent(\"event1\", origStartDate1, new Date(2021, 8, 23), \"uid1\")\n\t\t\tlet origStartDate2 = new Date(2021, 8, 22)\n\t\t\tconst event2 = makeEvent(\"event2\", origStartDate2, new Date(2021, 8, 23), \"uid2\")\n\t\t\t//start first drag\n\t\t\tsimulateDrag(event1, new Date(2021, 8, 24), viewModel)\n\t\t\tconst temporaryEvent1 = neverNull(viewModel._draggedEvent?.eventClone)\n\t\t\t//star first drop\n\t\t\tlet diff = new Date(2021, 8, 25).getTime() - origStartDate1.getTime()\n\t\t\tconst endDragPromise1 = viewModel.onDragEnd(CalendarOperation.EditAll, diff)\n\t\t\t//End first drop\n\t\t\tawait endDragPromise1\n\t\t\t//start second drag\n\t\t\tsimulateDrag(event2, new Date(2021, 8, 24), viewModel)\n\t\t\tconst temporaryEvent2 = neverNull(viewModel._draggedEvent?.eventClone)\n\t\t\to(viewModel._draggedEvent?.originalEvent).equals(event2)\n\t\t\to(viewModel._transientEvents).deepEquals([temporaryEvent1])\n\t\t\t//star second drop\n\t\t\tdiff = new Date(2021, 8, 25).getTime() - origStartDate2.getTime()\n\t\t\tconst endDragPromise2 = viewModel.onDragEnd(CalendarOperation.EditAll, diff)\n\t\t\t// Now we have two transient events\n\t\t\to(viewModel._draggedEvent?.originalEvent).equals(undefined)\n\t\t\to(viewModel._transientEvents).deepEquals([temporaryEvent1, temporaryEvent2])\n\t\t\tawait endDragPromise2\n\t\t\t// saving failed so we remove it from our temporary events\n\t\t\to(viewModel._draggedEvent?.originalEvent).equals(undefined)\n\t\t\to(viewModel._transientEvents).deepEquals([temporaryEvent1])\n\t\t})\n\t\to(\"Drag while having temporary events and then the first update fails\", async function () {\n\t\t\t// testdouble seems to have difficulty with multiple arguments on .thenResolve\n\t\t\tlet tryCount = 0\n\t\t\tconst { viewModel } = initCalendarViewModel(async () => {\n\t\t\t\tconst saveModel: CalendarEventModel = object()\n\t\t\t\twhen(saveModel.apply()).thenDo(() => {\n\t\t\t\t\ttryCount++\n\t\t\t\t\tif (tryCount === 1) {\n\t\t\t\t\t\treturn EventSaveResult.Failed\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn EventSaveResult.Saved\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\treturn saveModel\n\t\t\t})\n\t\t\tlet origStartDate1 = new Date(2021, 8, 22)\n\t\t\tconst event1 = makeEvent(\"event1\", origStartDate1, new Date(2021, 8, 23), \"uid1\")\n\t\t\tlet origStartDate2 = new Date(2021, 8, 22)\n\t\t\tconst event2 = makeEvent(\"event2\", origStartDate2, new Date(2021, 8, 23), \"uid2\")\n\t\t\t//start first drag\n\t\t\tsimulateDrag(event1, new Date(2021, 8, 24), viewModel)\n\t\t\tconst temporaryEvent1 = assertNotNull(viewModel._draggedEvent?.eventClone, \"temporary 1 was null\")\n\t\t\t//start first drop\n\t\t\tlet diff = new Date(2021, 8, 25).getTime() - origStartDate1.getTime()\n\t\t\tconst endDragPromise1 = viewModel.onDragEnd(CalendarOperation.EditAll, diff)\n\t\t\t//start second drag\n\t\t\tsimulateDrag(event2, new Date(2021, 8, 24), viewModel)\n\t\t\tconst temporaryEvent2 = assertNotNull(viewModel._draggedEvent?.eventClone, \"temporary 2 was null\")\n\t\t\t//now we have a temporary and a transient event\n\t\t\to(viewModel._draggedEvent?.originalEvent).equals(event2)\n\t\t\to(viewModel._draggedEvent?.eventClone).equals(temporaryEvent2)\n\t\t\to(viewModel._transientEvents).deepEquals([temporaryEvent1])\n\t\t\t//start second drop\n\t\t\tdiff = new Date(2021, 8, 25).getTime() - origStartDate1.getTime()\n\t\t\t//this will not fail\n\t\t\tconst endDragPromise2 = viewModel.onDragEnd(CalendarOperation.EditAll, diff)\n\t\t\t// Now we have two temporary events and we are not dragging anymore\n\t\t\to(viewModel._draggedEvent?.originalEvent).equals(undefined)\n\t\t\to(viewModel._transientEvents).deepEquals([temporaryEvent1, temporaryEvent2])\n\t\t\tawait endDragPromise1\n\t\t\tawait endDragPromise2\n\t\t\t// the callback failed so we remove it from our temporary events\n\t\t\to(viewModel._draggedEvent?.originalEvent).equals(undefined)\n\t\t\to(viewModel._transientEvents).deepEquals([temporaryEvent2])\n\t\t})\n\t\to(\"Block user from dragging non-editable events\", async function () {\n\t\t\tconst { viewModel } = initCalendarViewModel(makeCalendarEventModel)\n\t\t\tlet originalEventStartTime = new Date(2021, 8, 22)\n\t\t\tconst event = makeEvent(\"event\", originalEventStartTime, new Date(2021, 8, 23))\n\n\t\t\t// Try to drag\n\t\t\tviewModel.allowDrag = () => false\n\t\t\tsimulateDrag(event, new Date(2021, 8, 24), viewModel)\n\n\t\t\to(viewModel._draggedEvent?.eventClone).equals(undefined)\n\t\t})\n\t})\n\to.spec(\"Filtering events\", function () {\n\t\to(\"Before drag, input events are all used\", async function () {\n\t\t\tconst { viewModel, eventsRepository } = initCalendarViewModel(makeCalendarEventModel)\n\n\t\t\tconst inputEvents = [\n\t\t\t\tmakeEvent(\"event1\", getDateInZone(\"2021-01-01\"), getDateInZone(\"2021-01-02\"), \"uid1\"),\n\t\t\t\tmakeEvent(\"event2\", getDateInZone(\"2021-01-01\"), getDateInZone(\"2021-01-03\"), \"uid2\"),\n\t\t\t\tmakeEvent(\"event3\", getDateInZone(\"2021-01-03T13:00\"), getDateInZone(\"2021-01-03T14:30\"), \"uid3\"),\n\t\t\t]\n\t\t\tconst { days, eventsForDays } = init(inputEvents)\n\t\t\tconst expected = {\n\t\t\t\tshortEventsPerDay: [[], [], [inputEvents[2]], [], [], [], []],\n\t\t\t\tlongEvents: [inputEvents[0], inputEvents[1]],\n\t\t\t}\n\n\t\t\teventsRepository.getEventsForMonths()(eventsForDays)\n\n\t\t\tconst { shortEventsPerDay, longEvents } = viewModel.getEventsOnDaysToRender(days)\n\t\t\to({\n\t\t\t\tshortEventsPerDay,\n\t\t\t\tlongEvents: Array.from(longEvents),\n\t\t\t}).deepEquals(expected)\n\t\t})\n\n\t\to(\"During drag, temporary event overrides the original version\", async function () {\n\t\t\tconst { viewModel, eventsRepository } = initCalendarViewModel(makeCalendarEventModel)\n\t\t\tconst inputEvents = [\n\t\t\t\tmakeEvent(\"event1\", getDateInZone(\"2021-01-01\"), getDateInZone(\"2021-01-02\"), \"uid1\"),\n\t\t\t\tmakeEvent(\"event2\", getDateInZone(\"2021-01-01\"), getDateInZone(\"2021-01-03\"), \"uid2\"),\n\t\t\t\tmakeEvent(\"event3\", getDateInZone(\"2021-01-03T13:00\"), getDateInZone(\"2021-01-03T14:30\"), \"uid3\"),\n\t\t\t]\n\t\t\tconst { days, eventsForDays } = init(inputEvents)\n\n\t\t\teventsRepository.getEventsForMonths()(eventsForDays)\n\n\t\t\tsimulateDrag(inputEvents[2], getDateInZone(\"2021-01-04T13:00\"), viewModel)\n\t\t\tconst expected = {\n\t\t\t\tshortEvents: [[], [], [], [viewModel._draggedEvent?.eventClone], [], [], []],\n\t\t\t\tlongEvents: [inputEvents[0], inputEvents[1]],\n\t\t\t} as any\n\t\t\tconst { shortEventsPerDay, longEvents } = viewModel.getEventsOnDaysToRender(days)\n\t\t\to(shortEventsPerDay).deepEquals(expected.shortEvents)\n\t\t\to(Array.from(longEvents)).deepEquals(expected.longEvents)\n\t\t})\n\t\to(\"After drop, before load\", async function () {\n\t\t\tconst { viewModel, eventsRepository } = initCalendarViewModel(makeCalendarEventModel)\n\t\t\tlet originalDateForDraggedEvent = getDateInZone(\"2021-01-03T13:00\")\n\t\t\tconst inputEvents = [\n\t\t\t\tmakeEvent(\"event1\", getDateInZone(\"2021-01-01\"), getDateInZone(\"2021-01-02\"), \"uid1\"),\n\t\t\t\tmakeEvent(\"event2\", getDateInZone(\"2021-01-01\"), getDateInZone(\"2021-01-03\"), \"uid2\"),\n\t\t\t\tmakeEvent(\"event3\", originalDateForDraggedEvent, getDateInZone(\"2021-01-03T14:30\"), \"uid3\"),\n\t\t\t]\n\t\t\tconst { days, eventsForDays } = init(inputEvents)\n\n\t\t\teventsRepository.getEventsForMonths()(eventsForDays)\n\n\t\t\t//drag 2nd event to the 4th\n\t\t\tsimulateDrag(inputEvents[2], getDateInZone(\"2021-01-04T13:00\"), viewModel)\n\t\t\t//end drag with dropping the event on the 5th?\n\t\t\tawait simulateEndDrag(originalDateForDraggedEvent, getDateInZone(\"2021-01-05T13:00\"), viewModel)\n\t\t\tconst expected = {\n\t\t\t\tshortEvents: [[], [], [], [], [viewModel._transientEvents[0]], [], []],\n\t\t\t\tlongEvents: [inputEvents[0], inputEvents[1]],\n\t\t\t}\n\t\t\tconst { shortEventsPerDay, longEvents } = viewModel.getEventsOnDaysToRender(days)\n\t\t\to(shortEventsPerDay).deepEquals(expected.shortEvents)\n\t\t\to(Array.from(longEvents)).deepEquals(expected.longEvents)\n\t\t})\n\t})\n\to.spec(\"entityEventsReceived\", function () {\n\t\to(\"transient event is removed on update\", async function () {\n\t\t\tconst entityListeners: any[] = []\n\t\t\tconst eventController: EventController = downcast({\n\t\t\t\taddEntityListener(listener) {\n\t\t\t\t\tentityListeners.push(listener)\n\t\t\t\t},\n\t\t\t})\n\t\t\tconst { viewModel, eventsRepository } = initCalendarViewModel(makeCalendarEventModel, eventController)\n\t\t\tconst originalDateForDraggedEvent = new Date(2021, 0, 3, 13, 0)\n\t\t\tlet eventToDrag = makeEvent(\"event3\", originalDateForDraggedEvent, new Date(2021, 0, 3, 14, 30), \"uid3\")\n\t\t\tconst inputEvents = [\n\t\t\t\tmakeEvent(\"event1\", new Date(2021, 0, 1), new Date(2021, 0, 2), \"uid1\"),\n\t\t\t\tmakeEvent(\"event2\", new Date(2021, 0, 1), new Date(2021, 0, 3), \"uid2\"),\n\t\t\t\teventToDrag,\n\t\t\t]\n\t\t\tconst { days, eventsForDays, month } = init(inputEvents)\n\n\t\t\teventsRepository.getEventsForMonths()(eventsForDays)\n\n\t\t\t//drag\n\t\t\tsimulateDrag(inputEvents[2], new Date(2021, 0, 4, 13, 0), viewModel)\n\t\t\t//end drag\n\t\t\tconst newData = new Date(2021, 0, 5, 13, 0)\n\t\t\tawait simulateEndDrag(originalDateForDraggedEvent, newData, viewModel)\n\t\t\to(viewModel.temporaryEvents.some((e) => e.uid === eventToDrag.uid)).equals(true)(\"Has transient event\")\n\t\t\to(entityListeners.length).equals(1)(\"Listener was added\")\n\t\t\tconst entityUpdate: EntityUpdateData = {\n\t\t\t\tapplication: \"tutanota\",\n\t\t\t\ttype: \"CalendarEvent\",\n\t\t\t\tinstanceListId: getListId(eventToDrag),\n\t\t\t\tinstanceId: getElementId(eventToDrag),\n\t\t\t\toperation: OperationType.CREATE,\n\t\t\t}\n\t\t\tconst updatedEventFromServer = makeEvent(getElementId(eventToDrag), newData, new Date(2021, 0, 5, 14, 30), assertNotNull(eventToDrag.uid))\n\t\t\tentityClientMock.addListInstances(updatedEventFromServer)\n\t\t\tawait entityListeners[0]([entityUpdate], eventToDrag._ownerGroup)\n\t\t\to(viewModel.temporaryEvents.some((e) => e.uid === eventToDrag.uid)).equals(false)(\"Transient event removed\")\n\t\t})\n\t})\n})\n\nfunction simulateDrag(originalEvent: CalendarEvent, newDate: Date, viewModel: CalendarViewModel) {\n\tlet diff = newDate.getTime() - originalEvent.startTime.getTime()\n\tviewModel.onDragStart(originalEvent, diff)\n\treturn diff\n}\n\nasync function simulateEndDrag(originalDate: Date, newDate: Date, viewModel: CalendarViewModel) {\n\tlet diff = newDate.getTime() - originalDate.getTime()\n\tawait viewModel.onDragEnd(diff, CalendarOperation.EditAll)\n}\n\nasync function makeCalendarEventModel(mode: CalendarOperation, existingEvent: CalendarEvent): Promise<CalendarEventModel> {\n\tconst eventModel: CalendarEventModel = object()\n\twhen(eventModel.apply()).thenResolve(EventSaveResult.Saved)\n\treturn eventModel\n}\n\nasync function makeCalendarEventEditModelThatFailsSaving(mode: CalendarOperation, existingEvent: CalendarEvent): Promise<CalendarEventModel> {\n\tconst eventModel: CalendarEventModel = object()\n\twhen(eventModel.apply()).thenResolve(EventSaveResult.Failed)\n\treturn eventModel\n}\n\nasync function makeCalendarEventEditModelThatThrowsOnSaving(mode: CalendarOperation, existingEvent: CalendarEvent): Promise<CalendarEventModel> {\n\tconst eventModel: CalendarEventModel = object()\n\twhen(eventModel.apply()).thenReject(new Error(\"whoopsie\"))\n\treturn eventModel\n}\n","import o from \"@tutao/otest\"\nimport { AccountType, FeatureType } from \"../../../../src/common/api/common/TutanotaConstants.js\"\nimport { hasPlanWithInvites } from \"../../../../src/calendar-app/calendar/gui/eventeditor-model/CalendarNotificationModel.js\"\nimport { LoginController } from \"../../../../src/common/api/main/LoginController.js\"\nimport { object, replace, when } from \"testdouble\"\nimport { Customer, PlanConfigurationTypeRef } from \"../../../../src/common/api/entities/sys/TypeRefs.js\"\nimport { UserController } from \"../../../../src/common/api/main/UserController.js\"\nimport { createTestEntity } from \"../../TestUtils.js\"\n\no.spec(\"CalendarNotificationModel\", function () {\n\tlet userController: UserController\n\tlet customer: Customer\n\tlet logins: LoginController\n\n\to.beforeEach(function () {\n\t\tuserController = object()\n\t\tcustomer = object()\n\t\tlogins = object()\n\t\twhen(userController.loadCustomer()).thenResolve(customer)\n\t\twhen(logins.getUserController()).thenReturn(userController)\n\t})\n\n\to.spec(\"hasPlanWithInvites\", function () {\n\t\to(\"available for users with new paid plan that contains invites\", async function () {\n\t\t\twhen(userController.isNewPaidPlan()).thenResolve(true)\n\t\t\twhen(userController.getPlanConfig()).thenResolve(createTestEntity(PlanConfigurationTypeRef, { eventInvites: true }))\n\t\t\treplace(userController, \"user\", { accountType: AccountType.PAID })\n\t\t\treplace(customer, \"customizations\", [])\n\t\t\to(await hasPlanWithInvites(logins)).equals(true)\n\t\t})\n\n\t\to(\"not available for users with new paid plan that does not contain invites\", async function () {\n\t\t\twhen(userController.isNewPaidPlan()).thenResolve(true)\n\t\t\twhen(userController.getPlanConfig()).thenResolve(createTestEntity(PlanConfigurationTypeRef, { eventInvites: false }))\n\t\t\treplace(userController, \"user\", { accountType: AccountType.PAID })\n\t\t\to(await hasPlanWithInvites(logins)).equals(false)\n\t\t})\n\n\t\to(\"not available for free users will is true for free accounts\", async function () {\n\t\t\twhen(userController.isNewPaidPlan()).thenResolve(false)\n\t\t\treplace(userController, \"user\", { accountType: AccountType.FREE })\n\t\t\treplace(customer, \"customizations\", [])\n\t\t\to(await hasPlanWithInvites(logins)).equals(false)\n\t\t})\n\n\t\to(\"available for premium users with business subscription\", async function () {\n\t\t\twhen(userController.isNewPaidPlan()).thenResolve(false)\n\t\t\treplace(userController, \"user\", { accountType: AccountType.PAID })\n\t\t\twhen(userController.getPlanConfig()).thenResolve({ eventInvites: true })\n\t\t\treplace(customer, \"customizations\", [{ feature: FeatureType.BusinessFeatureEnabled }])\n\t\t\to(await hasPlanWithInvites(logins)).equals(true)\n\t\t})\n\n\t\to(\"not available for external users\", async function () {\n\t\t\twhen(userController.isNewPaidPlan()).thenResolve(false)\n\t\t\treplace(userController, \"user\", { accountType: AccountType.EXTERNAL })\n\t\t\to(await hasPlanWithInvites(logins)).equals(false)\n\t\t})\n\t})\n})\n","import o from \"@tutao/otest\"\nimport { matchers, object, when } from \"testdouble\"\nimport { stringToUtf8Uint8Array } from \"@tutao/tutanota-utils\"\nimport { WebauthnClient } from \"../../../../src/common/misc/2fa/webauthn/WebauthnClient.js\"\nimport { WebAuthnFacade } from \"../../../../src/common/native/common/generatedipc/WebAuthnFacade.js\"\nimport { U2fChallengeTypeRef, U2fKeyTypeRef } from \"../../../../src/common/api/entities/sys/TypeRefs.js\"\nimport { createTestEntity, domainConfigStub } from \"../../TestUtils.js\"\nimport { DomainConfigProvider } from \"../../../../src/common/api/common/DomainConfigProvider.js\"\n\no.spec(\"WebauthnClient\", function () {\n\tlet webauthn: WebAuthnFacade\n\tlet client: WebauthnClient\n\tlet domainConfigProvider: DomainConfigProvider\n\tconst tutanotaWebauthnUrl = \"https://mail.tutanota.com/webauthn\"\n\tconst tutanotaApiBaseUrl = \"https://mail.tutanota.com\"\n\tconst tutanotaWebauthnMobileUrl = \"https://mail.tutanota.com/webauthnmobile\"\n\tlet isApp: boolean\n\n\tasync function testSelectedKey(givenKeys, expectedDomain): ReturnType<WebauthnClient[\"authenticate\"]> {\n\t\tconst keys = givenKeys.map((appId) =>\n\t\t\tcreateTestEntity(U2fKeyTypeRef, {\n\t\t\t\tappId,\n\t\t\t\tkeyHandle: stringToUtf8Uint8Array(appId),\n\t\t\t}),\n\t\t)\n\t\tconst challenge = createTestEntity(U2fChallengeTypeRef, {\n\t\t\tkeys,\n\t\t})\n\t\tconst expectedKeys = keys.map((key) => {\n\t\t\treturn {\n\t\t\t\tid: key.keyHandle,\n\t\t\t} as const\n\t\t})\n\t\twhen(\n\t\t\twebauthn.sign({\n\t\t\t\tchallenge: matchers.anything(),\n\t\t\t\tkeys: expectedKeys,\n\t\t\t\tdomain: expectedDomain,\n\t\t\t}),\n\t\t).thenResolve({\n\t\t\trawId: new Uint8Array(1),\n\t\t\tclientDataJSON: new Uint8Array(1),\n\t\t\tsignature: new Uint8Array(1),\n\t\t\tauthenticatorData: new Uint8Array(1),\n\t\t})\n\n\t\treturn client.authenticate(challenge)\n\t}\n\n\to.beforeEach(function () {\n\t\twebauthn = object()\n\t\tdomainConfigProvider = object()\n\t\twhen(domainConfigProvider.getDomainConfigForHostname(\"mail.tutanota.com\", \"https:\", matchers.anything())).thenReturn({\n\t\t\t...domainConfigStub,\n\t\t\tlegacyWebauthnUrl: tutanotaWebauthnUrl,\n\t\t\twebauthnUrl: tutanotaWebauthnUrl,\n\t\t\tapiUrl: tutanotaApiBaseUrl,\n\t\t\twebauthnMobileUrl: tutanotaWebauthnMobileUrl,\n\t\t})\n\t\tclient = new WebauthnClient(webauthn, domainConfigProvider, isApp)\n\t})\n\n\to.spec(\"not running as a mobile app\", function () {\n\t\to.before(function () {\n\t\t\tisApp = false\n\t\t})\n\t\to.spec(\"auth\", function () {\n\t\t\to.spec(\"keys for different domains\", function () {\n\t\t\t\to(\"tutanota webauthn key\", async function () {\n\t\t\t\t\twhen(domainConfigProvider.getCurrentDomainConfig()).thenReturn({\n\t\t\t\t\t\t...domainConfigStub,\n\t\t\t\t\t\tlegacyWebauthnUrl: tutanotaWebauthnUrl,\n\t\t\t\t\t})\n\t\t\t\t\tconst result = await testSelectedKey(\n\t\t\t\t\t\t[\"tutanota.com\", \"another.domain.com\", \"https://tutanota.com/u2f-appid.json\", \"https://legacy.another.domain/u2f-appid.json\"],\n\t\t\t\t\t\ttutanotaWebauthnUrl,\n\t\t\t\t\t)\n\t\t\t\t\to(result.apiBaseUrl).equals(tutanotaApiBaseUrl)\n\t\t\t\t})\n\n\t\t\t\to(\"another webauthn key\", async function () {\n\t\t\t\t\tconst domainConfig = {\n\t\t\t\t\t\t...domainConfigStub,\n\t\t\t\t\t\twebauthnUrl: \"https://another.domain.com/webauthn\",\n\t\t\t\t\t\tapiUrl: \"https://another.domain.com\",\n\t\t\t\t\t}\n\t\t\t\t\twhen(domainConfigProvider.getCurrentDomainConfig()).thenReturn(domainConfig)\n\t\t\t\t\twhen(domainConfigProvider.getDomainConfigForHostname(\"another.domain.com\", \"https:\", matchers.anything())).thenReturn(domainConfig)\n\t\t\t\t\twhen(domainConfigProvider.getDomainConfigForHostname(\"another.domain.com\", \"https:\")).thenReturn(domainConfig)\n\t\t\t\t\tconst result = await testSelectedKey(\n\t\t\t\t\t\t[\"another.domain.com\", \"https://tutanota.com/u2f-appid.json\", \"https://legacy.another.domain/u2f-appid.json\"],\n\t\t\t\t\t\t\"https://another.domain.com/webauthn\",\n\t\t\t\t\t)\n\t\t\t\t\to(result.apiBaseUrl).equals(\"https://another.domain.com\")\n\t\t\t\t})\n\n\t\t\t\to(\"tutanota legacy key\", async function () {\n\t\t\t\t\twhen(domainConfigProvider.getCurrentDomainConfig()).thenReturn({\n\t\t\t\t\t\t...domainConfigStub,\n\t\t\t\t\t\tlegacyWebauthnUrl: tutanotaWebauthnUrl,\n\t\t\t\t\t})\n\t\t\t\t\tconst result = await testSelectedKey(\n\t\t\t\t\t\t[\"https://tutanota.com/u2f-appid.json\", \"https://legacy.another.domain/u2f-appid.json\"],\n\t\t\t\t\t\ttutanotaWebauthnUrl,\n\t\t\t\t\t)\n\t\t\t\t\to(result.apiBaseUrl).equals(tutanotaApiBaseUrl)\n\t\t\t\t})\n\n\t\t\t\to(\"whitelabel legacy key\", async function () {\n\t\t\t\t\tconst domainConfig = {\n\t\t\t\t\t\t...domainConfigStub,\n\t\t\t\t\t\tlegacyWebauthnUrl: \"https://legacy.another.domain/webauthn\",\n\t\t\t\t\t\twebauthnUrl: \"https://legacy.another.domain/webauthn\",\n\t\t\t\t\t\tapiUrl: \"https:///legacy.another.domain\",\n\t\t\t\t\t}\n\t\t\t\t\twhen(domainConfigProvider.getCurrentDomainConfig()).thenReturn(domainConfig)\n\t\t\t\t\twhen(domainConfigProvider.getDomainConfigForHostname(\"legacy.another.domain\", \"https:\", matchers.anything())).thenReturn(domainConfig)\n\t\t\t\t\tconst result = await testSelectedKey(\n\t\t\t\t\t\t[\"https://legacy.another.domain/u2f-appid.json\", \"https://legacy.more.domain/u2f-appid.json\"],\n\t\t\t\t\t\t\"https://legacy.another.domain/webauthn\", // just the first one\n\t\t\t\t\t)\n\t\t\t\t\to(result.apiBaseUrl).equals(\"https:///legacy.another.domain\")\n\t\t\t\t})\n\n\t\t\t\to(\"tuta.com key, on tuta.com domain\", async function () {\n\t\t\t\t\tconst domainConfig = {\n\t\t\t\t\t\t...domainConfigStub,\n\t\t\t\t\t\tlegacyWebauthnUrl: \"https://mail.tutanota.com/webauthn\",\n\t\t\t\t\t\twebauthnUrl: \"https://app.tuta.com/webauthn\",\n\t\t\t\t\t\tapiUrl: \"https:///app.tuta.com\",\n\t\t\t\t\t}\n\t\t\t\t\twhen(domainConfigProvider.getCurrentDomainConfig()).thenReturn(domainConfig)\n\t\t\t\t\twhen(domainConfigProvider.getDomainConfigForHostname(\"app.tuta.com\", \"https:\", matchers.anything())).thenReturn(domainConfig)\n\t\t\t\t\twhen(domainConfigProvider.getDomainConfigForHostname(\"app.tuta.com\", \"https:\")).thenReturn(domainConfig)\n\t\t\t\t\tconst result = await testSelectedKey(\n\t\t\t\t\t\t[\"app.tuta.com\"],\n\t\t\t\t\t\t\"https://app.tuta.com/webauthn\", // just the first one\n\t\t\t\t\t)\n\t\t\t\t\to(result.apiBaseUrl).equals(\"https:///app.tuta.com\")\n\t\t\t\t})\n\n\t\t\t\to(\"tuta.com key, on tutanota.com domain\", async function () {\n\t\t\t\t\tconst tutaDomainConfig = {\n\t\t\t\t\t\t...domainConfigStub,\n\t\t\t\t\t\tlegacyWebauthnUrl: \"https://mail.tutanota.com/webauthn\",\n\t\t\t\t\t\twebauthnUrl: \"https://app.tuta.com/webauthn\",\n\t\t\t\t\t\tapiUrl: \"https:///app.tuta.com\",\n\t\t\t\t\t}\n\t\t\t\t\twhen(domainConfigProvider.getCurrentDomainConfig()).thenReturn(tutaDomainConfig)\n\t\t\t\t\twhen(domainConfigProvider.getDomainConfigForHostname(\"app.tuta.com\", \"https:\", matchers.anything())).thenReturn(tutaDomainConfig)\n\t\t\t\t\tconst result = await testSelectedKey(\n\t\t\t\t\t\t[\"tuta.com\"],\n\t\t\t\t\t\t\"https://app.tuta.com/webauthn\", // just the first one\n\t\t\t\t\t)\n\t\t\t\t\to(result.apiBaseUrl).equals(\"https:///app.tuta.com\")\n\t\t\t\t})\n\n\t\t\t\to(\"tutanota.com key, on tuta.com domain\", async function () {\n\t\t\t\t\tconst tutaDomainConfig = {\n\t\t\t\t\t\t...domainConfigStub,\n\t\t\t\t\t\tlegacyWebauthnUrl: \"https://mail.tutanota.com/webauthn\",\n\t\t\t\t\t\twebauthnUrl: \"https://app.tuta.com/webauthn\",\n\t\t\t\t\t\tapiUrl: \"https:///app.tuta.com\",\n\t\t\t\t\t}\n\t\t\t\t\twhen(domainConfigProvider.getCurrentDomainConfig()).thenReturn(tutaDomainConfig)\n\t\t\t\t\twhen(domainConfigProvider.getDomainConfigForHostname(\"app.tuta.com\")).thenReturn(tutaDomainConfig)\n\t\t\t\t\tconst result = await testSelectedKey(\n\t\t\t\t\t\t[\"tutanota.com\"],\n\t\t\t\t\t\ttutanotaWebauthnUrl, // just the first one\n\t\t\t\t\t)\n\t\t\t\t\to(result.apiBaseUrl).equals(\"https://mail.tutanota.com\")\n\t\t\t\t})\n\t\t\t})\n\t\t})\n\t})\n\n\to.spec(\"when running as an app\", function () {\n\t\to.before(function () {\n\t\t\tisApp = true\n\t\t})\n\t\to(\"tutanota webauthn key\", async function () {\n\t\t\twhen(domainConfigProvider.getCurrentDomainConfig()).thenReturn({\n\t\t\t\t...domainConfigStub,\n\t\t\t\tlegacyWebauthnMobileUrl: tutanotaWebauthnMobileUrl,\n\t\t\t})\n\t\t\tconst result = await testSelectedKey(\n\t\t\t\t[\"tutanota.com\", \"another.domain.com\", \"https://tutanota.com/u2f-appid.json\", \"https://legacy.another.domain/u2f-appid.json\"],\n\t\t\t\ttutanotaWebauthnMobileUrl,\n\t\t\t)\n\t\t\to(result.apiBaseUrl).equals(tutanotaApiBaseUrl)\n\t\t})\n\n\t\to(\"tuta webauthn key\", async function () {\n\t\t\twhen(domainConfigProvider.getCurrentDomainConfig()).thenReturn({\n\t\t\t\t...domainConfigStub,\n\t\t\t\twebauthnMobileUrl: tutanotaWebauthnMobileUrl,\n\t\t\t})\n\t\t\tconst result = await testSelectedKey(\n\t\t\t\t[\"tuta.com\", \"another.domain.com\", \"https://tutanota.com/u2f-appid.json\", \"https://legacy.another.domain/u2f-appid.json\"],\n\t\t\t\ttutanotaWebauthnMobileUrl,\n\t\t\t)\n\t\t\to(result.apiBaseUrl).equals(tutanotaApiBaseUrl)\n\t\t})\n\t})\n})\n","import o from \"@tutao/otest\"\nimport { difference } from \"@tutao/tutanota-utils\"\n// @ts-ignore[untyped-import]\nimport en from \"../../../src/mail-app/translations/en.js\"\n// @ts-ignore[untyped-import]\nimport de from \"../../../src/mail-app/translations/de.js\"\n// @ts-ignore[untyped-import]\nimport de_sie from \"../../../src/mail-app/translations/de_sie.js\"\n\no.spec(\"synchronisation of translation keys\", function () {\n\to(\"en, de and de_sie have exactly the same keys\", async function () {\n\t\tconst enKeys = Object.keys(en.keys)\n\t\tconst deKeys = Object.keys(de.keys)\n\t\tconst deSieKeys = Object.keys(de_sie.keys)\n\t\tconst extraKeysInEn = difference(enKeys, deKeys)\n\t\tconst extraKeysInDe = difference(deKeys, enKeys)\n\t\tconst extraKeysInDeSie = difference(deSieKeys, deKeys)\n\t\tconst keysNotInDeSie = difference(deKeys, deSieKeys)\n\t\to(extraKeysInEn).deepEquals([])(\"extra keys in en\")\n\t\to(extraKeysInDe).deepEquals([])(\"extra keys in de\")\n\t\to(extraKeysInDeSie).deepEquals([])(\"extra keys in de_sie\")\n\t\to(keysNotInDeSie).deepEquals([])(\"keys not in de_sie\")\n\t})\n})","import o from \"@tutao/otest\"\nimport {\n\tASSIGNMENT_UPDATE_INTERVAL_MS,\n\tEphemeralUsageTestStorage,\n\tPersistedAssignmentData,\n\tStorageBehavior,\n\tUsageTestModel,\n\tUsageTestStorage,\n} from \"../../../src/common/misc/UsageTestModel.js\"\nimport {\n\tcreateUsageTestAssignment,\n\tcreateUsageTestAssignmentIn,\n\tcreateUsageTestAssignmentOut,\n\tcreateUsageTestMetricData,\n\tcreateUsageTestParticipationIn,\n\tUsageTestAssignmentInTypeRef,\n\tUsageTestAssignmentOutTypeRef,\n\tUsageTestAssignmentTypeRef,\n\tUsageTestParticipationInTypeRef,\n} from \"../../../src/common/api/entities/usage/TypeRefs.js\"\nimport { matchers, object, replace, verify, when } from \"testdouble\"\nimport { clone } from \"@tutao/tutanota-utils\"\nimport { Stage, UsageTest, UsageTestController } from \"@tutao/tutanota-usagetests\"\nimport { SuspensionBehavior } from \"../../../src/common/api/worker/rest/RestClient.js\"\nimport { UsageTestAssignmentService, UsageTestParticipationService } from \"../../../src/common/api/entities/usage/Services.js\"\nimport { IServiceExecutor } from \"../../../src/common/api/common/ServiceRequest.js\"\nimport modelInfo from \"../../../src/common/api/entities/usage/ModelInfo.js\"\nimport { EntityClient } from \"../../../src/common/api/common/EntityClient.js\"\nimport { LoginController } from \"../../../src/common/api/main/LoginController.js\"\nimport { createCustomerProperties, CustomerPropertiesTypeRef } from \"../../../src/common/api/entities/sys/TypeRefs.js\"\nimport { UserController } from \"../../../src/common/api/main/UserController.js\"\nimport { createUserSettingsGroupRoot, UserSettingsGroupRootTypeRef } from \"../../../src/common/api/entities/tutanota/TypeRefs.js\"\nimport { EventController } from \"../../../src/common/api/main/EventController.js\"\nimport { createTestEntity } from \"../TestUtils.js\"\n\nconst { anything } = matchers\n\no.spec(\"UsageTestModel\", function () {\n\tlet usageTestModel: UsageTestModel\n\tlet serviceExecutor: IServiceExecutor\n\tlet entityClient: EntityClient\n\tlet persistentStorage: UsageTestStorage\n\tlet ephemeralStorage: UsageTestStorage\n\tlet userControllerMock: UserController\n\tlet loginControllerMock: LoginController\n\tlet eventControllerMock: EventController\n\tlet usageTestController: UsageTestController\n\tconst testDeviceId = \"123testDeviceId321\"\n\n\tconst dateProvider = {\n\t\tnow(): number {\n\t\t\treturn Date.now()\n\t\t},\n\t\ttimeZone(): string {\n\t\t\tthrow new Error(\"Not implemented by this provider\")\n\t\t},\n\t}\n\n\tconst oldAssignment = createTestEntity(UsageTestAssignmentTypeRef, {\n\t\tname: \"oldAssignment\",\n\t\tvariant: \"3\",\n\t\tstages: [],\n\t\tsendPings: true,\n\t\ttestId: \"testId123\",\n\t})\n\tconst assignmentData: PersistedAssignmentData = {\n\t\tupdatedAt: dateProvider.now() - ASSIGNMENT_UPDATE_INTERVAL_MS * 2,\n\t\tusageModelVersion: modelInfo.version,\n\t\tassignments: [oldAssignment],\n\t}\n\n\tconst newAssignment = createTestEntity(UsageTestAssignmentTypeRef, {\n\t\tname: \"assignment1\",\n\t\tvariant: \"1\",\n\t\tstages: [],\n\t\tsendPings: true,\n\t\ttestId: \"testId123\",\n\t})\n\n\to.beforeEach(function () {\n\t\tserviceExecutor = object()\n\t\tentityClient = object()\n\n\t\tuserControllerMock = object()\n\t\tloginControllerMock = object()\n\t\treplace(loginControllerMock, \"isUserLoggedIn\", () => true)\n\n\t\teventControllerMock = object()\n\n\t\tusageTestController = object()\n\n\t\twhen(loginControllerMock.getUserController()).thenReturn(userControllerMock)\n\n\t\tephemeralStorage = new EphemeralUsageTestStorage()\n\t\tpersistentStorage = new EphemeralUsageTestStorage()\n\t\tusageTestModel = new UsageTestModel(\n\t\t\t{\n\t\t\t\t[StorageBehavior.Persist]: persistentStorage,\n\t\t\t\t[StorageBehavior.Ephemeral]: ephemeralStorage,\n\t\t\t},\n\t\t\tdateProvider,\n\t\t\tserviceExecutor,\n\t\t\tentityClient,\n\t\t\tloginControllerMock,\n\t\t\teventControllerMock,\n\t\t\t() => usageTestController,\n\t\t)\n\n\t\treplace(usageTestModel, \"customerProperties\", createTestEntity(CustomerPropertiesTypeRef, { usageDataOptedOut: false }))\n\t\treplace(userControllerMock, \"userSettingsGroupRoot\", createTestEntity(UserSettingsGroupRootTypeRef, { usageDataOptedIn: true }))\n\t})\n\n\tasync function assertStored(storage, result, assignment) {\n\t\to(result[0].testId).equals(assignment.testId)\n\t\tconst storedAssignment = await storage.getAssignments()\n\t\to(storedAssignment?.assignments![0].testId).equals(assignment.testId)\n\t\to(await storage.getTestDeviceId()).equals(testDeviceId)\n\t}\n\n\to.spec(\"usage tests\", function () {\n\t\to.spec(\"usage test model loading assignments\", function () {\n\t\t\to(\"when there's no deviceId it does POST\", async function () {\n\t\t\t\twhen(\n\t\t\t\t\tserviceExecutor.post(UsageTestAssignmentService, createTestEntity(UsageTestAssignmentInTypeRef, {}), {\n\t\t\t\t\t\tsuspensionBehavior: SuspensionBehavior.Throw,\n\t\t\t\t\t}),\n\t\t\t\t).thenResolve(\n\t\t\t\t\tcreateTestEntity(UsageTestAssignmentOutTypeRef, {\n\t\t\t\t\t\tassignments: [newAssignment],\n\t\t\t\t\t\ttestDeviceId: testDeviceId,\n\t\t\t\t\t}),\n\t\t\t\t)\n\n\t\t\t\tconst result = await usageTestModel.loadActiveUsageTests()\n\t\t\t\tawait assertStored(ephemeralStorage, result, newAssignment)\n\t\t\t})\n\n\t\t\to(\"loads from server because model version has changed\", async function () {\n\t\t\t\tawait ephemeralStorage.storeTestDeviceId(testDeviceId)\n\t\t\t\tawait ephemeralStorage.storeAssignments({\n\t\t\t\t\tassignments: [],\n\t\t\t\t\tusageModelVersion: -1, // definitely outdated!\n\t\t\t\t\tupdatedAt: dateProvider.now() - 1,\n\t\t\t\t})\n\n\t\t\t\twhen(\n\t\t\t\t\tserviceExecutor.put(UsageTestAssignmentService, createTestEntity(UsageTestAssignmentInTypeRef, { testDeviceId }), {\n\t\t\t\t\t\tsuspensionBehavior: SuspensionBehavior.Throw,\n\t\t\t\t\t}),\n\t\t\t\t).thenResolve(\n\t\t\t\t\tcreateTestEntity(UsageTestAssignmentOutTypeRef, {\n\t\t\t\t\t\tassignments: [newAssignment],\n\t\t\t\t\t\ttestDeviceId: testDeviceId,\n\t\t\t\t\t}),\n\t\t\t\t)\n\n\t\t\t\tconst result = await usageTestModel.loadActiveUsageTests()\n\t\t\t\tawait assertStored(ephemeralStorage, result, newAssignment)\n\t\t\t})\n\n\t\t\to(\"loads from server and stores if nothing is stored\", async function () {\n\t\t\t\twhen(\n\t\t\t\t\tserviceExecutor.put(UsageTestAssignmentService, createTestEntity(UsageTestAssignmentInTypeRef, { testDeviceId }), {\n\t\t\t\t\t\tsuspensionBehavior: SuspensionBehavior.Throw,\n\t\t\t\t\t}),\n\t\t\t\t).thenResolve(\n\t\t\t\t\tcreateTestEntity(UsageTestAssignmentOutTypeRef, {\n\t\t\t\t\t\tassignments: [newAssignment],\n\t\t\t\t\t\ttestDeviceId: testDeviceId,\n\t\t\t\t\t}),\n\t\t\t\t)\n\n\t\t\t\tawait ephemeralStorage.storeTestDeviceId(testDeviceId)\n\n\t\t\t\tconst result = await usageTestModel.loadActiveUsageTests()\n\n\t\t\t\tawait assertStored(ephemeralStorage, result, newAssignment)\n\t\t\t})\n\n\t\t\to(\"returns result from storage if it's there\", async function () {\n\t\t\t\tawait ephemeralStorage.storeTestDeviceId(testDeviceId)\n\t\t\t\tassignmentData.updatedAt = dateProvider.now()\n\t\t\t\tawait ephemeralStorage.storeAssignments(assignmentData)\n\n\t\t\t\tconst result = await usageTestModel.loadActiveUsageTests()\n\n\t\t\t\tawait assertStored(ephemeralStorage, result, oldAssignment)\n\t\t\t})\n\n\t\t\to(\"data outdated, loads from the server and stores\", async function () {\n\t\t\t\tawait ephemeralStorage.storeTestDeviceId(testDeviceId)\n\t\t\t\tawait ephemeralStorage.storeAssignments(assignmentData)\n\n\t\t\t\twhen(\n\t\t\t\t\tserviceExecutor.put(UsageTestAssignmentService, createTestEntity(UsageTestAssignmentInTypeRef, { testDeviceId }), {\n\t\t\t\t\t\tsuspensionBehavior: SuspensionBehavior.Throw,\n\t\t\t\t\t}),\n\t\t\t\t).thenResolve(\n\t\t\t\t\tcreateTestEntity(UsageTestAssignmentOutTypeRef, {\n\t\t\t\t\t\tassignments: [newAssignment],\n\t\t\t\t\t\ttestDeviceId: testDeviceId,\n\t\t\t\t\t}),\n\t\t\t\t)\n\t\t\t\tconst result = await usageTestModel.loadActiveUsageTests()\n\t\t\t\tawait assertStored(ephemeralStorage, result, newAssignment)\n\t\t\t})\n\n\t\t\to(\"data not outdated, returns result from storage\", async function () {\n\t\t\t\tawait ephemeralStorage.storeTestDeviceId(testDeviceId)\n\t\t\t\tconst nonOutdatedAssignmentData = clone(assignmentData)\n\t\t\t\tnonOutdatedAssignmentData.updatedAt = dateProvider.now() - ASSIGNMENT_UPDATE_INTERVAL_MS / 2\n\t\t\t\tawait ephemeralStorage.storeAssignments(nonOutdatedAssignmentData)\n\n\t\t\t\tconst result = await usageTestModel.loadActiveUsageTests()\n\t\t\t\tawait assertStored(ephemeralStorage, result, oldAssignment)\n\t\t\t})\n\t\t})\n\n\t\to.spec(\"sendPing\", function () {\n\t\t\to(\"sends ping\", async function () {\n\t\t\t\tawait ephemeralStorage.storeTestDeviceId(testDeviceId)\n\n\t\t\t\tconst usageTest: UsageTest = new UsageTest(\"testId\", \"testName\", 1, true)\n\t\t\t\tusageTest.pingAdapter = usageTestModel\n\t\t\t\tconst stage = new Stage(0, usageTest, 1, 1)\n\t\t\t\tusageTest.addStage(stage)\n\t\t\t\tconst metric = {\n\t\t\t\t\tname: \"foo\",\n\t\t\t\t\tvalue: \"bar\",\n\t\t\t\t}\n\t\t\t\tstage.setMetric(metric)\n\n\t\t\t\twhen(\n\t\t\t\t\tserviceExecutor.post(\n\t\t\t\t\t\tUsageTestParticipationService,\n\t\t\t\t\t\tcreateTestEntity(UsageTestParticipationInTypeRef, {\n\t\t\t\t\t\t\ttestId: usageTest.testId,\n\t\t\t\t\t\t\tmetrics: [createUsageTestMetricData(metric)],\n\t\t\t\t\t\t\tstage: stage.number.toString(),\n\t\t\t\t\t\t\ttestDeviceId: testDeviceId,\n\t\t\t\t\t\t}),\n\t\t\t\t\t),\n\t\t\t\t).thenResolve(undefined)\n\n\t\t\t\tawait usageTestModel.sendPing(usageTest, stage)\n\n\t\t\t\tverify(serviceExecutor.post(UsageTestParticipationService, anything()), { times: 1, ignoreExtraArgs: true })\n\t\t\t})\n\n\t\t\to(\"sends pings in correct order\", async function () {\n\t\t\t\tawait ephemeralStorage.storeTestDeviceId(testDeviceId)\n\n\t\t\t\tconst usageTest: UsageTest = new UsageTest(\"testId\", \"testName\", 1, true)\n\t\t\t\tusageTest.pingAdapter = usageTestModel\n\n\t\t\t\tfor (let i = 0; i < 3; i++) {\n\t\t\t\t\tconst stage = new Stage(i, usageTest, 1, 1)\n\t\t\t\t\tusageTest.addStage(stage)\n\t\t\t\t}\n\n\t\t\t\tconst pingOrder: Array<string> = []\n\n\t\t\t\twhen(\n\t\t\t\t\tserviceExecutor.post(\n\t\t\t\t\t\tUsageTestParticipationService,\n\t\t\t\t\t\tcreateTestEntity(UsageTestParticipationInTypeRef, {\n\t\t\t\t\t\t\ttestId: usageTest.testId,\n\t\t\t\t\t\t\tstage: \"0\",\n\t\t\t\t\t\t\ttestDeviceId: testDeviceId,\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tanything(),\n\t\t\t\t\t),\n\t\t\t\t).thenDo(async () => {\n\t\t\t\t\t// Simulate network delay\n\t\t\t\t\tawait new Promise((resolve) => setTimeout(resolve, 15))\n\t\t\t\t\tpingOrder.push(\"0\")\n\t\t\t\t})\n\n\t\t\t\twhen(\n\t\t\t\t\tserviceExecutor.post(\n\t\t\t\t\t\tUsageTestParticipationService,\n\t\t\t\t\t\tcreateTestEntity(UsageTestParticipationInTypeRef, {\n\t\t\t\t\t\t\ttestId: usageTest.testId,\n\t\t\t\t\t\t\tstage: \"1\",\n\t\t\t\t\t\t\ttestDeviceId: testDeviceId,\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tanything(),\n\t\t\t\t\t),\n\t\t\t\t).thenDo(async () => {\n\t\t\t\t\t// Simulate network delay\n\t\t\t\t\tawait new Promise((resolve) => setTimeout(resolve, 10))\n\t\t\t\t\tpingOrder.push(\"1\")\n\t\t\t\t})\n\n\t\t\t\twhen(\n\t\t\t\t\tserviceExecutor.post(\n\t\t\t\t\t\tUsageTestParticipationService,\n\t\t\t\t\t\tcreateTestEntity(UsageTestParticipationInTypeRef, {\n\t\t\t\t\t\t\ttestId: usageTest.testId,\n\t\t\t\t\t\t\tstage: \"2\",\n\t\t\t\t\t\t\ttestDeviceId: testDeviceId,\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tanything(),\n\t\t\t\t\t),\n\t\t\t\t).thenDo(async () => {\n\t\t\t\t\tpingOrder.push(\"2\")\n\t\t\t\t})\n\n\t\t\t\tusageTest.getStage(0).complete()\n\t\t\t\tusageTest.getStage(1).complete()\n\t\t\t\tawait usageTest.getStage(2).complete()\n\n\t\t\t\to(pingOrder).deepEquals([\"0\", \"1\", \"2\"])\n\t\t\t})\n\t\t})\n\n\t\to.spec(\"setting the storage behavior\", function () {\n\t\t\to(\"uses correct storage backend after the behavior has been set\", async function () {\n\t\t\t\tusageTestModel.setStorageBehavior(StorageBehavior.Persist)\n\n\t\t\t\twhen(\n\t\t\t\t\tserviceExecutor.post(UsageTestAssignmentService, createTestEntity(UsageTestAssignmentInTypeRef, {}), {\n\t\t\t\t\t\tsuspensionBehavior: SuspensionBehavior.Throw,\n\t\t\t\t\t}),\n\t\t\t\t).thenResolve(\n\t\t\t\t\tcreateTestEntity(UsageTestAssignmentOutTypeRef, {\n\t\t\t\t\t\tassignments: [newAssignment],\n\t\t\t\t\t\ttestDeviceId: testDeviceId,\n\t\t\t\t\t}),\n\t\t\t\t)\n\n\t\t\t\tconst result = await usageTestModel.loadActiveUsageTests()\n\n\t\t\t\tawait assertStored(persistentStorage, result, newAssignment)\n\t\t\t\tverify(ephemeralStorage.getTestDeviceId(), { times: 0 })\n\t\t\t})\n\n\t\t\to(\"nothing is stored if customer has opted out\", async function () {\n\t\t\t\treplace(usageTestModel, \"customerProperties\", createTestEntity(CustomerPropertiesTypeRef, { usageDataOptedOut: true }))\n\n\t\t\t\tusageTestModel.setStorageBehavior(StorageBehavior.Persist)\n\n\t\t\t\twhen(\n\t\t\t\t\tserviceExecutor.post(UsageTestAssignmentService, createTestEntity(UsageTestAssignmentInTypeRef, {}), {\n\t\t\t\t\t\tsuspensionBehavior: SuspensionBehavior.Throw,\n\t\t\t\t\t}),\n\t\t\t\t).thenResolve(\n\t\t\t\t\tcreateTestEntity(UsageTestAssignmentOutTypeRef, {\n\t\t\t\t\t\tassignments: [newAssignment],\n\t\t\t\t\t\ttestDeviceId: testDeviceId,\n\t\t\t\t\t}),\n\t\t\t\t)\n\n\t\t\t\tawait usageTestModel.loadActiveUsageTests()\n\n\t\t\t\to(await persistentStorage.getAssignments()).equals(null)\n\t\t\t\tverify(ephemeralStorage.getTestDeviceId(), { times: 0 })\n\t\t\t})\n\n\t\t\to(\"nothing is stored if user has not opted in\", async function () {\n\t\t\t\treplace(userControllerMock, \"userSettingsGroupRoot\", createTestEntity(UserSettingsGroupRootTypeRef, { usageDataOptedIn: false }))\n\n\t\t\t\tusageTestModel.setStorageBehavior(StorageBehavior.Persist)\n\n\t\t\t\twhen(\n\t\t\t\t\tserviceExecutor.post(UsageTestAssignmentService, createTestEntity(UsageTestAssignmentInTypeRef, {}), {\n\t\t\t\t\t\tsuspensionBehavior: SuspensionBehavior.Throw,\n\t\t\t\t\t}),\n\t\t\t\t).thenResolve(\n\t\t\t\t\tcreateTestEntity(UsageTestAssignmentOutTypeRef, {\n\t\t\t\t\t\tassignments: [newAssignment],\n\t\t\t\t\t\ttestDeviceId: testDeviceId,\n\t\t\t\t\t}),\n\t\t\t\t)\n\n\t\t\t\tawait usageTestModel.loadActiveUsageTests()\n\n\t\t\t\to(await persistentStorage.getAssignments()).equals(null)\n\t\t\t\tverify(ephemeralStorage.getTestDeviceId(), { times: 0 })\n\t\t\t})\n\t\t})\n\t})\n})\n","import o from \"@tutao/otest\"\nimport { IServiceExecutor } from \"../../../src/common/api/common/ServiceRequest.js\"\nimport { object, verify, when } from \"testdouble\"\nimport { NewsItemStorage, NewsModel } from \"../../../src/common/misc/news/NewsModel.js\"\nimport { NewsService } from \"../../../src/common/api/entities/tutanota/Services.js\"\nimport {\n\tcreateNewsId,\n\tcreateNewsIn,\n\tcreateNewsOut,\n\tNewsId,\n\tNewsIdTypeRef,\n\tNewsInTypeRef,\n\tNewsOutTypeRef,\n} from \"../../../src/common/api/entities/tutanota/TypeRefs.js\"\nimport { NewsListItem } from \"../../../src/common/misc/news/NewsListItem.js\"\nimport { Children } from \"mithril\"\nimport { createTestEntity } from \"../TestUtils.js\"\n\no.spec(\"NewsModel\", function () {\n\tlet newsModel: NewsModel\n\tlet serviceExecutor: IServiceExecutor\n\tlet storage: NewsItemStorage\n\tlet newsIds: NewsId[]\n\n\tconst DummyNews = class implements NewsListItem {\n\t\trender(newsId: NewsId): Children {\n\t\t\treturn null\n\t\t}\n\n\t\tisShown(): Promise<boolean> {\n\t\t\treturn Promise.resolve(true)\n\t\t}\n\t}\n\n\to.beforeEach(function () {\n\t\tserviceExecutor = object()\n\t\tstorage = object()\n\n\t\tnewsModel = new NewsModel(serviceExecutor, storage, async () => new DummyNews())\n\n\t\tnewsIds = [\n\t\t\tcreateTestEntity(NewsIdTypeRef, {\n\t\t\t\tnewsItemId: \"ID:dummyNews\",\n\t\t\t\tnewsItemName: \"dummyNews\",\n\t\t\t}),\n\t\t]\n\n\t\twhen(serviceExecutor.get(NewsService, null)).thenResolve(\n\t\t\tcreateTestEntity(NewsOutTypeRef, {\n\t\t\t\tnewsItemIds: newsIds,\n\t\t\t}),\n\t\t)\n\t})\n\n\to.spec(\"news\", function () {\n\t\to(\"correctly loads news\", async function () {\n\t\t\tawait newsModel.loadNewsIds()\n\n\t\t\to(newsModel.liveNewsIds[0].newsItemId).equals(newsIds[0].newsItemId)\n\t\t\to(Object.keys(newsModel.liveNewsListItems).length).equals(1)\n\t\t})\n\n\t\to(\"correctly acknowledges news\", async function () {\n\t\t\tawait newsModel.loadNewsIds()\n\n\t\t\tawait newsModel.acknowledgeNews(newsIds[0].newsItemId)\n\n\t\t\tconst expectedNewsIn = createTestEntity(NewsInTypeRef, { newsItemId: newsIds[0].newsItemId })\n\t\t\tverify(serviceExecutor.post(NewsService, expectedNewsIn))\n\t\t})\n\t})\n})\n","import o from \"@tutao/otest\"\nimport { ArchiveDataType } from \"../../../src/common/api/common/TutanotaConstants.js\"\nimport { BlobFacade } from \"../../../src/common/api/worker/facades/lazy/BlobFacade.js\"\nimport { NativeFileApp } from \"../../../src/common/native/common/FileApp.js\"\nimport { matchers, object, verify, when } from \"testdouble\"\nimport { FileReference } from \"../../../src/common/api/common/utils/FileUtils.js\"\nimport { neverNull } from \"@tutao/tutanota-utils\"\nimport { DataFile } from \"../../../src/common/api/common/DataFile.js\"\nimport { BlobTypeRef } from \"../../../src/common/api/entities/sys/TypeRefs.js\"\nimport { FileTypeRef } from \"../../../src/common/api/entities/tutanota/TypeRefs.js\"\nimport { FileControllerNative } from \"../../../src/common/file/FileControllerNative.js\"\nimport { FileControllerBrowser } from \"../../../src/common/file/FileControllerBrowser.js\"\nimport { ConnectionError } from \"../../../src/common/api/common/error/RestError.js\"\nimport { assertThrows } from \"@tutao/tutanota-test-utils\"\nimport { Mode } from \"../../../src/common/api/common/Env.js\"\nimport Stream from \"mithril/stream\"\nimport { createTestEntity } from \"../TestUtils.js\"\n\nconst { anything, argThat } = matchers\nconst guiDownload = async function (somePromise: Promise<void>, progress?: Stream<number>) {\n\treturn somePromise\n}\n\no.spec(\"FileControllerTest\", function () {\n\tlet blobFacadeMock: BlobFacade\n\n\to.beforeEach(function () {\n\t\tblobFacadeMock = object()\n\t})\n\n\to.spec(\"native\", function () {\n\t\tlet fileAppMock: NativeFileApp\n\t\tlet fileController: FileControllerNative\n\t\tlet oldEnv: typeof env\n\n\t\to.beforeEach(function () {\n\t\t\tfileAppMock = object()\n\t\t\tfileController = new FileControllerNative(blobFacadeMock, guiDownload, fileAppMock)\n\t\t\toldEnv = globalThis.env\n\t\t\tglobalThis.env = { mode: Mode.App, platformId: \"android\" } as typeof env\n\t\t})\n\n\t\to.afterEach(function () {\n\t\t\tglobalThis.env = oldEnv\n\t\t})\n\n\t\to(\"should download non-legacy file natively using the blob service\", async function () {\n\t\t\tconst blobs = [createTestEntity(BlobTypeRef)]\n\t\t\tconst file = createTestEntity(FileTypeRef, { blobs: blobs, name: \"test.txt\", mimeType: \"plain/text\", _id: [\"fileListId\", \"fileElementId\"] })\n\t\t\tconst fileReference = object<FileReference>()\n\t\t\twhen(blobFacadeMock.downloadAndDecryptNative(anything(), anything(), anything(), anything())).thenResolve(fileReference)\n\t\t\tconst result = await fileController.downloadAndDecrypt(file)\n\t\t\tverify(\n\t\t\t\tblobFacadeMock.downloadAndDecryptNative(\n\t\t\t\t\tArchiveDataType.Attachments,\n\t\t\t\t\targThat((referencingInstance) => {\n\t\t\t\t\t\treturn referencingInstance.entity === file\n\t\t\t\t\t}),\n\t\t\t\t\tfile.name,\n\t\t\t\t\tneverNull(file.mimeType),\n\t\t\t\t),\n\t\t\t)\n\t\t\to(result).equals(fileReference)\n\t\t})\n\n\t\to.spec(\"download with connection errors\", function () {\n\t\t\to(\"immediately no connection\", async function () {\n\t\t\t\tconst testableFileController = new FileControllerNative(blobFacadeMock, guiDownload, fileAppMock)\n\t\t\t\tconst blobs = [createTestEntity(BlobTypeRef)]\n\t\t\t\tconst file = createTestEntity(FileTypeRef, { blobs: blobs, name: \"test.txt\", mimeType: \"plain/text\", _id: [\"fileListId\", \"fileElementId\"] })\n\t\t\t\twhen(blobFacadeMock.downloadAndDecryptNative(anything(), anything(), anything(), anything())).thenReject(new ConnectionError(\"no connection\"))\n\t\t\t\tawait assertThrows(ConnectionError, async () => await testableFileController.download(file))\n\t\t\t\tverify(fileAppMock.deleteFile(anything()), { times: 0 }) // mock for cleanup\n\t\t\t})\n\t\t\to(\"connection lost after 1 already downloaded attachment- already downloaded attachments are processed\", async function () {\n\t\t\t\tconst testableFileController = new FileControllerNative(blobFacadeMock, guiDownload, fileAppMock)\n\t\t\t\tconst blobs = [createTestEntity(BlobTypeRef)]\n\t\t\t\tconst fileWorks = createTestEntity(FileTypeRef, {\n\t\t\t\t\tblobs: blobs,\n\t\t\t\t\tname: \"works.txt\",\n\t\t\t\t\tmimeType: \"plain/text\",\n\t\t\t\t\t_id: [\"fileListId\", \"fileElementId\"],\n\t\t\t\t})\n\t\t\t\tconst fileNotWorks = createTestEntity(FileTypeRef, {\n\t\t\t\t\tblobs: blobs,\n\t\t\t\t\tname: \"broken.txt\",\n\t\t\t\t\tmimeType: \"plain/text\",\n\t\t\t\t\t_id: [\"fileListId\", \"fileElementId\"],\n\t\t\t\t})\n\t\t\t\tconst fileReferenceWorks: FileReference = {\n\t\t\t\t\tname: \"works.txt\",\n\t\t\t\t\tmimeType: \"plain/text\",\n\t\t\t\t\tlocation: \"somepath/works.txt\",\n\t\t\t\t\tsize: 512,\n\t\t\t\t\t_type: \"FileReference\",\n\t\t\t\t}\n\t\t\t\twhen(blobFacadeMock.downloadAndDecryptNative(anything(), anything(), \"works.txt\", anything())).thenResolve(fileReferenceWorks)\n\t\t\t\twhen(blobFacadeMock.downloadAndDecryptNative(anything(), anything(), \"broken.txt\", anything())).thenReject(new ConnectionError(\"no connection\"))\n\t\t\t\tawait assertThrows(ConnectionError, async () => await testableFileController.downloadAll([fileWorks, fileNotWorks]))\n\t\t\t\tverify(fileAppMock.deleteFile(anything()), { times: 1 }) // mock for cleanup\n\t\t\t})\n\t\t})\n\t})\n\n\to.spec(\"browser\", function () {\n\t\tlet fileController: FileControllerBrowser\n\n\t\to.beforeEach(function () {\n\t\t\tfileController = new FileControllerBrowser(blobFacadeMock, guiDownload)\n\t\t})\n\n\t\to(\"should download non-legacy file non-natively using the blob service\", async function () {\n\t\t\tconst blobs = [createTestEntity(BlobTypeRef)]\n\t\t\tconst file = createTestEntity(FileTypeRef, { blobs: blobs, name: \"test.txt\", mimeType: \"plain/text\", _id: [\"fileListId\", \"fileElementId\"] })\n\t\t\tconst data = new Uint8Array([1, 2, 3])\n\t\t\twhen(blobFacadeMock.downloadAndDecrypt(anything(), anything())).thenResolve(data)\n\t\t\tconst result = await fileController.downloadAndDecrypt(file)\n\t\t\tverify(\n\t\t\t\tblobFacadeMock.downloadAndDecrypt(\n\t\t\t\t\tArchiveDataType.Attachments,\n\t\t\t\t\targThat((referencingInstance) => referencingInstance.entity === file),\n\t\t\t\t),\n\t\t\t)\n\t\t\to(result).deepEquals({\n\t\t\t\t_type: \"DataFile\",\n\t\t\t\tname: file.name,\n\t\t\t\tmimeType: neverNull(file.mimeType),\n\t\t\t\tdata: data,\n\t\t\t\tsize: data.byteLength,\n\t\t\t\tid: file._id,\n\t\t\t\tcid: undefined,\n\t\t\t})\n\t\t})\n\t})\n})\n","import o from \"@tutao/otest\"\nimport { instance, matchers, verify, when } from \"testdouble\"\nimport { CalendarEventTypeRef, createCalendarEvent } from \"../../../../../src/common/api/entities/tutanota/TypeRefs.js\"\nimport { CustomCalendarEventCacheHandler } from \"../../../../../src/common/api/worker/rest/CustomCacheHandler.js\"\nimport { createEventElementId } from \"../../../../../src/common/api/common/utils/CommonCalendarUtils.js\"\nimport { EntityRestClient } from \"../../../../../src/common/api/worker/rest/EntityRestClient.js\"\nimport { LateInitializedCacheStorageImpl } from \"../../../../../src/common/api/worker/rest/CacheStorageProxy.js\"\nimport { CUSTOM_MAX_ID, CUSTOM_MIN_ID, LOAD_MULTIPLE_LIMIT } from \"../../../../../src/common/api/common/utils/EntityUtils.js\"\nimport { numberRange } from \"@tutao/tutanota-utils\"\nimport { createTestEntity } from \"../../../TestUtils.js\"\n\no.spec(\"Custom calendar events handler\", function () {\n\tconst entityRestClientMock = instance(EntityRestClient)\n\tconst cacheHandler = new CustomCalendarEventCacheHandler(entityRestClientMock)\n\tconst offlineStorageMock = instance(LateInitializedCacheStorageImpl)\n\tconst listId = \"listId\"\n\tlet timestamp = Date.now()\n\tconst ids = [0, 1, 2, 3, 4, 5, 6].map((n) => createEventElementId(timestamp, n))\n\tconst allList = [0, 1, 2, 3, 4, 5, 6].map((n) => createTestEntity(CalendarEventTypeRef, { _id: [listId, ids[n]] }))\n\n\tconst bigListId = \"bigListId\"\n\tconst bigListIds = numberRange(0, 299).map((n) => createEventElementId(timestamp, n))\n\tconst bigList = numberRange(0, 299).map((n) => createTestEntity(CalendarEventTypeRef, { _id: [bigListId, bigListIds[n]] }))\n\tconst toElementId = (e) => e._id[1]\n\n\to.spec(\"Load elements from cache\", function () {\n\t\to.beforeEach(function () {\n\t\t\twhen(offlineStorageMock.getWholeList(CalendarEventTypeRef, listId)).thenResolve(allList)\n\t\t\twhen(offlineStorageMock.getRangeForList(CalendarEventTypeRef, listId)).thenResolve({ lower: CUSTOM_MIN_ID, upper: CUSTOM_MAX_ID })\n\t\t})\n\n\t\to(\"load range returns n elements following but excluding start id\", async function () {\n\t\t\tconst res = await cacheHandler.loadRange(offlineStorageMock, listId, ids[0], 3, false)\n\t\t\to(res.map(toElementId)).deepEquals(allList.map(toElementId).slice(1, 4))\n\t\t})\n\n\t\to(\"load range reverse returns n elements before but excluding start id in reverse order\", async function () {\n\t\t\tconst res = await cacheHandler.loadRange(offlineStorageMock, listId, ids[6], 3, true)\n\t\t\to(res.map(toElementId)).deepEquals(allList.map(toElementId).slice(3, 6).reverse())\n\t\t})\n\t})\n\to.spec(\"Load elements from server when they are not in cache\", function () {\n\t\to.beforeEach(function () {\n\t\t\twhen(offlineStorageMock.getRangeForList(CalendarEventTypeRef, listId)).thenResolve(null)\n\t\t})\n\n\t\to(\"result of server request is inserted into cache and the range is set.\", async function () {\n\t\t\twhen(entityRestClientMock.loadRange(CalendarEventTypeRef, listId, CUSTOM_MIN_ID, LOAD_MULTIPLE_LIMIT, false)).thenResolve(allList)\n\t\t\tconst res = await cacheHandler.loadRange(offlineStorageMock, listId, ids[0], 3, false)\n\t\t\to(res.map(toElementId)).deepEquals(allList.map(toElementId).slice(1, 4))(\"count elements are returned\")\n\t\t\tverify(offlineStorageMock.put(matchers.anything()), { times: allList.length })\n\t\t\tverify(offlineStorageMock.setNewRangeForList(CalendarEventTypeRef, listId, CUSTOM_MIN_ID, CUSTOM_MAX_ID))\n\t\t})\n\n\t\to(\n\t\t\t\"result of server request is inserted into cache and the range is set. Loads more than 100, but only count elements are returned.\",\n\t\t\tasync function () {\n\t\t\t\twhen(entityRestClientMock.loadRange(CalendarEventTypeRef, bigListId, CUSTOM_MIN_ID, LOAD_MULTIPLE_LIMIT, false)).thenResolve(\n\t\t\t\t\tbigList.slice(0, 100),\n\t\t\t\t)\n\t\t\t\twhen(entityRestClientMock.loadRange(CalendarEventTypeRef, bigListId, bigListIds[99], LOAD_MULTIPLE_LIMIT, false)).thenResolve(\n\t\t\t\t\tbigList.slice(100, 200),\n\t\t\t\t)\n\t\t\t\twhen(entityRestClientMock.loadRange(CalendarEventTypeRef, bigListId, bigListIds[199], LOAD_MULTIPLE_LIMIT, false)).thenResolve(\n\t\t\t\t\tbigList.slice(200, 300),\n\t\t\t\t)\n\t\t\t\twhen(entityRestClientMock.loadRange(CalendarEventTypeRef, bigListId, bigListIds[299], LOAD_MULTIPLE_LIMIT, false)).thenResolve([])\n\t\t\t\tconst res = await cacheHandler.loadRange(offlineStorageMock, bigListId, bigListIds[0], 3, false)\n\t\t\t\to(res.map(toElementId)).deepEquals(allList.map(toElementId).slice(1, 4))(\"count elements are returned\")\n\t\t\t\tverify(offlineStorageMock.put(matchers.anything()), { times: bigList.length })\n\t\t\t\tverify(offlineStorageMock.setNewRangeForList(CalendarEventTypeRef, bigListId, CUSTOM_MIN_ID, CUSTOM_MAX_ID))\n\t\t\t\tverify(entityRestClientMock.loadRange(CalendarEventTypeRef, bigListId, matchers.anything(), LOAD_MULTIPLE_LIMIT, false), { times: 4 })\n\t\t\t},\n\t\t)\n\n\t\to(\"result of server request is inserted into cache and the range is set. No elements on the server. No elements are returned.\", async function () {\n\t\t\twhen(entityRestClientMock.loadRange(CalendarEventTypeRef, bigListId, CUSTOM_MIN_ID, LOAD_MULTIPLE_LIMIT, false)).thenResolve([])\n\t\t\tconst res = await cacheHandler.loadRange(offlineStorageMock, bigListId, bigListIds[0], 3, false)\n\t\t\to(res.map(toElementId)).deepEquals([])(\"no elements are returned\")\n\t\t\tverify(offlineStorageMock.put(matchers.anything()), { times: 0 })\n\t\t\tverify(offlineStorageMock.setNewRangeForList(CalendarEventTypeRef, bigListId, CUSTOM_MIN_ID, CUSTOM_MAX_ID))\n\t\t})\n\n\t\to(\n\t\t\t\"result of server request is inserted into cache and the range is set. Less elements on the server than requested. Only elements that are on the server are returned.\",\n\t\t\tasync function () {\n\t\t\t\twhen(entityRestClientMock.loadRange(CalendarEventTypeRef, listId, CUSTOM_MIN_ID, LOAD_MULTIPLE_LIMIT, false)).thenResolve(allList)\n\t\t\t\tconst res = await cacheHandler.loadRange(offlineStorageMock, listId, CUSTOM_MIN_ID, 30, false)\n\t\t\t\to(res.map(toElementId)).deepEquals(allList.map(toElementId))(\"allList is returned\")\n\t\t\t\tverify(offlineStorageMock.put(matchers.anything()), { times: allList.length })\n\t\t\t\tverify(offlineStorageMock.setNewRangeForList(CalendarEventTypeRef, listId, CUSTOM_MIN_ID, CUSTOM_MAX_ID))\n\t\t\t},\n\t\t)\n\t})\n})\n","import o from \"@tutao/otest\"\nimport { RecipientsModel, ResolveMode } from \"../../../src/common/api/main/RecipientsModel.js\"\nimport { LoginController } from \"../../../src/common/api/main/LoginController.js\"\nimport { MailFacade } from \"../../../src/common/api/worker/facades/lazy/MailFacade.js\"\nimport { EntityClient } from \"../../../src/common/api/common/EntityClient.js\"\nimport { func, instance, object, when } from \"testdouble\"\nimport { GroupInfoTypeRef, GroupMembershipTypeRef, PublicKeyGetOutTypeRef, UserTypeRef } from \"../../../src/common/api/entities/sys/TypeRefs.js\"\nimport { Recipient, RecipientType } from \"../../../src/common/api/common/recipients/Recipient.js\"\nimport { ContactMailAddressTypeRef, ContactTypeRef } from \"../../../src/common/api/entities/tutanota/TypeRefs.js\"\nimport { UserController } from \"../../../src/common/api/main/UserController.js\"\nimport { GroupType } from \"../../../src/common/api/common/TutanotaConstants.js\"\nimport { verify } from \"@tutao/tutanota-test-utils\"\nimport { defer, delay } from \"@tutao/tutanota-utils\"\nimport { createTestEntity } from \"../TestUtils.js\"\nimport { ContactModel } from \"../../../src/common/contactsFunctionality/ContactModel.js\"\n\no.spec(\"RecipientsModel\", function () {\n\tconst contactListId = \"contactListId\"\n\tconst contactElementId = \"contactElementId\"\n\tconst contactId = [contactListId, contactElementId] as const\n\n\tconst tutanotaAddress = \"test@tuta.com\"\n\tconst otherAddress = \"test@dudanoda.com\"\n\n\tlet contactModelMock: ContactModel\n\tlet userControllerMock: UserController\n\tlet loginControllerMock: LoginController\n\tlet mailFacadeMock: MailFacade\n\tlet entityClientMock: EntityClient\n\n\tlet model: RecipientsModel\n\n\to.beforeEach(function () {\n\t\tcontactModelMock = object()\n\n\t\tuserControllerMock = {\n\t\t\tuser: createTestEntity(UserTypeRef, {\n\t\t\t\tmemberships: [\n\t\t\t\t\tcreateTestEntity(GroupMembershipTypeRef, {\n\t\t\t\t\t\tgroupType: GroupType.Contact,\n\t\t\t\t\t}),\n\t\t\t\t],\n\t\t\t}),\n\t\t\tuserGroupInfo: createTestEntity(GroupInfoTypeRef, {\n\t\t\t\tmailAddress: \"test@example.com\",\n\t\t\t}),\n\t\t} satisfies Partial<UserController> as UserController\n\n\t\tloginControllerMock = object()\n\t\twhen(loginControllerMock.getUserController()).thenReturn(userControllerMock)\n\n\t\tmailFacadeMock = instance(MailFacade)\n\t\tentityClientMock = instance(EntityClient)\n\n\t\tmodel = new RecipientsModel(contactModelMock, loginControllerMock, mailFacadeMock, entityClientMock)\n\t})\n\n\to(\"initializes with provided contact\", function () {\n\t\tconst contact = makeContactStub(contactId, otherAddress)\n\t\to(model.resolve({ address: otherAddress, contact }, ResolveMode.Eager).contact).deepEquals(contact)\n\t})\n\n\to(\"doesn't try to resolve contact if contact is provided\", async function () {\n\t\tconst contact = makeContactStub(contactId, otherAddress)\n\t\tconst recipient = await model.resolve({ address: otherAddress, contact }, ResolveMode.Eager).resolved()\n\t\to(recipient.contact).deepEquals(contact)\n\t\tverify(entityClientMock.load(ContactTypeRef, contactId), { times: 0 })\n\t\tverify(contactModelMock.searchForContact(otherAddress), { times: 0 })\n\t})\n\n\to(\"loads contact with id\", async function () {\n\t\tconst contact = makeContactStub(contactId, otherAddress)\n\t\twhen(contactModelMock.getContactListId()).thenResolve(\"contactListId\")\n\t\twhen(entityClientMock.load(ContactTypeRef, contactId)).thenResolve(contact)\n\t\tconst recipient = await model.resolve({ address: otherAddress, contact: contactId }, ResolveMode.Eager).resolved()\n\t\to(recipient.contact).deepEquals(contact)\n\t})\n\n\to(\"searches for contact by mail address\", async function () {\n\t\tconst contactId = \"contactElementId\"\n\t\tconst id = [contactListId, contactId] as const\n\t\tconst contact = makeContactStub(id, otherAddress)\n\t\twhen(contactModelMock.searchForContact(otherAddress)).thenResolve(contact)\n\t\twhen(contactModelMock.getContactListId()).thenResolve(\"contactListId\")\n\t\tconst recipient = await model.resolve({ address: otherAddress }, ResolveMode.Eager).resolved()\n\t\to(recipient.contact).deepEquals(contact)\n\t})\n\n\to(\"prioritises name that was passed in\", async function () {\n\t\tconst recipient = await model\n\t\t\t.resolve(\n\t\t\t\t{ address: tutanotaAddress, name: \"Pizza Tonno\", contact: makeContactStub(contactId, tutanotaAddress, \"Pizza\", \"Hawaii\") },\n\t\t\t\tResolveMode.Eager,\n\t\t\t)\n\t\t\t.resolved()\n\t\to(recipient.name).equals(\"Pizza Tonno\")\n\t})\n\n\to(\"uses name from contact if name not provided\", async function () {\n\t\twhen(contactModelMock.getContactListId()).thenResolve(\"contactListId\")\n\t\tconst recipient = await model\n\t\t\t.resolve({ address: tutanotaAddress, contact: makeContactStub(contactId, tutanotaAddress, \"Pizza\", \"Hawaii\") }, ResolveMode.Eager)\n\t\t\t.resolved()\n\t\to(recipient.name).equals(\"Pizza Hawaii\")\n\t})\n\n\to(\"infers internal recipient from tutanota address, otherwise unknown\", async function () {\n\t\twhen(contactModelMock.getContactListId()).thenResolve(\"contactListId\")\n\t\t// using lazy mode to not wait for the resolution and to not have async task running after the test is done\n\t\to(model.resolve({ address: tutanotaAddress }, ResolveMode.Lazy).type).equals(RecipientType.INTERNAL)(\"Tutanota address\")\n\t\to(model.resolve({ address: otherAddress }, ResolveMode.Lazy).type).equals(RecipientType.UNKNOWN)(\"Internal address\")\n\t})\n\n\to(\"correctly resolves type for non tutanota addresses\", async function () {\n\t\tconst internalAddress = \"internal@email.com\"\n\t\tconst externalAddress = \"external@email.com\"\n\t\twhen(mailFacadeMock.getRecipientKeyData(internalAddress)).thenResolve(createTestEntity(PublicKeyGetOutTypeRef))\n\t\twhen(mailFacadeMock.getRecipientKeyData(externalAddress)).thenResolve(null)\n\n\t\tconst internal = await model.resolve({ address: internalAddress }, ResolveMode.Eager).resolved()\n\t\tconst external = await model.resolve({ address: externalAddress }, ResolveMode.Eager).resolved()\n\n\t\to(internal.type).equals(RecipientType.INTERNAL)(\"key data existed so it is INTERNAL\")\n\t\to(external.type).equals(RecipientType.EXTERNAL)(\"key data did not exist so it is EXTERNAL\")\n\t})\n\n\to(\"ignores wrong type when tutanota address is passed in\", async function () {\n\t\tconst recipient = await model.resolve({ address: tutanotaAddress, type: RecipientType.EXTERNAL }, ResolveMode.Eager).resolved()\n\t\to(recipient.type).equals(RecipientType.INTERNAL)\n\t})\n\n\to(\"doesn't try to resolve type when type is not unknown\", async function () {\n\t\tawait model.resolve({ address: otherAddress, type: RecipientType.EXTERNAL }, ResolveMode.Eager).resolved()\n\t\tawait model.resolve({ address: otherAddress, type: RecipientType.INTERNAL }, ResolveMode.Eager).resolved()\n\t\tawait model.resolve({ address: tutanotaAddress }, ResolveMode.Eager).resolved()\n\t\tverify(mailFacadeMock.getRecipientKeyData(otherAddress), { times: 0 })\n\t})\n\n\to(\"non-lazy resolution starts right away\", async function () {\n\t\tconst deferred = defer()\n\n\t\tconst recipient = model.resolve({ address: tutanotaAddress }, ResolveMode.Eager)\n\n\t\trecipient.whenResolved(deferred.resolve)\n\n\t\tawait deferred.promise\n\n\t\to(recipient.isResolved()).equals(true)\n\t})\n\n\to(\"lazy resolution isn't triggered until `resolved` is called\", async function () {\n\t\twhen(contactModelMock.getContactListId()).thenResolve(\"contactListId\")\n\t\tconst recipient = model.resolve({ address: otherAddress }, ResolveMode.Lazy)\n\n\t\t// see that the resolution doesn't start straight away\n\t\t// not sure of a better way to do this\n\t\tawait delay(5)\n\n\t\tverify(contactModelMock.searchForContact(otherAddress), { times: 0 })\n\t\tverify(mailFacadeMock.getRecipientKeyData(otherAddress), { times: 0 })\n\t\to(recipient.isResolved()).equals(false)\n\n\t\tawait recipient.resolved()\n\n\t\tverify(contactModelMock.searchForContact(otherAddress), { times: 1 })\n\t\tverify(mailFacadeMock.getRecipientKeyData(otherAddress), { times: 1 })\n\t\to(recipient.isResolved()).equals(true)\n\t})\n\n\to(\"passes resolved recipient to callback\", async function () {\n\t\tconst contact = makeContactStub(contactId, otherAddress, \"Re\", \"Cipient\")\n\t\twhen(contactModelMock.searchForContact(otherAddress)).thenResolve(contact)\n\t\twhen(contactModelMock.getContactListId()).thenResolve(\"contactListId\")\n\t\twhen(mailFacadeMock.getRecipientKeyData(otherAddress)).thenResolve(null)\n\n\t\tconst handler = func() as (recipient: Recipient) => void\n\n\t\tawait model.resolve({ address: otherAddress, name: \"Re Cipient\" }, ResolveMode.Eager).whenResolved(handler).resolved()\n\n\t\tverify(handler({ address: otherAddress, name: \"Re Cipient\", type: RecipientType.EXTERNAL, contact }))\n\t})\n})\n\nfunction makeContactStub(id: IdTuple, mailAddress: string, firstName?: string, lastName?: string) {\n\treturn createTestEntity(ContactTypeRef, {\n\t\t_id: id,\n\t\tmailAddresses: [createTestEntity(ContactMailAddressTypeRef, { address: mailAddress })],\n\t\tfirstName: firstName ?? \"\",\n\t\tlastName: lastName ?? \"\",\n\t})\n}\n","import o from \"@tutao/otest\"\nimport { WorkerImpl } from \"../../../../../src/mail-app/workerUtils/worker/WorkerImpl.js\"\nimport { UserFacade } from \"../../../../../src/common/api/worker/facades/UserFacade.js\"\nimport { GroupManagementFacade } from \"../../../../../src/common/api/worker/facades/lazy/GroupManagementFacade.js\"\nimport { CounterFacade } from \"../../../../../src/common/api/worker/facades/lazy/CounterFacade.js\"\nimport { RsaImplementation } from \"../../../../../src/common/api/worker/crypto/RsaImplementation.js\"\nimport { EntityClient } from \"../../../../../src/common/api/common/EntityClient.js\"\nimport { ServiceExecutor } from \"../../../../../src/common/api/worker/rest/ServiceExecutor.js\"\nimport { matchers, object, when } from \"testdouble\"\nimport { MailAddressPropertiesTypeRef, MailboxGroupRootTypeRef, MailboxPropertiesTypeRef } from \"../../../../../src/common/api/entities/tutanota/TypeRefs.js\"\nimport { mapToObject } from \"@tutao/tutanota-test-utils\"\nimport { GroupInfoTypeRef, GroupMembershipTypeRef, MailAddressAliasTypeRef, UserTypeRef } from \"../../../../../src/common/api/entities/sys/TypeRefs.js\"\nimport { MailAddressFacade } from \"../../../../../src/common/api/worker/facades/lazy/MailAddressFacade.js\"\nimport { createTestEntity } from \"../../../TestUtils.js\"\nimport { arrayEquals, freshVersioned } from \"@tutao/tutanota-utils\"\nimport { EntityRestClientLoadOptions } from \"../../../../../src/common/api/worker/rest/EntityRestClient.js\"\n\no.spec(\"MailAddressFacadeTest\", function () {\n\tlet worker: WorkerImpl\n\tlet userFacade: UserFacade\n\tlet groupManagementFacade: GroupManagementFacade\n\tlet countersFacade: CounterFacade\n\tlet rsa: RsaImplementation\n\tlet entityClient: EntityClient\n\tlet serviceExecutor: ServiceExecutor\n\tlet nonCachingEntityClient: EntityClient\n\n\tlet facade: MailAddressFacade\n\n\to.beforeEach(function () {\n\t\tuserFacade = object()\n\t\tgroupManagementFacade = object()\n\t\tserviceExecutor = object()\n\t\tnonCachingEntityClient = object()\n\n\t\tfacade = new MailAddressFacade(userFacade, groupManagementFacade, serviceExecutor, nonCachingEntityClient)\n\t})\n\n\to.spec(\"getSenderNames\", function () {\n\t\to(\"when there is existing MailboxProperties it returns the names\", async function () {\n\t\t\tconst mailGroupId = \"mailGroupId\"\n\t\t\tconst viaUser = \"viaUser\"\n\t\t\tconst mailboxPropertiesId = \"mailboxPropertiesId\"\n\t\t\tconst mailboxGroupRoot = createTestEntity(MailboxGroupRootTypeRef, {\n\t\t\t\t_ownerGroup: mailGroupId,\n\t\t\t\tmailboxProperties: mailboxPropertiesId,\n\t\t\t})\n\t\t\tconst mailGroupKey = freshVersioned([1, 2, 3])\n\t\t\tconst mailboxProperties = createTestEntity(MailboxPropertiesTypeRef, {\n\t\t\t\tmailAddressProperties: [\n\t\t\t\t\tcreateTestEntity(MailAddressPropertiesTypeRef, {\n\t\t\t\t\t\tmailAddress: \"a@a.com\",\n\t\t\t\t\t\tsenderName: \"a\",\n\t\t\t\t\t}),\n\t\t\t\t\tcreateTestEntity(MailAddressPropertiesTypeRef, {\n\t\t\t\t\t\tmailAddress: \"b@b.com\",\n\t\t\t\t\t\tsenderName: \"b\",\n\t\t\t\t\t}),\n\t\t\t\t],\n\t\t\t})\n\n\t\t\twhen(groupManagementFacade.getCurrentGroupKeyViaUser(mailGroupId, viaUser)).thenResolve(mailGroupKey)\n\t\t\twhen(nonCachingEntityClient.load(MailboxGroupRootTypeRef, mailGroupId)).thenResolve(mailboxGroupRoot)\n\t\t\twhen(\n\t\t\t\tnonCachingEntityClient.load(\n\t\t\t\t\tMailboxPropertiesTypeRef,\n\t\t\t\t\tmailboxPropertiesId,\n\t\t\t\t\tmatchers.argThat(async (opts: EntityRestClientLoadOptions) => {\n\t\t\t\t\t\tconst providedMailGroupKey = await opts.ownerKeyProvider!(mailGroupKey.version)\n\t\t\t\t\t\treturn arrayEquals(mailGroupKey.object, providedMailGroupKey)\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t).thenResolve(mailboxProperties)\n\n\t\t\tconst result = await facade.getSenderNames(mailGroupId, viaUser)\n\t\t\to(mapToObject(result)).deepEquals({\n\t\t\t\t\"a@a.com\": \"a\",\n\t\t\t\t\"b@b.com\": \"b\",\n\t\t\t})\n\t\t})\n\n\t\to(\"when there's no existing MailboxProperties it creates and returns one\", async function () {\n\t\t\tconst mailGroupId = \"mailGroupId\"\n\t\t\tconst viaUser = \"viaUser\"\n\t\t\tconst mailboxPropertiesId = \"mailboxProeprtiesId\"\n\t\t\tconst mailboxGroupRoot = createTestEntity(MailboxGroupRootTypeRef, {\n\t\t\t\t_ownerGroup: mailGroupId,\n\t\t\t\tmailboxProperties: null,\n\t\t\t})\n\t\t\tconst mailGroupKey = freshVersioned([1, 2, 3])\n\t\t\tconst mailboxProperties = createTestEntity(MailboxPropertiesTypeRef, {\n\t\t\t\t_id: mailboxPropertiesId,\n\t\t\t\t_ownerGroup: mailGroupId,\n\t\t\t\treportMovedMails: \"\",\n\t\t\t\tmailAddressProperties: [],\n\t\t\t})\n\t\t\tconst userGroupInfoId: IdTuple = [\"groupInfoListId\", \"groupInfoId\"]\n\t\t\tconst user = createTestEntity(UserTypeRef, {\n\t\t\t\t_id: viaUser,\n\t\t\t\tuserGroup: createTestEntity(GroupMembershipTypeRef, {\n\t\t\t\t\tgroupInfo: userGroupInfoId,\n\t\t\t\t}),\n\t\t\t})\n\t\t\tconst userGroupInfo = createTestEntity(GroupInfoTypeRef, {\n\t\t\t\t_id: userGroupInfoId,\n\t\t\t\tname: \"User name\",\n\t\t\t\tmailAddress: \"primary@example.com\",\n\t\t\t\tmailAddressAliases: [\n\t\t\t\t\tcreateTestEntity(MailAddressAliasTypeRef, {\n\t\t\t\t\t\tmailAddress: \"a@a.com\",\n\t\t\t\t\t\tenabled: true,\n\t\t\t\t\t}),\n\t\t\t\t],\n\t\t\t})\n\n\t\t\twhen(nonCachingEntityClient.load(UserTypeRef, viaUser)).thenResolve(user)\n\t\t\twhen(nonCachingEntityClient.load(GroupInfoTypeRef, userGroupInfoId)).thenResolve(userGroupInfo)\n\t\t\twhen(groupManagementFacade.getCurrentGroupKeyViaUser(mailGroupId, viaUser)).thenResolve(mailGroupKey)\n\t\t\twhen(nonCachingEntityClient.load(MailboxGroupRootTypeRef, mailGroupId)).thenResolve(mailboxGroupRoot)\n\t\t\twhen(nonCachingEntityClient.setup(null, matchers.anything(), undefined, { ownerKey: mailGroupKey })).thenResolve(mailboxPropertiesId)\n\t\t\twhen(\n\t\t\t\tnonCachingEntityClient.load(\n\t\t\t\t\tMailboxPropertiesTypeRef,\n\t\t\t\t\tmailboxPropertiesId,\n\t\t\t\t\tmatchers.argThat(async (opts: EntityRestClientLoadOptions) => {\n\t\t\t\t\t\tconst providedMailGroupKey = await opts.ownerKeyProvider!(mailGroupKey.version)\n\t\t\t\t\t\treturn arrayEquals(mailGroupKey.object, providedMailGroupKey)\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t).thenResolve(mailboxProperties)\n\n\t\t\tconst result = await facade.getSenderNames(mailGroupId, viaUser)\n\n\t\t\to(mapToObject(result)).deepEquals({\n\t\t\t\t\"primary@example.com\": \"User name\",\n\t\t\t\t\"a@a.com\": \"User name\",\n\t\t\t})\n\t\t})\n\t})\n})\n","import o from \"@tutao/otest\"\nimport { MailFolderTypeRef, MailTypeRef } from \"../../../../src/common/api/entities/tutanota/TypeRefs.js\"\nimport { MailSetKind } from \"../../../../src/common/api/common/TutanotaConstants.js\"\nimport { FolderSystem } from \"../../../../src/common/api/common/mail/FolderSystem.js\"\nimport { createTestEntity } from \"../../TestUtils.js\"\nimport { getElementId } from \"../../../../src/common/api/common/utils/EntityUtils.js\"\n\no.spec(\"FolderSystem\", function () {\n\tconst listId = \"listId\"\n\tconst inbox = createTestEntity(MailFolderTypeRef, { _id: [listId, \"inbox\"], folderType: MailSetKind.INBOX })\n\tconst archive = createTestEntity(MailFolderTypeRef, { _id: [listId, \"archive\"], folderType: MailSetKind.ARCHIVE })\n\tconst customFolder = createTestEntity(MailFolderTypeRef, {\n\t\t_id: [listId, \"custom\"],\n\t\tfolderType: MailSetKind.CUSTOM,\n\t\tname: \"X\",\n\t})\n\tconst customSubfolder = createTestEntity(MailFolderTypeRef, {\n\t\t_id: [listId, \"customSub\"],\n\t\tfolderType: MailSetKind.CUSTOM,\n\t\tparentFolder: customFolder._id,\n\t\tname: \"AA\",\n\t\tmails: \"customSubMailList\",\n\t})\n\tconst customSubSubfolder = createTestEntity(MailFolderTypeRef, {\n\t\t_id: [listId, \"customSubSub\"],\n\t\tfolderType: MailSetKind.CUSTOM,\n\t\tparentFolder: customSubfolder._id,\n\t\tname: \"B\",\n\t})\n\tconst customSubSubfolderAnother = createTestEntity(MailFolderTypeRef, {\n\t\t_id: [listId, \"customSubSubAnother\"],\n\t\tfolderType: MailSetKind.CUSTOM,\n\t\tparentFolder: customSubfolder._id,\n\t\tname: \"A\",\n\t})\n\n\tconst mail = createTestEntity(MailTypeRef, { _id: [\"mailListId\", \"inbox\"], sets: [customSubfolder._id] })\n\n\tconst allFolders = [archive, inbox, customFolder, customSubfolder, customSubSubfolder, customSubSubfolderAnother]\n\n\to(\"correctly builds the subtrees\", function () {\n\t\tconst system = new FolderSystem(allFolders)\n\n\t\to(system.systemSubtrees).deepEquals([\n\t\t\t{ folder: inbox, children: [] },\n\t\t\t{ folder: archive, children: [] },\n\t\t])(\"system subtrees\")\n\t\to(system.customSubtrees).deepEquals([\n\t\t\t{\n\t\t\t\tfolder: customFolder,\n\t\t\t\tchildren: [\n\t\t\t\t\t{\n\t\t\t\t\t\tfolder: customSubfolder,\n\t\t\t\t\t\tchildren: [\n\t\t\t\t\t\t\t{ folder: customSubSubfolderAnother, children: [] },\n\t\t\t\t\t\t\t{ folder: customSubSubfolder, children: [] },\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t])(\"custom subtrees\")\n\t})\n\n\to(\"indented list sorts folders correctly on the same level\", function () {\n\t\tconst system = new FolderSystem(allFolders)\n\n\t\to(system.getIndentedList()).deepEquals([\n\t\t\t{ level: 0, folder: inbox },\n\t\t\t{ level: 0, folder: archive },\n\t\t\t{ level: 0, folder: customFolder },\n\t\t\t{ level: 1, folder: customSubfolder },\n\t\t\t{ level: 2, folder: customSubSubfolderAnother },\n\t\t\t{ level: 2, folder: customSubSubfolder },\n\t\t])\n\t})\n\n\to(\"indented list sorts stepsiblings correctly\", function () {\n\t\tconst customFolderAnother = createTestEntity(MailFolderTypeRef, {\n\t\t\t_id: [listId, \"customAnother\"],\n\t\t\tfolderType: MailSetKind.CUSTOM,\n\t\t\tname: \"Another top-level custom\",\n\t\t})\n\t\tconst customFolderAnotherSub = createTestEntity(MailFolderTypeRef, {\n\t\t\t_id: [listId, \"customAnotherSub\"],\n\t\t\tfolderType: MailSetKind.CUSTOM,\n\t\t\tparentFolder: customFolderAnother._id,\n\t\t\tname: \"Y\",\n\t\t})\n\n\t\tconst system = new FolderSystem([...allFolders, customFolderAnother, customFolderAnotherSub])\n\n\t\to(system.getIndentedList()).deepEquals([\n\t\t\t{ level: 0, folder: inbox },\n\t\t\t{ level: 0, folder: archive },\n\t\t\t{ level: 0, folder: customFolderAnother },\n\t\t\t{ level: 1, folder: customFolderAnotherSub },\n\t\t\t{ level: 0, folder: customFolder },\n\t\t\t{ level: 1, folder: customSubfolder },\n\t\t\t{ level: 2, folder: customSubSubfolderAnother },\n\t\t\t{ level: 2, folder: customSubSubfolder },\n\t\t])\n\t})\n\n\to(\"indented list will not return folder or descendants of given folder\", function () {\n\t\tconst system = new FolderSystem(allFolders)\n\t\to(system.getIndentedList(customSubfolder)).deepEquals([\n\t\t\t{ level: 0, folder: inbox },\n\t\t\t{ level: 0, folder: archive },\n\t\t\t{ level: 0, folder: customFolder },\n\t\t])\n\t})\n\n\to(\"getSystemFolderByType\", function () {\n\t\tconst system = new FolderSystem(allFolders)\n\n\t\to(system.getSystemFolderByType(MailSetKind.ARCHIVE)).deepEquals(archive)\n\t})\n\n\to(\"getFolderById\", function () {\n\t\tconst system = new FolderSystem(allFolders)\n\n\t\to(system.getFolderById(getElementId(archive))).deepEquals(archive)\n\t})\n\n\to(\"getFolderById not there returns null\", function () {\n\t\tconst system = new FolderSystem(allFolders)\n\n\t\to(system.getFolderById(\"randomId\")).equals(null)\n\t})\n\n\to(\"getFolderByMail\", function () {\n\t\tconst system = new FolderSystem(allFolders)\n\t\to(system.getFolderByMail(mail)).equals(customSubfolder)\n\t})\n\n\to(\"getCustomFoldersOfParent\", function () {\n\t\tconst system = new FolderSystem(allFolders)\n\n\t\to(system.getCustomFoldersOfParent(customSubfolder._id)).deepEquals([customSubSubfolderAnother, customSubSubfolder])\n\t})\n\n\to(\"getPathToFolder\", function () {\n\t\tconst system = new FolderSystem(allFolders)\n\n\t\to(system.getPathToFolder(customSubSubfolder._id)).deepEquals([customFolder, customSubfolder, customSubSubfolder])\n\t})\n})\n","import o from \"../../../../packages/otest/dist/otest\"\nimport { LoadedMail, MailListModel } from \"../../../../src/mail-app/mail/model/MailListModel\"\nimport {\n\tcreateMailFolder,\n\tcreateMailSetEntry,\n\tMail,\n\tMailboxGroupRootTypeRef,\n\tMailBoxTypeRef,\n\tMailFolder,\n\tMailFolderTypeRef,\n\tMailSetEntry,\n\tMailSetEntryTypeRef,\n\tMailTypeRef,\n} from \"../../../../src/common/api/entities/tutanota/TypeRefs\"\nimport { matchers, object, verify, when } from \"testdouble\"\nimport { ConversationPrefProvider } from \"../../../../src/mail-app/mail/view/ConversationViewModel\"\nimport { EntityClient } from \"../../../../src/common/api/common/EntityClient\"\nimport { MailModel } from \"../../../../src/mail-app/mail/model/MailModel\"\nimport { InboxRuleHandler } from \"../../../../src/mail-app/mail/model/InboxRuleHandler\"\nimport { ExposedCacheStorage } from \"../../../../src/common/api/worker/rest/DefaultEntityRestCache\"\nimport { MailSetKind, OperationType } from \"../../../../src/common/api/common/TutanotaConstants\"\nimport {\n\tconstructMailSetEntryId,\n\tCUSTOM_MAX_ID,\n\tdeconstructMailSetEntryId,\n\telementIdPart,\n\tGENERATED_MAX_ID,\n\tgetElementId,\n\tgetListId,\n\tisSameId,\n} from \"../../../../src/common/api/common/utils/EntityUtils\"\nimport { PageSize } from \"../../../../src/common/gui/base/ListUtils\"\nimport { createTestEntity } from \"../../TestUtils\"\nimport { tutaDunkel, tutaRed } from \"../../../../src/common/gui/builtinThemes\"\nimport { EntityUpdateData } from \"../../../../src/common/api/common/utils/EntityUpdateUtils\"\nimport { MailboxDetail } from \"../../../../src/common/mailFunctionality/MailboxModel\"\nimport { GroupInfoTypeRef, GroupTypeRef } from \"../../../../src/common/api/entities/sys/TypeRefs\"\nimport { ConnectionError } from \"../../../../src/common/api/common/error/RestError\"\nimport { clamp, pad } from \"@tutao/tutanota-utils\"\n\no.spec(\"MailListModelTest\", () => {\n\tlet model: MailListModel\n\n\tconst mailboxDetail: MailboxDetail = {\n\t\tmailbox: createTestEntity(MailBoxTypeRef),\n\t\tmailGroupInfo: createTestEntity(GroupInfoTypeRef),\n\t\tmailGroup: createTestEntity(GroupTypeRef),\n\t\tmailboxGroupRoot: createTestEntity(MailboxGroupRootTypeRef),\n\t}\n\n\tconst mailSetEntriesListId = \"entries\"\n\tconst _ownerGroup = \"me\"\n\n\tconst labels: MailFolder[] = [\n\t\tcreateTestEntity(MailFolderTypeRef, {\n\t\t\t_id: [\"mailFolderList\", \"tutaRed\"],\n\t\t\tcolor: tutaRed,\n\t\t\tfolderType: MailSetKind.LABEL,\n\t\t\tisMailSet: true,\n\t\t\tname: \"Tuta Red Label\",\n\t\t\tparentFolder: null,\n\t\t}),\n\t\tcreateTestEntity(MailFolderTypeRef, {\n\t\t\t_id: [\"mailFolderList\", \"tutaDunkel\"],\n\t\t\tcolor: tutaDunkel,\n\t\t\tfolderType: MailSetKind.LABEL,\n\t\t\tisMailSet: true,\n\t\t\tname: \"Tuta Dunkel Label\",\n\t\t\tparentFolder: null,\n\t\t}),\n\t]\n\n\tlet mailSet: MailFolder\n\tlet conversationPrefProvider: ConversationPrefProvider\n\tlet entityClient: EntityClient\n\tlet mailModel: MailModel\n\tlet inboxRuleHandler: InboxRuleHandler\n\tlet cacheStorage: ExposedCacheStorage\n\n\to.beforeEach(() => {\n\t\tmailSet = createTestEntity(MailFolderTypeRef, {\n\t\t\t_id: [\"mailFolderList\", \"mailFolderId\"],\n\t\t\tfolderType: MailSetKind.CUSTOM,\n\t\t\tisMailSet: true,\n\t\t\tname: \"My Folder\",\n\t\t\tentries: mailSetEntriesListId,\n\t\t\tparentFolder: null,\n\t\t})\n\n\t\tconversationPrefProvider = object()\n\t\tentityClient = object()\n\t\tmailModel = object()\n\t\tinboxRuleHandler = object()\n\t\tcacheStorage = object()\n\t\tmodel = new MailListModel(mailSet, conversationPrefProvider, entityClient, mailModel, inboxRuleHandler, cacheStorage)\n\t\twhen(mailModel.getMailboxDetailsForMailFolder(mailSet)).thenResolve(mailboxDetail)\n\t})\n\n\t// Care has to be ensured for generating mail set entry IDs as we depend on real mail set ID decoding, thus we have\n\t// some helper methods for generating IDs for these tests.\n\tfunction makeMailId(index: number): IdTuple {\n\t\tconst mailBag = index % 10\n\t\treturn [`${mailBag}`, pad(index, GENERATED_MAX_ID.length)]\n\t}\n\n\tfunction makeMailSetElementId(index: number): Id {\n\t\treturn constructMailSetEntryId(new Date(index * 100), elementIdPart(makeMailId(index)))\n\t}\n\n\tfunction mailSetElementIdToIndex(mailSetElementId: Id): number {\n\t\treturn Number(deconstructMailSetEntryId(mailSetElementId).mailId)\n\t}\n\n\tasync function setUpTestData(count: number, initialLabels: MailFolder[], offline: boolean) {\n\t\tconst mailSetEntries: MailSetEntry[] = []\n\t\tconst mails: Mail[][] = [[], [], [], [], [], [], [], [], [], []]\n\n\t\tfor (let i = 0; i < count; i++) {\n\t\t\tconst mailBag = i % 10\n\t\t\tconst mailId: IdTuple = makeMailId(i)\n\n\t\t\tconst mail = createTestEntity(MailTypeRef, {\n\t\t\t\t_id: mailId,\n\t\t\t\tsets: [mailSet._id, ...initialLabels.map((l) => l._id)],\n\t\t\t})\n\n\t\t\tmails[mailBag].push(mail)\n\n\t\t\tmailSetEntries.push(\n\t\t\t\tcreateMailSetEntry({\n\t\t\t\t\t_id: [mailSetEntriesListId, makeMailSetElementId(i)],\n\t\t\t\t\t_ownerGroup,\n\t\t\t\t\t_permissions: \"1234\",\n\t\t\t\t\tmail: mailId,\n\t\t\t\t}),\n\t\t\t)\n\t\t}\n\n\t\twhen(mailModel.getLabelsForMail(matchers.anything())).thenDo((mail: Mail) => {\n\t\t\tconst sets: MailFolder[] = []\n\t\t\tfor (const set of mail.sets) {\n\t\t\t\tconst setToAdd = labels.find((label) => isSameId(label._id, set))\n\t\t\t\tif (setToAdd) {\n\t\t\t\t\tsets.push(setToAdd)\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn sets\n\t\t})\n\n\t\t// Ensures elements are loaded from the array in reverse order\n\t\tasync function getMailSetEntryMock(_mailSetEntry: any, _listId: Id, startingId: Id, count: number, _reverse: boolean): Promise<MailSetEntry[]> {\n\t\t\tlet endingIndex: number\n\t\t\tif (startingId === CUSTOM_MAX_ID) {\n\t\t\t\tendingIndex = mailSetEntries.length\n\t\t\t} else {\n\t\t\t\tendingIndex = mailSetElementIdToIndex(startingId)\n\t\t\t}\n\t\t\tendingIndex = clamp(endingIndex, 0, mailSetEntries.length)\n\n\t\t\tlet startingIndex = clamp(endingIndex - count, 0, endingIndex)\n\t\t\treturn mailSetEntries.slice(startingIndex, endingIndex)\n\t\t}\n\n\t\tasync function getMailsMock(_mailTypeRef: any, mailBag: string, elements: Id[]): Promise<Mail[]> {\n\t\t\tconst mailsInMailBag = mails[Number(mailBag)] ?? []\n\t\t\treturn mailsInMailBag.filter((mail) => elements.includes(getElementId(mail)))\n\t\t}\n\n\t\twhen(cacheStorage.provideFromRange(MailSetEntryTypeRef, mailSetEntriesListId, matchers.anything(), matchers.anything(), true)).thenDo(\n\t\t\tgetMailSetEntryMock,\n\t\t)\n\t\twhen(cacheStorage.provideMultiple(MailTypeRef, matchers.anything(), matchers.anything())).thenDo(getMailsMock)\n\n\t\tif (offline) {\n\t\t\twhen(entityClient.loadRange(matchers.anything(), matchers.anything(), matchers.anything(), matchers.anything(), matchers.anything())).thenReject(\n\t\t\t\tnew ConnectionError(\"sorry we are offline\"),\n\t\t\t)\n\t\t\twhen(entityClient.loadMultiple(matchers.anything(), matchers.anything(), matchers.anything(), matchers.anything())).thenReject(\n\t\t\t\tnew ConnectionError(\"sorry we are offline\"),\n\t\t\t)\n\t\t} else {\n\t\t\twhen(entityClient.loadRange(MailSetEntryTypeRef, mailSetEntriesListId, matchers.anything(), matchers.anything(), true)).thenDo(getMailSetEntryMock)\n\t\t\twhen(entityClient.loadMultiple(MailTypeRef, matchers.anything(), matchers.anything())).thenDo(getMailsMock)\n\t\t}\n\t}\n\n\to.test(\"loads PageSize items and sets labels correctly\", async () => {\n\t\tawait setUpTestData(PageSize, labels, false)\n\t\tawait model.loadInitial()\n\t\to(model.items.length).equals(PageSize)\n\t\tfor (const mail of model.items) {\n\t\t\to(model.getLabelsForMail(mail)).deepEquals(labels)\n\t\t}\n\t\tverify(cacheStorage.provideFromRange(MailSetEntryTypeRef, mailSetEntriesListId, CUSTOM_MAX_ID, PageSize, true), {\n\t\t\ttimes: 0,\n\t\t})\n\t\tverify(mailModel.getMailboxDetailsForMailFolder(matchers.anything()), {\n\t\t\ttimes: 0,\n\t\t})\n\t\tverify(inboxRuleHandler.findAndApplyMatchingRule(mailboxDetail, matchers.anything(), true), {\n\t\t\ttimes: 0,\n\t\t})\n\t})\n\n\to.test(\"loads PageSize items while offline and sets labels correctly\", async () => {\n\t\tawait setUpTestData(PageSize, labels, true)\n\t\tawait model.loadInitial()\n\t\to(model.items.length).equals(PageSize)\n\t\tfor (const mail of model.items) {\n\t\t\to(model.getLabelsForMail(mail)).deepEquals(labels)\n\t\t}\n\t\tverify(cacheStorage.provideFromRange(MailSetEntryTypeRef, mailSetEntriesListId, CUSTOM_MAX_ID, PageSize, true), {\n\t\t\ttimes: 1,\n\t\t})\n\t\tverify(mailModel.getMailboxDetailsForMailFolder(matchers.anything()), {\n\t\t\ttimes: 0,\n\t\t})\n\t\tverify(inboxRuleHandler.findAndApplyMatchingRule(mailboxDetail, matchers.anything(), true), {\n\t\t\ttimes: 0,\n\t\t})\n\t})\n\n\to.test(\"applies inbox rules if inbox\", async () => {\n\t\tmailSet.folderType = MailSetKind.INBOX\n\n\t\t// make one item have a rule\n\t\twhen(\n\t\t\tinboxRuleHandler.findAndApplyMatchingRule(\n\t\t\t\tmailboxDetail,\n\t\t\t\tmatchers.argThat((mail: Mail) => isSameId(mail._id, makeMailId(25))),\n\t\t\t\ttrue,\n\t\t\t),\n\t\t).thenResolve({})\n\n\t\tawait setUpTestData(PageSize, labels, false)\n\t\tawait model.loadInitial()\n\t\to(model.items.length).equals(PageSize - 1)\n\t\tfor (const mail of model.items) {\n\t\t\to(model.getLabelsForMail(mail)).deepEquals(labels)\n\t\t}\n\t\tverify(cacheStorage.provideFromRange(MailSetEntryTypeRef, mailSetEntriesListId, CUSTOM_MAX_ID, PageSize, true), {\n\t\t\ttimes: 0,\n\t\t})\n\t\tverify(mailModel.getMailboxDetailsForMailFolder(matchers.anything()), {\n\t\t\ttimes: 1,\n\t\t})\n\t\tverify(inboxRuleHandler.findAndApplyMatchingRule(mailboxDetail, matchers.anything(), true), {\n\t\t\ttimes: 100,\n\t\t})\n\t})\n\n\to.test(\"loadMore eventually loads more mails\", async () => {\n\t\tconst pages = 5\n\t\tawait setUpTestData(PageSize * pages, labels, false)\n\t\tawait model.loadInitial() // will have the first page loaded\n\t\tconst unloadedMail = makeMailSetElementId(1) // a mail that will be on the bottom of the list\n\n\t\t// This mail is not loaded until we load a few more pages.\n\t\tfor (let loadedPageCount = 1; loadedPageCount < pages; loadedPageCount++) {\n\t\t\to(model.items.length).equals(PageSize * loadedPageCount)\n\t\t\tconst mail = model.getMailSetEntry(unloadedMail)\n\t\t\to(mail).equals(null)\n\t\t\tawait model.loadMore()\n\t\t}\n\n\t\t// Everything is loaded including that mail we wanted from before\n\t\to(model.items.length).equals(PageSize * pages)\n\t\tconst mail = model.getMailSetEntry(unloadedMail)\n\t\to(mail).notEquals(null)\n\t})\n\n\to.test(\"loadAndSelect selects by mail id\", async () => {\n\t\tawait setUpTestData(PageSize * 5, labels, false)\n\t\tawait model.loadInitial() // will have the first page loaded\n\n\t\t// This mail is not loaded yet.\n\t\tconst unloadedMail = elementIdPart(makeMailId(1)) // a mail that will be on the bottom of the list\n\t\tconst mail = model.getMail(unloadedMail)\n\t\to(mail).equals(null)\n\n\t\t// Should now be loaded\n\t\tconst loadedMail = await model.loadAndSelect(unloadedMail, () => false)\n\t\to(loadedMail).notEquals(null)\n\t\to(loadedMail).equals(model.getMail(unloadedMail))\n\t})\n\n\to.spec(\"handleEntityUpdate\", () => {\n\t\to.test(\"mailset update updates labels\", async () => {\n\t\t\tawait setUpTestData(PageSize, [labels[0]], false)\n\t\t\tawait model.loadInitial()\n\n\t\t\t// Overwrite one of the mails inside the list so it has both labels\n\t\t\tconst someIndex = 50 // a random number\n\t\t\tconst someMail: LoadedMail = {\n\t\t\t\t...model._loadedMails()[someIndex],\n\t\t\t\tlabels: [labels[0], labels[1]],\n\t\t\t}\n\t\t\tsomeMail.mail.sets.push(labels[1]._id)\n\t\t\tmodel._updateSingleMail(someMail)\n\t\t\to(model.getLabelsForMail(someMail.mail)[1]).deepEquals(labels[1])\n\n\t\t\t// Change one of the labels (but not inside the mail we just updated)\n\t\t\tlabels[1] = {\n\t\t\t\t...labels[1],\n\t\t\t\tname: \"Mint\",\n\t\t\t\tcolor: \"#00FFAA\",\n\t\t\t}\n\n\t\t\to(model.getLabelsForMail(someMail.mail)[1]).notDeepEquals(labels[1])\n\n\t\t\tconst entityUpdateData = {\n\t\t\t\tapplication: MailFolderTypeRef.app,\n\t\t\t\ttype: MailFolderTypeRef.type,\n\t\t\t\tinstanceListId: getListId(labels[1]),\n\t\t\t\tinstanceId: getElementId(labels[1]),\n\t\t\t\toperation: OperationType.DELETE,\n\t\t\t}\n\n\t\t\tentityUpdateData.operation = OperationType.UPDATE\n\t\t\tawait model.handleEntityUpdate(entityUpdateData)\n\t\t\to(model.getLabelsForMail(someMail.mail)[1]).deepEquals(labels[1])\n\n\t\t\t// verify getLabelsForMail call times (someMail was queried twice, but other mails only once)\n\t\t\tverify(mailModel.getLabelsForMail(someMail.mail), { times: 2 })\n\t\t\tverify(mailModel.getLabelsForMail(model.items[someIndex + 1]), { times: 1 })\n\t\t})\n\n\t\to.test(\"mailset delete does nothing\", async () => {\n\t\t\tawait setUpTestData(PageSize, [labels[0]], false)\n\t\t\tawait model.loadInitial()\n\n\t\t\tconst entityUpdateData = {\n\t\t\t\tapplication: MailFolderTypeRef.app,\n\t\t\t\ttype: MailFolderTypeRef.type,\n\t\t\t\tinstanceListId: getListId(labels[1]),\n\t\t\t\tinstanceId: getElementId(labels[1]),\n\t\t\t\toperation: OperationType.DELETE,\n\t\t\t}\n\t\t\tentityUpdateData.operation = OperationType.DELETE\n\n\t\t\tawait model.handleEntityUpdate(entityUpdateData)\n\t\t\to(model.items.length).equals(PageSize)\n\t\t})\n\n\t\to.test(\"deleting a mail set entry\", async () => {\n\t\t\tawait setUpTestData(PageSize, labels, false)\n\t\t\tawait model.loadInitial()\n\t\t\tconst someIndex = 22 // a random number\n\t\t\tconst someMail = model._loadedMails()[someIndex]\n\n\t\t\tconst entityUpdateData = {\n\t\t\t\tapplication: MailSetEntryTypeRef.app,\n\t\t\t\ttype: MailSetEntryTypeRef.type,\n\t\t\t\tinstanceListId: getListId(someMail.mailSetEntry),\n\t\t\t\tinstanceId: getElementId(someMail.mailSetEntry),\n\t\t\t\toperation: OperationType.DELETE,\n\t\t\t}\n\n\t\t\tconst oldItems = model.items\n\t\t\tconst newItems = [...oldItems]\n\t\t\tnewItems.splice(someIndex, 1)\n\n\t\t\to(model.items).deepEquals(oldItems)\n\t\t\tawait model.handleEntityUpdate(entityUpdateData)\n\t\t\to(model.items).deepEquals(newItems)\n\t\t\to(model.getMail(getElementId(someMail.mail))).equals(null)\n\t\t})\n\n\t\tfunction createInsertedMail(forEntries: Id): {\n\t\t\tmail: Mail\n\t\t\tmailSetEntry: MailSetEntry\n\t\t\tentityUpdateData: EntityUpdateData\n\t\t\tmailLabels: MailFolder[]\n\t\t} {\n\t\t\tconst newMail = createTestEntity(MailTypeRef, {\n\t\t\t\t_id: [\"new mail!!!\", \"the mail!!!\"],\n\t\t\t\tsets: [mailSet._id, labels[1]._id],\n\t\t\t})\n\n\t\t\tconst newEntry = createMailSetEntry({\n\t\t\t\t_id: [forEntries, CUSTOM_MAX_ID],\n\t\t\t\tmail: newMail._id,\n\t\t\t})\n\n\t\t\tconst entityUpdateData = {\n\t\t\t\tapplication: MailSetEntryTypeRef.app,\n\t\t\t\ttype: MailSetEntryTypeRef.type,\n\t\t\t\tinstanceListId: getListId(newEntry),\n\t\t\t\tinstanceId: getElementId(newEntry),\n\t\t\t\toperation: OperationType.CREATE,\n\t\t\t}\n\n\t\t\twhen(entityClient.load(MailSetEntryTypeRef, newEntry._id)).thenResolve(newEntry)\n\t\t\twhen(entityClient.loadMultiple(MailTypeRef, getListId(newMail), [getElementId(newMail)])).thenResolve([newMail])\n\n\t\t\treturn {\n\t\t\t\tmail: newMail,\n\t\t\t\tmailSetEntry: newEntry,\n\t\t\t\tentityUpdateData,\n\t\t\t\tmailLabels: [labels[1]],\n\t\t\t}\n\t\t}\n\n\t\to.test(\"creating a mail set entry of the same set adds the element\", async () => {\n\t\t\tawait setUpTestData(PageSize, labels, false)\n\t\t\tawait model.loadInitial()\n\t\t\tconst { mail, entityUpdateData, mailLabels } = createInsertedMail(mailSet.entries)\n\n\t\t\tconst oldItems = model.items\n\t\t\tconst newItems = [mail, ...oldItems]\n\n\t\t\to(model.items).deepEquals(oldItems)\n\t\t\tawait model.handleEntityUpdate(entityUpdateData)\n\t\t\to(model.items).deepEquals(newItems)\n\t\t\to(model.getMail(getElementId(mail))).deepEquals(mail)\n\t\t\to(model.getLabelsForMail(mail)).deepEquals(mailLabels)\n\t\t})\n\n\t\to.test(\"creating a mail set entry in a different set does nothing\", async () => {\n\t\t\tawait setUpTestData(PageSize, labels, false)\n\t\t\tawait model.loadInitial()\n\t\t\tconst { mail, entityUpdateData } = createInsertedMail(\"something else\")\n\n\t\t\tconst oldItems = model.items\n\t\t\tconst newItems = [...oldItems]\n\n\t\t\to(model.items).deepEquals(oldItems)\n\t\t\tawait model.handleEntityUpdate(entityUpdateData)\n\t\t\to(model.items).deepEquals(newItems)\n\t\t\to(model.getMail(getElementId(mail))).equals(null)\n\t\t})\n\n\t\to.test(\"updating a mail updates the contents\", async () => {\n\t\t\tawait setUpTestData(PageSize, labels, false)\n\t\t\tawait model.loadInitial()\n\t\t\tconst mail = { ...model.items[2] }\n\t\t\tmail.subject = \"hey it's a subject\"\n\t\t\tmail.sets = [mailSet._id] // remove all labels\n\n\t\t\tconst entityUpdateData = {\n\t\t\t\tapplication: MailTypeRef.app,\n\t\t\t\ttype: MailTypeRef.type,\n\t\t\t\tinstanceListId: getListId(mail),\n\t\t\t\tinstanceId: getElementId(mail),\n\t\t\t\toperation: OperationType.UPDATE,\n\t\t\t}\n\t\t\twhen(entityClient.load(MailTypeRef, mail._id)).thenResolve(mail)\n\n\t\t\tentityUpdateData.operation = OperationType.UPDATE\n\t\t\tawait model.handleEntityUpdate(entityUpdateData)\n\t\t\to(model.getMail(getElementId(mail))).deepEquals(mail)\n\t\t\to(model.getLabelsForMail(mail)).deepEquals([])\n\t\t})\n\n\t\to.test(\"mail delete does nothing\", async () => {\n\t\t\tawait setUpTestData(PageSize, labels, false)\n\t\t\tawait model.loadInitial()\n\t\t\tconst mail = { ...model.items[2] }\n\t\t\tconst entityUpdateData = {\n\t\t\t\tapplication: MailTypeRef.app,\n\t\t\t\ttype: MailTypeRef.type,\n\t\t\t\tinstanceListId: getListId(mail),\n\t\t\t\tinstanceId: getElementId(mail),\n\t\t\t\toperation: OperationType.UPDATE,\n\t\t\t}\n\t\t\twhen(entityClient.load(MailTypeRef, mail._id)).thenResolve(mail)\n\t\t\tentityUpdateData.operation = OperationType.DELETE\n\n\t\t\tawait model.handleEntityUpdate(entityUpdateData)\n\t\t\to(model.getMail(getElementId(mail))).deepEquals(mail)\n\t\t})\n\t})\n})\n","import o from \"@tutao/otest\"\nimport { routeMatchesPrefix } from \"../../../src/common/gui/ScopedRouter.js\"\n\no.spec(\"ScopedRouter\", function () {\n\to.spec(\"route matches prefix\", function () {\n\t\to(\"matches exact prefix\", function () {\n\t\t\to(routeMatchesPrefix(\"contact\", \"/contact\")).equals(true)\n\t\t})\n\n\t\to(\"matches with list id\", function () {\n\t\t\to(routeMatchesPrefix(\"contact\", \"/contact/teuckeon\")).equals(true)\n\t\t})\n\n\t\to(\"matches with list and element id\", function () {\n\t\t\to(routeMatchesPrefix(\"contact\", \"/contact/teuckeon/onteuckoec\")).equals(true)\n\t\t})\n\n\t\to(\"does not match another prefix\", function () {\n\t\t\to(routeMatchesPrefix(\"contact\", \"/contactlist\")).equals(false)\n\t\t})\n\n\t\to(\"does not match with id\", function () {\n\t\t\to(routeMatchesPrefix(\"contact\", \"/contactlist/teuckeon\")).equals(false)\n\t\t})\n\n\t\to(\"does not match empty\", function () {\n\t\t\to(routeMatchesPrefix(\"contact\", \"/\")).equals(false)\n\t\t})\n\n\t\to(\"route with query matches prefix\", function () {\n\t\t\to(routeMatchesPrefix(\"contact\", \"/contact?test=1\")).equals(true)\n\t\t})\n\t})\n})\n","\"use strict\"\n;(function(m) {\nif (typeof module !== \"undefined\") module[\"exports\"] = m()\nelse window.o = m()\n})(function init(name) {\n\tvar spec = {}, subjects = [], results, only = [], ctx = spec, start, stack = 0, nextTickish, hasProcess = typeof process === \"object\", hasOwn = ({}).hasOwnProperty\n\tvar ospecFileName = getStackName(ensureStackTrace(new Error), /[\\/\\\\](.*?):\\d+:\\d+/), timeoutStackName\n\tvar globalTimeout = noTimeoutRightNow\n\tvar currentTestError = null\n\tif (name != null) spec[name] = ctx = {}\n\n\ttry {throw new Error} catch (e) {\n\t\tvar ospecFileName = e.stack && (/[\\/\\\\](.*?):\\d+:\\d+/).test(e.stack) ? e.stack.match(/[\\/\\\\](.*?):\\d+:\\d+/)[1] : null\n\t}\n\tfunction o(subject, predicate) {\n\t\tif (predicate === undefined) {\n\t\t\tif (!isRunning()) throw new Error(\"Assertions should not occur outside test definitions\")\n\t\t\treturn new Assert(subject)\n\t\t} else {\n\t\t\tif (isRunning()) throw new Error(\"Test definitions and hooks shouldn't be nested. To group tests use `o.spec()`\")\n\t\t\tsubject = String(subject)\n\t\t\tif (subject.charCodeAt(0) === 1) throw new Error(\"test names starting with '\\\\x01' are reserved for internal use\")\n\t\t\tctx[unique(subject)] = new Task(predicate, ensureStackTrace(new Error))\n\t\t}\n\t}\n\to.before = hook(\"\\x01before\")\n\to.after = hook(\"\\x01after\")\n\to.beforeEach = hook(\"\\x01beforeEach\")\n\to.afterEach = hook(\"\\x01afterEach\")\n\to.specTimeout = function (t) {\n\t\tif (isRunning()) throw new Error(\"o.specTimeout() can only be called before o.run()\")\n\t\tif (hasOwn.call(ctx, \"\\x01specTimeout\")) throw new Error(\"A default timeout has already been defined in this context\")\n\t\tif (typeof t !== \"number\") throw new Error(\"o.specTimeout() expects a number as argument\")\n\t\tctx[\"\\x01specTimeout\"] = t\n\t}\n\to.new = init\n\to.spec = function(subject, predicate) {\n\t\tvar parent = ctx\n\t\tctx = ctx[unique(subject)] = {}\n\t\tpredicate()\n\t\tctx = parent\n\t}\n\to.only = function(subject, predicate, silent) {\n\t\tif (!silent) console.log(\n\t\t\thighlight(\"/!\\\\ WARNING /!\\\\ o.only() mode\") + \"\\n\" + o.cleanStackTrace(ensureStackTrace(new Error)) + \"\\n\",\n\t\t\tcStyle(\"red\"), \"\"\n\t\t)\n\t\tonly.push(predicate)\n\t\to(subject, predicate)\n\t}\n\to.spy = function(fn) {\n\t\tvar spy = function() {\n\t\t\tspy.this = this\n\t\t\tspy.args = [].slice.call(arguments)\n\t\t\tspy.calls.push({this: this, args: spy.args})\n\t\t\tspy.callCount++\n\n\t\t\tif (fn) return fn.apply(this, arguments)\n\t\t}\n\t\tif (fn)\n\t\t\tObject.defineProperties(spy, {\n\t\t\t\tlength: {value: fn.length},\n\t\t\t\tname: {value: fn.name}\n\t\t\t})\n\t\tspy.args = []\n\t\tspy.calls = []\n\t\tspy.callCount = 0\n\t\treturn spy\n\t}\n\to.cleanStackTrace = function(error) {\n\t\t// For IE 10+ in quirks mode, and IE 9- in any mode, errors don't have a stack\n\t\tif (error.stack == null) return \"\"\n\t\tvar i = 0, header = error.message ? error.name + \": \" + error.message : error.name, stack\n\t\t// some environments add the name and message to the stack trace\n\t\tif (error.stack.indexOf(header) === 0) {\n\t\t\tstack = error.stack.slice(header.length).split(/\\r?\\n/)\n\t\t\tstack.shift() // drop the initial empty string\n\t\t} else {\n\t\t\tstack = error.stack.split(/\\r?\\n/)\n\t\t}\n\t\tif (ospecFileName == null) return stack.join(\"\\n\")\n\t\t// skip ospec-related entries on the stack\n\t\twhile (stack[i] != null && stack[i].indexOf(ospecFileName) !== -1) i++\n\t\t// now we're in user code (or past the stack end)\n\t\treturn stack[i]\n\t}\n\to.timeout = function(n) {\n\t\tglobalTimeout(n)\n\t}\n\to.run = function(reporter) {\n\t\tresults = []\n\t\tstart = new Date\n\t\ttest(spec, [], [], new Task(function() {\n\t\t\tsetTimeout(function () {\n\t\t\t\ttimeoutStackName = getStackName({stack: o.cleanStackTrace(ensureStackTrace(new Error))}, /([\\w \\.]+?:\\d+:\\d+)/)\n\t\t\t\tif (typeof reporter === \"function\") reporter(results)\n\t\t\t\telse {\n\t\t\t\t\tvar errCount = o.report(results)\n\t\t\t\t\tif (hasProcess && errCount !== 0) process.exit(1) // eslint-disable-line no-process-exit\n\t\t\t\t}\n\t\t\t})\n\t\t}, null), 200 /*default timeout delay*/)\n\n\t\tfunction test(spec, pre, post, finalize, defaultDelay) {\n\t\t\tif (hasOwn.call(spec, \"\\x01specTimeout\")) defaultDelay = spec[\"\\x01specTimeout\"]\n\t\t\tpre = [].concat(pre, spec[\"\\x01beforeEach\"] || [])\n\t\t\tpost = [].concat(spec[\"\\x01afterEach\"] || [], post)\n\t\t\tseries([].concat(spec[\"\\x01before\"] || [], Object.keys(spec).reduce(function(tasks, key) {\n\t\t\t\tif (key.charCodeAt(0) !== 1 && (only.length === 0 || only.indexOf(spec[key].fn) !== -1 || !(spec[key] instanceof Task))) {\n\t\t\t\t\ttasks.push(new Task(function(done) {\n\t\t\t\t\t\to.timeout(Infinity)\n\t\t\t\t\t\tsubjects.push(key)\n\t\t\t\t\t\tvar pop = new Task(function pop() {subjects.pop(), done()}, null)\n\t\t\t\t\t\tif (spec[key] instanceof Task) series([].concat(pre, spec[key], post, pop), defaultDelay)\n\t\t\t\t\t\telse test(spec[key], pre, post, pop, defaultDelay)\n\t\t\t\t\t}, null))\n\t\t\t\t}\n\t\t\t\treturn tasks\n\t\t\t}, []), spec[\"\\x01after\"] || [], finalize), defaultDelay)\n\t\t}\n\n\t\tfunction series(tasks, defaultDelay) {\n\t\t\tvar cursor = 0\n\t\t\tnext()\n\n\t\t\tfunction next() {\n\t\t\t\tif (cursor === tasks.length) return\n\n\t\t\t\tvar task = tasks[cursor++]\n\t\t\t\tvar fn = task.fn\n\t\t\t\tcurrentTestError = task.err\n\t\t\t\tvar timeout = 0, delay = defaultDelay, s = new Date\n\t\t\t\tvar current = cursor\n\t\t\t\tvar arg\n\n\t\t\t\tglobalTimeout = setDelay\n\n\t\t\t\tvar isDone = false\n\t\t\t\t// public API, may only be called once from use code (or after returned Promise resolution)\n\t\t\t\tfunction done(err) {\n\t\t\t\t\tif (!isDone) isDone = true\n\t\t\t\t\telse throw new Error(\"`\" + arg + \"()` should only be called once\")\n\t\t\t\t\tif (timeout === undefined) console.warn(\"# elapsed: \" + Math.round(new Date - s) + \"ms, expected under \" + delay + \"ms\\n\" + o.cleanStackTrace(task.err))\n\t\t\t\t\tfinalizeAsync(err)\n\t\t\t\t}\n\t\t\t\t// for internal use only\n\t\t\t\tfunction finalizeAsync(err) {\n\t\t\t\t\tif (err == null) {\n\t\t\t\t\t\tif (task.err != null) succeed(new Assert)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (err instanceof Error) fail(new Assert, err.message, err)\n\t\t\t\t\t\telse fail(new Assert, String(err), null)\n\t\t\t\t\t}\n\t\t\t\t\tif (timeout !== undefined) timeout = clearTimeout(timeout)\n\t\t\t\t\tif (current === cursor) next()\n\t\t\t\t}\n\t\t\t\tfunction startTimer() {\n\t\t\t\t\ttimeout = setTimeout(function() {\n\t\t\t\t\t\ttimeout = undefined\n\t\t\t\t\t\tfinalizeAsync(\"async test timed out after \" + delay + \"ms\")\n\t\t\t\t\t}, Math.min(delay, 2147483647))\n\t\t\t\t}\n\t\t\t\tfunction setDelay (t) {\n\t\t\t\t\tif (typeof t !== \"number\") throw new Error(\"timeout() and o.timeout() expect a number as argument\")\n\t\t\t\t\tdelay = t\n\t\t\t\t}\n\t\t\t\tif (fn.length > 0) {\n\t\t\t\t\tvar body = fn.toString()\n\t\t\t\t\targ = (body.match(/^(.+?)(?:\\s|\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*?\\n)*=>/) || body.match(/\\((?:\\s|\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*?\\n)*(.+?)(?:\\s|\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*?\\n)*[,\\)]/) || []).pop()\n\t\t\t\t\tif (body.indexOf(arg) === body.lastIndexOf(arg)) {\n\t\t\t\t\t\tvar e = new Error\n\t\t\t\t\t\te.stack = \"`\" + arg + \"()` should be called at least once\\n\" + o.cleanStackTrace(task.err)\n\t\t\t\t\t\tthrow e\n\t\t\t\t\t}\n\t\t\t\t\ttry {\n\t\t\t\t\t\tfn(done, setDelay)\n\t\t\t\t\t}\n\t\t\t\t\tcatch (e) {\n\t\t\t\t\t\tif (task.err != null) finalizeAsync(e)\n\t\t\t\t\t\t// The errors of internal tasks (which don't have an Err) are ospec bugs and must be rethrown.\n\t\t\t\t\t\telse throw e\n\t\t\t\t\t}\n\t\t\t\t\tif (timeout === 0) {\n\t\t\t\t\t\tstartTimer()\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\ttry{\n\t\t\t\t\t\tvar p = fn()\n\t\t\t\t\t\tif (p && p.then) {\n\t\t\t\t\t\t\tstartTimer()\n\t\t\t\t\t\t\tp.then(function() { done() }, done)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnextTickish(next)\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tif (task.err != null) finalizeAsync(e)\n\t\t\t\t\t\t// The errors of internal tasks (which don't have an Err) are ospec bugs and must be rethrown.\n\t\t\t\t\t\telse throw e\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tglobalTimeout = noTimeoutRightNow\n\t\t\t}\n\t\t}\n\t}\n\tfunction unique(subject) {\n\t\tif (hasOwn.call(ctx, subject)) {\n\t\t\tconsole.warn(\"A test or a spec named `\" + subject + \"` was already defined\")\n\t\t\twhile (hasOwn.call(ctx, subject)) subject += \"*\"\n\t\t}\n\t\treturn subject\n\t}\n\tfunction hook(name) {\n\t\treturn function(predicate) {\n\t\t\tif (ctx[name]) throw new Error(\"This hook should be defined outside of a loop or inside a nested test group:\\n\" + predicate)\n\t\t\tctx[name] = new Task(predicate, ensureStackTrace(new Error))\n\t\t}\n\t}\n\n\tdefine(\"equals\", \"should equal\", function(a, b) {return a === b})\n\tdefine(\"notEquals\", \"should not equal\", function(a, b) {return a !== b})\n\tdefine(\"deepEquals\", \"should deep equal\", deepEqual)\n\tdefine(\"notDeepEquals\", \"should not deep equal\", function(a, b) {return !deepEqual(a, b)})\n\tdefine(\"throws\", \"should throw a\", throws)\n\tdefine(\"notThrows\", \"should not throw a\", function(a, b) {return !throws(a, b)})\n\n\tfunction isArguments(a) {\n\t\tif (\"callee\" in a) {\n\t\t\tfor (var i in a) if (i === \"callee\") return false\n\t\t\treturn true\n\t\t}\n\t}\n\tfunction deepEqual(a, b) {\n\t\tif (a === b) return true\n\t\tif (a === null ^ b === null || a === undefined ^ b === undefined) return false // eslint-disable-line no-bitwise\n\t\tif (typeof a === \"object\" && typeof b === \"object\") {\n\t\t\tvar aIsArgs = isArguments(a), bIsArgs = isArguments(b)\n\t\t\tif (a.constructor === Object && b.constructor === Object && !aIsArgs && !bIsArgs) {\n\t\t\t\tfor (var i in a) {\n\t\t\t\t\tif ((!(i in b)) || !deepEqual(a[i], b[i])) return false\n\t\t\t\t}\n\t\t\t\tfor (var i in b) {\n\t\t\t\t\tif (!(i in a)) return false\n\t\t\t\t}\n\t\t\t\treturn true\n\t\t\t}\n\t\t\tif (a.length === b.length && (a instanceof Array && b instanceof Array || aIsArgs && bIsArgs)) {\n\t\t\t\tvar aKeys = Object.getOwnPropertyNames(a), bKeys = Object.getOwnPropertyNames(b)\n\t\t\t\tif (aKeys.length !== bKeys.length) return false\n\t\t\t\tfor (var i = 0; i < aKeys.length; i++) {\n\t\t\t\t\tif (!hasOwn.call(b, aKeys[i]) || !deepEqual(a[aKeys[i]], b[aKeys[i]])) return false\n\t\t\t\t}\n\t\t\t\treturn true\n\t\t\t}\n\t\t\tif (a instanceof Date && b instanceof Date) return a.getTime() === b.getTime()\n\t\t\tif (typeof Buffer === \"function\" && a instanceof Buffer && b instanceof Buffer) {\n\t\t\t\tfor (var i = 0; i < a.length; i++) {\n\t\t\t\t\tif (a[i] !== b[i]) return false\n\t\t\t\t}\n\t\t\t\treturn true\n\t\t\t}\n\t\t\tif (a.valueOf() === b.valueOf()) return true\n\t\t}\n\t\treturn false\n\t}\n\tfunction throws(a, b){\n\t\ttry{\n\t\t\ta()\n\t\t}catch(e){\n\t\t\tif(typeof b === \"string\"){\n\t\t\t\treturn (e.message === b)\n\t\t\t}else{\n\t\t\t\treturn (e instanceof b)\n\t\t\t}\n\t\t}\n\t\treturn false\n\t}\n\n\tfunction isRunning() {return results != null}\n\tfunction Assert(value) {\n\t\tthis.value = value\n\t\tthis.i = results.length\n\t\tresults.push({pass: null, context: \"\", message: \"Incomplete assertion in the test definition starting at...\", error: currentTestError, testError: currentTestError})\n\t}\n\tfunction Task(fn, err) {\n\t\tthis.fn = fn\n\t\tthis.err = err\n\t}\n\tfunction define(name, verb, compare) {\n\t\tAssert.prototype[name] = function assert(value) {\n\t\t\tvar self = this\n\t\t\tvar message = serialize(self.value) + \"\\n  \" + verb + \"\\n\" + serialize(value)\n\t\t\tif (compare(self.value, value)){\n\t\t\t\tsucceed(self, message)\n\t\t\t\treturn function(message) {\n\t\t\t\t\tif (!self.pass) self.message = message + \"\\n\\n\" + self.message\n\t\t\t\t}\n\t\t\t}else fail(self, message)\n\t\t}\n\t}\n\tfunction succeed(assertion, message) {\n\t\tresults[assertion.i].pass = true\n\t\tresults[assertion.i].context = subjects.join(\" > \")\n\t\tresults[assertion.i].message = message\n\t}\n\tfunction fail(assertion, message, error) {\n\t\tresults[assertion.i].pass = false\n\t\tresults[assertion.i].context = subjects.join(\" > \")\n\t\tresults[assertion.i].message = message\n\t\tresults[assertion.i].error = error != null ? error : ensureStackTrace(new Error)\n\t}\n\tfunction serialize(value) {\n\t\tif (hasProcess) return require(\"util\").inspect(value) // eslint-disable-line global-require\n\t\tif (value === null || (typeof value === \"object\" && !(value instanceof Array)) || typeof value === \"number\") return String(value)\n\t\telse if (typeof value === \"function\") return value.name || \"<anonymous function>\"\n\t\ttry {return JSON.stringify(value)} catch (e) {return String(value)}\n\t}\n\tfunction noTimeoutRightNow() {\n\t\tthrow new Error(\"o.timeout must be called snchronously from within a test definition or a hook\")\n\t}\n\tvar colorCodes = {\n\t\tred: \"31m\",\n\t\tred2: \"31;1m\",\n\t\tgreen: \"32;1m\"\n\t}\n\tfunction highlight(message, color) {\n\t\tvar code = colorCodes[color] || colorCodes.red;\n\t\treturn hasProcess ? (process.stdout.isTTY ? \"\\x1b[\" + code + message + \"\\x1b[0m\" : message) : \"%c\" + message + \"%c \"\n\t}\n\tfunction cStyle(color, bold) {\n\t\treturn hasProcess||!color ? \"\" : \"color:\"+color+(bold ? \";font-weight:bold\" : \"\")\n\t}\n\tfunction ensureStackTrace(error) {\n\t\t// mandatory to get a stack in IE 10 and 11 (and maybe other envs?)\n\t\tif (error.stack === undefined) try { throw error } catch(e) {return e}\n\t\telse return error\n\t}\n\tfunction getStackName(e, exp) {\n\t\treturn e.stack && exp.test(e.stack) ? e.stack.match(exp)[1] : null\n\t}\n\n\to.report = function (results) {\n\t\tvar errCount = 0\n\t\tfor (var i = 0, r; r = results[i]; i++) {\n\t\t\tif (r.pass == null) {\n\t\t\t\tr.testError.stack = r.message + \"\\n\" + o.cleanStackTrace(r.testError)\n\t\t\t\tr.testError.message = r.message\n\t\t\t\tthrow r.testError\n\t\t\t}\n\t\t\tif (!r.pass) {\n\t\t\t\tvar stackTrace = o.cleanStackTrace(r.error)\n\t\t\t\tvar couldHaveABetterStackTrace = !stackTrace || timeoutStackName != null && stackTrace.indexOf(timeoutStackName) !== -1\n\t\t\t\tif (couldHaveABetterStackTrace) stackTrace = r.testError != null ? o.cleanStackTrace(r.testError) : r.error.stack || \"\"\n\t\t\t\tconsole.error(\n\t\t\t\t\t(hasProcess ? \"\\n\" : \"\") +\n\t\t\t\t\thighlight(r.context + \":\", \"red2\") + \"\\n\" +\n\t\t\t\t\thighlight(r.message, \"red\") +\n\t\t\t\t\t(stackTrace ? \"\\n\" + stackTrace + \"\\n\" : \"\"),\n\n\t\t\t\t\tcStyle(\"black\", true), \"\", // reset to default\n\t\t\t\t\tcStyle(\"red\"), cStyle(\"black\")\n\t\t\t\t)\n\t\t\t\terrCount++\n\t\t\t}\n\t\t}\n\t\tvar pl = results.length === 1 ? \"\" : \"s\"\n\t\tvar resultSummary = (errCount === 0) ?\n\t\t\thighlight((pl ? \"All \" : \"The \") + results.length + \" assertion\" + pl + \" passed\", \"green\"):\n\t\t\thighlight(errCount + \" out of \" + results.length + \" assertion\" + pl + \" failed\", \"red2\")\n\t\tvar runningTime = \" in \" + Math.round(Date.now() - start) + \"ms\"\n\n\t\tconsole.log(\n\t\t\t(hasProcess ? \"––––––\\n\" : \"\") +\n\t\t\t(name ? name + \": \" : \"\") + resultSummary + runningTime,\n\t\t\tcStyle((errCount === 0 ? \"green\" : \"red\"), true), \"\"\n\t\t)\n\t\treturn errCount\n\t}\n\n\tif (hasProcess) {\n\t\tnextTickish = process.nextTick\n\t} else {\n\t\tnextTickish = function fakeFastNextTick(next) {\n\t\t\tif (stack++ < 5000) next()\n\t\t\telse setTimeout(next, stack = 0)\n\t\t}\n\t}\n\n\treturn o\n})\n","import o from \"ospec\"\nimport { ContactListEditorModel } from \"../../../src/mail-app/contacts/ContactListEditor.js\"\n\no.spec(\"ContactListEditorModelTest\", function () {\n\tlet contactListEditorModel: ContactListEditorModel\n\n\to.beforeEach(() => {\n\t\tcontactListEditorModel = new ContactListEditorModel([])\n\t})\n\n\to.spec(\"adding addresses\", function () {\n\t\to(\"adding address adds it to the address list\", function () {\n\t\t\tconst newEmail = \"test@test.com\"\n\n\t\t\tcontactListEditorModel.addRecipient(newEmail)\n\n\t\t\to(contactListEditorModel.newAddresses.length).equals(1)\n\t\t\to(contactListEditorModel.newAddresses[0]).equals(newEmail)\n\t\t})\n\n\t\to(\"adding address already in list does not add it to the address list\", function () {\n\t\t\tconst newEmail = \"test@test.com\"\n\n\t\t\tcontactListEditorModel.addRecipient(newEmail)\n\t\t\tcontactListEditorModel.addRecipient(newEmail)\n\n\t\t\to(contactListEditorModel.newAddresses.length).equals(1)\n\t\t\to(contactListEditorModel.newAddresses[0]).equals(newEmail)\n\t\t})\n\t})\n\n\to(\"removing address removes address from address list\", function () {\n\t\tconst newEmail = \"test@test.com\"\n\n\t\tcontactListEditorModel.addRecipient(newEmail)\n\t\tcontactListEditorModel.addRecipient(\"test1@test.com\")\n\t\tcontactListEditorModel.addRecipient(\"test2@test.com\")\n\n\t\tcontactListEditorModel.removeRecipient(newEmail)\n\n\t\to(contactListEditorModel.newAddresses.length).equals(2)\n\t\to(contactListEditorModel.newAddresses.includes(newEmail)).equals(false)\n\t})\n})\n","import o from \"@tutao/otest\"\nimport { UserController } from \"../../../src/common/api/main/UserController.js\"\nimport { reminderCutoffDate, shouldShowUpgradeReminder } from \"../../../src/common/login/PostLoginUtils.js\"\nimport { object, when } from \"testdouble\"\nimport {\n\tCustomer,\n\tCustomerInfo,\n\tCustomerInfoTypeRef,\n\tCustomerProperties,\n\tCustomerPropertiesTypeRef,\n\tCustomerTypeRef,\n} from \"../../../src/common/api/entities/sys/TypeRefs.js\"\nimport { Const } from \"../../../src/common/api/common/TutanotaConstants.js\"\nimport { createTestEntity } from \"../TestUtils.js\"\n\no.spec(\"PostLoginUtils\", () => {\n\to.spec(\"shouldShowUpgradeReminder\", () => {\n\t\tlet userController: UserController\n\t\tlet customerInfo: CustomerInfo\n\t\tlet customerProperties: CustomerProperties\n\t\tlet customer: Customer\n\t\tconst date = new Date(\"2023-09-05\")\n\n\t\to.beforeEach(() => {\n\t\t\tuserController = object()\n\n\t\t\tcustomerInfo = createTestEntity(CustomerInfoTypeRef, {})\n\t\t\tcustomerProperties = createTestEntity(CustomerPropertiesTypeRef, {})\n\t\t\tcustomer = createTestEntity(CustomerTypeRef)\n\n\t\t\twhen(userController.loadCustomerInfo()).thenResolve(customerInfo)\n\t\t\twhen(userController.loadCustomerProperties()).thenResolve(customerProperties)\n\t\t\twhen(userController.loadCustomer()).thenResolve(customer)\n\t\t})\n\n\t\to(\"should show for free accounts for the first time if they are old enough\", async () => {\n\t\t\tcustomerInfo.creationTime = new Date(date.getTime() - Const.INITIAL_UPGRADE_REMINDER_INTERVAL_MS - 10)\n\t\t\twhen(userController.isFreeAccount()).thenReturn(true)\n\t\t\twhen(userController.isGlobalAdmin()).thenReturn(true)\n\t\t\tcustomerProperties.lastUpgradeReminder = null\n\t\t\to(await shouldShowUpgradeReminder(userController, date)).equals(true)\n\t\t})\n\n\t\to(\"should not show for free accounts for the first time if they are not old enough\", async () => {\n\t\t\tcustomerInfo.creationTime = new Date(date.getTime() - Const.INITIAL_UPGRADE_REMINDER_INTERVAL_MS + 10)\n\t\t\twhen(userController.isFreeAccount()).thenReturn(true)\n\t\t\twhen(userController.isGlobalAdmin()).thenReturn(true)\n\t\t\tcustomerProperties.lastUpgradeReminder = null\n\t\t\to(await shouldShowUpgradeReminder(userController, date)).equals(false)\n\t\t})\n\n\t\to(\"should show for legacy paid accounts if reminder was never shown but the account is old enough\", async () => {\n\t\t\twhen(userController.isFreeAccount()).thenReturn(false)\n\t\t\twhen(userController.isGlobalAdmin()).thenReturn(true)\n\t\t\twhen(userController.isPremiumAccount()).thenReturn(true)\n\t\t\twhen(userController.isNewPaidPlan()).thenResolve(false)\n\n\t\t\tcustomerInfo.creationTime = new Date(date.getTime() - Const.INITIAL_UPGRADE_REMINDER_INTERVAL_MS - 10)\n\t\t\tcustomerProperties.lastUpgradeReminder = null\n\n\t\t\to(await shouldShowUpgradeReminder(userController, date)).equals(true)\n\t\t})\n\n\t\to(\"SHOULD show for PRIVATE legacy paid accounts if enough time has passed\", async () => {\n\t\t\twhen(userController.isFreeAccount()).thenReturn(false)\n\t\t\twhen(userController.isGlobalAdmin()).thenReturn(true)\n\t\t\twhen(userController.isPremiumAccount()).thenReturn(true)\n\t\t\twhen(userController.isNewPaidPlan()).thenResolve(false)\n\n\t\t\tcustomerProperties.lastUpgradeReminder = new Date(date.getTime() - Const.REPEATED_UPGRADE_REMINDER_INTERVAL_MS - 10)\n\n\t\t\to(await shouldShowUpgradeReminder(userController, date)).equals(true)\n\t\t})\n\n\t\to(\"SHOULD NOT show for BUSINESS legacy paid accounts even if enough time has passed\", async () => {\n\t\t\twhen(userController.isFreeAccount()).thenReturn(false)\n\t\t\twhen(userController.isGlobalAdmin()).thenReturn(true)\n\t\t\twhen(userController.isPremiumAccount()).thenReturn(true)\n\t\t\twhen(userController.isNewPaidPlan()).thenResolve(false)\n\t\t\tcustomer.businessUse = true\n\n\t\t\tcustomerProperties.lastUpgradeReminder = new Date(date.getTime() - Const.REPEATED_UPGRADE_REMINDER_INTERVAL_MS - 10)\n\n\t\t\to(await shouldShowUpgradeReminder(userController, date)).equals(false)\n\t\t})\n\n\t\to(\"should not show for legacy paid accounts if it has been reminded after the cutoff date\", async () => {\n\t\t\twhen(userController.isFreeAccount()).thenReturn(false)\n\t\t\twhen(userController.isGlobalAdmin()).thenReturn(true)\n\t\t\twhen(userController.isPremiumAccount()).thenReturn(true)\n\t\t\twhen(userController.isNewPaidPlan()).thenResolve(false)\n\n\t\t\tcustomerProperties.lastUpgradeReminder = new Date(reminderCutoffDate.getTime() + 10)\n\n\t\t\to(await shouldShowUpgradeReminder(userController, date)).equals(false)\n\t\t})\n\n\t\to(\"should not show for new paid accounts even if enough time has passed\", async () => {\n\t\t\twhen(userController.isFreeAccount()).thenReturn(false)\n\t\t\twhen(userController.isGlobalAdmin()).thenReturn(true)\n\t\t\twhen(userController.isPremiumAccount()).thenReturn(true)\n\t\t\twhen(userController.isNewPaidPlan()).thenResolve(true)\n\n\t\t\tcustomerProperties.lastUpgradeReminder = new Date(date.getTime() - Const.REPEATED_UPGRADE_REMINDER_INTERVAL_MS - 10)\n\n\t\t\to(await shouldShowUpgradeReminder(userController, date)).equals(false)\n\t\t})\n\n\t\to(\"should not show for non-admin users that would normally get shown because legacy\", async () => {\n\t\t\twhen(userController.isFreeAccount()).thenReturn(false)\n\t\t\twhen(userController.isGlobalAdmin()).thenReturn(false)\n\t\t\twhen(userController.isPremiumAccount()).thenReturn(true)\n\t\t\twhen(userController.isNewPaidPlan()).thenResolve(false)\n\n\t\t\tcustomerProperties.lastUpgradeReminder = new Date(date.getTime() - Const.REPEATED_UPGRADE_REMINDER_INTERVAL_MS - 10)\n\n\t\t\to(await shouldShowUpgradeReminder(userController, date)).equals(false)\n\t\t})\n\t})\n})\n","import o from \"@tutao/otest\"\nimport { WASMKyberFacade } from \"../../../../../src/common/api/worker/facades/KyberFacade.js\"\nimport { bytesToKyberPrivateKey, bytesToKyberPublicKey, kyberPrivateKeyToBytes, kyberPublicKeyToBytes } from \"@tutao/tutanota-crypto\"\nimport { loadLibOQSWASM } from \"../WASMTestUtils.js\"\n\no.spec(\"KyberFacade\", function () {\n\tlet kyberFacade: WASMKyberFacade\n\to.before(async () => {\n\t\tkyberFacade = new WASMKyberFacade(await loadLibOQSWASM())\n\t})\n\to(\"encoding roundtrip\", async function () {\n\t\tconst keyPair = await kyberFacade.generateKeypair()\n\t\to(bytesToKyberPublicKey(kyberPublicKeyToBytes(keyPair.publicKey))).deepEquals(keyPair.publicKey)\n\t\to(bytesToKyberPrivateKey(kyberPrivateKeyToBytes(keyPair.privateKey))).deepEquals(keyPair.privateKey)\n\t})\n\n\to(\"encryptionDecryptionRoundtrip\", async function () {\n\t\tconst keyPairBob = await kyberFacade.generateKeypair()\n\t\tconst encapsulation = await kyberFacade.encapsulate(keyPairBob.publicKey)\n\t\tconst sharedSecretAlice = encapsulation.sharedSecret\n\t\tconst sharedSecretBob = await kyberFacade.decapsulate(keyPairBob.privateKey, encapsulation.ciphertext)\n\n\t\to(sharedSecretAlice).deepEquals(sharedSecretBob)\n\t})\n})\n","\n/*! pako 2.1.0 https://github.com/nodeca/pako @license (MIT AND Zlib) */\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n/* eslint-disable space-unary-ops */\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n//const Z_FILTERED          = 1;\n//const Z_HUFFMAN_ONLY      = 2;\n//const Z_RLE               = 3;\nconst Z_FIXED$1               = 4;\n//const Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\nconst Z_BINARY              = 0;\nconst Z_TEXT                = 1;\n//const Z_ASCII             = 1; // = Z_TEXT\nconst Z_UNKNOWN$1             = 2;\n\n/*============================================================================*/\n\n\nfunction zero$1(buf) { let len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n// From zutil.h\n\nconst STORED_BLOCK = 0;\nconst STATIC_TREES = 1;\nconst DYN_TREES    = 2;\n/* The three kinds of block type */\n\nconst MIN_MATCH$1    = 3;\nconst MAX_MATCH$1    = 258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nconst LENGTH_CODES$1  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nconst LITERALS$1      = 256;\n/* number of literal bytes 0..255 */\n\nconst L_CODES$1       = LITERALS$1 + 1 + LENGTH_CODES$1;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nconst D_CODES$1       = 30;\n/* number of distance codes */\n\nconst BL_CODES$1      = 19;\n/* number of codes used to transfer the bit lengths */\n\nconst HEAP_SIZE$1     = 2 * L_CODES$1 + 1;\n/* maximum heap size */\n\nconst MAX_BITS$1      = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst Buf_size      = 16;\n/* size of bit buffer in bi_buf */\n\n\n/* ===========================================================================\n * Constants\n */\n\nconst MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nconst END_BLOCK   = 256;\n/* end of block literal code */\n\nconst REP_3_6     = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nconst REPZ_3_10   = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nconst REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n/* eslint-disable comma-spacing,array-bracket-spacing */\nconst extra_lbits =   /* extra bits for each length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]);\n\nconst extra_dbits =   /* extra bits for each distance code */\n  new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]);\n\nconst extra_blbits =  /* extra bits for each bit length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]);\n\nconst bl_order =\n  new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);\n/* eslint-enable comma-spacing,array-bracket-spacing */\n\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nconst DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1\nconst static_ltree  = new Array((L_CODES$1 + 2) * 2);\nzero$1(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nconst static_dtree  = new Array(D_CODES$1 * 2);\nzero$1(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nconst _dist_code    = new Array(DIST_CODE_LEN);\nzero$1(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nconst _length_code  = new Array(MAX_MATCH$1 - MIN_MATCH$1 + 1);\nzero$1(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nconst base_length   = new Array(LENGTH_CODES$1);\nzero$1(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nconst base_dist     = new Array(D_CODES$1);\nzero$1(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\n\nfunction StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {\n\n  this.static_tree  = static_tree;  /* static tree or NULL */\n  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */\n  this.extra_base   = extra_base;   /* base index for extra_bits */\n  this.elems        = elems;        /* max number of elements in the tree */\n  this.max_length   = max_length;   /* max bit length for the codes */\n\n  // show if `static_tree` has data or dummy - needed for monomorphic objects\n  this.has_stree    = static_tree && static_tree.length;\n}\n\n\nlet static_l_desc;\nlet static_d_desc;\nlet static_bl_desc;\n\n\nfunction TreeDesc(dyn_tree, stat_desc) {\n  this.dyn_tree = dyn_tree;     /* the dynamic tree */\n  this.max_code = 0;            /* largest code with non zero frequency */\n  this.stat_desc = stat_desc;   /* the corresponding static tree */\n}\n\n\n\nconst d_code = (dist) => {\n\n  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n};\n\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nconst put_short = (s, w) => {\n//    put_byte(s, (uch)((w) & 0xff));\n//    put_byte(s, (uch)((ush)(w) >> 8));\n  s.pending_buf[s.pending++] = (w) & 0xff;\n  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;\n};\n\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nconst send_bits = (s, value, length) => {\n\n  if (s.bi_valid > (Buf_size - length)) {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    put_short(s, s.bi_buf);\n    s.bi_buf = value >> (Buf_size - s.bi_valid);\n    s.bi_valid += length - Buf_size;\n  } else {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    s.bi_valid += length;\n  }\n};\n\n\nconst send_code = (s, c, tree) => {\n\n  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);\n};\n\n\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nconst bi_reverse = (code, len) => {\n\n  let res = 0;\n  do {\n    res |= code & 1;\n    code >>>= 1;\n    res <<= 1;\n  } while (--len > 0);\n  return res >>> 1;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\nconst bi_flush = (s) => {\n\n  if (s.bi_valid === 16) {\n    put_short(s, s.bi_buf);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n\n  } else if (s.bi_valid >= 8) {\n    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n    s.bi_buf >>= 8;\n    s.bi_valid -= 8;\n  }\n};\n\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nconst gen_bitlen = (s, desc) => {\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n\n  const tree            = desc.dyn_tree;\n  const max_code        = desc.max_code;\n  const stree           = desc.stat_desc.static_tree;\n  const has_stree       = desc.stat_desc.has_stree;\n  const extra           = desc.stat_desc.extra_bits;\n  const base            = desc.stat_desc.extra_base;\n  const max_length      = desc.stat_desc.max_length;\n  let h;              /* heap index */\n  let n, m;           /* iterate over the tree elements */\n  let bits;           /* bit length */\n  let xbits;          /* extra bits */\n  let f;              /* frequency */\n  let overflow = 0;   /* number of elements with bit length too large */\n\n  for (bits = 0; bits <= MAX_BITS$1; bits++) {\n    s.bl_count[bits] = 0;\n  }\n\n  /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */\n\n  for (h = s.heap_max + 1; h < HEAP_SIZE$1; h++) {\n    n = s.heap[h];\n    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n    tree[n * 2 + 1]/*.Len*/ = bits;\n    /* We overwrite tree[n].Dad which is no longer needed */\n\n    if (n > max_code) { continue; } /* not a leaf node */\n\n    s.bl_count[bits]++;\n    xbits = 0;\n    if (n >= base) {\n      xbits = extra[n - base];\n    }\n    f = tree[n * 2]/*.Freq*/;\n    s.opt_len += f * (bits + xbits);\n    if (has_stree) {\n      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);\n    }\n  }\n  if (overflow === 0) { return; }\n\n  // Tracev((stderr,\"\\nbit length overflow\\n\"));\n  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n  /* Find the first bit length which could increase: */\n  do {\n    bits = max_length - 1;\n    while (s.bl_count[bits] === 0) { bits--; }\n    s.bl_count[bits]--;      /* move one leaf down the tree */\n    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */\n    s.bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n    overflow -= 2;\n  } while (overflow > 0);\n\n  /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n  for (bits = max_length; bits !== 0; bits--) {\n    n = s.bl_count[bits];\n    while (n !== 0) {\n      m = s.heap[--h];\n      if (m > max_code) { continue; }\n      if (tree[m * 2 + 1]/*.Len*/ !== bits) {\n        // Tracev((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;\n        tree[m * 2 + 1]/*.Len*/ = bits;\n      }\n      n--;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nconst gen_codes = (tree, max_code, bl_count) => {\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n\n  const next_code = new Array(MAX_BITS$1 + 1); /* next code value for each bit length */\n  let code = 0;              /* running code value */\n  let bits;                  /* bit index */\n  let n;                     /* code index */\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n  for (bits = 1; bits <= MAX_BITS$1; bits++) {\n    code = (code + bl_count[bits - 1]) << 1;\n    next_code[bits] = code;\n  }\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n  //        \"inconsistent bit counts\");\n  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n  for (n = 0;  n <= max_code; n++) {\n    let len = tree[n * 2 + 1]/*.Len*/;\n    if (len === 0) { continue; }\n    /* Now reverse the bits */\n    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);\n\n    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n  }\n};\n\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nconst tr_static_init = () => {\n\n  let n;        /* iterates over tree elements */\n  let bits;     /* bit counter */\n  let length;   /* length value */\n  let code;     /* code value */\n  let dist;     /* distance index */\n  const bl_count = new Array(MAX_BITS$1 + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  // do check in _tr_init()\n  //if (static_init_done) return;\n\n  /* For some embedded targets, global variables are not initialized: */\n/*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/\n\n  /* Initialize the mapping length (0..255) -> length code (0..28) */\n  length = 0;\n  for (code = 0; code < LENGTH_CODES$1 - 1; code++) {\n    base_length[code] = length;\n    for (n = 0; n < (1 << extra_lbits[code]); n++) {\n      _length_code[length++] = code;\n    }\n  }\n  //Assert (length == 256, \"tr_static_init: length != 256\");\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n  _length_code[length - 1] = code;\n\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n  dist = 0;\n  for (code = 0; code < 16; code++) {\n    base_dist[code] = dist;\n    for (n = 0; n < (1 << extra_dbits[code]); n++) {\n      _dist_code[dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: dist != 256\");\n  dist >>= 7; /* from now on, all distances are divided by 128 */\n  for (; code < D_CODES$1; code++) {\n    base_dist[code] = dist << 7;\n    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {\n      _dist_code[256 + dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n  /* Construct the codes of the static literal tree */\n  for (bits = 0; bits <= MAX_BITS$1; bits++) {\n    bl_count[bits] = 0;\n  }\n\n  n = 0;\n  while (n <= 143) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  while (n <= 255) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 9;\n    n++;\n    bl_count[9]++;\n  }\n  while (n <= 279) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 7;\n    n++;\n    bl_count[7]++;\n  }\n  while (n <= 287) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n  gen_codes(static_ltree, L_CODES$1 + 1, bl_count);\n\n  /* The static distance tree is trivial: */\n  for (n = 0; n < D_CODES$1; n++) {\n    static_dtree[n * 2 + 1]/*.Len*/ = 5;\n    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);\n  }\n\n  // Now data ready and we can init static trees\n  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS$1 + 1, L_CODES$1, MAX_BITS$1);\n  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES$1, MAX_BITS$1);\n  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES$1, MAX_BL_BITS);\n\n  //static_init_done = true;\n};\n\n\n/* ===========================================================================\n * Initialize a new block.\n */\nconst init_block = (s) => {\n\n  let n; /* iterates over tree elements */\n\n  /* Initialize the trees. */\n  for (n = 0; n < L_CODES$1;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < D_CODES$1;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < BL_CODES$1; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }\n\n  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;\n  s.opt_len = s.static_len = 0;\n  s.sym_next = s.matches = 0;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nconst bi_windup = (s) =>\n{\n  if (s.bi_valid > 8) {\n    put_short(s, s.bi_buf);\n  } else if (s.bi_valid > 0) {\n    //put_byte(s, (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n  }\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n};\n\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nconst smaller = (tree, n, m, depth) => {\n\n  const _n2 = n * 2;\n  const _m2 = m * 2;\n  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||\n         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));\n};\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nconst pqdownheap = (s, tree, k) => {\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n\n  const v = s.heap[k];\n  let j = k << 1;  /* left son of k */\n  while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n    if (j < s.heap_len &&\n      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {\n      j++;\n    }\n    /* Exit if v is smaller than both sons */\n    if (smaller(tree, v, s.heap[j], s.depth)) { break; }\n\n    /* Exchange v with the smallest son */\n    s.heap[k] = s.heap[j];\n    k = j;\n\n    /* And continue down the tree, setting j to the left son of k */\n    j <<= 1;\n  }\n  s.heap[k] = v;\n};\n\n\n// inlined manually\n// const SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nconst compress_block = (s, ltree, dtree) => {\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n\n  let dist;           /* distance of matched string */\n  let lc;             /* match length or unmatched char (if dist == 0) */\n  let sx = 0;         /* running index in sym_buf */\n  let code;           /* the code to send */\n  let extra;          /* number of extra bits to send */\n\n  if (s.sym_next !== 0) {\n    do {\n      dist = s.pending_buf[s.sym_buf + sx++] & 0xff;\n      dist += (s.pending_buf[s.sym_buf + sx++] & 0xff) << 8;\n      lc = s.pending_buf[s.sym_buf + sx++];\n      if (dist === 0) {\n        send_code(s, lc, ltree); /* send a literal byte */\n        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n      } else {\n        /* Here, lc is the match length - MIN_MATCH */\n        code = _length_code[lc];\n        send_code(s, code + LITERALS$1 + 1, ltree); /* send the length code */\n        extra = extra_lbits[code];\n        if (extra !== 0) {\n          lc -= base_length[code];\n          send_bits(s, lc, extra);       /* send the extra length bits */\n        }\n        dist--; /* dist is now the match distance - 1 */\n        code = d_code(dist);\n        //Assert (code < D_CODES, \"bad d_code\");\n\n        send_code(s, code, dtree);       /* send the distance code */\n        extra = extra_dbits[code];\n        if (extra !== 0) {\n          dist -= base_dist[code];\n          send_bits(s, dist, extra);   /* send the extra distance bits */\n        }\n      } /* literal or match pair ? */\n\n      /* Check that the overlay between pending_buf and sym_buf is ok: */\n      //Assert(s->pending < s->lit_bufsize + sx, \"pendingBuf overflow\");\n\n    } while (sx < s.sym_next);\n  }\n\n  send_code(s, END_BLOCK, ltree);\n};\n\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nconst build_tree = (s, desc) => {\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n\n  const tree     = desc.dyn_tree;\n  const stree    = desc.stat_desc.static_tree;\n  const has_stree = desc.stat_desc.has_stree;\n  const elems    = desc.stat_desc.elems;\n  let n, m;          /* iterate over heap elements */\n  let max_code = -1; /* largest code with non zero frequency */\n  let node;          /* new node being created */\n\n  /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n  s.heap_len = 0;\n  s.heap_max = HEAP_SIZE$1;\n\n  for (n = 0; n < elems; n++) {\n    if (tree[n * 2]/*.Freq*/ !== 0) {\n      s.heap[++s.heap_len] = max_code = n;\n      s.depth[n] = 0;\n\n    } else {\n      tree[n * 2 + 1]/*.Len*/ = 0;\n    }\n  }\n\n  /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n  while (s.heap_len < 2) {\n    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);\n    tree[node * 2]/*.Freq*/ = 1;\n    s.depth[node] = 0;\n    s.opt_len--;\n\n    if (has_stree) {\n      s.static_len -= stree[node * 2 + 1]/*.Len*/;\n    }\n    /* node is 0 or 1 so it does not have extra bits */\n  }\n  desc.max_code = max_code;\n\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }\n\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n  node = elems;              /* next internal node of the tree */\n  do {\n    //pqremove(s, tree, n);  /* n = node of least frequency */\n    /*** pqremove ***/\n    n = s.heap[1/*SMALLEST*/];\n    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n    /***/\n\n    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */\n\n    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n    s.heap[--s.heap_max] = m;\n\n    /* Create a new node father of n and m */\n    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;\n\n    /* and insert the new node in the heap */\n    s.heap[1/*SMALLEST*/] = node++;\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n\n  } while (s.heap_len >= 2);\n\n  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];\n\n  /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n  gen_bitlen(s, desc);\n\n  /* The field len is now set, we can generate the bit codes */\n  gen_codes(tree, max_code, s.bl_count);\n};\n\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nconst scan_tree = (s, tree, max_code) => {\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      s.bl_tree[curlen * 2]/*.Freq*/ += count;\n\n    } else if (curlen !== 0) {\n\n      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }\n      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;\n\n    } else if (count <= 10) {\n      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;\n\n    } else {\n      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;\n    }\n\n    count = 0;\n    prevlen = curlen;\n\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nconst send_tree = (s, tree, max_code) => {\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  /* tree[max_code+1].Len = -1; */  /* guard already set */\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);\n\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        send_code(s, curlen, s.bl_tree);\n        count--;\n      }\n      //Assert(count >= 3 && count <= 6, \" 3_6?\");\n      send_code(s, REP_3_6, s.bl_tree);\n      send_bits(s, count - 3, 2);\n\n    } else if (count <= 10) {\n      send_code(s, REPZ_3_10, s.bl_tree);\n      send_bits(s, count - 3, 3);\n\n    } else {\n      send_code(s, REPZ_11_138, s.bl_tree);\n      send_bits(s, count - 11, 7);\n    }\n\n    count = 0;\n    prevlen = curlen;\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nconst build_bl_tree = (s) => {\n\n  let max_blindex;  /* index of last bit length code of non zero freq */\n\n  /* Determine the bit length frequencies for literal and distance trees */\n  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n  /* Build the bit length tree: */\n  build_tree(s, s.bl_desc);\n  /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n  for (max_blindex = BL_CODES$1 - 1; max_blindex >= 3; max_blindex--) {\n    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {\n      break;\n    }\n  }\n  /* Update opt_len to include the bit length tree and counts */\n  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n  //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n  //        s->opt_len, s->static_len));\n\n  return max_blindex;\n};\n\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nconst send_all_trees = (s, lcodes, dcodes, blcodes) => {\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n\n  let rank;                    /* index in bl_order */\n\n  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n  //        \"too many codes\");\n  //Tracev((stderr, \"\\nbl counts: \"));\n  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */\n  send_bits(s, dcodes - 1,   5);\n  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */\n  for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);\n  }\n  //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */\n  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */\n  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n};\n\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"block list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"allow list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nconst detect_data_type = (s) => {\n  /* block_mask is the bit mask of block-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n  let block_mask = 0xf3ffc07f;\n  let n;\n\n  /* Check for non-textual (\"block-listed\") bytes. */\n  for (n = 0; n <= 31; n++, block_mask >>>= 1) {\n    if ((block_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {\n      return Z_BINARY;\n    }\n  }\n\n  /* Check for textual (\"allow-listed\") bytes. */\n  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||\n      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {\n    return Z_TEXT;\n  }\n  for (n = 32; n < LITERALS$1; n++) {\n    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n      return Z_TEXT;\n    }\n  }\n\n  /* There are no \"block-listed\" or \"allow-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n  return Z_BINARY;\n};\n\n\nlet static_init_done = false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nconst _tr_init$1 = (s) =>\n{\n\n  if (!static_init_done) {\n    tr_static_init();\n    static_init_done = true;\n  }\n\n  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);\n  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);\n  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n\n  /* Initialize the first block of the first file: */\n  init_block(s);\n};\n\n\n/* ===========================================================================\n * Send a stored block\n */\nconst _tr_stored_block$1 = (s, buf, stored_len, last) => {\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n\n  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */\n  bi_windup(s);        /* align on byte boundary */\n  put_short(s, stored_len);\n  put_short(s, ~stored_len);\n  if (stored_len) {\n    s.pending_buf.set(s.window.subarray(buf, buf + stored_len), s.pending);\n  }\n  s.pending += stored_len;\n};\n\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\nconst _tr_align$1 = (s) => {\n  send_bits(s, STATIC_TREES << 1, 3);\n  send_code(s, END_BLOCK, static_ltree);\n  bi_flush(s);\n};\n\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and write out the encoded block.\n */\nconst _tr_flush_block$1 = (s, buf, stored_len, last) => {\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n\n  let opt_lenb, static_lenb;  /* opt_len and static_len in bytes */\n  let max_blindex = 0;        /* index of last bit length code of non zero freq */\n\n  /* Build the Huffman trees unless a stored block is forced */\n  if (s.level > 0) {\n\n    /* Check if the file is binary or text */\n    if (s.strm.data_type === Z_UNKNOWN$1) {\n      s.strm.data_type = detect_data_type(s);\n    }\n\n    /* Construct the literal and distance trees */\n    build_tree(s, s.l_desc);\n    // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n\n    build_tree(s, s.d_desc);\n    // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = build_bl_tree(s);\n\n    /* Determine the best encoding. Compute the block lengths in bytes. */\n    opt_lenb = (s.opt_len + 3 + 7) >>> 3;\n    static_lenb = (s.static_len + 3 + 7) >>> 3;\n\n    // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n    //        s->sym_next / 3));\n\n    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }\n\n  } else {\n    // Assert(buf != (char*)0, \"lost buf\");\n    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n  }\n\n  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {\n    /* 4: two words for the lengths */\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n    _tr_stored_block$1(s, buf, stored_len, last);\n\n  } else if (s.strategy === Z_FIXED$1 || static_lenb === opt_lenb) {\n\n    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);\n    compress_block(s, static_ltree, static_dtree);\n\n  } else {\n    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);\n    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);\n    compress_block(s, s.dyn_ltree, s.dyn_dtree);\n  }\n  // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n  /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n  init_block(s);\n\n  if (last) {\n    bi_windup(s);\n  }\n  // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n  //       s->compressed_len-7*last));\n};\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nconst _tr_tally$1 = (s, dist, lc) => {\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n\n  s.pending_buf[s.sym_buf + s.sym_next++] = dist;\n  s.pending_buf[s.sym_buf + s.sym_next++] = dist >> 8;\n  s.pending_buf[s.sym_buf + s.sym_next++] = lc;\n  if (dist === 0) {\n    /* lc is the unmatched char */\n    s.dyn_ltree[lc * 2]/*.Freq*/++;\n  } else {\n    s.matches++;\n    /* Here, lc is the match length - MIN_MATCH */\n    dist--;             /* dist = match distance - 1 */\n    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n    s.dyn_ltree[(_length_code[lc] + LITERALS$1 + 1) * 2]/*.Freq*/++;\n    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n  }\n\n  return (s.sym_next === s.sym_end);\n};\n\nvar _tr_init_1  = _tr_init$1;\nvar _tr_stored_block_1 = _tr_stored_block$1;\nvar _tr_flush_block_1  = _tr_flush_block$1;\nvar _tr_tally_1 = _tr_tally$1;\nvar _tr_align_1 = _tr_align$1;\n\nvar trees = {\n\t_tr_init: _tr_init_1,\n\t_tr_stored_block: _tr_stored_block_1,\n\t_tr_flush_block: _tr_flush_block_1,\n\t_tr_tally: _tr_tally_1,\n\t_tr_align: _tr_align_1\n};\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst adler32 = (adler, buf, len, pos) => {\n  let s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n};\n\n\nvar adler32_1 = adler32;\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// Use ordinary array, since untyped makes no boost here\nconst makeTable = () => {\n  let c, table = [];\n\n  for (var n = 0; n < 256; n++) {\n    c = n;\n    for (var k = 0; k < 8; k++) {\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n};\n\n// Create table on load. Just 255 signed longs. Not a problem.\nconst crcTable = new Uint32Array(makeTable());\n\n\nconst crc32 = (crc, buf, len, pos) => {\n  const t = crcTable;\n  const end = pos + len;\n\n  crc ^= -1;\n\n  for (let i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n};\n\n\nvar crc32_1 = crc32;\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar messages = {\n  2:      'need dictionary',     /* Z_NEED_DICT       2  */\n  1:      'stream end',          /* Z_STREAM_END      1  */\n  0:      '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar constants$2 = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  Z_MEM_ERROR:       -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst { _tr_init, _tr_stored_block, _tr_flush_block, _tr_tally, _tr_align } = trees;\n\n\n\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH: Z_NO_FLUSH$2, Z_PARTIAL_FLUSH, Z_FULL_FLUSH: Z_FULL_FLUSH$1, Z_FINISH: Z_FINISH$3, Z_BLOCK: Z_BLOCK$1,\n  Z_OK: Z_OK$3, Z_STREAM_END: Z_STREAM_END$3, Z_STREAM_ERROR: Z_STREAM_ERROR$2, Z_DATA_ERROR: Z_DATA_ERROR$2, Z_BUF_ERROR: Z_BUF_ERROR$1,\n  Z_DEFAULT_COMPRESSION: Z_DEFAULT_COMPRESSION$1,\n  Z_FILTERED, Z_HUFFMAN_ONLY, Z_RLE, Z_FIXED, Z_DEFAULT_STRATEGY: Z_DEFAULT_STRATEGY$1,\n  Z_UNKNOWN,\n  Z_DEFLATED: Z_DEFLATED$2\n} = constants$2;\n\n/*============================================================================*/\n\n\nconst MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */\nconst MAX_WBITS$1 = 15;\n/* 32K LZ77 window */\nconst DEF_MEM_LEVEL = 8;\n\n\nconst LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\nconst LITERALS      = 256;\n/* number of literal bytes 0..255 */\nconst L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\nconst D_CODES       = 30;\n/* number of distance codes */\nconst BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\nconst HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\nconst MAX_BITS  = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst MIN_MATCH = 3;\nconst MAX_MATCH = 258;\nconst MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\nconst PRESET_DICT = 0x20;\n\nconst INIT_STATE    =  42;    /* zlib header -> BUSY_STATE */\n//#ifdef GZIP\nconst GZIP_STATE    =  57;    /* gzip header -> BUSY_STATE | EXTRA_STATE */\n//#endif\nconst EXTRA_STATE   =  69;    /* gzip extra block -> NAME_STATE */\nconst NAME_STATE    =  73;    /* gzip file name -> COMMENT_STATE */\nconst COMMENT_STATE =  91;    /* gzip comment -> HCRC_STATE */\nconst HCRC_STATE    = 103;    /* gzip header CRC -> BUSY_STATE */\nconst BUSY_STATE    = 113;    /* deflate -> FINISH_STATE */\nconst FINISH_STATE  = 666;    /* stream complete */\n\nconst BS_NEED_MORE      = 1; /* block not completed, need more input or more output */\nconst BS_BLOCK_DONE     = 2; /* block flush performed */\nconst BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */\nconst BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */\n\nconst OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\nconst err = (strm, errorCode) => {\n  strm.msg = messages[errorCode];\n  return errorCode;\n};\n\nconst rank = (f) => {\n  return ((f) * 2) - ((f) > 4 ? 9 : 0);\n};\n\nconst zero = (buf) => {\n  let len = buf.length; while (--len >= 0) { buf[len] = 0; }\n};\n\n/* ===========================================================================\n * Slide the hash table when sliding the window down (could be avoided with 32\n * bit values at the expense of memory usage). We slide even when level == 0 to\n * keep the hash table consistent if we switch back to level > 0 later.\n */\nconst slide_hash = (s) => {\n  let n, m;\n  let p;\n  let wsize = s.w_size;\n\n  n = s.hash_size;\n  p = n;\n  do {\n    m = s.head[--p];\n    s.head[p] = (m >= wsize ? m - wsize : 0);\n  } while (--n);\n  n = wsize;\n//#ifndef FASTEST\n  p = n;\n  do {\n    m = s.prev[--p];\n    s.prev[p] = (m >= wsize ? m - wsize : 0);\n    /* If n is not on any hash chain, prev[n] is garbage but\n     * its value will never be used.\n     */\n  } while (--n);\n//#endif\n};\n\n/* eslint-disable new-cap */\nlet HASH_ZLIB = (s, prev, data) => ((prev << s.hash_shift) ^ data) & s.hash_mask;\n// This hash causes less collisions, https://github.com/nodeca/pako/issues/135\n// But breaks binary compatibility\n//let HASH_FAST = (s, prev, data) => ((prev << 8) + (prev >> 8) + (data << 4)) & s.hash_mask;\nlet HASH = HASH_ZLIB;\n\n\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output, except for\n * some deflate_stored() output, goes through this function so some\n * applications may wish to modify it to avoid allocating a large\n * strm->next_out buffer and copying into it. (See also read_buf()).\n */\nconst flush_pending = (strm) => {\n  const s = strm.state;\n\n  //_tr_flush_bits(s);\n  let len = s.pending;\n  if (len > strm.avail_out) {\n    len = strm.avail_out;\n  }\n  if (len === 0) { return; }\n\n  strm.output.set(s.pending_buf.subarray(s.pending_out, s.pending_out + len), strm.next_out);\n  strm.next_out  += len;\n  s.pending_out  += len;\n  strm.total_out += len;\n  strm.avail_out -= len;\n  s.pending      -= len;\n  if (s.pending === 0) {\n    s.pending_out = 0;\n  }\n};\n\n\nconst flush_block_only = (s, last) => {\n  _tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);\n  s.block_start = s.strstart;\n  flush_pending(s.strm);\n};\n\n\nconst put_byte = (s, b) => {\n  s.pending_buf[s.pending++] = b;\n};\n\n\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\nconst putShortMSB = (s, b) => {\n\n  //  put_byte(s, (Byte)(b >> 8));\n//  put_byte(s, (Byte)(b & 0xff));\n  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n  s.pending_buf[s.pending++] = b & 0xff;\n};\n\n\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\nconst read_buf = (strm, buf, start, size) => {\n\n  let len = strm.avail_in;\n\n  if (len > size) { len = size; }\n  if (len === 0) { return 0; }\n\n  strm.avail_in -= len;\n\n  // zmemcpy(buf, strm->next_in, len);\n  buf.set(strm.input.subarray(strm.next_in, strm.next_in + len), start);\n  if (strm.state.wrap === 1) {\n    strm.adler = adler32_1(strm.adler, buf, len, start);\n  }\n\n  else if (strm.state.wrap === 2) {\n    strm.adler = crc32_1(strm.adler, buf, len, start);\n  }\n\n  strm.next_in += len;\n  strm.total_in += len;\n\n  return len;\n};\n\n\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\nconst longest_match = (s, cur_match) => {\n\n  let chain_length = s.max_chain_length;      /* max hash chain length */\n  let scan = s.strstart; /* current string */\n  let match;                       /* matched string */\n  let len;                           /* length of current match */\n  let best_len = s.prev_length;              /* best match length so far */\n  let nice_match = s.nice_match;             /* stop if match long enough */\n  const limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?\n      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;\n\n  const _win = s.window; // shortcut\n\n  const wmask = s.w_mask;\n  const prev  = s.prev;\n\n  /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\n  const strend = s.strstart + MAX_MATCH;\n  let scan_end1  = _win[scan + best_len - 1];\n  let scan_end   = _win[scan + best_len];\n\n  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n  /* Do not waste too much time if we already have a good match: */\n  if (s.prev_length >= s.good_match) {\n    chain_length >>= 2;\n  }\n  /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n  if (nice_match > s.lookahead) { nice_match = s.lookahead; }\n\n  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n  do {\n    // Assert(cur_match < s->strstart, \"no future\");\n    match = cur_match;\n\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n    if (_win[match + best_len]     !== scan_end  ||\n        _win[match + best_len - 1] !== scan_end1 ||\n        _win[match]                !== _win[scan] ||\n        _win[++match]              !== _win[scan + 1]) {\n      continue;\n    }\n\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n    scan += 2;\n    match++;\n    // Assert(*scan == *match, \"match[2]?\");\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n    do {\n      /*jshint noempty:false*/\n    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             scan < strend);\n\n    // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n    len = MAX_MATCH - (strend - scan);\n    scan = strend - MAX_MATCH;\n\n    if (len > best_len) {\n      s.match_start = cur_match;\n      best_len = len;\n      if (len >= nice_match) {\n        break;\n      }\n      scan_end1  = _win[scan + best_len - 1];\n      scan_end   = _win[scan + best_len];\n    }\n  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n  if (best_len <= s.lookahead) {\n    return best_len;\n  }\n  return s.lookahead;\n};\n\n\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\nconst fill_window = (s) => {\n\n  const _w_size = s.w_size;\n  let n, more, str;\n\n  //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n  do {\n    more = s.window_size - s.lookahead - s.strstart;\n\n    // JS ints have 32 bit, block below not needed\n    /* Deal with !@#$% 64K limit: */\n    //if (sizeof(int) <= 2) {\n    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n    //        more = wsize;\n    //\n    //  } else if (more == (unsigned)(-1)) {\n    //        /* Very unlikely, but possible on 16 bit machine if\n    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n    //         */\n    //        more--;\n    //    }\n    //}\n\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n\n      s.window.set(s.window.subarray(_w_size, _w_size + _w_size - more), 0);\n      s.match_start -= _w_size;\n      s.strstart -= _w_size;\n      /* we now have strstart >= MAX_DIST */\n      s.block_start -= _w_size;\n      if (s.insert > s.strstart) {\n        s.insert = s.strstart;\n      }\n      slide_hash(s);\n      more += _w_size;\n    }\n    if (s.strm.avail_in === 0) {\n      break;\n    }\n\n    /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n    //Assert(more >= 2, \"more < 2\");\n    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n    s.lookahead += n;\n\n    /* Initialize the hash value now that we have some input: */\n    if (s.lookahead + s.insert >= MIN_MATCH) {\n      str = s.strstart - s.insert;\n      s.ins_h = s.window[str];\n\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + 1]);\n//#if MIN_MATCH != 3\n//        Call update_hash() MIN_MATCH-3 more times\n//#endif\n      while (s.insert) {\n        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);\n\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n        s.insert--;\n        if (s.lookahead + s.insert < MIN_MATCH) {\n          break;\n        }\n      }\n    }\n    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n  /* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n//  if (s.high_water < s.window_size) {\n//    const curr = s.strstart + s.lookahead;\n//    let init = 0;\n//\n//    if (s.high_water < curr) {\n//      /* Previous high water mark below current data -- zero WIN_INIT\n//       * bytes or up to end of window, whichever is less.\n//       */\n//      init = s.window_size - curr;\n//      if (init > WIN_INIT)\n//        init = WIN_INIT;\n//      zmemzero(s->window + curr, (unsigned)init);\n//      s->high_water = curr + init;\n//    }\n//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n//      /* High water mark at or above current data, but below current data\n//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n//       * to end of window, whichever is less.\n//       */\n//      init = (ulg)curr + WIN_INIT - s->high_water;\n//      if (init > s->window_size - s->high_water)\n//        init = s->window_size - s->high_water;\n//      zmemzero(s->window + s->high_water, (unsigned)init);\n//      s->high_water += init;\n//    }\n//  }\n//\n//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n//    \"not enough room for search\");\n};\n\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n *\n * In case deflateParams() is used to later switch to a non-zero compression\n * level, s->matches (otherwise unused when storing) keeps track of the number\n * of hash table slides to perform. If s->matches is 1, then one hash table\n * slide will be done when switching. If s->matches is 2, the maximum value\n * allowed here, then the hash table will be cleared, since two or more slides\n * is the same as a clear.\n *\n * deflate_stored() is written to minimize the number of times an input byte is\n * copied. It is most efficient with large input and output buffers, which\n * maximizes the opportunites to have a single copy from next_in to next_out.\n */\nconst deflate_stored = (s, flush) => {\n\n  /* Smallest worthy block size when not flushing or finishing. By default\n   * this is 32K. This can be as small as 507 bytes for memLevel == 1. For\n   * large input and output buffers, the stored block size will be larger.\n   */\n  let min_block = s.pending_buf_size - 5 > s.w_size ? s.w_size : s.pending_buf_size - 5;\n\n  /* Copy as many min_block or larger stored blocks directly to next_out as\n   * possible. If flushing, copy the remaining available input to next_out as\n   * stored blocks, if there is enough space.\n   */\n  let len, left, have, last = 0;\n  let used = s.strm.avail_in;\n  do {\n    /* Set len to the maximum size block that we can copy directly with the\n     * available input data and output space. Set left to how much of that\n     * would be copied from what's left in the window.\n     */\n    len = 65535/* MAX_STORED */;     /* maximum deflate stored block length */\n    have = (s.bi_valid + 42) >> 3;     /* number of header bytes */\n    if (s.strm.avail_out < have) {         /* need room for header */\n      break;\n    }\n      /* maximum stored block length that will fit in avail_out: */\n    have = s.strm.avail_out - have;\n    left = s.strstart - s.block_start;  /* bytes left in window */\n    if (len > left + s.strm.avail_in) {\n      len = left + s.strm.avail_in;   /* limit len to the input */\n    }\n    if (len > have) {\n      len = have;             /* limit len to the output */\n    }\n\n    /* If the stored block would be less than min_block in length, or if\n     * unable to copy all of the available input when flushing, then try\n     * copying to the window and the pending buffer instead. Also don't\n     * write an empty block when flushing -- deflate() does that.\n     */\n    if (len < min_block && ((len === 0 && flush !== Z_FINISH$3) ||\n                        flush === Z_NO_FLUSH$2 ||\n                        len !== left + s.strm.avail_in)) {\n      break;\n    }\n\n    /* Make a dummy stored block in pending to get the header bytes,\n     * including any pending bits. This also updates the debugging counts.\n     */\n    last = flush === Z_FINISH$3 && len === left + s.strm.avail_in ? 1 : 0;\n    _tr_stored_block(s, 0, 0, last);\n\n    /* Replace the lengths in the dummy stored block with len. */\n    s.pending_buf[s.pending - 4] = len;\n    s.pending_buf[s.pending - 3] = len >> 8;\n    s.pending_buf[s.pending - 2] = ~len;\n    s.pending_buf[s.pending - 1] = ~len >> 8;\n\n    /* Write the stored block header bytes. */\n    flush_pending(s.strm);\n\n//#ifdef ZLIB_DEBUG\n//    /* Update debugging counts for the data about to be copied. */\n//    s->compressed_len += len << 3;\n//    s->bits_sent += len << 3;\n//#endif\n\n    /* Copy uncompressed bytes from the window to next_out. */\n    if (left) {\n      if (left > len) {\n        left = len;\n      }\n      //zmemcpy(s->strm->next_out, s->window + s->block_start, left);\n      s.strm.output.set(s.window.subarray(s.block_start, s.block_start + left), s.strm.next_out);\n      s.strm.next_out += left;\n      s.strm.avail_out -= left;\n      s.strm.total_out += left;\n      s.block_start += left;\n      len -= left;\n    }\n\n    /* Copy uncompressed bytes directly from next_in to next_out, updating\n     * the check value.\n     */\n    if (len) {\n      read_buf(s.strm, s.strm.output, s.strm.next_out, len);\n      s.strm.next_out += len;\n      s.strm.avail_out -= len;\n      s.strm.total_out += len;\n    }\n  } while (last === 0);\n\n  /* Update the sliding window with the last s->w_size bytes of the copied\n   * data, or append all of the copied data to the existing window if less\n   * than s->w_size bytes were copied. Also update the number of bytes to\n   * insert in the hash tables, in the event that deflateParams() switches to\n   * a non-zero compression level.\n   */\n  used -= s.strm.avail_in;    /* number of input bytes directly copied */\n  if (used) {\n    /* If any input was used, then no unused input remains in the window,\n     * therefore s->block_start == s->strstart.\n     */\n    if (used >= s.w_size) {  /* supplant the previous history */\n      s.matches = 2;     /* clear hash */\n      //zmemcpy(s->window, s->strm->next_in - s->w_size, s->w_size);\n      s.window.set(s.strm.input.subarray(s.strm.next_in - s.w_size, s.strm.next_in), 0);\n      s.strstart = s.w_size;\n      s.insert = s.strstart;\n    }\n    else {\n      if (s.window_size - s.strstart <= used) {\n        /* Slide the window down. */\n        s.strstart -= s.w_size;\n        //zmemcpy(s->window, s->window + s->w_size, s->strstart);\n        s.window.set(s.window.subarray(s.w_size, s.w_size + s.strstart), 0);\n        if (s.matches < 2) {\n          s.matches++;   /* add a pending slide_hash() */\n        }\n        if (s.insert > s.strstart) {\n          s.insert = s.strstart;\n        }\n      }\n      //zmemcpy(s->window + s->strstart, s->strm->next_in - used, used);\n      s.window.set(s.strm.input.subarray(s.strm.next_in - used, s.strm.next_in), s.strstart);\n      s.strstart += used;\n      s.insert += used > s.w_size - s.insert ? s.w_size - s.insert : used;\n    }\n    s.block_start = s.strstart;\n  }\n  if (s.high_water < s.strstart) {\n    s.high_water = s.strstart;\n  }\n\n  /* If the last block was written to next_out, then done. */\n  if (last) {\n    return BS_FINISH_DONE;\n  }\n\n  /* If flushing and all input has been consumed, then done. */\n  if (flush !== Z_NO_FLUSH$2 && flush !== Z_FINISH$3 &&\n    s.strm.avail_in === 0 && s.strstart === s.block_start) {\n    return BS_BLOCK_DONE;\n  }\n\n  /* Fill the window with any remaining input. */\n  have = s.window_size - s.strstart;\n  if (s.strm.avail_in > have && s.block_start >= s.w_size) {\n    /* Slide the window down. */\n    s.block_start -= s.w_size;\n    s.strstart -= s.w_size;\n    //zmemcpy(s->window, s->window + s->w_size, s->strstart);\n    s.window.set(s.window.subarray(s.w_size, s.w_size + s.strstart), 0);\n    if (s.matches < 2) {\n      s.matches++;       /* add a pending slide_hash() */\n    }\n    have += s.w_size;      /* more space now */\n    if (s.insert > s.strstart) {\n      s.insert = s.strstart;\n    }\n  }\n  if (have > s.strm.avail_in) {\n    have = s.strm.avail_in;\n  }\n  if (have) {\n    read_buf(s.strm, s.window, s.strstart, have);\n    s.strstart += have;\n    s.insert += have > s.w_size - s.insert ? s.w_size - s.insert : have;\n  }\n  if (s.high_water < s.strstart) {\n    s.high_water = s.strstart;\n  }\n\n  /* There was not enough avail_out to write a complete worthy or flushed\n   * stored block to next_out. Write a stored block to pending instead, if we\n   * have enough input for a worthy block, or if flushing and there is enough\n   * room for the remaining input as a stored block in the pending buffer.\n   */\n  have = (s.bi_valid + 42) >> 3;     /* number of header bytes */\n    /* maximum stored block length that will fit in pending: */\n  have = s.pending_buf_size - have > 65535/* MAX_STORED */ ? 65535/* MAX_STORED */ : s.pending_buf_size - have;\n  min_block = have > s.w_size ? s.w_size : have;\n  left = s.strstart - s.block_start;\n  if (left >= min_block ||\n     ((left || flush === Z_FINISH$3) && flush !== Z_NO_FLUSH$2 &&\n     s.strm.avail_in === 0 && left <= have)) {\n    len = left > have ? have : left;\n    last = flush === Z_FINISH$3 && s.strm.avail_in === 0 &&\n         len === left ? 1 : 0;\n    _tr_stored_block(s, s.block_start, len, last);\n    s.block_start += len;\n    flush_pending(s.strm);\n  }\n\n  /* We've done all we can with the available input and output. */\n  return last ? BS_FINISH_STARTED : BS_NEED_MORE;\n};\n\n\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nconst deflate_fast = (s, flush) => {\n\n  let hash_head;        /* head of the hash chain */\n  let bflush;           /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break; /* flush the current block */\n      }\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n    }\n    if (s.match_length >= MIN_MATCH) {\n      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n      /*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {\n        s.match_length--; /* string at strstart already in table */\n        do {\n          s.strstart++;\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n        } while (--s.match_length !== 0);\n        s.strstart++;\n      } else\n      {\n        s.strstart += s.match_length;\n        s.match_length = 0;\n        s.ins_h = s.window[s.strstart];\n        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + 1]);\n\n//#if MIN_MATCH != 3\n//                Call UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n      }\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nconst deflate_slow = (s, flush) => {\n\n  let hash_head;          /* head of hash chain */\n  let bflush;              /* set if current block must be flushed */\n\n  let max_insert;\n\n  /* Process the input block. */\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     */\n    s.prev_length = s.match_length;\n    s.prev_match = s.match_start;\n    s.match_length = MIN_MATCH - 1;\n\n    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&\n        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n\n      if (s.match_length <= 5 &&\n         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {\n\n        /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n        s.match_length = MIN_MATCH - 1;\n      }\n    }\n    /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n      max_insert = s.strstart + s.lookahead - MIN_MATCH;\n      /* Do not insert strings in hash table beyond this. */\n\n      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/\n      bflush = _tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\n      s.lookahead -= s.prev_length - 1;\n      s.prev_length -= 2;\n      do {\n        if (++s.strstart <= max_insert) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n      } while (--s.prev_length !== 0);\n      s.match_available = 0;\n      s.match_length = MIN_MATCH - 1;\n      s.strstart++;\n\n      if (bflush) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n\n    } else if (s.match_available) {\n      /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n      if (bflush) {\n        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n        flush_block_only(s, false);\n        /***/\n      }\n      s.strstart++;\n      s.lookahead--;\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    } else {\n      /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n      s.match_available = 1;\n      s.strstart++;\n      s.lookahead--;\n    }\n  }\n  //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n  if (s.match_available) {\n    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n    s.match_available = 0;\n  }\n  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_BLOCK_DONE;\n};\n\n\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\nconst deflate_rle = (s, flush) => {\n\n  let bflush;            /* set if current block must be flushed */\n  let prev;              /* byte at distance one to match */\n  let scan, strend;      /* scan goes up to strend for length of run */\n\n  const _win = s.window;\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\n    if (s.lookahead <= MAX_MATCH) {\n      fill_window(s);\n      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* See how many times the previous byte repeats */\n    s.match_length = 0;\n    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n      scan = s.strstart - 1;\n      prev = _win[scan];\n      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n        strend = s.strstart + MAX_MATCH;\n        do {\n          /*jshint noempty:false*/\n        } while (prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 scan < strend);\n        s.match_length = MAX_MATCH - (strend - scan);\n        if (s.match_length > s.lookahead) {\n          s.match_length = s.lookahead;\n        }\n      }\n      //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n    }\n\n    /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n    if (s.match_length >= MIN_MATCH) {\n      //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, 1, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n      s.strstart += s.match_length;\n      s.match_length = 0;\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\nconst deflate_huff = (s, flush) => {\n\n  let bflush;             /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we have a literal to write. */\n    if (s.lookahead === 0) {\n      fill_window(s);\n      if (s.lookahead === 0) {\n        if (flush === Z_NO_FLUSH$2) {\n          return BS_NEED_MORE;\n        }\n        break;      /* flush the current block */\n      }\n    }\n\n    /* Output a literal byte */\n    s.match_length = 0;\n    //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart]);\n    s.lookahead--;\n    s.strstart++;\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nfunction Config(good_length, max_lazy, nice_length, max_chain, func) {\n\n  this.good_length = good_length;\n  this.max_lazy = max_lazy;\n  this.nice_length = nice_length;\n  this.max_chain = max_chain;\n  this.func = func;\n}\n\nconst configuration_table = [\n  /*      good lazy nice chain */\n  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */\n  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */\n  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */\n  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */\n\n  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */\n  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */\n  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */\n  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */\n  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */\n  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */\n];\n\n\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\nconst lm_init = (s) => {\n\n  s.window_size = 2 * s.w_size;\n\n  /*** CLEAR_HASH(s); ***/\n  zero(s.head); // Fill with NIL (= 0);\n\n  /* Set the default configuration parameters:\n   */\n  s.max_lazy_match = configuration_table[s.level].max_lazy;\n  s.good_match = configuration_table[s.level].good_length;\n  s.nice_match = configuration_table[s.level].nice_length;\n  s.max_chain_length = configuration_table[s.level].max_chain;\n\n  s.strstart = 0;\n  s.block_start = 0;\n  s.lookahead = 0;\n  s.insert = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  s.ins_h = 0;\n};\n\n\nfunction DeflateState() {\n  this.strm = null;            /* pointer back to this zlib stream */\n  this.status = 0;            /* as the name implies */\n  this.pending_buf = null;      /* output still pending */\n  this.pending_buf_size = 0;  /* size of pending_buf */\n  this.pending_out = 0;       /* next pending byte to output to the stream */\n  this.pending = 0;           /* nb of bytes in the pending buffer */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.gzhead = null;         /* gzip header information to write */\n  this.gzindex = 0;           /* where in extra, name, or comment */\n  this.method = Z_DEFLATED$2; /* can only be DEFLATED */\n  this.last_flush = -1;   /* value of flush param for previous deflate call */\n\n  this.w_size = 0;  /* LZ77 window size (32K by default) */\n  this.w_bits = 0;  /* log2(w_size)  (8..16) */\n  this.w_mask = 0;  /* w_size - 1 */\n\n  this.window = null;\n  /* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\n  this.window_size = 0;\n  /* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */\n\n  this.prev = null;\n  /* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\n  this.head = null;   /* Heads of the hash chains or NIL. */\n\n  this.ins_h = 0;       /* hash index of string to be inserted */\n  this.hash_size = 0;   /* number of elements in hash table */\n  this.hash_bits = 0;   /* log2(hash_size) */\n  this.hash_mask = 0;   /* hash_size-1 */\n\n  this.hash_shift = 0;\n  /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\n  this.block_start = 0;\n  /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\n  this.match_length = 0;      /* length of best match */\n  this.prev_match = 0;        /* previous match */\n  this.match_available = 0;   /* set if previous match exists */\n  this.strstart = 0;          /* start of string to insert */\n  this.match_start = 0;       /* start of matching string */\n  this.lookahead = 0;         /* number of valid bytes ahead in window */\n\n  this.prev_length = 0;\n  /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\n  this.max_chain_length = 0;\n  /* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\n  this.max_lazy_match = 0;\n  /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n  // That's alias to max_lazy_match, don't use directly\n  //this.max_insert_length = 0;\n  /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\n  this.level = 0;     /* compression level (1..9) */\n  this.strategy = 0;  /* favor or force Huffman coding*/\n\n  this.good_match = 0;\n  /* Use a faster search when the previous match is longer than this */\n\n  this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n              /* used by trees.c: */\n\n  /* Didn't use ct_data typedef below to suppress compiler warning */\n\n  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n  // Use flat array of DOUBLE size, with interleaved fata,\n  // because JS does not support effective\n  this.dyn_ltree  = new Uint16Array(HEAP_SIZE * 2);\n  this.dyn_dtree  = new Uint16Array((2 * D_CODES + 1) * 2);\n  this.bl_tree    = new Uint16Array((2 * BL_CODES + 1) * 2);\n  zero(this.dyn_ltree);\n  zero(this.dyn_dtree);\n  zero(this.bl_tree);\n\n  this.l_desc   = null;         /* desc. for literal tree */\n  this.d_desc   = null;         /* desc. for distance tree */\n  this.bl_desc  = null;         /* desc. for bit length tree */\n\n  //ush bl_count[MAX_BITS+1];\n  this.bl_count = new Uint16Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n  this.heap = new Uint16Array(2 * L_CODES + 1);  /* heap used to build the Huffman trees */\n  zero(this.heap);\n\n  this.heap_len = 0;               /* number of elements in the heap */\n  this.heap_max = 0;               /* element of largest frequency */\n  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */\n\n  this.depth = new Uint16Array(2 * L_CODES + 1); //uch depth[2*L_CODES+1];\n  zero(this.depth);\n  /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\n  this.sym_buf = 0;        /* buffer for distances and literals/lengths */\n\n  this.lit_bufsize = 0;\n  /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\n  this.sym_next = 0;      /* running index in sym_buf */\n  this.sym_end = 0;       /* symbol table full when sym_next reaches this */\n\n  this.opt_len = 0;       /* bit length of current block with optimal trees */\n  this.static_len = 0;    /* bit length of current block with static trees */\n  this.matches = 0;       /* number of string matches in current block */\n  this.insert = 0;        /* bytes at end of window left to insert */\n\n\n  this.bi_buf = 0;\n  /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\n  this.bi_valid = 0;\n  /* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n\n  // Used for window memory init. We safely ignore it for JS. That makes\n  // sense only for pointers and memory check tools.\n  //this.high_water = 0;\n  /* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n}\n\n\n/* =========================================================================\n * Check for a valid deflate stream state. Return 0 if ok, 1 if not.\n */\nconst deflateStateCheck = (strm) => {\n\n  if (!strm) {\n    return 1;\n  }\n  const s = strm.state;\n  if (!s || s.strm !== strm || (s.status !== INIT_STATE &&\n//#ifdef GZIP\n                                s.status !== GZIP_STATE &&\n//#endif\n                                s.status !== EXTRA_STATE &&\n                                s.status !== NAME_STATE &&\n                                s.status !== COMMENT_STATE &&\n                                s.status !== HCRC_STATE &&\n                                s.status !== BUSY_STATE &&\n                                s.status !== FINISH_STATE)) {\n    return 1;\n  }\n  return 0;\n};\n\n\nconst deflateResetKeep = (strm) => {\n\n  if (deflateStateCheck(strm)) {\n    return err(strm, Z_STREAM_ERROR$2);\n  }\n\n  strm.total_in = strm.total_out = 0;\n  strm.data_type = Z_UNKNOWN;\n\n  const s = strm.state;\n  s.pending = 0;\n  s.pending_out = 0;\n\n  if (s.wrap < 0) {\n    s.wrap = -s.wrap;\n    /* was made negative by deflate(..., Z_FINISH); */\n  }\n  s.status =\n//#ifdef GZIP\n    s.wrap === 2 ? GZIP_STATE :\n//#endif\n    s.wrap ? INIT_STATE : BUSY_STATE;\n  strm.adler = (s.wrap === 2) ?\n    0  // crc32(0, Z_NULL, 0)\n  :\n    1; // adler32(0, Z_NULL, 0)\n  s.last_flush = -2;\n  _tr_init(s);\n  return Z_OK$3;\n};\n\n\nconst deflateReset = (strm) => {\n\n  const ret = deflateResetKeep(strm);\n  if (ret === Z_OK$3) {\n    lm_init(strm.state);\n  }\n  return ret;\n};\n\n\nconst deflateSetHeader = (strm, head) => {\n\n  if (deflateStateCheck(strm) || strm.state.wrap !== 2) {\n    return Z_STREAM_ERROR$2;\n  }\n  strm.state.gzhead = head;\n  return Z_OK$3;\n};\n\n\nconst deflateInit2 = (strm, level, method, windowBits, memLevel, strategy) => {\n\n  if (!strm) { // === Z_NULL\n    return Z_STREAM_ERROR$2;\n  }\n  let wrap = 1;\n\n  if (level === Z_DEFAULT_COMPRESSION$1) {\n    level = 6;\n  }\n\n  if (windowBits < 0) { /* suppress zlib wrapper */\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n\n  else if (windowBits > 15) {\n    wrap = 2;           /* write gzip wrapper instead */\n    windowBits -= 16;\n  }\n\n\n  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED$2 ||\n    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n    strategy < 0 || strategy > Z_FIXED || (windowBits === 8 && wrap !== 1)) {\n    return err(strm, Z_STREAM_ERROR$2);\n  }\n\n\n  if (windowBits === 8) {\n    windowBits = 9;\n  }\n  /* until 256-byte window bug fixed */\n\n  const s = new DeflateState();\n\n  strm.state = s;\n  s.strm = strm;\n  s.status = INIT_STATE;     /* to pass state test in deflateReset() */\n\n  s.wrap = wrap;\n  s.gzhead = null;\n  s.w_bits = windowBits;\n  s.w_size = 1 << s.w_bits;\n  s.w_mask = s.w_size - 1;\n\n  s.hash_bits = memLevel + 7;\n  s.hash_size = 1 << s.hash_bits;\n  s.hash_mask = s.hash_size - 1;\n  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n  s.window = new Uint8Array(s.w_size * 2);\n  s.head = new Uint16Array(s.hash_size);\n  s.prev = new Uint16Array(s.w_size);\n\n  // Don't need mem init magic for JS.\n  //s.high_water = 0;  /* nothing written to s->window yet */\n\n  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n\n  /* We overlay pending_buf and sym_buf. This works since the average size\n   * for length/distance pairs over any compressed block is assured to be 31\n   * bits or less.\n   *\n   * Analysis: The longest fixed codes are a length code of 8 bits plus 5\n   * extra bits, for lengths 131 to 257. The longest fixed distance codes are\n   * 5 bits plus 13 extra bits, for distances 16385 to 32768. The longest\n   * possible fixed-codes length/distance pair is then 31 bits total.\n   *\n   * sym_buf starts one-fourth of the way into pending_buf. So there are\n   * three bytes in sym_buf for every four bytes in pending_buf. Each symbol\n   * in sym_buf is three bytes -- two for the distance and one for the\n   * literal/length. As each symbol is consumed, the pointer to the next\n   * sym_buf value to read moves forward three bytes. From that symbol, up to\n   * 31 bits are written to pending_buf. The closest the written pending_buf\n   * bits gets to the next sym_buf symbol to read is just before the last\n   * code is written. At that time, 31*(n-2) bits have been written, just\n   * after 24*(n-2) bits have been consumed from sym_buf. sym_buf starts at\n   * 8*n bits into pending_buf. (Note that the symbol buffer fills when n-1\n   * symbols are written.) The closest the writing gets to what is unread is\n   * then n+14 bits. Here n is lit_bufsize, which is 16384 by default, and\n   * can range from 128 to 32768.\n   *\n   * Therefore, at a minimum, there are 142 bits of space between what is\n   * written and what is read in the overlain buffers, so the symbols cannot\n   * be overwritten by the compressed data. That space is actually 139 bits,\n   * due to the three-bit fixed-code block header.\n   *\n   * That covers the case where either Z_FIXED is specified, forcing fixed\n   * codes, or when the use of fixed codes is chosen, because that choice\n   * results in a smaller compressed block than dynamic codes. That latter\n   * condition then assures that the above analysis also covers all dynamic\n   * blocks. A dynamic-code block will only be chosen to be emitted if it has\n   * fewer bits than a fixed-code block would for the same set of symbols.\n   * Therefore its average symbol length is assured to be less than 31. So\n   * the compressed data for a dynamic block also cannot overwrite the\n   * symbols from which it is being constructed.\n   */\n\n  s.pending_buf_size = s.lit_bufsize * 4;\n  s.pending_buf = new Uint8Array(s.pending_buf_size);\n\n  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)\n  //s->sym_buf = s->pending_buf + s->lit_bufsize;\n  s.sym_buf = s.lit_bufsize;\n\n  //s->sym_end = (s->lit_bufsize - 1) * 3;\n  s.sym_end = (s.lit_bufsize - 1) * 3;\n  /* We avoid equality with lit_bufsize*3 because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n\n  s.level = level;\n  s.strategy = strategy;\n  s.method = method;\n\n  return deflateReset(strm);\n};\n\nconst deflateInit = (strm, level) => {\n\n  return deflateInit2(strm, level, Z_DEFLATED$2, MAX_WBITS$1, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY$1);\n};\n\n\n/* ========================================================================= */\nconst deflate$2 = (strm, flush) => {\n\n  if (deflateStateCheck(strm) || flush > Z_BLOCK$1 || flush < 0) {\n    return strm ? err(strm, Z_STREAM_ERROR$2) : Z_STREAM_ERROR$2;\n  }\n\n  const s = strm.state;\n\n  if (!strm.output ||\n      (strm.avail_in !== 0 && !strm.input) ||\n      (s.status === FINISH_STATE && flush !== Z_FINISH$3)) {\n    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR$1 : Z_STREAM_ERROR$2);\n  }\n\n  const old_flush = s.last_flush;\n  s.last_flush = flush;\n\n  /* Flush as much pending output as possible */\n  if (s.pending !== 0) {\n    flush_pending(strm);\n    if (strm.avail_out === 0) {\n      /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&\n    flush !== Z_FINISH$3) {\n    return err(strm, Z_BUF_ERROR$1);\n  }\n\n  /* User must not provide more input after the first FINISH: */\n  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n    return err(strm, Z_BUF_ERROR$1);\n  }\n\n  /* Write the header */\n  if (s.status === INIT_STATE && s.wrap === 0) {\n    s.status = BUSY_STATE;\n  }\n  if (s.status === INIT_STATE) {\n    /* zlib header */\n    let header = (Z_DEFLATED$2 + ((s.w_bits - 8) << 4)) << 8;\n    let level_flags = -1;\n\n    if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n      level_flags = 0;\n    } else if (s.level < 6) {\n      level_flags = 1;\n    } else if (s.level === 6) {\n      level_flags = 2;\n    } else {\n      level_flags = 3;\n    }\n    header |= (level_flags << 6);\n    if (s.strstart !== 0) { header |= PRESET_DICT; }\n    header += 31 - (header % 31);\n\n    putShortMSB(s, header);\n\n    /* Save the adler32 of the preset dictionary: */\n    if (s.strstart !== 0) {\n      putShortMSB(s, strm.adler >>> 16);\n      putShortMSB(s, strm.adler & 0xffff);\n    }\n    strm.adler = 1; // adler32(0L, Z_NULL, 0);\n    s.status = BUSY_STATE;\n\n    /* Compression must start with an empty pending buffer */\n    flush_pending(strm);\n    if (s.pending !== 0) {\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n  }\n//#ifdef GZIP\n  if (s.status === GZIP_STATE) {\n    /* gzip header */\n    strm.adler = 0;  //crc32(0L, Z_NULL, 0);\n    put_byte(s, 31);\n    put_byte(s, 139);\n    put_byte(s, 8);\n    if (!s.gzhead) { // s->gzhead == Z_NULL\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, s.level === 9 ? 2 :\n                  (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                   4 : 0));\n      put_byte(s, OS_CODE);\n      s.status = BUSY_STATE;\n\n      /* Compression must start with an empty pending buffer */\n      flush_pending(strm);\n      if (s.pending !== 0) {\n        s.last_flush = -1;\n        return Z_OK$3;\n      }\n    }\n    else {\n      put_byte(s, (s.gzhead.text ? 1 : 0) +\n                  (s.gzhead.hcrc ? 2 : 0) +\n                  (!s.gzhead.extra ? 0 : 4) +\n                  (!s.gzhead.name ? 0 : 8) +\n                  (!s.gzhead.comment ? 0 : 16)\n      );\n      put_byte(s, s.gzhead.time & 0xff);\n      put_byte(s, (s.gzhead.time >> 8) & 0xff);\n      put_byte(s, (s.gzhead.time >> 16) & 0xff);\n      put_byte(s, (s.gzhead.time >> 24) & 0xff);\n      put_byte(s, s.level === 9 ? 2 :\n                  (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                   4 : 0));\n      put_byte(s, s.gzhead.os & 0xff);\n      if (s.gzhead.extra && s.gzhead.extra.length) {\n        put_byte(s, s.gzhead.extra.length & 0xff);\n        put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);\n      }\n      if (s.gzhead.hcrc) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending, 0);\n      }\n      s.gzindex = 0;\n      s.status = EXTRA_STATE;\n    }\n  }\n  if (s.status === EXTRA_STATE) {\n    if (s.gzhead.extra/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let left = (s.gzhead.extra.length & 0xffff) - s.gzindex;\n      while (s.pending + left > s.pending_buf_size) {\n        let copy = s.pending_buf_size - s.pending;\n        // zmemcpy(s.pending_buf + s.pending,\n        //    s.gzhead.extra + s.gzindex, copy);\n        s.pending_buf.set(s.gzhead.extra.subarray(s.gzindex, s.gzindex + copy), s.pending);\n        s.pending = s.pending_buf_size;\n        //--- HCRC_UPDATE(beg) ---//\n        if (s.gzhead.hcrc && s.pending > beg) {\n          strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n        }\n        //---//\n        s.gzindex += copy;\n        flush_pending(strm);\n        if (s.pending !== 0) {\n          s.last_flush = -1;\n          return Z_OK$3;\n        }\n        beg = 0;\n        left -= copy;\n      }\n      // JS specific: s.gzhead.extra may be TypedArray or Array for backward compatibility\n      //              TypedArray.slice and TypedArray.from don't exist in IE10-IE11\n      let gzhead_extra = new Uint8Array(s.gzhead.extra);\n      // zmemcpy(s->pending_buf + s->pending,\n      //     s->gzhead->extra + s->gzindex, left);\n      s.pending_buf.set(gzhead_extra.subarray(s.gzindex, s.gzindex + left), s.pending);\n      s.pending += left;\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n      s.gzindex = 0;\n    }\n    s.status = NAME_STATE;\n  }\n  if (s.status === NAME_STATE) {\n    if (s.gzhead.name/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let val;\n      do {\n        if (s.pending === s.pending_buf_size) {\n          //--- HCRC_UPDATE(beg) ---//\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          //---//\n          flush_pending(strm);\n          if (s.pending !== 0) {\n            s.last_flush = -1;\n            return Z_OK$3;\n          }\n          beg = 0;\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.name.length) {\n          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n      s.gzindex = 0;\n    }\n    s.status = COMMENT_STATE;\n  }\n  if (s.status === COMMENT_STATE) {\n    if (s.gzhead.comment/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let val;\n      do {\n        if (s.pending === s.pending_buf_size) {\n          //--- HCRC_UPDATE(beg) ---//\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          //---//\n          flush_pending(strm);\n          if (s.pending !== 0) {\n            s.last_flush = -1;\n            return Z_OK$3;\n          }\n          beg = 0;\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.comment.length) {\n          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n    }\n    s.status = HCRC_STATE;\n  }\n  if (s.status === HCRC_STATE) {\n    if (s.gzhead.hcrc) {\n      if (s.pending + 2 > s.pending_buf_size) {\n        flush_pending(strm);\n        if (s.pending !== 0) {\n          s.last_flush = -1;\n          return Z_OK$3;\n        }\n      }\n      put_byte(s, strm.adler & 0xff);\n      put_byte(s, (strm.adler >> 8) & 0xff);\n      strm.adler = 0; //crc32(0L, Z_NULL, 0);\n    }\n    s.status = BUSY_STATE;\n\n    /* Compression must start with an empty pending buffer */\n    flush_pending(strm);\n    if (s.pending !== 0) {\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n  }\n//#endif\n\n  /* Start a new block or continue the current one.\n   */\n  if (strm.avail_in !== 0 || s.lookahead !== 0 ||\n    (flush !== Z_NO_FLUSH$2 && s.status !== FINISH_STATE)) {\n    let bstate = s.level === 0 ? deflate_stored(s, flush) :\n                 s.strategy === Z_HUFFMAN_ONLY ? deflate_huff(s, flush) :\n                 s.strategy === Z_RLE ? deflate_rle(s, flush) :\n                 configuration_table[s.level].func(s, flush);\n\n    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n      s.status = FINISH_STATE;\n    }\n    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR next call, see above */\n      }\n      return Z_OK$3;\n      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n    }\n    if (bstate === BS_BLOCK_DONE) {\n      if (flush === Z_PARTIAL_FLUSH) {\n        _tr_align(s);\n      }\n      else if (flush !== Z_BLOCK$1) { /* FULL_FLUSH or SYNC_FLUSH */\n\n        _tr_stored_block(s, 0, 0, false);\n        /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n        if (flush === Z_FULL_FLUSH$1) {\n          /*** CLEAR_HASH(s); ***/             /* forget history */\n          zero(s.head); // Fill with NIL (= 0);\n\n          if (s.lookahead === 0) {\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n          }\n        }\n      }\n      flush_pending(strm);\n      if (strm.avail_out === 0) {\n        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */\n        return Z_OK$3;\n      }\n    }\n  }\n\n  if (flush !== Z_FINISH$3) { return Z_OK$3; }\n  if (s.wrap <= 0) { return Z_STREAM_END$3; }\n\n  /* Write the trailer */\n  if (s.wrap === 2) {\n    put_byte(s, strm.adler & 0xff);\n    put_byte(s, (strm.adler >> 8) & 0xff);\n    put_byte(s, (strm.adler >> 16) & 0xff);\n    put_byte(s, (strm.adler >> 24) & 0xff);\n    put_byte(s, strm.total_in & 0xff);\n    put_byte(s, (strm.total_in >> 8) & 0xff);\n    put_byte(s, (strm.total_in >> 16) & 0xff);\n    put_byte(s, (strm.total_in >> 24) & 0xff);\n  }\n  else\n  {\n    putShortMSB(s, strm.adler >>> 16);\n    putShortMSB(s, strm.adler & 0xffff);\n  }\n\n  flush_pending(strm);\n  /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\n  if (s.wrap > 0) { s.wrap = -s.wrap; }\n  /* write the trailer only once! */\n  return s.pending !== 0 ? Z_OK$3 : Z_STREAM_END$3;\n};\n\n\nconst deflateEnd = (strm) => {\n\n  if (deflateStateCheck(strm)) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  const status = strm.state.status;\n\n  strm.state = null;\n\n  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR$2) : Z_OK$3;\n};\n\n\n/* =========================================================================\n * Initializes the compression dictionary from the given byte\n * sequence without producing any compressed output.\n */\nconst deflateSetDictionary = (strm, dictionary) => {\n\n  let dictLength = dictionary.length;\n\n  if (deflateStateCheck(strm)) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  const s = strm.state;\n  const wrap = s.wrap;\n\n  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  /* when using zlib wrappers, compute Adler-32 for provided dictionary */\n  if (wrap === 1) {\n    /* adler32(strm->adler, dictionary, dictLength); */\n    strm.adler = adler32_1(strm.adler, dictionary, dictLength, 0);\n  }\n\n  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */\n\n  /* if dictionary would fill window, just replace the history */\n  if (dictLength >= s.w_size) {\n    if (wrap === 0) {            /* already empty otherwise */\n      /*** CLEAR_HASH(s); ***/\n      zero(s.head); // Fill with NIL (= 0);\n      s.strstart = 0;\n      s.block_start = 0;\n      s.insert = 0;\n    }\n    /* use the tail */\n    // dictionary = dictionary.slice(dictLength - s.w_size);\n    let tmpDict = new Uint8Array(s.w_size);\n    tmpDict.set(dictionary.subarray(dictLength - s.w_size, dictLength), 0);\n    dictionary = tmpDict;\n    dictLength = s.w_size;\n  }\n  /* insert dictionary into window and hash */\n  const avail = strm.avail_in;\n  const next = strm.next_in;\n  const input = strm.input;\n  strm.avail_in = dictLength;\n  strm.next_in = 0;\n  strm.input = dictionary;\n  fill_window(s);\n  while (s.lookahead >= MIN_MATCH) {\n    let str = s.strstart;\n    let n = s.lookahead - (MIN_MATCH - 1);\n    do {\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);\n\n      s.prev[str & s.w_mask] = s.head[s.ins_h];\n\n      s.head[s.ins_h] = str;\n      str++;\n    } while (--n);\n    s.strstart = str;\n    s.lookahead = MIN_MATCH - 1;\n    fill_window(s);\n  }\n  s.strstart += s.lookahead;\n  s.block_start = s.strstart;\n  s.insert = s.lookahead;\n  s.lookahead = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  strm.next_in = next;\n  strm.input = input;\n  strm.avail_in = avail;\n  s.wrap = wrap;\n  return Z_OK$3;\n};\n\n\nvar deflateInit_1 = deflateInit;\nvar deflateInit2_1 = deflateInit2;\nvar deflateReset_1 = deflateReset;\nvar deflateResetKeep_1 = deflateResetKeep;\nvar deflateSetHeader_1 = deflateSetHeader;\nvar deflate_2$1 = deflate$2;\nvar deflateEnd_1 = deflateEnd;\nvar deflateSetDictionary_1 = deflateSetDictionary;\nvar deflateInfo = 'pako deflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.deflateBound = deflateBound;\nmodule.exports.deflateCopy = deflateCopy;\nmodule.exports.deflateGetDictionary = deflateGetDictionary;\nmodule.exports.deflateParams = deflateParams;\nmodule.exports.deflatePending = deflatePending;\nmodule.exports.deflatePrime = deflatePrime;\nmodule.exports.deflateTune = deflateTune;\n*/\n\nvar deflate_1$2 = {\n\tdeflateInit: deflateInit_1,\n\tdeflateInit2: deflateInit2_1,\n\tdeflateReset: deflateReset_1,\n\tdeflateResetKeep: deflateResetKeep_1,\n\tdeflateSetHeader: deflateSetHeader_1,\n\tdeflate: deflate_2$1,\n\tdeflateEnd: deflateEnd_1,\n\tdeflateSetDictionary: deflateSetDictionary_1,\n\tdeflateInfo: deflateInfo\n};\n\nconst _has = (obj, key) => {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n};\n\nvar assign = function (obj /*from1, from2, from3, ...*/) {\n  const sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    const source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (const p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// Join array of chunks to single array.\nvar flattenChunks = (chunks) => {\n  // calculate data length\n  let len = 0;\n\n  for (let i = 0, l = chunks.length; i < l; i++) {\n    len += chunks[i].length;\n  }\n\n  // join chunks\n  const result = new Uint8Array(len);\n\n  for (let i = 0, pos = 0, l = chunks.length; i < l; i++) {\n    let chunk = chunks[i];\n    result.set(chunk, pos);\n    pos += chunk.length;\n  }\n\n  return result;\n};\n\nvar common = {\n\tassign: assign,\n\tflattenChunks: flattenChunks\n};\n\n// String encode/decode helpers\n\n\n// Quick check if we can use fast array to bin string conversion\n//\n// - apply(Array) can fail on Android 2.2\n// - apply(Uint8Array) can fail on iOS 5.1 Safari\n//\nlet STR_APPLY_UIA_OK = true;\n\ntry { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }\n\n\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\nconst _utf8len = new Uint8Array(256);\nfor (let q = 0; q < 256; q++) {\n  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);\n}\n_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start\n\n\n// convert string to array (typed, when possible)\nvar string2buf = (str) => {\n  if (typeof TextEncoder === 'function' && TextEncoder.prototype.encode) {\n    return new TextEncoder().encode(str);\n  }\n\n  let buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\n\n  // count binary size\n  for (m_pos = 0; m_pos < str_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\n  }\n\n  // allocate buffer\n  buf = new Uint8Array(buf_len);\n\n  // convert\n  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    if (c < 0x80) {\n      /* one byte */\n      buf[i++] = c;\n    } else if (c < 0x800) {\n      /* two bytes */\n      buf[i++] = 0xC0 | (c >>> 6);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else if (c < 0x10000) {\n      /* three bytes */\n      buf[i++] = 0xE0 | (c >>> 12);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else {\n      /* four bytes */\n      buf[i++] = 0xf0 | (c >>> 18);\n      buf[i++] = 0x80 | (c >>> 12 & 0x3f);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    }\n  }\n\n  return buf;\n};\n\n// Helper\nconst buf2binstring = (buf, len) => {\n  // On Chrome, the arguments in a function call that are allowed is `65534`.\n  // If the length of the buffer is smaller than that, we can use this optimization,\n  // otherwise we will take a slower path.\n  if (len < 65534) {\n    if (buf.subarray && STR_APPLY_UIA_OK) {\n      return String.fromCharCode.apply(null, buf.length === len ? buf : buf.subarray(0, len));\n    }\n  }\n\n  let result = '';\n  for (let i = 0; i < len; i++) {\n    result += String.fromCharCode(buf[i]);\n  }\n  return result;\n};\n\n\n// convert array to string\nvar buf2string = (buf, max) => {\n  const len = max || buf.length;\n\n  if (typeof TextDecoder === 'function' && TextDecoder.prototype.decode) {\n    return new TextDecoder().decode(buf.subarray(0, max));\n  }\n\n  let i, out;\n\n  // Reserve max possible length (2 words per char)\n  // NB: by unknown reasons, Array is significantly faster for\n  //     String.fromCharCode.apply than Uint16Array.\n  const utf16buf = new Array(len * 2);\n\n  for (out = 0, i = 0; i < len;) {\n    let c = buf[i++];\n    // quick process ascii\n    if (c < 0x80) { utf16buf[out++] = c; continue; }\n\n    let c_len = _utf8len[c];\n    // skip 5 & 6 byte codes\n    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }\n\n    // apply mask on first byte\n    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n    // join the rest\n    while (c_len > 1 && i < len) {\n      c = (c << 6) | (buf[i++] & 0x3f);\n      c_len--;\n    }\n\n    // terminated by end of string?\n    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\n\n    if (c < 0x10000) {\n      utf16buf[out++] = c;\n    } else {\n      c -= 0x10000;\n      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\n      utf16buf[out++] = 0xdc00 | (c & 0x3ff);\n    }\n  }\n\n  return buf2binstring(utf16buf, out);\n};\n\n\n// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nvar utf8border = (buf, max) => {\n\n  max = max || buf.length;\n  if (max > buf.length) { max = buf.length; }\n\n  // go back from last position, until start of sequence found\n  let pos = max - 1;\n  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\n\n  // Very small and broken sequence,\n  // return max, because we should return something anyway.\n  if (pos < 0) { return max; }\n\n  // If we came to start of buffer - that means buffer is too small,\n  // return max too.\n  if (pos === 0) { return max; }\n\n  return (pos + _utf8len[buf[pos]] > max) ? pos : max;\n};\n\nvar strings = {\n\tstring2buf: string2buf,\n\tbuf2string: buf2string,\n\tutf8border: utf8border\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nvar zstream = ZStream;\n\nconst toString$1 = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH: Z_NO_FLUSH$1, Z_SYNC_FLUSH, Z_FULL_FLUSH, Z_FINISH: Z_FINISH$2,\n  Z_OK: Z_OK$2, Z_STREAM_END: Z_STREAM_END$2,\n  Z_DEFAULT_COMPRESSION,\n  Z_DEFAULT_STRATEGY,\n  Z_DEFLATED: Z_DEFLATED$1\n} = constants$2;\n\n/* ===========================================================================*/\n\n\n/**\n * class Deflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[deflate]],\n * [[deflateRaw]] and [[gzip]].\n **/\n\n/* internal\n * Deflate.chunks -> Array\n *\n * Chunks of output data, if [[Deflate#onData]] not overridden.\n **/\n\n/**\n * Deflate.result -> Uint8Array\n *\n * Compressed result, generated by default [[Deflate#onData]]\n * and [[Deflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Deflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Deflate.err -> Number\n *\n * Error code after deflate finished. 0 (Z_OK) on success.\n * You will not need it in real life, because deflate errors\n * are possible only on wrong options or bad `onData` / `onEnd`\n * custom handlers.\n **/\n\n/**\n * Deflate.msg -> String\n *\n * Error message, if [[Deflate.err]] != 0\n **/\n\n\n/**\n * new Deflate(options)\n * - options (Object): zlib deflate options.\n *\n * Creates new deflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `level`\n * - `windowBits`\n * - `memLevel`\n * - `strategy`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw deflate\n * - `gzip` (Boolean) - create gzip wrapper\n * - `header` (Object) - custom header for gzip\n *   - `text` (Boolean) - true if compressed data believed to be text\n *   - `time` (Number) - modification time, unix timestamp\n *   - `os` (Number) - operation system code\n *   - `extra` (Array) - array of bytes with extra data (max 65536)\n *   - `name` (String) - file name (binary string)\n *   - `comment` (String) - comment (binary string)\n *   - `hcrc` (Boolean) - true if header crc should be added\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n *   , chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const deflate = new pako.Deflate({ level: 3});\n *\n * deflate.push(chunk1, false);\n * deflate.push(chunk2, true);  // true -> last chunk\n *\n * if (deflate.err) { throw new Error(deflate.err); }\n *\n * console.log(deflate.result);\n * ```\n **/\nfunction Deflate$1(options) {\n  this.options = common.assign({\n    level: Z_DEFAULT_COMPRESSION,\n    method: Z_DEFLATED$1,\n    chunkSize: 16384,\n    windowBits: 15,\n    memLevel: 8,\n    strategy: Z_DEFAULT_STRATEGY\n  }, options || {});\n\n  let opt = this.options;\n\n  if (opt.raw && (opt.windowBits > 0)) {\n    opt.windowBits = -opt.windowBits;\n  }\n\n  else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {\n    opt.windowBits += 16;\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm = new zstream();\n  this.strm.avail_out = 0;\n\n  let status = deflate_1$2.deflateInit2(\n    this.strm,\n    opt.level,\n    opt.method,\n    opt.windowBits,\n    opt.memLevel,\n    opt.strategy\n  );\n\n  if (status !== Z_OK$2) {\n    throw new Error(messages[status]);\n  }\n\n  if (opt.header) {\n    deflate_1$2.deflateSetHeader(this.strm, opt.header);\n  }\n\n  if (opt.dictionary) {\n    let dict;\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      // If we need to compress text, change encoding to utf8.\n      dict = strings.string2buf(opt.dictionary);\n    } else if (toString$1.call(opt.dictionary) === '[object ArrayBuffer]') {\n      dict = new Uint8Array(opt.dictionary);\n    } else {\n      dict = opt.dictionary;\n    }\n\n    status = deflate_1$2.deflateSetDictionary(this.strm, dict);\n\n    if (status !== Z_OK$2) {\n      throw new Error(messages[status]);\n    }\n\n    this._dict_set = true;\n  }\n}\n\n/**\n * Deflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer|String): input data. Strings will be\n *   converted to utf8 byte sequence.\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with\n * new compressed chunks. Returns `true` on success. The last data block must\n * have `flush_mode` Z_FINISH (or `true`). That will flush internal pending\n * buffers and call [[Deflate#onEnd]].\n *\n * On fail call [[Deflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nDeflate$1.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  let status, _flush_mode;\n\n  if (this.ended) { return false; }\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH$2 : Z_NO_FLUSH$1;\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // If we need to compress text, change encoding to utf8.\n    strm.input = strings.string2buf(data);\n  } else if (toString$1.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    // Make sure avail_out > 6 to avoid repeating markers\n    if ((_flush_mode === Z_SYNC_FLUSH || _flush_mode === Z_FULL_FLUSH) && strm.avail_out <= 6) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    status = deflate_1$2.deflate(strm, _flush_mode);\n\n    // Ended => flush and finish\n    if (status === Z_STREAM_END$2) {\n      if (strm.next_out > 0) {\n        this.onData(strm.output.subarray(0, strm.next_out));\n      }\n      status = deflate_1$2.deflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return status === Z_OK$2;\n    }\n\n    // Flush if out buffer full\n    if (strm.avail_out === 0) {\n      this.onData(strm.output);\n      continue;\n    }\n\n    // Flush if requested and has data\n    if (_flush_mode > 0 && strm.next_out > 0) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Deflate#onData(chunk) -> Void\n * - chunk (Uint8Array): output data.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nDeflate$1.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Deflate#onEnd(status) -> Void\n * - status (Number): deflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called once after you tell deflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nDeflate$1.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK$2) {\n    this.result = common.flattenChunks(this.chunks);\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * deflate(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * Compress `data` with deflate algorithm and `options`.\n *\n * Supported options are:\n *\n * - level\n * - windowBits\n * - memLevel\n * - strategy\n * - dictionary\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const data = new Uint8Array([1,2,3,4,5,6,7,8,9]);\n *\n * console.log(pako.deflate(data));\n * ```\n **/\nfunction deflate$1(input, options) {\n  const deflator = new Deflate$1(options);\n\n  deflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (deflator.err) { throw deflator.msg || messages[deflator.err]; }\n\n  return deflator.result;\n}\n\n\n/**\n * deflateRaw(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction deflateRaw$1(input, options) {\n  options = options || {};\n  options.raw = true;\n  return deflate$1(input, options);\n}\n\n\n/**\n * gzip(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but create gzip wrapper instead of\n * deflate one.\n **/\nfunction gzip$1(input, options) {\n  options = options || {};\n  options.gzip = true;\n  return deflate$1(input, options);\n}\n\n\nvar Deflate_1$1 = Deflate$1;\nvar deflate_2 = deflate$1;\nvar deflateRaw_1$1 = deflateRaw$1;\nvar gzip_1$1 = gzip$1;\nvar constants$1 = constants$2;\n\nvar deflate_1$1 = {\n\tDeflate: Deflate_1$1,\n\tdeflate: deflate_2,\n\tdeflateRaw: deflateRaw_1$1,\n\tgzip: gzip_1$1,\n\tconstants: constants$1\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// See state defs from inflate.js\nconst BAD$1 = 16209;       /* got a data error -- remain here until reset */\nconst TYPE$1 = 16191;      /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nvar inffast = function inflate_fast(strm, start) {\n  let _in;                    /* local strm.input */\n  let last;                   /* have enough input while in < last */\n  let _out;                   /* local strm.output */\n  let beg;                    /* inflate()'s initial strm.output */\n  let end;                    /* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\n  let dmax;                   /* maximum distance from zlib header */\n//#endif\n  let wsize;                  /* window size or zero if not using window */\n  let whave;                  /* valid bytes in the window */\n  let wnext;                  /* window write index */\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n  let s_window;               /* allocated sliding window, if wsize != 0 */\n  let hold;                   /* local strm.hold */\n  let bits;                   /* local strm.bits */\n  let lcode;                  /* local strm.lencode */\n  let dcode;                  /* local strm.distcode */\n  let lmask;                  /* mask for first level of length codes */\n  let dmask;                  /* mask for first level of distance codes */\n  let here;                   /* retrieved table entry */\n  let op;                     /* code bits, operation, extra bits, or */\n                              /*  window position, window bytes to copy */\n  let len;                    /* match length, unused bytes */\n  let dist;                   /* match distance */\n  let from;                   /* where to copy match from */\n  let from_source;\n\n\n  let input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n  const state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n//#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  s_window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top:\n  do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen:\n    for (;;) { // Goto emulation\n      op = here >>> 24/*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = (here >>> 16) & 0xff/*here.op*/;\n      if (op === 0) {                          /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff/*here.val*/;\n      }\n      else if (op & 16) {                     /* length base */\n        len = here & 0xffff/*here.val*/;\n        op &= 15;                           /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & ((1 << op) - 1);\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n\n        dodist:\n        for (;;) { // goto emulation\n          op = here >>> 24/*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = (here >>> 16) & 0xff/*here.op*/;\n\n          if (op & 16) {                      /* distance base */\n            dist = here & 0xffff/*here.val*/;\n            op &= 15;                       /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD$1;\n              break top;\n            }\n//#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n            op = _out - beg;                /* max distance in output */\n            if (dist > op) {                /* see if copy from window */\n              op = dist - op;               /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD$1;\n                  break top;\n                }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n              }\n              from = 0; // window index\n              from_source = s_window;\n              if (wnext === 0) {           /* very common case */\n                from += wsize - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              else if (wnext < op) {      /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {         /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {  /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = s_window[from++];\n                    } while (--op);\n                    from = _out - dist;      /* rest from output */\n                    from_source = output;\n                  }\n                }\n              }\n              else {                      /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            }\n            else {\n              from = _out - dist;          /* copy direct from output */\n              do {                        /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          }\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n            continue dodist;\n          }\n          else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD$1;\n            break top;\n          }\n\n          break; // need to emulate goto via \"continue\"\n        }\n      }\n      else if ((op & 64) === 0) {              /* 2nd level length code */\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n        continue dolen;\n      }\n      else if (op & 32) {                     /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE$1;\n        break top;\n      }\n      else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD$1;\n        break top;\n      }\n\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst MAXBITS = 15;\nconst ENOUGH_LENS$1 = 852;\nconst ENOUGH_DISTS$1 = 592;\n//const ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst CODES$1 = 0;\nconst LENS$1 = 1;\nconst DISTS$1 = 2;\n\nconst lbase = new Uint16Array([ /* Length codes 257..285 base */\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n]);\n\nconst lext = new Uint8Array([ /* Length codes 257..285 extra */\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n]);\n\nconst dbase = new Uint16Array([ /* Distance codes 0..29 base */\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n  8193, 12289, 16385, 24577, 0, 0\n]);\n\nconst dext = new Uint8Array([ /* Distance codes 0..29 extra */\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n  28, 28, 29, 29, 64, 64\n]);\n\nconst inflate_table = (type, lens, lens_index, codes, table, table_index, work, opts) =>\n{\n  const bits = opts.bits;\n      //here = opts.here; /* table entry for duplication */\n\n  let len = 0;               /* a code's length in bits */\n  let sym = 0;               /* index of code symbols */\n  let min = 0, max = 0;          /* minimum and maximum code lengths */\n  let root = 0;              /* number of index bits for root table */\n  let curr = 0;              /* number of index bits for current table */\n  let drop = 0;              /* code bits to drop for sub-table */\n  let left = 0;                   /* number of prefix codes available */\n  let used = 0;              /* code entries in table used */\n  let huff = 0;              /* Huffman code */\n  let incr;              /* for incrementing code, index */\n  let fill;              /* index for replicating entries */\n  let low;               /* low bits for current root entry */\n  let mask;              /* mask for low root bits */\n  let next;             /* next available space in table */\n  let base = null;     /* base value table to use */\n//  let shoextra;    /* extra bits table to use */\n  let match;                  /* use base and extra for symbol >= match */\n  const count = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\n  const offs = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\n  let extra = null;\n\n  let here_bits, here_op, here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths, force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) { break; }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) {                     /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n    opts.bits = 1;\n    return 0;     /* no symbols, but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) { break; }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    }        /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES$1 || max !== 1)) {\n    return -1;                      /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n  if (type === CODES$1) {\n    base = extra = work;    /* dummy value--not used */\n    match = 20;\n\n  } else if (type === LENS$1) {\n    base = lbase;\n    extra = lext;\n    match = 257;\n\n  } else {                    /* DISTS */\n    base = dbase;\n    extra = dext;\n    match = 0;\n  }\n\n  /* initialize opts for loop */\n  huff = 0;                   /* starting code */\n  sym = 0;                    /* starting code symbol */\n  len = min;                  /* starting code length */\n  next = table_index;              /* current table to fill in */\n  curr = root;                /* current table index bits */\n  drop = 0;                   /* current bits to drop from code for index */\n  low = -1;                   /* trigger new sub-table when len > root */\n  used = 1 << root;          /* use root table entries */\n  mask = used - 1;            /* mask for comparing low */\n\n  /* check available table space */\n  if ((type === LENS$1 && used > ENOUGH_LENS$1) ||\n    (type === DISTS$1 && used > ENOUGH_DISTS$1)) {\n    return 1;\n  }\n\n  /* process all codes and make table entries */\n  for (;;) {\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] + 1 < match) {\n      here_op = 0;\n      here_val = work[sym];\n    }\n    else if (work[sym] >= match) {\n      here_op = extra[work[sym] - match];\n      here_val = base[work[sym] - match];\n    }\n    else {\n      here_op = 32 + 64;         /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << (len - drop);\n    fill = 1 << curr;\n    min = fill;                 /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << (len - 1);\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol, update count, len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) { break; }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min;            /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) { break; }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if ((type === LENS$1 && used > ENOUGH_LENS$1) ||\n        (type === DISTS$1 && used > ENOUGH_DISTS$1)) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};\n\n\nvar inftrees = inflate_table;\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n\n\n\n\n\nconst CODES = 0;\nconst LENS = 1;\nconst DISTS = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_FINISH: Z_FINISH$1, Z_BLOCK, Z_TREES,\n  Z_OK: Z_OK$1, Z_STREAM_END: Z_STREAM_END$1, Z_NEED_DICT: Z_NEED_DICT$1, Z_STREAM_ERROR: Z_STREAM_ERROR$1, Z_DATA_ERROR: Z_DATA_ERROR$1, Z_MEM_ERROR: Z_MEM_ERROR$1, Z_BUF_ERROR,\n  Z_DEFLATED\n} = constants$2;\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nconst    HEAD = 16180;       /* i: waiting for magic header */\nconst    FLAGS = 16181;      /* i: waiting for method and flags (gzip) */\nconst    TIME = 16182;       /* i: waiting for modification time (gzip) */\nconst    OS = 16183;         /* i: waiting for extra flags and operating system (gzip) */\nconst    EXLEN = 16184;      /* i: waiting for extra length (gzip) */\nconst    EXTRA = 16185;      /* i: waiting for extra bytes (gzip) */\nconst    NAME = 16186;       /* i: waiting for end of file name (gzip) */\nconst    COMMENT = 16187;    /* i: waiting for end of comment (gzip) */\nconst    HCRC = 16188;       /* i: waiting for header crc (gzip) */\nconst    DICTID = 16189;    /* i: waiting for dictionary check value */\nconst    DICT = 16190;      /* waiting for inflateSetDictionary() call */\nconst        TYPE = 16191;      /* i: waiting for type bits, including last-flag bit */\nconst        TYPEDO = 16192;    /* i: same, but skip check to exit inflate on new block */\nconst        STORED = 16193;    /* i: waiting for stored size (length and complement) */\nconst        COPY_ = 16194;     /* i/o: same as COPY below, but only first time in */\nconst        COPY = 16195;      /* i/o: waiting for input or output to copy stored block */\nconst        TABLE = 16196;     /* i: waiting for dynamic block table lengths */\nconst        LENLENS = 16197;   /* i: waiting for code length code lengths */\nconst        CODELENS = 16198;  /* i: waiting for length/lit and distance code lengths */\nconst            LEN_ = 16199;      /* i: same as LEN below, but only first time in */\nconst            LEN = 16200;       /* i: waiting for length/lit/eob code */\nconst            LENEXT = 16201;    /* i: waiting for length extra bits */\nconst            DIST = 16202;      /* i: waiting for distance code */\nconst            DISTEXT = 16203;   /* i: waiting for distance extra bits */\nconst            MATCH = 16204;     /* o: waiting for output space to copy string */\nconst            LIT = 16205;       /* o: waiting for output space to write literal */\nconst    CHECK = 16206;     /* i: waiting for 32-bit check value */\nconst    LENGTH = 16207;    /* i: waiting for 32-bit length (gzip) */\nconst    DONE = 16208;      /* finished check, done -- remain here until reset */\nconst    BAD = 16209;       /* got a data error -- remain here until reset */\nconst    MEM = 16210;       /* got an inflate() memory error -- remain here until reset */\nconst    SYNC = 16211;      /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nconst ENOUGH_LENS = 852;\nconst ENOUGH_DISTS = 592;\n//const ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst MAX_WBITS = 15;\n/* 32K LZ77 window */\nconst DEF_WBITS = MAX_WBITS;\n\n\nconst zswap32 = (q) => {\n\n  return  (((q >>> 24) & 0xff) +\n          ((q >>> 8) & 0xff00) +\n          ((q & 0xff00) << 8) +\n          ((q & 0xff) << 24));\n};\n\n\nfunction InflateState() {\n  this.strm = null;           /* pointer back to this zlib stream */\n  this.mode = 0;              /* current inflate mode */\n  this.last = false;          /* true if processing last block */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip,\n                                 bit 2 true to validate check value */\n  this.havedict = false;      /* true if dictionary provided */\n  this.flags = 0;             /* gzip header method and flags (0 if zlib), or\n                                 -1 if raw or no header yet */\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0;             /* protected copy of check value */\n  this.total = 0;             /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null;           /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0;             /* log base 2 of requested window size */\n  this.wsize = 0;             /* window size or zero if not using window */\n  this.whave = 0;             /* valid bytes in the window */\n  this.wnext = 0;             /* window write index */\n  this.window = null;         /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n  this.hold = 0;              /* input bit accumulator */\n  this.bits = 0;              /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n  this.length = 0;            /* literal or length of data to copy */\n  this.offset = 0;            /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0;             /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null;          /* starting table for length/literal codes */\n  this.distcode = null;         /* starting table for distance codes */\n  this.lenbits = 0;           /* index bits for lencode */\n  this.distbits = 0;          /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0;             /* number of code length code lengths */\n  this.nlen = 0;              /* number of length code lengths */\n  this.ndist = 0;             /* number of distance code lengths */\n  this.have = 0;              /* number of code lengths in lens[] */\n  this.next = null;              /* next available space in codes[] */\n\n  this.lens = new Uint16Array(320); /* temporary storage for code lengths */\n  this.work = new Uint16Array(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new Int32Array(ENOUGH);       /* space for code tables */\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n  this.sane = 0;                   /* if false, allow invalid distance too far */\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\n  this.was = 0;                    /* initial length of match */\n}\n\n\nconst inflateStateCheck = (strm) => {\n\n  if (!strm) {\n    return 1;\n  }\n  const state = strm.state;\n  if (!state || state.strm !== strm ||\n    state.mode < HEAD || state.mode > SYNC) {\n    return 1;\n  }\n  return 0;\n};\n\n\nconst inflateResetKeep = (strm) => {\n\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.flags = -1;\n  state.dmax = 32768;\n  state.head = null/*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new Int32Array(ENOUGH_LENS);\n  state.distcode = state.distdyn = new Int32Array(ENOUGH_DISTS);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK$1;\n};\n\n\nconst inflateReset = (strm) => {\n\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n};\n\n\nconst inflateReset2 = (strm, windowBits) => {\n  let wrap;\n\n  /* get the state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n  else {\n    wrap = (windowBits >> 4) + 5;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR$1;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n};\n\n\nconst inflateInit2 = (strm, windowBits) => {\n\n  if (!strm) { return Z_STREAM_ERROR$1; }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  const state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.strm = strm;\n  state.window = null/*Z_NULL*/;\n  state.mode = HEAD;     /* to pass state test in inflateReset2() */\n  const ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK$1) {\n    strm.state = null/*Z_NULL*/;\n  }\n  return ret;\n};\n\n\nconst inflateInit = (strm) => {\n\n  return inflateInit2(strm, DEF_WBITS);\n};\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nlet virgin = true;\n\nlet lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\n\nconst fixedtables = (state) => {\n\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    lenfix = new Int32Array(512);\n    distfix = new Int32Array(32);\n\n    /* literal/length table */\n    let sym = 0;\n    while (sym < 144) { state.lens[sym++] = 8; }\n    while (sym < 256) { state.lens[sym++] = 9; }\n    while (sym < 280) { state.lens[sym++] = 7; }\n    while (sym < 288) { state.lens[sym++] = 8; }\n\n    inftrees(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) { state.lens[sym++] = 5; }\n\n    inftrees(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n};\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nconst updatewindow = (strm, src, end, copy) => {\n\n  let dist;\n  const state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new Uint8Array(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    state.window.set(src.subarray(end - state.wsize, end), 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  }\n  else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    state.window.set(src.subarray(end - copy, end - copy + dist), state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      state.window.set(src.subarray(end - copy, end), 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    }\n    else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) { state.wnext = 0; }\n      if (state.whave < state.wsize) { state.whave += dist; }\n    }\n  }\n  return 0;\n};\n\n\nconst inflate$2 = (strm, flush) => {\n\n  let state;\n  let input, output;          // input/output buffers\n  let next;                   /* next input INDEX */\n  let put;                    /* next output INDEX */\n  let have, left;             /* available input and output */\n  let hold;                   /* bit buffer */\n  let bits;                   /* bits in bit buffer */\n  let _in, _out;              /* save starting available input and output */\n  let copy;                   /* number of stored or match bytes to copy */\n  let from;                   /* where to copy match bytes from */\n  let from_source;\n  let here = 0;               /* current decoding table entry */\n  let here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //let last;                   /* parent table entry */\n  let last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  let len;                    /* length to copy for repeats, bits to drop */\n  let ret;                    /* return code */\n  const hbuf = new Uint8Array(4);    /* buffer for gzip header crc calculation */\n  let opts;\n\n  let n; // temporary variable for NEED_BITS\n\n  const order = /* permutation of code lengths */\n    new Uint8Array([ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ]);\n\n\n  if (inflateStateCheck(strm) || !strm.output ||\n      (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK$1;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n      case HEAD:\n        if (state.wrap === 0) {\n          state.mode = TYPEDO;\n          break;\n        }\n        //=== NEEDBITS(16);\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n          if (state.wbits === 0) {\n            state.wbits = 15;\n          }\n          state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          state.mode = FLAGS;\n          break;\n        }\n        if (state.head) {\n          state.head.done = false;\n        }\n        if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n          strm.msg = 'incorrect header check';\n          state.mode = BAD;\n          break;\n        }\n        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n        len = (hold & 0x0f)/*BITS(4)*/ + 8;\n        if (state.wbits === 0) {\n          state.wbits = len;\n        }\n        if (len > 15 || len > state.wbits) {\n          strm.msg = 'invalid window size';\n          state.mode = BAD;\n          break;\n        }\n\n        // !!! pako patch. Force use `options.windowBits` if passed.\n        // Required to always use max window size by default.\n        state.dmax = 1 << state.wbits;\n        //state.dmax = 1 << len;\n\n        state.flags = 0;               /* indicate zlib header */\n        //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = hold & 0x200 ? DICTID : TYPE;\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        break;\n      case FLAGS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.flags = hold;\n        if ((state.flags & 0xff) !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        if (state.flags & 0xe000) {\n          strm.msg = 'unknown header flags set';\n          state.mode = BAD;\n          break;\n        }\n        if (state.head) {\n          state.head.text = ((hold >> 8) & 1);\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = TIME;\n        /* falls through */\n      case TIME:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.time = hold;\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC4(state.check, hold)\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          hbuf[2] = (hold >>> 16) & 0xff;\n          hbuf[3] = (hold >>> 24) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 4, 0);\n          //===\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = OS;\n        /* falls through */\n      case OS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.xflags = (hold & 0xff);\n          state.head.os = (hold >> 8);\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = EXLEN;\n        /* falls through */\n      case EXLEN:\n        if (state.flags & 0x0400) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length = hold;\n          if (state.head) {\n            state.head.extra_len = hold;\n          }\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            //=== CRC2(state.check, hold);\n            hbuf[0] = hold & 0xff;\n            hbuf[1] = (hold >>> 8) & 0xff;\n            state.check = crc32_1(state.check, hbuf, 2, 0);\n            //===//\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        else if (state.head) {\n          state.head.extra = null/*Z_NULL*/;\n        }\n        state.mode = EXTRA;\n        /* falls through */\n      case EXTRA:\n        if (state.flags & 0x0400) {\n          copy = state.length;\n          if (copy > have) { copy = have; }\n          if (copy) {\n            if (state.head) {\n              len = state.head.extra_len - state.length;\n              if (!state.head.extra) {\n                // Use untyped array for more convenient processing later\n                state.head.extra = new Uint8Array(state.head.extra_len);\n              }\n              state.head.extra.set(\n                input.subarray(\n                  next,\n                  // extra field is limited to 65536 bytes\n                  // - no need for additional size check\n                  next + copy\n                ),\n                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n                len\n              );\n              //zmemcpy(state.head.extra + len, next,\n              //        len + copy > state.head.extra_max ?\n              //        state.head.extra_max - len : copy);\n            }\n            if ((state.flags & 0x0200) && (state.wrap & 4)) {\n              state.check = crc32_1(state.check, input, copy, next);\n            }\n            have -= copy;\n            next += copy;\n            state.length -= copy;\n          }\n          if (state.length) { break inf_leave; }\n        }\n        state.length = 0;\n        state.mode = NAME;\n        /* falls through */\n      case NAME:\n        if (state.flags & 0x0800) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            // TODO: 2 or 1 bytes?\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.name_max*/)) {\n              state.head.name += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            state.check = crc32_1(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.name = null;\n        }\n        state.length = 0;\n        state.mode = COMMENT;\n        /* falls through */\n      case COMMENT:\n        if (state.flags & 0x1000) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.comm_max*/)) {\n              state.head.comment += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            state.check = crc32_1(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.comment = null;\n        }\n        state.mode = HCRC;\n        /* falls through */\n      case HCRC:\n        if (state.flags & 0x0200) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if ((state.wrap & 4) && hold !== (state.check & 0xffff)) {\n            strm.msg = 'header crc mismatch';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        if (state.head) {\n          state.head.hcrc = ((state.flags >> 9) & 1);\n          state.head.done = true;\n        }\n        strm.adler = state.check = 0;\n        state.mode = TYPE;\n        break;\n      case DICTID:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        strm.adler = state.check = zswap32(hold);\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = DICT;\n        /* falls through */\n      case DICT:\n        if (state.havedict === 0) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          return Z_NEED_DICT$1;\n        }\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = TYPE;\n        /* falls through */\n      case TYPE:\n        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case TYPEDO:\n        if (state.last) {\n          //--- BYTEBITS() ---//\n          hold >>>= bits & 7;\n          bits -= bits & 7;\n          //---//\n          state.mode = CHECK;\n          break;\n        }\n        //=== NEEDBITS(3); */\n        while (bits < 3) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.last = (hold & 0x01)/*BITS(1)*/;\n        //--- DROPBITS(1) ---//\n        hold >>>= 1;\n        bits -= 1;\n        //---//\n\n        switch ((hold & 0x03)/*BITS(2)*/) {\n          case 0:                             /* stored block */\n            //Tracev((stderr, \"inflate:     stored block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = STORED;\n            break;\n          case 1:                             /* fixed block */\n            fixedtables(state);\n            //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = LEN_;             /* decode codes */\n            if (flush === Z_TREES) {\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n              break inf_leave;\n            }\n            break;\n          case 2:                             /* dynamic block */\n            //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = TABLE;\n            break;\n          case 3:\n            strm.msg = 'invalid block type';\n            state.mode = BAD;\n        }\n        //--- DROPBITS(2) ---//\n        hold >>>= 2;\n        bits -= 2;\n        //---//\n        break;\n      case STORED:\n        //--- BYTEBITS() ---// /* go to byte boundary */\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n          strm.msg = 'invalid stored block lengths';\n          state.mode = BAD;\n          break;\n        }\n        state.length = hold & 0xffff;\n        //Tracev((stderr, \"inflate:       stored length %u\\n\",\n        //        state.length));\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = COPY_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case COPY_:\n        state.mode = COPY;\n        /* falls through */\n      case COPY:\n        copy = state.length;\n        if (copy) {\n          if (copy > have) { copy = have; }\n          if (copy > left) { copy = left; }\n          if (copy === 0) { break inf_leave; }\n          //--- zmemcpy(put, next, copy); ---\n          output.set(input.subarray(next, next + copy), put);\n          //---//\n          have -= copy;\n          next += copy;\n          left -= copy;\n          put += copy;\n          state.length -= copy;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       stored end\\n\"));\n        state.mode = TYPE;\n        break;\n      case TABLE:\n        //=== NEEDBITS(14); */\n        while (bits < 14) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n        if (state.nlen > 286 || state.ndist > 30) {\n          strm.msg = 'too many length or distance symbols';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n        state.have = 0;\n        state.mode = LENLENS;\n        /* falls through */\n      case LENLENS:\n        while (state.have < state.ncode) {\n          //=== NEEDBITS(3);\n          while (bits < 3) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n          //--- DROPBITS(3) ---//\n          hold >>>= 3;\n          bits -= 3;\n          //---//\n        }\n        while (state.have < 19) {\n          state.lens[order[state.have++]] = 0;\n        }\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        //state.next = state.codes;\n        //state.lencode = state.next;\n        // Switch to use dynamic table\n        state.lencode = state.lendyn;\n        state.lenbits = 7;\n\n        opts = { bits: state.lenbits };\n        ret = inftrees(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n        state.lenbits = opts.bits;\n\n        if (ret) {\n          strm.msg = 'invalid code lengths set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n        state.have = 0;\n        state.mode = CODELENS;\n        /* falls through */\n      case CODELENS:\n        while (state.have < state.nlen + state.ndist) {\n          for (;;) {\n            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          if (here_val < 16) {\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            state.lens[state.have++] = here_val;\n          }\n          else {\n            if (here_val === 16) {\n              //=== NEEDBITS(here.bits + 2);\n              n = here_bits + 2;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              if (state.have === 0) {\n                strm.msg = 'invalid bit length repeat';\n                state.mode = BAD;\n                break;\n              }\n              len = state.lens[state.have - 1];\n              copy = 3 + (hold & 0x03);//BITS(2);\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n            }\n            else if (here_val === 17) {\n              //=== NEEDBITS(here.bits + 3);\n              n = here_bits + 3;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 3 + (hold & 0x07);//BITS(3);\n              //--- DROPBITS(3) ---//\n              hold >>>= 3;\n              bits -= 3;\n              //---//\n            }\n            else {\n              //=== NEEDBITS(here.bits + 7);\n              n = here_bits + 7;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 11 + (hold & 0x7f);//BITS(7);\n              //--- DROPBITS(7) ---//\n              hold >>>= 7;\n              bits -= 7;\n              //---//\n            }\n            if (state.have + copy > state.nlen + state.ndist) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n            while (copy--) {\n              state.lens[state.have++] = len;\n            }\n          }\n        }\n\n        /* handle error breaks in while */\n        if (state.mode === BAD) { break; }\n\n        /* check for end-of-block code (better have one) */\n        if (state.lens[256] === 0) {\n          strm.msg = 'invalid code -- missing end-of-block';\n          state.mode = BAD;\n          break;\n        }\n\n        /* build code tables -- note: do not change the lenbits or distbits\n           values here (9 and 6) without reading the comments in inftrees.h\n           concerning the ENOUGH constants, which depend on those values */\n        state.lenbits = 9;\n\n        opts = { bits: state.lenbits };\n        ret = inftrees(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.lenbits = opts.bits;\n        // state.lencode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid literal/lengths set';\n          state.mode = BAD;\n          break;\n        }\n\n        state.distbits = 6;\n        //state.distcode.copy(state.codes);\n        // Switch to use dynamic table\n        state.distcode = state.distdyn;\n        opts = { bits: state.distbits };\n        ret = inftrees(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.distbits = opts.bits;\n        // state.distcode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid distances set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, 'inflate:       codes ok\\n'));\n        state.mode = LEN_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case LEN_:\n        state.mode = LEN;\n        /* falls through */\n      case LEN:\n        if (have >= 6 && left >= 258) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          inffast(strm, _out);\n          //--- LOAD() ---\n          put = strm.next_out;\n          output = strm.output;\n          left = strm.avail_out;\n          next = strm.next_in;\n          input = strm.input;\n          have = strm.avail_in;\n          hold = state.hold;\n          bits = state.bits;\n          //---\n\n          if (state.mode === TYPE) {\n            state.back = -1;\n          }\n          break;\n        }\n        state.back = 0;\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if (here_bits <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_op && (here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.lencode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        state.length = here_val;\n        if (here_op === 0) {\n          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n          //        \"inflate:         literal '%c'\\n\" :\n          //        \"inflate:         literal 0x%02x\\n\", here.val));\n          state.mode = LIT;\n          break;\n        }\n        if (here_op & 32) {\n          //Tracevv((stderr, \"inflate:         end of block\\n\"));\n          state.back = -1;\n          state.mode = TYPE;\n          break;\n        }\n        if (here_op & 64) {\n          strm.msg = 'invalid literal/length code';\n          state.mode = BAD;\n          break;\n        }\n        state.extra = here_op & 15;\n        state.mode = LENEXT;\n        /* falls through */\n      case LENEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n        state.was = state.length;\n        state.mode = DIST;\n        /* falls through */\n      case DIST:\n        for (;;) {\n          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if ((here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.distcode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        if (here_op & 64) {\n          strm.msg = 'invalid distance code';\n          state.mode = BAD;\n          break;\n        }\n        state.offset = here_val;\n        state.extra = (here_op) & 15;\n        state.mode = DISTEXT;\n        /* falls through */\n      case DISTEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n//#ifdef INFLATE_STRICT\n        if (state.offset > state.dmax) {\n          strm.msg = 'invalid distance too far back';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n        state.mode = MATCH;\n        /* falls through */\n      case MATCH:\n        if (left === 0) { break inf_leave; }\n        copy = _out - left;\n        if (state.offset > copy) {         /* copy from window */\n          copy = state.offset - copy;\n          if (copy > state.whave) {\n            if (state.sane) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break;\n            }\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n          }\n          if (copy > state.wnext) {\n            copy -= state.wnext;\n            from = state.wsize - copy;\n          }\n          else {\n            from = state.wnext - copy;\n          }\n          if (copy > state.length) { copy = state.length; }\n          from_source = state.window;\n        }\n        else {                              /* copy from output */\n          from_source = output;\n          from = put - state.offset;\n          copy = state.length;\n        }\n        if (copy > left) { copy = left; }\n        left -= copy;\n        state.length -= copy;\n        do {\n          output[put++] = from_source[from++];\n        } while (--copy);\n        if (state.length === 0) { state.mode = LEN; }\n        break;\n      case LIT:\n        if (left === 0) { break inf_leave; }\n        output[put++] = state.length;\n        left--;\n        state.mode = LEN;\n        break;\n      case CHECK:\n        if (state.wrap) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            // Use '|' instead of '+' to make sure that result is signed\n            hold |= input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          _out -= left;\n          strm.total_out += _out;\n          state.total += _out;\n          if ((state.wrap & 4) && _out) {\n            strm.adler = state.check =\n                /*UPDATE_CHECK(state.check, put - _out, _out);*/\n                (state.flags ? crc32_1(state.check, output, _out, put - _out) : adler32_1(state.check, output, _out, put - _out));\n\n          }\n          _out = left;\n          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\n          if ((state.wrap & 4) && (state.flags ? hold : zswap32(hold)) !== state.check) {\n            strm.msg = 'incorrect data check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n        }\n        state.mode = LENGTH;\n        /* falls through */\n      case LENGTH:\n        if (state.wrap && state.flags) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if ((state.wrap & 4) && hold !== (state.total & 0xffffffff)) {\n            strm.msg = 'incorrect length check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n        }\n        state.mode = DONE;\n        /* falls through */\n      case DONE:\n        ret = Z_STREAM_END$1;\n        break inf_leave;\n      case BAD:\n        ret = Z_DATA_ERROR$1;\n        break inf_leave;\n      case MEM:\n        return Z_MEM_ERROR$1;\n      case SYNC:\n        /* falls through */\n      default:\n        return Z_STREAM_ERROR$1;\n    }\n  }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n                      (state.mode < CHECK || flush !== Z_FINISH$1))) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) ;\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if ((state.wrap & 4) && _out) {\n    strm.adler = state.check = /*UPDATE_CHECK(state.check, strm.next_out - _out, _out);*/\n      (state.flags ? crc32_1(state.check, output, _out, strm.next_out - _out) : adler32_1(state.check, output, _out, strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n                    (state.mode === TYPE ? 128 : 0) +\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH$1) && ret === Z_OK$1) {\n    ret = Z_BUF_ERROR;\n  }\n  return ret;\n};\n\n\nconst inflateEnd = (strm) => {\n\n  if (inflateStateCheck(strm)) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  let state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK$1;\n};\n\n\nconst inflateGetHeader = (strm, head) => {\n\n  /* check state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR$1; }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK$1;\n};\n\n\nconst inflateSetDictionary = (strm, dictionary) => {\n  const dictLength = dictionary.length;\n\n  let state;\n  let dictid;\n  let ret;\n\n  /* check state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  state = strm.state;\n\n  if (state.wrap !== 0 && state.mode !== DICT) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  /* check for correct dictionary identifier */\n  if (state.mode === DICT) {\n    dictid = 1; /* adler32(0, null, 0)*/\n    /* dictid = adler32(dictid, dictionary, dictLength); */\n    dictid = adler32_1(dictid, dictionary, dictLength, 0);\n    if (dictid !== state.check) {\n      return Z_DATA_ERROR$1;\n    }\n  }\n  /* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */\n  ret = updatewindow(strm, dictionary, dictLength, dictLength);\n  if (ret) {\n    state.mode = MEM;\n    return Z_MEM_ERROR$1;\n  }\n  state.havedict = 1;\n  // Tracev((stderr, \"inflate:   dictionary set\\n\"));\n  return Z_OK$1;\n};\n\n\nvar inflateReset_1 = inflateReset;\nvar inflateReset2_1 = inflateReset2;\nvar inflateResetKeep_1 = inflateResetKeep;\nvar inflateInit_1 = inflateInit;\nvar inflateInit2_1 = inflateInit2;\nvar inflate_2$1 = inflate$2;\nvar inflateEnd_1 = inflateEnd;\nvar inflateGetHeader_1 = inflateGetHeader;\nvar inflateSetDictionary_1 = inflateSetDictionary;\nvar inflateInfo = 'pako inflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.inflateCodesUsed = inflateCodesUsed;\nmodule.exports.inflateCopy = inflateCopy;\nmodule.exports.inflateGetDictionary = inflateGetDictionary;\nmodule.exports.inflateMark = inflateMark;\nmodule.exports.inflatePrime = inflatePrime;\nmodule.exports.inflateSync = inflateSync;\nmodule.exports.inflateSyncPoint = inflateSyncPoint;\nmodule.exports.inflateUndermine = inflateUndermine;\nmodule.exports.inflateValidate = inflateValidate;\n*/\n\nvar inflate_1$2 = {\n\tinflateReset: inflateReset_1,\n\tinflateReset2: inflateReset2_1,\n\tinflateResetKeep: inflateResetKeep_1,\n\tinflateInit: inflateInit_1,\n\tinflateInit2: inflateInit2_1,\n\tinflate: inflate_2$1,\n\tinflateEnd: inflateEnd_1,\n\tinflateGetHeader: inflateGetHeader_1,\n\tinflateSetDictionary: inflateSetDictionary_1,\n\tinflateInfo: inflateInfo\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction GZheader() {\n  /* true if compressed data believed to be text */\n  this.text       = 0;\n  /* modification time */\n  this.time       = 0;\n  /* extra flags (not used when writing a gzip file) */\n  this.xflags     = 0;\n  /* operating system */\n  this.os         = 0;\n  /* pointer to extra field or Z_NULL if none */\n  this.extra      = null;\n  /* extra field length (valid if extra != Z_NULL) */\n  this.extra_len  = 0; // Actually, we don't need it in JS,\n                       // but leave for few code modifications\n\n  //\n  // Setup limits is not necessary because in js we should not preallocate memory\n  // for inflate use constant limit in 65536 bytes\n  //\n\n  /* space at extra (only when reading header) */\n  // this.extra_max  = 0;\n  /* pointer to zero-terminated file name or Z_NULL */\n  this.name       = '';\n  /* space at name (only when reading header) */\n  // this.name_max   = 0;\n  /* pointer to zero-terminated comment or Z_NULL */\n  this.comment    = '';\n  /* space at comment (only when reading header) */\n  // this.comm_max   = 0;\n  /* true if there was or will be a header crc */\n  this.hcrc       = 0;\n  /* true when done reading gzip header (not used when writing a gzip file) */\n  this.done       = false;\n}\n\nvar gzheader = GZheader;\n\nconst toString = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH, Z_FINISH,\n  Z_OK, Z_STREAM_END, Z_NEED_DICT, Z_STREAM_ERROR, Z_DATA_ERROR, Z_MEM_ERROR\n} = constants$2;\n\n/* ===========================================================================*/\n\n\n/**\n * class Inflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[inflate]]\n * and [[inflateRaw]].\n **/\n\n/* internal\n * inflate.chunks -> Array\n *\n * Chunks of output data, if [[Inflate#onData]] not overridden.\n **/\n\n/**\n * Inflate.result -> Uint8Array|String\n *\n * Uncompressed result, generated by default [[Inflate#onData]]\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Inflate.err -> Number\n *\n * Error code after inflate finished. 0 (Z_OK) on success.\n * Should be checked if broken data possible.\n **/\n\n/**\n * Inflate.msg -> String\n *\n * Error message, if [[Inflate.err]] != 0\n **/\n\n\n/**\n * new Inflate(options)\n * - options (Object): zlib inflate options.\n *\n * Creates new inflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `windowBits`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw inflate\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n * By default, when no options set, autodetect deflate/gzip data format via\n * wrapper header.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n * const chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const inflate = new pako.Inflate({ level: 3});\n *\n * inflate.push(chunk1, false);\n * inflate.push(chunk2, true);  // true -> last chunk\n *\n * if (inflate.err) { throw new Error(inflate.err); }\n *\n * console.log(inflate.result);\n * ```\n **/\nfunction Inflate$1(options) {\n  this.options = common.assign({\n    chunkSize: 1024 * 64,\n    windowBits: 15,\n    to: ''\n  }, options || {});\n\n  const opt = this.options;\n\n  // Force window size for `raw` data, if not set directly,\n  // because we have no header for autodetect.\n  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {\n    opt.windowBits = -opt.windowBits;\n    if (opt.windowBits === 0) { opt.windowBits = -15; }\n  }\n\n  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\n  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&\n      !(options && options.windowBits)) {\n    opt.windowBits += 32;\n  }\n\n  // Gzip header has no info about windows size, we can do autodetect only\n  // for deflate. So, if window size not set, force it to max when gzip possible\n  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {\n    // bit 3 (16) -> gzipped data\n    // bit 4 (32) -> autodetect gzip/deflate\n    if ((opt.windowBits & 15) === 0) {\n      opt.windowBits |= 15;\n    }\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm   = new zstream();\n  this.strm.avail_out = 0;\n\n  let status  = inflate_1$2.inflateInit2(\n    this.strm,\n    opt.windowBits\n  );\n\n  if (status !== Z_OK) {\n    throw new Error(messages[status]);\n  }\n\n  this.header = new gzheader();\n\n  inflate_1$2.inflateGetHeader(this.strm, this.header);\n\n  // Setup dictionary\n  if (opt.dictionary) {\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      opt.dictionary = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      opt.dictionary = new Uint8Array(opt.dictionary);\n    }\n    if (opt.raw) { //In raw mode we need to set the dictionary early\n      status = inflate_1$2.inflateSetDictionary(this.strm, opt.dictionary);\n      if (status !== Z_OK) {\n        throw new Error(messages[status]);\n      }\n    }\n  }\n}\n\n/**\n * Inflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer): input data\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE\n *   flush modes. See constants. Skipped or `false` means Z_NO_FLUSH,\n *   `true` means Z_FINISH.\n *\n * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n * new output chunks. Returns `true` on success. If end of stream detected,\n * [[Inflate#onEnd]] will be called.\n *\n * `flush_mode` is not needed for normal operation, because end of stream\n * detected automatically. You may try to use it for advanced things, but\n * this functionality was not tested.\n *\n * On fail call [[Inflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nInflate$1.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  const dictionary = this.options.dictionary;\n  let status, _flush_mode, last_avail_out;\n\n  if (this.ended) return false;\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH : Z_NO_FLUSH;\n\n  // Convert data if needed\n  if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    status = inflate_1$2.inflate(strm, _flush_mode);\n\n    if (status === Z_NEED_DICT && dictionary) {\n      status = inflate_1$2.inflateSetDictionary(strm, dictionary);\n\n      if (status === Z_OK) {\n        status = inflate_1$2.inflate(strm, _flush_mode);\n      } else if (status === Z_DATA_ERROR) {\n        // Replace code with more verbose\n        status = Z_NEED_DICT;\n      }\n    }\n\n    // Skip snyc markers if more data follows and not raw mode\n    while (strm.avail_in > 0 &&\n           status === Z_STREAM_END &&\n           strm.state.wrap > 0 &&\n           data[strm.next_in] !== 0)\n    {\n      inflate_1$2.inflateReset(strm);\n      status = inflate_1$2.inflate(strm, _flush_mode);\n    }\n\n    switch (status) {\n      case Z_STREAM_ERROR:\n      case Z_DATA_ERROR:\n      case Z_NEED_DICT:\n      case Z_MEM_ERROR:\n        this.onEnd(status);\n        this.ended = true;\n        return false;\n    }\n\n    // Remember real `avail_out` value, because we may patch out buffer content\n    // to align utf8 strings boundaries.\n    last_avail_out = strm.avail_out;\n\n    if (strm.next_out) {\n      if (strm.avail_out === 0 || status === Z_STREAM_END) {\n\n        if (this.options.to === 'string') {\n\n          let next_out_utf8 = strings.utf8border(strm.output, strm.next_out);\n\n          let tail = strm.next_out - next_out_utf8;\n          let utf8str = strings.buf2string(strm.output, next_out_utf8);\n\n          // move tail & realign counters\n          strm.next_out = tail;\n          strm.avail_out = chunkSize - tail;\n          if (tail) strm.output.set(strm.output.subarray(next_out_utf8, next_out_utf8 + tail), 0);\n\n          this.onData(utf8str);\n\n        } else {\n          this.onData(strm.output.length === strm.next_out ? strm.output : strm.output.subarray(0, strm.next_out));\n        }\n      }\n    }\n\n    // Must repeat iteration if out buffer is full\n    if (status === Z_OK && last_avail_out === 0) continue;\n\n    // Finalize if end of stream reached.\n    if (status === Z_STREAM_END) {\n      status = inflate_1$2.inflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return true;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Inflate#onData(chunk) -> Void\n * - chunk (Uint8Array|String): output data. When string output requested,\n *   each chunk will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nInflate$1.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Inflate#onEnd(status) -> Void\n * - status (Number): inflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called either after you tell inflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nInflate$1.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK) {\n    if (this.options.to === 'string') {\n      this.result = this.chunks.join('');\n    } else {\n      this.result = common.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * inflate(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\n * format via wrapper header by default. That's why we don't provide\n * separate `ungzip` method.\n *\n * Supported options are:\n *\n * - windowBits\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako');\n * const input = pako.deflate(new Uint8Array([1,2,3,4,5,6,7,8,9]));\n * let output;\n *\n * try {\n *   output = pako.inflate(input);\n * } catch (err) {\n *   console.log(err);\n * }\n * ```\n **/\nfunction inflate$1(input, options) {\n  const inflator = new Inflate$1(options);\n\n  inflator.push(input);\n\n  // That will never happens, if you don't cheat with options :)\n  if (inflator.err) throw inflator.msg || messages[inflator.err];\n\n  return inflator.result;\n}\n\n\n/**\n * inflateRaw(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * The same as [[inflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction inflateRaw$1(input, options) {\n  options = options || {};\n  options.raw = true;\n  return inflate$1(input, options);\n}\n\n\n/**\n * ungzip(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Just shortcut to [[inflate]], because it autodetects format\n * by header.content. Done for convenience.\n **/\n\n\nvar Inflate_1$1 = Inflate$1;\nvar inflate_2 = inflate$1;\nvar inflateRaw_1$1 = inflateRaw$1;\nvar ungzip$1 = inflate$1;\nvar constants = constants$2;\n\nvar inflate_1$1 = {\n\tInflate: Inflate_1$1,\n\tinflate: inflate_2,\n\tinflateRaw: inflateRaw_1$1,\n\tungzip: ungzip$1,\n\tconstants: constants\n};\n\nconst { Deflate, deflate, deflateRaw, gzip } = deflate_1$1;\n\nconst { Inflate, inflate, inflateRaw, ungzip } = inflate_1$1;\n\n\n\nvar Deflate_1 = Deflate;\nvar deflate_1 = deflate;\nvar deflateRaw_1 = deflateRaw;\nvar gzip_1 = gzip;\nvar Inflate_1 = Inflate;\nvar inflate_1 = inflate;\nvar inflateRaw_1 = inflateRaw;\nvar ungzip_1 = ungzip;\nvar constants_1 = constants$2;\n\nvar pako = {\n\tDeflate: Deflate_1,\n\tdeflate: deflate_1,\n\tdeflateRaw: deflateRaw_1,\n\tgzip: gzip_1,\n\tInflate: Inflate_1,\n\tinflate: inflate_1,\n\tinflateRaw: inflateRaw_1,\n\tungzip: ungzip_1,\n\tconstants: constants_1\n};\n\nexport { Deflate_1 as Deflate, Inflate_1 as Inflate, constants_1 as constants, pako as default, deflate_1 as deflate, deflateRaw_1 as deflateRaw, gzip_1 as gzip, inflate_1 as inflate, inflateRaw_1 as inflateRaw, ungzip_1 as ungzip };\n","import o from \"@tutao/otest\"\nimport { Deflater } from \"../../../../../src/common/api/worker/pdf/Deflater.js\"\nimport pako from \"pako\"\n\no.spec(\"Deflater\", function () {\n\to(\"correctly deflate\", async function () {\n\t\tconst input = new Uint8Array([1, 7, 35, 232])\n\t\tconst expected = pako.deflate(input)\n\t\tconst actual = await new Deflater().deflate(input)\n\t\to(actual).deepEquals(expected)\n\t})\n})\n","import o from \"@tutao/otest\"\nimport { PdfWriter } from \"../../../../../src/common/api/worker/pdf/PdfWriter.js\"\nimport { PDF_DEFAULT_OBJECTS, PdfDictValue } from \"../../../../../src/common/api/worker/pdf/PdfConstants.js\"\nimport { mapToObject } from \"@tutao/tutanota-test-utils\"\nimport { PdfObject } from \"../../../../../src/common/api/worker/pdf/PdfObject.js\"\n\no.spec(\"PdfWriter\", function () {\n\tconst textEncoder = new TextEncoder()\n\n\to(\"Correctly parse object references to reference strings\", function () {\n\t\tconst writer = new PdfWriter(textEncoder, fetch)\n\t\twriter.createObject(PDF_DEFAULT_OBJECTS[0].dictionary, PDF_DEFAULT_OBJECTS[0].refId)\n\t\twriter.createObject(new Map(), \"PAGES\")\n\t\twriter.createObject(new Map(), \"PAGE1\")\n\n\t\to(writer.pdfReferenceToString({ refId: \"CATALOG\" })).equals(\"1 0 R\")\n\t\to(writer.pdfReferenceToString({ refId: \"PAGES\" })).equals(\"2 0 R\")\n\t\to(writer.pdfReferenceToString({ refId: \"PAGE1\" })).equals(\"3 0 R\")\n\t\to(writer.pdfListToString([{ refId: \"PAGE1\" }, { refId: \"CATALOG\" }])).equals(\"[ 3 0 R 1 0 R ]\")\n\t\to(writer.pdfListToString([{ refId: \"CATALOG\" }, { refId: \"PAGES\" }])).equals(\"[ 1 0 R 2 0 R ]\")\n\t\to(\n\t\t\twriter.pdfDictionaryToString(\n\t\t\t\tnew Map<string, PdfDictValue>([\n\t\t\t\t\t[\"ref\", { refId: \"CATALOG\" }],\n\t\t\t\t\t[\"nonRef\", \"meow\"],\n\t\t\t\t]),\n\t\t\t),\n\t\t).equals(\"<< /ref 1 0 R /nonRef meow >>\")\n\t\to(writer.pdfDictionaryToString(new Map<string, PdfDictValue>())).equals(\"<< >>\")\n\t})\n\n\to(\"Resolve deeply nested object references correctly\", function () {\n\t\tconst writer = new PdfWriter(textEncoder, fetch)\n\t\twriter.createObject(new Map(), \"ListRef\")\n\t\twriter.createObject(new Map(), \"RefVal\")\n\t\twriter.createObject(new Map(), \"NestedRefVal\")\n\t\twriter.createObject(new Map(), \"DeviousRefVal\")\n\n\t\tconst nestedMap = new Map<string, PdfDictValue>([\n\t\t\t[\"Foo\", \"Bar\"],\n\t\t\t[\"List\", [\"One\", \"Two\", { refId: \"ListRef\" }]],\n\t\t\t[\"Ref\", { refId: \"RefVal\" }],\n\t\t\t[\n\t\t\t\t\"Map\",\n\t\t\t\tnew Map<string, PdfDictValue>([\n\t\t\t\t\t[\"NestedFoo\", \"NestedBar\"],\n\t\t\t\t\t[\"NestedRef\", { refId: \"NestedRefVal\" }],\n\t\t\t\t]),\n\t\t\t],\n\t\t\t[\"SuperEvilListWithANestedDictionary\", [new Map<string, PdfDictValue>([[\"DeviousRef\", { refId: \"DeviousRefVal\" }]])]],\n\t\t])\n\n\t\to(mapToObject(writer.resolveReferences(nestedMap))).deepEquals(\n\t\t\tmapToObject(\n\t\t\t\tnew Map<string, string>([\n\t\t\t\t\t[\"Foo\", \"Bar\"],\n\t\t\t\t\t[\"List\", \"[ One Two 1 0 R ]\"],\n\t\t\t\t\t[\"Ref\", \"2 0 R\"],\n\t\t\t\t\t[\"Map\", \"<< /NestedFoo NestedBar /NestedRef 3 0 R >>\"],\n\t\t\t\t\t[\"SuperEvilListWithANestedDictionary\", \"[ << /DeviousRef 4 0 R >> ]\"],\n\t\t\t\t]),\n\t\t\t),\n\t\t)\n\t})\n\n\to(\"Can retrieve objects with a refId\", function () {\n\t\tconst writer = new PdfWriter(textEncoder, fetch)\n\t\twriter.createObject(new Map(), \"Pablo\")\n\t\twriter.createObject(new Map(), \"Valerie\")\n\n\t\to(writer.getObjectByRefId(\"Pablo\")).deepEquals(new PdfObject(1, new Map()))\n\t\to(writer.getObjectByRefId(\"Valerie\")).deepEquals(new PdfObject(2, new Map()))\n\t\to(() => writer.getObjectByRefId(\"Zach\")).throws(Error)\n\t})\n\n\to(\"Xref table is created correctly\", function () {\n\t\tconst writer = new PdfWriter(textEncoder, fetch)\n\t\t// Xref with only the zero object\n\t\to(writer.makeXRefTable()).equals(\"xref\\n0 1\\n0000000000 65535 f \\n\")\n\n\t\t// Xref with unresolved byte-positions throws\n\t\twriter.createObject(new Map(), \"CATALOG\")\n\t\to(() => writer.makeXRefTable()).throws(Error)\n\n\t\t// Xref with one object and correct byte-positions. Byte-position for an empty object must be 15\n\t\tconst generatedObject = writer.getObjectByRefId(\"CATALOG\")\n\t\twriter.calculateBytePositions(generatedObject, generatedObject.encodeToUInt8Array(textEncoder))\n\t\to(writer.makeXRefTable()).equals(`xref\\n0 2\\n0000000000 65535 f \\n0000000015 00000 n \\n`)\n\t})\n\n\to(\"Trailer is created correctly\", function () {\n\t\tconst writer = new PdfWriter(textEncoder, fetch)\n\t\tconst now = Date.now().toString()\n\n\t\t// empty trailer throws because no refId to catalog\n\t\to(() => writer.makeTrailer(now)).throws(Error)\n\n\t\twriter.createObject(new Map(), \"CATALOG\")\n\t\to(writer.makeTrailer(now)).equals(`trailer\\n<<\\n/Size 2/Root 1 0 R/ID [(${now})(${now})]\\n>>\\nstartxref\\n15\\n%%EOF`)\n\t})\n})\n","import o from \"@tutao/otest\"\nimport { PdfObject } from \"../../../../../src/common/api/worker/pdf/PdfObject.js\"\nimport { PdfDictValue, PdfStreamEncoding } from \"../../../../../src/common/api/worker/pdf/PdfConstants.js\"\nimport { PdfStreamObject } from \"../../../../../src/common/api/worker/pdf/PdfStreamObject.js\"\n\no.spec(\"PdfObject\", function () {\n\tconst emptyObject = new PdfObject(3, new Map<string, PdfDictValue>())\n\tconst someObject = new PdfObject(\n\t\t92,\n\t\tnew Map<string, PdfDictValue>([\n\t\t\t[\"Key1\", \"Val1\"],\n\t\t\t[\"Key2\", \"[ meow ]\"],\n\t\t]),\n\t)\n\tconst forbiddenObject = new PdfObject(\n\t\t2,\n\t\tnew Map<string, PdfDictValue>([\n\t\t\t[\"Key1\", \"Val1\"],\n\t\t\t[\"Key2\", { refId: \"UNRESOLVED\" }],\n\t\t]),\n\t)\n\tconst streamObject = new PdfStreamObject(\n\t\t45,\n\t\tnew Map<string, PdfDictValue>([\n\t\t\t[\"Kiwi\", \"Valorant\"],\n\t\t\t[\"Banana\", \"Apple\"],\n\t\t]),\n\t\tnew Uint8Array([34, 32, 30]),\n\t\tPdfStreamEncoding.DCT,\n\t)\n\n\to(\"PDF object head is properly generated\", function () {\n\t\to(emptyObject.parseObjectHead()).equals(\"3 0 obj\\n<<\\n\\n>>\\n\")\n\t\to(someObject.parseObjectHead()).equals(\"92 0 obj\\n<<\\n/Key1 Val1/Key2 [ meow ]\\n>>\\n\")\n\t\to(streamObject.parseObjectHead()).equals(\"45 0 obj\\n<<\\n/Kiwi Valorant/Banana Apple/Filter /DCTDecode/Length 3\\n>>\\nstream\\n\")\n\t\to(() => forbiddenObject.parseObjectHead()).throws(Error)\n\t})\n\n\to(\"PDF object tail is properly generated\", function () {\n\t\to(emptyObject.parseObjectTail()).equals(\"endobj\\n\")\n\t\to(someObject.parseObjectTail()).equals(\"endobj\\n\")\n\t\to(streamObject.parseObjectTail()).equals(\"\\nendstream\\nendobj\\n\")\n\t})\n\n\to(\"Stream objects create correct stream-related dictionary keys\", function () {\n\t\tconst streamO1 = new PdfStreamObject(69, new Map<string, PdfDictValue>([]), new Uint8Array([1, 2, 3, 4, 5]), PdfStreamEncoding.FLATE)\n\t\tconst streamO2 = new PdfStreamObject(420, new Map<string, PdfDictValue>([]), new Uint8Array([1, 2, 3]), PdfStreamEncoding.NONE)\n\n\t\to(streamO1.parseObjectHead()).equals(\"69 0 obj\\n<<\\n/Filter /FlateDecode/Length 5\\n>>\\nstream\\n\")\n\t\to(streamO2.parseObjectHead()).equals(\"420 0 obj\\n<<\\n/Length 3\\n>>\\nstream\\n\")\n\t})\n})\n","import o from \"@tutao/otest\"\nimport { areStringPartsOneByteLength } from \"../../../../../src/common/api/worker/pdf/PdfDocument.js\"\n\no.spec(\"PdfDocument\", function () {\n\to(\"Chars with over one byteLength are detected in StringParts\", async function () {\n\t\to(areStringPartsOneByteLength(\"Hello World\".split(\"\"))).equals(true)\n\t\to(areStringPartsOneByteLength(\"ÄäÖöÜü\".split(\"\"))).equals(true)\n\t\to(areStringPartsOneByteLength(`\"'That's Wrong!'\";.,`.split(\"\"))).equals(true)\n\t\to(areStringPartsOneByteLength(\"Wybieram się w podróż do Stambułu\".split(\"\"))).equals(false)\n\t\to(areStringPartsOneByteLength(\"我要去伊斯坦布尔旅行\".split(\"\"))).equals(false)\n\t\to(areStringPartsOneByteLength(\"𱁬\".split(\"\"))).equals(false)\n\t})\n})\n","import { createTestEntity } from \"../../../TestUtils.js\"\nimport { InvoiceDataItemTypeRef } from \"../../../../../src/common/api/entities/sys/TypeRefs.js\"\n\n/**\n * Produces a bulk list of mocked InvoiceItems\n * @param amountOfEntries\n */\nexport function invoiceItemListMock(amountOfEntries: number) {\n\tconst data: any = []\n\tfor (let i = 0; i < amountOfEntries; i++) {\n\t\tdata.push(\n\t\t\tcreateTestEntity(InvoiceDataItemTypeRef, {\n\t\t\t\tamount: `${i}`,\n\t\t\t\tstartDate: new Date(\"09.09.1984\"),\n\t\t\t\tendDate: new Date(\"09.09.1984\"),\n\t\t\t\tsinglePrice: \"10.00\",\n\t\t\t\ttotalPrice: \"10.00\",\n\t\t\t\titemType: \"25\",\n\t\t\t}),\n\t\t)\n\t}\n\treturn data\n}\n","import o from \"@tutao/otest\"\nimport { PdfWriter } from \"../../../../../src/common/api/worker/pdf/PdfWriter.js\"\nimport { createTestEntity } from \"../../../TestUtils.js\"\nimport { InvoiceDataGetOutTypeRef } from \"../../../../../src/common/api/entities/sys/TypeRefs.js\"\nimport { PdfInvoiceGenerator } from \"../../../../../src/common/api/worker/invoicegen/PdfInvoiceGenerator.js\"\nimport { object, when } from \"testdouble\"\nimport { invoiceItemListMock } from \"./invoiceTestUtils.js\"\nimport { PaymentMethod, VatType } from \"../../../../../src/common/api/worker/invoicegen/InvoiceUtils.js\"\n\no.spec(\"PdfInvoiceGenerator\", function () {\n\tlet pdfWriter: PdfWriter\n\to.beforeEach(function () {\n\t\tpdfWriter = new PdfWriter(new TextEncoder(), fetchStub)\n\t})\n\n\to(\"pdf generation for japanese invoice addVat 3_items\", async function () {\n\t\tconst invoiceData = createTestEntity(InvoiceDataGetOutTypeRef, {\n\t\t\taddress: \"竜宮 礼奈\\n荻町, 411,\\n〒501-5627 Shirakawa, Ono-Gun, Gifu, Japan\",\n\t\t\tcountry: \"JP\",\n\t\t\tsubTotal: \"28.00\",\n\t\t\tgrandTotal: \"28.00\",\n\t\t\tvatType: VatType.ADD_VAT,\n\t\t\tvatIdNumber: \"JP999999999\",\n\t\t\tpaymentMethod: PaymentMethod.INVOICE,\n\t\t\titems: invoiceItemListMock(3),\n\t\t})\n\n\t\tconst gen = new PdfInvoiceGenerator(pdfWriter, invoiceData, \"1978197819801981931\", \"NiiNii\")\n\t\tconst pdf = await gen.generate()\n\t\t//fs.writeFileSync(\"/tmp/tuta_jp_invoice_noVat_3.pdf\", pdf, { flag: \"w\" })\n\t})\n\n\to(\"pdf generation for russian invoice vatReverseCharge 4_items\", async function () {\n\t\tconst renderInvoice = createTestEntity(InvoiceDataGetOutTypeRef, {\n\t\t\taddress: \"CompanyRU\\n194352, Санкт-Петербург\\nСиреневый бульвар, д. 8, корп. 2, лит. А.\",\n\t\t\tcountry: \"RU\",\n\t\t\titems: invoiceItemListMock(2),\n\t\t\tvatType: \"4\",\n\t\t\tvat: \"0\",\n\t\t\tvatRate: \"0\",\n\t\t\tvatIdNumber: \"1111_2222_3333_4444\",\n\t\t})\n\t\tconst gen = new PdfInvoiceGenerator(pdfWriter, renderInvoice, \"1978197819801981931\", \"NiiNii\")\n\t\tconst pdf = await gen.generate()\n\t\t//fs.writeFileSync(\"/tmp/tuta_ru_invoice_vatReverse_4.pdf\", pdf, { flag: \"w\" })\n\t})\n\n\to(\"pdf rendering with 100 entries\", async function () {\n\t\tconst invoiceData = createTestEntity(InvoiceDataGetOutTypeRef, {\n\t\t\taddress: \"Marcel Davis\",\n\t\t\tcountry: \"DE\",\n\t\t\tvatRate: \"19\",\n\t\t\tvatType: \"1\",\n\t\t\tvat: \"1\",\n\t\t\titems: invoiceItemListMock(100),\n\t\t})\n\n\t\tconst gen = new PdfInvoiceGenerator(pdfWriter, invoiceData, \"1978197819801981931\", \"NiiNii\")\n\t\tconst pdf = await gen.generate()\n\t\t//fs.writeFileSync(\"/tmp/tuta_100_entries.pdf\", pdf, { flag: \"w\" })\n\t})\n\n\to(\"pdf rendering with max entries to be put on first page\", async function () {\n\t\tconst renderInvoice = createTestEntity(InvoiceDataGetOutTypeRef, {\n\t\t\taddress: \"Peter Lustig\",\n\t\t\tcountry: \"DE\",\n\t\t\titems: invoiceItemListMock(13),\n\t\t})\n\t\tconst gen = new PdfInvoiceGenerator(pdfWriter, renderInvoice, \"1978197819801981931\", \"NiiNii\")\n\t\tconst pdf = await gen.generate()\n\t\t//fs.writeFileSync(\"/tmp/tuta_max_single_page_test.pdf\", pdf, { flag: \"w\" })\n\t})\n})\n\nasync function fetchStub(input: RequestInfo | URL, init?: RequestInit): Promise<Response> {\n\tif (globalThis.isBrowser) {\n\t\treturn fetch(\"./resources/pdf/\" + input.toString())\n\t} else {\n\t\tconst [fs, path] = await Promise.all([import(\"node:fs\"), import(\"node:path\")])\n\t\tconst resourceFile = path.normalize(process.cwd() + \"/../resources\" + input.toString())\n\t\tconst response: Response = object()\n\t\twhen(response.arrayBuffer()).thenResolve(fs.readFileSync(resourceFile))\n\t\treturn response\n\t}\n}\n","import o from \"@tutao/otest\"\nimport { createTestEntity } from \"../../../TestUtils.js\"\nimport { InvoiceDataGetOutTypeRef, InvoiceDataItemTypeRef } from \"../../../../../src/common/api/entities/sys/TypeRefs.js\"\nimport { extractCityName, extractPostalCode, XRechnungInvoiceGenerator } from \"../../../../../src/common/api/worker/invoicegen/XRechnungInvoiceGenerator.js\"\n\nimport { InvoiceItemType, InvoiceType, PaymentMethod, VatType } from \"../../../../../src/common/api/worker/invoicegen/InvoiceUtils.js\"\n\no.spec(\"XRechnungInvoiceGenerator\", function () {\n\to(\"xrechnung generation for japanese invoice noVat 2_items\", async function () {\n\t\tconst invoiceData = createTestEntity(InvoiceDataGetOutTypeRef, {\n\t\t\taddress: \"竜宮 礼奈\\n荻町, 411,\\n〒501-5627 Shirakawa, Ono-Gun, Gifu, Japan\",\n\t\t\tcountry: \"JP\",\n\t\t\tsubTotal: \"20.00\",\n\t\t\tgrandTotal: \"20.00\",\n\t\t\tvatType: VatType.NO_VAT,\n\t\t\tpaymentMethod: PaymentMethod.INVOICE,\n\t\t\titems: [\n\t\t\t\tcreateTestEntity(InvoiceDataItemTypeRef, {\n\t\t\t\t\tamount: `1`,\n\t\t\t\t\tstartDate: new Date(\"09.09.1984\"),\n\t\t\t\t\tendDate: new Date(\"09.09.1984\"),\n\t\t\t\t\tsinglePrice: \"10.00\",\n\t\t\t\t\ttotalPrice: \"10.00\",\n\t\t\t\t\titemType: \"25\",\n\t\t\t\t}),\n\t\t\t\tcreateTestEntity(InvoiceDataItemTypeRef, {\n\t\t\t\t\tamount: `1`,\n\t\t\t\t\tstartDate: new Date(\"09.09.1984\"),\n\t\t\t\t\tendDate: new Date(\"09.09.1984\"),\n\t\t\t\t\tsinglePrice: \"10.00\",\n\t\t\t\t\ttotalPrice: \"10.00\",\n\t\t\t\t\titemType: \"25\",\n\t\t\t\t}),\n\t\t\t],\n\t\t})\n\t\tconst gen = new XRechnungInvoiceGenerator(invoiceData, \"1978197819801981931\", \"MyCustomerId\", \"test@tutao.de\")\n\t\tconst xml = gen.generate()\n\t\t//fs.writeFileSync(\"/tmp/xtuta_jp_invoice_noVat_2.xml\", xml, { flag: \"w\" })\n\t})\n\n\to(\"xrechnung generation for german paypal addVat 3_items\", async function () {\n\t\tconst invoiceData = createTestEntity(InvoiceDataGetOutTypeRef, {\n\t\t\taddress: \"Bernd Brot\\nNeuschauerberg 56\\n91488 Emskirchen\",\n\t\t\tcountry: \"DE\",\n\t\t\tsubTotal: \"60.00\",\n\t\t\tgrandTotal: \"71.40\",\n\t\t\tvatRate: \"19\",\n\t\t\tvat: \"11.40\",\n\t\t\tvatIdNumber: \"DE12345678912345678912\",\n\t\t\tvatType: VatType.ADD_VAT,\n\t\t\tpaymentMethod: PaymentMethod.PAYPAL,\n\t\t\titems: [\n\t\t\t\tcreateTestEntity(InvoiceDataItemTypeRef, {\n\t\t\t\t\tamount: \"4\",\n\t\t\t\t\tstartDate: new Date(\"11.11.1999\"),\n\t\t\t\t\tendDate: new Date(\"12.31.2000\"),\n\t\t\t\t\tsinglePrice: \"10.00\",\n\t\t\t\t\ttotalPrice: \"40.00\",\n\t\t\t\t\titemType: \"21\",\n\t\t\t\t}),\n\t\t\t\tcreateTestEntity(InvoiceDataItemTypeRef, {\n\t\t\t\t\tamount: \"2\",\n\t\t\t\t\tstartDate: new Date(\"09.09.1984\"),\n\t\t\t\t\tendDate: new Date(\"09.09.1984\"),\n\t\t\t\t\tsinglePrice: \"5.00\",\n\t\t\t\t\ttotalPrice: \"10.00\",\n\t\t\t\t\titemType: \"9\",\n\t\t\t\t}),\n\t\t\t\tcreateTestEntity(InvoiceDataItemTypeRef, {\n\t\t\t\t\tamount: \"1\",\n\t\t\t\t\tstartDate: new Date(\"09.09.1984\"),\n\t\t\t\t\tendDate: new Date(\"09.09.1984\"),\n\t\t\t\t\tsinglePrice: \"10.00\",\n\t\t\t\t\ttotalPrice: \"10.00\",\n\t\t\t\t\titemType: \"12\",\n\t\t\t\t}),\n\t\t\t],\n\t\t})\n\t\tconst gen = new XRechnungInvoiceGenerator(invoiceData, \"1978197819801981931\", \"MyCustomerId\", \"test@tutao.de\")\n\t\tconst xml = gen.generate()\n\t\t//fs.writeFileSync(\"/tmp/xtuta_de_paypal_addVat_3.xml\", xml, { flag: \"w\" })\n\t})\n\n\to(\"xrechnung generation for german accountBalance vatIncludedHidden 1_items\", async function () {\n\t\tconst invoiceData = createTestEntity(InvoiceDataGetOutTypeRef, {\n\t\t\taddress: \"Klappriger Klabautermann\\nMariendorfer Hof 971\\n12107 Berlin\",\n\t\t\tcountry: \"DE\",\n\t\t\tsubTotal: \"36.00\",\n\t\t\tgrandTotal: \"36.00\",\n\t\t\tvatRate: \"19\",\n\t\t\tvat: \"5.75\",\n\t\t\tvatIdNumber: \"DE12345678912345678912\",\n\t\t\tvatType: VatType.VAT_INCLUDED_HIDDEN,\n\t\t\tpaymentMethod: PaymentMethod.ACCOUNT_BALANCE,\n\t\t\titems: [\n\t\t\t\tcreateTestEntity(InvoiceDataItemTypeRef, {\n\t\t\t\t\tamount: \"1\",\n\t\t\t\t\tstartDate: new Date(\"11.11.1999\"),\n\t\t\t\t\tendDate: new Date(\"12.31.2000\"),\n\t\t\t\t\tsinglePrice: \"36.00\",\n\t\t\t\t\ttotalPrice: \"36.00\",\n\t\t\t\t\titemType: \"21\",\n\t\t\t\t}),\n\t\t\t],\n\t\t})\n\t\tconst gen = new XRechnungInvoiceGenerator(invoiceData, \"1978197819801981931\", \"MyCustomerId\", \"test@tutao.de\")\n\t\tconst xml = gen.generate()\n\t\t//fs.writeFileSync(\"/tmp/xtuta_de_accountBalance_includedVat_2.xml\", xml, { flag: \"w\" })\n\t})\n\n\to(\"xrechnung generation for russia noVatReverse creditCard addVat 1_items\", async function () {\n\t\tconst invoiceData = createTestEntity(InvoiceDataGetOutTypeRef, {\n\t\t\taddress: \"CompanyRU\\n194352, Санкт-Петербург\\nСиреневый бульвар, д. 8, корп. 2, лит. А.\",\n\t\t\tcountry: \"RU\",\n\t\t\tsubTotal: \"30.00\",\n\t\t\tgrandTotal: \"30.00\",\n\t\t\tvatType: VatType.NO_VAT_CHARGE_TUTAO, // Needs fix @arm, @jug, @jop\n\t\t\tvatRate: \"0\",\n\t\t\tvat: \"0\",\n\t\t\tvatIdNumber: \"RU1234567891\",\n\t\t\tpaymentMethod: PaymentMethod.CREDIT_CARD,\n\t\t\titems: [\n\t\t\t\tcreateTestEntity(InvoiceDataItemTypeRef, {\n\t\t\t\t\tamount: \"3\",\n\t\t\t\t\tstartDate: new Date(\"09.09.1984\"),\n\t\t\t\t\tendDate: new Date(\"09.09.1984\"),\n\t\t\t\t\tsinglePrice: \"10.00\",\n\t\t\t\t\ttotalPrice: \"30.00\",\n\t\t\t\t\titemType: \"12\",\n\t\t\t\t}),\n\t\t\t],\n\t\t})\n\t\tconst gen = new XRechnungInvoiceGenerator(invoiceData, \"1978197819801981931\", \"MyCustomerId\", \"test@tutao.de\")\n\t\tconst xml = gen.generate()\n\t\t//fs.writeFileSync(\"/tmp/xtuta_ru_creditCard_noVatReverseCharge_3.xml\", xml, { flag: \"w\" })\n\t})\n\n\to(\"xrechnung generation for credit note\", async function () {\n\t\tconst invoiceData = createTestEntity(InvoiceDataGetOutTypeRef, {\n\t\t\taddress: \"Malte Kieselstein\\nLudwigstraße 6\\nHanau-Steinheim\",\n\t\t\tinvoiceType: InvoiceType.CREDIT,\n\t\t\tcountry: \"DE\",\n\t\t\tsubTotal: \"14.40\",\n\t\t\tgrandTotal: \"17.14\",\n\t\t\tvatType: VatType.ADD_VAT,\n\t\t\tvatRate: \"19\",\n\t\t\tvat: \"2.74\",\n\t\t\tvatIdNumber: \"DE12345678912345678912\",\n\t\t\tpaymentMethod: PaymentMethod.ACCOUNT_BALANCE,\n\t\t\titems: [\n\t\t\t\tcreateTestEntity(InvoiceDataItemTypeRef, {\n\t\t\t\t\tamount: \"1\",\n\t\t\t\t\tstartDate: new Date(\"09.09.1984\"),\n\t\t\t\t\tendDate: new Date(\"09.09.1984\"),\n\t\t\t\t\tsinglePrice: \"14.40\",\n\t\t\t\t\ttotalPrice: \"14.40\",\n\t\t\t\t\titemType: InvoiceItemType.Credit,\n\t\t\t\t}),\n\t\t\t],\n\t\t})\n\t\tconst gen = new XRechnungInvoiceGenerator(invoiceData, \"1978197819801981931\", \"MyCustomerId\", \"test@tutao.de\")\n\t\tconst xml = gen.generate()\n\t\t//fs.writeFileSync(\"/tmp/xtuta_credit.xml\", xml, { flag: \"w\" })\n\t})\n\n\to(\"xrechnung generation for discount\", async function () {\n\t\tconst invoiceData = createTestEntity(InvoiceDataGetOutTypeRef, {\n\t\t\taddress: \"يورك هاوس، شييت ستريت،\\n\" + \"وندسور SL4 1DD، المملكة المتحدة،‎\",\n\t\t\tinvoiceType: InvoiceType.INVOICE,\n\t\t\tcountry: \"AE\",\n\t\t\tsubTotal: \"30.00\",\n\t\t\tgrandTotal: \"33.00\",\n\t\t\tvatType: VatType.ADD_VAT,\n\t\t\tvatRate: \"10\",\n\t\t\tvat: \"3.00\",\n\t\t\tvatIdNumber: \"AE12345678912345678912\",\n\t\t\tpaymentMethod: PaymentMethod.ACCOUNT_BALANCE,\n\t\t\titems: [\n\t\t\t\tcreateTestEntity(InvoiceDataItemTypeRef, {\n\t\t\t\t\tamount: \"1\",\n\t\t\t\t\tstartDate: new Date(\"09.09.1984\"),\n\t\t\t\t\tendDate: new Date(\"09.09.1984\"),\n\t\t\t\t\tsinglePrice: \"30.00\",\n\t\t\t\t\ttotalPrice: \"30.00\",\n\t\t\t\t\titemType: InvoiceItemType.LegendAccount,\n\t\t\t\t}),\n\t\t\t\tcreateTestEntity(InvoiceDataItemTypeRef, {\n\t\t\t\t\tamount: \"3\",\n\t\t\t\t\tstartDate: new Date(\"09.09.1984\"),\n\t\t\t\t\tendDate: new Date(\"09.09.1984\"),\n\t\t\t\t\tsinglePrice: \"10.00\",\n\t\t\t\t\ttotalPrice: \"30.00\",\n\t\t\t\t\titemType: InvoiceItemType.WhitelabelChild,\n\t\t\t\t}),\n\t\t\t\tcreateTestEntity(InvoiceDataItemTypeRef, {\n\t\t\t\t\tamount: \"1\",\n\t\t\t\t\tstartDate: new Date(\"09.09.1984\"),\n\t\t\t\t\tendDate: new Date(\"09.09.1984\"),\n\t\t\t\t\tsinglePrice: \"-30.00\",\n\t\t\t\t\ttotalPrice: \"-30.00\",\n\t\t\t\t\titemType: InvoiceItemType.Discount,\n\t\t\t\t}),\n\t\t\t],\n\t\t})\n\t\tconst gen = new XRechnungInvoiceGenerator(invoiceData, \"1978197819801981931\", \"MyCustomerId\", \"test@tutao.de\")\n\t\tconst xml = gen.generate()\n\t\t//fs.writeFileSync(\"/tmp/xtuta_discount.xml\", xml, { flag: \"w\" })\n\t})\n\n\to(\"xrechnung generation for multi discount\", async function () {\n\t\tconst invoiceData = createTestEntity(InvoiceDataGetOutTypeRef, {\n\t\t\taddress: \"Jarl Balgruuf\\nHolywood BT18 0AA\",\n\t\t\tinvoiceType: InvoiceType.INVOICE,\n\t\t\tcountry: \"DE\",\n\t\t\tsubTotal: \"8.30\",\n\t\t\tgrandTotal: \"8.30\",\n\t\t\tvatType: VatType.VAT_INCLUDED_SHOWN,\n\t\t\tvatRate: \"19\",\n\t\t\tvat: \"1.27\",\n\t\t\tvatIdNumber: \"DE12345678912345678912\",\n\t\t\tpaymentMethod: PaymentMethod.ACCOUNT_BALANCE,\n\t\t\titems: [\n\t\t\t\tcreateTestEntity(InvoiceDataItemTypeRef, {\n\t\t\t\t\tamount: \"1\",\n\t\t\t\t\tstartDate: new Date(\"09.09.1984\"),\n\t\t\t\t\tendDate: new Date(\"09.09.1984\"),\n\t\t\t\t\tsinglePrice: \"20.30\",\n\t\t\t\t\ttotalPrice: \"20.30\",\n\t\t\t\t\titemType: InvoiceItemType.Credit,\n\t\t\t\t}),\n\t\t\t\tcreateTestEntity(InvoiceDataItemTypeRef, {\n\t\t\t\t\tamount: \"1\",\n\t\t\t\t\tstartDate: new Date(\"09.09.1984\"),\n\t\t\t\t\tendDate: new Date(\"09.09.1984\"),\n\t\t\t\t\tsinglePrice: \"-10.50\",\n\t\t\t\t\ttotalPrice: \"-10.50\",\n\t\t\t\t\titemType: InvoiceItemType.Discount,\n\t\t\t\t}),\n\t\t\t\tcreateTestEntity(InvoiceDataItemTypeRef, {\n\t\t\t\t\tamount: \"1\",\n\t\t\t\t\tstartDate: new Date(\"09.09.1984\"),\n\t\t\t\t\tendDate: new Date(\"09.09.1984\"),\n\t\t\t\t\tsinglePrice: \"-1.50\",\n\t\t\t\t\ttotalPrice: \"-1.50\",\n\t\t\t\t\titemType: InvoiceItemType.Discount,\n\t\t\t\t}),\n\t\t\t],\n\t\t})\n\t\tconst gen = new XRechnungInvoiceGenerator(invoiceData, \"1978197819801981931\", \"MyCustomerId\", \"test@tutao.de\")\n\t\tconst xml = gen.generate()\n\t\t//fs.writeFileSync(\"/tmp/xtuta_multi_discount.xml\", xml, { flag: \"w\" })\n\t})\n\n\to(\"extractPostalCode\", function () {\n\t\tconst line1 = \"Berlin, 12107\"\n\t\to(extractPostalCode(line1)).equals(\"12107\")\n\n\t\tconst line2 = \"Neustadt a.d. Aisch 91413\"\n\t\to(extractPostalCode(line2)).equals(\"91413\")\n\n\t\tconst line3 = \"94188 Emskirchen\"\n\t\to(extractPostalCode(line3)).equals(\"94188\")\n\n\t\tconst line4 = \"Holywood BT18 0AA\"\n\t\to(extractPostalCode(line4)).equals(\"Could not extract postal code. Please refer to full address line.\")\n\n\t\tconst line5 = \"〒501-5627 Shirakawa, Ono-Gun, Gifu, Japan\"\n\t\to(extractPostalCode(line5)).equals(\"Could not extract postal code. Please refer to full address line.\")\n\t})\n\n\to(\"extractCityName\", function () {\n\t\tconst line1 = \"Berlin, 12107\"\n\t\to(extractCityName(line1).includes(\"Berlin\")).equals(true)\n\n\t\tconst line2 = \"Neustadt a.d. Aisch 91413\"\n\t\to(extractCityName(line2).includes(\"Neustadt a.d. Aisch\")).equals(true)\n\n\t\tconst line3 = \"94188 Emskirchen\"\n\t\to(extractCityName(line3).includes(\"Emskirchen\")).equals(true)\n\n\t\tconst line4 = \"Holywood BT18 0AA\"\n\t\to(extractCityName(line4).includes(\"Holywood\")).equals(true)\n\n\t\tconst line5 = \"〒501-5627 Shirakawa, Ono-Gun, Gifu, Japan\"\n\t\to(extractCityName(line5).includes(\"Shirakawa\")).equals(true)\n\t})\n})\n","import o from \"@tutao/otest\"\nimport { parseCaptchaInput } from \"../../../src/common/subscription/Captcha.js\"\n\no.spec(\"CaptchaInputParse\", function () {\n\to(\"invalid input\", function () {\n\t\to(parseCaptchaInput(\"nonsense\")).equals(null)\n\t\to(parseCaptchaInput(\"2:\")).equals(null)\n\t\to(parseCaptchaInput(\":::\")).equals(null)\n\t\to(parseCaptchaInput(\"\")).equals(null)\n\t\to(parseCaptchaInput(\"25:01\")).equals(null)\n\t\to(parseCaptchaInput(\"08:84\")).equals(null)\n\t\to(parseCaptchaInput(\"08:60\")).equals(null)\n\t})\n\to(\"single digit hour or minute\", function () {\n\t\to(parseCaptchaInput(\"1:1\")).equals(\"01:01\")\n\t\to(parseCaptchaInput(\"13:1\")).equals(\"01:01\")\n\t\to(parseCaptchaInput(\"01:1\")).equals(\"01:01\")\n\t\to(parseCaptchaInput(\"1:01\")).equals(\"01:01\")\n\t\to(parseCaptchaInput(\"2:00\")).equals(\"02:00\")\n\t})\n\to(\"hour 0\", function () {\n\t\to(parseCaptchaInput(\"24:00\")).equals(\"00:00\")\n\t\to(parseCaptchaInput(\"12:00\")).equals(\"00:00\")\n\t\to(parseCaptchaInput(\"00:00\")).equals(\"00:00\")\n\t\to(parseCaptchaInput(\"24:14\")).equals(\"00:14\")\n\t})\n\to(\"24 hour and 12 hour match\", function () {\n\t\to(parseCaptchaInput(\"13:01\")).equals(\"01:01\")\n\t\to(parseCaptchaInput(\"01:01\")).equals(\"01:01\")\n\t})\n})\n","import o from \"@tutao/otest\"\nimport { ContactFacade } from \"../../../../../src/common/api/worker/facades/lazy/ContactFacade.js\"\nimport { object, verify } from \"testdouble\"\nimport { EntityClient } from \"../../../../../src/common/api/common/EntityClient.js\"\nimport { createFilledContact } from \"../../../contacts/VCardExporterTest.js\"\n\no.spec(\"ContactFacadeTest\", function () {\n\tlet entityClient: EntityClient\n\to.before(() => {\n\t\tentityClient = object()\n\t})\n\n\to(\"the facade can import a list of clients\", async function () {\n\t\tconst facade = new ContactFacade(entityClient)\n\n\t\tconst contacts = [\n\t\t\tcreateFilledContact(\n\t\t\t\t\"Test\",\n\t\t\t\t\"User\",\n\t\t\t\t\"Hello World!\",\n\t\t\t\t\"Tutao\",\n\t\t\t\t\"Mr.\",\n\t\t\t\t\"Jung\",\n\t\t\t\t\"Lange\",\n\t\t\t\t\"Jr.\",\n\t\t\t\t\"It\",\n\t\t\t\t[\"jung@tuta.com\"],\n\t\t\t\t[\"93291381\"],\n\t\t\t\t[],\n\t\t\t\t[],\n\t\t\t\t[\"tutanota.com\"],\n\t\t\t),\n\t\t\tcreateFilledContact(\n\t\t\t\t\"Ant\",\n\t\t\t\t\"Ste\",\n\t\t\t\t\"Hello World!\",\n\t\t\t\t\"Tutao\",\n\t\t\t\t\"Mr.\",\n\t\t\t\t\"Buffalo\",\n\t\t\t\t\"Lange\",\n\t\t\t\t\"Jr.\",\n\t\t\t\t\"IT\",\n\t\t\t\t[\"antste@antste.de\", \"bentste@bentste.de\"],\n\t\t\t\t[\"123123123\", \"321321321\"],\n\t\t\t\t[\"diaspora.de\"],\n\t\t\t),\n\t\t]\n\n\t\tawait facade.importContactList(contacts, \"testId\")\n\t\tverify(entityClient.setupMultipleEntities(\"testId\", contacts))\n\t})\n})\n","import o from \"@tutao/otest\"\nimport { KeyRotationFacade } from \"../../../../../src/common/api/worker/facades/KeyRotationFacade.js\"\nimport { EntityClient } from \"../../../../../src/common/api/common/EntityClient.js\"\nimport { instance, matchers, object, verify, when } from \"testdouble\"\nimport { createTestEntity } from \"../../../TestUtils.js\"\nimport {\n\tAdminGroupKeyAuthenticationData,\n\tAdminGroupKeyAuthenticationDataTypeRef,\n\tAdminGroupKeyRotationPostIn,\n\tcreatePublicKeyGetOut,\n\tCustomer,\n\tCustomerTypeRef,\n\tGroup,\n\tGroupInfo,\n\tGroupInfoTypeRef,\n\tGroupKeyRotationData,\n\tGroupKeyRotationInfoGetOutTypeRef,\n\tGroupKeyRotationPostIn,\n\tGroupKeyUpdatesRefTypeRef,\n\tGroupMembershipTypeRef,\n\tGroupMemberTypeRef,\n\tGroupTypeRef,\n\tKeyPair,\n\tKeyPairTypeRef,\n\tKeyRotation,\n\tKeyRotationsRefTypeRef,\n\tKeyRotationTypeRef,\n\tPublicKeyGetIn,\n\tRecoverCodeData,\n\tSentGroupInvitationTypeRef,\n\tUser,\n\tUserAuthenticationTypeRef,\n\tUserGroupKeyRotationData,\n\tUserGroupRoot,\n\tUserGroupRootTypeRef,\n\tUserTypeRef,\n} from \"../../../../../src/common/api/entities/sys/TypeRefs.js\"\nimport {\n\tAes256Key,\n\tAesKey,\n\tbitArrayToUint8Array,\n\tcreateAuthVerifier,\n\tEncryptedPqKeyPairs,\n\tKEY_LENGTH_BYTES_AES_256,\n\tKyberPrivateKey,\n\tKyberPublicKey,\n\tPQKeyPairs,\n\tuint8ArrayToBitArray,\n} from \"@tutao/tutanota-crypto\"\nimport type { KeyLoaderFacade } from \"../../../../../src/common/api/worker/facades/KeyLoaderFacade.js\"\nimport type { PQFacade } from \"../../../../../src/common/api/worker/facades/PQFacade.js\"\nimport { IServiceExecutor } from \"../../../../../src/common/api/common/ServiceRequest.js\"\nimport { ServiceExecutor } from \"../../../../../src/common/api/worker/rest/ServiceExecutor.js\"\nimport {\n\tCryptoProtocolVersion,\n\tGroupKeyRotationType,\n\tGroupType,\n\tPublicKeyIdentifierType,\n\tShareCapability,\n} from \"../../../../../src/common/api/common/TutanotaConstants.js\"\nimport {\n\tAdminGroupKeyRotationService,\n\tGroupKeyRotationInfoService,\n\tGroupKeyRotationService,\n\tPublicKeyService,\n\tUserGroupKeyRotationService,\n} from \"../../../../../src/common/api/entities/sys/Services.js\"\nimport { CryptoFacade } from \"../../../../../src/common/api/worker/crypto/CryptoFacade.js\"\nimport { assertNotNull, findAllAndRemove, lazyAsync, lazyMemoized } from \"@tutao/tutanota-utils\"\nimport type { CryptoWrapper, VersionedEncryptedKey, VersionedKey } from \"../../../../../src/common/api/worker/crypto/CryptoWrapper.js\"\nimport { RecoverCodeFacade, RecoverData } from \"../../../../../src/common/api/worker/facades/lazy/RecoverCodeFacade.js\"\nimport { UserFacade } from \"../../../../../src/common/api/worker/facades/UserFacade.js\"\nimport { ShareFacade } from \"../../../../../src/common/api/worker/facades/lazy/ShareFacade.js\"\nimport { GroupManagementFacade } from \"../../../../../src/common/api/worker/facades/lazy/GroupManagementFacade.js\"\nimport { GroupInvitationPostData, InternalRecipientKeyDataTypeRef } from \"../../../../../src/common/api/entities/tutanota/TypeRefs.js\"\nimport { RecipientsNotFoundError } from \"../../../../../src/common/api/common/error/RecipientsNotFoundError.js\"\nimport { assertThrows, mockAttribute, spy } from \"@tutao/tutanota-test-utils\"\nimport { LockedError } from \"../../../../../src/common/api/common/error/RestError.js\"\nimport { AsymmetricCryptoFacade, convertToVersionedPublicKeys } from \"../../../../../src/common/api/worker/crypto/AsymmetricCryptoFacade.js\"\n\nconst { anything } = matchers\nconst PQ_SAFE_BITARRAY_KEY_LENGTH = KEY_LENGTH_BYTES_AES_256 / 4\n\nconst PW_KEY: AesKey = [0]\nPW_KEY.length = PQ_SAFE_BITARRAY_KEY_LENGTH\n\nconst CURRENT_USER_GROUP_KEY: VersionedKey = {\n\tobject: [1],\n\tversion: 0,\n}\nCURRENT_USER_GROUP_KEY.object.length = PQ_SAFE_BITARRAY_KEY_LENGTH\n\nconst CURRENT_ADMIN_GROUP_KEY: VersionedKey = {\n\tobject: [2],\n\tversion: 0,\n}\nCURRENT_ADMIN_GROUP_KEY.object.length = PQ_SAFE_BITARRAY_KEY_LENGTH\n\nconst NEW_USER_GROUP_KEY: VersionedKey = {\n\tobject: [3, 3, 3, 3],\n\tversion: 1,\n}\nconst NEW_ADMIN_GROUP_KEY: VersionedKey = {\n\tobject: [4],\n\tversion: 1,\n}\n\nconst RECOVER_CODE: Aes256Key = [8]\nconst RECOVER_CODE_VERIFIER = new Uint8Array([9])\nconst AUTH_VERIFIER = createAuthVerifier(PW_KEY)\nconst DISTRIBUTION_KEY = [10]\n\nconst CURRENT_USER_AREA_GROUP_KEY: VersionedKey = {\n\tobject: [11],\n\tversion: 0,\n}\n\nconst NEW_GROUP_KEY: VersionedKey = {\n\tobject: [12],\n\tversion: 1,\n}\nconst MEMBER1_BUCKET_KEY: Aes256Key = [13]\nconst MEMBER1_SESSION_KEY: Aes256Key = [14]\n\nconst OTHER_MEMBER_USER_GROUP_KEY: VersionedKey = {\n\tobject: [15],\n\tversion: 0,\n}\nOTHER_MEMBER_USER_GROUP_KEY.object.length = PQ_SAFE_BITARRAY_KEY_LENGTH\n\nconst MEMBER1_SESSION_KEY_ENC_NEW_USER_AREA_GROUP_KEY = new Uint8Array(MEMBER1_SESSION_KEY.concat(NEW_GROUP_KEY.object))\nconst MEMBER1_BUCKET_KEY_ENC_MEMBER1_SESSION_KEY = new Uint8Array(MEMBER1_BUCKET_KEY.concat(MEMBER1_SESSION_KEY))\nconst DISTRIBUTION_KEY_ENC_NEW_USER_GROUP_KEY = new Uint8Array(DISTRIBUTION_KEY.concat(NEW_USER_GROUP_KEY.object))\nconst CURRENT_ADMIN_GROUP_ENC_CURRENT_USER_GROUP_KEY: VersionedEncryptedKey = {\n\tkey: new Uint8Array(CURRENT_ADMIN_GROUP_KEY.object.concat(CURRENT_USER_GROUP_KEY.object)),\n\tencryptingKeyVersion: 0,\n}\nconst CURRENT_ADMIN_GROUP_ENC_CURRENT_ADMIN_GROUP_KEY: VersionedEncryptedKey = {\n\tkey: new Uint8Array(CURRENT_ADMIN_GROUP_KEY.object.concat(CURRENT_ADMIN_GROUP_KEY.object)),\n\tencryptingKeyVersion: 0,\n}\nconst PW_ENC_CURRENT_USER_GROUP_KEY: VersionedEncryptedKey = {\n\tkey: new Uint8Array(PW_KEY.concat(CURRENT_USER_GROUP_KEY.object)),\n\tencryptingKeyVersion: 0, // dummy\n}\nconst NEW_ADMIN_GROUP_ENC_NEW_USER_GROUP_KEY: VersionedEncryptedKey = {\n\tkey: new Uint8Array(NEW_ADMIN_GROUP_KEY.object.concat(NEW_USER_GROUP_KEY.object)),\n\tencryptingKeyVersion: 1,\n}\nconst NEW_ADMIN_GROUP_ENC_NEW_ADMIN_GROUP_KEY: VersionedEncryptedKey = {\n\tkey: new Uint8Array(NEW_ADMIN_GROUP_KEY.object.concat(NEW_ADMIN_GROUP_KEY.object)),\n\tencryptingKeyVersion: 1,\n}\nconst NEW_USER_GROUP_ENC_NEW_ADMIN_GROUP_KEY: VersionedEncryptedKey = {\n\tkey: new Uint8Array(NEW_USER_GROUP_KEY.object.concat(NEW_ADMIN_GROUP_KEY.object)),\n\tencryptingKeyVersion: 1,\n}\nconst NEW_ADMIN_GROUP_ENC_CURRENT_ADMIN_GROUP_KEY: VersionedEncryptedKey = {\n\tkey: new Uint8Array(NEW_ADMIN_GROUP_KEY.object.concat(CURRENT_ADMIN_GROUP_KEY.object)),\n\tencryptingKeyVersion: 1,\n}\n\nconst NEW_USER_GROUP_ENC_CURRENT_USER_GROUP_KEY: VersionedEncryptedKey = {\n\tkey: new Uint8Array(NEW_USER_GROUP_KEY.object.concat(CURRENT_USER_GROUP_KEY.object)),\n\tencryptingKeyVersion: 1,\n}\nconst PW_ENC_NEW_USER_GROUP_KEY: VersionedEncryptedKey = {\n\tkey: new Uint8Array(PW_KEY.concat(NEW_USER_GROUP_KEY.object)),\n\tencryptingKeyVersion: 0, // dummy\n}\nconst NEW_USER_GROUP_ENC_RECOVER_CODE_KEY: VersionedEncryptedKey = {\n\tkey: new Uint8Array(NEW_USER_GROUP_KEY.object.concat(RECOVER_CODE)),\n\tencryptingKeyVersion: 1,\n}\nconst RECOVER_CODE_ENC_NEW_USER_GROUP_KEY: VersionedEncryptedKey = {\n\tkey: new Uint8Array(RECOVER_CODE.concat(NEW_USER_GROUP_KEY.object)),\n\tencryptingKeyVersion: 0, // dummy\n}\n\nconst NEW_USER_AREA_GROUP_ENC_CURRENT_USER_AREA_GROUP_KEY: VersionedEncryptedKey = {\n\tkey: new Uint8Array(NEW_GROUP_KEY.object.concat(CURRENT_USER_AREA_GROUP_KEY.object)),\n\tencryptingKeyVersion: 1,\n}\n\nconst CURRENT_ADMIN_GROUP_ENC_NEW_USER_AREA_GROUP_KEY: VersionedEncryptedKey = {\n\tkey: new Uint8Array(CURRENT_ADMIN_GROUP_KEY.object.concat(NEW_GROUP_KEY.object)),\n\tencryptingKeyVersion: 0,\n}\n\nconst CURRENT_USER_GROUP_ENC_NEW_USER_AREA_GROUP_KEY: VersionedEncryptedKey = {\n\tkey: new Uint8Array(CURRENT_USER_GROUP_KEY.object.concat(NEW_GROUP_KEY.object)),\n\tencryptingKeyVersion: 0,\n}\n\nconst OTHER_USER_GROUP_ENC_NEW_SHARED_GROUP_KEY: VersionedEncryptedKey = {\n\tkey: new Uint8Array(OTHER_MEMBER_USER_GROUP_KEY.object.concat(NEW_GROUP_KEY.object)),\n\tencryptingKeyVersion: 0,\n}\n\nconst userId = \"userId\"\nconst userGroupId = \"userGroupId\"\nconst adminGroupId = \"adminGroupId\"\nconst someGroupId = \"someGroup\"\nconst usersCustomerGroupId = \"usersCustomerGroupId\"\nconst groupInfoElementId = \"groupInfo\"\nconst recoverCodeId = \"recoverCodeId\"\nconst keyRotationsListId = \"keyRotationsListId\"\nconst invitationsListId = \"invitationsListId\"\nconst groupKeyUpdatesListId = \"groupKeyUpdatesListId\"\n\nfunction prepareRecoverData(recoverData: RecoverData, recoverCodeFacade: RecoverCodeFacade) {\n\trecoverData = {\n\t\thexCode: \"hexCode\",\n\t\trecoverCodeEncUserGroupKey: NEW_USER_GROUP_ENC_RECOVER_CODE_KEY.key,\n\t\tuserKeyVersion: NEW_USER_GROUP_ENC_RECOVER_CODE_KEY.encryptingKeyVersion,\n\t\tuserEncRecoverCode: RECOVER_CODE_ENC_NEW_USER_GROUP_KEY.key,\n\t\trecoveryCodeVerifier: RECOVER_CODE_VERIFIER,\n\t}\n\twhen(recoverCodeFacade.getRawRecoverCode(PW_KEY)).thenResolve(RECOVER_CODE)\n\twhen(recoverCodeFacade.encryptRecoveryCode(RECOVER_CODE, NEW_USER_GROUP_KEY)).thenReturn(recoverData)\n}\n\nfunction verifyRecoverCodeData(userGroupKeyData: UserGroupKeyRotationData) {\n\tconst recoverCodeData: RecoverCodeData = assertNotNull(userGroupKeyData.recoverCodeData)\n\to(recoverCodeData.recoveryCodeVerifier).deepEquals(RECOVER_CODE_VERIFIER)\n\to(recoverCodeData.userKeyVersion).equals(String(NEW_USER_GROUP_ENC_RECOVER_CODE_KEY.encryptingKeyVersion))\n\to(recoverCodeData.userEncRecoveryCode).deepEquals(RECOVER_CODE_ENC_NEW_USER_GROUP_KEY.key)\n\to(recoverCodeData.recoveryCodeEncUserGroupKey).deepEquals(NEW_USER_GROUP_ENC_RECOVER_CODE_KEY.key)\n}\n\nfunction prepareUserKeyRotation(\n\tmocks: {\n\t\tserviceExecutor: IServiceExecutor\n\t\tcryptoWrapper: CryptoWrapper\n\t\tentityClient: EntityClient\n\t\tasymmetricCryptoFacade: AsymmetricCryptoFacade\n\t},\n\tkeyRotationFacade: KeyRotationFacade,\n\tuserGroup: Group,\n) {\n\tconst commonHash = new Uint8Array([1, 2])\n\tconst adminGeneratedHash = new Uint8Array([1, 2, 3])\n\tconst adminPubEccKey = new Uint8Array([0, 9, 9])\n\tconst pubEncSymKeyBytes = new Uint8Array([7, 7, 7])\n\n\tconst adminPubKyberKey = new Uint8Array([8, 8, 8])\n\n\tkeyRotationFacade.setPendingKeyRotations({\n\t\tpwKey: PW_KEY,\n\t\tadminOrUserGroupKeyRotation: createTestEntity(KeyRotationTypeRef, {\n\t\t\t_id: [keyRotationsListId, userGroupId],\n\t\t\ttargetKeyVersion: String(Number(userGroup.groupKeyVersion) + 1),\n\t\t\tgroupKeyRotationType: GroupKeyRotationType.User,\n\t\t\tadminGroupKeyAuthenticationData: createTestEntity(AdminGroupKeyAuthenticationDataTypeRef, {\n\t\t\t\tauthKeyEncAdminRotationHash: adminGeneratedHash,\n\t\t\t\tversion: \"1\",\n\t\t\t\tuserGroup: \"userGroup\",\n\t\t\t}),\n\t\t}),\n\t\tteamOrCustomerGroupKeyRotations: [],\n\t\tuserAreaGroupsKeyRotations: [],\n\t})\n\twhen(mocks.cryptoWrapper.aesDecrypt(matchers.anything(), matchers.anything(), true)).thenReturn(commonHash)\n\n\twhen(mocks.cryptoWrapper.sha256Hash(matchers.anything())).thenReturn(commonHash)\n\t// public key service request to get the admin keys\n\n\twhen(mocks.serviceExecutor.get(PublicKeyService, matchers.anything())).thenResolve({\n\t\tpubEccKey: adminPubEccKey,\n\t\tpubKyberKey: adminPubKyberKey,\n\t})\n\tconst customer = createTestEntity(CustomerTypeRef, { adminGroup: \"adminGroupId\" })\n\n\twhen(mocks.entityClient.load(CustomerTypeRef, matchers.anything())).thenResolve(customer)\n\twhen(mocks.asymmetricCryptoFacade.tutaCryptEncryptSymKey(matchers.anything(), matchers.anything(), matchers.anything())).thenResolve({\n\t\tpubEncSymKeyBytes,\n\t\tcryptoProtocolVersion: CryptoProtocolVersion.TUTA_CRYPT,\n\t\tsenderKeyVersion: 1,\n\t\trecipientKeyVersion: 1,\n\t})\n}\n\no.spec(\"KeyRotationFacadeTest\", function () {\n\tlet entityClientMock: EntityClient\n\tlet keyRotationFacade: KeyRotationFacade\n\tlet keyLoaderFacadeMock: KeyLoaderFacade\n\tlet pqFacadeMock: PQFacade\n\tlet serviceExecutorMock: IServiceExecutor\n\tlet userFacade: UserFacade\n\tlet recoverCodeFacade: RecoverCodeFacade\n\tlet cryptoFacade: CryptoFacade\n\tlet shareFacade: ShareFacade\n\tlet groupManagementFacade: GroupManagementFacade\n\tlet asymmetricCryptoFacade: AsymmetricCryptoFacade\n\n\tlet user: User\n\tconst pwKey = uint8ArrayToBitArray(new Uint8Array(Array(KEY_LENGTH_BYTES_AES_256).keys()))\n\tlet cryptoWrapperMock: CryptoWrapper\n\tlet userEncAdminKey: Uint8Array\n\tconst groupId = someGroupId\n\tlet group: Group\n\tlet groupInfo: GroupInfo\n\tlet groupKeyVersion0: AesKey\n\tlet customer: Customer\n\n\to.beforeEach(async () => {\n\t\tentityClientMock = instance(EntityClient)\n\t\tkeyLoaderFacadeMock = object()\n\t\tpqFacadeMock = object()\n\t\tserviceExecutorMock = instance(ServiceExecutor)\n\t\tcryptoWrapperMock = object()\n\t\tuserEncAdminKey = object()\n\t\trecoverCodeFacade = object()\n\t\tconst recoverCodeFacadeAsync: lazyAsync<RecoverCodeFacade> = lazyMemoized(async () => recoverCodeFacade)\n\t\tuserFacade = object()\n\t\tcryptoFacade = object()\n\t\tshareFacade = object()\n\t\tgroupManagementFacade = object()\n\t\tasymmetricCryptoFacade = object()\n\t\tkeyRotationFacade = new KeyRotationFacade(\n\t\t\tentityClientMock,\n\t\t\tkeyLoaderFacadeMock,\n\t\t\tpqFacadeMock,\n\t\t\tserviceExecutorMock,\n\t\t\tcryptoWrapperMock,\n\t\t\trecoverCodeFacadeAsync,\n\t\t\tuserFacade,\n\t\t\tcryptoFacade,\n\t\t\tasync () => shareFacade,\n\t\t\tasync () => groupManagementFacade,\n\t\t\tasymmetricCryptoFacade,\n\t\t)\n\t\tuser = await makeUser(userId, { key: userEncAdminKey, encryptingKeyVersion: 0 })\n\t\tconst customerId = \"customerId\"\n\t\tcustomer = createTestEntity(CustomerTypeRef, { _id: customerId, userGroups: \"userGroupsList\" })\n\t\tconst groupData = makeGroupWithMembership(groupId, user)\n\t\tgroup = groupData.group\n\t\tgroupInfo = groupData.groupInfo\n\n\t\twhen(userFacade.getUser()).thenReturn(user)\n\t\twhen(userFacade.getUserGroupId()).thenReturn(userGroupId)\n\t\twhen(entityClientMock.load(GroupTypeRef, groupId)).thenResolve(group)\n\t\twhen(keyLoaderFacadeMock.getCurrentSymGroupKey(groupId)).thenResolve({ version: 0, object: groupKeyVersion0 })\n\t\twhen(entityClientMock.load(UserGroupRootTypeRef, anything())).thenResolve(\n\t\t\tawait makeUserGroupRoot(keyRotationsListId, invitationsListId, groupKeyUpdatesListId),\n\t\t)\n\t\twhen(keyLoaderFacadeMock.getCurrentSymUserGroupKey()).thenReturn(CURRENT_USER_GROUP_KEY)\n\t\twhen(keyLoaderFacadeMock.getCurrentSymGroupKey(adminGroupId)).thenResolve(CURRENT_ADMIN_GROUP_KEY)\n\t\twhen(keyLoaderFacadeMock.getCurrentSymGroupKey(groupId)).thenResolve(CURRENT_USER_AREA_GROUP_KEY)\n\t\twhen(entityClientMock.load(CustomerTypeRef, customerId)).thenResolve(customer)\n\t\twhen(entityClientMock.loadAll(GroupInfoTypeRef, customer.userGroups)).thenResolve([])\n\t})\n\n\to.spec(\"initialize\", function () {\n\t\to(\"When a key rotation for the admin group exists on the server, the password key is saved in the facade\", async function () {\n\t\t\twhen(serviceExecutorMock.get(GroupKeyRotationInfoService, anything())).thenResolve(\n\t\t\t\tcreateTestEntity(GroupKeyRotationInfoGetOutTypeRef, { userOrAdminGroupKeyRotationScheduled: true, groupKeyUpdates: [] }),\n\t\t\t)\n\t\t\tawait keyRotationFacade.initialize(pwKey, true)\n\n\t\t\to(keyRotationFacade.pendingKeyRotations.pwKey).deepEquals(pwKey)\n\t\t})\n\n\t\to(\"When a key rotation for the admin group does not exist on the server, the password key is not saved in the facade\", async function () {\n\t\t\twhen(serviceExecutorMock.get(GroupKeyRotationInfoService, anything())).thenResolve(\n\t\t\t\tcreateTestEntity(GroupKeyRotationInfoGetOutTypeRef, { userOrAdminGroupKeyRotationScheduled: false, groupKeyUpdates: [] }),\n\t\t\t)\n\t\t\tawait keyRotationFacade.initialize(pwKey, true)\n\n\t\t\to(keyRotationFacade.pendingKeyRotations.pwKey).equals(null)\n\t\t})\n\t})\n\n\to.spec(\"loadPendingKeyRotations\", function () {\n\t\to(\"When a key rotation for a user area group exists on the server, the pending key rotation is saved in the facade.\", async function () {\n\t\t\twhen(entityClientMock.loadAll(KeyRotationTypeRef, anything())).thenResolve(\n\t\t\t\tmakeKeyRotation(keyRotationsListId, GroupKeyRotationType.UserArea, groupId),\n\t\t\t)\n\n\t\t\tawait keyRotationFacade.loadPendingKeyRotations(user)\n\n\t\t\to(keyRotationFacade.pendingKeyRotations.userAreaGroupsKeyRotations.length).equals(1)\n\t\t\to(keyRotationFacade.pendingKeyRotations.adminOrUserGroupKeyRotation).equals(null)\n\t\t})\n\n\t\to.spec(\"When a key rotation for a group that is not yet supported exists on the server, nothing is saved in the facade\", function () {\n\t\t\to(\"Team\", async function () {\n\t\t\t\twhen(entityClientMock.loadAll(KeyRotationTypeRef, anything())).thenResolve(\n\t\t\t\t\tmakeKeyRotation(keyRotationsListId, GroupKeyRotationType.Team, groupId),\n\t\t\t\t)\n\n\t\t\t\tawait keyRotationFacade.loadPendingKeyRotations(user)\n\n\t\t\t\to(keyRotationFacade.pendingKeyRotations.userAreaGroupsKeyRotations.length).equals(0)\n\t\t\t\to(keyRotationFacade.pendingKeyRotations.adminOrUserGroupKeyRotation).equals(null)\n\t\t\t})\n\n\t\t\to(\"Customer\", async function () {\n\t\t\t\twhen(entityClientMock.loadAll(KeyRotationTypeRef, anything())).thenResolve(\n\t\t\t\t\tmakeKeyRotation(keyRotationsListId, GroupKeyRotationType.Customer, groupId),\n\t\t\t\t)\n\n\t\t\t\tawait keyRotationFacade.loadPendingKeyRotations(user)\n\n\t\t\t\to(keyRotationFacade.pendingKeyRotations.userAreaGroupsKeyRotations.length).equals(0)\n\t\t\t\to(keyRotationFacade.pendingKeyRotations.adminOrUserGroupKeyRotation).equals(null)\n\t\t\t})\n\t\t})\n\t})\n\n\to.spec(\"processPendingKeyRotation\", function () {\n\t\to.spec(\"User area group key rotation\", function () {\n\t\t\to(\"Rotated group does not have a key pair\", async function () {\n\t\t\t\tkeyRotationFacade.setPendingKeyRotations({\n\t\t\t\t\tpwKey: null,\n\t\t\t\t\tadminOrUserGroupKeyRotation: null,\n\t\t\t\t\tteamOrCustomerGroupKeyRotations: [],\n\t\t\t\t\tuserAreaGroupsKeyRotations: makeKeyRotation(keyRotationsListId, GroupKeyRotationType.UserArea, groupId),\n\t\t\t\t})\n\n\t\t\t\tconst { userEncNewGroupKey, newGroupKeyEncPreviousGroupKey, adminEncNewGroupKey } = prepareKeyMocks(cryptoWrapperMock)\n\n\t\t\t\tawait keyRotationFacade.processPendingKeyRotation(user)\n\n\t\t\t\tconst captor = matchers.captor()\n\t\t\t\tverify(serviceExecutorMock.post(GroupKeyRotationService, captor.capture()))\n\t\t\t\tverify(shareFacade.sendGroupInvitationRequest(anything()), { times: 0 })\n\t\t\t\tconst sentData: GroupKeyRotationPostIn = captor.value\n\t\t\t\to(sentData.groupKeyUpdates.length).equals(1)\n\t\t\t\tconst update = sentData.groupKeyUpdates[0]\n\t\t\t\to(update.keyPair).equals(null)\n\t\t\t\to(update.group).equals(groupId)\n\t\t\t\to(update.groupKeyVersion).equals(\"1\")\n\t\t\t\to(update.adminGroupEncGroupKey).deepEquals(null)\n\t\t\t\to(update.adminGroupKeyVersion).equals(null)\n\t\t\t\to(update.groupEncPreviousGroupKey).deepEquals(newGroupKeyEncPreviousGroupKey.key)\n\t\t\t\to(update.groupMembershipUpdateData.length).equals(1)\n\t\t\t\to(update.groupMembershipUpdateData[0].userId).equals(userId)\n\t\t\t\to(update.groupMembershipUpdateData[0].userEncGroupKey).deepEquals(userEncNewGroupKey.key)\n\t\t\t\to(update.groupMembershipUpdateData[0].userKeyVersion).equals(\"0\")\n\t\t\t})\n\t\t\to(\"Rotated group does not have adminEncKey\", async function () {\n\t\t\t\tgroup.adminGroupEncGKey = null\n\t\t\t\twhen(groupManagementFacade.hasAdminEncGKey(group)).thenReturn(false)\n\t\t\t\tgroup.adminGroupKeyVersion = null\n\t\t\t\tkeyRotationFacade.setPendingKeyRotations({\n\t\t\t\t\tpwKey: null,\n\t\t\t\t\tadminOrUserGroupKeyRotation: null,\n\t\t\t\t\tteamOrCustomerGroupKeyRotations: [],\n\t\t\t\t\tuserAreaGroupsKeyRotations: makeKeyRotation(keyRotationsListId, GroupKeyRotationType.UserArea, groupId),\n\t\t\t\t})\n\n\t\t\t\tconst { userEncNewGroupKey, newGroupKeyEncPreviousGroupKey } = prepareKeyMocks(cryptoWrapperMock)\n\n\t\t\t\tawait keyRotationFacade.processPendingKeyRotation(user)\n\n\t\t\t\tconst captor = matchers.captor()\n\t\t\t\tverify(serviceExecutorMock.post(GroupKeyRotationService, captor.capture()))\n\t\t\t\tverify(shareFacade.sendGroupInvitationRequest(anything()), { times: 0 })\n\t\t\t\tconst sentData: GroupKeyRotationPostIn = captor.value\n\t\t\t\to(sentData.groupKeyUpdates.length).equals(1)\n\t\t\t\tconst update = sentData.groupKeyUpdates[0]\n\t\t\t\to(update.keyPair).equals(null)\n\t\t\t\to(update.group).equals(groupId)\n\t\t\t\to(update.groupKeyVersion).equals(\"1\")\n\t\t\t\to(update.adminGroupEncGroupKey).equals(null)\n\t\t\t\to(update.adminGroupKeyVersion).equals(null)\n\t\t\t\to(update.groupEncPreviousGroupKey).deepEquals(newGroupKeyEncPreviousGroupKey.key)\n\t\t\t\to(update.groupMembershipUpdateData.length).equals(1)\n\t\t\t\to(update.groupMembershipUpdateData[0].userId).equals(userId)\n\t\t\t\to(update.groupMembershipUpdateData[0].userEncGroupKey).deepEquals(userEncNewGroupKey.key)\n\t\t\t\to(update.groupMembershipUpdateData[0].userKeyVersion).equals(\"0\")\n\t\t\t})\n\n\t\t\to(\"Rotated group has key pair and adminEncGroupKey\", async function () {\n\t\t\t\tkeyRotationFacade.setPendingKeyRotations({\n\t\t\t\t\tpwKey: null,\n\t\t\t\t\tadminOrUserGroupKeyRotation: null,\n\t\t\t\t\tteamOrCustomerGroupKeyRotations: [],\n\t\t\t\t\tuserAreaGroupsKeyRotations: makeKeyRotation(keyRotationsListId, GroupKeyRotationType.UserArea, groupId),\n\t\t\t\t})\n\n\t\t\t\tgroup.currentKeys = createTestEntity(KeyPairTypeRef)\n\n\t\t\t\tconst { userEncNewGroupKey, newGroupKeyEncPreviousGroupKey, newKey, adminEncNewGroupKey } = prepareKeyMocks(cryptoWrapperMock)\n\t\t\t\tconst generated = mockGenerateKeyPairs(pqFacadeMock, cryptoWrapperMock, newKey.object)\n\t\t\t\tconst { newKeyPairs, encryptedEccPrivKey, encryptedKyberPrivKey, kyberPublicKeyBytes } = generated.get(newKey.object)!\n\n\t\t\t\tawait keyRotationFacade.processPendingKeyRotation(user)\n\n\t\t\t\tconst captor = matchers.captor()\n\t\t\t\tverify(serviceExecutorMock.post(GroupKeyRotationService, captor.capture()))\n\t\t\t\tverify(shareFacade.sendGroupInvitationRequest(anything()), { times: 0 })\n\t\t\t\tconst sentData: GroupKeyRotationPostIn = captor.value\n\t\t\t\to(sentData.groupKeyUpdates.length).equals(1)\n\t\t\t\tconst update = sentData.groupKeyUpdates[0]\n\n\t\t\t\tconst sentKeyPairs = createTestEntity(KeyPairTypeRef, {\n\t\t\t\t\tpubEccKey: newKeyPairs.eccKeyPair.publicKey,\n\t\t\t\t\tsymEncPrivEccKey: encryptedEccPrivKey,\n\t\t\t\t\tpubKyberKey: kyberPublicKeyBytes,\n\t\t\t\t\tsymEncPrivKyberKey: encryptedKyberPrivKey,\n\t\t\t\t})\n\t\t\t\to(update.keyPair).deepEquals(sentKeyPairs)\n\t\t\t\to(update.group).equals(groupId)\n\t\t\t\to(update.groupKeyVersion).equals(\"1\")\n\t\t\t\to(update.adminGroupEncGroupKey).deepEquals(null)\n\t\t\t\to(update.adminGroupKeyVersion).equals(null)\n\t\t\t\to(update.groupEncPreviousGroupKey).deepEquals(newGroupKeyEncPreviousGroupKey.key)\n\t\t\t\to(update.groupMembershipUpdateData.length).equals(1)\n\t\t\t\to(update.groupMembershipUpdateData[0].userId).equals(userId)\n\t\t\t\to(update.groupMembershipUpdateData[0].userEncGroupKey).deepEquals(userEncNewGroupKey.key)\n\t\t\t\to(update.groupMembershipUpdateData[0].userKeyVersion).equals(\"0\")\n\t\t\t})\n\n\t\t\to.spec(\"Rotated group is a shared group\", function () {\n\t\t\t\to(\"Rotated group has pending invitations\", async function () {\n\t\t\t\t\tkeyRotationFacade.setPendingKeyRotations({\n\t\t\t\t\t\tpwKey: null,\n\t\t\t\t\t\tadminOrUserGroupKeyRotation: null,\n\t\t\t\t\t\tteamOrCustomerGroupKeyRotations: [],\n\t\t\t\t\t\tuserAreaGroupsKeyRotations: makeKeyRotation(keyRotationsListId, GroupKeyRotationType.UserArea, groupId),\n\t\t\t\t\t})\n\n\t\t\t\t\tprepareKeyMocks(cryptoWrapperMock)\n\n\t\t\t\t\tconst invitationId: IdTuple = [invitationsListId, \"invitationElementId\"]\n\t\t\t\t\tconst inviteeMailAddress = \"inviteeMailAddress\"\n\t\t\t\t\tconst capability = ShareCapability.Invite\n\t\t\t\t\twhen(entityClientMock.loadAll(SentGroupInvitationTypeRef, group.invitations)).thenResolve([\n\t\t\t\t\t\tcreateTestEntity(SentGroupInvitationTypeRef, {\n\t\t\t\t\t\t\treceivedInvitation: invitationId,\n\t\t\t\t\t\t\tinviteeMailAddress: inviteeMailAddress,\n\t\t\t\t\t\t\tcapability: capability,\n\t\t\t\t\t\t}),\n\t\t\t\t\t])\n\n\t\t\t\t\tconst groupInvitationPostDataMock = object<GroupInvitationPostData>()\n\t\t\t\t\twhen(shareFacade.prepareGroupInvitation(anything(), groupInfo, [inviteeMailAddress], capability)).thenResolve(groupInvitationPostDataMock)\n\n\t\t\t\t\tawait keyRotationFacade.processPendingKeyRotation(user)\n\n\t\t\t\t\tconst captor = matchers.captor()\n\t\t\t\t\tverify(serviceExecutorMock.post(GroupKeyRotationService, captor.capture()))\n\t\t\t\t\tverify(shareFacade.sendGroupInvitationRequest(groupInvitationPostDataMock))\n\t\t\t\t\tconst sentData: GroupKeyRotationPostIn = captor.value\n\t\t\t\t\to(sentData.groupKeyUpdates.length).equals(1)\n\t\t\t\t\tconst update = sentData.groupKeyUpdates[0]\n\t\t\t\t\to(update.group).equals(groupId)\n\t\t\t\t\to(update.groupKeyVersion).equals(\"1\")\n\t\t\t\t\to(update.groupKeyUpdatesForMembers).deepEquals([])\n\t\t\t\t})\n\n\t\t\t\to(\"Rotated group has pending invitations, where no re-invite is possible\", async function () {\n\t\t\t\t\tkeyRotationFacade.setPendingKeyRotations({\n\t\t\t\t\t\tpwKey: null,\n\t\t\t\t\t\tadminOrUserGroupKeyRotation: null,\n\t\t\t\t\t\tteamOrCustomerGroupKeyRotations: [],\n\t\t\t\t\t\tuserAreaGroupsKeyRotations: makeKeyRotation(keyRotationsListId, GroupKeyRotationType.UserArea, groupId),\n\t\t\t\t\t})\n\n\t\t\t\t\tprepareKeyMocks(cryptoWrapperMock)\n\n\t\t\t\t\tconst invitationId: IdTuple = [invitationsListId, \"invitationElementId\"]\n\t\t\t\t\tconst inviteeMailAddress = \"inviteeMailAddress\"\n\t\t\t\t\tconst capability = ShareCapability.Invite\n\t\t\t\t\twhen(entityClientMock.loadAll(SentGroupInvitationTypeRef, group.invitations)).thenResolve([\n\t\t\t\t\t\tcreateTestEntity(SentGroupInvitationTypeRef, {\n\t\t\t\t\t\t\treceivedInvitation: invitationId,\n\t\t\t\t\t\t\tinviteeMailAddress: inviteeMailAddress,\n\t\t\t\t\t\t\tcapability: capability,\n\t\t\t\t\t\t}),\n\t\t\t\t\t])\n\n\t\t\t\t\twhen(shareFacade.prepareGroupInvitation(anything(), groupInfo, [inviteeMailAddress], capability)).thenReject(\n\t\t\t\t\t\tnew RecipientsNotFoundError([inviteeMailAddress].join(\"\\n\")),\n\t\t\t\t\t)\n\n\t\t\t\t\tawait keyRotationFacade.processPendingKeyRotation(user)\n\n\t\t\t\t\tconst captor = matchers.captor()\n\t\t\t\t\tverify(serviceExecutorMock.post(GroupKeyRotationService, captor.capture()))\n\t\t\t\t\tverify(shareFacade.sendGroupInvitationRequest(anything()), { times: 0 })\n\t\t\t\t\tconst sentData: GroupKeyRotationPostIn = captor.value\n\t\t\t\t\to(sentData.groupKeyUpdates.length).equals(1)\n\t\t\t\t\tconst update = sentData.groupKeyUpdates[0]\n\t\t\t\t\to(update.group).equals(groupId)\n\t\t\t\t\to(update.groupKeyVersion).equals(\"1\")\n\t\t\t\t\to(update.groupKeyUpdatesForMembers).deepEquals([])\n\t\t\t\t})\n\n\t\t\t\to(\"Rotated group has other members\", async function () {\n\t\t\t\t\tkeyRotationFacade.setPendingKeyRotations({\n\t\t\t\t\t\tpwKey: null,\n\t\t\t\t\t\tadminOrUserGroupKeyRotation: null,\n\t\t\t\t\t\tteamOrCustomerGroupKeyRotations: [],\n\t\t\t\t\t\tuserAreaGroupsKeyRotations: makeKeyRotation(keyRotationsListId, GroupKeyRotationType.UserArea, groupId),\n\t\t\t\t\t})\n\n\t\t\t\t\tprepareKeyMocks(cryptoWrapperMock)\n\n\t\t\t\t\tconst memberUserId = \"memberUserId\"\n\t\t\t\t\tconst memberUserGroupInfoId: IdTuple = [\"memberUGIListId\", \"memberUGIElementId\"]\n\t\t\t\t\tconst memberMailAddress = \"member@tuta.com\"\n\n\t\t\t\t\twhen(entityClientMock.loadAll(GroupMemberTypeRef, group.members)).thenResolve([\n\t\t\t\t\t\tcreateTestEntity(GroupMemberTypeRef, {\n\t\t\t\t\t\t\tgroup: groupId,\n\t\t\t\t\t\t\tuser: userId,\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tcreateTestEntity(GroupMemberTypeRef, {\n\t\t\t\t\t\t\tgroup: groupId,\n\t\t\t\t\t\t\tuser: memberUserId,\n\t\t\t\t\t\t\tuserGroupInfo: memberUserGroupInfoId,\n\t\t\t\t\t\t}),\n\t\t\t\t\t])\n\t\t\t\t\twhen(entityClientMock.loadMultiple(GroupInfoTypeRef, memberUserGroupInfoId[0], [memberUserGroupInfoId[1]])).thenResolve([\n\t\t\t\t\t\tcreateTestEntity(GroupInfoTypeRef, {\n\t\t\t\t\t\t\t_id: memberUserGroupInfoId,\n\t\t\t\t\t\t\tmailAddress: memberMailAddress,\n\t\t\t\t\t\t}),\n\t\t\t\t\t])\n\t\t\t\t\tconst recipientKeyVersion = \"0\"\n\t\t\t\t\tconst pubEncBucketKeyMock = object<Uint8Array>()\n\t\t\t\t\tconst protocolVersion = CryptoProtocolVersion.TUTA_CRYPT\n\t\t\t\t\twhen(cryptoFacade.encryptBucketKeyForInternalRecipient(userGroupId, anything(), memberMailAddress, [])).thenResolve(\n\t\t\t\t\t\tcreateTestEntity(InternalRecipientKeyDataTypeRef, {\n\t\t\t\t\t\t\tprotocolVersion,\n\t\t\t\t\t\t\tsenderKeyVersion: user.userGroup.groupKeyVersion,\n\t\t\t\t\t\t\tmailAddress: memberMailAddress,\n\t\t\t\t\t\t\trecipientKeyVersion,\n\t\t\t\t\t\t\tpubEncBucketKey: pubEncBucketKeyMock,\n\t\t\t\t\t\t}),\n\t\t\t\t\t)\n\t\t\t\t\twhen(cryptoWrapperMock.aes256RandomKey()).thenReturn(NEW_GROUP_KEY.object, MEMBER1_BUCKET_KEY, MEMBER1_SESSION_KEY)\n\t\t\t\t\twhen(cryptoWrapperMock.encryptKey(MEMBER1_BUCKET_KEY, MEMBER1_SESSION_KEY)).thenReturn(MEMBER1_BUCKET_KEY_ENC_MEMBER1_SESSION_KEY)\n\t\t\t\t\twhen(cryptoWrapperMock.encryptBytes(MEMBER1_SESSION_KEY, bitArrayToUint8Array(NEW_GROUP_KEY.object))).thenReturn(\n\t\t\t\t\t\tMEMBER1_SESSION_KEY_ENC_NEW_USER_AREA_GROUP_KEY,\n\t\t\t\t\t)\n\n\t\t\t\t\tawait keyRotationFacade.processPendingKeyRotation(user)\n\n\t\t\t\t\tconst captor = matchers.captor()\n\t\t\t\t\tverify(serviceExecutorMock.post(GroupKeyRotationService, captor.capture()))\n\t\t\t\t\tverify(shareFacade.sendGroupInvitationRequest(anything()), { times: 0 })\n\t\t\t\t\tconst sentData: GroupKeyRotationPostIn = captor.value\n\t\t\t\t\to(sentData.groupKeyUpdates.length).equals(1)\n\t\t\t\t\tconst update = sentData.groupKeyUpdates[0]\n\t\t\t\t\to(update.group).equals(groupId)\n\t\t\t\t\to(update.groupKeyVersion).equals(\"1\")\n\n\t\t\t\t\to(update.groupKeyUpdatesForMembers.length).deepEquals(1)\n\t\t\t\t\tconst groupKeyUpdateData = update.groupKeyUpdatesForMembers[0]\n\t\t\t\t\to(groupKeyUpdateData.sessionKeyEncGroupKeyVersion).equals(\"1\")\n\t\t\t\t\to(groupKeyUpdateData.sessionKeyEncGroupKey).deepEquals(MEMBER1_SESSION_KEY_ENC_NEW_USER_AREA_GROUP_KEY)\n\t\t\t\t\to(groupKeyUpdateData.bucketKeyEncSessionKey).deepEquals(MEMBER1_BUCKET_KEY_ENC_MEMBER1_SESSION_KEY)\n\t\t\t\t\tconst pubEncBucketKeyData = groupKeyUpdateData.pubEncBucketKeyData\n\t\t\t\t\to(pubEncBucketKeyData.pubEncSymKey).deepEquals(pubEncBucketKeyMock)\n\t\t\t\t\to(pubEncBucketKeyData.protocolVersion).deepEquals(protocolVersion)\n\t\t\t\t\to(pubEncBucketKeyData.senderKeyVersion).deepEquals(user.userGroup.groupKeyVersion)\n\t\t\t\t\to(pubEncBucketKeyData.recipientKeyVersion).deepEquals(recipientKeyVersion)\n\t\t\t\t\to(pubEncBucketKeyData.recipientIdentifier).deepEquals(memberMailAddress)\n\t\t\t\t\to(pubEncBucketKeyData.recipientIdentifierType).deepEquals(PublicKeyIdentifierType.MAIL_ADDRESS)\n\t\t\t\t})\n\n\t\t\t\to(\"Rotated group has deactivated members\", async function () {\n\t\t\t\t\tkeyRotationFacade.setPendingKeyRotations({\n\t\t\t\t\t\tpwKey: null,\n\t\t\t\t\t\tadminOrUserGroupKeyRotation: null,\n\t\t\t\t\t\tteamOrCustomerGroupKeyRotations: [],\n\t\t\t\t\t\tuserAreaGroupsKeyRotations: makeKeyRotation(keyRotationsListId, GroupKeyRotationType.UserArea, groupId),\n\t\t\t\t\t})\n\n\t\t\t\t\tprepareKeyMocks(cryptoWrapperMock)\n\n\t\t\t\t\tconst memberUserId = \"memberUserId\"\n\t\t\t\t\tconst memberUserGroupInfoId: IdTuple = [\"memberUGIListId\", \"memberUGIElementId\"]\n\t\t\t\t\tconst memberMailAddress = \"member@tuta.com\"\n\n\t\t\t\t\tconst sameUserMember = createTestEntity(GroupMemberTypeRef, {\n\t\t\t\t\t\tgroup: groupId,\n\t\t\t\t\t\tuser: userId,\n\t\t\t\t\t})\n\t\t\t\t\twhen(entityClientMock.loadAll(GroupMemberTypeRef, group.members)).thenResolve(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tsameUserMember,\n\t\t\t\t\t\t\tcreateTestEntity(GroupMemberTypeRef, {\n\t\t\t\t\t\t\t\tgroup: groupId,\n\t\t\t\t\t\t\t\tuser: memberUserId,\n\t\t\t\t\t\t\t\tuserGroupInfo: memberUserGroupInfoId,\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t],\n\t\t\t\t\t\t[sameUserMember], // second call after removing a member that we cannot udapte the keys for\n\t\t\t\t\t)\n\t\t\t\t\twhen(entityClientMock.loadMultiple(GroupInfoTypeRef, memberUserGroupInfoId[0], [memberUserGroupInfoId[1]])).thenResolve([\n\t\t\t\t\t\tcreateTestEntity(GroupInfoTypeRef, {\n\t\t\t\t\t\t\t_id: memberUserGroupInfoId,\n\t\t\t\t\t\t\tmailAddress: memberMailAddress,\n\t\t\t\t\t\t}),\n\t\t\t\t\t])\n\t\t\t\t\twhen(cryptoFacade.encryptBucketKeyForInternalRecipient(userGroupId, anything(), memberMailAddress, [])).thenDo(\n\t\t\t\t\t\t(senderUserGroupId: Id, bucketKey: AesKey, recipientMailAddress: string, notFoundRecipients: Array<string>) => {\n\t\t\t\t\t\t\tnotFoundRecipients.push(memberMailAddress)\n\t\t\t\t\t\t\treturn null\n\t\t\t\t\t\t},\n\t\t\t\t\t)\n\t\t\t\t\twhen(cryptoWrapperMock.aes256RandomKey()).thenReturn(NEW_GROUP_KEY.object, MEMBER1_BUCKET_KEY, MEMBER1_SESSION_KEY)\n\t\t\t\t\twhen(cryptoWrapperMock.encryptKey(MEMBER1_BUCKET_KEY, MEMBER1_SESSION_KEY)).thenReturn(MEMBER1_BUCKET_KEY_ENC_MEMBER1_SESSION_KEY)\n\t\t\t\t\twhen(cryptoWrapperMock.encryptBytes(MEMBER1_SESSION_KEY, bitArrayToUint8Array(NEW_GROUP_KEY.object))).thenReturn(\n\t\t\t\t\t\tMEMBER1_SESSION_KEY_ENC_NEW_USER_AREA_GROUP_KEY,\n\t\t\t\t\t)\n\n\t\t\t\t\tawait keyRotationFacade.processPendingKeyRotation(user)\n\n\t\t\t\t\tconst captor = matchers.captor()\n\t\t\t\t\tverify(serviceExecutorMock.post(GroupKeyRotationService, captor.capture()))\n\t\t\t\t\tverify(shareFacade.sendGroupInvitationRequest(anything()), { times: 0 })\n\t\t\t\t\tconst sentData: GroupKeyRotationPostIn = captor.value\n\t\t\t\t\to(sentData.groupKeyUpdates.length).equals(1)\n\t\t\t\t\tconst update = sentData.groupKeyUpdates[0]\n\t\t\t\t\to(update.group).equals(groupId)\n\t\t\t\t\to(update.groupKeyVersion).equals(\"1\")\n\n\t\t\t\t\to(update.groupKeyUpdatesForMembers).deepEquals([])\n\t\t\t\t})\n\t\t\t})\n\n\t\t\to(\"Key rotation for multiple groups are executed in one request\", async function () {\n\t\t\t\tconst secondGroupId = \"groupId-2\"\n\t\t\t\tmakeGroupWithMembership(secondGroupId, user)\n\t\t\t\twhen(keyLoaderFacadeMock.getCurrentSymGroupKey(secondGroupId)).thenResolve(CURRENT_USER_AREA_GROUP_KEY)\n\n\t\t\t\tkeyRotationFacade.setPendingKeyRotations({\n\t\t\t\t\tpwKey: null,\n\t\t\t\t\tadminOrUserGroupKeyRotation: null,\n\t\t\t\t\tteamOrCustomerGroupKeyRotations: [],\n\t\t\t\t\tuserAreaGroupsKeyRotations: [\n\t\t\t\t\t\tcreateTestEntity(KeyRotationTypeRef, {\n\t\t\t\t\t\t\tgroupKeyRotationType: GroupKeyRotationType.UserArea,\n\t\t\t\t\t\t\t_id: [keyRotationsListId, groupId],\n\t\t\t\t\t\t\ttargetKeyVersion: \"1\",\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tcreateTestEntity(KeyRotationTypeRef, {\n\t\t\t\t\t\t\tgroupKeyRotationType: GroupKeyRotationType.UserArea,\n\t\t\t\t\t\t\t_id: [keyRotationsListId, secondGroupId],\n\t\t\t\t\t\t\ttargetKeyVersion: \"1\",\n\t\t\t\t\t\t}),\n\t\t\t\t\t],\n\t\t\t\t})\n\n\t\t\t\tprepareKeyMocks(cryptoWrapperMock)\n\n\t\t\t\tawait keyRotationFacade.processPendingKeyRotation(user)\n\n\t\t\t\tconst captor = matchers.captor()\n\t\t\t\tverify(serviceExecutorMock.post(GroupKeyRotationService, captor.capture()))\n\t\t\t\tconst sentData: GroupKeyRotationPostIn = captor.value\n\t\t\t\to(sentData.groupKeyUpdates.length).equals(2)\n\t\t\t\tconst update = sentData.groupKeyUpdates[0]\n\t\t\t\to(update.group).equals(groupId)\n\t\t\t\to(update.groupKeyVersion).equals(\"1\")\n\t\t\t\tconst secondUpdate = sentData.groupKeyUpdates[1]\n\t\t\t\to(secondUpdate.group).equals(secondGroupId)\n\t\t\t\to(secondUpdate.groupKeyVersion).equals(\"1\")\n\t\t\t})\n\n\t\t\to(\"Rotate group user area group of non admin\", async function () {\n\t\t\t\tkeyRotationFacade.setPendingKeyRotations({\n\t\t\t\t\tpwKey: null,\n\t\t\t\t\tadminOrUserGroupKeyRotation: null,\n\t\t\t\t\tteamOrCustomerGroupKeyRotations: [],\n\t\t\t\t\tuserAreaGroupsKeyRotations: makeKeyRotation(keyRotationsListId, GroupKeyRotationType.UserArea, groupId),\n\t\t\t\t})\n\n\t\t\t\t// remove admin group membership\n\t\t\t\tfindAllAndRemove(user.memberships, (m) => m.groupType === GroupType.Admin)\n\n\t\t\t\tconst { userEncNewGroupKey, newGroupKeyEncPreviousGroupKey, adminEncNewGroupKey } = prepareKeyMocks(cryptoWrapperMock)\n\n\t\t\t\tawait keyRotationFacade.processPendingKeyRotation(user)\n\n\t\t\t\tconst captor = matchers.captor()\n\t\t\t\tverify(serviceExecutorMock.post(GroupKeyRotationService, captor.capture()))\n\t\t\t\tverify(shareFacade.sendGroupInvitationRequest(anything()), { times: 0 })\n\t\t\t\tconst sentData: GroupKeyRotationPostIn = captor.value\n\t\t\t\to(sentData.groupKeyUpdates.length).equals(1)\n\t\t\t\tconst update = sentData.groupKeyUpdates[0]\n\t\t\t\to(update.keyPair).equals(null)\n\t\t\t\to(update.group).equals(groupId)\n\t\t\t\to(update.groupKeyVersion).equals(\"1\")\n\t\t\t\to(update.adminGroupEncGroupKey).deepEquals(null)\n\t\t\t\to(update.adminGroupKeyVersion).equals(null)\n\t\t\t\to(update.groupEncPreviousGroupKey).deepEquals(newGroupKeyEncPreviousGroupKey.key)\n\t\t\t\to(update.groupMembershipUpdateData.length).equals(1)\n\t\t\t\to(update.groupMembershipUpdateData[0].userId).equals(userId)\n\t\t\t\to(update.groupMembershipUpdateData[0].userEncGroupKey).deepEquals(userEncNewGroupKey.key)\n\t\t\t\to(update.groupMembershipUpdateData[0].userKeyVersion).equals(\"0\")\n\t\t\t})\n\t\t})\n\n\t\to.spec(\"Admin group key rotation\", function () {\n\t\t\tlet userGroup: Group\n\t\t\tlet adminGroup: Group\n\t\t\tlet recoverData: RecoverData\n\t\t\tlet generatedKeyPairs: Map<AesKey, MockedKeyPairs>\n\t\t\to.beforeEach(function () {\n\t\t\t\tuserGroup = makeGroupWithMembership(userGroupId, user).group\n\t\t\t\tuserGroup.adminGroupEncGKey = CURRENT_ADMIN_GROUP_ENC_CURRENT_USER_GROUP_KEY.key\n\t\t\t\tuserGroup.adminGroupKeyVersion = String(CURRENT_ADMIN_GROUP_ENC_CURRENT_USER_GROUP_KEY.encryptingKeyVersion)\n\t\t\t\tuserGroup.type = GroupType.User\n\t\t\t\tuserGroup.currentKeys = object()\n\t\t\t\tadminGroup = makeGroupWithMembership(adminGroupId, user).group\n\t\t\t\tadminGroup.adminGroupEncGKey = CURRENT_ADMIN_GROUP_ENC_CURRENT_ADMIN_GROUP_KEY.key\n\t\t\t\tadminGroup.adminGroupKeyVersion = String(CURRENT_ADMIN_GROUP_ENC_CURRENT_ADMIN_GROUP_KEY.encryptingKeyVersion)\n\t\t\t\tadminGroup.type = GroupType.Admin\n\t\t\t\tadminGroup.currentKeys = object()\n\t\t\t\tprepareRecoverData(recoverData, recoverCodeFacade)\n\t\t\t\twhen(groupManagementFacade.hasAdminEncGKey(userGroup)).thenReturn(true)\n\t\t\t\twhen(groupManagementFacade.hasAdminEncGKey(adminGroup)).thenReturn(true)\n\t\t\t\twhen(userFacade.deriveUserGroupKeyDistributionKey(userGroupId, PW_KEY)).thenReturn(DISTRIBUTION_KEY)\n\t\t\t\tconst encryptingKeyCaptor = matchers.captor()\n\t\t\t\tconst keyCaptor = matchers.captor()\n\t\t\t\twhen(cryptoWrapperMock.encryptKey(DISTRIBUTION_KEY, NEW_USER_GROUP_KEY.object)).thenReturn(DISTRIBUTION_KEY_ENC_NEW_USER_GROUP_KEY)\n\t\t\t\twhen(cryptoWrapperMock.encryptKeyWithVersionedKey(encryptingKeyCaptor.capture(), keyCaptor.capture())).thenDo((arg) => ({\n\t\t\t\t\tencryptingKeyVersion: encryptingKeyCaptor.value.version,\n\t\t\t\t\tkey: new Uint8Array(encryptingKeyCaptor.value.object.concat(keyCaptor.value)),\n\t\t\t\t}))\n\t\t\t\twhen(cryptoWrapperMock.aes256RandomKey()).thenReturn(NEW_ADMIN_GROUP_KEY.object, NEW_USER_GROUP_KEY.object)\n\n\t\t\t\tgeneratedKeyPairs = mockGenerateKeyPairs(pqFacadeMock, cryptoWrapperMock, NEW_ADMIN_GROUP_KEY.object, NEW_USER_GROUP_KEY.object)\n\t\t\t})\n\n\t\t\to(\"Successful rotation\", async function () {\n\t\t\t\tkeyRotationFacade.setPendingKeyRotations({\n\t\t\t\t\tpwKey: PW_KEY,\n\t\t\t\t\tadminOrUserGroupKeyRotation: createTestEntity(KeyRotationTypeRef, {\n\t\t\t\t\t\t_id: [keyRotationsListId, adminGroupId],\n\t\t\t\t\t\ttargetKeyVersion: String(Number(adminGroup.groupKeyVersion) + 1),\n\t\t\t\t\t\tgroupKeyRotationType: GroupKeyRotationType.AdminGroupKeyRotationSingleUserAccount,\n\t\t\t\t\t}),\n\t\t\t\t\tteamOrCustomerGroupKeyRotations: [],\n\t\t\t\t\tuserAreaGroupsKeyRotations: [],\n\t\t\t\t})\n\n\t\t\t\tawait keyRotationFacade.processPendingKeyRotation(user)\n\n\t\t\t\tverify(\n\t\t\t\t\tserviceExecutorMock.post(\n\t\t\t\t\t\tAdminGroupKeyRotationService,\n\t\t\t\t\t\tmatchers.argThat((arg) => {\n\t\t\t\t\t\t\tconst userGroupKeyData: UserGroupKeyRotationData = arg.userGroupKeyData\n\t\t\t\t\t\t\tconst adminGroupKeyData: GroupKeyRotationData = arg.adminGroupKeyData\n\t\t\t\t\t\t\tverifyRecoverCodeData(userGroupKeyData)\n\n\t\t\t\t\t\t\to(userGroupKeyData.adminGroupKeyVersion).deepEquals(String(NEW_ADMIN_GROUP_ENC_NEW_USER_GROUP_KEY.encryptingKeyVersion))\n\t\t\t\t\t\t\tverifyUserGroupKeyDataExceptAdminKey(userGroupKeyData, generatedKeyPairs)\n\n\t\t\t\t\t\t\to(adminGroupKeyData.groupMembershipUpdateData.length).equals(1)\n\t\t\t\t\t\t\to(adminGroupKeyData.groupMembershipUpdateData[0].userId).deepEquals(userId)\n\t\t\t\t\t\t\to(adminGroupKeyData.groupMembershipUpdateData[0].userKeyVersion).deepEquals(\n\t\t\t\t\t\t\t\tString(NEW_USER_GROUP_ENC_NEW_ADMIN_GROUP_KEY.encryptingKeyVersion),\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\to(adminGroupKeyData.adminGroupKeyVersion).deepEquals(String(NEW_ADMIN_GROUP_KEY.version))\n\t\t\t\t\t\t\to(adminGroupKeyData.groupKeyVersion).deepEquals(assertNotNull(adminGroupKeyData.adminGroupKeyVersion))\n\t\t\t\t\t\t\to(adminGroupKeyData.group).deepEquals(adminGroupId)\n\t\t\t\t\t\t\to(adminGroupKeyData.adminGroupEncGroupKey).deepEquals(NEW_ADMIN_GROUP_ENC_NEW_ADMIN_GROUP_KEY.key)\n\t\t\t\t\t\t\to(adminGroupKeyData.groupMembershipUpdateData[0].userEncGroupKey).deepEquals(NEW_USER_GROUP_ENC_NEW_ADMIN_GROUP_KEY.key)\n\t\t\t\t\t\t\to(adminGroupKeyData.groupEncPreviousGroupKey).deepEquals(NEW_ADMIN_GROUP_ENC_CURRENT_ADMIN_GROUP_KEY.key)\n\t\t\t\t\t\t\tconst mockedAdminKeyPairs = generatedKeyPairs.get(NEW_ADMIN_GROUP_KEY.object)!\n\t\t\t\t\t\t\tverifyKeyPair(adminGroupKeyData.keyPair, mockedAdminKeyPairs)\n\t\t\t\t\t\t\treturn true\n\t\t\t\t\t\t}),\n\t\t\t\t\t),\n\t\t\t\t)\n\n\t\t\t\to(keyRotationFacade.pendingKeyRotations.adminOrUserGroupKeyRotation).equals(null)\n\t\t\t\to(keyRotationFacade.pendingKeyRotations.pwKey).equals(null)\n\t\t\t})\n\n\t\t\to(\"Successful rotation - no recover code\", async function () {\n\t\t\t\tkeyRotationFacade.setPendingKeyRotations({\n\t\t\t\t\tpwKey: PW_KEY,\n\t\t\t\t\tadminOrUserGroupKeyRotation: createTestEntity(KeyRotationTypeRef, {\n\t\t\t\t\t\t_id: [keyRotationsListId, adminGroupId],\n\t\t\t\t\t\ttargetKeyVersion: String(Number(adminGroup.groupKeyVersion) + 1),\n\t\t\t\t\t\tgroupKeyRotationType: GroupKeyRotationType.AdminGroupKeyRotationSingleUserAccount,\n\t\t\t\t\t}),\n\t\t\t\t\tteamOrCustomerGroupKeyRotations: [],\n\t\t\t\t\tuserAreaGroupsKeyRotations: [],\n\t\t\t\t})\n\n\t\t\t\tassertNotNull(user.auth).recoverCode = null\n\n\t\t\t\tawait keyRotationFacade.processPendingKeyRotation(user)\n\n\t\t\t\tverify(\n\t\t\t\t\tserviceExecutorMock.post(\n\t\t\t\t\t\tAdminGroupKeyRotationService,\n\t\t\t\t\t\tmatchers.argThat((arg) => {\n\t\t\t\t\t\t\tconst userGroupKeyData: UserGroupKeyRotationData = arg.userGroupKeyData\n\t\t\t\t\t\t\tconst adminGroupKeyData: GroupKeyRotationData = arg.adminGroupKeyData\n\t\t\t\t\t\t\to(userGroupKeyData.recoverCodeData).equals(null)\n\t\t\t\t\t\t\to(userGroupKeyData.userGroupKeyVersion).deepEquals(String(NEW_USER_GROUP_KEY.version))\n\t\t\t\t\t\t\to(adminGroupKeyData.groupKeyVersion).deepEquals(assertNotNull(adminGroupKeyData.adminGroupKeyVersion))\n\t\t\t\t\t\t\treturn true\n\t\t\t\t\t\t}),\n\t\t\t\t\t),\n\t\t\t\t)\n\t\t\t\tverify(recoverCodeFacade.getRawRecoverCode(matchers.anything()), { times: 0 })\n\t\t\t\tverify(recoverCodeFacade.encryptRecoveryCode(anything(), anything()), { times: 0 })\n\t\t\t})\n\n\t\t\to(\"Successful rotation with multiple users - sends encrypted new key hash\", async function () {\n\t\t\t\tkeyRotationFacade.setPendingKeyRotations({\n\t\t\t\t\tpwKey: PW_KEY,\n\t\t\t\t\tadminOrUserGroupKeyRotation: createTestEntity(KeyRotationTypeRef, {\n\t\t\t\t\t\t_id: [keyRotationsListId, adminGroupId],\n\t\t\t\t\t\ttargetKeyVersion: String(Number(adminGroup.groupKeyVersion) + 1),\n\t\t\t\t\t\tgroupKeyRotationType: GroupKeyRotationType.AdminGroupKeyRotationSingleUserAccount,\n\t\t\t\t\t}),\n\t\t\t\t\tteamOrCustomerGroupKeyRotations: [],\n\t\t\t\t\tuserAreaGroupsKeyRotations: [],\n\t\t\t\t})\n\n\t\t\t\tconst adminUserGroupInfo = createTestEntity(GroupInfoTypeRef, { group: userGroupId })\n\t\t\t\tconst additionalUserGroupId = \"additionalUserGroupId\"\n\t\t\t\tconst additionalUserGroupInfo = createTestEntity(GroupInfoTypeRef, { group: additionalUserGroupId })\n\t\t\t\twhen(entityClientMock.loadAll(GroupInfoTypeRef, customer.userGroups)).thenResolve([adminUserGroupInfo, additionalUserGroupInfo])\n\t\t\t\twhen(keyLoaderFacadeMock.getCurrentSymGroupKey(groupId)).thenResolve({ version: 0, object: groupKeyVersion0 })\n\t\t\t\twhen(keyLoaderFacadeMock.getCurrentSymGroupKey(additionalUserGroupId)).thenResolve({ version: 0, object: groupKeyVersion0 })\n\t\t\t\tconst cleartextHash = object<Uint8Array>()\n\t\t\t\twhen(cryptoWrapperMock.sha256Hash(anything())).thenReturn(cleartextHash)\n\t\t\t\tconst encHash = object<Uint8Array>()\n\t\t\t\twhen(cryptoWrapperMock.aesEncrypt(anything(), cleartextHash)).thenReturn(encHash)\n\n\t\t\t\twhen(groupManagementFacade.getCurrentGroupKeyViaAdminEncGKey(additionalUserGroupInfo.group)).thenResolve(object())\n\n\t\t\t\tawait keyRotationFacade.processPendingKeyRotation(user)\n\n\t\t\t\tverify(\n\t\t\t\t\tserviceExecutorMock.post(\n\t\t\t\t\t\tAdminGroupKeyRotationService,\n\t\t\t\t\t\tmatchers.argThat((arg: AdminGroupKeyRotationPostIn) => {\n\t\t\t\t\t\t\to(arg.adminGroupKeyAuthenticationDataList).notEquals(null)\n\t\t\t\t\t\t\to(arg.adminGroupKeyAuthenticationDataList.length).equals(1)\n\t\t\t\t\t\t\tconst adminGroupKeyAuthenticationData: AdminGroupKeyAuthenticationData = arg.adminGroupKeyAuthenticationDataList[0]\n\t\t\t\t\t\t\to(adminGroupKeyAuthenticationData.userGroup).equals(additionalUserGroupId)\n\t\t\t\t\t\t\to(adminGroupKeyAuthenticationData.version).equals(\"1\")\n\t\t\t\t\t\t\to(adminGroupKeyAuthenticationData.authKeyEncAdminRotationHash).equals(encHash)\n\t\t\t\t\t\t\treturn true\n\t\t\t\t\t\t}),\n\t\t\t\t\t),\n\t\t\t\t)\n\n\t\t\t\tverify(\n\t\t\t\t\tcryptoWrapperMock.deriveKeyWithHkdf(\n\t\t\t\t\t\tmatchers.argThat((arg) => {\n\t\t\t\t\t\t\to(arg.context).equals(\"adminGroupKeyRotationHash\")\n\t\t\t\t\t\t\to(arg.salt).equals(additionalUserGroupId)\n\t\t\t\t\t\t\treturn true\n\t\t\t\t\t\t}),\n\t\t\t\t\t),\n\t\t\t\t)\n\t\t\t})\n\t\t})\n\n\t\to.spec(\"User group key rotation\", function () {\n\t\t\tlet userGroup: Group\n\t\t\tlet generatedKeyPairs: Map<AesKey, MockedKeyPairs>\n\t\t\tlet recoverData: RecoverData\n\n\t\t\to.beforeEach(function () {\n\t\t\t\tuserGroup = makeGroupWithMembership(userGroupId, user).group\n\t\t\t\tuserGroup.pubAdminGroupEncGKey = null\n\t\t\t\tuserGroup.adminGroupEncGKey = CURRENT_ADMIN_GROUP_ENC_CURRENT_USER_GROUP_KEY.key\n\t\t\t\tuserGroup.adminGroupKeyVersion = String(CURRENT_ADMIN_GROUP_ENC_CURRENT_USER_GROUP_KEY.encryptingKeyVersion)\n\t\t\t\tuserGroup.type = GroupType.User\n\t\t\t\tuserGroup.currentKeys = object()\n\t\t\t\tprepareRecoverData(recoverData, recoverCodeFacade)\n\n\t\t\t\twhen(groupManagementFacade.hasAdminEncGKey(userGroup)).thenReturn(true)\n\t\t\t\twhen(userFacade.deriveUserGroupKeyDistributionKey(userGroupId, PW_KEY)).thenReturn(DISTRIBUTION_KEY)\n\t\t\t\tconst encryptingKeyCaptor = matchers.captor()\n\t\t\t\tconst keyCaptor = matchers.captor()\n\t\t\t\twhen(cryptoWrapperMock.aes256RandomKey()).thenReturn(NEW_USER_GROUP_KEY.object)\n\t\t\t\twhen(cryptoWrapperMock.encryptKeyWithVersionedKey(encryptingKeyCaptor.capture(), keyCaptor.capture())).thenDo((arg) => ({\n\t\t\t\t\tencryptingKeyVersion: encryptingKeyCaptor.value.version,\n\t\t\t\t\tkey: new Uint8Array(encryptingKeyCaptor.value.object.concat(keyCaptor.value)),\n\t\t\t\t}))\n\t\t\t\twhen(cryptoWrapperMock.encryptKey(DISTRIBUTION_KEY, NEW_USER_GROUP_KEY.object)).thenReturn(DISTRIBUTION_KEY_ENC_NEW_USER_GROUP_KEY)\n\t\t\t\tgeneratedKeyPairs = mockGenerateKeyPairs(pqFacadeMock, cryptoWrapperMock, NEW_USER_GROUP_KEY.object)\n\t\t\t\tconst newUserPqKeyPair = generatedKeyPairs.get(NEW_USER_GROUP_KEY.object)!.newKeyPairs\n\t\t\t\tconst latestAdminKeyVersion = 1\n\t\t\t\tconst publicKeyGetOut = createPublicKeyGetOut({\n\t\t\t\t\tpubKeyVersion: latestAdminKeyVersion.toString(),\n\t\t\t\t\tpubRsaKey: null,\n\t\t\t\t\tpubEccKey: object(),\n\t\t\t\t\tpubKyberKey: object(),\n\t\t\t\t})\n\t\t\t\tconst adminPubKeys = convertToVersionedPublicKeys(publicKeyGetOut)\n\t\t\t\twhen(\n\t\t\t\t\tserviceExecutorMock.get(\n\t\t\t\t\t\tPublicKeyService,\n\t\t\t\t\t\tmatchers.argThat((arg: PublicKeyGetIn) => {\n\t\t\t\t\t\t\treturn arg.version == null && arg.identifierType === PublicKeyIdentifierType.GROUP_ID && arg.identifier === adminGroupId\n\t\t\t\t\t\t}),\n\t\t\t\t\t),\n\t\t\t\t).thenResolve(publicKeyGetOut)\n\t\t\t\twhen(\n\t\t\t\t\tasymmetricCryptoFacade.tutaCryptEncryptSymKey(NEW_USER_GROUP_KEY.object, adminPubKeys, {\n\t\t\t\t\t\tversion: NEW_USER_GROUP_KEY.version,\n\t\t\t\t\t\tobject: newUserPqKeyPair.eccKeyPair,\n\t\t\t\t\t}),\n\t\t\t\t).thenResolve({\n\t\t\t\t\tpubEncSymKeyBytes: object(),\n\t\t\t\t\tsenderKeyVersion: NEW_USER_GROUP_KEY.version,\n\t\t\t\t\trecipientKeyVersion: latestAdminKeyVersion,\n\t\t\t\t\tcryptoProtocolVersion: CryptoProtocolVersion.TUTA_CRYPT,\n\t\t\t\t})\n\t\t\t})\n\n\t\t\to(\"Successful rotation\", async function () {\n\t\t\t\tprepareUserKeyRotation(\n\t\t\t\t\t{\n\t\t\t\t\t\tserviceExecutor: serviceExecutorMock,\n\t\t\t\t\t\tcryptoWrapper: cryptoWrapperMock,\n\t\t\t\t\t\tentityClient: entityClientMock,\n\t\t\t\t\t\tasymmetricCryptoFacade: asymmetricCryptoFacade,\n\t\t\t\t\t},\n\t\t\t\t\tkeyRotationFacade,\n\t\t\t\t\tuserGroup,\n\t\t\t\t)\n\n\t\t\t\tawait keyRotationFacade.processPendingKeyRotation(user)\n\n\t\t\t\tverify(\n\t\t\t\t\tserviceExecutorMock.post(\n\t\t\t\t\t\tUserGroupKeyRotationService,\n\t\t\t\t\t\tmatchers.argThat((arg) => {\n\t\t\t\t\t\t\tconst userGroupKeyData: UserGroupKeyRotationData = arg.userGroupKeyData\n\t\t\t\t\t\t\tverifyRecoverCodeData(userGroupKeyData)\n\n\t\t\t\t\t\t\to(userGroupKeyData.adminGroupEncUserGroupKey).equals(null)\n\t\t\t\t\t\t\to(userGroupKeyData.adminGroupKeyVersion).deepEquals(String(NEW_ADMIN_GROUP_ENC_NEW_USER_GROUP_KEY.encryptingKeyVersion))\n\t\t\t\t\t\t\tconst pubAdminGroupEncUserGroupKey = userGroupKeyData.pubAdminGroupEncUserGroupKey\n\t\t\t\t\t\t\to(pubAdminGroupEncUserGroupKey).notEquals(null)\n\t\t\t\t\t\t\to(pubAdminGroupEncUserGroupKey?.pubEncSymKey)\n\n\t\t\t\t\t\t\tverifyUserGroupKeyDataExceptAdminKey(userGroupKeyData, generatedKeyPairs)\n\n\t\t\t\t\t\t\treturn true\n\t\t\t\t\t\t}),\n\t\t\t\t\t),\n\t\t\t\t)\n\t\t\t\tverify(\n\t\t\t\t\tcryptoWrapperMock.deriveKeyWithHkdf(\n\t\t\t\t\t\tmatchers.argThat((arg) => {\n\t\t\t\t\t\t\to(arg.context).equals(\"adminGroupKeyRotationHash\")\n\t\t\t\t\t\t\to(arg.salt).equals(userGroupId)\n\t\t\t\t\t\t\treturn true\n\t\t\t\t\t\t}),\n\t\t\t\t\t),\n\t\t\t\t)\n\n\t\t\t\to(keyRotationFacade.pendingKeyRotations.adminOrUserGroupKeyRotation).equals(null)\n\t\t\t\to(keyRotationFacade.pendingKeyRotations.pwKey).equals(null)\n\t\t\t})\n\n\t\t\to(\"Successful rotation - no recover code\", async function () {\n\t\t\t\tprepareUserKeyRotation(\n\t\t\t\t\t{\n\t\t\t\t\t\tserviceExecutor: serviceExecutorMock,\n\t\t\t\t\t\tcryptoWrapper: cryptoWrapperMock,\n\t\t\t\t\t\tentityClient: entityClientMock,\n\t\t\t\t\t\tasymmetricCryptoFacade: asymmetricCryptoFacade,\n\t\t\t\t\t},\n\t\t\t\t\tkeyRotationFacade,\n\t\t\t\t\tuserGroup,\n\t\t\t\t)\n\n\t\t\t\tassertNotNull(user.auth).recoverCode = null\n\n\t\t\t\tawait keyRotationFacade.processPendingKeyRotation(user)\n\n\t\t\t\tverify(\n\t\t\t\t\tserviceExecutorMock.post(\n\t\t\t\t\t\tUserGroupKeyRotationService,\n\t\t\t\t\t\tmatchers.argThat((arg) => {\n\t\t\t\t\t\t\tconst userGroupKeyData: UserGroupKeyRotationData = arg.userGroupKeyData\n\t\t\t\t\t\t\to(userGroupKeyData.recoverCodeData).equals(null)\n\t\t\t\t\t\t\to(userGroupKeyData.userGroupKeyVersion).deepEquals(String(NEW_USER_GROUP_KEY.version))\n\t\t\t\t\t\t\treturn true\n\t\t\t\t\t\t}),\n\t\t\t\t\t),\n\t\t\t\t)\n\t\t\t\tverify(recoverCodeFacade.getRawRecoverCode(matchers.anything()), { times: 0 })\n\t\t\t\tverify(recoverCodeFacade.encryptRecoveryCode(anything(), anything()), { times: 0 })\n\t\t\t})\n\n\t\t\to(\"Fails if admin public key hashes do not match\", async function () {\n\t\t\t\tprepareUserKeyRotation(\n\t\t\t\t\t{\n\t\t\t\t\t\tserviceExecutor: serviceExecutorMock,\n\t\t\t\t\t\tcryptoWrapper: cryptoWrapperMock,\n\t\t\t\t\t\tentityClient: entityClientMock,\n\t\t\t\t\t\tasymmetricCryptoFacade: asymmetricCryptoFacade,\n\t\t\t\t\t},\n\t\t\t\t\tkeyRotationFacade,\n\t\t\t\t\tuserGroup,\n\t\t\t\t)\n\t\t\t\twhen(cryptoWrapperMock.sha256Hash(matchers.anything())).thenReturn(new Uint8Array([9, 8, 7]))\n\t\t\t\tawait assertThrows(Error, async () => keyRotationFacade.processPendingKeyRotation(user))\n\t\t\t})\n\n\t\t\to(\"Fails if there is no key hash\", async function () {\n\t\t\t\tprepareUserKeyRotation(\n\t\t\t\t\t{\n\t\t\t\t\t\tserviceExecutor: serviceExecutorMock,\n\t\t\t\t\t\tcryptoWrapper: cryptoWrapperMock,\n\t\t\t\t\t\tentityClient: entityClientMock,\n\t\t\t\t\t\tasymmetricCryptoFacade: asymmetricCryptoFacade,\n\t\t\t\t\t},\n\t\t\t\t\tkeyRotationFacade,\n\t\t\t\t\tuserGroup,\n\t\t\t\t)\n\n\t\t\t\tkeyRotationFacade.setPendingKeyRotations({\n\t\t\t\t\tpwKey: PW_KEY,\n\t\t\t\t\tadminOrUserGroupKeyRotation: createTestEntity(KeyRotationTypeRef, {\n\t\t\t\t\t\t_id: [keyRotationsListId, userGroupId],\n\t\t\t\t\t\ttargetKeyVersion: String(Number(userGroup.groupKeyVersion) + 1),\n\t\t\t\t\t\tgroupKeyRotationType: GroupKeyRotationType.User,\n\t\t\t\t\t\tadminGroupKeyAuthenticationData: null, // we set it to null so values are null and will make our code throw\n\t\t\t\t\t}),\n\t\t\t\t\tteamOrCustomerGroupKeyRotations: [],\n\t\t\t\t\tuserAreaGroupsKeyRotations: [],\n\t\t\t\t})\n\n\t\t\t\tawait assertThrows(Error, async function () {\n\t\t\t\t\tawait keyRotationFacade.processPendingKeyRotation(user)\n\t\t\t\t})\n\t\t\t})\n\n\t\t\to(\"Fails if admin is not quantum safe\", async function () {\n\t\t\t\tprepareUserKeyRotation(\n\t\t\t\t\t{\n\t\t\t\t\t\tserviceExecutor: serviceExecutorMock,\n\t\t\t\t\t\tcryptoWrapper: cryptoWrapperMock,\n\t\t\t\t\t\tentityClient: entityClientMock,\n\t\t\t\t\t\tasymmetricCryptoFacade: asymmetricCryptoFacade,\n\t\t\t\t\t},\n\t\t\t\t\tkeyRotationFacade,\n\t\t\t\t\tuserGroup,\n\t\t\t\t)\n\n\t\t\t\twhen(serviceExecutorMock.get(PublicKeyService, matchers.anything())).thenResolve({})\n\n\t\t\t\tawait assertThrows(Error, async function () {\n\t\t\t\t\tawait keyRotationFacade.processPendingKeyRotation(user)\n\t\t\t\t})\n\t\t\t})\n\t\t})\n\n\t\to.spec(\"Ignore currently unsupported cases\", function () {\n\t\t\to(\"If the user group key is not quantum-safe yet, the user area group key rotations are ignored\", async function () {\n\t\t\t\tkeyRotationFacade.setPendingKeyRotations({\n\t\t\t\t\tpwKey: null,\n\t\t\t\t\tadminOrUserGroupKeyRotation: null,\n\t\t\t\t\tteamOrCustomerGroupKeyRotations: [],\n\t\t\t\t\tuserAreaGroupsKeyRotations: makeKeyRotation(keyRotationsListId, GroupKeyRotationType.UserArea, groupId),\n\t\t\t\t})\n\n\t\t\t\tprepareKeyMocks(cryptoWrapperMock)\n\t\t\t\t// make admin group key at 128-bit key\n\t\t\t\tconst insecureUserGroupKey: VersionedKey = {\n\t\t\t\t\tobject: [666],\n\t\t\t\t\tversion: 0,\n\t\t\t\t}\n\t\t\t\tinsecureUserGroupKey.object.length = 4\n\t\t\t\twhen(keyLoaderFacadeMock.getCurrentSymUserGroupKey()).thenReturn(insecureUserGroupKey)\n\n\t\t\t\tawait keyRotationFacade.processPendingKeyRotation(user)\n\n\t\t\t\tverify(serviceExecutorMock.post(anything(), anything()), { times: 0 })\n\t\t\t})\n\t\t})\n\t\to.spec(\"Key rotation for customer or team group\", function () {\n\t\t\to(\"Successful rotation, single member group\", async function () {\n\t\t\t\tkeyRotationFacade.setPendingKeyRotations({\n\t\t\t\t\tpwKey: null,\n\t\t\t\t\tadminOrUserGroupKeyRotation: null,\n\t\t\t\t\tteamOrCustomerGroupKeyRotations: makeKeyRotation(keyRotationsListId, GroupKeyRotationType.Customer, groupId),\n\t\t\t\t\tuserAreaGroupsKeyRotations: [],\n\t\t\t\t})\n\n\t\t\t\tgroup.currentKeys = createTestEntity(KeyPairTypeRef)\n\n\t\t\t\tconst { userEncNewGroupKey, newGroupKeyEncPreviousGroupKey, newKey, adminEncNewGroupKey } = prepareKeyMocks(cryptoWrapperMock)\n\t\t\t\tconst generated = mockGenerateKeyPairs(pqFacadeMock, cryptoWrapperMock, newKey.object)\n\t\t\t\tconst { newKeyPairs, encryptedEccPrivKey, encryptedKyberPrivKey, kyberPublicKeyBytes } = generated.get(newKey.object)!\n\n\t\t\t\tawait keyRotationFacade.processPendingKeyRotation(user)\n\n\t\t\t\tconst captor = matchers.captor()\n\t\t\t\tverify(serviceExecutorMock.post(GroupKeyRotationService, captor.capture()))\n\t\t\t\tverify(shareFacade.sendGroupInvitationRequest(anything()), { times: 0 })\n\t\t\t\tconst sentData: GroupKeyRotationPostIn = captor.value\n\t\t\t\to(sentData.groupKeyUpdates.length).equals(1)\n\t\t\t\tconst update = sentData.groupKeyUpdates[0]\n\n\t\t\t\tconst sentKeyPairs = createTestEntity(KeyPairTypeRef, {\n\t\t\t\t\tpubEccKey: newKeyPairs.eccKeyPair.publicKey,\n\t\t\t\t\tsymEncPrivEccKey: encryptedEccPrivKey,\n\t\t\t\t\tpubKyberKey: kyberPublicKeyBytes,\n\t\t\t\t\tsymEncPrivKyberKey: encryptedKyberPrivKey,\n\t\t\t\t})\n\t\t\t\to(update.keyPair).deepEquals(sentKeyPairs)\n\t\t\t\to(update.group).equals(groupId)\n\t\t\t\to(update.groupKeyVersion).equals(\"1\")\n\t\t\t\to(update.adminGroupEncGroupKey).deepEquals(adminEncNewGroupKey.key)\n\t\t\t\to(update.adminGroupKeyVersion).equals(\"0\")\n\t\t\t\to(update.groupEncPreviousGroupKey).deepEquals(newGroupKeyEncPreviousGroupKey.key)\n\t\t\t\to(update.groupMembershipUpdateData.length).equals(1)\n\t\t\t\to(update.groupMembershipUpdateData[0].userId).equals(userId)\n\t\t\t\to(update.groupMembershipUpdateData[0].userEncGroupKey).deepEquals(userEncNewGroupKey.key)\n\t\t\t\to(update.groupMembershipUpdateData[0].userKeyVersion).equals(\"0\")\n\t\t\t})\n\t\t\to(\"Successful rotation, multiple member group\", async function () {\n\t\t\t\tkeyRotationFacade.setPendingKeyRotations({\n\t\t\t\t\tpwKey: null,\n\t\t\t\t\tadminOrUserGroupKeyRotation: null,\n\t\t\t\t\tteamOrCustomerGroupKeyRotations: makeKeyRotation(keyRotationsListId, GroupKeyRotationType.Customer, groupId),\n\t\t\t\t\tuserAreaGroupsKeyRotations: [],\n\t\t\t\t})\n\n\t\t\t\tconst memberUserId = \"memberUserId\"\n\t\t\t\tconst memberUser = createTestEntity(UserTypeRef, {\n\t\t\t\t\t_id: memberUserId,\n\t\t\t\t\tuserGroup: createTestEntity(GroupMembershipTypeRef, {\n\t\t\t\t\t\tgroup: groupId,\n\t\t\t\t\t\tgroupKeyVersion: \"0\",\n\t\t\t\t\t}),\n\t\t\t\t})\n\t\t\t\twhen(entityClientMock.load(UserTypeRef, memberUserId)).thenResolve(memberUser)\n\t\t\t\twhen(entityClientMock.loadAll(GroupMemberTypeRef, group.members)).thenResolve([\n\t\t\t\t\tcreateTestEntity(GroupMemberTypeRef, {\n\t\t\t\t\t\tgroup: groupId,\n\t\t\t\t\t\tuser: userId,\n\t\t\t\t\t}),\n\t\t\t\t\tcreateTestEntity(GroupMemberTypeRef, {\n\t\t\t\t\t\tgroup: groupId,\n\t\t\t\t\t\tuser: memberUserId,\n\t\t\t\t\t}),\n\t\t\t\t])\n\n\t\t\t\tconst { userEncNewGroupKey, newGroupKeyEncPreviousGroupKey, adminEncNewGroupKey } = prepareKeyMocks(cryptoWrapperMock)\n\t\t\t\tconst otherMemberEncNewGroupKey = mockPrepareKeyForOtherMembers(memberUser, groupManagementFacade, cryptoWrapperMock)\n\n\t\t\t\tawait keyRotationFacade.processPendingKeyRotation(user)\n\n\t\t\t\tconst captor = matchers.captor()\n\t\t\t\tverify(serviceExecutorMock.post(GroupKeyRotationService, captor.capture()))\n\t\t\t\tverify(shareFacade.sendGroupInvitationRequest(anything()), { times: 0 })\n\t\t\t\tconst sentData: GroupKeyRotationPostIn = captor.value\n\t\t\t\to(sentData.groupKeyUpdates.length).equals(1)\n\t\t\t\tconst update = sentData.groupKeyUpdates[0]\n\n\t\t\t\to(update.group).equals(groupId)\n\t\t\t\to(update.groupKeyVersion).equals(\"1\")\n\t\t\t\to(update.adminGroupEncGroupKey).deepEquals(adminEncNewGroupKey.key)\n\t\t\t\to(update.adminGroupKeyVersion).equals(\"0\")\n\t\t\t\to(update.groupEncPreviousGroupKey).deepEquals(newGroupKeyEncPreviousGroupKey.key)\n\t\t\t\to(update.groupMembershipUpdateData.length).equals(2)\n\t\t\t\to(update.groupMembershipUpdateData[0].userId).equals(userId)\n\t\t\t\to(update.groupMembershipUpdateData[0].userEncGroupKey).deepEquals(userEncNewGroupKey.key)\n\t\t\t\to(update.groupMembershipUpdateData[0].userKeyVersion).equals(\"0\")\n\t\t\t\to(update.groupMembershipUpdateData[1].userId).equals(memberUserId)\n\t\t\t\to(update.groupMembershipUpdateData[1].userEncGroupKey).deepEquals(otherMemberEncNewGroupKey.key)\n\t\t\t\to(update.groupMembershipUpdateData[1].userKeyVersion).equals(\"0\")\n\t\t\t})\n\t\t\to(\"If the user is not an admin, the group key rotations are ignored\", async function () {\n\t\t\t\tkeyRotationFacade.setPendingKeyRotations({\n\t\t\t\t\tpwKey: null,\n\t\t\t\t\tadminOrUserGroupKeyRotation: null,\n\t\t\t\t\tteamOrCustomerGroupKeyRotations: makeKeyRotation(keyRotationsListId, GroupKeyRotationType.Customer, groupId),\n\t\t\t\t\tuserAreaGroupsKeyRotations: [],\n\t\t\t\t})\n\n\t\t\t\t// remove admin group membership\n\t\t\t\tfindAllAndRemove(user.memberships, (m) => m.groupType === GroupType.Admin)\n\n\t\t\t\tawait keyRotationFacade.processPendingKeyRotation(user)\n\n\t\t\t\tverify(serviceExecutorMock.post(anything(), anything()), { times: 0 })\n\t\t\t})\n\n\t\t\to(\"If the admin group key is not quantum-safe yet, the group key rotations are ignored\", async function () {\n\t\t\t\tkeyRotationFacade.setPendingKeyRotations({\n\t\t\t\t\tpwKey: null,\n\t\t\t\t\tadminOrUserGroupKeyRotation: null,\n\t\t\t\t\tteamOrCustomerGroupKeyRotations: makeKeyRotation(keyRotationsListId, GroupKeyRotationType.Customer, groupId),\n\t\t\t\t\tuserAreaGroupsKeyRotations: [],\n\t\t\t\t})\n\n\t\t\t\tprepareKeyMocks(cryptoWrapperMock)\n\t\t\t\t// make admin group key a 128-bit key\n\t\t\t\tconst insecureAdminGroupKey: VersionedKey = {\n\t\t\t\t\tobject: [666],\n\t\t\t\t\tversion: 0,\n\t\t\t\t}\n\t\t\t\tinsecureAdminGroupKey.object.length = 4\n\t\t\t\twhen(keyLoaderFacadeMock.getCurrentSymGroupKey(adminGroupId)).thenResolve(insecureAdminGroupKey)\n\n\t\t\t\tawait keyRotationFacade.processPendingKeyRotation(user)\n\n\t\t\t\tverify(serviceExecutorMock.post(anything(), anything()), { times: 0 })\n\t\t\t})\n\n\t\t\to(\"When the group has no members, the rotation is still handled but no membership update is created\", async function () {\n\t\t\t\tkeyRotationFacade.setPendingKeyRotations({\n\t\t\t\t\tpwKey: null,\n\t\t\t\t\tadminOrUserGroupKeyRotation: null,\n\t\t\t\t\tteamOrCustomerGroupKeyRotations: makeKeyRotation(keyRotationsListId, GroupKeyRotationType.Team, groupId),\n\t\t\t\t\tuserAreaGroupsKeyRotations: [],\n\t\t\t\t})\n\n\t\t\t\t//no group membership\n\t\t\t\twhen(entityClientMock.loadAll(GroupMemberTypeRef, group.members)).thenResolve([])\n\n\t\t\t\t//we cannot resolve the group key via the membership\n\t\t\t\twhen(keyLoaderFacadeMock.getCurrentSymGroupKey(groupId)).thenReject(Error(`No group with groupId ${groupId} found!`))\n\t\t\t\t//but via adminEncGroupKey\n\t\t\t\twhen(groupManagementFacade.getGroupKeyViaAdminEncGKey(groupId, 0)).thenResolve(CURRENT_USER_AREA_GROUP_KEY.object)\n\n\t\t\t\tconst { newGroupKeyEncPreviousGroupKey, adminEncNewGroupKey } = prepareKeyMocks(cryptoWrapperMock)\n\n\t\t\t\tawait keyRotationFacade.processPendingKeyRotation(user)\n\n\t\t\t\tconst captor = matchers.captor()\n\t\t\t\tverify(serviceExecutorMock.post(GroupKeyRotationService, captor.capture()))\n\t\t\t\tverify(shareFacade.sendGroupInvitationRequest(anything()), { times: 0 })\n\t\t\t\tconst sentData: GroupKeyRotationPostIn = captor.value\n\t\t\t\to(sentData.groupKeyUpdates.length).equals(1)\n\t\t\t\tconst update = sentData.groupKeyUpdates[0]\n\n\t\t\t\to(update.group).equals(groupId)\n\t\t\t\to(update.groupKeyVersion).equals(\"1\")\n\t\t\t\to(update.adminGroupEncGroupKey).deepEquals(adminEncNewGroupKey.key)\n\t\t\t\to(update.adminGroupKeyVersion).equals(\"0\")\n\t\t\t\to(update.groupEncPreviousGroupKey).deepEquals(newGroupKeyEncPreviousGroupKey.key)\n\t\t\t\to(update.groupMembershipUpdateData.length).equals(0)\n\t\t\t})\n\t\t\to(\"Updates for multiple groups are executed in one request\", async function () {\n\t\t\t\tconst secondGroupId = \"groupId-2\"\n\t\t\t\tconst thirdGroupId = \"groupId-3\"\n\t\t\t\tmakeGroupWithMembership(secondGroupId, user)\n\t\t\t\tmakeGroupWithMembership(thirdGroupId, user)\n\t\t\t\twhen(keyLoaderFacadeMock.getCurrentSymGroupKey(secondGroupId)).thenResolve(CURRENT_USER_AREA_GROUP_KEY)\n\t\t\t\twhen(keyLoaderFacadeMock.getCurrentSymGroupKey(thirdGroupId)).thenResolve(CURRENT_USER_AREA_GROUP_KEY)\n\n\t\t\t\tkeyRotationFacade.setPendingKeyRotations({\n\t\t\t\t\tpwKey: null,\n\t\t\t\t\tadminOrUserGroupKeyRotation: null,\n\t\t\t\t\tteamOrCustomerGroupKeyRotations: makeKeyRotation(keyRotationsListId, GroupKeyRotationType.Team, groupId).concat(\n\t\t\t\t\t\tmakeKeyRotation(keyRotationsListId, GroupKeyRotationType.Customer, secondGroupId).concat(\n\t\t\t\t\t\t\tmakeKeyRotation(keyRotationsListId, GroupKeyRotationType.UserArea, thirdGroupId),\n\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t\t\tuserAreaGroupsKeyRotations: [],\n\t\t\t\t})\n\n\t\t\t\tgroup.currentKeys = createTestEntity(KeyPairTypeRef)\n\n\t\t\t\t//no group membership\n\t\t\t\twhen(entityClientMock.loadAll(GroupMemberTypeRef, group.members)).thenResolve([])\n\n\t\t\t\tconst { newKey } = prepareKeyMocks(cryptoWrapperMock)\n\t\t\t\tmockGenerateKeyPairs(pqFacadeMock, cryptoWrapperMock, newKey.object)\n\n\t\t\t\tawait keyRotationFacade.processPendingKeyRotation(user)\n\n\t\t\t\tconst captor = matchers.captor()\n\t\t\t\tverify(serviceExecutorMock.post(GroupKeyRotationService, captor.capture()))\n\t\t\t\tverify(shareFacade.sendGroupInvitationRequest(anything()), { times: 0 })\n\t\t\t\tconst sentData: GroupKeyRotationPostIn = captor.value\n\t\t\t\to(sentData.groupKeyUpdates.length).equals(3)\n\t\t\t\tconst update = sentData.groupKeyUpdates[0]\n\t\t\t\to(update.group).equals(groupId)\n\t\t\t\to(update.groupKeyVersion).equals(\"1\")\n\t\t\t\tconst secondUpdate = sentData.groupKeyUpdates[1]\n\t\t\t\to(secondUpdate.group).equals(secondGroupId)\n\t\t\t\to(secondUpdate.groupKeyVersion).equals(\"1\")\n\t\t\t\tconst thirdUpdate = sentData.groupKeyUpdates[2]\n\t\t\t\to(thirdUpdate.group).equals(thirdGroupId)\n\t\t\t\to(thirdUpdate.groupKeyVersion).equals(\"1\")\n\t\t\t})\n\t\t})\n\t\to.spec(\"processPendingKeyRotationsAndUpdates error handling\", function () {\n\t\t\to(\"loadPendingKeyRotations LockedError is caught\", async function () {\n\t\t\t\tconst terror = new LockedError(\"test error\")\n\t\t\t\twhen(entityClientMock.load(UserGroupRootTypeRef, anything())).thenReject(terror)\n\t\t\t\tconst log = (console.log = spy(console.log))\n\t\t\t\tawait keyRotationFacade.processPendingKeyRotationsAndUpdates(object())\n\t\t\t\t//make sure we do not throw\n\t\t\t\t//make sure we log the error to console\n\t\t\t\to(log.callCount).equals(1)\n\t\t\t\to(log.args[1]).equals(terror)\n\t\t\t})\n\t\t\to(\"loadPendingKeyRotations other Errors are thrown\", async function () {\n\t\t\t\tconst terror = new Error(\"test error\")\n\t\t\t\twhen(entityClientMock.load(UserGroupRootTypeRef, anything())).thenReject(terror)\n\t\t\t\tconst log = (console.log = spy(console.log))\n\t\t\t\tawait assertThrows(Error, async () => keyRotationFacade.processPendingKeyRotationsAndUpdates(object()))\n\t\t\t})\n\n\t\t\to(\"processPendingKeyRotation LockedError is caught\", async function () {\n\t\t\t\t//ignore errors from  previous function calls\n\t\t\t\tmockAttribute(keyRotationFacade, keyRotationFacade.loadPendingKeyRotations, () => {})\n\t\t\t\t//make processPendingKeyRotations throw\n\t\t\t\tconst terror = new LockedError(\"test error\")\n\t\t\t\tmockAttribute(keyRotationFacade, keyRotationFacade.processPendingKeyRotation, () => {\n\t\t\t\t\tthrow terror\n\t\t\t\t})\n\t\t\t\tconst log = (console.log = spy(console.log))\n\t\t\t\tawait keyRotationFacade.processPendingKeyRotationsAndUpdates(object())\n\t\t\t\t//make sure we do not throw\n\t\t\t\t//make sure we log the error to console\n\t\t\t\to(log.callCount).equals(1)\n\t\t\t\to(log.args[1]).equals(terror)\n\t\t\t})\n\t\t\to(\"processPendingKeyRotation other errors are thrown\", async function () {\n\t\t\t\t//ignore errors from  previous function calls\n\t\t\t\tmockAttribute(keyRotationFacade, keyRotationFacade.loadPendingKeyRotations, () => {})\n\t\t\t\t//make processPendingKeyRotations throw\n\t\t\t\tconst terror = new Error(\"test error\")\n\t\t\t\tmockAttribute(keyRotationFacade, keyRotationFacade.processPendingKeyRotation, () => {\n\t\t\t\t\tthrow terror\n\t\t\t\t})\n\t\t\t\tconst log = (console.log = spy(console.log))\n\t\t\t\tawait assertThrows(Error, async () => keyRotationFacade.processPendingKeyRotationsAndUpdates(object()))\n\t\t\t})\n\n\t\t\to(\"updateGroupMemberships LockedError is caught\", async function () {\n\t\t\t\t//ignore errors from previous function calls\n\t\t\t\tmockAttribute(keyRotationFacade, keyRotationFacade.loadPendingKeyRotations, () => {})\n\t\t\t\tmockAttribute(keyRotationFacade, keyRotationFacade.processPendingKeyRotation, () => {})\n\t\t\t\t//let update membership throw\n\t\t\t\tconst terror = new LockedError(\"test error\")\n\t\t\t\tmockAttribute(keyRotationFacade, keyRotationFacade.updateGroupMemberships, () => {\n\t\t\t\t\tthrow terror\n\t\t\t\t})\n\n\t\t\t\tconst log = (console.log = spy(console.log))\n\n\t\t\t\tawait keyRotationFacade.processPendingKeyRotationsAndUpdates(object())\n\t\t\t\t//make sure we do not throw\n\t\t\t\t//make sure we log the error to console\n\t\t\t\to(log.callCount).equals(1)\n\t\t\t\to(log.args[1]).equals(terror)\n\t\t\t})\n\t\t\to(\"updateGroupMemberships other errors are thrown\", async function () {\n\t\t\t\t//ignore errors from previous function calls\n\t\t\t\tmockAttribute(keyRotationFacade, keyRotationFacade.loadPendingKeyRotations, () => {})\n\t\t\t\tmockAttribute(keyRotationFacade, keyRotationFacade.processPendingKeyRotation, () => {})\n\t\t\t\t//let update membership throw\n\t\t\t\tconst terror = new Error(\"test error\")\n\t\t\t\tmockAttribute(keyRotationFacade, keyRotationFacade.updateGroupMemberships, () => {\n\t\t\t\t\tthrow terror\n\t\t\t\t})\n\n\t\t\t\tconst log = (console.log = spy(console.log))\n\n\t\t\t\tawait assertThrows(Error, async () => keyRotationFacade.processPendingKeyRotationsAndUpdates(object()))\n\t\t\t})\n\t\t})\n\t})\n\n\tfunction makeGroupWithMembership(groupId: Id, user: User): { group: Group; groupInfo: GroupInfo } {\n\t\tconst group = createTestEntity(GroupTypeRef, {\n\t\t\t_id: groupId,\n\t\t\tadminGroupKeyVersion: \"0\",\n\t\t\tgroupInfo: [\"listId\", groupInfoElementId],\n\t\t\t// we need this to be a non-empty byte array\n\t\t\tadminGroupEncGKey: new Uint8Array(1),\n\t\t\tpubAdminGroupEncGKey: null,\n\t\t\tgroupKeyVersion: \"0\",\n\t\t\tinvitations: invitationsListId,\n\t\t\tadmin: adminGroupId,\n\t\t\tmembers: \"membersListId\",\n\t\t})\n\t\tconst groupInfo = createTestEntity(GroupInfoTypeRef, {\n\t\t\t_id: group.groupInfo,\n\t\t\tgroup: groupId,\n\t\t})\n\n\t\twhen(groupManagementFacade.hasAdminEncGKey(group)).thenReturn(true)\n\t\twhen(entityClientMock.load(GroupInfoTypeRef, group.groupInfo)).thenResolve(groupInfo)\n\t\twhen(entityClientMock.load(GroupTypeRef, groupId)).thenResolve(group)\n\t\twhen(entityClientMock.loadAll(SentGroupInvitationTypeRef, group.invitations)).thenResolve([])\n\t\tconst member = createTestEntity(GroupMemberTypeRef, {\n\t\t\tgroup: groupId,\n\t\t\tuser: user._id,\n\t\t})\n\t\tuser.memberships.push(\n\t\t\tcreateTestEntity(GroupMembershipTypeRef, {\n\t\t\t\tgroup: groupId,\n\t\t\t\tgroupKeyVersion: \"0\",\n\t\t\t}),\n\t\t)\n\t\twhen(entityClientMock.loadAll(GroupMemberTypeRef, group.members)).thenResolve([member])\n\t\treturn { group, groupInfo }\n\t}\n})\n\nasync function makeUser(userId: Id, userEncAdminKey: VersionedEncryptedKey): Promise<User> {\n\treturn createTestEntity(UserTypeRef, {\n\t\t_id: userId,\n\t\tuserGroup: createTestEntity(GroupMembershipTypeRef, {\n\t\t\tgroupKeyVersion: \"0\",\n\t\t\tsymKeyVersion: String(PW_ENC_CURRENT_USER_GROUP_KEY.encryptingKeyVersion),\n\t\t\tsymEncGKey: PW_ENC_CURRENT_USER_GROUP_KEY.key,\n\t\t\tgroupType: GroupType.User,\n\t\t\tgroup: userGroupId,\n\t\t}),\n\t\tauth: createTestEntity(UserAuthenticationTypeRef, { recoverCode: recoverCodeId }),\n\t\tmemberships: [\n\t\t\tcreateTestEntity(GroupMembershipTypeRef, {\n\t\t\t\tgroupType: GroupType.Admin,\n\t\t\t\tgroupKeyVersion: \"0\",\n\t\t\t\tsymKeyVersion: String(userEncAdminKey.encryptingKeyVersion),\n\t\t\t\tsymEncGKey: userEncAdminKey.key,\n\t\t\t\tgroup: adminGroupId,\n\t\t\t}),\n\t\t\tcreateTestEntity(GroupMembershipTypeRef, {\n\t\t\t\tgroup: someGroupId,\n\t\t\t}),\n\t\t\tcreateTestEntity(GroupMembershipTypeRef, {\n\t\t\t\tgroupType: GroupType.Customer,\n\t\t\t\tgroup: usersCustomerGroupId,\n\t\t\t}),\n\t\t],\n\t\tcustomer: \"customerId\",\n\t})\n}\n\nfunction makeKeyRotation(keyRotationsList: Id, groupType: string, groupId: Id): Array<KeyRotation> {\n\treturn [\n\t\tcreateTestEntity(KeyRotationTypeRef, {\n\t\t\t_id: [keyRotationsList, groupId],\n\t\t\tgroupKeyRotationType: groupType,\n\t\t\ttargetKeyVersion: \"1\",\n\t\t}),\n\t]\n}\n\nasync function makeUserGroupRoot(keyRotationsList: Id, invitations: Id, groupKeyUpdatesList: Id): Promise<UserGroupRoot> {\n\treturn createTestEntity(UserGroupRootTypeRef, {\n\t\tkeyRotations: createTestEntity(KeyRotationsRefTypeRef, {\n\t\t\tlist: keyRotationsList,\n\t\t}),\n\t\tinvitations,\n\t\tgroupKeyUpdates: createTestEntity(GroupKeyUpdatesRefTypeRef, {\n\t\t\tlist: groupKeyUpdatesList,\n\t\t}),\n\t})\n}\n\nfunction prepareKeyMocks(cryptoWrapperMock: CryptoWrapper) {\n\twhen(cryptoWrapperMock.aes256RandomKey()).thenReturn(NEW_GROUP_KEY.object)\n\n\tconst encryptingKeyCaptor = matchers.captor()\n\tconst keyCaptor = matchers.captor()\n\twhen(cryptoWrapperMock.encryptKeyWithVersionedKey(encryptingKeyCaptor.capture(), keyCaptor.capture())).thenDo((arg) => ({\n\t\tencryptingKeyVersion: encryptingKeyCaptor.value.version,\n\t\tkey: new Uint8Array(encryptingKeyCaptor.value.object.concat(keyCaptor.value)),\n\t}))\n\n\treturn {\n\t\tuserEncNewGroupKey: CURRENT_USER_GROUP_ENC_NEW_USER_AREA_GROUP_KEY,\n\t\tnewGroupKeyEncPreviousGroupKey: NEW_USER_AREA_GROUP_ENC_CURRENT_USER_AREA_GROUP_KEY,\n\t\tnewKey: NEW_GROUP_KEY,\n\t\tadminEncNewGroupKey: CURRENT_ADMIN_GROUP_ENC_NEW_USER_AREA_GROUP_KEY,\n\t\tcurrentAdminGroupKey: CURRENT_ADMIN_GROUP_KEY,\n\t}\n}\n\nfunction mockPrepareKeyForOtherMembers(user: User, groupManagementFacadeMock: GroupManagementFacade, cryptoWrapperMock: CryptoWrapper) {\n\twhen(groupManagementFacadeMock.getGroupKeyViaAdminEncGKey(user.userGroup.group, Number(user.userGroup.groupKeyVersion))).thenResolve(\n\t\tOTHER_MEMBER_USER_GROUP_KEY.object,\n\t)\n\t// when(cryptoWrapperMock.encryptKey(OTHER_MEMBER_USER_GROUP_KEY.object, newGroupKey.object))\n\tconst encryptingKeyCaptor = matchers.captor()\n\tconst keyCaptor = matchers.captor()\n\twhen(cryptoWrapperMock.encryptKey(encryptingKeyCaptor.capture(), keyCaptor.capture())).thenDo(\n\t\t(arg) => new Uint8Array(encryptingKeyCaptor.value.concat(keyCaptor.value)),\n\t)\n\treturn OTHER_USER_GROUP_ENC_NEW_SHARED_GROUP_KEY\n}\n\ntype MockedKeyPairs = {\n\tnewKeyPairs: PQKeyPairs\n\tencryptedEccPrivKey: Uint8Array\n\tencryptedKyberPrivKey: Uint8Array\n\tkyberPublicKeyBytes: Uint8Array\n}\n\nfunction mockGenerateKeyPairs(pqFacadeMock: PQFacade, cryptoWrapperMock: CryptoWrapper, ...newKeys: AesKey[]): Map<AesKey, MockedKeyPairs> {\n\tconst results = new Map<AesKey, MockedKeyPairs>()\n\tfor (const newKey of newKeys) {\n\t\tconst newKeyPairs: PQKeyPairs = object()\n\t\tnewKeyPairs.eccKeyPair = {\n\t\t\tpublicKey: Uint8Array.from([1]),\n\t\t\tprivateKey: object<Uint8Array>(),\n\t\t}\n\t\tnewKeyPairs.kyberKeyPair = {\n\t\t\tpublicKey: object<KyberPublicKey>(),\n\t\t\tprivateKey: object<KyberPrivateKey>(),\n\t\t}\n\n\t\tconst encryptedEccPrivKey: Uint8Array = object()\n\t\twhen(cryptoWrapperMock.encryptEccKey(newKey, newKeyPairs.eccKeyPair.privateKey)).thenReturn(encryptedEccPrivKey)\n\t\tconst encryptedKyberPrivKey: Uint8Array = object()\n\t\twhen(cryptoWrapperMock.encryptKyberKey(newKey, newKeyPairs.kyberKeyPair.privateKey)).thenReturn(encryptedKyberPrivKey)\n\t\tconst kyberPublicKeyBytes: Uint8Array = Uint8Array.from([3])\n\t\twhen(cryptoWrapperMock.kyberPublicKeyToBytes(newKeyPairs.kyberKeyPair.publicKey)).thenReturn(kyberPublicKeyBytes)\n\t\tresults.set(newKey, { newKeyPairs, encryptedEccPrivKey, encryptedKyberPrivKey, kyberPublicKeyBytes })\n\t\twhen(\n\t\t\tcryptoWrapperMock.decryptKeyPair(\n\t\t\t\tnewKey,\n\t\t\t\tmatchers.argThat((arg: EncryptedPqKeyPairs) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\targ.symEncPrivEccKey === encryptedEccPrivKey &&\n\t\t\t\t\t\targ.symEncPrivKyberKey === encryptedKyberPrivKey &&\n\t\t\t\t\t\targ.symEncPrivRsaKey == null &&\n\t\t\t\t\t\targ.pubKyberKey === kyberPublicKeyBytes\n\t\t\t\t\t)\n\t\t\t\t}),\n\t\t\t),\n\t\t).thenReturn(newKeyPairs)\n\t}\n\t// we need to pass the first result separately because thenResolve's signature requires it\n\tconst [first, ...rest] = Array.from(results.values())\n\twhen(pqFacadeMock.generateKeyPairs()).thenResolve(first.newKeyPairs, ...rest.map((result) => result.newKeyPairs))\n\n\treturn results\n}\n\nfunction verifyKeyPair(keyPair: KeyPair | null | undefined, mockedKeyPairs: MockedKeyPairs) {\n\to(keyPair).notEquals(null)\n\to(keyPair?.symEncPrivEccKey).deepEquals(mockedKeyPairs.encryptedEccPrivKey)\n\to(keyPair?.pubEccKey).deepEquals(mockedKeyPairs.newKeyPairs.eccKeyPair.publicKey)\n\to(keyPair?.symEncPrivKyberKey).deepEquals(mockedKeyPairs.encryptedKyberPrivKey)\n\to(keyPair?.pubKyberKey).deepEquals(mockedKeyPairs.kyberPublicKeyBytes)\n\to(keyPair?.symEncPrivRsaKey).equals(null)\n\to(keyPair?.pubRsaKey).equals(null)\n}\n\nfunction verifyUserGroupKeyDataExceptAdminKey(userGroupKeyData: UserGroupKeyRotationData, generatedKeyPairs: Map<AesKey, MockedKeyPairs>) {\n\to(userGroupKeyData.userGroupKeyVersion).deepEquals(String(NEW_USER_GROUP_KEY.version))\n\to(userGroupKeyData.group).deepEquals(userGroupId)\n\to(userGroupKeyData.authVerifier).deepEquals(AUTH_VERIFIER)\n\to(userGroupKeyData.distributionKeyEncUserGroupKey).deepEquals(DISTRIBUTION_KEY_ENC_NEW_USER_GROUP_KEY)\n\tverifyKeyPair(userGroupKeyData.keyPair, generatedKeyPairs.get(NEW_USER_GROUP_KEY.object)!)\n\to(userGroupKeyData.passphraseEncUserGroupKey).deepEquals(PW_ENC_NEW_USER_GROUP_KEY.key)\n\to(userGroupKeyData.userGroupEncPreviousGroupKey).deepEquals(NEW_USER_GROUP_ENC_CURRENT_USER_GROUP_KEY.key)\n}\n","import o from \"@tutao/otest\"\nimport { ConversationItem, ConversationPrefProvider, ConversationViewModel } from \"../../../../src/mail-app/mail/view/ConversationViewModel.js\"\nimport {\n\tConversationEntry,\n\tConversationEntryTypeRef,\n\tMail,\n\tMailboxProperties,\n\tMailboxPropertiesTypeRef,\n\tMailFolderTypeRef,\n\tMailTypeRef,\n} from \"../../../../src/common/api/entities/tutanota/TypeRefs.js\"\nimport { CreateMailViewerOptions } from \"../../../../src/mail-app/mail/view/MailViewer.js\"\nimport { MailViewerViewModel } from \"../../../../src/mail-app/mail/view/MailViewerViewModel.js\"\nimport { EntityClient } from \"../../../../src/common/api/common/EntityClient.js\"\nimport { EntityRestClientMock } from \"../../api/worker/rest/EntityRestClientMock.js\"\nimport { EntityEventsListener, EventController } from \"../../../../src/common/api/main/EventController.js\"\nimport { defer, DeferredObject, delay, noOp } from \"@tutao/tutanota-utils\"\nimport { matchers, object, when } from \"testdouble\"\nimport { MailSetKind, MailState, OperationType } from \"../../../../src/common/api/common/TutanotaConstants.js\"\nimport { isSameId } from \"../../../../src/common/api/common/utils/EntityUtils.js\"\nimport { createTestEntity } from \"../../TestUtils.js\"\nimport { MailboxDetail, MailboxModel } from \"../../../../src/common/mailFunctionality/MailboxModel.js\"\nimport { MailModel } from \"../../../../src/mail-app/mail/model/MailModel.js\"\n\no.spec(\"ConversationViewModel\", function () {\n\tlet conversation: ConversationEntry[]\n\n\tlet primaryMail: Mail\n\tlet anotherMail: Mail\n\n\tlet viewModel: ConversationViewModel\n\tlet mailModel: MailModel\n\tlet mailboxModel: MailboxModel\n\tlet mailboxDetail: MailboxDetail\n\tlet entityRestClientMock: EntityRestClientMock\n\tlet prefProvider: ConversationPrefProvider\n\tlet redraw: () => unknown\n\tlet loadingDefer: DeferredObject<void>\n\tlet eventCallback: EntityEventsListener\n\n\tconst listId = \"listId\"\n\n\tconst viewModelFactory = async (): Promise<\n\t\t(options: CreateMailViewerOptions, mailboxDetails: MailboxDetail, mailboxProperties: MailboxProperties) => MailViewerViewModel\n\t> => {\n\t\treturn ({ mail, showFolder }) => {\n\t\t\tconst viewModelObject = object<MailViewerViewModel>()\n\t\t\t// @ts-ignore\n\t\t\tviewModelObject.mail = mail\n\t\t\treturn viewModelObject\n\t\t}\n\t}\n\n\tasync function makeViewModel(pMail: Mail): Promise<void> {\n\t\tconst factory = await viewModelFactory()\n\t\tconst mailboxProperties = createTestEntity(MailboxPropertiesTypeRef)\n\t\tconst entityClient = new EntityClient(entityRestClientMock)\n\n\t\tconst eventController: EventController = {\n\t\t\taddEntityListener: (listener) => {\n\t\t\t\teventCallback = listener\n\t\t\t},\n\t\t\tremoveEntityListener: noOp,\n\t\t} as Partial<EventController> as EventController\n\n\t\tconst viewModelParams = {\n\t\t\tmail: pMail,\n\t\t\tshowFolder: false,\n\t\t\tdelayBodyRenderingUntil: Promise.resolve(),\n\t\t}\n\n\t\tviewModel = new ConversationViewModel(\n\t\t\tviewModelParams,\n\t\t\t(options) => factory(options, mailboxDetail, mailboxProperties),\n\t\t\tentityClient,\n\t\t\teventController,\n\t\t\tprefProvider,\n\t\t\tmailModel,\n\t\t\tredraw,\n\t\t)\n\t}\n\n\tconst addMail = (mailId: string): Mail => {\n\t\tconst conversationId = \"conversation\" + mailId\n\t\tconst newMail = createTestEntity(MailTypeRef, {\n\t\t\t_id: [listId, mailId],\n\t\t\tconversationEntry: [listId, conversationId],\n\t\t\tstate: MailState.RECEIVED,\n\t\t})\n\t\tconst mailConversationEntry = createTestEntity(ConversationEntryTypeRef, {\n\t\t\t_id: [listId, conversationId],\n\t\t\tmail: newMail._id,\n\t\t\tprevious: primaryMail?._id,\n\t\t})\n\n\t\tentityRestClientMock.addListInstances(newMail)\n\t\tentityRestClientMock.addListInstances(mailConversationEntry)\n\t\tconversation.push(mailConversationEntry)\n\n\t\treturn newMail\n\t}\n\n\tconst sameAsConversation = (mailsDisplayed: ConversationItem[]) => {\n\t\tfor (let i = 0; i < mailsDisplayed.length; i++) {\n\t\t\tif (!isSameId(mailsDisplayed[i].entryId, conversation[i]._id)) {\n\t\t\t\treturn false\n\t\t\t}\n\t\t}\n\t\treturn true\n\t}\n\n\to.beforeEach(async function () {\n\t\tconversation = []\n\n\t\tmailboxDetail = object()\n\t\tmailModel = object()\n\n\t\tentityRestClientMock = new EntityRestClientMock()\n\n\t\tprefProvider = object()\n\n\t\tloadingDefer = defer()\n\t\tredraw = async () => {\n\t\t\t// defer to the end of the event loop so that viewModel has correct loading state\n\t\t\tawait delay(1)\n\t\t\tif (viewModel.isFinished()) {\n\t\t\t\tloadingDefer.resolve()\n\t\t\t}\n\t\t}\n\n\t\tprimaryMail = addMail(\"mailId\")\n\t\tanotherMail = addMail(\"anotherMail\")\n\n\t\tawait makeViewModel(primaryMail)\n\t})\n\n\to.spec(\"Correct amount of mails are shown\", function () {\n\t\to(\"shows all mails in conversation by default\", async function () {\n\t\t\tviewModel.init(Promise.resolve())\n\t\t\tawait loadingDefer.promise\n\n\t\t\tconst numMailsDisplayed = viewModel.conversationItems().filter((i) => i.type === \"mail\").length\n\t\t\to(numMailsDisplayed).equals(conversation.length)(\n\t\t\t\t`Wrong number of mails in conversationItems, got ${numMailsDisplayed} should be ${conversation.length}`,\n\t\t\t)\n\t\t})\n\n\t\to(\"when the option is off it only shows selected mail\", async function () {\n\t\t\twhen(prefProvider.getConversationViewShowOnlySelectedMail()).thenReturn(true)\n\n\t\t\tviewModel.init(Promise.resolve())\n\t\t\tawait loadingDefer.promise\n\n\t\t\tconst numMailsDisplayed = viewModel.conversationItems().filter((i) => i.type === \"mail\").length\n\t\t\to(numMailsDisplayed).equals(1)(`Wrong number of mails in conversationItems, got ${numMailsDisplayed} should be 1`)\n\t\t})\n\t})\n\n\to.spec(\"Drafts in Conversation View\", function () {\n\t\to(\"Should be in conversation\", async function () {\n\t\t\tconst draftMail = addMail(\"draftMail\")\n\t\t\tdraftMail.state = MailState.DRAFT\n\n\t\t\tviewModel.init(Promise.resolve())\n\t\t\tawait loadingDefer.promise\n\n\t\t\tconst numMailsDisplayed = viewModel.conversationItems().filter((i) => i.type === \"mail\").length\n\t\t\to(numMailsDisplayed).equals(conversation.length)(\n\t\t\t\t`Wrong number of mails in conversationItems, got ${numMailsDisplayed} should be ${conversation.length}`,\n\t\t\t)\n\t\t})\n\n\t\to(\"when draft is in trash folder, it should not be included in the conversation\", async function () {\n\t\t\t// add draft mail\n\t\t\tconst trashDraftMail = addMail(\"trashDraftMail\")\n\t\t\ttrashDraftMail.state = MailState.DRAFT\n\n\t\t\tconst trash = createTestEntity(MailFolderTypeRef, { _id: [listId, \"trashFolder\"], folderType: MailSetKind.TRASH })\n\t\t\tentityRestClientMock.addListInstances(trash)\n\n\t\t\twhen(mailModel.getMailboxDetailsForMail(matchers.anything())).thenResolve(mailboxDetail)\n\t\t\twhen(mailModel.getMailFolderForMail(trashDraftMail)).thenReturn(trash)\n\n\t\t\tconversation.pop() // since this mail shouldn't actually be a part of the conversation\n\n\t\t\tviewModel.init(Promise.resolve())\n\t\t\tawait loadingDefer.promise\n\n\t\t\tconst mailsDisplayed = viewModel.conversationItems().filter((i) => i.type === \"mail\")\n\t\t\to(sameAsConversation(mailsDisplayed)).equals(true)(\n\t\t\t\t`Wrong mails in conversation, got ${mailsDisplayed.map((ci) => ci.entryId)}, should be ${conversation.map((ce) => ce._id)}`,\n\t\t\t)\n\t\t})\n\n\t\to(\"when draft is in trash folder but is the primary mail, it should be included in the conversation\", async function () {\n\t\t\t// add draft mail\n\t\t\tconst trashDraftMail = addMail(\"trashDraftMail\")\n\t\t\ttrashDraftMail.state = MailState.DRAFT\n\n\t\t\tconst trash = createTestEntity(MailFolderTypeRef, { _id: [listId, \"trashFolder\"], folderType: MailSetKind.TRASH })\n\t\t\tentityRestClientMock.addListInstances(trash)\n\n\t\t\twhen(mailModel.getMailboxDetailsForMail(trashDraftMail)).thenResolve(mailboxDetail)\n\t\t\twhen(mailModel.getMailFolderForMail(trashDraftMail)).thenReturn(trash)\n\n\t\t\tawait makeViewModel(trashDraftMail)\n\n\t\t\tviewModel.init(Promise.resolve())\n\t\t\tawait loadingDefer.promise\n\n\t\t\tconst mailsDisplayed = viewModel.conversationItems().filter((i) => i.type === \"mail\")\n\t\t\to(sameAsConversation(mailsDisplayed)).equals(true)(\n\t\t\t\t`Wrong mails in conversation, got ${mailsDisplayed.map((ci) => ci.entryId)}, should be ${conversation.map((ce) => ce._id)}`,\n\t\t\t)\n\t\t})\n\t})\n\n\to.spec(\"Entity Updates\", function () {\n\t\to(\"when a new mail comes in, it is added to conversation\", async function () {\n\t\t\tviewModel.init(Promise.resolve())\n\t\t\tawait loadingDefer.promise\n\n\t\t\tconst yetAnotherMail = addMail(\"yetAnotherMailId\")\n\n\t\t\tawait eventCallback(\n\t\t\t\t[\n\t\t\t\t\t{\n\t\t\t\t\t\tapplication: \"tutanota\",\n\t\t\t\t\t\ttype: \"ConversationEntry\",\n\t\t\t\t\t\toperation: OperationType.CREATE,\n\t\t\t\t\t\tinstanceListId: listId,\n\t\t\t\t\t\tinstanceId: yetAnotherMail.conversationEntry[1],\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\t\"mailGroupId\",\n\t\t\t)\n\n\t\t\tconst mailsDisplayed = viewModel.conversationItems().filter((i) => i.type === \"mail\")\n\t\t\to(sameAsConversation(mailsDisplayed)).equals(true)(\n\t\t\t\t`Wrong mails in conversation, got ${mailsDisplayed.map((ci) => `[${ci.entryId[0]}, ${ci.entryId[1]}]`).join(\", \")}, should be ${conversation\n\t\t\t\t\t.map((ce) => `[${ce._id[0]}, ${ce._id[1]}]`)\n\t\t\t\t\t.join(\", \")}`,\n\t\t\t)\n\t\t})\n\n\t\to(\"when a mail gets deleted, it is removed from conversation\", async function () {\n\t\t\tviewModel.init(Promise.resolve())\n\t\t\tawait loadingDefer.promise\n\n\t\t\tconversation.pop() // \"deleting\" the mail\n\t\t\tconst mailConversationEntry = createTestEntity(ConversationEntryTypeRef, {\n\t\t\t\t_id: anotherMail.conversationEntry,\n\t\t\t\tmail: anotherMail._id,\n\t\t\t\tprevious: primaryMail?._id,\n\t\t\t})\n\t\t\tawait entityRestClientMock.erase(mailConversationEntry)\n\t\t\tconst deletedmailConversationEntry = createTestEntity(ConversationEntryTypeRef, {\n\t\t\t\t_id: anotherMail.conversationEntry,\n\t\t\t\tprevious: primaryMail?._id,\n\t\t\t})\n\t\t\tentityRestClientMock.addListInstances(deletedmailConversationEntry)\n\n\t\t\tawait eventCallback(\n\t\t\t\t[\n\t\t\t\t\t{\n\t\t\t\t\t\tapplication: \"tutanota\",\n\t\t\t\t\t\ttype: \"ConversationEntry\",\n\t\t\t\t\t\toperation: OperationType.UPDATE,\n\t\t\t\t\t\tinstanceListId: listId,\n\t\t\t\t\t\tinstanceId: anotherMail.conversationEntry[1],\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\t\"mailGroupId\",\n\t\t\t)\n\n\t\t\tconst mailsDisplayed = viewModel.conversationItems().filter((i) => i.type === \"mail\")\n\t\t\to(sameAsConversation(mailsDisplayed)).equals(true)(\n\t\t\t\t`Wrong mails in conversation, got ${mailsDisplayed.map((ci) => ci.entryId)}, should be ${conversation.map((ce) => ce._id)}`,\n\t\t\t)\n\t\t})\n\n\t\to(\"when conversation mode is turned off and a new mail comes in, nothing added to conversation\", async function () {\n\t\t\twhen(prefProvider.getConversationViewShowOnlySelectedMail()).thenReturn(true)\n\n\t\t\tviewModel.init(Promise.resolve())\n\t\t\tawait loadingDefer.promise\n\n\t\t\tconst yetAnotherMail = addMail(\"yetAnotherMailId\")\n\n\t\t\tawait eventCallback(\n\t\t\t\t[\n\t\t\t\t\t{\n\t\t\t\t\t\tapplication: \"tutanota\",\n\t\t\t\t\t\ttype: \"ConversationEntry\",\n\t\t\t\t\t\toperation: OperationType.CREATE,\n\t\t\t\t\t\tinstanceListId: listId,\n\t\t\t\t\t\tinstanceId: yetAnotherMail.conversationEntry[1],\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\t\"mailGroupId\",\n\t\t\t)\n\n\t\t\tconst numMailsDisplayed = viewModel.conversationItems().filter((i) => i.type === \"mail\").length\n\t\t\to(numMailsDisplayed).equals(1)(`Wrong number of mails in conversationItems, got ${numMailsDisplayed} should be 1`)\n\t\t})\n\n\t\to(\"when a draft in trash, it is removed from the conversation on update\", async function () {\n\t\t\t// add draft mail\n\t\t\tconst trashDraftMail = addMail(\"trashDraftMail\")\n\t\t\ttrashDraftMail.state = MailState.DRAFT\n\n\t\t\tviewModel.init(Promise.resolve())\n\t\t\tawait loadingDefer.promise\n\n\t\t\tconversation.pop()\n\t\t\tconst trash = createTestEntity(MailFolderTypeRef, { _id: [\"folderListId\", \"trashFolder\"], folderType: MailSetKind.TRASH })\n\t\t\tentityRestClientMock.addListInstances(trash)\n\t\t\t// adding new mail (is the same mail, just moved to trash)\n\t\t\tconst newTrashDraftMail = addMail(\"trashDraftMail\")\n\t\t\tnewTrashDraftMail.state = MailState.DRAFT\n\t\t\tnewTrashDraftMail._id = [\"newListId\", trashDraftMail._id[1]]\n\t\t\tconversation.pop()\n\n\t\t\twhen(mailModel.getMailboxDetailsForMail(matchers.anything())).thenResolve(mailboxDetail)\n\t\t\twhen(mailModel.getMailFolderForMail(newTrashDraftMail)).thenReturn(trash)\n\n\t\t\tawait eventCallback(\n\t\t\t\t[\n\t\t\t\t\t{\n\t\t\t\t\t\tapplication: \"tutanota\",\n\t\t\t\t\t\ttype: \"ConversationEntry\",\n\t\t\t\t\t\toperation: OperationType.UPDATE,\n\t\t\t\t\t\tinstanceListId: listId,\n\t\t\t\t\t\tinstanceId: trashDraftMail.conversationEntry[1],\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\t\"mailGroupId\",\n\t\t\t)\n\n\t\t\tconst mailsDisplayed = viewModel.conversationItems().filter((i) => i.type === \"mail\")\n\t\t\to(sameAsConversation(mailsDisplayed)).equals(true)(\n\t\t\t\t`Wrong mails in conversation, got ${mailsDisplayed.map((ci) => ci.entryId)}, should be ${conversation.map((ce) => ce._id)}`,\n\t\t\t)\n\t\t})\n\t})\n})\n","import o from \"@tutao/otest\"\nimport { MailViewerViewModel } from \"../../../../src/mail-app/mail/view/MailViewerViewModel.js\"\nimport {\n\tHeaderTypeRef,\n\tMail,\n\tMailAddressTypeRef,\n\tMailDetails,\n\tMailDetailsTypeRef,\n\tMailTypeRef,\n\tRecipientsTypeRef,\n} from \"../../../../src/common/api/entities/tutanota/TypeRefs.js\"\nimport { matchers, object, verify, when } from \"testdouble\"\nimport { EntityClient } from \"../../../../src/common/api/common/EntityClient.js\"\nimport { ConfigurationDatabase } from \"../../../../src/common/api/worker/facades/lazy/ConfigurationDatabase.js\"\nimport { LoginController } from \"../../../../src/common/api/main/LoginController.js\"\nimport { EventController } from \"../../../../src/common/api/main/EventController.js\"\nimport { WorkerFacade } from \"../../../../src/common/api/worker/facades/WorkerFacade.js\"\nimport { SearchModel } from \"../../../../src/mail-app/search/model/SearchModel.js\"\nimport { MailFacade } from \"../../../../src/common/api/worker/facades/lazy/MailFacade.js\"\nimport { FileController } from \"../../../../src/common/file/FileController.js\"\nimport { createTestEntity } from \"../../TestUtils.js\"\nimport { MailState } from \"../../../../src/common/api/common/TutanotaConstants.js\"\nimport { GroupInfoTypeRef } from \"../../../../src/common/api/entities/sys/TypeRefs.js\"\nimport { CryptoFacade } from \"../../../../src/common/api/worker/crypto/CryptoFacade.js\"\nimport { ContactImporter } from \"../../../../src/mail-app/contacts/ContactImporter.js\"\nimport { MailboxDetail, MailboxModel } from \"../../../../src/common/mailFunctionality/MailboxModel.js\"\nimport { ContactModel } from \"../../../../src/common/contactsFunctionality/ContactModel.js\"\nimport { SendMailModel } from \"../../../../src/common/mailFunctionality/SendMailModel.js\"\nimport { MailModel } from \"../../../../src/mail-app/mail/model/MailModel.js\"\n\no.spec(\"MailViewerViewModel\", function () {\n\tlet mail: Mail\n\tlet showFolder: boolean = false\n\tlet entityClient: EntityClient\n\n\tlet mailModel: MailModel\n\tlet mailboxModel: MailboxModel\n\tlet contactModel: ContactModel\n\tlet configFacade: ConfigurationDatabase\n\tlet fileController: FileController\n\tlet logins: LoginController\n\tlet eventController: EventController\n\tlet workerFacade: WorkerFacade\n\tlet searchModel: SearchModel\n\tlet mailFacade: MailFacade\n\tlet sendMailModel: SendMailModel\n\tlet sendMailModelFactory: (mailboxDetails: MailboxDetail) => Promise<SendMailModel> = () => Promise.resolve(sendMailModel)\n\tlet cryptoFacade: CryptoFacade\n\tlet contactImporter: ContactImporter\n\n\tfunction makeViewModelWithHeaders(headers: string) {\n\t\tentityClient = object()\n\t\tmailModel = object()\n\t\tmailboxModel = object()\n\t\tcontactModel = object()\n\t\tconfigFacade = object()\n\t\tfileController = object()\n\t\tlogins = object()\n\t\tsendMailModel = object()\n\t\teventController = object()\n\t\tworkerFacade = object()\n\t\tsearchModel = object()\n\t\tmailFacade = object()\n\t\tcryptoFacade = object()\n\t\tcontactImporter = object()\n\t\tmail = prepareMailWithHeaders(mailFacade, headers)\n\n\t\treturn new MailViewerViewModel(\n\t\t\tmail,\n\t\t\tshowFolder,\n\t\t\tentityClient,\n\t\t\tmailboxModel,\n\t\t\tmailModel,\n\t\t\tcontactModel,\n\t\t\tconfigFacade,\n\t\t\tfileController,\n\t\t\tlogins,\n\t\t\tsendMailModelFactory,\n\t\t\teventController,\n\t\t\tworkerFacade,\n\t\t\tsearchModel,\n\t\t\tmailFacade,\n\t\t\tcryptoFacade,\n\t\t\tasync () => contactImporter,\n\t\t)\n\t}\n\n\tfunction prepareMailWithHeaders(mailFacade: MailFacade, headers: string) {\n\t\tconst toRecipients = [\n\t\t\tcreateTestEntity(MailAddressTypeRef, {\n\t\t\t\tname: \"Ma\",\n\t\t\t\taddress: \"ma@tuta.com\",\n\t\t\t}),\n\t\t]\n\t\tconst mail = createTestEntity(MailTypeRef, {\n\t\t\t_id: [\"mailListId\", \"mailId\"],\n\t\t\tlistUnsubscribe: true,\n\t\t\tmailDetails: [\"mailDetailsListId\", \"mailDetailsId\"],\n\t\t\tstate: MailState.RECEIVED,\n\t\t\tsender: createTestEntity(MailAddressTypeRef, {\n\t\t\t\tname: \"ListSender\",\n\t\t\t\taddress: \"sender@list.com\",\n\t\t\t}),\n\t\t})\n\t\tconst mailDetails: MailDetails = createTestEntity(MailDetailsTypeRef, {\n\t\t\theaders: createTestEntity(HeaderTypeRef, {\n\t\t\t\theaders,\n\t\t\t}),\n\t\t\trecipients: createTestEntity(RecipientsTypeRef, {\n\t\t\t\ttoRecipients,\n\t\t\t}),\n\t\t})\n\t\twhen(mailFacade.loadMailDetailsBlob(mail)).thenResolve(mailDetails)\n\t\treturn mail\n\t}\n\n\to.spec(\"unsubscribe\", function () {\n\t\tfunction initUnsubscribeHeaders(headers: string) {\n\t\t\tconst viewModel = makeViewModelWithHeaders(headers)\n\t\t\tconst mailGroupInfo = createTestEntity(GroupInfoTypeRef, { mailAddressAliases: [], mailAddress: \"ma@tuta.com\" })\n\t\t\tconst mailboxDetail = { mailGroupInfo: mailGroupInfo } as MailboxDetail\n\t\t\twhen(mailModel.getMailboxDetailsForMail(matchers.anything())).thenResolve(mailboxDetail)\n\t\t\twhen(logins.getUserController()).thenReturn({ userGroupInfo: mailGroupInfo })\n\t\t\treturn viewModel\n\t\t}\n\n\t\tasync function testHeaderUnsubscribe(headers: string, expected: Array<string>) {\n\t\t\tconst viewModel = initUnsubscribeHeaders(headers)\n\n\t\t\tconst result = await viewModel.unsubscribe()\n\t\t\tverify(mailModel.unsubscribe(mail, \"ma@tuta.com\", expected), { times: 1 })\n\t\t\to(result).equals(true)\n\t\t}\n\n\t\to.spec(\"url\", function () {\n\t\t\to(\"easy case\", async function () {\n\t\t\t\tconst headers = \"List-Unsubscribe: <http://unsub.me?id=2134>, <mailto:unsubscribe@newsletter.de>\"\n\t\t\t\tawait testHeaderUnsubscribe(headers, [headers])\n\t\t\t})\n\t\t\to(\"with POST\", async function () {\n\t\t\t\tconst headers = [\n\t\t\t\t\t\"List-Unsubscribe: <http://unsub.me?id=2134>, <mailto:unsubscribe@newsletter.de>\",\n\t\t\t\t\t\"List-Unsubscribe-Post: List-Unsubscribe=One-Click\",\n\t\t\t\t]\n\t\t\t\tawait testHeaderUnsubscribe(headers.join(\"\\r\\n\"), headers)\n\t\t\t})\n\t\t\to(\"with whitespace\", async function () {\n\t\t\t\tconst headers = [\"List-Unsubscribe:      <http://unsub.me?id=2134>, <mailto:unsubscribe@newsletter.de>\"]\n\t\t\t\tconst expected = [\"List-Unsubscribe:      <http://unsub.me?id=2134>, <mailto:unsubscribe@newsletter.de>\"]\n\t\t\t\tawait testHeaderUnsubscribe(headers.join(\"\\r\\n\"), expected)\n\t\t\t})\n\t\t\to(\"with tab\", async function () {\n\t\t\t\tconst headers = [\"List-Unsubscribe:\\t <http://unsub.me?id=2134>, <mailto:unsubscribe@newsletter.de>\"]\n\t\t\t\tconst expected = [\"List-Unsubscribe:\\t <http://unsub.me?id=2134>, <mailto:unsubscribe@newsletter.de>\"]\n\t\t\t\tawait testHeaderUnsubscribe(headers.join(\"\\r\\n\"), expected)\n\t\t\t})\n\t\t\to(\"with newline whitespace\", async function () {\n\t\t\t\tconst headers = [\"List-Unsubscribe: \\r\\n <http://unsub.me?id=2134>, <mailto:unsubscribe@newsletter.de>\"]\n\t\t\t\tconst expected = [\"List-Unsubscribe: <http://unsub.me?id=2134>, <mailto:unsubscribe@newsletter.de>\"]\n\t\t\t\tawait testHeaderUnsubscribe(headers.join(\"\\r\\n\"), expected)\n\t\t\t})\n\t\t\to(\"with newline tab\", async function () {\n\t\t\t\tconst headers = [\"List-Unsubscribe: \\r\\n\\t<http://unsub.me?id=2134>, <mailto:unsubscribe@newsletter.de>\"]\n\t\t\t\tconst expected = [\"List-Unsubscribe: <http://unsub.me?id=2134>, <mailto:unsubscribe@newsletter.de>\"]\n\t\t\t\tawait testHeaderUnsubscribe(headers.join(\"\\r\\n\"), expected)\n\t\t\t})\n\t\t\to(\"no list unsubscribe header\", async function () {\n\t\t\t\tconst headers = \"To: InvalidHeader\"\n\t\t\t\tconst viewModel = initUnsubscribeHeaders(headers)\n\t\t\t\tconst result = await viewModel.unsubscribe()\n\t\t\t\tverify(mailModel.unsubscribe(matchers.anything(), matchers.anything(), matchers.anything()), { times: 0 })\n\t\t\t\to(result).equals(false)\n\t\t\t})\n\t\t})\n\t})\n})\n","import o from \"@tutao/otest\"\nimport { GroupMembershipTypeRef, UserTypeRef } from \"../../../../../src/common/api/entities/sys/TypeRefs.js\"\nimport { KeyCache } from \"../../../../../src/common/api/worker/facades/KeyCache.js\"\nimport { createTestEntity } from \"../../../TestUtils.js\"\nimport { aes256RandomKey } from \"@tutao/tutanota-crypto\"\nimport { NotAuthorizedError } from \"../../../../../src/common/api/common/error/RestError.js\"\n\no.spec(\"KeyCacheTest\", function () {\n\tlet keyCache: KeyCache\n\n\to.beforeEach(function () {\n\t\tkeyCache = new KeyCache()\n\t\tkeyCache.setCurrentUserGroupKey({ version: 0, object: aes256RandomKey() })\n\t})\n\n\to(\"removeOutdatedGroupKeys - new group key version for cached key\", async function () {\n\t\tlet groupId = \"groupId\"\n\t\tconst user = createTestEntity(UserTypeRef, {\n\t\t\tuserGroup: createTestEntity(GroupMembershipTypeRef),\n\t\t\tmemberships: [createTestEntity(GroupMembershipTypeRef, { group: groupId, groupKeyVersion: \"1\" })],\n\t\t})\n\t\t// add version 0 tp cache\n\t\tawait keyCache.getCurrentGroupKey(groupId, () => Promise.resolve({ version: 0, object: aes256RandomKey() }))\n\n\t\tawait keyCache.removeOutdatedGroupKeys(user)\n\t\tconst cachedKey = await keyCache.getCurrentGroupKey(groupId, async () => {\n\t\t\treturn { version: 1, object: aes256RandomKey() }\n\t\t})\n\t\to(cachedKey.version).equals(1)\n\t})\n\n\to(\"removeOutdatedGroupKeys - no version update for cached key\", async function () {\n\t\tlet groupId = \"groupId\"\n\t\tconst user = createTestEntity(UserTypeRef, {\n\t\t\tuserGroup: createTestEntity(GroupMembershipTypeRef),\n\t\t\tmemberships: [createTestEntity(GroupMembershipTypeRef, { group: groupId, groupKeyVersion: \"0\" })],\n\t\t})\n\t\tawait keyCache.getCurrentGroupKey(groupId, () => Promise.resolve({ version: 0, object: aes256RandomKey() }))\n\n\t\tawait keyCache.removeOutdatedGroupKeys(user)\n\t\tconst cachedKey = await keyCache.getCurrentGroupKey(groupId, async () => {\n\t\t\tthrow new Error(\"unexpected call to key loader\")\n\t\t})\n\t\to(cachedKey.version).equals(0)\n\t})\n\n\to(\"removeOutdatedGroupKeys - removed membership for cached key\", async function () {\n\t\tlet groupId = \"groupId\"\n\t\tconst user = createTestEntity(UserTypeRef, {\n\t\t\tuserGroup: createTestEntity(GroupMembershipTypeRef),\n\t\t\tmemberships: [],\n\t\t})\n\t\tawait keyCache.getCurrentGroupKey(groupId, () => Promise.resolve({ version: 0, object: aes256RandomKey() }))\n\n\t\tawait keyCache.removeOutdatedGroupKeys(user)\n\n\t\t// We expect that there is no cached entry for that group id and therefore the key loader will be invoked.\n\t\to(async () =>\n\t\t\tkeyCache.getCurrentGroupKey(groupId, async () => {\n\t\t\t\tthrow new NotAuthorizedError(\"unexpected call to key loader\")\n\t\t\t}),\n\t\t).asyncThrows(NotAuthorizedError)\n\t})\n\n\to(\"removeOutdatedGroupKeys - ignore user group key update\", async function () {\n\t\tlet groupId = \"groupId\"\n\t\tconst user = createTestEntity(UserTypeRef, {\n\t\t\tuserGroup: createTestEntity(GroupMembershipTypeRef, { group: \"userGroupId\", groupKeyVersion: \"1\" }),\n\t\t\tmemberships: [createTestEntity(GroupMembershipTypeRef, { group: groupId, groupKeyVersion: \"0\" })],\n\t\t})\n\n\t\tawait keyCache.removeOutdatedGroupKeys(user)\n\t\tconst cachedUserGroupKey = keyCache.getCurrentUserGroupKey()\n\t\t// @ts-ignore\n\t\to(cachedUserGroupKey.version).equals(0)\n\t})\n})\n","import o from \"@tutao/otest\"\nimport { getRatingAllowed, isEventHappyMoment, RatingCheckResult } from \"../../../src/common/ratings/InAppRatingUtils.js\"\nimport { DeviceConfig } from \"../../../src/common/misc/DeviceConfig.js\"\nimport { object, verify, when } from \"testdouble\"\nimport { CommonLocator, initCommonLocator } from \"../../../src/common/api/main/CommonLocator.js\"\nimport { UserController } from \"../../../src/common/api/main/UserController.js\"\n\no.spec(\"InAppRatingUtilsTest\", () => {\n\tlet deviceConfigMock: DeviceConfig = object()\n\tlet locatorMock: CommonLocator = object()\n\n\to.beforeEach(() => {\n\t\tdeviceConfigMock = object()\n\t\tlocatorMock = object()\n\t\tinitCommonLocator(locatorMock)\n\t})\n\n\tconst now = new Date(\"2024-10-27T12:34:00Z\")\n\n\tconst userControllerMock: UserController = object({\n\t\t// @ts-ignore\n\t\tasync loadCustomerInfo() {},\n\t})\n\n\to.spec(\"getRatingAllowed\", () => {\n\t\to(\"Should not trigger if the app is not on iOS\", async () => {\n\t\t\t// Arrange\n\t\t\tconst appInstallationDate = new Date(\"2024-10-11T11:12:04Z\")\n\n\t\t\twhen(deviceConfigMock.getRetryRatingPromptAfter()).thenReturn(null)\n\t\t\twhen(deviceConfigMock.getLastRatingPromptedDate()).thenReturn(null)\n\t\t\twhen(locatorMock.systemFacade.getInstallationDate()).thenResolve(String(appInstallationDate.getTime()))\n\n\t\t\t// Act\n\t\t\tconst res = await getRatingAllowed(now, deviceConfigMock, false)\n\n\t\t\t// Assert\n\t\t\to(res).equals(RatingCheckResult.UNSUPPORTED_PLATFORM)\n\t\t})\n\n\t\to(\"Should not trigger if the rating dialog was shown less than a year ago\", async () => {\n\t\t\t// Arrange\n\t\t\tconst appInstallationDate = new Date(\"2024-10-11T11:12:04Z\")\n\n\t\t\twhen(deviceConfigMock.getRetryRatingPromptAfter()).thenReturn(null)\n\t\t\twhen(deviceConfigMock.getLastRatingPromptedDate()).thenReturn(new Date(\"2024-06-06T06:06:06Z\"))\n\t\t\twhen(locatorMock.systemFacade.getInstallationDate()).thenResolve(String(appInstallationDate.getTime()))\n\n\t\t\t// Act\n\t\t\tconst res = await getRatingAllowed(now, deviceConfigMock, true)\n\n\t\t\t// Assert\n\t\t\to(res).equals(RatingCheckResult.LAST_RATING_TOO_YOUNG)\n\t\t})\n\n\t\to(\"Should not trigger if the app was installed less than 7 days ago\", async () => {\n\t\t\t// Arrange\n\t\t\twhen(deviceConfigMock.getLastRatingPromptedDate()).thenReturn(null)\n\t\t\twhen(locatorMock.systemFacade.getInstallationDate()).thenResolve(String(new Date(\"2024-10-23T11:12:04Z\").getTime()))\n\n\t\t\t// Act\n\t\t\tconst res = await getRatingAllowed(now, deviceConfigMock, true)\n\n\t\t\t// Assert\n\t\t\to(res).equals(RatingCheckResult.APP_INSTALLATION_TOO_YOUNG)\n\t\t})\n\n\t\to(\"Should not trigger if the customer account was created less than 7 days ago\", async () => {\n\t\t\t// Arrange\n\t\t\tconst appInstallationDate = new Date(\"2024-10-11T11:12:04Z\") // The app is installed long enough ago.\n\t\t\tconst customerCreationDate = new Date(\"2024-10-23T11:12:04Z\")\n\n\t\t\twhen(deviceConfigMock.getLastRatingPromptedDate()).thenReturn(null)\n\t\t\twhen(locatorMock.systemFacade.getInstallationDate()).thenResolve(String(appInstallationDate.getTime()))\n\t\t\twhen(locatorMock.logins.getUserController()).thenReturn(userControllerMock)\n\t\t\twhen(locatorMock.logins.getUserController().loadCustomerInfo()).thenResolve({ creationTime: customerCreationDate })\n\n\t\t\t// Act\n\t\t\tconst res = await getRatingAllowed(now, deviceConfigMock, true)\n\n\t\t\t// Assert\n\t\t\to(res).equals(RatingCheckResult.ACCOUNT_TOO_YOUNG)\n\t\t})\n\n\t\to(\"Should not trigger if the retry prompt timer has not elapsed\", async () => {\n\t\t\t// Arrange\n\t\t\tconst appInstallationDate = new Date(\"2024-10-11T11:12:04Z\")\n\t\t\tconst customerCreationDate = new Date(\"2024-10-11T11:12:04Z\")\n\n\t\t\twhen(deviceConfigMock.getRetryRatingPromptAfter()).thenReturn(new Date(\"2024-11-27T14:34:00Z\"))\n\t\t\twhen(deviceConfigMock.getLastRatingPromptedDate()).thenReturn(null)\n\t\t\twhen(locatorMock.systemFacade.getInstallationDate()).thenResolve(String(appInstallationDate.getTime()))\n\t\t\twhen(locatorMock.logins.getUserController()).thenReturn(userControllerMock)\n\t\t\twhen(locatorMock.logins.getUserController().loadCustomerInfo()).thenResolve({ creationTime: customerCreationDate })\n\n\t\t\t// Act\n\t\t\tconst res = await getRatingAllowed(now, deviceConfigMock, true)\n\n\t\t\t// Assert\n\t\t\tverify(locatorMock.logins.getUserController().loadCustomerInfo(), { times: 1 })\n\t\t\to(res).equals(RatingCheckResult.RATING_DISMISSED)\n\t\t})\n\t})\n\n\to.spec(\"isEventHappyMoment\", () => {\n\t\to(\"Should trigger when three activities reached and retry timer has elapsed\", () => {\n\t\t\t// Arrange\n\t\t\twhen(deviceConfigMock.getLastRatingPromptedDate()).thenReturn(null)\n\t\t\twhen(deviceConfigMock.getEvents()).thenReturn([\n\t\t\t\tnew Date(\"2024-10-11T11:12:04Z\"),\n\t\t\t\tnew Date(\"2024-10-10T11:12:04Z\"),\n\t\t\t\tnew Date(\"2024-10-09T11:12:04Z\"),\n\t\t\t])\n\n\t\t\t// Act\n\t\t\tconst res = isEventHappyMoment(now, deviceConfigMock)\n\n\t\t\t// Assert\n\t\t\to(res).equals(true)\n\t\t})\n\n\t\to(\"Should trigger if there are at least 3 events/emails created and no previous prompt\", () => {\n\t\t\t// Arrange\n\t\t\twhen(deviceConfigMock.getLastRatingPromptedDate()).thenReturn(null)\n\t\t\twhen(deviceConfigMock.getEvents()).thenReturn([\n\t\t\t\tnew Date(\"2024-10-11T11:12:04Z\"),\n\t\t\t\tnew Date(\"2024-10-10T11:12:04Z\"),\n\t\t\t\tnew Date(\"2024-10-09T11:12:04Z\"),\n\t\t\t])\n\n\t\t\t// Act\n\t\t\tconst res = isEventHappyMoment(now, deviceConfigMock)\n\n\t\t\t// Assert\n\t\t\tverify(deviceConfigMock.getEvents(), { times: 1 })\n\t\t\to(res).equals(true)\n\t\t})\n\n\t\to(\"Should not trigger if there are at least 3 events/emails created and no previous prompt\", () => {\n\t\t\t// Arrange\n\t\t\twhen(deviceConfigMock.getLastRatingPromptedDate()).thenReturn(new Date(\"2024-02-11T11:12:04Z\"))\n\t\t\twhen(deviceConfigMock.getEvents()).thenReturn([\n\t\t\t\tnew Date(\"2024-10-11T11:12:04Z\"),\n\t\t\t\tnew Date(\"2024-10-10T11:12:04Z\"),\n\t\t\t\tnew Date(\"2024-10-09T11:12:04Z\"),\n\t\t\t])\n\n\t\t\t// Act\n\t\t\tconst res = isEventHappyMoment(now, deviceConfigMock)\n\n\t\t\t// Assert\n\t\t\tverify(deviceConfigMock.getEvents(), { times: 1 })\n\t\t\to(res).equals(false)\n\t\t})\n\n\t\to(\"Should trigger if there are at least 10 recent activities in the last 28 days\", () => {\n\t\t\t// Arrange\n\t\t\twhen(deviceConfigMock.getLastRatingPromptedDate()).thenReturn(new Date(\"2022-10-11T11:12:04Z\"))\n\t\t\twhen(deviceConfigMock.getEvents()).thenReturn([\n\t\t\t\tnew Date(\"2024-10-11T11:12:04Z\"),\n\t\t\t\tnew Date(\"2024-10-10T11:12:04Z\"),\n\t\t\t\tnew Date(\"2024-10-09T11:12:04Z\"),\n\t\t\t\tnew Date(\"2024-10-08T11:12:04Z\"),\n\t\t\t\tnew Date(\"2024-10-07T11:12:04Z\"),\n\t\t\t\tnew Date(\"2024-10-06T11:12:04Z\"),\n\t\t\t\tnew Date(\"2024-10-05T11:12:04Z\"),\n\t\t\t\tnew Date(\"2024-10-04T11:12:04Z\"),\n\t\t\t\tnew Date(\"2024-10-03T11:12:04Z\"),\n\t\t\t\tnew Date(\"2024-10-02T11:12:04Z\"),\n\t\t\t])\n\n\t\t\t// Act\n\t\t\tconst res = isEventHappyMoment(now, deviceConfigMock)\n\n\t\t\t// Assert\n\t\t\to(res).equals(true)\n\t\t})\n\n\t\to(\"Should not trigger if there are less than 10 recent activities in the last 28 days\", () => {\n\t\t\t// Arrange\n\t\t\twhen(deviceConfigMock.getLastRatingPromptedDate()).thenReturn(new Date(\"2022-10-11T11:12:04Z\"))\n\t\t\twhen(deviceConfigMock.getEvents()).thenReturn([\n\t\t\t\tnew Date(\"2024-10-11T11:12:04Z\"),\n\t\t\t\tnew Date(\"2024-10-10T11:12:04Z\"),\n\t\t\t\tnew Date(\"2024-10-09T11:12:04Z\"),\n\t\t\t\tnew Date(\"2024-10-08T11:12:04Z\"),\n\t\t\t\tnew Date(\"2024-10-07T11:12:04Z\"),\n\t\t\t\tnew Date(\"2024-10-06T11:12:04Z\"),\n\t\t\t\tnew Date(\"2024-10-05T11:12:04Z\"),\n\t\t\t\tnew Date(\"2024-10-04T11:12:04Z\"),\n\t\t\t\tnew Date(\"2024-10-03T11:12:04Z\"),\n\t\t\t\tnew Date(\"2024-09-28T11:12:04Z\"),\n\t\t\t])\n\n\t\t\t// Act\n\t\t\tconst res = isEventHappyMoment(now, deviceConfigMock)\n\n\t\t\t// Assert\n\t\t\to(res).equals(false)\n\t\t})\n\n\t\to(\"Should not trigger if less than 3 events/emails created\", () => {\n\t\t\t// Arrange\n\t\t\tconst events = [new Date(\"2024-10-11T11:12:04Z\"), new Date(\"2024-10-10T11:12:04Z\")]\n\t\t\twhen(deviceConfigMock.getLastRatingPromptedDate()).thenReturn(null)\n\t\t\twhen(deviceConfigMock.getEvents()).thenReturn(events)\n\n\t\t\t// Act\n\t\t\tconst res = isEventHappyMoment(now, deviceConfigMock)\n\n\t\t\t// Assert\n\t\t\to(res).equals(false)\n\t\t})\n\t})\n})\n","import o from \"@tutao/otest\"\nimport { MailExportController } from \"../../../../src/mail-app/native/main/MailExportController.js\"\nimport { matchers, object, verify, when } from \"testdouble\"\nimport { HtmlSanitizer } from \"../../../../src/common/misc/HtmlSanitizer.js\"\nimport { ExportFacade } from \"../../../../src/common/native/common/generatedipc/ExportFacade.js\"\nimport { LoginController } from \"../../../../src/common/api/main/LoginController.js\"\nimport { MailboxDetail, MailboxModel } from \"../../../../src/common/mailFunctionality/MailboxModel.js\"\nimport { createTestEntity, SchedulerMock } from \"../../TestUtils.js\"\nimport {\n\tBodyTypeRef,\n\tFileTypeRef,\n\tMailAddressTypeRef,\n\tMailBag,\n\tMailBagTypeRef,\n\tMailboxGroupRootTypeRef,\n\tMailBoxTypeRef,\n\tMailDetailsTypeRef,\n\tMailTypeRef,\n\tRecipientsTypeRef,\n} from \"../../../../src/common/api/entities/tutanota/TypeRefs.js\"\nimport { GroupInfoTypeRef, GroupTypeRef } from \"../../../../src/common/api/entities/sys/TypeRefs.js\"\nimport { UserController } from \"../../../../src/common/api/main/UserController.js\"\nimport { GENERATED_MAX_ID, getElementId } from \"../../../../src/common/api/common/utils/EntityUtils.js\"\nimport { assertNotNull } from \"@tutao/tutanota-utils\"\nimport { createDataFile } from \"../../../../src/common/api/common/DataFile.js\"\nimport { makeMailBundle } from \"../../../../src/mail-app/mail/export/Bundler.js\"\nimport { MailExportFacade } from \"../../../../src/common/api/worker/facades/lazy/MailExportFacade.js\"\nimport { BlobServerUrlTypeRef } from \"../../../../src/common/api/entities/storage/TypeRefs\"\nimport { ExportError, ExportErrorReason } from \"../../../../src/common/api/common/error/ExportError\"\nimport { MailboxExportState } from \"../../../../src/common/desktop/export/MailboxExportPersistence\"\nimport { spy } from \"@tutao/tutanota-test-utils\"\nimport { SuspensionError } from \"../../../../src/common/api/common/error/SuspensionError\"\n\no.spec(\"MailExportController\", function () {\n\tconst userId = \"userId\"\n\n\tlet controller: MailExportController\n\tlet mailExportFacade: MailExportFacade\n\tlet exportFacade: ExportFacade\n\tlet logins: LoginController\n\tlet mailboxModel: MailboxModel\n\tlet mailboxDetail: MailboxDetail\n\tlet userController: UserController\n\tlet scheduler: SchedulerMock\n\n\tconst sanitizer = {\n\t\tsanitizeHTML: (text, _) => ({ html: text, blockedExternalContent: 0, inlineImageCids: [], links: [] }),\n\t} as Partial<HtmlSanitizer> as HtmlSanitizer\n\n\to.beforeEach(function () {\n\t\tuserController = { userId: userId } as Partial<UserController> as UserController\n\t\tmailboxDetail = {\n\t\t\tmailbox: createTestEntity(MailBoxTypeRef, {\n\t\t\t\t_id: \"mailboxId\",\n\t\t\t\tcurrentMailBag: createTestEntity(MailBagTypeRef, { _id: \"currentMailBagId\", mails: \"currentMailList\" }),\n\t\t\t\tarchivedMailBags: [\n\t\t\t\t\tcreateTestEntity(MailBagTypeRef, { _id: \"archivedMailBagId1\", mails: \"archivedMailList1\" }),\n\t\t\t\t\tcreateTestEntity(MailBagTypeRef, { _id: \"archivedMailBagId2\", mails: \"archivedMailList2\" }),\n\t\t\t\t],\n\t\t\t}),\n\t\t\tmailGroup: createTestEntity(GroupTypeRef, {\n\t\t\t\t_id: \"mailGroupId\",\n\t\t\t}),\n\t\t\tmailGroupInfo: createTestEntity(GroupInfoTypeRef),\n\t\t\tmailboxGroupRoot: createTestEntity(MailboxGroupRootTypeRef),\n\t\t}\n\t\tmailExportFacade = object()\n\t\texportFacade = object()\n\t\tlogins = object()\n\t\twhen(logins.getUserController()).thenReturn(userController)\n\t\tmailboxModel = object()\n\t\twhen(mailboxModel.getMailboxDetailByMailboxId(mailboxDetail.mailbox._id)).thenResolve(mailboxDetail)\n\t\tscheduler = new SchedulerMock()\n\n\t\tcontroller = new MailExportController(mailExportFacade, sanitizer, exportFacade, logins, mailboxModel, scheduler)\n\t})\n\n\tfunction prepareMailData(mailBag: MailBag, startId: Id, num: number) {\n\t\tconst mailDetails = createTestEntity(MailDetailsTypeRef, {\n\t\t\tsentDate: new Date(42),\n\t\t\tbody: createTestEntity(BodyTypeRef, {\n\t\t\t\tcompressedText: \"body! compressed\",\n\t\t\t}),\n\t\t\trecipients: createTestEntity(RecipientsTypeRef),\n\t\t})\n\t\tconst attachmentInfo = createTestEntity(FileTypeRef, { _id: [\"fileListId\", \"fileId\"] })\n\t\tconst mail = createTestEntity(MailTypeRef, {\n\t\t\t_id: [\"mailListId\", startId + `_${num}`],\n\t\t\tattachments: [attachmentInfo._id],\n\t\t\treceivedDate: new Date(43),\n\t\t\tsender: createTestEntity(MailAddressTypeRef, {\n\t\t\t\tname: \"MailSender\",\n\t\t\t\taddress: \"sender@list.com\",\n\t\t\t}),\n\t\t})\n\t\tconst attachmentData = new Uint8Array([1, 2, 3])\n\t\tconst dataFile = createDataFile(\"test\", \"application/octet-stream\", attachmentData)\n\t\twhen(mailExportFacade.loadFixedNumberOfMailsWithCache(mailBag.mails, startId, matchers.anything())).thenResolve([mail])\n\t\twhen(mailExportFacade.loadMailDetails([mail])).thenResolve([{ mail, mailDetails }])\n\t\twhen(mailExportFacade.loadAttachments([mail], matchers.anything())).thenResolve([attachmentInfo])\n\t\twhen(mailExportFacade.loadAttachmentData(mail, [attachmentInfo])).thenResolve([dataFile])\n\n\t\tconst mailBundle = makeMailBundle(sanitizer, mail, mailDetails, [dataFile])\n\t\treturn { mail, mailBundle, mailDetails }\n\t}\n\n\to.spec(\"startExport\", function () {\n\t\to.test(\"it updates the initial state\", async function () {\n\t\t\twhen(mailExportFacade.getExportServers(mailboxDetail.mailGroup)).thenResolve([createTestEntity(BlobServerUrlTypeRef, { url: \"baseUrl\" })])\n\t\t\twhen(mailExportFacade.loadFixedNumberOfMailsWithCache(matchers.anything(), matchers.anything(), matchers.anything())).thenResolve([])\n\t\t\tawait controller.startExport(mailboxDetail)\n\t\t\tverify(\n\t\t\t\texportFacade.startMailboxExport(userId, mailboxDetail.mailbox._id, assertNotNull(mailboxDetail.mailbox.currentMailBag)._id, GENERATED_MAX_ID),\n\t\t\t)\n\t\t})\n\n\t\to.test(\"it runs the export\", async function () {\n\t\t\twhen(mailExportFacade.getExportServers(mailboxDetail.mailGroup)).thenResolve([createTestEntity(BlobServerUrlTypeRef, { url: \"baseUrl\" })])\n\n\t\t\tconst mailBag = assertNotNull(mailboxDetail.mailbox.currentMailBag)\n\t\t\tconst { mail, mailBundle } = prepareMailData(mailBag, GENERATED_MAX_ID, 1)\n\t\t\tprepareMailData(assertNotNull(mailboxDetail.mailbox.archivedMailBags[0]), GENERATED_MAX_ID, 2)\n\t\t\tprepareMailData(assertNotNull(mailboxDetail.mailbox.archivedMailBags[1]), GENERATED_MAX_ID, 3)\n\t\t\twhen(mailExportFacade.loadFixedNumberOfMailsWithCache(matchers.anything(), matchers.not(GENERATED_MAX_ID), matchers.anything())).thenResolve([])\n\n\t\t\tawait controller.startExport(mailboxDetail)\n\n\t\t\tverify(exportFacade.saveMailboxExport(mailBundle, userId, mailBag._id, getElementId(mail)))\n\t\t})\n\n\t\to.test(\"it sets state to locked when a LockedForUser ExportError is thrown\", async function () {\n\t\t\twhen(\n\t\t\t\texportFacade.startMailboxExport(userId, mailboxDetail.mailbox._id, assertNotNull(mailboxDetail.mailbox.currentMailBag)._id, GENERATED_MAX_ID),\n\t\t\t).thenReject(new ExportError(\"message\", ExportErrorReason.LockedForUser))\n\t\t\tawait controller.startExport(mailboxDetail)\n\t\t\to(controller.state().type).equals(\"locked\")\n\t\t})\n\t})\n\n\to.spec(\"resumeIfNeeded\", function () {\n\t\to.test(\"when the persisted state is finished it does not continue with export\", function () {\n\t\t\twhen(exportFacade.getMailboxExportState(userId)).thenResolve({ type: \"finished\" })\n\n\t\t\tverify(exportFacade.saveMailboxExport(matchers.anything(), matchers.anything(), matchers.anything(), matchers.anything()), { times: 0 })\n\t\t\to(controller.state().type).equals(\"idle\")\n\t\t})\n\n\t\to.test(\"when persisted state is running it runs the export\", async function () {\n\t\t\tconst initialMailId = \"initialMailId\"\n\t\t\tconst mailBag = assertNotNull(mailboxDetail.mailbox.currentMailBag)\n\t\t\tconst { mail, mailBundle } = prepareMailData(mailBag, initialMailId, 1)\n\t\t\tconst persistedState: MailboxExportState = {\n\t\t\t\ttype: \"running\",\n\t\t\t\tmailboxId: mailboxDetail.mailbox._id,\n\t\t\t\tuserId,\n\t\t\t\tmailId: initialMailId,\n\t\t\t\tmailBagId: mailBag._id,\n\t\t\t\texportedMails: 0,\n\t\t\t\texportDirectoryPath: \"directory\",\n\t\t\t}\n\t\t\twhen(exportFacade.getMailboxExportState(userId)).thenResolve(persistedState)\n\t\t\twhen(mailExportFacade.getExportServers(mailboxDetail.mailGroup)).thenResolve([createTestEntity(BlobServerUrlTypeRef, { url: \"baseUrl\" })])\n\t\t\twhen(mailExportFacade.loadFixedNumberOfMailsWithCache(mailBag.mails, matchers.not(initialMailId), matchers.anything())).thenResolve([])\n\t\t\twhen(mailExportFacade.loadFixedNumberOfMailsWithCache(matchers.not(mailBag.mails), matchers.anything(), matchers.anything())).thenResolve([])\n\n\t\t\tawait controller.resumeIfNeeded()\n\n\t\t\tverify(exportFacade.saveMailboxExport(mailBundle, userId, mailBag._id, getElementId(mail)))\n\t\t})\n\n\t\to.test(\"when the exportFacade returns a locked state, the state is set to locked and retry is scheduled\", async function () {\n\t\t\twhen(exportFacade.getMailboxExportState(userId)).thenResolve({ type: \"locked\", userId })\n\t\t\tscheduler.scheduleAfter = spy()\n\n\t\t\tawait controller.resumeIfNeeded()\n\n\t\t\to(scheduler.scheduleAfter.callCount).equals(1)\n\t\t\to(scheduler.scheduleAfter.args[1]).equals(1000 * 60 * 5) // 5 min\n\t\t\to(controller.state().type).equals(\"locked\")\n\t\t})\n\t})\n\n\to.spec(\"cancelExport\", function () {\n\t\to.test(\"canceling resets the state\", async function () {\n\t\t\twhen(mailExportFacade.getExportServers(mailboxDetail.mailGroup)).thenResolve([createTestEntity(BlobServerUrlTypeRef, { url: \"baseUrl\" })])\n\t\t\twhen(mailExportFacade.loadFixedNumberOfMailsWithCache(matchers.anything(), matchers.anything(), matchers.anything())).thenResolve([])\n\t\t\tconst startPromise = controller.startExport(mailboxDetail)\n\t\t\tconst cancelPromise = controller.cancelExport()\n\t\t\to(controller.state().type).equals(\"idle\")\n\n\t\t\tawait Promise.all([startPromise, cancelPromise])\n\t\t})\n\t})\n\n\to.spec(\"export loop\", function () {\n\t\to.test(\"it continues to load mail list\", async function () {\n\t\t\tconst mailBag = assertNotNull(mailboxDetail.mailbox.currentMailBag)\n\t\t\tconst { mail: mail1 } = prepareMailData(mailBag, GENERATED_MAX_ID, 1)\n\t\t\tconst { mail: mail2, mailBundle: mailBundle2 } = prepareMailData(mailBag, getElementId(mail1), 2)\n\t\t\twhen(mailExportFacade.loadFixedNumberOfMailsWithCache(mailBag.mails, getElementId(mail2), matchers.anything())).thenResolve([])\n\t\t\twhen(mailExportFacade.loadFixedNumberOfMailsWithCache(matchers.not(mailBag.mails), matchers.anything(), matchers.anything())).thenResolve([])\n\t\t\twhen(mailExportFacade.getExportServers(mailboxDetail.mailGroup)).thenResolve([createTestEntity(BlobServerUrlTypeRef, { url: \"baseUrl\" })])\n\n\t\t\tawait controller.startExport(mailboxDetail)\n\n\t\t\tverify(exportFacade.saveMailboxExport(mailBundle2, userId, mailBag._id, getElementId(mail2)))\n\t\t\tverify(exportFacade.endMailboxExport(userId))\n\t\t})\n\n\t\to.test(\"it loops over mail bags\", async function () {\n\t\t\tconst currentMailBag = assertNotNull(mailboxDetail.mailbox.currentMailBag)\n\t\t\tconst { mail: mail1, mailBundle: mailBundle1 } = prepareMailData(currentMailBag, GENERATED_MAX_ID, 1)\n\t\t\twhen(mailExportFacade.loadFixedNumberOfMailsWithCache(currentMailBag.mails, getElementId(mail1), \"baseUrl\")).thenResolve([])\n\t\t\tconst archivedMailBag1 = mailboxDetail.mailbox.archivedMailBags[0]\n\t\t\tconst { mail: mail2, mailBundle: mailBundle2 } = prepareMailData(archivedMailBag1, GENERATED_MAX_ID, 2)\n\t\t\twhen(mailExportFacade.loadFixedNumberOfMailsWithCache(archivedMailBag1.mails, getElementId(mail2), \"baseUrl\")).thenResolve([])\n\t\t\tconst archivedMailBag2 = mailboxDetail.mailbox.archivedMailBags[1]\n\t\t\tconst { mail: mail3, mailBundle: mailBundle3 } = prepareMailData(archivedMailBag2, GENERATED_MAX_ID, 3)\n\t\t\twhen(mailExportFacade.loadFixedNumberOfMailsWithCache(archivedMailBag2.mails, getElementId(mail3), \"baseUrl\")).thenResolve([])\n\t\t\twhen(mailExportFacade.getExportServers(mailboxDetail.mailGroup)).thenResolve([{ _id: \"id\", url: \"baseUrl\", _type: BlobServerUrlTypeRef }])\n\n\t\t\tawait controller.startExport(mailboxDetail)\n\n\t\t\tverify(exportFacade.saveMailboxExport(mailBundle1, userId, currentMailBag._id, getElementId(mail1)))\n\t\t\tverify(exportFacade.saveMailboxExport(mailBundle2, userId, archivedMailBag1._id, getElementId(mail2)))\n\t\t\tverify(exportFacade.saveMailboxExport(mailBundle3, userId, archivedMailBag2._id, getElementId(mail3)))\n\t\t\tverify(exportFacade.endMailboxExport(userId))\n\t\t})\n\n\t\to.test(\"it loops over servers\", async function () {\n\t\t\twhen(mailExportFacade.getExportServers(mailboxDetail.mailGroup)).thenResolve([\n\t\t\t\t{ _id: \"id\", url: \"baseUrl1\", _type: BlobServerUrlTypeRef },\n\t\t\t\t{ _id: \"id\", url: \"baseUrl2\", _type: BlobServerUrlTypeRef },\n\t\t\t\t{ _id: \"id\", url: \"baseUrl3\", _type: BlobServerUrlTypeRef },\n\t\t\t])\n\t\t\tconst currentMailBag = assertNotNull(mailboxDetail.mailbox.currentMailBag)\n\t\t\tconst { mail: mail1, mailBundle: mailBundle1, mailDetails: mailDetails1 } = prepareMailData(currentMailBag, GENERATED_MAX_ID, 1)\n\t\t\twhen(mailExportFacade.loadFixedNumberOfMailsWithCache(currentMailBag.mails, getElementId(mail1), matchers.anything())).thenResolve([])\n\t\t\twhen(mailExportFacade.loadFixedNumberOfMailsWithCache(matchers.not(currentMailBag.mails), matchers.anything(), matchers.anything())).thenResolve([])\n\n\t\t\tawait controller.startExport(mailboxDetail)\n\n\t\t\tverify(mailExportFacade.loadFixedNumberOfMailsWithCache(currentMailBag.mails, GENERATED_MAX_ID, \"baseUrl2\"))\n\t\t\tverify(mailExportFacade.loadAttachments([mail1], \"baseUrl3\"))\n\t\t\tverify(mailExportFacade.loadAttachmentData(mail1, matchers.anything()))\n\t\t})\n\t})\n\n\to.spec(\"handle errors\", function () {\n\t\to.test(\"SuspensionError\", async () => {\n\t\t\twhen(mailExportFacade.getExportServers(mailboxDetail.mailGroup)).thenResolve([{ _id: \"id\", url: \"baseUrl\", _type: BlobServerUrlTypeRef }])\n\t\t\tlet wasThrown = false\n\t\t\twhen(mailExportFacade.loadFixedNumberOfMailsWithCache(matchers.anything(), matchers.anything(), matchers.anything())).thenDo(() => {\n\t\t\t\tif (wasThrown) {\n\t\t\t\t\treturn Promise.resolve([])\n\t\t\t\t} else {\n\t\t\t\t\twasThrown = true\n\t\t\t\t\treturn Promise.reject(new SuspensionError(\":(\", \"10\"))\n\t\t\t\t}\n\t\t\t})\n\t\t\tawait controller.startExport(mailboxDetail)\n\t\t\tverify(mailExportFacade.loadFixedNumberOfMailsWithCache(matchers.anything(), matchers.anything(), matchers.anything()), { times: 3 + 1 })\n\t\t\to(wasThrown).equals(true)\n\t\t})\n\t})\n})\n","import o from \"@tutao/otest\"\nimport { MAIL_EXPORT_TOKEN_HEADER, MailExportFacade } from \"../../../../../src/common/api/worker/facades/lazy/MailExportFacade.js\"\nimport { MailExportTokenFacade } from \"../../../../../src/common/api/worker/facades/lazy/MailExportTokenFacade.js\"\nimport { BulkMailLoader } from \"../../../../../src/mail-app/workerUtils/index/BulkMailLoader.js\"\nimport { BlobFacade } from \"../../../../../src/common/api/worker/facades/lazy/BlobFacade.js\"\nimport { CryptoFacade } from \"../../../../../src/common/api/worker/crypto/CryptoFacade.js\"\nimport { instance, object, when } from \"testdouble\"\nimport { createTestEntity } from \"../../../TestUtils.js\"\nimport { FileTypeRef, MailDetailsTypeRef, MailTypeRef } from \"../../../../../src/common/api/entities/tutanota/TypeRefs.js\"\nimport { ArchiveDataType } from \"../../../../../src/common/api/common/TutanotaConstants\"\nimport { createReferencingInstance } from \"../../../../../src/common/api/common/utils/BlobUtils\"\nimport { BlobAccessTokenFacade } from \"../../../../../src/common/api/worker/facades/BlobAccessTokenFacade\"\nimport { SuspensionBehavior } from \"../../../../../src/common/api/worker/rest/RestClient\"\n\no.spec(\"MailExportFacade\", () => {\n\tconst token = \"my token\"\n\tconst tokenHeaders = { [MAIL_EXPORT_TOKEN_HEADER]: token }\n\tconst mail1 = createTestEntity(MailTypeRef)\n\tconst mail2 = createTestEntity(MailTypeRef)\n\tconst details1 = createTestEntity(MailDetailsTypeRef)\n\tconst details2 = createTestEntity(MailDetailsTypeRef)\n\n\tlet facade!: MailExportFacade\n\tlet tokenFacade!: MailExportTokenFacade\n\tlet bulkMailLoader!: BulkMailLoader\n\tlet blobFacade!: BlobFacade\n\tlet cryptoFacade!: CryptoFacade\n\tlet blobAccessTokenFacade!: BlobAccessTokenFacade\n\n\to.beforeEach(() => {\n\t\ttokenFacade = {\n\t\t\tloadWithToken: (req) => req(token),\n\t\t} as Partial<MailExportTokenFacade> as MailExportTokenFacade\n\t\tbulkMailLoader = object()\n\t\tblobFacade = object()\n\t\tcryptoFacade = object()\n\t\tblobAccessTokenFacade = instance(BlobAccessTokenFacade)\n\t\tfacade = new MailExportFacade(tokenFacade, bulkMailLoader, blobFacade, cryptoFacade, blobAccessTokenFacade)\n\t})\n\n\to.test(\"loadFixedNumberOfMailsWithCache\", async () => {\n\t\twhen(\n\t\t\tbulkMailLoader.loadFixedNumberOfMailsWithCache(\"mailListId\", \"startId\", {\n\t\t\t\tbaseUrl: \"baseUrl\",\n\t\t\t\textraHeaders: tokenHeaders,\n\t\t\t\tsuspensionBehavior: SuspensionBehavior.Throw,\n\t\t\t}),\n\t\t).thenResolve([mail1, mail2])\n\n\t\tconst result = await facade.loadFixedNumberOfMailsWithCache(\"mailListId\", \"startId\", \"baseUrl\")\n\n\t\to(result).deepEquals([mail1, mail2])\n\t})\n\n\to.test(\"loadMailDetails\", async () => {\n\t\tconst expected = [\n\t\t\t{ mail: mail1, mailDetails: details1 },\n\t\t\t{ mail: mail2, mailDetails: details2 },\n\t\t]\n\t\twhen(bulkMailLoader.loadMailDetails([mail1, mail2], { extraHeaders: tokenHeaders, suspensionBehavior: SuspensionBehavior.Throw })).thenResolve(expected)\n\n\t\tconst result = await facade.loadMailDetails([mail1, mail2])\n\n\t\to(result).deepEquals(expected)\n\t})\n\n\to.test(\"loadAttachments\", async () => {\n\t\tconst expected = [createTestEntity(FileTypeRef), createTestEntity(FileTypeRef)]\n\t\twhen(\n\t\t\tbulkMailLoader.loadAttachments([mail1, mail2], {\n\t\t\t\tbaseUrl: \"baseUrl\",\n\t\t\t\textraHeaders: tokenHeaders,\n\t\t\t\tsuspensionBehavior: SuspensionBehavior.Throw,\n\t\t\t}),\n\t\t).thenResolve(expected)\n\n\t\tconst result = await facade.loadAttachments([mail1, mail2], \"baseUrl\")\n\n\t\to(result).deepEquals(expected)\n\t})\n\n\to.test(\"loadAttachmentData\", async () => {\n\t\tconst dataByteMail1 = new Uint8Array([1, 2, 3])\n\t\tconst dataByteMail2 = new Uint8Array([4, 5, 6])\n\t\tconst mailAttachments = [\n\t\t\tcreateTestEntity(FileTypeRef, {\n\t\t\t\tname: \"mail1\",\n\t\t\t\tmimeType: \"img/png\",\n\t\t\t\tcid: \"12345\",\n\t\t\t\t_id: [\"attachment\", \"id1\"],\n\t\t\t}),\n\t\t\tcreateTestEntity(FileTypeRef, { name: \"mail2\", mimeType: \"pdf\", cid: \"12345\", _id: [\"attachment\", \"id2\"] }),\n\t\t]\n\n\t\twhen(cryptoFacade.enforceSessionKeyUpdateIfNeeded(mail1, mailAttachments)).thenResolve(mailAttachments)\n\t\twhen(\n\t\t\tblobFacade.downloadAndDecryptBlobsOfMultipleInstances(\n\t\t\t\tArchiveDataType.Attachments,\n\t\t\t\t[createReferencingInstance(mailAttachments[0]), createReferencingInstance(mailAttachments[1])],\n\t\t\t\t{\n\t\t\t\t\textraHeaders: tokenHeaders,\n\t\t\t\t\tsuspensionBehavior: SuspensionBehavior.Throw,\n\t\t\t\t},\n\t\t\t),\n\t\t).thenResolve(\n\t\t\tnew Map([\n\t\t\t\t[\"id1\", dataByteMail1],\n\t\t\t\t[\"id2\", dataByteMail2],\n\t\t\t]),\n\t\t)\n\n\t\tconst result = await facade.loadAttachmentData(mail1, mailAttachments)\n\n\t\to(result).deepEquals([\n\t\t\t{\n\t\t\t\t_type: \"DataFile\",\n\t\t\t\tname: \"mail1\",\n\t\t\t\tmimeType: \"img/png\",\n\t\t\t\tdata: dataByteMail1,\n\t\t\t\tcid: \"12345\",\n\t\t\t\tsize: 3,\n\t\t\t\tid: [\"attachment\", \"id1\"],\n\t\t\t},\n\t\t\t{\n\t\t\t\t_type: \"DataFile\",\n\t\t\t\tname: \"mail2\",\n\t\t\t\tmimeType: \"pdf\",\n\t\t\t\tdata: dataByteMail2,\n\t\t\t\tcid: \"12345\",\n\t\t\t\tsize: 3,\n\t\t\t\tid: [\"attachment\", \"id2\"],\n\t\t\t},\n\t\t])\n\t})\n})\n","import o from \"@tutao/otest\"\n\nimport \"./misc/ListModelTest.js\"\nimport \"./misc/ListElementListModelTest.js\"\nimport \"./api/worker/facades/LoginFacadeTest.js\"\nimport \"./api/common/utils/LoggerTest.js\"\nimport \"./api/common/utils/BirthdayUtilsTest.js\"\nimport \"./api/worker/rest/EntityRestClientTest.js\"\nimport \"./api/worker/crypto/CryptoFacadeTest.js\"\nimport \"./api/worker/crypto/AsymmetricCryptoFacadeTest.js\"\nimport \"./api/worker/crypto/InstanceMapperTest.js\"\nimport \"./api/worker/crypto/OwnerEncSessionKeysUpdateQueueTest.js\"\nimport \"./api/worker/crypto/CompatibilityTest.js\"\nimport \"./api/common/error/RestErrorTest.js\"\nimport \"./api/common/error/TutanotaErrorTest.js\"\nimport \"./api/worker/rest/EntityRestCacheTest.js\"\nimport \"./api/worker/rest/EphemeralCacheStorageTest.js\"\nimport \"./api/worker/EventBusClientTest.js\"\nimport \"./api/worker/EventBusEventCoordinatorTest.js\"\nimport \"./api/worker/search/IndexerTest.js\"\nimport \"./api/worker/search/IndexerCoreTest.js\"\nimport \"./api/worker/search/ContactIndexerTest.js\"\nimport \"./api/worker/search/MailIndexerTest.js\"\nimport \"./api/worker/search/IndexUtilsTest.js\"\nimport \"./api/worker/search/SearchFacadeTest.js\"\nimport \"./api/worker/search/SuggestionFacadeTest.js\"\nimport \"./api/worker/search/SearchIndexEncodingTest.js\"\nimport \"./serviceworker/SwTest.js\"\nimport \"./api/worker/search/EventQueueTest.js\"\nimport \"./api/worker/facades/MailFacadeTest.js\"\nimport \"./api/worker/facades/GroupManagementFacadeTest.js\"\nimport \"./api/worker/facades/PQMessageTest.js\"\nimport \"./api/worker/facades/PQFacadeTest.js\"\nimport \"./api/worker/facades/CalendarFacadeTest.js\"\nimport \"./api/worker/facades/UserFacadeTest.js\"\nimport \"./api/worker/facades/KeyLoaderFacadeTest.js\"\nimport \"./api/worker/SuspensionHandlerTest.js\"\nimport \"./api/worker/facades/ConfigurationDbTest.js\"\nimport \"./api/worker/CompressionTest.js\"\nimport \"./api/common/utils/PlainTextSearchTest.js\"\nimport \"./api/common/utils/EntityUtilsTest.js\"\nimport \"./api/worker/rest/CborDateEncoderTest.js\"\nimport \"./api/worker/facades/BlobFacadeTest.js\"\nimport \"./api/worker/facades/BlobAccessTokenFacadeTest.js\"\nimport \"./api/worker/utils/SleepDetectorTest.js\"\nimport \"./api/worker/rest/ServiceExecutorTest.js\"\nimport \"./api/worker/rest/CacheStorageProxyTest.js\"\nimport \"./contacts/VCardExporterTest.js\"\nimport \"./contacts/VCardImporterTest.js\"\nimport \"./misc/ClientDetectorTest.js\"\nimport \"./misc/LanguageViewModelTest.js\"\nimport \"./api/common/utils/CommonFormatterTest.js\"\nimport \"./misc/FormatterTest.js\"\nimport \"./api/worker/UrlifierTest.js\"\nimport \"./misc/PasswordUtilsTest.js\"\nimport \"./misc/PasswordGeneratorTest.js\"\nimport \"./misc/PasswordModelTest.js\"\nimport \"./gui/animation/AnimationsTest.js\"\nimport \"./gui/ThemeControllerTest.js\"\nimport \"./api/main/EntropyCollectorTest.js\"\nimport \"./misc/HtmlSanitizerTest.js\"\nimport \"./mail/InboxRuleHandlerTest.js\"\nimport \"./mail/MailUtilsSignatureTest.js\"\nimport \"./api/common/mail/CommonMailUtilsTest.js\"\nimport \"./mail/MailModelTest.js\"\nimport \"./contacts/ContactUtilsTest.js\"\nimport \"./contacts/ContactMergeUtilsTest.js\"\nimport \"./calendar/CalendarModelTest.js\"\nimport \"./calendar/CalendarUtilsTest.js\"\nimport \"./calendar/CalendarInvitesTest.js\"\nimport \"./calendar/CalendarParserTest.js\"\nimport \"./calendar/CalendarImporterTest.js\"\nimport \"./calendar/AlarmSchedulerTest.js\"\nimport \"./calendar/CalendarAgendaViewTest.js\"\nimport \"./support/FaqModelTest.js\"\nimport \"./gui/base/WizardDialogNTest.js\"\nimport \"./calendar/eventeditor/CalendarEventWhenModelTest.js\"\nimport \"./calendar/eventeditor/CalendarEventWhoModelTest.js\"\nimport \"./calendar/eventeditor/CalendarEventAlarmModelTest.js\"\nimport \"./calendar/eventeditor/CalendarEventModelTest.js\"\nimport \"./gui/ColorTest.js\"\nimport \"./mail/SendMailModelTest.js\"\nimport \"./misc/OutOfOfficeNotificationTest.js\"\nimport \"./subscription/PriceUtilsTest.js\"\nimport \"./subscription/SubscriptionUtilsTest.js\"\nimport \"./subscription/CreditCardViewModelTest.js\"\nimport \"./mail/TemplateSearchFilterTest.js\"\nimport \"./mail/KnowledgeBaseSearchFilterTest.js\"\nimport \"./api/worker/facades/MailExportTokenFacadeTest.js\"\nimport \"./mail/export/ExporterTest.js\"\nimport \"./mail/export/BundlerTest.js\"\nimport \"./api/common/utils/FileUtilsTest.js\"\nimport \"./gui/GuiUtilsTest.js\"\nimport \"./misc/ParserTest.js\"\nimport \"./misc/news/items/ReferralLinkNewsTest.js\"\nimport \"./settings/TemplateEditorModelTest.js\"\nimport \"./settings/mailaddress/MailAddressTableModelTest.js\"\nimport \"./settings/UserDataExportTest.js\"\nimport \"./settings/login/secondfactor/SecondFactorEditModelTest.js\"\nimport \"./misc/SchedulerTest.js\"\nimport \"./misc/parsing/MailAddressParserTest.js\"\nimport \"./misc/FormatValidatorTest.js\"\nimport \"./settings/whitelabel/CustomColorEditorTest.js\"\nimport \"./login/LoginViewModelTest.js\"\nimport \"./misc/credentials/CredentialsProviderTest.js\"\nimport \"./misc/DeviceConfigTest.js\"\nimport \"./calendar/EventDragHandlerTest.js\"\nimport \"./calendar/CalendarGuiUtilsTest.js\"\nimport \"./calendar/CalendarViewModelTest.js\"\nimport \"./calendar/eventeditor/CalendarNotificationModelTest.js\"\nimport \"./misc/webauthn/WebauthnClientTest.js\"\nimport \"./translations/TranslationKeysTest.js\"\nimport \"./misc/UsageTestModelTest.js\"\nimport \"./misc/NewsModelTest.js\"\nimport \"./file/FileControllerTest.js\"\nimport \"./api/worker/rest/CustomCacheHandlerTest.js\"\nimport \"./misc/RecipientsModelTest.js\"\nimport \"./api/worker/facades/MailAddressFacadeTest.js\"\nimport \"./mail/model/FolderSystemTest.js\"\nimport \"./mail/model/MailListModelTest.js\"\nimport \"./gui/ScopedRouterTest.js\"\nimport \"./contacts/ContactListEditorTest.js\"\nimport \"./login/PostLoginUtilsTest.js\"\nimport \"./api/worker/facades/KyberFacadeTest.js\"\nimport \"./api/worker/facades/RsaPqPerformanceTest.js\"\nimport \"./api/worker/pdf/DeflaterTest.js\"\nimport \"./api/worker/pdf/PdfWriterTest.js\"\nimport \"./api/worker/pdf/PdfObjectTest.js\"\nimport \"./api/worker/pdf/PdfDocumentTest.js\"\nimport \"./api/worker/invoicegen/PdfInvoiceGeneratorTest.js\"\nimport \"./api/worker/invoicegen/XRechnungInvoiceGeneratorTest.js\"\nimport \"./subscription/SignupFormTest.js\"\nimport \"./api/worker/facades/ContactFacadeTest.js\"\nimport \"./api/worker/facades/KeyRotationFacadeTest.js\"\nimport \"./mail/view/ConversationViewModelTest.js\"\nimport \"./mail/view/MailViewerViewModelTest.js\"\nimport \"./api/worker/facades/KeyCacheTest.js\"\nimport \"./misc/InAppRatingUtilsTest.js\"\nimport \"./native/main/MailExportControllerTest.js\"\nimport \"./api/worker/facades/MailExportFacadeTest.js\"\n\nimport * as td from \"testdouble\"\nimport { random } from \"@tutao/tutanota-crypto\"\nimport { Mode } from \"../../src/common/api/common/Env.js\"\n\nexport async function run({ integration, filter }: { integration?: boolean; filter?: string } = {}) {\n\tawait setupSuite({ integration })\n\tconst result = await o.run({ filter })\n\n\to.printReport(result)\n\n\treturn result\n}\n\nasync function setupSuite({ integration }: { integration?: boolean }) {\n\tconst { WorkerImpl } = await import(\"../../src/mail-app/workerUtils/worker/WorkerImpl.js\")\n\tglobalThis.testWorker = WorkerImpl\n\n\tif (typeof process != \"undefined\") {\n\t\tif (integration) {\n\t\t\tconsole.log(\"\\nRunning with integration tests because was run with -i\\n\")\n\t\t\tawait import(\"./api/main/WorkerTest.js\")\n\t\t\tawait import(\"./IntegrationTest.js\")\n\t\t} else {\n\t\t\tconsole.log(\"\\nRunning without integration tests because run without -i\\n\")\n\t\t}\n\t}\n\n\tif (typeof process != \"undefined\") {\n\t\t// setup the Entropy for all testcases\n\t\tawait random.addEntropy([{ data: 36, entropy: 256, source: \"key\" }])\n\t\tawait import(\"./desktop/PathUtilsTest.js\")\n\t\tawait import(\"./desktop/files/TempFsTest.js\")\n\t\tawait import(\"./desktop/config/migrations/DesktopConfigMigratorTest.js\")\n\t\tawait import(\"./desktop/ElectronUpdaterTest.js\")\n\t\tawait import(\"./desktop/DesktopNotifierTest.js\")\n\t\tawait import(\"./desktop/ApplicationWindowTest.js\")\n\t\tawait import(\"./desktop/sse/SecretStorageTest.js\")\n\t\tawait import(\"./desktop/sse/DesktopAlarmStorageTest.js\")\n\t\tawait import(\"./desktop/sse/DesktopAlarmSchedulerTest.js\")\n\t\tawait import(\"./desktop/files/DesktopFileFacadeTest.js\")\n\t\tawait import(\"./desktop/net/ProtocolProxyTest.js\")\n\t\tawait import(\"./desktop/SocketeerTest.js\")\n\t\tawait import(\"./desktop/integration/DesktopIntegratorTest.js\")\n\t\tawait import(\"./desktop/integration/RegistryScriptGeneratorTest.js\")\n\t\tawait import(\"./desktop/DesktopCryptoFacadeTest.js\")\n\t\tawait import(\"./desktop/DesktopContextMenuTest.js\")\n\t\tawait import(\"./desktop/DesktopKeyStoreFacadeTest.js\")\n\t\tawait import(\"./desktop/config/ConfigFileTest.js\")\n\t\tawait import(\"./desktop/db/OfflineDbFacadeTest.js\")\n\t\tawait import(\"./desktop/credentials/DesktopNativeCredentialsFacadeTest.js\")\n\t\tawait import(\"./desktop/credentials/AppPassHandlerTest.js\")\n\t\tawait import(\"./api/worker/offline/OfflineStorageMigratorTest.js\")\n\t\tawait import(\"./api/worker/offline/OfflineStorageMigrationsTest.js\")\n\t\tawait import(\"./api/worker/offline/OfflineStorageTest.js\")\n\t\tawait import(\"./desktop/config/DesktopConfigTest.js\")\n\t\tawait import(\"./api/worker/rest/RestClientTest.js\")\n\t\tawait import(\"./desktop/files/TempFsTest.js\")\n\t\tawait import(\"./desktop/sse/SseClientTest.js\")\n\t\tawait import(\"./desktop/sse/TutaSseFacadeTest.js\")\n\t\tawait import(\"./desktop/sse/TutaNotificationHandlerTest.js\")\n\t\tawait import(\"./desktop/credentials/KeychainEncryptionTest.js\")\n\t\tawait import(\"./desktop/credentials/DesktopCredentialsStorageTest.js\")\n\t\tawait import(\"./desktop/export/DesktopExportFacadeTest.js\")\n\t}\n\n\t// testdouble complains about certain mocking related code smells, and also prints a warning whenever you replace a property on an object.\n\t// it's very very noisy, so we turn it off\n\ttd.config({\n\t\tignoreWarnings: true,\n\t})\n\to.before(async function () {\n\t\t// setup the Entropy for all testcases\n\t\tawait random.addEntropy([{ data: 36, entropy: 256, source: \"key\" }])\n\t})\n\n\to.afterEach(function () {\n\t\ttd.reset()\n\n\t\t// Reset env.mode in case any tests have fiddled with it\n\t\tenv.mode = Mode.Test\n\t})\n}\n"],"x_google_ignoreList":[135,139],"mappings":"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U;EACV,mBAAmB;EACnB,mBAAmB;EACnB,mBAAmB;EACnB,mBAAmB;CACnB;CACD;EACC,mBAAmB;EACnB,YAAY;EACZ,oBAAoB;EACpB,UAAU;EACV,mBAAmB;EACnB,mBAAmB;EACnB,mBAAmB;EACnB,mBAAmB;CACnB;CACD;EACC,mBAAmB;EACnB,YAAY;EACZ,oBAAoB;EACpB,UAAU;EACV,mBAAmB;EACnB,mBAAmB;EACnB,mBAAmB;EACnB,mBAAmB;CACnB;CACD;EACC,mBAAmB;EACnB,YAAY;EACZ,oBAAoB;EACpB,UAAU;EACV,mBAAmB;EACnB,mBAAmB;EACnB,mBAAmB;EACnB,mBAAmB;CACnB;CACD;EACC,mBAAmB;EACnB,YAAY;EACZ,oBAAoB;EACpB,UAAU;EACV,mBAAmB;EACnB,mBAAmB;EACnB,mBAAmB;EACnB,mBAAmB;CACnB;CACD;EACC,mBAAmB;EACnB,YAAY;EACZ,oBAAoB;EACpB,UAAU;EACV,mBAAmB;EACnB,mBAAmB;EACnB,mBAAmB;EACnB,mBAAmB;CACnB;CACD;EACC,mBAAmB;EACnB,YAAY;EACZ,oBAAoB;EACpB,UAAU;EACV,mBAAmB;EACnB,mBAAmB;EACnB,mBAAmB;EACnB,mBAAmB;CACnB;CACD;EACC,mBAAmB;EACnB,YAAY;EACZ,oBAAoB;EACpB,UAAU;EACV,mBAAmB;EACnB,mBAAmB;EACnB,mBAAmB;EACnB,mBAAmB;CACnB;AACD;oBACgB;CAChB;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;CACD;EACC,UAAU;EACV,iBAAiB;CACjB;AACD;qBACiB;CACjB;EACC,YAAY;EACZ,UAAU;EACV,WAAW;CACX;CACD;EACC,YAAY;EACZ,UAAU;EACV,WAAW;CACX;CACD;EACC,YAAY;EACZ,UAAU;EACV,WAAW;CACX;CACD;EACC,YAAY;EACZ,UAAU;EACV,WAAW;CACX;CACD;EACC,YAAY;EACZ,UAAU;EACV,WAAW;CACX;CACD;EACC,YAAY;EACZ,UAAU;EACV,WAAW;CACX;AACD;qBACiB;CACjB;EACC,YAAY;EACZ,UAAU;EACV,WAAW;CACX;CACD;EACC,YAAY;EACZ,UAAU;EACV,WAAW;CACX;CACD;EACC,YAAY;EACZ,UAAU;EACV,WAAW;CACX;CACD;EACC,YAAY;EACZ,UAAU;EACV,WAAW;CACX;CACD;EACC,YAAY;EACZ,UAAU;EACV,WAAW;CACX;CACD;EACC,YAAY;EACZ,UAAU;EACV,WAAW;CACX;AACD;oBACgB;CAChB;EACC,YAAY;EACZ,UAAU;EACV,WAA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IACC,EACC,OAAO,WACP;IACD,EACC,OAAO,mBACP;IACD,EACC,OAAO,gBACP;GACD,GACD,CAAC,OAAQ,EACT,CACD,CAAC,WAAW;IACZ,EACC,OAAO,gBACP;IACD,EACC,OAAO,mBACP;IACD,EACC,OAAO,WACP;GACD,EAAC;EACF,EAAC;AACF,eAAE,eAAe,WAAY;AAC5B,gBACC,OACC,QACA,CACC,EACC,OAAO,OACP,CACD,GACD,CAAC,OAAQ,EACT,CACD,CAAC,WAAW,CACZ,EACC,OAAO,OACP,CACD,EAAC;AACF,gBACC,OACC,QACA,CACC,EACC,OAAO,OACP,CACD,GACD,CAAE,EACF,CACD,CAAC,WAAW,CAAE,EAAC;AAChB,gBACC,OACC,WACA,CACC,EACC,OAAO,OACP,CACD,GACD,CAAC,OAAQ,EACT,CACD,CAAC,WAAW,CAAE,EAAC;AAChB,gBACC,OACC,QACA,CACC;IACC,OAAO;IACP,MAAM;GACN,CACD,GACD,CAAC,MAAO,EACR,CACD,CAAC,WAAW,CAAE,EAAC;AAChB,gBACC,OACC,QACA,CACC,EACC,OAAO,OACP,CACD,GACD,CAAC,OAAQ,EACT,CACD,CAAC,WAAW,CACZ,EACC,OAAO,OACP,CACD,EAAC;AACF,gBACC,OACC,QACA,CACC,EACC,OAAO,OACP,CACD,GACD,CAAC,OAAQ,EACT,CACD,CAAC,WAAW,CACZ,EACC,OAAO,OACP,CACD,EAAC;AACF,gBACC,OACC,aACA,CACC,EACC,OAAO,kBACP,CACD,GACD,CAAC,OAAQ,EACT,CACD,CAAC,WAAW,CACZ,EACC,OAAO,kBACP,CACD,EAAC;AACF,gBACC,OACC,cACA,CACC,EACC,OAAO,kBACP,CACD,GACD,CAAC,OAAQ,EACT,CACD,CAAC,WAAW,CACZ,EACC,OAAO,kBACP,CACD,EAAC;AACF,gBACC,OACC,aACA,CACC,EACC,OAAO,kBACP,CACD,GACD,CAAC,OAAQ,EACT,CACD,CAAC,WAAW,CACZ,EACC,OAAO,kBACP,CACD,EAAC;EACF,EAAC;AAEF,eAAE,oBAAoB,WAAY;AACjC,gBAC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ACF;KACD,EAAC;KACF,QAAQ,CAAE;IACV,CACD;GACD;AACD,qBAAkB,aAAa,SAAS;EACxC,EAAC;AACF,eAAE,kCAAkC,iBAAkB;GAIrD,MAAM,cAAc,wBACnB;IACC;IACA;IACA;IACA;IACA;IACA;KACC;KACA;KACA;KACA;IACD;IACA;IACA;IACA;IACA;IACA;GACA,EAAC,KAAK,OAAO,EACdA,OACA;GACD,MAAM,WAAW;IAChB,QAAQ;IACR,UAAU,CACT;KACC,OAAO,iBAAiB,sBAAsB;MAC7C,SAAS;MACT,WAAW,SAAS,WACnB;OACC,MAAM;OACN,OAAO;OACP,KAAK;OACL,MAAM;OACN,QAAQ;MACR,GACD,EAAE,aAAM,EACR,CAAC,UAAU;MACZ,SAAS,SAAS,WACjB;OACC,MAAM;OACN,OAAO;OACP,KAAK;OACL,MAAM;OACN,QAAQ;MACR,GACD,EAAE,aAAM,EACR,CAAC,UAAU;MACZ,KAAK;MACL,WAAW;MACX,WAAW,iBAAiB,6BAA6B;OACxD,MAAM;OACN,SAAS;MACT,EAAC;MACF,WAAW,CACV,iBAAiB,8BAA8B;OAC9C,SAAS,iBAAiB,6BAA6B;QACtD,MAAM;QACN,SAAS;OACT,EAAC;OACF,QAAQ,uBAAuB;MAC/B,EAAC,AACF;KACD,EAAC;KACF,QAAQ,CAAE;IACV,CACD;GACD;AACD,qBAAkB,aAAa,SAAS;EACxC,EAAC;AACF,eAAE,iBAAiB,iBAAkB;AACpC,qBACC,wBACC;IACC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;GACA,EAAC,KAAK,OAAO,EACdA,OACA,CAAC,SAAS,IACX;IACC,OAAO,iBAAiB,sBAAsB;KAC7C,SAAS;KACT,WAAW,yBACV,SAAS,WACR;MACC,MAAM;MACN,OAAO;MACP,KAAK;KACL,GACD,EAAE,aAAM,EACR,CAAC,UAAU,EACZA,OACA;KACD,SAAS,yBACR,SAAS,WACR;MACC,MAAM;MACN,OAAO;MACP,KAAK;KACL,GACD,EAAE,aAAM,EACR,CAAC,UAAU,EACZA,OACA;KACD,KAAK;KACL,WAAW;KACX,aAAa;KACb,UAAU;IACV,EAAC;IACF,QAAQ,CAAE;GACV,EACD;EACD,EAAC;AACF,eAAE,sDAAsD,iBAAkB;GACzE,MAAM,WAAW;IAChB,OAAO,iBAAiB,sBAAsB;KAC7C,WAAW,IAAI,KAAK;KACpB,SAAS,IAAI,KAAK;KAClB,UAAU;KACV,SAAS;KACT,cAAc;IACd,EAAC;IACF,QAAQ,CAAE;GACV;GACD,MAAM,SAAS,wBACd;IACC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;GACA,EAAC,KAAK,OAAO,EACdA,OACA,CAAC,SAAS;AACX,gBAAE,OAAO,MAAM,IAAI,CAAC,UAAU,KAAK;AAEnC,UAAO,MAAM,MAAM;AACnB,qBAAkB,QAAQ,SAAS;EACnC,EAAC;AACF,eAAE,oCAAoC,iBAAkB;AACvD,qBACC,wBACC;IACC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;GACA,EAAC,KAAK,OAAO,EACdA,OACA,CAAC,SAAS,IACX;IACC,OAAO,iBAAiB,sBAAsB;KAC7C,SAAS;KACT,WAAW,yBACV,SAAS,WACR;MACC,MAAM;MACN,OAAO;MACP,KAAK;KACL,GACD,EAAE,aAAM,EACR,CAAC,UAAU,EACZA,OACA;KACD,SAAS,yBACR,SAAS,WACR;MACC,MAAM;MACN,OAAO;MACP,KAAK;KACL,GACD,EAAE,aAAM,EACR,CAAC,UAAU,EACZA,OACA;KACD,KAAK;KACL,WAAW;KACX,aAAa;KACb,UAAU;IACV,EAAC;IACF,QAAQ,CAAE;GACV,EACD;EACD,EAAC;AACF,eAAE,oCAAoC,iBAAkB;AACvD,qBACC,wBACC;IACC;IACA;IACA;IACA;IACA;IACA;KACC;KACA;KACA;KACA;IACD;IACA;IACA;IACA;IACA;IACA;IACA;GACA,EAAC,KAAK,OAAO,EACdA,OACA,EACD;IACC,QAAQ;IACR,UAAU,CACT;KACC,OAAO,iBAAiB,sBAAsB;MAC7C,SAAS;MACT,WAAW,SAAS,WACnB;OACC,MAAM;OACN,OAAO;OACP,KAAK;OACL,MAAM;OACN,QAAQ;MACR,GACD,EAAE,aAAM,EACR,CAAC,UAAU;MACZ,SAAS,SAAS,WACjB;OACC,MAAM;OACN,OAAO;OACP,KAAK;OACL,MAAM;OACN,QAAQ;MACR,GACD,EAAE,aAAM,EACR,CAAC,UAAU;MACZ,KAAK;MACL,WAAW;MACX,YAAY;KACZ,EAAC;KACF,QAAQ,CACP;MACC,SAAS;MACT,iBAAiB;KACjB,CACD;IACD,CACD;GACD,EACD;EACD,EAAC;AACF,eAAE,uBAAuB,iBAAkB;AAC1C,qBACC,wBACC;IACC;IACA;IACA;IACA;IACA;IACA;KACC;KACA;KACA;KACA;IACD;IACA;IACA;IAGA;IACA;IACA;IACA;GACA,EAAC,KAAK,OAAO,EACdA,OACA,EACD;IACC,QAAQ;IACR,UAAU,CACT;KACC,OAAO,iBAAiB,sBAAsB;MAC7C,SAAS;MACT,WAAW,SAAS,WACnB;OACC,MAAM;OACN,OAAO;OACP,KAAK;OACL,MAAM;OACN,QAAQ;MACR,GACD,EAAE,aAAM,EACR,CAAC,UAAU;MACZ,SAAS,SAAS,WACjB;OACC,MAAM;OACN,OAAO;OACP,KAAK;OACL,MAAM;OACN,QAAQ;MACR,GACD,EAAE,aAAM,EACR,CAAC,UAAU;MACZ,KAAK;MACL,WAAW;MACX,YAAY;KACZ,EAAC;KACF,QAAQ,CACP;MACC,SAAS;MACT,iBAAiB;KACjB,CACD;IACD,CACD;GACD,EACD;EACD,EAAC;AACF,eAAE,4BAA4B,iBAAkB;AAC/C,qBACC,wBACC;IACC;IACA;IACA;IACA;IACA;IACA;KACC;KACA;KACA;KACA;IACD;IACA;IACA;IACA;IACA;IACA;IACA;GACA,EAAC,KAAK,OAAO,EACdA,OACA,EACD;IACC,QAAQ;IACR,UAAU,CACT;KACC,OAAO,iBAAiB,sBAAsB;MAC7C,SAAS;MACT,WAAW,SAAS,WACnB;OACC,MAAM;OACN,OAAO;OACP,KAAK;OACL,MAAM;OACN,QAAQ;MACR,GACD,E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"}