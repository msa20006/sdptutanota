{"version":3,"file":"WebCommonNativeFacade-RpKaxJ1a.js","names":["logins: LoginController","mailboxModel: MailboxModel","usageTestController: UsageTestController","fileApp: lazyAsync<NativeFileApp>","pushService: lazyAsync<NativePushServiceApp>","fileImportHandler: (filesUris: ReadonlyArray<string>) => unknown","openMailBox: (userId: string, address: string, requestedPath: string | null) => Promise<void>","openCalendar: (userId: string) => Promise<void>","appType: AppType","openSettings: (path: string) => Promise<void>","contactId: string","filesUris: ReadonlyArray<string>","text: string","addresses: ReadonlyArray<string>","subject: string","mailToUrlString: string","importAction: { text: MaybeTranslation; value: boolean }","attachFilesAction: { text: MaybeTranslation; value: boolean }","translationKey: string","title: string","oldPassword: string | null","dialog: Dialog"],"sources":["../../src/common/native/main/WebCommonNativeFacade.ts"],"sourcesContent":["import { CommonNativeFacade } from \"../common/generatedipc/CommonNativeFacade.js\"\nimport { lang, TranslationKey, MaybeTranslation } from \"../../misc/LanguageViewModel.js\"\nimport { decodeBase64, lazyAsync, noOp, ofClass } from \"@tutao/tutanota-utils\"\nimport { CancelledError } from \"../../api/common/error/CancelledError.js\"\nimport { UserError } from \"../../api/main/UserError.js\"\nimport m from \"mithril\"\nimport { Dialog } from \"../../gui/base/Dialog.js\"\nimport { AttachmentType, getAttachmentType } from \"../../gui/AttachmentBubble.js\"\nimport { showRequestPasswordDialog } from \"../../misc/passwords/PasswordRequestDialog.js\"\nimport { LoginController } from \"../../api/main/LoginController.js\"\nimport { MailboxModel } from \"../../mailFunctionality/MailboxModel.js\"\nimport { UsageTestController } from \"@tutao/tutanota-usagetests\"\nimport { NativeFileApp } from \"../common/FileApp.js\"\nimport { NativePushServiceApp } from \"./NativePushServiceApp.js\"\nimport { locator } from \"../../api/main/CommonLocator.js\"\nimport { AppType } from \"../../misc/ClientConstants.js\"\nimport { ContactTypeRef } from \"../../api/entities/tutanota/TypeRefs.js\"\nimport { isDesktop } from \"../../api/common/Env\"\nimport { HighestTierPlans } from \"../../api/common/TutanotaConstants.js\"\n\nexport class WebCommonNativeFacade implements CommonNativeFacade {\n\tconstructor(\n\t\tprivate readonly logins: LoginController,\n\t\tprivate readonly mailboxModel: MailboxModel,\n\t\tprivate readonly usageTestController: UsageTestController,\n\t\tprivate readonly fileApp: lazyAsync<NativeFileApp>,\n\t\tprivate readonly pushService: lazyAsync<NativePushServiceApp>,\n\t\tprivate readonly fileImportHandler: (filesUris: ReadonlyArray<string>) => unknown,\n\t\treadonly openMailBox: (userId: string, address: string, requestedPath: string | null) => Promise<void>,\n\t\treadonly openCalendar: (userId: string) => Promise<void>,\n\t\tprivate readonly appType: AppType,\n\t\treadonly openSettings: (path: string) => Promise<void>,\n\t) {}\n\n\tasync openContactEditor(contactId: string): Promise<void> {\n\t\tawait this.logins.waitForFullLogin()\n\t\tconst { ContactEditor } = await import(\"../../../mail-app/contacts/ContactEditor.js\")\n\t\tconst decodedContactId = decodeBase64(\"utf-8\", contactId)\n\t\tconst idParts = decodedContactId.split(\"/\")\n\t\ttry {\n\t\t\tconst contact = await locator.entityClient.load(ContactTypeRef, [idParts[0], idParts[1]])\n\t\t\tconst editor = new ContactEditor(locator.entityClient, contact)\n\n\t\t\treturn editor.show()\n\t\t} catch (err) {\n\t\t\tconsole.error(err)\n\t\t\treturn Dialog.message(\"contactNotFound_msg\")\n\t\t}\n\t}\n\n\t/**\n\t * create a mail editor as requested from the native side, ie because a\n\t * mailto-link was clicked or the \"Send as mail\" option\n\t * in LibreOffice/Windows Explorer was used.\n\t *\n\t * if a mailtoUrl is given:\n\t *  * the other arguments will be ignored.\n\t *  * confidential will be set to false\n\t *\n\t */\n\tasync createMailEditor(\n\t\tfilesUris: ReadonlyArray<string>,\n\t\ttext: string,\n\t\taddresses: ReadonlyArray<string>,\n\t\tsubject: string,\n\t\tmailToUrlString: string,\n\t): Promise<void> {\n\t\tconst { newMailEditorFromTemplate, newMailtoUrlMailEditor } = await import(\"../../../mail-app/mail/editor/MailEditor.js\")\n\t\tconst signatureModule = await import(\"../../../mail-app/mail/signature/Signature\")\n\t\tawait this.logins.waitForPartialLogin()\n\t\tconst mailboxDetails = await this.mailboxModel.getUserMailboxDetails()\n\t\tlet editor\n\n\t\ttry {\n\t\t\tif (mailToUrlString) {\n\t\t\t\teditor = await newMailtoUrlMailEditor(mailToUrlString, false, mailboxDetails).catch(ofClass(CancelledError, noOp))\n\t\t\t\tif (!editor) return\n\n\t\t\t\teditor.show()\n\t\t\t} else {\n\t\t\t\tconst fileApp = await this.fileApp()\n\t\t\t\tconst files = await fileApp.getFilesMetaData(filesUris)\n\t\t\t\tconst allFilesAreVCards = files.length > 0 && files.every((file) => getAttachmentType(file.mimeType) === AttachmentType.CONTACT)\n\t\t\t\tconst allFilesAreICS = files.length > 0 && files.every((file) => getAttachmentType(file.mimeType) === AttachmentType.CALENDAR)\n\t\t\t\tconst allFilesAreMail = files.length > 0 && files.every((file) => getAttachmentType(file.mimeType) === AttachmentType.MAIL)\n\n\t\t\t\tif (this.appType === AppType.Calendar) {\n\t\t\t\t\tif (!allFilesAreICS) {\n\t\t\t\t\t\treturn Dialog.message(\"invalidCalendarFile_msg\")\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this.handleFileImport(filesUris)\n\t\t\t\t}\n\n\t\t\t\tlet willImport = false\n\t\t\t\tif (allFilesAreVCards) {\n\t\t\t\t\twillImport = await Dialog.choice(\"vcardInSharingFiles_msg\", [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttext: \"import_action\",\n\t\t\t\t\t\t\tvalue: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{ text: \"attachFiles_action\", value: false },\n\t\t\t\t\t])\n\t\t\t\t} else if (allFilesAreICS) {\n\t\t\t\t\twillImport = await Dialog.choice(\"icsInSharingFiles_msg\", [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttext: \"import_action\",\n\t\t\t\t\t\t\tvalue: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{ text: \"attachFiles_action\", value: false },\n\t\t\t\t\t])\n\t\t\t\t} else if (isDesktop() && allFilesAreMail) {\n\t\t\t\t\t// importing mails is currently only allowed on plan LEGEND and UNLIMITED\n\t\t\t\t\tconst currentPlanType = await locator.logins.getUserController().getPlanType()\n\t\t\t\t\tconst isHighestTierPlan = HighestTierPlans.includes(currentPlanType)\n\n\t\t\t\t\tlet importAction: { text: MaybeTranslation; value: boolean } = {\n\t\t\t\t\t\ttext: \"import_action\",\n\t\t\t\t\t\tvalue: true,\n\t\t\t\t\t}\n\t\t\t\t\tlet attachFilesAction: { text: MaybeTranslation; value: boolean } = {\n\t\t\t\t\t\ttext: \"attachFiles_action\",\n\t\t\t\t\t\tvalue: false,\n\t\t\t\t\t}\n\t\t\t\t\twillImport = isHighestTierPlan && (await Dialog.choice(\"emlOrMboxInSharingFiles_msg\", [importAction, attachFilesAction]))\n\t\t\t\t}\n\n\t\t\t\tif (willImport) {\n\t\t\t\t\tawait this.handleFileImport(filesUris)\n\t\t\t\t} else {\n\t\t\t\t\tconst address = (addresses && addresses[0]) || \"\"\n\t\t\t\t\tconst recipients = address\n\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\tto: [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tname: \"\",\n\t\t\t\t\t\t\t\t\t\taddress: address,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t: {}\n\t\t\t\t\teditor = await newMailEditorFromTemplate(\n\t\t\t\t\t\tmailboxDetails,\n\t\t\t\t\t\trecipients,\n\t\t\t\t\t\tsubject || (files.length > 0 ? files[0].name : \"\"),\n\t\t\t\t\t\tsignatureModule.appendEmailSignature(text || \"\", this.logins.getUserController().props),\n\t\t\t\t\t\tfiles,\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\ttrue, // we want emails created in this method to always default to saving changes\n\t\t\t\t\t)\n\n\t\t\t\t\teditor.show()\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tif (e instanceof UserError) {\n\t\t\t\t// noinspection ES6MissingAwait\n\t\t\t\tDialog.message(lang.makeTranslation(\"error_msg\", e.message))\n\t\t\t}\n\t\t\tthrow e\n\t\t}\n\t}\n\n\tasync invalidateAlarms(): Promise<void> {\n\t\tconst pushService = await this.pushService()\n\t\tawait pushService.reRegister()\n\t}\n\n\tasync showAlertDialog(translationKey: string): Promise<void> {\n\t\tconst { Dialog } = await import(\"../../gui/base/Dialog.js\")\n\t\treturn Dialog.message(translationKey as TranslationKey)\n\t}\n\n\tasync updateTheme(): Promise<void> {\n\t\tawait locator.themeController.reloadTheme()\n\t}\n\n\t/**\n\t * largely modeled after ChangePasswordOkAction, except that we're never changing the password with it and\n\t * don't support bcrypt for this one.\n\t */\n\tasync promptForNewPassword(title: string, oldPassword: string | null): Promise<string> {\n\t\tconst [{ Dialog }, { PasswordForm, PasswordModel }] = await Promise.all([import(\"../../gui/base/Dialog.js\"), import(\"../../settings/PasswordForm.js\")])\n\t\tconst model = new PasswordModel(this.usageTestController, this.logins, {\n\t\t\tcheckOldPassword: false,\n\t\t\tenforceStrength: false,\n\t\t})\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst changePasswordOkAction = async (dialog: Dialog) => {\n\t\t\t\tconst error = model.getErrorMessageId()\n\n\t\t\t\tif (error) {\n\t\t\t\t\tDialog.message(error)\n\t\t\t\t} else {\n\t\t\t\t\tresolve(model.getNewPassword())\n\t\t\t\t\tdialog.close()\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tDialog.showActionDialog({\n\t\t\t\ttitle: lang.makeTranslation(title, title),\n\t\t\t\tchild: () => m(PasswordForm, { model }),\n\t\t\t\tvalidator: () => model.getErrorMessageId(),\n\t\t\t\tokAction: changePasswordOkAction,\n\t\t\t\tcancelAction: () => reject(new CancelledError(\"user cancelled operation\")),\n\t\t\t\tallowCancel: true,\n\t\t\t})\n\t\t})\n\t}\n\n\tasync promptForPassword(title: string): Promise<string> {\n\t\tconst { Dialog } = await import(\"../../gui/base/Dialog.js\")\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst dialog = showRequestPasswordDialog({\n\t\t\t\ttitle: lang.makeTranslation(title, title),\n\t\t\t\taction: async (pw) => {\n\t\t\t\t\tresolve(pw)\n\t\t\t\t\tdialog.close()\n\t\t\t\t\treturn \"\"\n\t\t\t\t},\n\t\t\t\tcancel: {\n\t\t\t\t\ttextId: \"cancel_action\",\n\t\t\t\t\taction: () => reject(new CancelledError(\"user cancelled operation\")),\n\t\t\t\t},\n\t\t\t})\n\t\t})\n\t}\n\n\t/**\n\t * Parse and handle files given a list of files URI.\n\t * @param filesUris List of files URI to be parsed\n\t */\n\tasync handleFileImport(filesUris: ReadonlyArray<string>): Promise<void> {\n\t\t// Since we might be handling calendar files, we must wait for full login\n\t\tawait this.logins.waitForFullLogin()\n\t\tawait this.fileImportHandler(filesUris)\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAoBa,wBAAN,MAA0D;CAChE,YACkBA,QACAC,cACAC,qBACAC,SACAC,aACAC,mBACRC,aACAC,cACQC,SACRC,cACR;EAiNF,KA3NkB;EA2NjB,KA1NiB;EA0NhB,KAzNgB;EAyNf,KAxNe;EAwNd,KAvNc;EAuNb,KAtNa;EAsNZ,KArNI;EAqNH,KApNG;EAoNF,KAnNU;EAmNT,KAlNC;CACN;CAEJ,MAAM,kBAAkBC,WAAkC;AACzD,QAAM,KAAK,OAAO,kBAAkB;EACpC,MAAM,EAAE,eAAe,GAAG,MAAM,OAAO;EACvC,MAAM,mBAAmB,aAAa,SAAS,UAAU;EACzD,MAAM,UAAU,iBAAiB,MAAM,IAAI;AAC3C,MAAI;GACH,MAAM,UAAU,MAAM,QAAQ,aAAa,KAAK,gBAAgB,CAAC,QAAQ,IAAI,QAAQ,EAAG,EAAC;GACzF,MAAM,SAAS,IAAI,cAAc,QAAQ,cAAc;AAEvD,UAAO,OAAO,MAAM;EACpB,SAAQ,KAAK;AACb,WAAQ,MAAM,IAAI;AAClB,UAAO,OAAO,QAAQ,sBAAsB;EAC5C;CACD;;;;;;;;;;;CAYD,MAAM,iBACLC,WACAC,MACAC,WACAC,SACAC,iBACgB;EAChB,MAAM,EAAE,2BAA2B,wBAAwB,GAAG,MAAM,OAAO;EAC3E,MAAM,kBAAkB,MAAM,OAAO;AACrC,QAAM,KAAK,OAAO,qBAAqB;EACvC,MAAM,iBAAiB,MAAM,KAAK,aAAa,uBAAuB;EACtE,IAAI;AAEJ,MAAI;AACH,OAAI,iBAAiB;AACpB,aAAS,MAAM,uBAAuB,iBAAiB,OAAO,eAAe,CAAC,MAAM,QAAQ,gBAAgB,KAAK,CAAC;AAClH,SAAK,OAAQ;AAEb,WAAO,MAAM;GACb,OAAM;IACN,MAAM,UAAU,MAAM,KAAK,SAAS;IACpC,MAAM,QAAQ,MAAM,QAAQ,iBAAiB,UAAU;IACvD,MAAM,oBAAoB,MAAM,SAAS,KAAK,MAAM,MAAM,CAAC,SAAS,kBAAkB,KAAK,SAAS,KAAK,eAAe,QAAQ;IAChI,MAAM,iBAAiB,MAAM,SAAS,KAAK,MAAM,MAAM,CAAC,SAAS,kBAAkB,KAAK,SAAS,KAAK,eAAe,SAAS;IAC9H,MAAM,kBAAkB,MAAM,SAAS,KAAK,MAAM,MAAM,CAAC,SAAS,kBAAkB,KAAK,SAAS,KAAK,eAAe,KAAK;AAE3H,QAAI,KAAK,YAAY,QAAQ,UAAU;AACtC,UAAK,eACJ,QAAO,OAAO,QAAQ,0BAA0B;AAGjD,YAAO,KAAK,iBAAiB,UAAU;IACvC;IAED,IAAI,aAAa;AACjB,QAAI,kBACH,cAAa,MAAM,OAAO,OAAO,2BAA2B,CAC3D;KACC,MAAM;KACN,OAAO;IACP,GACD;KAAE,MAAM;KAAsB,OAAO;IAAO,CAC5C,EAAC;SACQ,eACV,cAAa,MAAM,OAAO,OAAO,yBAAyB,CACzD;KACC,MAAM;KACN,OAAO;IACP,GACD;KAAE,MAAM;KAAsB,OAAO;IAAO,CAC5C,EAAC;SACQ,WAAW,IAAI,iBAAiB;KAE1C,MAAM,kBAAkB,MAAM,QAAQ,OAAO,mBAAmB,CAAC,aAAa;KAC9E,MAAM,oBAAoB,iBAAiB,SAAS,gBAAgB;KAEpE,IAAIC,eAA2D;MAC9D,MAAM;MACN,OAAO;KACP;KACD,IAAIC,oBAAgE;MACnE,MAAM;MACN,OAAO;KACP;AACD,kBAAa,qBAAsB,MAAM,OAAO,OAAO,+BAA+B,CAAC,cAAc,iBAAkB,EAAC;IACxH;AAED,QAAI,WACH,OAAM,KAAK,iBAAiB,UAAU;KAChC;KACN,MAAM,UAAW,aAAa,UAAU,MAAO;KAC/C,MAAM,aAAa,UAChB,EACA,IAAI,CACH;MACC,MAAM;MACG;KACT,CACD,EACA,IACD,CAAE;AACL,cAAS,MAAM,0BACd,gBACA,YACA,YAAY,MAAM,SAAS,IAAI,MAAM,GAAG,OAAO,KAC/C,gBAAgB,qBAAqB,QAAQ,IAAI,KAAK,OAAO,mBAAmB,CAAC,MAAM,EACvF,OACA,WACA,WACA,KACA;AAED,YAAO,MAAM;IACb;GACD;EACD,SAAQ,GAAG;AACX,OAAI,aAAa,UAEhB,QAAO,QAAQ,KAAK,gBAAgB,aAAa,EAAE,QAAQ,CAAC;AAE7D,SAAM;EACN;CACD;CAED,MAAM,mBAAkC;EACvC,MAAM,cAAc,MAAM,KAAK,aAAa;AAC5C,QAAM,YAAY,YAAY;CAC9B;CAED,MAAM,gBAAgBC,gBAAuC;EAC5D,MAAM,EAAE,kBAAQ,GAAG,MAAM,OAAO;AAChC,SAAO,SAAO,QAAQ,eAAiC;CACvD;CAED,MAAM,cAA6B;AAClC,QAAM,QAAQ,gBAAgB,aAAa;CAC3C;;;;;CAMD,MAAM,qBAAqBC,OAAeC,aAA6C;EACtF,MAAM,CAAC,EAAE,kBAAQ,EAAE,EAAE,cAAc,eAAe,CAAC,GAAG,MAAM,QAAQ,IAAI,CAAC,OAAO,yBAA6B,OAAO,6BAAkC,EAAC;EACvJ,MAAM,QAAQ,IAAI,cAAc,KAAK,qBAAqB,KAAK,QAAQ;GACtE,kBAAkB;GAClB,iBAAiB;EACjB;AAED,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;GACvC,MAAM,yBAAyB,OAAOC,WAAmB;IACxD,MAAM,QAAQ,MAAM,mBAAmB;AAEvC,QAAI,MACH,UAAO,QAAQ,MAAM;KACf;AACN,aAAQ,MAAM,gBAAgB,CAAC;AAC/B,YAAO,OAAO;IACd;GACD;AAED,YAAO,iBAAiB;IACvB,OAAO,KAAK,gBAAgB,OAAO,MAAM;IACzC,OAAO,MAAM,gBAAE,cAAc,EAAE,MAAO,EAAC;IACvC,WAAW,MAAM,MAAM,mBAAmB;IAC1C,UAAU;IACV,cAAc,MAAM,OAAO,IAAI,eAAe,4BAA4B;IAC1E,aAAa;GACb,EAAC;EACF;CACD;CAED,MAAM,kBAAkBF,OAAgC;EACvD,MAAM,EAAE,kBAAQ,GAAG,MAAM,OAAO;AAEhC,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;GACvC,MAAM,SAAS,0BAA0B;IACxC,OAAO,KAAK,gBAAgB,OAAO,MAAM;IACzC,QAAQ,OAAO,OAAO;AACrB,aAAQ,GAAG;AACX,YAAO,OAAO;AACd,YAAO;IACP;IACD,QAAQ;KACP,QAAQ;KACR,QAAQ,MAAM,OAAO,IAAI,eAAe,4BAA4B;IACpE;GACD,EAAC;EACF;CACD;;;;;CAMD,MAAM,iBAAiBR,WAAiD;AAEvE,QAAM,KAAK,OAAO,kBAAkB;AACpC,QAAM,KAAK,kBAAkB,UAAU;CACvC;AACD"}