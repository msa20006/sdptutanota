{"version":3,"file":"DesktopIntegratorWin32-BX307Hna.js","names":["electron: Electron","registry: WinregStatic","resolve: (_: boolean) => void","wm: WindowManager"],"sources":["../../src/common/desktop/integration/DesktopIntegratorWin32.ts"],"sourcesContent":["import type { WindowManager } from \"../DesktopWindowManager\"\nimport type { DesktopIntegrator } from \"./DesktopIntegrator\"\nimport { Registry } from \"winreg\"\n\ntype Electron = typeof Electron.CrossProcessExports\n\nexport class DesktopIntegratorWin32 implements DesktopIntegrator {\n\t_electron: Electron\n\t_registry: WinregStatic\n\t_autoRunKey: Registry\n\n\tconstructor(electron: Electron, registry: WinregStatic) {\n\t\tthis._electron = electron\n\t\tthis._registry = registry\n\t\tthis._autoRunKey = new registry({\n\t\t\thive: registry.HKCU,\n\t\t\tkey: \"\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run\",\n\t\t})\n\t}\n\n\tisAutoLaunchEnabled(): Promise<boolean> {\n\t\t// can't promisify here because it screws with autoRunKeys 'this' semantics\n\t\treturn new Promise((resolve: (_: boolean) => void, reject) => {\n\t\t\tthis._autoRunKey.get(this._electron.app.name, (err, item) => {\n\t\t\t\tif (err) {\n\t\t\t\t\treject(err)\n\t\t\t\t} else {\n\t\t\t\t\tresolve(typeof item !== \"undefined\" && item !== null)\n\t\t\t\t}\n\t\t\t})\n\t\t}).catch(() => false)\n\t}\n\n\tasync enableAutoLaunch(): Promise<void> {\n\t\tif (!(await this.isAutoLaunchEnabled())) {\n\t\t\t// can't promisify here because it screws with autoRunKeys 'this' semantics\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tthis._autoRunKey.set(this._electron.app.name, this._registry.REG_SZ, `${process.execPath} -a`, (err) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treject(err)\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve()\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}\n\n\tasync disableAutoLaunch(): Promise<void> {\n\t\t// can't promisify here because it screws with autoRunKeys 'this' semantics\n\t\tif (await this.isAutoLaunchEnabled()) {\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tthis._autoRunKey.remove(this._electron.app.name, (err) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treject(err)\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve()\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}\n\n\trunIntegration(wm: WindowManager): Promise<void> {\n\t\treturn Promise.resolve()\n\t}\n\n\tisIntegrated(): Promise<boolean> {\n\t\treturn Promise.resolve(true)\n\t}\n\n\tintegrate(): Promise<void> {\n\t\treturn Promise.resolve()\n\t}\n\n\tunintegrate(): Promise<void> {\n\t\treturn Promise.resolve()\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAMa,yBAAN,MAA0D;CAChE;CACA;CACA;CAEA,YAAYA,UAAoBC,UAAwB;AACvD,OAAK,YAAY;AACjB,OAAK,YAAY;AACjB,OAAK,cAAc,IAAI,SAAS;GAC/B,MAAM,SAAS;GACf,KAAK;EACL;CACD;CAED,sBAAwC;AAEvC,SAAO,IAAI,QAAQ,CAACC,SAA+B,WAAW;AAC7D,QAAK,YAAY,IAAI,KAAK,UAAU,IAAI,MAAM,CAAC,KAAK,SAAS;AAC5D,QAAI,IACH,QAAO,IAAI;IAEX,gBAAe,SAAS,eAAe,SAAS,KAAK;GAEtD,EAAC;EACF,GAAE,MAAM,MAAM,MAAM;CACrB;CAED,MAAM,mBAAkC;AACvC,OAAM,MAAM,KAAK,qBAAqB,CAErC,QAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACvC,QAAK,YAAY,IAAI,KAAK,UAAU,IAAI,MAAM,KAAK,UAAU,SAAS,EAAE,QAAQ,SAAS,MAAM,CAAC,QAAQ;AACvG,QAAI,IACH,QAAO,IAAI;AAGZ,aAAS;GACT,EAAC;EACF;CAEF;CAED,MAAM,oBAAmC;AAExC,MAAI,MAAM,KAAK,qBAAqB,CACnC,QAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACvC,QAAK,YAAY,OAAO,KAAK,UAAU,IAAI,MAAM,CAAC,QAAQ;AACzD,QAAI,IACH,QAAO,IAAI;AAGZ,aAAS;GACT,EAAC;EACF;CAEF;CAED,eAAeC,IAAkC;AAChD,SAAO,QAAQ,SAAS;CACxB;CAED,eAAiC;AAChC,SAAO,QAAQ,QAAQ,KAAK;CAC5B;CAED,YAA2B;AAC1B,SAAO,QAAQ,SAAS;CACxB;CAED,cAA6B;AAC5B,SAAO,QAAQ,SAAS;CACxB;AACD"}