{"version":3,"file":"ProtocolProxyTest-BTpS7Acq.js","names":["protocol: any","ses: any","path: any","fs: any","path","promises: any","headers: Headers","returnObject: Record<string, OutgoingHttpHeader>","value: OutgoingHttpHeader","key: string","response: globalThis.Response"],"sources":["../tests/desktop/net/ProtocolProxyTest.ts"],"sourcesContent":["import o from \"@tutao/otest\"\nimport path from \"node:path\"\nimport { OutgoingHttpHeader } from \"node:http\"\nimport { func, matchers, object, verify, when } from \"testdouble\"\nimport { doHandleProtocols, handleProtocols } from \"../../../../src/common/desktop/net/ProtocolProxy.js\"\nimport { utf8Uint8ArrayToString } from \"@tutao/tutanota-utils\"\n\no.spec(\"ProtocolProxy\", function () {\n\tlet fetchMock\n\n\to.beforeEach(function () {\n\t\tfetchMock = func()\n\t})\n\n\to(\"will only be intercepted once on a session\", function () {\n\t\tconst protocol: any = object()\n\t\tconst ses: any = { protocol }\n\t\twhen(protocol.isProtocolHandled(\"http\")).thenReturn(true)\n\t\twhen(protocol.isProtocolHandled(\"https\")).thenReturn(true)\n\t\twhen(protocol.isProtocolHandled(\"asset\")).thenReturn(true)\n\t\thandleProtocols(ses, \"none\")\n\t\tverify(protocol.handle(\"https\", matchers.anything()), { times: 0 })\n\t\tverify(protocol.handle(\"http\", matchers.anything()), { times: 0 })\n\t\tverify(protocol.handle(\"asset\", matchers.anything()), { times: 0 })\n\t})\n\n\to(\"protocol will be handled if it wasn't before\", function () {\n\t\tconst protocol: any = object()\n\t\tconst ses: any = { protocol }\n\t\twhen(protocol.isProtocolHandled(\"http\")).thenReturn(false, true)\n\t\twhen(protocol.isProtocolHandled(\"https\")).thenReturn(false, true)\n\t\twhen(protocol.isProtocolHandled(\"asset\")).thenReturn(false, true)\n\t\thandleProtocols(ses, \"none\")\n\t\tverify(protocol.handle(\"http\", matchers.anything()), { times: 1 })\n\t\tverify(protocol.handle(\"https\", matchers.anything()), { times: 1 })\n\t\tverify(protocol.handle(\"asset\", matchers.anything()), { times: 1 })\n\t})\n\n\to.spec(\"OPTIONS gets intercepted\", function () {\n\t\to(\"fetch\", async function () {\n\t\t\tconst protocol: any = object()\n\t\t\tconst ses: any = { protocol }\n\t\t\tconst httpCaptor = matchers.captor()\n\t\t\tconst httpsCaptor = matchers.captor()\n\t\t\twhen(protocol.isProtocolHandled(\"http\")).thenReturn(false, true)\n\t\t\twhen(protocol.isProtocolHandled(\"https\")).thenReturn(false, true)\n\t\t\twhen(protocol.isProtocolHandled(\"asset\")).thenReturn(true)\n\t\t\twhen(protocol.handle(\"http\", httpCaptor.capture())).thenReturn(undefined)\n\t\t\twhen(protocol.handle(\"https\", httpsCaptor.capture())).thenReturn(undefined)\n\t\t\twhen(protocol.handle(\"asset\", matchers.anything())).thenReturn(undefined)\n\t\t\tconst path: any = object()\n\t\t\tconst fs: any = object()\n\t\t\tdoHandleProtocols(ses, \"none\", fetchMock, path, fs)\n\t\t\tconst request = (url) => ({\n\t\t\t\tmethod: \"OPTIONS\",\n\t\t\t\theaders: {},\n\t\t\t\turl,\n\t\t\t})\n\n\t\t\tconst responseHeaders = {\n\t\t\t\t\"access-control-allow-origin\": \"*\",\n\t\t\t\t\"access-control-allow-methods\": \"POST, GET, PUT, DELETE\",\n\t\t\t\t\"access-control-allow-headers\": \"*\",\n\t\t\t}\n\t\t\tconst responseHttp = await httpCaptor.value(request(\"http://no/where\"))\n\t\t\tconst responseHttps = await httpsCaptor.value(request(\"https://no/where\"))\n\t\t\to(responseHttp.status).equals(200)\n\t\t\to(headersToObject(responseHttp.headers)).deepEquals(responseHeaders)\n\t\t\to(responseHttps.status).equals(200)\n\t\t\to(headersToObject(responseHttps.headers)).deepEquals(responseHeaders)\n\t\t})\n\t})\n\n\to.spec(\"methods other than OPTIONS get proxied\", function () {\n\t\to(\"GET http\", async function () {\n\t\t\tconst protocol: any = object()\n\t\t\tconst ses: any = { protocol }\n\t\t\tconst captor = matchers.captor()\n\t\t\twhen(protocol.isProtocolHandled(matchers.anything())).thenReturn(false, true)\n\t\t\twhen(protocol.isProtocolHandled(matchers.anything())).thenReturn(false, true)\n\t\t\twhen(protocol.handle(\"http\", captor.capture())).thenReturn(undefined)\n\t\t\twhen(protocol.handle(\"https\", matchers.anything())).thenReturn(undefined)\n\t\t\twhen(protocol.handle(\"asset\", matchers.anything())).thenReturn(undefined)\n\t\t\tconst request = {\n\t\t\t\tarrayBuffer: () => Promise.resolve(new Uint8Array()),\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: new Headers({\n\t\t\t\t\t\"some-header\": \"header-value\",\n\t\t\t\t}),\n\t\t\t\turl: \"http://no/where\",\n\t\t\t\treferrer: \"\",\n\t\t\t}\n\t\t\tconst path: any = object()\n\t\t\tconst fs: any = object()\n\t\t\tconst responseSymbol = \"abc\"\n\t\t\twhen(fetchMock(\"http://no/where\", matchers.anything())).thenResolve(new Response(\"abc\"))\n\t\t\tdoHandleProtocols(ses, \"none\", fetchMock, path, fs)\n\t\t\tconst responseFromSubject = await captor.value(request)\n\t\t\to(await readResponse(responseFromSubject)).deepEquals(responseSymbol)\n\t\t})\n\t})\n\n\to.spec(\"asset protocol works\", function () {\n\t\tlet protocol: any = object()\n\t\tlet ses: any\n\t\tlet promises: any = object()\n\t\tlet fs: any = { promises }\n\t\to.beforeEach(function () {\n\t\t\twhen(protocol.isProtocolHandled(\"http\")).thenReturn(true)\n\t\t\twhen(protocol.isProtocolHandled(\"https\")).thenReturn(true)\n\t\t\twhen(protocol.isProtocolHandled(\"asset\")).thenReturn(false, true)\n\t\t\tses = { protocol }\n\t\t})\n\n\t\to(\"returns files that can be found\", async function () {\n\t\t\tconst captor = matchers.captor()\n\t\t\twhen(protocol.handle(\"asset\", captor.capture())).thenReturn(undefined)\n\t\t\twhen(fs.promises.readFile(\"/tutanota/assets/noodles.txt\")).thenResolve(\"hello OK\")\n\t\t\tdoHandleProtocols(ses, \"/tutanota/assets\", fetchMock, path, fs)\n\t\t\tconst request = { url: \"asset://app/noodles.txt\" }\n\t\t\tconst responseFromSubject = await captor.value(request)\n\t\t\to(await responseFromSubject.text()).deepEquals(\"hello OK\")\n\t\t})\n\n\t\to(\"normalizes pathname before resolving\", async function () {\n\t\t\tconst captor = matchers.captor()\n\t\t\twhen(protocol.handle(\"asset\", captor.capture())).thenReturn(undefined)\n\t\t\twhen(fs.promises.readFile(\"/tutanota/assets/win32/noodles.exe\")).thenResolve(\"hello OK\")\n\t\t\tdoHandleProtocols(ses, \"/tutanota/assets\", fetchMock, path, fs)\n\t\t\tconst request = { url: \"asset://app/subfolder/../../../win32/noodles.exe\" }\n\t\t\tconst responseFromSubject = await captor.value(request)\n\t\t\to(await responseFromSubject.text()).deepEquals(\"hello OK\")\n\t\t})\n\n\t\to(\"rejects invalid protocol\", async function () {\n\t\t\tconst captor = matchers.captor()\n\t\t\twhen(protocol.handle(\"asset\", captor.capture())).thenReturn(undefined)\n\t\t\tdoHandleProtocols(ses, \"/tutanota/assets\", fetchMock, path, fs)\n\t\t\tconst request = { url: \"basset://app/noodles.txt\" }\n\t\t\tconst responseFromSubject = await captor.value(request)\n\t\t\to(await responseFromSubject.status).deepEquals(404)\n\t\t})\n\n\t\to(\"rejects non-app hostname\", async function () {\n\t\t\tconst captor = matchers.captor()\n\t\t\twhen(protocol.handle(\"asset\", captor.capture())).thenReturn(undefined)\n\t\t\tdoHandleProtocols(ses, \"/tutanota/assets\", fetchMock, path, fs)\n\t\t\tconst request = { url: \"asset://bop/noodles.txt\" }\n\t\t\tconst responseFromSubject = await captor.value(request)\n\t\t\to(await responseFromSubject.status).deepEquals(404)\n\t\t})\n\t})\n})\n\nfunction headersToObject(headers: Headers): Record<string, OutgoingHttpHeader> {\n\tconst returnObject: Record<string, OutgoingHttpHeader> = {}\n\t// headers should be iterable but maybe not in our configuration for some reason\n\t// eslint-disable-next-line unicorn/no-array-for-each\n\theaders.forEach((value: OutgoingHttpHeader, key: string) => {\n\t\treturnObject[key] = value\n\t})\n\treturn returnObject\n}\n\nasync function readResponse(response: globalThis.Response): Promise<string> {\n\tlet result = await response.body!.getReader().read()\n\treturn utf8Uint8ArrayToString(result.value!)\n}\n"],"mappings":"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"}