{"version":3,"file":"ContactListView-A76nls8J.js","names":["vnode: Vnode<ListColumnAttrs>","onSelected: (entity: Contact, selected: boolean) => unknown","shouldShowCheckbox: () => boolean","contact: Contact","selected: boolean","isInMultiSelect: boolean","e: MouseEvent","show: boolean","item: Contact","dom: HTMLElement","onToggleSelection: (item: Contact) => unknown","shouldShowCheckbox: () => boolean","selected: boolean","multiselect: boolean"],"sources":["../../src/common/gui/ListColumnWrapper.ts","../../src/mail-app/contacts/view/ContactRow.ts","../../src/mail-app/contacts/view/ContactListView.ts"],"sourcesContent":["import m, { Children, Component, Vnode } from \"mithril\"\n\nexport type ListColumnAttrs = {\n\theaderContent: Children\n}\n\nexport class ListColumnWrapper implements Component<ListColumnAttrs> {\n\tview(vnode: Vnode<ListColumnAttrs>): Children {\n\t\treturn m(\".flex.flex-column.fill-absolute\", [\n\t\t\tvnode.attrs.headerContent ? m(\".flex.flex-column.justify-center.plr-safe-inset\", vnode.attrs.headerContent) : null,\n\t\t\tm(\".rel.flex-grow\", vnode.children),\n\t\t])\n\t}\n}\n","import { Contact } from \"../../../common/api/entities/tutanota/TypeRefs.js\"\nimport {\n\tcheckboxOpacity,\n\tscaleXHide,\n\tscaleXShow,\n\tselectableRowAnimParams,\n\tSelectableRowContainer,\n\tSelectableRowSelectedSetter,\n} from \"../../../common/gui/SelectableRowContainer.js\"\nimport { getContactListName } from \"../../../common/contactsFunctionality/ContactUtils.js\"\nimport { NBSP, noOp } from \"@tutao/tutanota-utils\"\nimport m, { Children } from \"mithril\"\nimport { px, size } from \"../../../common/gui/size.js\"\nimport { VirtualRow } from \"../../../common/gui/base/ListUtils.js\"\n\nexport const shiftByForCheckbox = px(size.checkbox_size + size.hpad)\nexport const translateXShow = `translateX(${shiftByForCheckbox})`\nexport const translateXHide = \"translateX(0)\"\n\nexport class ContactRow implements VirtualRow<Contact> {\n\ttop: number\n\tdomElement: HTMLElement | null = null // set from List\n\n\tentity: Contact | null\n\tprivate selectionUpdater!: SelectableRowSelectedSetter\n\tprivate domName!: HTMLElement\n\tprivate domAddress!: HTMLElement\n\tprivate checkboxDom!: HTMLInputElement\n\tprivate checkboxWasVisible: boolean\n\n\tconstructor(private readonly onSelected: (entity: Contact, selected: boolean) => unknown, private readonly shouldShowCheckbox: () => boolean) {\n\t\tthis.top = 0\n\t\tthis.entity = null\n\t\tthis.checkboxWasVisible = this.shouldShowCheckbox()\n\t}\n\n\tupdate(contact: Contact, selected: boolean, isInMultiSelect: boolean): void {\n\t\tthis.entity = contact\n\t\tthis.selectionUpdater(selected, isInMultiSelect)\n\t\tthis.showCheckboxAnimated(this.shouldShowCheckbox() || isInMultiSelect)\n\t\tcheckboxOpacity(this.checkboxDom, selected)\n\t\tthis.checkboxDom.checked = selected && isInMultiSelect\n\n\t\tthis.domName.textContent = getContactListName(contact)\n\t\tthis.domAddress.textContent = contact.mailAddresses && contact.mailAddresses.length > 0 ? contact.mailAddresses[0].address : NBSP\n\t}\n\n\t/**\n\t * Only the structure is managed by mithril. We set all contents on our own (see update) in order to avoid the vdom overhead (not negligible on mobiles)\n\t */\n\trender(): Children {\n\t\treturn m(\n\t\t\tSelectableRowContainer,\n\t\t\t{\n\t\t\t\toncreate: (vnode) => {\n\t\t\t\t\tPromise.resolve().then(() => this.showCheckbox(this.shouldShowCheckbox()))\n\t\t\t\t},\n\t\t\t\tonSelectedChangeRef: (updater) => (this.selectionUpdater = updater),\n\t\t\t},\n\t\t\tm(\".mt-xs.abs\", [\n\t\t\t\tm(\"input.checkbox.list-checkbox\", {\n\t\t\t\t\ttype: \"checkbox\",\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\ttransformOrigin: \"left\",\n\t\t\t\t\t},\n\t\t\t\t\tonclick: (e: MouseEvent) => {\n\t\t\t\t\t\te.stopPropagation()\n\t\t\t\t\t\t// e.redraw = false\n\t\t\t\t\t},\n\t\t\t\t\tonchange: () => {\n\t\t\t\t\t\tif (this.entity) this.onSelected(this.entity, this.checkboxDom.checked)\n\t\t\t\t\t},\n\t\t\t\t\toncreate: (vnode) => {\n\t\t\t\t\t\tthis.checkboxDom = vnode.dom as HTMLInputElement\n\t\t\t\t\t\tcheckboxOpacity(this.checkboxDom, false)\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t]),\n\t\t\tm(\".flex.col.overflow-hidden.flex-grow\", [\n\t\t\t\tm(\".text-ellipsis.badge-line-height\", {\n\t\t\t\t\toncreate: (vnode) => (this.domName = vnode.dom as HTMLElement),\n\t\t\t\t}),\n\t\t\t\tm(\".text-ellipsis.smaller.mt-xxs\", {\n\t\t\t\t\toncreate: (vnode) => (this.domAddress = vnode.dom as HTMLElement),\n\t\t\t\t}),\n\t\t\t]),\n\t\t)\n\t}\n\n\tprivate showCheckboxAnimated(show: boolean) {\n\t\tif (this.checkboxWasVisible === show) return\n\t\tif (show) {\n\t\t\tthis.domName.style.paddingRight = shiftByForCheckbox\n\t\t\tthis.domAddress.style.paddingRight = shiftByForCheckbox\n\t\t\tthis.checkboxDom.style.display = \"\"\n\n\t\t\tconst nameAnim = this.domName.animate({ transform: [translateXHide, translateXShow] }, selectableRowAnimParams)\n\t\t\tconst addressAnim = this.domAddress.animate({ transform: [translateXHide, translateXShow] }, selectableRowAnimParams)\n\t\t\tconst checkboxAnim = this.checkboxDom.animate({ transform: [scaleXHide, scaleXShow] }, selectableRowAnimParams)\n\n\t\t\tPromise.all([nameAnim.finished, addressAnim.finished, checkboxAnim.finished]).then(() => {\n\t\t\t\tnameAnim.cancel()\n\t\t\t\taddressAnim.cancel()\n\t\t\t\tcheckboxAnim.cancel()\n\t\t\t\tthis.showCheckbox(show)\n\t\t\t}, noOp)\n\t\t} else {\n\t\t\tthis.domName.style.paddingRight = \"0\"\n\t\t\tthis.domAddress.style.paddingRight = \"0\"\n\n\t\t\tconst nameAnim = this.domName.animate({ transform: [translateXShow, translateXHide] }, selectableRowAnimParams)\n\t\t\tconst addressAnim = this.domAddress.animate({ transform: [translateXShow, translateXHide] }, selectableRowAnimParams)\n\t\t\tconst checkboxAnim = this.checkboxDom.animate({ transform: [scaleXShow, scaleXHide] }, selectableRowAnimParams)\n\n\t\t\tPromise.all([nameAnim.finished, addressAnim.finished, checkboxAnim.finished]).then(() => {\n\t\t\t\tnameAnim.cancel()\n\t\t\t\taddressAnim.cancel()\n\t\t\t\tcheckboxAnim.cancel()\n\t\t\t\tthis.showCheckbox(show)\n\t\t\t}, noOp)\n\t\t}\n\t\tthis.checkboxWasVisible = show\n\t}\n\n\tprivate showCheckbox(show: boolean) {\n\t\tlet translate\n\t\tlet scale\n\t\tlet padding\n\t\tif (show) {\n\t\t\ttranslate = translateXShow\n\t\t\tscale = scaleXShow\n\t\t\tpadding = shiftByForCheckbox\n\t\t} else {\n\t\t\ttranslate = translateXHide\n\t\t\tscale = scaleXHide\n\t\t\tpadding = \"0\"\n\t\t}\n\n\t\tthis.domAddress.style.transform = translate\n\t\tthis.domName.style.transform = translate\n\t\tthis.domAddress.style.paddingRight = padding\n\t\tthis.domName.style.paddingRight = padding\n\t\tthis.checkboxDom.style.transform = scale\n\t\t// Stop the hidden checkbox from entering the tab index\n\t\tthis.checkboxDom.style.display = show ? \"\" : \"none\"\n\t}\n}\n","import m, { Children, ClassComponent, Vnode } from \"mithril\"\nimport type { Contact } from \"../../../common/api/entities/tutanota/TypeRefs.js\"\nimport { size } from \"../../../common/gui/size\"\nimport { ListColumnWrapper } from \"../../../common/gui/ListColumnWrapper\"\nimport { assertMainOrNode } from \"../../../common/api/common/Env\"\nimport { List, ListAttrs, MultiselectMode, RenderConfig, ViewHolder } from \"../../../common/gui/base/List.js\"\nimport { ContactRow } from \"./ContactRow.js\"\nimport { ContactViewModel } from \"./ContactViewModel.js\"\nimport ColumnEmptyMessageBox from \"../../../common/gui/base/ColumnEmptyMessageBox.js\"\nimport { theme } from \"../../../common/gui/theme.js\"\nimport { BootIcons } from \"../../../common/gui/base/icons/BootIcons.js\"\nimport { styles } from \"../../../common/gui/styles.js\"\nimport { shouldAlwaysShowMultiselectCheckbox } from \"../../../common/gui/SelectableRowContainer.js\"\n\nassertMainOrNode()\n\nexport interface ContactListViewAttrs {\n\tonSingleSelection: () => unknown\n\tcontactViewModel: ContactViewModel\n}\n\nexport class ContactListView implements ClassComponent<ContactListViewAttrs> {\n\tprivate contactViewModel: ContactViewModel | null = null\n\n\tview({ attrs: { contactViewModel, onSingleSelection } }: Vnode<ContactListViewAttrs>): Children {\n\t\tthis.contactViewModel = contactViewModel\n\t\treturn m(\n\t\t\tListColumnWrapper,\n\t\t\t{\n\t\t\t\theaderContent: null,\n\t\t\t},\n\t\t\tcontactViewModel.listModel.isEmptyAndDone()\n\t\t\t\t? m(ColumnEmptyMessageBox, {\n\t\t\t\t\t\tcolor: theme.list_message_bg,\n\t\t\t\t\t\tmessage: \"noContacts_msg\",\n\t\t\t\t\t\ticon: BootIcons.Contacts,\n\t\t\t\t  })\n\t\t\t\t: m(List, {\n\t\t\t\t\t\trenderConfig: this.renderConfig,\n\t\t\t\t\t\tstate: contactViewModel.listState(),\n\t\t\t\t\t\t// should not be called anyway\n\t\t\t\t\t\tonLoadMore: () => {},\n\t\t\t\t\t\tonRetryLoading: () => {\n\t\t\t\t\t\t\tcontactViewModel.listModel.retryLoading()\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonSingleSelection: (item: Contact) => {\n\t\t\t\t\t\t\tcontactViewModel.listModel.onSingleSelection(item)\n\t\t\t\t\t\t\tonSingleSelection()\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonSingleTogglingMultiselection: (item: Contact) => {\n\t\t\t\t\t\t\tcontactViewModel.listModel.onSingleInclusiveSelection(item, styles.isSingleColumnLayout())\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonRangeSelectionTowards: (item: Contact) => {\n\t\t\t\t\t\t\tcontactViewModel.listModel.selectRangeTowards(item)\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonStopLoading() {\n\t\t\t\t\t\t\tcontactViewModel.listModel.stopLoading()\n\t\t\t\t\t\t},\n\t\t\t\t  } satisfies ListAttrs<Contact, KindaContactRow>),\n\t\t)\n\t}\n\n\tprivate readonly renderConfig: RenderConfig<Contact, KindaContactRow> = {\n\t\titemHeight: size.list_row_height,\n\t\tmultiselectionAllowed: MultiselectMode.Enabled,\n\t\tswipe: null,\n\t\tcreateElement: (dom) => {\n\t\t\treturn new KindaContactRow(dom, (item) => this.contactViewModel?.listModel.onSingleExclusiveSelection(item))\n\t\t},\n\t}\n}\n\nexport class KindaContactRow implements ViewHolder<Contact> {\n\treadonly cr: ContactRow\n\tdomElement: HTMLElement\n\tentity: Contact | null = null\n\n\tconstructor(\n\t\tdom: HTMLElement,\n\t\tonToggleSelection: (item: Contact) => unknown,\n\t\tshouldShowCheckbox: () => boolean = () => shouldAlwaysShowMultiselectCheckbox(),\n\t) {\n\t\tthis.cr = new ContactRow(onToggleSelection, shouldShowCheckbox)\n\t\tthis.domElement = dom\n\t\tm.render(dom, this.cr.render())\n\t}\n\n\tupdate(item: Contact, selected: boolean, multiselect: boolean) {\n\t\tthis.entity = item\n\t\tthis.cr.update(item, selected, multiselect)\n\t}\n\n\trender(): Children {\n\t\treturn this.cr.render()\n\t}\n}\n"],"mappings":"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"}