{"version":3,"file":"Notifications-DLibQbV7.js","names":["type: NotificationType","title: string","options?: NotificationOptions","onclick: Notification[\"onclick\"]","actualOptions: NotificationOptions","notifications: Notifications"],"sources":["../../src/common/gui/Notifications.ts"],"sourcesContent":["import { noOp } from \"@tutao/tutanota-utils\"\nimport { isApp, isDesktop } from \"../api/common/Env\"\nimport { CalendarNotificationIcon, MailNotificationIcon } from \"./base/icons/Icons.js\"\n\nexport const enum NotificationType {\n\tMail = \"Mail\",\n\tCalendar = \"Calendar\",\n}\n\nexport class Notifications {\n\tshowNotification(type: NotificationType, title: string, options?: NotificationOptions, onclick: Notification[\"onclick\"] = noOp): Notification | null {\n\t\tif (!isApp() && typeof window.Notification !== \"undefined\" && window.Notification.permission === \"granted\") {\n\t\t\ttry {\n\t\t\t\tconst actualOptions: NotificationOptions = Object.assign(\n\t\t\t\t\t{},\n\t\t\t\t\t{\n\t\t\t\t\t\ticon: type == NotificationType.Mail ? MailNotificationIcon : CalendarNotificationIcon,\n\t\t\t\t\t},\n\t\t\t\t\toptions,\n\t\t\t\t)\n\t\t\t\tconst notification = new window.Notification(title, actualOptions)\n\t\t\t\tnotification.onclick = onclick\n\t\t\t\treturn notification\n\t\t\t} catch (e) {\n\t\t\t\t// new Notification() throws an error in new chrome browsers on android devices.\n\t\t\t\t// According to the error message ServiceWorkerRegistration.showNotification() should be used instead.\n\t\t\t\t// This is currently not available on our test devices, so ignore notification errors.\n\t\t\t\t// Setails: http://stackoverflow.com/questions/29774836/failed-to-construct-notification-illegal-constructor\n\t\t\t\tconsole.warn(\"notification error\", e)\n\t\t\t}\n\t\t}\n\n\t\treturn null\n\t}\n\n\t/**\n\t * Requests user permission if notifications are supported\n\t * @returns {Promise<boolean>} resolves to \"true\" if we can send notifications.\n\t */\n\trequestPermission(): void {\n\t\tif (isDesktop() || isApp() || typeof Notification === \"undefined\") {\n\t\t\treturn\n\t\t}\n\n\t\ttry {\n\t\t\tif (window.Notification.permission !== \"denied\") {\n\t\t\t\twindow.Notification.requestPermission()\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.log(\"request notification permission error\", e)\n\t\t}\n\t}\n}\n\nexport const notifications: Notifications = new Notifications()\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAIkB,gDAAX;AACN;AACA;;AACA;IAEY,gBAAN,MAAoB;CAC1B,iBAAiBA,MAAwBC,OAAeC,SAA+BC,UAAmC,MAA2B;AACpJ,OAAK,OAAO,WAAW,OAAO,iBAAiB,eAAe,OAAO,aAAa,eAAe,UAChG,KAAI;GACH,MAAMC,gBAAqC,OAAO,OACjD,CAAE,GACF,EACC,MAAM,QAAQ,iBAAiB,OAAO,uBAAuB,yBAC7D,GACD,QACA;GACD,MAAM,eAAe,IAAI,OAAO,aAAa,OAAO;AACpD,gBAAa,UAAU;AACvB,UAAO;EACP,SAAQ,GAAG;AAKX,WAAQ,KAAK,sBAAsB,EAAE;EACrC;AAGF,SAAO;CACP;;;;;CAMD,oBAA0B;AACzB,MAAI,WAAW,IAAI,OAAO,WAAW,iBAAiB,YACrD;AAGD,MAAI;AACH,OAAI,OAAO,aAAa,eAAe,SACtC,QAAO,aAAa,mBAAmB;EAExC,SAAQ,GAAG;AACX,WAAQ,IAAI,yCAAyC,EAAE;EACvD;CACD;AACD;MAEYC,gBAA+B,IAAI"}