{"version":3,"file":"WhitelabelCustomizations-D1L5qbZi.js","names":["window: Window","whitelabelConfig: WhitelabelConfig"],"sources":["../../src/common/misc/WhitelabelCustomizations.ts"],"sourcesContent":["import type { BaseThemeId, Theme } from \"../gui/theme\"\nimport { assertMainOrNodeBoot } from \"../api/common/Env\"\nimport type { WhitelabelConfig } from \"../api/entities/sys/TypeRefs.js\"\n\nassertMainOrNodeBoot()\nexport type ThemeCustomizations = Partial<Theme> & {\n\tbase: BaseThemeId | null\n}\nexport type ThemeKey = keyof Theme\nexport type CustomizationKey = keyof ThemeCustomizations\n\nexport type WhitelabelCustomizations = {\n\ttheme: ThemeCustomizations | null\n\tgermanLanguageCode: string\n\tregistrationDomains: string[] | null\n\timprintUrl: string | null\n\tprivacyStatementUrl: string | null\n}\n\n/**\n * window.whitelabelCustomizations is defined when the user has logged in via a whitelabel domain. index.js is rewritten to have the definition\n * this happens at WhitelabelResourceRewriter.java\n */\nexport function getWhitelabelCustomizations(window: Window): WhitelabelCustomizations | null {\n\t// @ts-ignore\n\treturn window.whitelabelCustomizations\n}\n\nexport function getThemeCustomizations(whitelabelConfig: WhitelabelConfig): ThemeCustomizations {\n\treturn JSON.parse(whitelabelConfig.jsonTheme, (k, v) => (k === \"__proto__\" ? undefined : v))\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,sBAAsB;AAmBf,SAAS,4BAA4BA,QAAiD;AAE5F,QAAO,OAAO;AACd;AAEM,SAAS,uBAAuBC,kBAAyD;AAC/F,QAAO,KAAK,MAAM,iBAAiB,WAAW,CAAC,GAAG,MAAO,MAAM,cAAc,YAAY,EAAG;AAC5F"}