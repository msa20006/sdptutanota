{"version":3,"file":"DesktopIntegratorDarwin-B8qqgWeW.js","names":["electron: ElectronExports","wm: WindowManager","template: Array<MenuItemConstructorOptions>"],"sources":["../../src/common/desktop/integration/DesktopIntegratorDarwin.ts"],"sourcesContent":["import type { MenuItemConstructorOptions } from \"electron\"\nimport type { WindowManager } from \"../DesktopWindowManager\"\nimport { lang } from \"../../misc/LanguageViewModel\"\nimport type { DesktopIntegrator } from \"./DesktopIntegrator\"\nimport { ElectronExports } from \"../ElectronExportTypes\"\n\nexport class DesktopIntegratorDarwin implements DesktopIntegrator {\n\t_electron: ElectronExports\n\n\tconstructor(electron: ElectronExports) {\n\t\tthis._electron = electron\n\t}\n\n\tisAutoLaunchEnabled(): Promise<boolean> {\n\t\treturn Promise.resolve(this._electron.app.getLoginItemSettings().openAtLogin)\n\t}\n\n\tenableAutoLaunch(): Promise<void> {\n\t\treturn this.isAutoLaunchEnabled().then((enabled) => {\n\t\t\tif (!enabled)\n\t\t\t\tthis._electron.app.setLoginItemSettings({\n\t\t\t\t\topenAtLogin: true,\n\t\t\t\t})\n\t\t})\n\t}\n\n\tdisableAutoLaunch(): Promise<void> {\n\t\treturn this.isAutoLaunchEnabled().then((enabled) => {\n\t\t\tif (enabled)\n\t\t\t\tthis._electron.app.setLoginItemSettings({\n\t\t\t\t\topenAtLogin: false,\n\t\t\t\t})\n\t\t})\n\t}\n\n\trunIntegration(wm: WindowManager): Promise<void> {\n\t\t// We need menu on macOS, otherwise there are no shortcuts defined even for things like copy/paste or hiding window\n\t\t// this needs to be registered here because it's called after the app ready event\n\t\tconst template: Array<MenuItemConstructorOptions> = [\n\t\t\t{\n\t\t\t\t// Skip individual definitions because appMenu can do it automatically\n\t\t\t\trole: \"appMenu\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: \"Edit\",\n\t\t\t\tsubmenu: [\n\t\t\t\t\t{\n\t\t\t\t\t\trole: \"undo\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\trole: \"redo\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: \"separator\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\trole: \"cut\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\trole: \"copy\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\trole: \"paste\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\trole: \"pasteAndMatchStyle\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\trole: \"delete\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\trole: \"selectAll\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: \"separator\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: \"Speech\",\n\t\t\t\t\t\tsubmenu: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\trole: \"startSpeaking\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\trole: \"stopSpeaking\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: \"View\",\n\t\t\t\tsubmenu: [\n\t\t\t\t\t{\n\t\t\t\t\t\trole: \"togglefullscreen\",\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\trole: \"window\",\n\t\t\t\tsubmenu: [\n\t\t\t\t\t{\n\t\t\t\t\t\trole: \"close\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\trole: \"minimize\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\trole: \"zoom\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: \"separator\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\trole: \"front\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\trole: \"zoomIn\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\trole: \"zoomOut\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\trole: \"resetZoom\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tclick: () => {\n\t\t\t\t\t\t\twm.newWindow(true)\n\t\t\t\t\t\t},\n\t\t\t\t\t\tlabel: lang.get(\"openNewWindow_action\"),\n\t\t\t\t\t\taccelerator: \"Command+N\",\n\t\t\t\t\t\tenabled: true,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t]\n\n\t\tconst menu = this._electron.Menu.buildFromTemplate(template)\n\n\t\tthis._electron.Menu.setApplicationMenu(menu)\n\n\t\treturn Promise.resolve()\n\t}\n\n\tisIntegrated(): Promise<boolean> {\n\t\treturn Promise.resolve(true)\n\t}\n\n\tintegrate(): Promise<void> {\n\t\treturn Promise.resolve()\n\t}\n\n\tunintegrate(): Promise<void> {\n\t\treturn Promise.resolve()\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAMa,0BAAN,MAA2D;CACjE;CAEA,YAAYA,UAA2B;AACtC,OAAK,YAAY;CACjB;CAED,sBAAwC;AACvC,SAAO,QAAQ,QAAQ,KAAK,UAAU,IAAI,sBAAsB,CAAC,YAAY;CAC7E;CAED,mBAAkC;AACjC,SAAO,KAAK,qBAAqB,CAAC,KAAK,CAAC,YAAY;AACnD,QAAK,QACJ,MAAK,UAAU,IAAI,qBAAqB,EACvC,aAAa,KACb,EAAC;EACH,EAAC;CACF;CAED,oBAAmC;AAClC,SAAO,KAAK,qBAAqB,CAAC,KAAK,CAAC,YAAY;AACnD,OAAI,QACH,MAAK,UAAU,IAAI,qBAAqB,EACvC,aAAa,MACb,EAAC;EACH,EAAC;CACF;CAED,eAAeC,IAAkC;EAGhD,MAAMC,WAA8C;GACnD,EAEC,MAAM,UACN;GACD;IACC,OAAO;IACP,SAAS;KACR,EACC,MAAM,OACN;KACD,EACC,MAAM,OACN;KACD,EACC,MAAM,YACN;KACD,EACC,MAAM,MACN;KACD,EACC,MAAM,OACN;KACD,EACC,MAAM,QACN;KACD,EACC,MAAM,qBACN;KACD,EACC,MAAM,SACN;KACD,EACC,MAAM,YACN;KACD,EACC,MAAM,YACN;KACD;MACC,OAAO;MACP,SAAS,CACR,EACC,MAAM,gBACN,GACD,EACC,MAAM,eACN,CACD;KACD;IACD;GACD;GACD;IACC,OAAO;IACP,SAAS,CACR,EACC,MAAM,mBACN,CACD;GACD;GACD;IACC,MAAM;IACN,SAAS;KACR,EACC,MAAM,QACN;KACD,EACC,MAAM,WACN;KACD,EACC,MAAM,OACN;KACD,EACC,MAAM,YACN;KACD,EACC,MAAM,QACN;KACD,EACC,MAAM,SACN;KACD,EACC,MAAM,UACN;KACD,EACC,MAAM,YACN;KACD;MACC,OAAO,MAAM;AACZ,UAAG,UAAU,KAAK;MAClB;MACD,OAAO,KAAK,IAAI,uBAAuB;MACvC,aAAa;MACb,SAAS;KACT;IACD;GACD;EACD;EAED,MAAM,OAAO,KAAK,UAAU,KAAK,kBAAkB,SAAS;AAE5D,OAAK,UAAU,KAAK,mBAAmB,KAAK;AAE5C,SAAO,QAAQ,SAAS;CACxB;CAED,eAAiC;AAChC,SAAO,QAAQ,QAAQ,KAAK;CAC5B;CAED,YAA2B;AAC1B,SAAO,QAAQ,SAAS;CACxB;CAED,cAA6B;AAC5B,SAAO,QAAQ,SAAS;CACxB;AACD"}