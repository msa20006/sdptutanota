{"version":3,"file":"CommonMailUtils-DNufl6ib.js","names":["mail: Mail","body: Body"],"sources":["../../src/common/api/common/CommonMailUtils.ts"],"sourcesContent":["import type { FolderSystem } from \"./mail/FolderSystem.js\"\nimport { Body, Mail, MailFolder } from \"../entities/tutanota/TypeRefs.js\"\nimport { MailSetKind } from \"./TutanotaConstants.js\"\n\nexport function isSubfolderOfType(system: FolderSystem, folder: MailFolder, type: MailSetKind): boolean {\n\tconst systemFolder = system.getSystemFolderByType(type)\n\treturn systemFolder != null && system.checkFolderForAncestor(folder, systemFolder._id)\n}\n\n/**\n * Returns true if given folder is the {@link MailSetKind.SPAM} or {@link MailSetKind.TRASH} folder, or a descendant of those folders.\n */\nexport function isSpamOrTrashFolder(system: FolderSystem, folder: MailFolder): boolean {\n\t// not using isOfTypeOrSubfolderOf because checking the type first is cheaper\n\treturn (\n\t\tfolder.folderType === MailSetKind.TRASH ||\n\t\tfolder.folderType === MailSetKind.SPAM ||\n\t\tisSubfolderOfType(system, folder, MailSetKind.TRASH) ||\n\t\tisSubfolderOfType(system, folder, MailSetKind.SPAM)\n\t)\n}\n\nexport function isDraft(mail: Mail): boolean {\n\treturn mail.mailDetailsDraft != null\n}\n\nexport interface MailAddressAndName {\n\tname: string\n\taddress: string\n}\n\nexport function getDisplayedSender(mail: Mail): MailAddressAndName {\n\tconst realSender = mail.sender\n\treturn { address: realSender.address, name: realSender.name }\n}\n\nexport function getMailBodyText(body: Body): string {\n\treturn body.compressedText ?? body.text ?? \"\"\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BO,SAAS,mBAAmBA,MAAgC;CAClE,MAAM,aAAa,KAAK;AACxB,QAAO;EAAE,SAAS,WAAW;EAAS,MAAM,WAAW;CAAM;AAC7D;AAEM,SAAS,gBAAgBC,MAAoB;AACnD,QAAO,KAAK,kBAAkB,KAAK,QAAQ;AAC3C"}