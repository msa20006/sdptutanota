{"version":3,"file":"ParserCombinator-D38ofgFx.js","names":["message: string","filename?: string","combineParsers: (<A, B>(arg0: Parser<A>, arg1: Parser<B>) => Parser<[A, B]>) &\n\t(<A, B, C>(arg0: Parser<A>, arg1: Parser<B>, arg2: Parser<C>) => Parser<[A, B, C]>) &\n\t(<A, B, C, D>(arg0: Parser<A>, arg1: Parser<B>, arg2: Parser<C>, arg3: Parser<D>) => Parser<[A, B, C, D]>) &\n\t(<A, B, C, D, E>(arg0: Parser<A>, arg1: Parser<B>, arg2: Parser<C>, arg3: Parser<D>, arg4: Parser<E>) => Parser<[A, B, C, D, E]>)","iterator: StringIterator","character: string","anotherParser: Parser<T>","result: T[]","parser: Parser<T>","mapper: (arg0: T) => R","value: Array<T>","separatorParser: Parser<S>","valueParser: Parser<T>","parserA: Parser<A>","parserB: Parser<B>","allowed: Array<string>","notAllowed: Array<string>","numberParser: Parser<number>","iteratee: string","done: boolean","contextCentre: number","contextRadius: number"],"sources":["../../src/common/misc/parsing/ParserCombinator.ts"],"sourcesContent":["// @bundleInto:common-min\n\nimport { downcast } from \"@tutao/tutanota-utils\"\nimport { TutanotaError } from \"@tutao/tutanota-error\"\n\nexport type Parser<T> = (arg0: StringIterator) => T\n\nexport class ParserError extends TutanotaError {\n\tfilename: string | null\n\n\tconstructor(message: string, filename?: string) {\n\t\tsuper(\"ParserError\", message)\n\t\tthis.filename = filename ?? null\n\t}\n}\n\nexport const combineParsers: (<A, B>(arg0: Parser<A>, arg1: Parser<B>) => Parser<[A, B]>) &\n\t(<A, B, C>(arg0: Parser<A>, arg1: Parser<B>, arg2: Parser<C>) => Parser<[A, B, C]>) &\n\t(<A, B, C, D>(arg0: Parser<A>, arg1: Parser<B>, arg2: Parser<C>, arg3: Parser<D>) => Parser<[A, B, C, D]>) &\n\t(<A, B, C, D, E>(arg0: Parser<A>, arg1: Parser<B>, arg2: Parser<C>, arg3: Parser<D>, arg4: Parser<E>) => Parser<[A, B, C, D, E]>) = downcast(\n\t(...parsers: any[]) =>\n\t\t(iterator: StringIterator) =>\n\t\t\tparsers.map((p) => p(iterator)),\n)\n\nexport function makeCharacterParser(character: string): Parser<string> {\n\treturn (iterator: StringIterator) => {\n\t\tlet value = iterator.peek()\n\n\t\tif (value === character) {\n\t\t\titerator.next()\n\t\t\treturn value\n\t\t}\n\n\t\tconst sliceStart = Math.max(iterator.position - 10, 0)\n\t\tconst sliceEnd = Math.min(iterator.position + 10, iterator.iteratee.length - 1)\n\t\tthrow new ParserError(`expected character \"${character}\" got \"${value}\" near ${iterator.iteratee.slice(sliceStart, sliceEnd)}`)\n\t}\n}\n\nexport function makeNotCharacterParser(character: string): Parser<string> {\n\treturn (iterator: StringIterator) => {\n\t\tlet value = iterator.peek()\n\n\t\tif (value && value !== character) {\n\t\t\titerator.next()\n\t\t\treturn value\n\t\t}\n\n\t\tconst sliceStart = Math.max(iterator.position - 10, 0)\n\t\tconst sliceEnd = Math.min(iterator.position + 10, iterator.iteratee.length - 1)\n\t\tthrow new ParserError(`expected character \"${character}\" got \"${value}\" near ${iterator.iteratee.slice(sliceStart, sliceEnd)}`)\n\t}\n}\n\nexport function makeZeroOrMoreParser<T>(anotherParser: Parser<T>): Parser<Array<T>> {\n\treturn (iterator: StringIterator) => {\n\t\tconst result: T[] = []\n\n\t\ttry {\n\t\t\tlet parseResult = anotherParser(iterator)\n\n\t\t\twhile (true) {\n\t\t\t\tresult.push(parseResult)\n\t\t\t\tparseResult = anotherParser(iterator)\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t/* empty */\n\t\t}\n\n\t\treturn result\n\t}\n}\n\nexport function mapParser<T, R>(parser: Parser<T>, mapper: (arg0: T) => R): Parser<R> {\n\treturn (iterator: StringIterator) => {\n\t\treturn mapper(parser(iterator))\n\t}\n}\n\nexport function makeOneOrMoreParser<T>(parser: Parser<T>): Parser<Array<T>> {\n\treturn mapParser(makeZeroOrMoreParser(parser), (value: Array<T>) => {\n\t\tif (value.length === 0) {\n\t\t\tthrow new ParserError(\"Expected at least one value, got none\")\n\t\t}\n\n\t\treturn value\n\t})\n}\n\nexport function maybeParse<T>(parser: Parser<T>): Parser<T | null> {\n\treturn (iterator) => {\n\t\tconst iteratorPosition = iterator.position\n\n\t\ttry {\n\t\t\treturn parser(iterator)\n\t\t} catch (e) {\n\t\t\tif (e instanceof ParserError) {\n\t\t\t\titerator.position = iteratorPosition\n\t\t\t}\n\t\t\treturn null\n\t\t}\n\t}\n}\n\nexport function makeSeparatedByParser<S, T>(separatorParser: Parser<S>, valueParser: Parser<T>): Parser<Array<T>> {\n\treturn (iterator) => {\n\t\tconst result: T[] = []\n\t\tresult.push(valueParser(iterator))\n\n\t\twhile (true) {\n\t\t\ttry {\n\t\t\t\tseparatorParser(iterator)\n\t\t\t} catch (e) {\n\t\t\t\tbreak\n\t\t\t}\n\n\t\t\tresult.push(valueParser(iterator))\n\t\t}\n\n\t\treturn result\n\t}\n}\n\nexport function makeEitherParser<A, B>(parserA: Parser<A>, parserB: Parser<B>): Parser<A | B> {\n\treturn (iterator) => {\n\t\tconst iteratorPosition = iterator.position\n\n\t\ttry {\n\t\t\treturn parserA(iterator)\n\t\t} catch (e) {\n\t\t\tif (e instanceof ParserError) {\n\t\t\t\titerator.position = iteratorPosition\n\t\t\t\treturn parserB(iterator)\n\t\t\t}\n\n\t\t\tthrow e\n\t\t}\n\t}\n}\n\nexport function makeOneOfCharactersParser(allowed: Array<string>): Parser<string> {\n\treturn (iterator: StringIterator) => {\n\t\tconst value = iterator.peek()\n\n\t\tif (value && allowed.includes(value)) {\n\t\t\titerator.next()\n\t\t\treturn value\n\t\t}\n\n\t\tthrow new ParserError(`Expected one of ${allowed.map((c) => `\"${c}\"`).join(\", \")}, but got \"${value}\\n${context(iterator, iterator.position, 10)}\"`)\n\t}\n}\n\nexport function makeNotOneOfCharactersParser(notAllowed: Array<string>): Parser<string> {\n\treturn (iterator: StringIterator) => {\n\t\tconst value = iterator.peek()\n\n\t\tif (typeof value !== \"string\") {\n\t\t\tthrow new ParserError(\"unexpected end of input\")\n\t\t}\n\n\t\tif (!notAllowed.includes(value)) {\n\t\t\titerator.next()\n\t\t\treturn value\n\t\t}\n\n\t\tthrow new ParserError(`Expected none of ${notAllowed.map((c) => `\"${c}\"`).join(\", \")}, but got \"${value}\"\\n${context(iterator, iterator.position, 10)}`)\n\t}\n}\n\nexport const numberParser: Parser<number> = mapParser(\n\tmakeOneOrMoreParser(makeOneOfCharactersParser([\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"])),\n\t(values) => parseInt(values.join(\"\"), 10),\n)\n\nexport class StringIterator {\n\titeratee: string\n\tposition: number = -1\n\n\tconstructor(iteratee: string) {\n\t\tthis.iteratee = iteratee\n\t}\n\n\tnext(): IteratorResult<string> {\n\t\tconst value = this.iteratee[++this.position]\n\t\tconst done: boolean = this.position >= this.iteratee.length\n\t\treturn done\n\t\t\t? {\n\t\t\t\t\tdone: true,\n\t\t\t\t\tvalue: undefined,\n\t\t\t  }\n\t\t\t: {\n\t\t\t\t\tdone: false,\n\t\t\t\t\tvalue,\n\t\t\t  }\n\t}\n\n\tpeek(): string | null {\n\t\treturn this.iteratee[this.position + 1] ?? null\n\t}\n}\n\nfunction context(iterator: StringIterator, contextCentre: number, contextRadius: number = 10): string {\n\tconst sliceStart = Math.max(contextCentre - contextRadius, 0)\n\tconst sliceEnd = Math.min(contextCentre + contextRadius, iterator.iteratee.length - 1)\n\tconst sliceLength = sliceEnd - sliceStart\n\tconst actualPosition = contextCentre - (2 * contextRadius - sliceLength)\n\treturn iterator.iteratee.slice(sliceStart, sliceEnd)\n}\n"],"mappings":"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"}