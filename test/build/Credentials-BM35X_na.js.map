{"version":3,"file":"Credentials-BM35X_na.js","names":["credentials: Credentials","databaseKey: Uint8Array | null","unencryptedCredentials: UnencryptedCredentials"],"sources":["../../src/common/misc/credentials/Credentials.ts"],"sourcesContent":["import { Base64, Base64Url } from \"@tutao/tutanota-utils\"\nimport { CredentialType } from \"./CredentialType.js\"\nimport { UnencryptedCredentials } from \"../../native/common/generatedipc/UnencryptedCredentials.js\"\nimport { ProgrammingError } from \"../../api/common/error/ProgrammingError.js\"\n\n/** Data obtained after logging in. */\nexport interface Credentials {\n\t/**\n\t * Identifier which we use for logging in.\n\t * Email address used to log in for internal users, userId for external users.\n\t * */\n\tlogin: string\n\n\t/** Session#accessKey encrypted password. Is set when session is persisted. */\n\tencryptedPassword: Base64 | null\n\tencryptedPassphraseKey: Uint8Array | null\n\taccessToken: Base64Url\n\tuserId: Id\n\ttype: CredentialType\n}\n\nexport function credentialsToUnencrypted(credentials: Credentials, databaseKey: Uint8Array | null): UnencryptedCredentials {\n\tif (credentials.encryptedPassword == null) {\n\t\tthrow new ProgrammingError(\"Credentials->UnencryptedCredentials encryptedPassword and encryptedPassphraseKey are both null!\")\n\t}\n\n\treturn {\n\t\tcredentialInfo: {\n\t\t\tlogin: credentials.login,\n\t\t\ttype: credentials.type,\n\t\t\tuserId: credentials.userId,\n\t\t},\n\t\tencryptedPassword: credentials.encryptedPassword,\n\t\tencryptedPassphraseKey: credentials.encryptedPassphraseKey,\n\t\taccessToken: credentials.accessToken,\n\t\tdatabaseKey: databaseKey,\n\t}\n}\n\nexport function unencryptedToCredentials(unencryptedCredentials: UnencryptedCredentials): Credentials {\n\treturn {\n\t\tlogin: unencryptedCredentials.credentialInfo.login,\n\t\tuserId: unencryptedCredentials.credentialInfo.userId,\n\t\ttype: unencryptedCredentials.credentialInfo.type,\n\t\taccessToken: unencryptedCredentials.accessToken,\n\t\tencryptedPassword: unencryptedCredentials.encryptedPassword,\n\t\tencryptedPassphraseKey: unencryptedCredentials.encryptedPassphraseKey,\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqBO,SAAS,yBAAyBA,aAA0BC,aAAwD;AAC1H,KAAI,YAAY,qBAAqB,KACpC,OAAM,IAAI,iBAAiB;AAG5B,QAAO;EACN,gBAAgB;GACf,OAAO,YAAY;GACnB,MAAM,YAAY;GAClB,QAAQ,YAAY;EACpB;EACD,mBAAmB,YAAY;EAC/B,wBAAwB,YAAY;EACpC,aAAa,YAAY;EACZ;CACb;AACD;AAEM,SAAS,yBAAyBC,wBAA6D;AACrG,QAAO;EACN,OAAO,uBAAuB,eAAe;EAC7C,QAAQ,uBAAuB,eAAe;EAC9C,MAAM,uBAAuB,eAAe;EAC5C,aAAa,uBAAuB;EACpC,mBAAmB,uBAAuB;EAC1C,wBAAwB,uBAAuB;CAC/C;AACD"}