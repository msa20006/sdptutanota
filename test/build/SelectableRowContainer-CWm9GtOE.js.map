{"version":3,"file":"SelectableRowContainer-CWm9GtOE.js","names":["color: string","dom: HTMLInputElement","selected: boolean","selectableRowAnimParams: KeyframeAnimationOptions"],"sources":["../../src/common/gui/SelectableRowContainer.ts"],"sourcesContent":["import m, { ClassComponent, Vnode } from \"mithril\"\nimport { stateBgActive, stateBgHover } from \"./builtinThemes.js\"\nimport { theme } from \"./theme.js\"\nimport { styles } from \"./styles.js\"\nimport { px, size } from \"./size.js\"\nimport { DefaultAnimationTime } from \"./animation/Animations.js\"\nimport { currentNavigationType, PrimaryNavigationType } from \"../../RootView.js\"\n\n/** A function that can adjust the style of the selectable row. */\nexport type SelectableRowSelectedSetter = (selected: boolean, isInMultiselect: boolean) => unknown\n\nexport interface SelectableRowContainerAttrs {\n\t/** This function will be called with a setter for the row style once it's available. */\n\tonSelectedChangeRef?: (changer: SelectableRowSelectedSetter) => unknown\n}\n\nexport class SelectableRowContainer implements ClassComponent<SelectableRowContainerAttrs> {\n\tprivate dom: HTMLElement | null = null\n\tprivate selected: boolean = false\n\tprivate isInMultiselect: boolean = false\n\n\tview({ attrs, children }: Vnode<SelectableRowContainerAttrs>) {\n\t\treturn m(\n\t\t\t\".flex.mb-xs.border-radius.pt-m.pb-m.pl.pr.ml-s\",\n\t\t\t{\n\t\t\t\tstyle: {\n\t\t\t\t\tpaddingTop: \"14px\",\n\t\t\t\t\tpaddingBottom: \"12px\",\n\t\t\t\t\t// this is an adjustment to keep tha columns aligned, space between columns is too big otherwise.\n\t\t\t\t\t// this is an obscure place to put it and ideally should not be done here or should be passed down here.\n\t\t\t\t\tmarginRight: styles.isSingleColumnLayout() ? px(size.hpad_small) : \"0\",\n\t\t\t\t\ttransition: `background 200ms`,\n\t\t\t\t},\n\t\t\t\toncreate: ({ dom }) => {\n\t\t\t\t\tthis.dom = dom as HTMLElement\n\t\t\t\t\tthis.updateDomBg()\n\t\t\t\t\tattrs.onSelectedChangeRef?.((selected, isInMultiselect) => {\n\t\t\t\t\t\tthis.selected = selected\n\t\t\t\t\t\tthis.isInMultiselect = isInMultiselect\n\t\t\t\t\t\tthis.updateDomBg()\n\t\t\t\t\t})\n\t\t\t\t},\n\t\t\t\t// Highlight the row when it is tabbed into\n\t\t\t\tonfocus: () => {\n\t\t\t\t\tif (SelectableRowContainer.isUsingKeyboard()) {\n\t\t\t\t\t\tthis.setBackground(stateBgActive)\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tonblur: () => {\n\t\t\t\t\tif (SelectableRowContainer.isUsingKeyboard()) {\n\t\t\t\t\t\tif (this.selected && !styles.isSingleColumnLayout()) {\n\t\t\t\t\t\t\tthis.setBackground(stateBgHover)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.setBackground(theme.list_bg)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tonpointerdown: () => this.setBackground(stateBgActive),\n\t\t\t\tonpointerup: this.updateDomBg,\n\t\t\t\tonpointercancel: this.updateDomBg,\n\t\t\t\tonpointerleave: this.updateDomBg,\n\t\t\t},\n\t\t\tchildren,\n\t\t)\n\t}\n\n\tprivate setBackground(color: string) {\n\t\tif (this.dom) this.dom.style.backgroundColor = color\n\t}\n\n\tprivate static isUsingKeyboard() {\n\t\treturn currentNavigationType === PrimaryNavigationType.Keyboard\n\t}\n\n\tprivate updateDomBg = () => {\n\t\tconst isUsingKeyboard = SelectableRowContainer.isUsingKeyboard()\n\t\t// In the single column view, a row may be 'selected' by the URL still linking to a specific mail\n\t\t// So do not highlight in that case but in just multiselect mode and keyboard navigation\n\t\tconst highlight = styles.isSingleColumnLayout() ? (this.isInMultiselect || isUsingKeyboard) && this.selected : this.selected\n\t\tthis.setBackground(highlight ? stateBgHover : theme.list_bg)\n\t}\n}\n\nexport function setVisibility(dom: HTMLElement, visible: boolean) {\n\tdom.style.display = visible ? \"\" : \"none\"\n}\n\nexport function checkboxOpacity(dom: HTMLInputElement, selected: boolean) {\n\tif (selected) {\n\t\tdom.classList.remove(\"list-checkbox\")\n\t} else {\n\t\tdom.classList.add(\"list-checkbox\")\n\t}\n}\n\nexport function shouldAlwaysShowMultiselectCheckbox() {\n\treturn !styles.isUsingBottomNavigation()\n}\n\n// delay by 2 frames roughly so that the browser has time to do heavy stuff with layout\nexport const selectableRowAnimParams: KeyframeAnimationOptions = { duration: DefaultAnimationTime, easing: \"ease-in-out\", fill: \"forwards\", delay: 36 }\nexport const scaleXHide = \"scaleX(0)\"\nexport const scaleXShow = \"scaleX(1)\"\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAgBa,yBAAN,MAAM,uBAA8E;CAC1F,AAAQ,MAA0B;CAClC,AAAQ,WAAoB;CAC5B,AAAQ,kBAA2B;CAEnC,KAAK,EAAE,OAAO,UAA8C,EAAE;AAC7D,SAAO,gBACN,kDACA;GACC,OAAO;IACN,YAAY;IACZ,eAAe;IAGf,aAAa,OAAO,sBAAsB,GAAG,GAAG,KAAK,WAAW,GAAG;IACnE,aAAa;GACb;GACD,UAAU,CAAC,EAAE,KAAK,KAAK;AACtB,SAAK,MAAM;AACX,SAAK,aAAa;AAClB,UAAM,sBAAsB,CAAC,UAAU,oBAAoB;AAC1D,UAAK,WAAW;AAChB,UAAK,kBAAkB;AACvB,UAAK,aAAa;IAClB,EAAC;GACF;GAED,SAAS,MAAM;AACd,QAAI,uBAAuB,iBAAiB,CAC3C,MAAK,cAAc,cAAc;GAElC;GACD,QAAQ,MAAM;AACb,QAAI,uBAAuB,iBAAiB,CAC3C,KAAI,KAAK,aAAa,OAAO,sBAAsB,CAClD,MAAK,cAAc,aAAa;IAEhC,MAAK,cAAc,MAAM,QAAQ;GAGnC;GACD,eAAe,MAAM,KAAK,cAAc,cAAc;GACtD,aAAa,KAAK;GAClB,iBAAiB,KAAK;GACtB,gBAAgB,KAAK;EACrB,GACD,SACA;CACD;CAED,AAAQ,cAAcA,OAAe;AACpC,MAAI,KAAK,IAAK,MAAK,IAAI,MAAM,kBAAkB;CAC/C;CAED,OAAe,kBAAkB;AAChC,SAAO,0BAA0B,sBAAsB;CACvD;CAED,AAAQ,cAAc,MAAM;EAC3B,MAAM,kBAAkB,uBAAuB,iBAAiB;EAGhE,MAAM,YAAY,OAAO,sBAAsB,IAAI,KAAK,mBAAmB,oBAAoB,KAAK,WAAW,KAAK;AACpH,OAAK,cAAc,YAAY,eAAe,MAAM,QAAQ;CAC5D;AACD;AAMM,SAAS,gBAAgBC,KAAuBC,UAAmB;AACzE,KAAI,SACH,KAAI,UAAU,OAAO,gBAAgB;IAErC,KAAI,UAAU,IAAI,gBAAgB;AAEnC;AAEM,SAAS,sCAAsC;AACrD,SAAQ,OAAO,yBAAyB;AACxC;MAGYC,0BAAoD;CAAE,UAAU;CAAsB,QAAQ;CAAe,MAAM;CAAY,OAAO;AAAI;MAC1I,aAAa;MACb,aAAa"}