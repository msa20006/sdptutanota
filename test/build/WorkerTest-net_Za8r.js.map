{"version":3,"file":"WorkerTest-net_Za8r.js","names":["worker: WorkerClient"],"sources":["../tests/api/main/WorkerTest.ts"],"sourcesContent":["import o from \"@tutao/otest\"\nimport type { WorkerClient } from \"../../../../src/common/api/main/WorkerClient.js\"\nimport { NotAuthenticatedError } from \"../../../../src/common/api/common/error/RestError.js\"\nimport { Request } from \"../../../../src/common/api/common/threading/MessageDispatcher.js\"\nimport { ProgrammingError } from \"../../../../src/common/api/common/error/ProgrammingError.js\"\nimport { initCommonLocator, locator } from \"../../../../src/common/api/main/CommonLocator.js\"\nimport { assertThrows } from \"@tutao/tutanota-test-utils\"\nimport { SessionType } from \"../../../../src/common/api/common/SessionType.js\"\nimport { CryptoError } from \"@tutao/tutanota-crypto/error.js\"\nimport { mailLocator } from \"../../../../src/mail-app/mailLocator.js\"\n\no.spec(\n\t\"WorkerTest request / response\",\n\tnode(function () {\n\t\tlet worker: WorkerClient\n\t\to.before(async function () {\n\t\t\tawait mailLocator.init()\n\t\t\tinitCommonLocator(mailLocator)\n\n\t\t\tworker = locator.worker\n\t\t\tawait worker.initialized\n\t\t})\n\t\to(\"echo\", async function () {\n\t\t\tconst response = await worker._postRequest(\n\t\t\t\tnew Request(\"testEcho\", [\n\t\t\t\t\t{\n\t\t\t\t\t\tmsg: \"huhu\",\n\t\t\t\t\t},\n\t\t\t\t]),\n\t\t\t)\n\t\t\to(response.msg).equals(\">>> huhu\")\n\t\t})\n\t\to(\"login\", async function () {\n\t\t\to.timeout(5000)\n\t\t\tawait locator.logins.createSession(\"map-free@tutanota.de\", \"map\", SessionType.Login)\n\t\t})\n\t\to(\"programming error handling\", async function () {\n\t\t\to.timeout(2000)\n\t\t\tconst e = await assertThrows(ProgrammingError, () =>\n\t\t\t\tworker._postRequest(\n\t\t\t\t\tnew Request(\"testError\", [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\terrorType: \"ProgrammingError\",\n\t\t\t\t\t\t},\n\t\t\t\t\t]),\n\t\t\t\t),\n\t\t\t)\n\t\t\to(e?.name).equals(\"ProgrammingError\")\n\t\t\to(e?.message).equals(\"wtf: ProgrammingError\")\n\t\t})\n\t\to(\"crypto error handling\", async function () {\n\t\t\to.timeout(2000)\n\t\t\tconst e = await assertThrows(CryptoError, () =>\n\t\t\t\tworker._postRequest(\n\t\t\t\t\tnew Request(\"testError\", [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\terrorType: \"CryptoError\",\n\t\t\t\t\t\t},\n\t\t\t\t\t]),\n\t\t\t\t),\n\t\t\t)\n\t\t\to(e?.name).equals(\"CryptoError\")\n\t\t\to(e?.message).equals(\"wtf: CryptoError\")\n\t\t})\n\t\to(\"rest error handling\", async function () {\n\t\t\to.timeout(2000)\n\t\t\tconst e = await assertThrows(NotAuthenticatedError, () =>\n\t\t\t\tworker._postRequest(\n\t\t\t\t\tnew Request(\"testError\", [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\terrorType: \"NotAuthenticatedError\",\n\t\t\t\t\t\t},\n\t\t\t\t\t]),\n\t\t\t\t),\n\t\t\t)\n\t\t\to(e?.name).equals(\"NotAuthenticatedError\")\n\t\t\to(e?.message).equals(\"wtf: NotAuthenticatedError\")\n\t\t})\n\t}),\n)\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAWA,aAAE,KACD,iCACA,KAAK,WAAY;CAChB,IAAIA;AACJ,cAAE,OAAO,iBAAkB;AAC1B,QAAM,YAAY,MAAM;AACxB,oBAAkB,YAAY;AAE9B,WAAS,QAAQ;AACjB,QAAM,OAAO;CACb,EAAC;AACF,cAAE,QAAQ,iBAAkB;EAC3B,MAAM,WAAW,MAAM,OAAO,aAC7B,IAAI,QAAQ,YAAY,CACvB,EACC,KAAK,OACL,CACD,GACD;AACD,eAAE,SAAS,IAAI,CAAC,OAAO,WAAW;CAClC,EAAC;AACF,cAAE,SAAS,iBAAkB;AAC5B,eAAE,QAAQ,IAAK;AACf,QAAM,QAAQ,OAAO,cAAc,wBAAwB,OAAO,YAAY,MAAM;CACpF,EAAC;AACF,cAAE,8BAA8B,iBAAkB;AACjD,eAAE,QAAQ,IAAK;EACf,MAAM,IAAI,MAAM,aAAa,kBAAkB,MAC9C,OAAO,aACN,IAAI,QAAQ,aAAa,CACxB,EACC,WAAW,mBACX,CACD,GACD,CACD;AACD,eAAE,GAAG,KAAK,CAAC,OAAO,mBAAmB;AACrC,eAAE,GAAG,QAAQ,CAAC,OAAO,wBAAwB;CAC7C,EAAC;AACF,cAAE,yBAAyB,iBAAkB;AAC5C,eAAE,QAAQ,IAAK;EACf,MAAM,IAAI,MAAM,aAAa,aAAa,MACzC,OAAO,aACN,IAAI,QAAQ,aAAa,CACxB,EACC,WAAW,cACX,CACD,GACD,CACD;AACD,eAAE,GAAG,KAAK,CAAC,OAAO,cAAc;AAChC,eAAE,GAAG,QAAQ,CAAC,OAAO,mBAAmB;CACxC,EAAC;AACF,cAAE,uBAAuB,iBAAkB;AAC1C,eAAE,QAAQ,IAAK;EACf,MAAM,IAAI,MAAM,aAAa,uBAAuB,MACnD,OAAO,aACN,IAAI,QAAQ,aAAa,CACxB,EACC,WAAW,wBACX,CACD,GACD,CACD;AACD,eAAE,GAAG,KAAK,CAAC,OAAO,wBAAwB;AAC1C,eAAE,GAAG,QAAQ,CAAC,OAAO,6BAA6B;CAClD,EAAC;AACF,EAAC,CACF"}