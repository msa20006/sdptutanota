{"version":3,"file":"UserUtils-C4O25CeW.js","names":["user: User"],"sources":["../../src/common/api/common/utils/UserUtils.ts"],"sourcesContent":["import { AccountType, GroupType } from \"../TutanotaConstants.js\"\nimport { User } from \"../../entities/sys/TypeRefs.js\"\n\n/**\n * Checks if the current user is an admin of the customer.\n * @return True if the user is an admin\n */\nexport function isGlobalAdmin(user: User): boolean {\n\tif (isInternalUser(user)) {\n\t\treturn user.memberships.some((m) => m.groupType === GroupType.Admin)\n\t} else {\n\t\treturn false\n\t}\n}\n\n/**\n * Provides the information if an internal user is logged in.\n * @return True if an internal user is logged in, false if no user or an external user is logged in.\n */\nexport function isInternalUser(user: User): boolean {\n\treturn user.accountType !== AccountType.EXTERNAL\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOO,SAAS,cAAcA,MAAqB;AAClD,KAAI,eAAe,KAAK,CACvB,QAAO,KAAK,YAAY,KAAK,CAAC,MAAM,EAAE,cAAc,UAAU,MAAM;IAEpE,QAAO;AAER;AAMM,SAAS,eAAeA,MAAqB;AACnD,QAAO,KAAK,gBAAgB,YAAY;AACxC"}