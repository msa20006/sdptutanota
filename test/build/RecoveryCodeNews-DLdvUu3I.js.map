{"version":3,"file":"RecoveryCodeNews-DLdvUu3I.js","names":["newsModel: NewsModel","userController: UserController","recoverCodeFacade: RecoverCodeFacade","newsId: NewsId","m","recoveryCode: string"],"sources":["../../src/common/misc/news/items/RecoveryCodeNews.ts"],"sourcesContent":["import { NewsListItem } from \"../NewsListItem.js\"\nimport m, { Children } from \"mithril\"\nimport { NewsId } from \"../../../api/entities/tutanota/TypeRefs.js\"\nimport { lang } from \"../../LanguageViewModel.js\"\nimport { Button, ButtonType } from \"../../../gui/base/Button.js\"\nimport { NewsModel } from \"../NewsModel.js\"\nimport { Dialog, DialogType } from \"../../../gui/base/Dialog.js\"\nimport { AccessBlockedError, NotAuthenticatedError } from \"../../../api/common/error/RestError.js\"\nimport { daysToMillis, LazyLoaded, noOp, ofClass } from \"@tutao/tutanota-utils\"\nimport { copyToClipboard } from \"../../ClipboardUtils.js\"\nimport { UserController } from \"../../../api/main/UserController.js\"\nimport { progressIcon } from \"../../../gui/base/Icon.js\"\nimport { UserManagementFacade } from \"../../../api/worker/facades/lazy/UserManagementFacade.js\"\nimport { isApp } from \"../../../api/common/Env.js\"\nimport { showRequestPasswordDialog } from \"../../passwords/PasswordRequestDialog.js\"\nimport { RecoverCodeFacade } from \"../../../api/worker/facades/lazy/RecoverCodeFacade.js\"\n\n/**\n * News item that informs admin users about their recovery code.\n */\nexport class RecoveryCodeNews implements NewsListItem {\n\tprivate recoveryCode: string | null = null\n\tprivate readonly recoverCodeField = new LazyLoaded(async () => {\n\t\tconst { RecoverCodeField } = await import(\"../../../settings/login/RecoverCodeDialog.js\")\n\t\tm.redraw()\n\t\treturn RecoverCodeField\n\t})\n\n\tconstructor(\n\t\tprivate readonly newsModel: NewsModel,\n\t\tprivate readonly userController: UserController,\n\t\tprivate readonly recoverCodeFacade: RecoverCodeFacade,\n\t) {}\n\n\tisShown(newsId: NewsId): Promise<boolean> {\n\t\tconst customerCreationTime = this.userController.userGroupInfo.created.getTime()\n\t\treturn Promise.resolve(this.userController.isGlobalAdmin() && Date.now() - customerCreationTime > daysToMillis(14))\n\t}\n\n\trender(newsId: NewsId): Children {\n\t\tconst recoveryCode = this.recoveryCode\n\t\t// toggle the load if it's not started yet\n\t\tthis.recoverCodeField.getAsync()\n\n\t\t// Will (always) be null on the first call of render() since getAsync() was just called for the first time.\n\t\t// When the redraw is triggered in the load function, it will be populated and rendered correctly.\n\t\tconst RecoverCodeField = this.recoverCodeField.getSync()\n\n\t\treturn m(\".full-width\", [\n\t\t\tm(\n\t\t\t\t\".h4\",\n\t\t\t\t{\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\"text-transform\": \"capitalize\",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tlang.get(\"recoveryCode_label\"),\n\t\t\t),\n\t\t\tm(\"\", lang.get(\"recoveryCodeReminder_msg\")),\n\t\t\trecoveryCode\n\t\t\t\t? RecoverCodeField\n\t\t\t\t\t? m(RecoverCodeField, {\n\t\t\t\t\t\t\tshowMessage: false,\n\t\t\t\t\t\t\trecoverCode: recoveryCode as string,\n\t\t\t\t\t\t\tshowButtons: false,\n\t\t\t\t\t  })\n\t\t\t\t\t: m(\".flex.justify-center\", progressIcon())\n\t\t\t\t: null,\n\t\t\tm(\".flex-end.flex-no-grow-no-shrink-auto.flex-wrap\", [\n\t\t\t\trecoveryCode\n\t\t\t\t\t? [this.renderCopyButton(recoveryCode), this.renderPrintButton(), this.confirmButton(newsId)]\n\t\t\t\t\t: [this.renderDoneButton(newsId), this.renderDisplayButton()],\n\t\t\t]),\n\t\t])\n\t}\n\n\tprivate renderDoneButton(newsId: NewsId) {\n\t\treturn m(Button, {\n\t\t\tlabel: \"done_action\",\n\t\t\ttype: ButtonType.Secondary,\n\t\t\tclick: () =>\n\t\t\t\tDialog.showActionDialog({\n\t\t\t\t\ttype: DialogType.EditSmall,\n\t\t\t\t\tokAction: async (dialog) => {\n\t\t\t\t\t\tdialog.close()\n\t\t\t\t\t\tthis.newsModel.acknowledgeNews(newsId.newsItemId).then(m.redraw)\n\t\t\t\t\t},\n\t\t\t\t\ttitle: \"recoveryCode_label\",\n\t\t\t\t\tallowCancel: true,\n\t\t\t\t\tchild: () => m(\"p\", lang.get(\"recoveryCodeConfirmation_msg\")),\n\t\t\t\t}),\n\t\t})\n\t}\n\n\tprivate renderPrintButton(): Children {\n\t\tif (isApp() || typeof window.print !== \"function\") {\n\t\t\treturn null\n\t\t}\n\n\t\treturn m(Button, {\n\t\t\tlabel: \"print_action\",\n\t\t\ttype: ButtonType.Secondary,\n\t\t\tclick: () => {\n\t\t\t\twindow.print()\n\t\t\t},\n\t\t})\n\t}\n\n\tprivate renderCopyButton(recoveryCode: string): Children {\n\t\treturn m(Button, {\n\t\t\tlabel: \"copy_action\",\n\t\t\ttype: ButtonType.Secondary,\n\t\t\tclick: () => {\n\t\t\t\tcopyToClipboard(recoveryCode)\n\t\t\t},\n\t\t})\n\t}\n\n\tprivate renderDisplayButton(): Children {\n\t\treturn m(Button, {\n\t\t\tlabel: \"recoveryCodeDisplay_action\",\n\t\t\tclick: async () => {\n\t\t\t\tthis.getRecoverCodeDialogAfterPasswordVerification(this.userController)\n\t\t\t},\n\t\t\ttype: ButtonType.Primary,\n\t\t})\n\t}\n\n\tprivate confirmButton(newsId: NewsId): Children {\n\t\treturn m(Button, {\n\t\t\tlabel: \"paymentDataValidation_action\",\n\t\t\tclick: async () => {\n\t\t\t\tawait this.newsModel.acknowledgeNews(newsId.newsItemId)\n\t\t\t\tm.redraw()\n\t\t\t},\n\t\t\ttype: ButtonType.Primary,\n\t\t})\n\t}\n\n\tprivate getRecoverCodeDialogAfterPasswordVerification(userController: UserController) {\n\t\tconst dialog = showRequestPasswordDialog({\n\t\t\taction: (pw) => {\n\t\t\t\tconst hasRecoveryCode = !!userController.user.auth?.recoverCode\n\n\t\t\t\treturn (hasRecoveryCode ? this.recoverCodeFacade.getRecoverCodeHex(pw) : this.recoverCodeFacade.createRecoveryCode(pw))\n\t\t\t\t\t.then((recoverCode) => {\n\t\t\t\t\t\tdialog.close()\n\t\t\t\t\t\tthis.recoveryCode = recoverCode\n\t\t\t\t\t\treturn \"\"\n\t\t\t\t\t})\n\t\t\t\t\t.catch(ofClass(NotAuthenticatedError, () => lang.get(\"invalidPassword_msg\")))\n\t\t\t\t\t.catch(ofClass(AccessBlockedError, () => lang.get(\"tooManyAttempts_msg\")))\n\t\t\t\t\t.finally(m.redraw)\n\t\t\t},\n\t\t\tcancel: {\n\t\t\t\ttextId: \"cancel_action\",\n\t\t\t\taction: noOp,\n\t\t\t},\n\t\t})\n\t}\n}\n"],"mappings":"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"}