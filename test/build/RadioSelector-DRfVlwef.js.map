{"version":3,"file":"RadioSelector-DRfVlwef.js","names":["groupName: MaybeTranslation","option: RadioSelectorOption<T>","selectedOption: T","optionClass: string | undefined","onOptionSelected: (arg0: T) => unknown"],"sources":["../../src/common/gui/base/RadioSelector.ts"],"sourcesContent":["import type { MaybeTranslation } from \"../../misc/LanguageViewModel\"\nimport { lang } from \"../../misc/LanguageViewModel\"\nimport m, { Children, Component, Vnode } from \"mithril\"\nimport { theme } from \"../theme\"\n\nexport type RadioSelectorOption<T> = {\n\treadonly name: MaybeTranslation\n\treadonly value: T\n}\nexport type RadioSelectorAttrs<T> = {\n\t// The unique name of the radio button group. The browser uses it to group the radio buttons together.\n\tname: MaybeTranslation\n\toptions: ReadonlyArray<RadioSelectorOption<T>>\n\tclass?: string\n\tselectedOption: T\n\tonOptionSelected: (arg0: T) => unknown\n}\n\n/**\n * Component which shows selection for a single choice.\n */\nexport class RadioSelector<T> implements Component<RadioSelectorAttrs<T>> {\n\tview({ attrs }: Vnode<RadioSelectorAttrs<T>>): Children {\n\t\treturn attrs.options.map((option) => this.renderOption(attrs.name, option, attrs.selectedOption, attrs.class, attrs.onOptionSelected))\n\t}\n\n\tprivate renderOption(\n\t\tgroupName: MaybeTranslation,\n\t\toption: RadioSelectorOption<T>,\n\t\tselectedOption: T,\n\t\toptionClass: string | undefined,\n\t\tonOptionSelected: (arg0: T) => unknown,\n\t): Children {\n\t\tconst name = lang.getTranslationText(groupName)\n\t\tconst valueString = String(option.value)\n\t\tconst isSelected = option.value === selectedOption\n\n\t\t// IDs used to link the label and description for accessibility\n\t\tconst optionId = name + valueString\n\n\t\tconst attrClasses = optionClass != null ? \" \" + optionClass : \"\"\n\n\t\t// The wrapper is needed because <input> is self-closing and will not take the label as a child\n\t\treturn m(\n\t\t\t\".state-bg.border.border-radius.flex.items-center.mb.pl-l.pr\",\n\t\t\t{\n\t\t\t\t// Make the option the same size as a button if a description is not given\n\t\t\t\tclass: \"button-min-width button-min-height\" + attrClasses,\n\t\t\t\tstyle: {\n\t\t\t\t\tborderColor: isSelected ? theme.content_accent : theme.content_border,\n\t\t\t\t\tborderWidth: \"2px\",\n\t\t\t\t\theight: \"fit-content\",\n\t\t\t\t},\n\t\t\t\tonclick: () => {\n\t\t\t\t\tonOptionSelected(option.value)\n\t\t\t\t},\n\t\t\t},\n\t\t\t[\n\t\t\t\tm(\"input[type=radio].m-0.mr-button.content-accent-accent\", {\n\t\t\t\t\t/* The `name` attribute defines the group the radio button belongs to. Not the name/label of the radio button itself.\n\t\t\t\t\t * See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/radio#defining_a_radio_group\n\t\t\t\t\t */\n\t\t\t\t\tname: lang.getTranslationText(groupName),\n\t\t\t\t\tvalue: valueString,\n\t\t\t\t\tid: optionId,\n\t\t\t\t\t// Handle changes in value from the attributes\n\t\t\t\t\tchecked: isSelected ? true : null,\n\t\t\t\t}),\n\t\t\t\tm(\"label.b.left.pt-xs.pb-xs\", { for: optionId }, lang.getTranslationText(option.name)),\n\t\t\t],\n\t\t)\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAqBa,gBAAN,MAAmE;CACzE,KAAK,EAAE,OAAqC,EAAY;AACvD,SAAO,MAAM,QAAQ,IAAI,CAAC,WAAW,KAAK,aAAa,MAAM,MAAM,QAAQ,MAAM,gBAAgB,MAAM,OAAO,MAAM,iBAAiB,CAAC;CACtI;CAED,AAAQ,aACPA,WACAC,QACAC,gBACAC,aACAC,kBACW;EACX,MAAM,OAAO,KAAK,mBAAmB,UAAU;EAC/C,MAAM,cAAc,OAAO,OAAO,MAAM;EACxC,MAAM,aAAa,OAAO,UAAU;EAGpC,MAAM,WAAW,OAAO;EAExB,MAAM,cAAc,eAAe,OAAO,MAAM,cAAc;AAG9D,SAAO,gBACN,+DACA;GAEC,OAAO,uCAAuC;GAC9C,OAAO;IACN,aAAa,aAAa,MAAM,iBAAiB,MAAM;IACvD,aAAa;IACb,QAAQ;GACR;GACD,SAAS,MAAM;AACd,qBAAiB,OAAO,MAAM;GAC9B;EACD,GACD,CACC,gBAAE,yDAAyD;GAI1D,MAAM,KAAK,mBAAmB,UAAU;GACxC,OAAO;GACP,IAAI;GAEJ,SAAS,aAAa,OAAO;EAC7B,EAAC,EACF,gBAAE,4BAA4B,EAAE,KAAK,SAAU,GAAE,KAAK,mBAAmB,OAAO,KAAK,CAAC,AACtF,EACD;CACD;AACD"}