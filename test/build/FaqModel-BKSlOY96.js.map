{"version":3,"file":"FaqModel-BKSlOY96.js","names":["websiteBaseUrl: string","query: string","searchableList: readonly SearchableFaqEntry[]","markedResults: ReadonlyArray<SearchableFaqEntry>","result: SearchableFaqEntry","langCode: string","translations: Record<string, string>","titleKey: string","name: string","id: string","faq: FaqModel"],"sources":["../../src/common/support/FaqModel.ts"],"sourcesContent":["import type { LanguageViewModelType } from \"../misc/LanguageViewModel\"\nimport { lang, LanguageViewModel } from \"../misc/LanguageViewModel\"\nimport { delay, downcast, LazyLoaded } from \"@tutao/tutanota-utils\"\nimport { search } from \"../api/common/utils/PlainTextSearch\"\nimport { ProgrammingError } from \"../api/common/error/ProgrammingError.js\"\nimport { htmlSanitizer } from \"../misc/HtmlSanitizer.js\"\n\nexport type FaqEntry = {\n\tid: string\n\ttitle: string\n\ttext: string\n\ttags: string[]\n}\n\ntype SearchableFaqEntry = Omit<FaqEntry, \"tags\"> & { tags: string }\n\ntype Translation = {\n\tcode: string\n\tkeys: Record<string, string>\n}\nconst FAQ_PREFIX = \"faq.\"\nconst MARKDOWN_SUFFIX = \"_markdown\"\n\n/**\n * Loads FAQ entries from tuta.com for different languages and allows searching\n *\n * NOTE: it's only exported for testing!\n */\nexport class FaqModel {\n\tprivate list: Array<FaqEntry> | null = null\n\tprivate currentLanguageCode: string | null = null\n\tprivate faqLanguages: LanguageViewModelType | null = null\n\tprivate lazyLoaded: LazyLoaded<void>\n\tprivate websiteBaseUrl: string = \"https://tuta.com\"\n\n\tprivate get faqLang(): LanguageViewModel {\n\t\tif (this.faqLanguages == null) {\n\t\t\tthrow new ProgrammingError(\"faq not initialized!\")\n\t\t}\n\t\treturn this.faqLanguages\n\t}\n\n\tconstructor() {\n\t\tthis.lazyLoaded = new LazyLoaded(() => {\n\t\t\treturn Promise.all([this.fetchFAQ(\"en\"), this.fetchFAQ(lang.code)]).then(([defaultTranslations, currentLanguageTranslations]) => {\n\t\t\t\tif (defaultTranslations != null || currentLanguageTranslations != null) {\n\t\t\t\t\tconst faqLanguageViewModel = new LanguageViewModel()\n\t\t\t\t\tfaqLanguageViewModel.initWithTranslations(lang.code, lang.languageTag, defaultTranslations, currentLanguageTranslations)\n\t\t\t\t\tthis.faqLanguages = faqLanguageViewModel\n\t\t\t\t}\n\t\t\t})\n\t\t})\n\t}\n\n\tasync init(websiteBaseUrl: string): Promise<void> {\n\t\t//resetting the lazy reload whenever the language preference change to clear caching.\n\t\tif (this.currentLanguageCode !== lang.code) {\n\t\t\tthis.lazyLoaded.reset()\n\t\t}\n\t\tthis.websiteBaseUrl = websiteBaseUrl\n\t\tawait this.lazyLoaded.getAsync()\n\t\tthis.getList()\n\t}\n\n\t/**\n\t * will return an AsyncGenerator yielding faq entries that contain the given query and mark the query occurrences\n\t * with <mark> tags. it is safe to insert the results of this call into the DOM.\n\t *\n\t */\n\tasync *search(query: string): AsyncGenerator<FaqEntry> {\n\t\tconst cleanQuery = query.trim()\n\n\t\tif (cleanQuery === \"\") {\n\t\t\treturn []\n\t\t} else {\n\t\t\tconst searchableList: readonly SearchableFaqEntry[] = this.getList().map((item) => {\n\t\t\t\treturn {\n\t\t\t\t\t...item,\n\t\t\t\t\t// join tags to search with plaintext search\n\t\t\t\t\ttags: item.tags.join(\", \"),\n\t\t\t\t}\n\t\t\t})\n\t\t\t// we could probably convert this to an AsyncGenerator to spread the load of searching the entries as well, but it's pretty snappy atm.\n\t\t\tconst markedResults: ReadonlyArray<SearchableFaqEntry> = search(cleanQuery, searchableList, [\"tags\", \"title\", \"text\"], true)\n\t\t\tfor (const result of markedResults) {\n\t\t\t\t// this delay is needed to make the next iteration be scheduled on the next macro task.\n\t\t\t\t// just yielding/awaiting creates a micro task that doesn't let the event loop run.\n\t\t\t\tawait delay(1)\n\t\t\t\tyield this.sanitizeEntry(result)\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate sanitizeEntry(result: SearchableFaqEntry): FaqEntry {\n\t\treturn {\n\t\t\tid: result.id,\n\t\t\ttitle: htmlSanitizer.sanitizeHTML(result.title).html,\n\t\t\ttags: result.tags.split(\", \").map((tag) => htmlSanitizer.sanitizeHTML(tag).html),\n\t\t\ttext: htmlSanitizer.sanitizeHTML(result.text, { blockExternalContent: false }).html,\n\t\t}\n\t}\n\n\t/**\n\t * fetch the entries for the given lang code from the web site\n\t */\n\tprivate async fetchFAQ(langCode: string): Promise<Translation> {\n\t\tconst faqPath = `${this.websiteBaseUrl}/faq-entries/${langCode}.json`\n\t\tconst translations: Record<string, string> = await fetch(faqPath)\n\t\t\t.then((response) => response.json())\n\t\t\t.then((language) => language.keys)\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.log(\"Failed to fetch FAQ entries\", error)\n\t\t\t\treturn {}\n\t\t\t})\n\n\t\treturn {\n\t\t\tcode: langCode,\n\t\t\tkeys: translations,\n\t\t}\n\t}\n\n\t/**\n\t * return the current faqEntry list if it fits the current language code\n\t * otherwise, recreate the list for current lang and then return it\n\t */\n\tprivate getList(): Array<FaqEntry> {\n\t\tif (this.list == null && this.faqLanguages == null) {\n\t\t\treturn []\n\t\t}\n\n\t\tif (this.list == null || this.currentLanguageCode !== lang.code) {\n\t\t\tthis.currentLanguageCode = lang.code\n\t\t\tconst faqNames = Object.keys(this.faqLang.fallback.keys)\n\t\t\tthis.list = faqNames\n\t\t\t\t.filter((key) => key.startsWith(FAQ_PREFIX) && key.endsWith(MARKDOWN_SUFFIX))\n\t\t\t\t.map((titleKey: string) => titleKey.substring(FAQ_PREFIX.length, titleKey.indexOf(MARKDOWN_SUFFIX)))\n\t\t\t\t.map((name: string) => this.createFAQ(name))\n\t\t}\n\n\t\treturn this.list\n\t}\n\n\t/**\n\t * convert the raw translations for an id to a structured FaqEntry\n\t */\n\tprivate createFAQ(id: string): FaqEntry {\n\t\treturn {\n\t\t\tid: id,\n\t\t\ttitle: this.faqLang.get(downcast(`faq.${id}_title`)),\n\t\t\ttext: this.faqLang.get(downcast(`faq.${id}_markdown`)),\n\t\t\ttags: this.getTags(`faq.${id}_tags`).split(\", \"),\n\t\t}\n\t}\n\n\tprivate getTags(id: string): string {\n\t\ttry {\n\t\t\treturn this.faqLang.get(downcast(id))\n\t\t} catch (e) {\n\t\t\treturn \"\"\n\t\t}\n\t}\n}\n\nexport const faq: FaqModel = new FaqModel()\n"],"mappings":"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"}