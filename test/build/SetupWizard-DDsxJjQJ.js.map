{"version":3,"file":"SetupWizard-DDsxJjQJ.js","names":["showDialogs: boolean","isGranted: boolean","permissionData: NotificationPermissionsData","visiblityStream: Stream<boolean>","systemPermissionHandler: SystemPermissionHandler","data: NotificationPermissionsData","showDialogs: boolean","showDialogs: boolean","attrs: SetupContactsPageAttrs","syncManager: NativeContactsSyncManager","contactImporter: ContactImporter","mobileSystemFacade: MobileSystemFacade","allowContactSyncAndImport: boolean","showDialogs: boolean","mode: AppLockMethod","attrs: SelectAppLockMethodDialogAttrs","name: TranslationKey","value: AppLockMethod","onclick: () => unknown","mobileSystemFacade: MobileSystemFacade","showDialogs: boolean","systemPermissionHandler: SystemPermissionHandler","webMobileFacade: WebMobileFacade","contactImporter: ContactImporter | null","systemFacade: MobileSystemFacade","credentialsProvider: CredentialsProvider","contactSyncManager: NativeContactsSyncManager | null","deviceConfig: DeviceConfig","allowContactSyncAndImport: boolean","wizardPages: WizardPageWrapper<any>[]"],"sources":["../../src/common/native/main/wizard/setupwizardpages/SetupPageLayout.ts","../../src/common/native/main/wizard/setupwizardpages/SetupCongraulationsPage.ts","../../src/common/native/main/wizard/setupwizardpages/SetupNotificationsPage.ts","../../src/common/native/main/wizard/setupwizardpages/SetupThemePage.ts","../../src/common/native/main/wizard/setupwizardpages/SetupContactsPage.ts","../../src/common/native/main/SelectAppLockMethodDialog.ts","../../src/common/native/main/wizard/setupwizardpages/SetupLockPage.ts","../../src/common/native/main/wizard/SetupWizard.ts"],"sourcesContent":["import { emitWizardEvent, WizardEventType } from \"../../../../gui/base/WizardDialog.js\"\nimport m, { Children, Component, Vnode } from \"mithril\"\nimport { LoginButton } from \"../../../../gui/base/buttons/LoginButton.js\"\nimport { TranslationKey } from \"../../../../misc/LanguageViewModel.js\"\n\ninterface SetupPageLayoutAttrs {\n\timage: string\n\tclass?: string\n\tbuttonLabel?: TranslationKey\n}\n\nexport class SetupPageLayout implements Component<SetupPageLayoutAttrs> {\n\tview({ attrs, children }: Vnode<SetupPageLayoutAttrs>): Children {\n\t\treturn m(\"section.center.flex.flex-column.dialog-height-small.mt\", [\n\t\t\tm(\"img.onboarding-logo.center-h\", {\n\t\t\t\tsrc: `${window.tutao.appState.prefixWithoutFile}/images/onboarding-wizard/${attrs.image}.svg`,\n\t\t\t\talt: \"\",\n\t\t\t\trel: \"noreferrer\",\n\t\t\t\tloading: \"lazy\",\n\t\t\t\tdecoding: \"async\",\n\t\t\t\tclass: attrs.class,\n\t\t\t}),\n\t\t\tchildren,\n\t\t\tm(LoginButton, {\n\t\t\t\tlabel: attrs.buttonLabel ?? \"next_action\",\n\t\t\t\tclass: \"wizard-next-button\",\n\t\t\t\tonclick: (_, dom) => {\n\t\t\t\t\temitWizardEvent(dom, WizardEventType.SHOW_NEXT_PAGE)\n\t\t\t\t},\n\t\t\t}),\n\t\t])\n\t}\n}\n","import m, { Children } from \"mithril\"\nimport { WizardPageAttrs, WizardPageN } from \"../../../../gui/base/WizardDialog.js\"\nimport { lang, type TranslationKey } from \"../../../../misc/LanguageViewModel.js\"\nimport { SetupPageLayout } from \"./SetupPageLayout.js\"\n\nexport class SetupCongratulationsPage implements WizardPageN<null> {\n\tview(): Children {\n\t\treturn m(SetupPageLayout, { image: \"congratulations\", class: \"onboarding-logo-large\" }, [\n\t\t\tm(\"h2.mt-l.b\", lang.get(\"welcome_text\")),\n\t\t\tm(\"p.mt-s.full-width\", lang.get(\"onboarding_text\")),\n\t\t])\n\t}\n}\n\nexport class SetupCongratulationsPageAttrs implements WizardPageAttrs<null> {\n\tpreventGoBack = true\n\thidePagingButtonForPage = false\n\tdata: null = null\n\n\theaderTitle(): TranslationKey {\n\t\treturn \"welcome_label\"\n\t}\n\n\tnextAction(showDialogs: boolean): Promise<boolean> {\n\t\t// next action not available for this page\n\t\treturn Promise.resolve(true)\n\t}\n\n\tisSkipAvailable(): boolean {\n\t\treturn false\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn true\n\t}\n}\n","import m, { Children, Component, Vnode } from \"mithril\"\nimport { WizardPageAttrs } from \"../../../../gui/base/WizardDialog.js\"\nimport { PermissionType } from \"../../../common/generatedipc/PermissionType.js\"\nimport { isAndroidApp } from \"../../../../api/common/Env.js\"\nimport { lang, type TranslationKey } from \"../../../../misc/LanguageViewModel.js\"\nimport Stream from \"mithril/stream\"\nimport { SetupPageLayout } from \"./SetupPageLayout.js\"\nimport { SystemPermissionHandler } from \"../../SystemPermissionHandler.js\"\nimport { NotificationPermissionsBody } from \"../../../../settings/NotificationPermissionsDialog.js\"\n\nexport interface NotificationPermissionsData {\n\tisNotificationPermissionGranted: boolean\n\tisBatteryPermissionGranted: boolean\n}\n\nexport class SetupNotificationsPage implements Component<SetupNotificationsPageAttrs> {\n\tview({ attrs }: Vnode<SetupNotificationsPageAttrs>): Children {\n\t\treturn m(\n\t\t\tSetupPageLayout,\n\t\t\t{ image: \"notifications\" },\n\t\t\tm(NotificationPermissionsBody, {\n\t\t\t\tisNotificationPermissionGranted: attrs.data.isNotificationPermissionGranted,\n\t\t\t\tisBatteryPermissionGranted: attrs.data.isBatteryPermissionGranted,\n\t\t\t\taskForNotificationPermission: (isGranted: boolean) => attrs.setIsNotificationPermissionGranted(isGranted),\n\t\t\t\taskForBatteryNotificationPermission: (isGranted) => attrs.setIsBatteryNotificationPermissionGranted(isGranted),\n\t\t\t}),\n\t\t)\n\t}\n}\n\nexport class SetupNotificationsPageAttrs implements WizardPageAttrs<NotificationPermissionsData> {\n\thidePagingButtonForPage = false\n\tdata: NotificationPermissionsData\n\t// Cache the permission values to avoid the page becoming disabled while on it.\n\tprivate readonly isPageVisible: boolean\n\n\tconstructor(\n\t\tpermissionData: NotificationPermissionsData,\n\t\tvisiblityStream: Stream<boolean>,\n\t\tprivate readonly systemPermissionHandler: SystemPermissionHandler,\n\t) {\n\t\tthis.isPageVisible = this.isPageNeeded(permissionData)\n\t\tthis.data = permissionData\n\n\t\tvisiblityStream.map((isVisible) => {\n\t\t\t// Redraw the page when the user resumes the app to check for changes in permissions\n\t\t\tif (isVisible) {\n\t\t\t\tthis.systemPermissionHandler\n\t\t\t\t\t.queryPermissionsState([PermissionType.Notification, PermissionType.IgnoreBatteryOptimization])\n\t\t\t\t\t.then((permissionState) => {\n\t\t\t\t\t\tthis.data = {\n\t\t\t\t\t\t\tisNotificationPermissionGranted: permissionState.get(PermissionType.Notification) ?? false,\n\t\t\t\t\t\t\tisBatteryPermissionGranted: permissionState.get(PermissionType.IgnoreBatteryOptimization) ?? false,\n\t\t\t\t\t\t}\n\t\t\t\t\t\tm.redraw()\n\t\t\t\t\t})\n\t\t\t}\n\t\t})\n\t}\n\n\tsetIsNotificationPermissionGranted(isGranted: boolean) {\n\t\tthis.data = {\n\t\t\t...this.data,\n\t\t\tisNotificationPermissionGranted: isGranted,\n\t\t}\n\t\tm.redraw()\n\t}\n\n\tsetIsBatteryNotificationPermissionGranted(isGranted: boolean) {\n\t\tthis.data = {\n\t\t\t...this.data,\n\t\t\tisBatteryPermissionGranted: isGranted,\n\t\t}\n\t\tm.redraw()\n\t}\n\n\tprivate isPageNeeded(data: NotificationPermissionsData): boolean {\n\t\t// Skip this page if the needed permissions are already granted\n\t\tif (isAndroidApp()) {\n\t\t\treturn !data.isNotificationPermissionGranted || !data.isBatteryPermissionGranted\n\t\t}\n\t\treturn !data.isNotificationPermissionGranted\n\t}\n\n\theaderTitle(): TranslationKey {\n\t\treturn \"notificationSettings_action\"\n\t}\n\n\tnextAction(showDialogs: boolean): Promise<boolean> {\n\t\t// next action not available for this page\n\t\treturn Promise.resolve(true)\n\t}\n\n\tisSkipAvailable(): boolean {\n\t\treturn false\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.isPageVisible\n\t}\n}\n","import m, { Children } from \"mithril\"\nimport { WizardPageAttrs, WizardPageN } from \"../../../../gui/base/WizardDialog.js\"\nimport { lang, TranslationKey } from \"../../../../misc/LanguageViewModel.js\"\nimport { RadioSelector, RadioSelectorAttrs, RadioSelectorOption } from \"../../../../gui/base/RadioSelector.js\"\nimport { themeOptions, ThemePreference } from \"../../../../gui/theme.js\"\nimport { SetupPageLayout } from \"./SetupPageLayout.js\"\nimport { locator } from \"../../../../api/main/CommonLocator.js\"\nimport { client } from \"../../../../misc/ClientDetector.js\"\n\nexport class SetupThemePage implements WizardPageN<SetupThemePageAttrs> {\n\t// The whitelabel themes formatted as `RadioSelectorOption`s.\n\tprivate customThemes: Array<RadioSelectorOption<string>> | null = null\n\n\toninit() {\n\t\t// Get the whitelabel themes from the theme controller and map them to `RadioSelector` options.\n\t\tlocator.themeController.getCustomThemes().then((customThemes) => {\n\t\t\tthis.customThemes = customThemes.map((themeId) => {\n\t\t\t\treturn { name: lang.makeTranslation(themeId, themeId), value: themeId }\n\t\t\t})\n\t\t\tm.redraw()\n\t\t})\n\t}\n\n\tview(): Children {\n\t\treturn m(\n\t\t\tSetupPageLayout,\n\t\t\t{\n\t\t\t\timage: \"theme\",\n\t\t\t},\n\t\t\tm(\"p.full-width\", lang.get(\"theme_title\")),\n\t\t\t// We need to await the promise from `themeController.getCustomThemes()`, so we delay rendering the `RadioSelector` until it does.\n\t\t\tthis.customThemes == null\n\t\t\t\t? null\n\t\t\t\t: m(RadioSelector, {\n\t\t\t\t\t\tname: \"theme_label\",\n\t\t\t\t\t\toptions: [...themeOptions(client.isCalendarApp()), ...this.customThemes],\n\t\t\t\t\t\tclass: \"mb-s\",\n\t\t\t\t\t\tselectedOption: locator.themeController.themePreference,\n\t\t\t\t\t\tonOptionSelected: (option) => {\n\t\t\t\t\t\t\tlocator.themeController.setThemePreference(option, true)\n\t\t\t\t\t\t},\n\t\t\t\t  } satisfies RadioSelectorAttrs<ThemePreference>),\n\t\t)\n\t}\n}\n\nexport class SetupThemePageAttrs implements WizardPageAttrs<null> {\n\thidePagingButtonForPage = false\n\tdata: null = null\n\n\theaderTitle(): TranslationKey {\n\t\treturn \"appearanceSettings_label\"\n\t}\n\n\tnextAction(showDialogs: boolean): Promise<boolean> {\n\t\t// next action not available for this page\n\t\treturn Promise.resolve(true)\n\t}\n\n\tisSkipAvailable(): boolean {\n\t\treturn false\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn true\n\t}\n}\n","import m, { Children, Component, Vnode } from \"mithril\"\nimport { WizardPageAttrs } from \"../../../../gui/base/WizardDialog.js\"\nimport { lang, type TranslationKey } from \"../../../../misc/LanguageViewModel.js\"\nimport { SetupPageLayout } from \"./SetupPageLayout.js\"\nimport { NativeContactsSyncManager } from \"../../../../../mail-app/contacts/model/NativeContactsSyncManager.js\"\nimport { ContactImporter } from \"../../../../../mail-app/contacts/ContactImporter.js\"\nimport { Dialog } from \"../../../../gui/base/Dialog.js\"\nimport { MobileSystemFacade } from \"../../../common/generatedipc/MobileSystemFacade.js\"\nimport { renderSettingsBannerButton } from \"../../../../settings/SettingsBannerButton.js\"\n\nexport class SetupContactsPage implements Component<SetupContactsPageAttrs> {\n\tview({ attrs }: Vnode<SetupContactsPageAttrs>): Children {\n\t\treturn m(SetupPageLayout, { image: \"contacts\" }, this.renderImportAndSyncButtons(attrs))\n\t}\n\n\tprivate renderImportAndSyncButtons(attrs: SetupContactsPageAttrs): Children {\n\t\tconst isContactSyncEnabled = attrs.syncManager.isEnabled()\n\n\t\treturn [\n\t\t\tm(\"p.mb-s\", lang.get(\"importContacts_msg\")),\n\t\t\trenderSettingsBannerButton(\"import_action\", () => {\n\t\t\t\tattrs.contactImporter.importContactsFromDeviceSafely()\n\t\t\t}),\n\t\t\tm(\"p.mb-s\", lang.get(\"allowContactSynchronization\")),\n\t\t\trenderSettingsBannerButton(\n\t\t\t\tisContactSyncEnabled ? \"activated_label\" : \"activate_action\",\n\t\t\t\t() => {\n\t\t\t\t\tthis.enableSync(attrs)\n\t\t\t\t},\n\t\t\t\tisContactSyncEnabled,\n\t\t\t\t\"mb-l\",\n\t\t\t),\n\t\t]\n\t}\n\n\tprivate async enableSync(attrs: SetupContactsPageAttrs): Promise<void> {\n\t\tconst success = await attrs.syncManager.enableSync()\n\t\tif (!success) {\n\t\t\tawait attrs.syncManager.disableSync()\n\t\t\tawait Dialog.message(\"allowContactReadWrite_msg\")\n\t\t\tawait attrs.mobileSystemFacade.goToSettings()\n\t\t}\n\t}\n}\n\nexport class SetupContactsPageAttrs implements WizardPageAttrs<null> {\n\thidePagingButtonForPage = false\n\tdata: null = null\n\n\tconstructor(\n\t\tpublic readonly syncManager: NativeContactsSyncManager,\n\t\tpublic readonly contactImporter: ContactImporter,\n\t\tpublic readonly mobileSystemFacade: MobileSystemFacade,\n\t\tpublic readonly allowContactSyncAndImport: boolean,\n\t) {}\n\n\theaderTitle(): TranslationKey {\n\t\treturn \"contacts_label\"\n\t}\n\n\tnextAction(showDialogs: boolean): Promise<boolean> {\n\t\t// next action not available for this page\n\t\treturn Promise.resolve(true)\n\t}\n\n\tisSkipAvailable(): boolean {\n\t\treturn false\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.allowContactSyncAndImport\n\t}\n}\n","import { Dialog, DialogType } from \"../../gui/base/Dialog.js\"\nimport m, { Children, Component, Vnode } from \"mithril\"\nimport { lang, TranslationKey } from \"../../misc/LanguageViewModel.js\"\nimport type { RadioSelectorAttrs, RadioSelectorOption } from \"../../gui/base/RadioSelector.js\"\nimport { RadioSelector } from \"../../gui/base/RadioSelector.js\"\nimport { CredentialAuthenticationError } from \"../../api/common/error/CredentialAuthenticationError.js\"\nimport { liveDataAttrs } from \"../../gui/AriaUtils.js\"\nimport type { DeferredObject } from \"@tutao/tutanota-utils\"\nimport { defer } from \"@tutao/tutanota-utils\"\nimport { CancelledError } from \"../../api/common/error/CancelledError.js\"\nimport { Keys } from \"../../api/common/TutanotaConstants.js\"\nimport { BaseButton } from \"../../gui/base/buttons/BaseButton.js\"\nimport { MobileSystemFacade } from \"../common/generatedipc/MobileSystemFacade.js\"\nimport { AppLockMethod } from \"../common/generatedipc/AppLockMethod.js\"\n\nexport async function showAppLockMethodDialog(mobileSystemFacade: MobileSystemFacade): Promise<void> {\n\tawait AppLockMethodDialog.showAndWaitForSelection(mobileSystemFacade)\n}\n\nclass AppLockMethodDialog {\n\tprivate error: string | null\n\tprivate readonly finished: DeferredObject<void>\n\tprivate readonly dialog: Dialog\n\n\t/** @private */\n\tconstructor(\n\t\tprivate readonly mobileSystemFacade: MobileSystemFacade,\n\t\tprivate readonly supportedModes: ReadonlyArray<AppLockMethod>,\n\t\tprivate readonly previousSelection: AppLockMethod,\n\t) {\n\t\tthis.error = null\n\t\tthis.finished = defer()\n\t\tthis.dialog = new Dialog(DialogType.EditMedium, {\n\t\t\tview: () => {\n\t\t\t\t// We need custom dialog because:\n\t\t\t\t// - We don't need large dialog\n\t\t\t\t// - We want our selector button in the body and not in the header and it must stick to the bottom of the dialog\n\t\t\t\t//   (large dialog scrolls its contents and that's *not* what we want for that button).\n\t\t\t\treturn m(\"\", [\n\t\t\t\t\tnull,\n\t\t\t\t\tm(SelectAppLockMethodView, {\n\t\t\t\t\t\tclass: \"scroll pt plr-l height-100p\",\n\t\t\t\t\t\terror: this.error,\n\t\t\t\t\t\tonConfirm: (mode) => this.onMethodSelected(mode),\n\t\t\t\t\t\tsupportedModes: this.supportedModes,\n\t\t\t\t\t\tpreviousSelection: this.previousSelection,\n\t\t\t\t\t}),\n\t\t\t\t])\n\t\t\t},\n\t\t}).addShortcut({\n\t\t\thelp: \"close_alt\",\n\t\t\tkey: Keys.ESC,\n\t\t\texec: () => this.dialog.close(),\n\t\t})\n\t\tthis.dialog.setCloseHandler(() => {\n\t\t\tthis.finished.resolve()\n\t\t\tthis.dialog.close()\n\t\t})\n\t}\n\n\tstatic async showAndWaitForSelection(mobileSystemFacade: MobileSystemFacade) {\n\t\tconst supportedModes = await mobileSystemFacade.getSupportedAppLockMethods()\n\t\tconst previousSelection = await mobileSystemFacade.getAppLockMethod()\n\t\tconst credentialsDialog = new AppLockMethodDialog(mobileSystemFacade, supportedModes, previousSelection)\n\n\t\tcredentialsDialog.dialog.show()\n\n\t\tawait credentialsDialog.finished.promise\n\t}\n\n\tprivate async onMethodSelected(mode: AppLockMethod) {\n\t\ttry {\n\t\t\t// Make sure that the user can actually use the method before we save it.\n\t\t\t// Example: on iOS Biometrics will be supported but before the first use the user must give the permission anyway.\n\t\t\tawait this.mobileSystemFacade.enforceAppLock(mode)\n\t\t\tawait this.mobileSystemFacade.setAppLockMethod(mode)\n\n\t\t\tthis.dialog.close()\n\n\t\t\tthis.finished.resolve()\n\t\t} catch (e) {\n\t\t\tif (e instanceof CredentialAuthenticationError) {\n\t\t\t\tthis.error = e.message\n\t\t\t\tm.redraw()\n\t\t\t} else if (e instanceof CancelledError) {\n\t\t\t\t// ignore. this can happen if we switch app pin -> device lock and the user cancels the pin prompt.\n\t\t\t} else {\n\t\t\t\tthrow e\n\t\t\t}\n\t\t}\n\t}\n}\n\ninterface SelectAppLockMethodDialogAttrs {\n\tclass?: string\n\tpreviousSelection: AppLockMethod\n\tonConfirm: ((appLockMethod: AppLockMethod) => unknown) | null\n\tsupportedModes: ReadonlyArray<AppLockMethod>\n\terror: string | null\n\tonModeSelected?: (mode: AppLockMethod) => unknown\n}\n\nexport class SelectAppLockMethodView implements Component<SelectAppLockMethodDialogAttrs> {\n\tprivate currentMethod: AppLockMethod\n\n\tconstructor({ attrs }: Vnode<SelectAppLockMethodDialogAttrs>) {\n\t\tthis.currentMethod = attrs.previousSelection\n\t}\n\n\tview({ attrs }: Vnode<SelectAppLockMethodDialogAttrs>): Children {\n\t\tconst options = this.getSupportedOptions(attrs)\n\n\t\tconst { onConfirm } = attrs\n\t\treturn [\n\t\t\tm(\n\t\t\t\t\".flex.col\",\n\t\t\t\t{\n\t\t\t\t\tclass: attrs.class,\n\t\t\t\t},\n\t\t\t\t[\n\t\t\t\t\tattrs.error ? m(\".small.center.statusTextColor.pb-s\", liveDataAttrs(), attrs.error) : null,\n\t\t\t\t\tm(\"\", lang.get(\"credentialsEncryptionModeSelection_msg\")),\n\t\t\t\t\tm(\n\t\t\t\t\t\t\".mt\",\n\t\t\t\t\t\tm(RadioSelector, {\n\t\t\t\t\t\t\tname: \"credentialsEncryptionMode_label\",\n\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\tselectedOption: this.currentMethod,\n\t\t\t\t\t\t\tonOptionSelected: (mode: AppLockMethod) => {\n\t\t\t\t\t\t\t\tthis.currentMethod = mode\n\t\t\t\t\t\t\t\tattrs.onModeSelected?.(mode)\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t} satisfies RadioSelectorAttrs<AppLockMethod>),\n\t\t\t\t\t),\n\t\t\t\t],\n\t\t\t),\n\t\t\tonConfirm ? this.renderSelectButton(() => onConfirm(this.currentMethod)) : null,\n\t\t]\n\t}\n\n\tprivate getSupportedOptions(attrs: SelectAppLockMethodDialogAttrs): Array<RadioSelectorOption<AppLockMethod>> {\n\t\tconst generateOption = (name: TranslationKey, value: AppLockMethod): RadioSelectorOption<AppLockMethod> => ({\n\t\t\tname,\n\t\t\tvalue,\n\t\t})\n\n\t\tconst options = [\n\t\t\tgenerateOption(\"credentialsEncryptionModeDeviceLock_label\", AppLockMethod.None),\n\t\t\tgenerateOption(\"credentialsEncryptionModeDeviceCredentials_label\", AppLockMethod.SystemPassOrBiometrics),\n\t\t\tgenerateOption(\"credentialsEncryptionModeBiometrics_label\", AppLockMethod.Biometrics),\n\t\t] as const\n\t\treturn options.filter((option) => attrs.supportedModes.includes(option.value))\n\t}\n\n\tprivate renderSelectButton(onclick: () => unknown) {\n\t\treturn m(BaseButton, {\n\t\t\tlabel: \"ok_action\",\n\t\t\ttext: lang.get(\"ok_action\"),\n\t\t\tclass: \"uppercase accent-bg full-width center b content-fg flash\",\n\t\t\tstyle: {\n\t\t\t\theight: \"60px\",\n\t\t\t},\n\t\t\tonclick,\n\t\t})\n\t}\n}\n","import m, { Children, Component, Vnode } from \"mithril\"\nimport { WizardPageAttrs } from \"../../../../gui/base/WizardDialog.js\"\nimport { lang, type TranslationKey } from \"../../../../misc/LanguageViewModel.js\"\nimport { SetupPageLayout } from \"./SetupPageLayout.js\"\nimport { SelectAppLockMethodView } from \"../../SelectAppLockMethodDialog.js\"\nimport { AppLockMethod } from \"../../../common/generatedipc/AppLockMethod.js\"\nimport { MobileSystemFacade } from \"../../../common/generatedipc/MobileSystemFacade.js\"\nimport { CredentialAuthenticationError } from \"../../../../api/common/error/CredentialAuthenticationError.js\"\nimport { CancelledError } from \"../../../../api/common/error/CancelledError.js\"\n\nexport class SetupLockPage implements Component<SetupLockPageAttrs> {\n\tview({ attrs }: Vnode<SetupLockPageAttrs>): Children {\n\t\treturn m(SetupPageLayout, { image: \"lock\", buttonLabel: \"finish_action\" }, [\n\t\t\tm(SelectAppLockMethodView, {\n\t\t\t\tclass: \"mt\",\n\t\t\t\terror: attrs.error,\n\t\t\t\tsupportedModes: attrs.supportedModes,\n\t\t\t\tpreviousSelection: attrs.currentMode,\n\t\t\t\tonConfirm: null,\n\t\t\t\tonModeSelected: (mode) => (attrs.currentMode = mode),\n\t\t\t}),\n\t\t])\n\t}\n}\n\nexport class SetupLockPageAttrs implements WizardPageAttrs<null> {\n\thidePagingButtonForPage = false\n\tdata: null = null\n\n\terror: string | null = null\n\tsupportedModes: ReadonlyArray<AppLockMethod> = []\n\tcurrentMode: AppLockMethod = AppLockMethod.None\n\n\tconstructor(public readonly mobileSystemFacade: MobileSystemFacade) {\n\t\tmobileSystemFacade.getSupportedAppLockMethods().then((supportedMethods) => {\n\t\t\tthis.supportedModes = supportedMethods\n\t\t\tm.redraw()\n\t\t})\n\t\tthis.mobileSystemFacade.getAppLockMethod().then((appLockMethod) => {\n\t\t\tthis.currentMode = appLockMethod\n\t\t\tm.redraw()\n\t\t})\n\t}\n\n\theaderTitle(): TranslationKey {\n\t\treturn \"credentialsEncryptionMode_label\"\n\t}\n\n\tasync nextAction(showDialogs: boolean): Promise<boolean> {\n\t\ttry {\n\t\t\tawait this.mobileSystemFacade.enforceAppLock(this.currentMode)\n\t\t\tawait this.mobileSystemFacade.setAppLockMethod(this.currentMode)\n\t\t} catch (e) {\n\t\t\tif (e instanceof CredentialAuthenticationError) {\n\t\t\t\tthis.error = e.message\n\t\t\t\tm.redraw()\n\t\t\t\treturn false\n\t\t\t} else if (e instanceof CancelledError) {\n\t\t\t\t// if the user cancels, is unrecognized by Face ID, enters an incorrect device password, etc., we should not close the dialog\n\t\t\t\t// and instead let them try again or choose a different encryption mode\n\t\t\t\treturn false\n\t\t\t} else {\n\t\t\t\tthrow e\n\t\t\t}\n\t\t}\n\n\t\t// next action not available for this page\n\t\treturn true\n\t}\n\n\tisSkipAvailable(): boolean {\n\t\treturn false\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.supportedModes.length > 1\n\t}\n}\n","import { createWizardDialog, WizardPageWrapper, wizardPageWrapper } from \"../../../gui/base/WizardDialog.js\"\nimport { defer } from \"@tutao/tutanota-utils\"\nimport { SetupCongratulationsPage, SetupCongratulationsPageAttrs } from \"./setupwizardpages/SetupCongraulationsPage.js\"\nimport { DeviceConfig } from \"../../../misc/DeviceConfig.js\"\nimport { SetupNotificationsPage, SetupNotificationsPageAttrs } from \"./setupwizardpages/SetupNotificationsPage.js\"\nimport { DialogType } from \"../../../gui/base/Dialog.js\"\nimport { SetupThemePage, SetupThemePageAttrs } from \"./setupwizardpages/SetupThemePage.js\"\nimport { SetupContactsPage, SetupContactsPageAttrs } from \"./setupwizardpages/SetupContactsPage.js\"\nimport { SetupLockPage, SetupLockPageAttrs } from \"./setupwizardpages/SetupLockPage.js\"\nimport { SystemPermissionHandler } from \"../SystemPermissionHandler.js\"\nimport { WebMobileFacade } from \"../WebMobileFacade.js\"\nimport { ContactImporter } from \"../../../../mail-app/contacts/ContactImporter.js\"\nimport { MobileSystemFacade } from \"../../common/generatedipc/MobileSystemFacade.js\"\nimport { NativeContactsSyncManager } from \"../../../../mail-app/contacts/model/NativeContactsSyncManager.js\"\nimport { locator } from \"../../../api/main/CommonLocator.js\"\nimport { PermissionType } from \"../../common/generatedipc/PermissionType.js\"\nimport { CredentialsProvider } from \"../../../misc/credentials/CredentialsProvider.js\"\n\nexport async function showSetupWizard(\n\tsystemPermissionHandler: SystemPermissionHandler,\n\twebMobileFacade: WebMobileFacade,\n\tcontactImporter: ContactImporter | null,\n\tsystemFacade: MobileSystemFacade,\n\tcredentialsProvider: CredentialsProvider,\n\tcontactSyncManager: NativeContactsSyncManager | null,\n\tdeviceConfig: DeviceConfig,\n\tallowContactSyncAndImport: boolean,\n): Promise<void> {\n\tconst permissionStatus = await systemPermissionHandler.queryPermissionsState([\n\t\tPermissionType.Contacts,\n\t\tPermissionType.Notification,\n\t\tPermissionType.IgnoreBatteryOptimization,\n\t])\n\n\tlet wizardPages: WizardPageWrapper<any>[] = []\n\twizardPages.push(wizardPageWrapper(SetupCongratulationsPage, new SetupCongratulationsPageAttrs()))\n\twizardPages.push(\n\t\twizardPageWrapper(\n\t\t\tSetupNotificationsPage,\n\t\t\tnew SetupNotificationsPageAttrs(\n\t\t\t\t{\n\t\t\t\t\tisNotificationPermissionGranted: permissionStatus.get(PermissionType.Notification) ?? false,\n\t\t\t\t\tisBatteryPermissionGranted: permissionStatus.get(PermissionType.IgnoreBatteryOptimization) ?? false,\n\t\t\t\t},\n\t\t\t\twebMobileFacade.getIsAppVisible(),\n\t\t\t\tsystemPermissionHandler,\n\t\t\t),\n\t\t),\n\t)\n\twizardPages.push(wizardPageWrapper(SetupThemePage, new SetupThemePageAttrs()))\n\tif (allowContactSyncAndImport && contactSyncManager && contactImporter) {\n\t\twizardPages.push(\n\t\t\twizardPageWrapper(SetupContactsPage, new SetupContactsPageAttrs(contactSyncManager, contactImporter, systemFacade, allowContactSyncAndImport)),\n\t\t)\n\t}\n\twizardPages.push(wizardPageWrapper(SetupLockPage, new SetupLockPageAttrs(locator.systemFacade)))\n\n\tconst deferred = defer<void>()\n\n\tconst wizardBuilder = createWizardDialog(\n\t\tnull,\n\t\twizardPages,\n\t\tasync () => {\n\t\t\tdeviceConfig.setIsSetupComplete(true)\n\t\t\tdeferred.resolve()\n\t\t},\n\t\tDialogType.EditSmall,\n\t)\n\n\twizardBuilder.dialog.show()\n\treturn deferred.promise\n}\n"],"mappings":"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"}