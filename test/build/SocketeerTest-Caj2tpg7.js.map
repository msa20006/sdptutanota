{"version":3,"file":"SocketeerTest-Caj2tpg7.js","names":["net: NetExports","app: App","delayHandler: TimeoutSetter","wm: WindowManager","e","msg: any","ondata: (arg0: string) => unknown","ev: string","cb: () => void","connection: any"],"sources":["../../src/common/desktop/Socketeer.ts","../tests/desktop/SocketeerTest.ts"],"sourcesContent":["import type { App } from \"electron\"\nimport type { WindowManager } from \"./DesktopWindowManager\"\nimport { isMailAddress } from \"../misc/FormatValidator\"\nimport { log } from \"./DesktopLog\"\nimport type { TimeoutSetter } from \"@tutao/tutanota-utils\"\nimport { NetExports } from \"./ElectronExportTypes\"\nimport { Server, Socket } from \"node:net\"\n\nconst SOCKET_PATH = \"/tmp/tutadb.sock\"\n\n/**\n * this is used to control our administration tool\n */\nexport class Socketeer {\n\tprivate _server: Server | null = null\n\tprivate _connection: Socket | null = null\n\tprivate readonly _delayHandler: TimeoutSetter\n\tprivate readonly _net: NetExports\n\n\tconstructor(net: NetExports, app: App, delayHandler: TimeoutSetter = setTimeout) {\n\t\tthis._net = net\n\t\tthis._delayHandler = delayHandler\n\t\tapp.on(\"will-quit\", () => {\n\t\t\tif (this._server || this._connection) {\n\t\t\t\tif (this._connection) {\n\t\t\t\t\tthis._connection.end()\n\t\t\t\t}\n\n\t\t\t\tif (this._server) {\n\t\t\t\t\tthis._server.close()\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\n\tattach(wm: WindowManager) {\n\t\tthis.startClient(async (msg) => {\n\t\t\tconst mailAddress = JSON.parse(msg)\n\n\t\t\tif (typeof mailAddress === \"string\" && isMailAddress(mailAddress, false)) {\n\t\t\t\tconst targetWindow = await wm.getLastFocused(false)\n\t\t\t\ttargetWindow.desktopFacade.openCustomer(mailAddress)\n\t\t\t}\n\t\t})\n\t}\n\n\tstartServer() {\n\t\tlog.debug(\"opening admin socket\")\n\n\t\tif (this._server) {\n\t\t\treturn\n\t\t}\n\n\t\tconst server = (this._server = this._net\n\t\t\t.createServer((c) => {\n\t\t\t\tlog.debug(\"got connection\")\n\t\t\t\tthis._connection = c\n\t\t\t\tc.on(\"data\", () => {\n\t\t\t\t\tconsole.warn(\"Data was pushed through admin socket, aborting connection\")\n\t\t\t\t\tc.destroy()\n\t\t\t\t}).on(\"end\", () => {\n\t\t\t\t\tthis._connection = null\n\t\t\t\t})\n\t\t\t})\n\t\t\t.on(\"listening\", () => {\n\t\t\t\tlog.debug(\"Socketeer: server is listening\")\n\t\t\t})\n\t\t\t.on(\"error\", (e) => {\n\t\t\t\tlog.warn(\"Socketeer: server error\", e)\n\n\t\t\t\t// @ts-ignore Should be name or message instead?\n\t\t\t\tif (e.code === \"EADDRINUSE\") {\n\t\t\t\t\tthis._delayHandler(() => {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tserver.close()\n\t\t\t\t\t\t\tserver.listen(SOCKET_PATH)\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tlog.error(\"Socketeer: restart error: \", e)\n\t\t\t\t\t\t}\n\t\t\t\t\t}, 1000)\n\t\t\t\t}\n\t\t\t})\n\t\t\t.on(\"close\", () => {\n\t\t\t\tlog.debug(\"Socketeer: server is closed\")\n\t\t\t\tthis._server = null\n\t\t\t}))\n\n\t\tthis._server.listen(SOCKET_PATH)\n\t}\n\n\tsendSocketMessage(msg: any) {\n\t\tif (this._connection) {\n\t\t\tthis._connection.write(JSON.stringify(msg), \"utf8\")\n\t\t}\n\t}\n\n\tstartClient(ondata: (arg0: string) => unknown) {\n\t\tif (this._connection) {\n\t\t\treturn\n\t\t}\n\n\t\tthis._connection = this._net\n\t\t\t.createConnection(SOCKET_PATH)\n\t\t\t.on(\"connect\", () => {\n\t\t\t\tlog.debug(\"socket connected\")\n\t\t\t})\n\t\t\t.on(\"close\", (hadError) => {\n\t\t\t\tif (hadError) {\n\t\t\t\t\tthis._tryReconnect(ondata)\n\t\t\t\t}\n\t\t\t})\n\t\t\t.on(\"end\", () => {\n\t\t\t\tlog.debug(\"socket disconnected\")\n\n\t\t\t\tthis._tryReconnect(ondata)\n\t\t\t})\n\t\t\t.on(\"error\", (e) => {\n\t\t\t\t// @ts-ignore Should be name or message instead?\n\t\t\t\tif (e.code !== \"ENOENT\") {\n\t\t\t\t\tconsole.error(\"Unexpected Socket Error:\", e)\n\t\t\t\t}\n\t\t\t})\n\t\t\t.on(\"data\", ondata)\n\t}\n\n\t_tryReconnect(ondata: (arg0: string) => unknown): void {\n\t\tthis._connection = null\n\n\t\tthis._delayHandler(() => {\n\t\t\tthis.startClient(ondata)\n\t\t}, 1000)\n\t}\n}\n","import n from \"../nodemocker.js\"\nimport o from \"@tutao/otest\"\nimport { makeTimeoutMock, spy } from \"@tutao/tutanota-test-utils\"\nimport { Socketeer } from \"../../../src/common/desktop/Socketeer.js\"\no.spec(\"Socketeer Test\", function () {\n\tconst electron = {\n\t\tapp: {\n\t\t\tcallbacks: {},\n\t\t\ton: function (ev: string, cb: () => void) {\n\t\t\t\tthis.callbacks[ev] = cb\n\t\t\t\treturn n.spyify(electron.app)\n\t\t\t},\n\t\t\tdock: {\n\t\t\t\tshow: () => {},\n\t\t\t\tsetMenu: () => {},\n\t\t\t\tisVisible: () => false,\n\t\t\t},\n\t\t},\n\t}\n\tlet serverMock\n\tlet connectionMock\n\n\tconst standardMocks = () => {\n\t\tconst net = {\n\t\t\tcreateServer: (connectionHandler) => {\n\t\t\t\tserverMock.connectionHandler = connectionHandler\n\t\t\t\treturn serverMock\n\t\t\t},\n\t\t\tcreateConnection: () => connectionMock,\n\t\t}\n\t\tserverMock = n\n\t\t\t.mock(\"__server\", {\n\t\t\t\tconnectionHandler: (connection: any) => {},\n\t\t\t\tcallbacks: {},\n\t\t\t\ton: function (ev: string, cb: () => void) {\n\t\t\t\t\tthis.callbacks[ev] = cb\n\t\t\t\t\treturn serverMock\n\t\t\t\t},\n\t\t\t\tlisten: () => {},\n\t\t\t\tclose: () => {},\n\t\t\t})\n\t\t\t.set()\n\t\tconnectionMock = n\n\t\t\t.mock(\"__connection\", {\n\t\t\t\tcallbacks: {},\n\t\t\t\ton: function (ev: string, cb: () => void) {\n\t\t\t\t\tthis.callbacks[ev] = cb\n\t\t\t\t\treturn connectionMock\n\t\t\t\t},\n\t\t\t\twrite: () => {},\n\t\t\t\tend: () => {},\n\t\t\t})\n\t\t\t.set()\n\t\treturn {\n\t\t\tnetMock: n.mock<typeof import(\"net\")>(\"net\", net).set(),\n\t\t\telectronMock: n.mock<typeof Electron>(\"electron\", electron).set(),\n\t\t\ttimeoutMock: makeTimeoutMock(),\n\t\t}\n\t}\n\n\to(\"startServer & cleanup\", function () {\n\t\tconst { electronMock, netMock } = standardMocks()\n\t\tconst sock = new Socketeer(netMock, electronMock.app)\n\t\to(electronMock.app.on.callCount).equals(1)\n\t\to(electronMock.app.on.args[0]).equals(\"will-quit\")\n\t\to(electronMock.app.on.args.length).equals(2)\n\t\tsock.startServer()\n\t\tsock.startServer() // this should get ignored\n\n\t\t// check server set up\n\t\to(serverMock.callbacks[\"error\"]).notEquals(undefined)\n\t\to(serverMock.callbacks[\"close\"]).notEquals(undefined)\n\t\to(netMock.createServer.callCount).equals(1)\n\t\to(netMock.createConnection.callCount).equals(0)\n\t\t// make connection\n\t\tserverMock.connectionHandler(connectionMock)\n\t\t//check connection set up\n\t\to(connectionMock.callbacks[\"data\"]).notEquals(undefined)\n\t\to(connectionMock.callbacks[\"end\"]).notEquals(undefined)\n\t\t// send message\n\t\tsock.sendSocketMessage({\n\t\t\tsome: \"data\",\n\t\t\tto: \"send\",\n\t\t})\n\t\t//check correct sending\n\t\to(connectionMock.write.callCount).equals(1)\n\t\to(connectionMock.write.args[0]).equals('{\"some\":\"data\",\"to\":\"send\"}')\n\t\to(connectionMock.write.args[1]).equals(\"utf8\")\n\t\to(connectionMock.write.args.length).equals(2)\n\t\t// cleanup\n\t\t// @ts-ignore\n\t\telectronMock.app.callbacks[\"will-quit\"]()\n\t\to(serverMock.listen.callCount).equals(1)\n\t\to(serverMock.listen.args[0]).equals(\"/tmp/tutadb.sock\")\n\t\to(serverMock.listen.args.length).equals(1)\n\t\to(serverMock.close.callCount).equals(1)\n\t\to(serverMock.close.args.length).equals(0)\n\t})\n\to(\"startClient & cleanup\", function () {\n\t\tconst { electronMock, netMock } = standardMocks()\n\t\tconst sock = new Socketeer(netMock, electronMock.app)\n\t\tconst ondata = spy(() => {})\n\t\tconst ondata2 = spy(() => {})\n\t\tsock.startClient(ondata)\n\t\tsock.startClient(ondata2) // ignored\n\n\t\t// check setup\n\t\to(netMock.createConnection.callCount).equals(1)\n\t\to(connectionMock.on.callCount).equals(5)\n\t\t// check callbacks\n\t\to(typeof connectionMock.callbacks[\"connect\"]).equals(\"function\")\n\t\to(typeof connectionMock.callbacks[\"error\"]).equals(\"function\")\n\t\t//receive data\n\t\tconnectionMock.callbacks[\"data\"](\"somedata\")\n\t\to(ondata.callCount).equals(1)\n\t\to(ondata.args[0]).equals(\"somedata\")\n\t\to(ondata.args.length).equals(1)\n\t\to(ondata2.callCount).equals(0)\n\t\t// cleanup\n\t\t// @ts-ignore\n\t\telectronMock.app.callbacks[\"will-quit\"]()\n\t\to(netMock.createServer.callCount).equals(0)\n\t\to(netMock.createConnection.callCount).equals(1)\n\t})\n\to(\"reconnect on end\", async function () {\n\t\tconst { electronMock, netMock, timeoutMock } = standardMocks()\n\t\tconst sock = new Socketeer(netMock, electronMock.app, timeoutMock)\n\t\tconst ondata = spy(() => {})\n\t\tsock.startClient(ondata)\n\t\tconnectionMock.callbacks[\"end\"]()\n\t\ttimeoutMock.next()\n\t\tawait Promise.resolve()\n\t\to(connectionMock.on.callCount).equals(10)\n\t\t// cleanup\n\t\t// @ts-ignore\n\t\telectronMock.app.callbacks[\"will-quit\"]()\n\t\to(netMock.createServer.callCount).equals(0)\n\t\to(netMock.createConnection.callCount).equals(2)\n\t})\n\to(\"reconnect on close with error\", async function () {\n\t\tconst { electronMock, netMock, timeoutMock } = standardMocks()\n\t\tconst sock = new Socketeer(netMock, electronMock.app, timeoutMock)\n\t\tconst ondata = spy(() => {})\n\t\tsock.startClient(ondata)\n\t\tconnectionMock.callbacks[\"close\"](true)\n\t\ttimeoutMock.next()\n\t\tawait Promise.resolve()\n\t\to(connectionMock.on.callCount).equals(10)\n\t\t// cleanup\n\t\t// @ts-ignore\n\t\telectronMock.app.callbacks[\"will-quit\"]()\n\t\to(netMock.createServer.callCount).equals(0)\n\t\to(netMock.createConnection.callCount).equals(2)\n\t})\n\to(\"don't reconnect on close without error\", async function () {\n\t\tconst { electronMock, netMock, timeoutMock } = standardMocks()\n\t\tconst sock = new Socketeer(netMock, electronMock.app, timeoutMock)\n\t\tconst ondata = spy(() => {})\n\t\tsock.startClient(ondata)\n\t\tconnectionMock.callbacks[\"close\"](false)\n\t\ttimeoutMock.next()\n\t\tawait Promise.resolve()\n\t\to(connectionMock.on.callCount).equals(5)\n\t\t// cleanup\n\t\t// @ts-ignore\n\t\telectronMock.app.callbacks[\"will-quit\"]()\n\t\to(netMock.createServer.callCount).equals(0)\n\t\to(netMock.createConnection.callCount).equals(1)\n\t})\n\to(\"sendSocketMessage calls write\", function () {\n\t\tconst { electronMock, netMock } = standardMocks()\n\t\tconst sock = new Socketeer(netMock, electronMock.app)\n\t\tconst ondata = spy(() => {})\n\t\tsock.startClient(ondata)\n\t\tsock.sendSocketMessage({\n\t\t\tsome: [\"a\", \"b\", \"c\"],\n\t\t\tstuff: 1337,\n\t\t})\n\t\to(connectionMock.write.callCount).equals(1)\n\t\to(connectionMock.write.args[0]).equals('{\"some\":[\"a\",\"b\",\"c\"],\"stuff\":1337}')\n\t\to(connectionMock.write.args[1]).equals(\"utf8\")\n\t\to(connectionMock.write.args.length).equals(2)\n\t\t// @ts-ignore\n\t\telectronMock.app.callbacks[\"will-quit\"]()\n\t})\n})\n"],"mappings":"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"}