{"version":3,"file":"Dialog-B6-HFvZd.js","names":["vnode: Vnode<DialogHeaderBarAttrs>","a","factory: (attrs: T, children: Children) => Children","vnode: Vnode<T>","vnode: Vnode<RowButtonAttrs>","role: AriaLandmarks","label?: string","dropdownChild: DropdownChildAttrs","x: number","y: number","width: number","height: number","lazyChildren: lazy<ReadonlyArray<DropdownChildAttrs | null>>","buttonChild: DropdownButtonAttrs","children","ev: EventRedraw<Event>","child: DropdownButtonAttrs","showingIcons: boolean","fn: (event: MouseEvent, dom: HTMLElement) => unknown","e: MouseEvent","origin: PosRect","e: Event","visibleElements: Array<ButtonAttrs>","handler: Thunk","_","buttons","buttons: ReadonlyArray<DropdownChildAttrs>","xPos: number","yPos: number","closeHandler: Thunk","dom: HTMLElement","domDropdown: HTMLElement","contentHeight: number","contentWidth: number","position?: \"top\" | \"bottom\"","leftStyle: number | null","rightStyle: number | null","vnode: Vnode<DropDownSelectorAttrs<T>>","a: DropDownSelectorAttrs<T>","value: T | null","params: {\n\tselectedCountry: Country | null\n\tonSelectionChanged: (country: Country) => void\n\thelpLabel?: lazy<string>\n\tlabel?: MaybeTranslation\n}","message: MaybeTranslation","confirmMessage: TranslationKey","confirmation: Confirmation","scrollDom: HTMLElement","entryHeight: number","getSelectedEntryIndex: lazy<number>","selectedIndex: number","logins: LoginController","linkId: InfoLink","render: (linkId: InfoLink) => Children","svg: string","isDisabled: boolean | null | undefined","cursorClass?: string","contact: Contact","color: string","inputLineHeight: number","vnode: CVnode<TextFieldAttrs>","vnode","e: MouseEvent","a: TextFieldAttrs","autofillGuard: Children","e: AnimationEvent","e: FocusEvent","e: KeyboardEvent","e: Event","value: string","dialogType: DialogType","childComponent: Component","e: MouseEvent","animation: AnimationPromise | null","injectionRightAttrs: DialogInjectionRightAttrs<any>","dom: HTMLElement","callback: Dialog[\"focusOnLoadFunction\"]","shortcut: Shortcut","closeHandler: (() => unknown) | null","e: Event","messageIdOrMessageFunction: MaybeTranslation","infoToAppend?: string | lazy<Children>","dialog: Dialog","buttonAttrs: ButtonAttrs","filename: string","url: string","closeButtonAttrs: ButtonAttrs","downloadButtonAttrs: ButtonAttrs","confirmId: TranslationKey","conf: boolean","buttonAttrs: Array<ButtonAttrs>","buttons: ReadonlyArray<ButtonAttrs>","onclose?: (positive: boolean) => unknown","positive: boolean","message: MaybeTranslation","choices: Array<{\n\t\t\ttext: MaybeTranslation\n\t\t\tvalue: T\n\t\t}>","choice: T","choices: Array<{\n\t\t\ttext: MaybeTranslation\n\t\t\tvalue: T\n\t\t\ttype?: \"primary\" | \"secondary\"\n\t\t}>","title: lazy<string>","saveAction: () => Promise<void>","child: Component","saveDialog: Dialog","actionBarAttrs: DialogHeaderBarAttrs","title: string","message: string","res: boolean","props: ActionDialogProps","validationResult: $Promisable<TranslationKey | null> | null","props: TextInputDialogParams","okAction: (action: string) => Promise<unknown>","titleId: TranslationKey","labelIdOrLabelFunction: MaybeTranslation","infoMsgId: TranslationKey | null","value: string","result: string","label: TranslationKey","items: SelectorItemList<T>","initialValue: T","dropdownWidth?: number","selectedValue: T","headerBarAttrs: DialogHeaderBarAttrs","child: Class<Component<T>>","childAttrs: T","dialogStyle?: Partial<CSSStyleDeclaration> | object","child: () => Children","title: MaybeTranslation","headerAttrs: DialogHeaderBarAttrs","newSize: number"],"sources":["../../src/common/gui/base/DialogHeaderBar.ts","../../src/common/gui/base/PureComponent.ts","../../src/common/gui/base/buttons/RowButton.ts","../../src/common/gui/AriaUtils.ts","../../src/common/gui/base/Dropdown.ts","../../src/common/gui/base/DropDownSelector.ts","../../src/common/gui/base/GuiUtils.ts","../../src/common/gui/base/TextField.ts","../../src/common/gui/base/DialogInjectionRight.ts","../../src/common/gui/base/Dialog.ts"],"sourcesContent":["import m, { Children, Component, Vnode } from \"mithril\"\nimport type { ButtonAttrs } from \"./Button.js\"\nimport { Button } from \"./Button.js\"\nimport type { lazy, MaybeLazy } from \"@tutao/tutanota-utils\"\nimport { resolveMaybeLazy } from \"@tutao/tutanota-utils\"\nimport { lang, MaybeTranslation } from \"../../misc/LanguageViewModel.js\"\n\nexport type DialogHeaderBarAttrs = {\n\tleft?: MaybeLazy<Array<ButtonAttrs>>\n\tright?: MaybeLazy<Array<ButtonAttrs>>\n\tmiddle?: MaybeTranslation\n\tcreate?: (dom: HTMLElement) => void\n\tremove?: () => void\n\tnoHeader?: boolean\n\tclass?: string\n}\n\n/**\n * An action bar is a bar that contains buttons (either on the left or on the right).\n */\nexport class DialogHeaderBar implements Component<DialogHeaderBarAttrs> {\n\tview(vnode: Vnode<DialogHeaderBarAttrs>): Children {\n\t\tconst a = Object.assign(\n\t\t\t{},\n\t\t\t{\n\t\t\t\tleft: [],\n\t\t\t\tright: [],\n\t\t\t},\n\t\t\tvnode.attrs,\n\t\t)\n\t\tlet columnClass = a.middle ? \".flex-third.overflow-hidden\" : \".flex-half.overflow-hidden\"\n\t\treturn m(\n\t\t\t\".dialog-header.plr-l.flex-space-between.dialog-header-line-height\",\n\t\t\t{\n\t\t\t\toncreate: ({ dom }) => {\n\t\t\t\t\tif (a.create) a.create(dom as HTMLElement)\n\t\t\t\t},\n\t\t\t\tonremove: () => {\n\t\t\t\t\tif (a.remove) a.remove()\n\t\t\t\t},\n\t\t\t\tclass: vnode.attrs.class,\n\t\t\t},\n\t\t\t[\n\t\t\t\tm(\n\t\t\t\t\tcolumnClass + \".ml-negative-s\",\n\t\t\t\t\tresolveMaybeLazy(a.left).map((a) => m(Button, a)),\n\t\t\t\t), // ellipsis is not working if the text is directly in the flex element, so create a child div for it\n\t\t\t\ta.middle\n\t\t\t\t\t? m(\n\t\t\t\t\t\t\t\"#dialog-title.flex-third-middle.overflow-hidden.flex.justify-center.items-center.b\",\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"data-testid\": `dialog:${lang.getTestId(a.middle)}`,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t[m(\".text-ellipsis\", lang.getTranslationText(a.middle))],\n\t\t\t\t\t  )\n\t\t\t\t\t: null,\n\t\t\t\tm(\n\t\t\t\t\tcolumnClass + \".mr-negative-s.flex.justify-end\",\n\t\t\t\t\tresolveMaybeLazy(a.right).map((a) => m(Button, a)),\n\t\t\t\t),\n\t\t\t],\n\t\t)\n\t}\n}\n","import { Children, Component, Vnode } from \"mithril\"\n\n/**\n * Little helper to create your components from pure functions. No need to return objects, no need to define classes, no fear of shooting\n * yourself in the foot with object components.\n */\nexport function pureComponent<T>(factory: (attrs: T, children: Children) => Children): Component<T> {\n\treturn {\n\t\tview(vnode: Vnode<T>): Children {\n\t\t\treturn factory(vnode.attrs, vnode.children)\n\t\t},\n\t}\n}\n","import m, { Component, Vnode } from \"mithril\"\nimport { BaseButton } from \"./BaseButton.js\"\nimport { AllIcons, Icon, IconSize } from \"../Icon.js\"\nimport { ClickHandler } from \"../GuiUtils.js\"\nimport { AriaRole } from \"../../AriaUtils.js\"\nimport { theme } from \"../../theme.js\"\nimport { lang, MaybeTranslation } from \"../../../misc/LanguageViewModel.js\"\n\nexport interface RowButtonAttrs {\n\t/** accessibility & tooltip description */\n\tlabel: MaybeTranslation\n\t/** visible text inside button */\n\ttext?: MaybeTranslation\n\ticon?: AllIcons | \"none\"\n\tselected?: boolean\n\tonclick: ClickHandler\n\tstyle?: Record<string, any>\n\tclass?: string\n\trole?: AriaRole\n}\n\n/** A button that is styled the same as a `NavButton`. */\nexport class RowButton implements Component<RowButtonAttrs> {\n\tview(vnode: Vnode<RowButtonAttrs>) {\n\t\tconst attrs = vnode.attrs\n\t\tconst label = lang.getTranslationText(attrs.label)\n\t\tconst text = lang.getTranslationText(attrs.text ?? attrs.label)\n\t\tconst color = attrs.selected ? theme.content_button_selected : theme.content_button\n\t\treturn m(BaseButton, {\n\t\t\tlabel: attrs.label,\n\t\t\ttext: m(\n\t\t\t\t\".plr-button.text-ellipsis\",\n\t\t\t\t{\n\t\t\t\t\tstyle: { color },\n\t\t\t\t\t// When the label doesn't match content, screen readers read both\n\t\t\t\t\tariaHidden: label !== text, // this prevents that\n\t\t\t\t},\n\t\t\t\ttext,\n\t\t\t),\n\t\t\trole: attrs.role,\n\t\t\tselected: attrs.selected,\n\t\t\ticon:\n\t\t\t\tattrs.icon && attrs.icon !== \"none\"\n\t\t\t\t\t? m(Icon, {\n\t\t\t\t\t\t\ticon: attrs.icon,\n\t\t\t\t\t\t\tcontainer: \"div\",\n\t\t\t\t\t\t\tclass: \"mr-button\",\n\t\t\t\t\t\t\tstyle: { fill: color },\n\t\t\t\t\t\t\tsize: IconSize.Medium,\n\t\t\t\t\t  })\n\t\t\t\t\t: attrs.icon === \"none\"\n\t\t\t\t\t? m(\".icon-large.mr-button\")\n\t\t\t\t\t: null,\n\t\t\tclass: \"flex items-center state-bg button-content plr-button \" + attrs.class,\n\t\t\tstyle: {\n\t\t\t\t...attrs.style,\n\t\t\t\tcolor,\n\t\t\t},\n\t\t\tonclick: attrs.onclick,\n\t\t})\n\t}\n}\n","import { assertMainOrNodeBoot } from \"../api/common/Env\"\n/**\n * Collections of utility functions to support Accessible Rich Internet Applications (ARIA).\n *\n * https://www.w3.org/TR/wai-aria-practices/\n * https://www.w3.org/TR/wai-aria-1.1/\n * https://webaim.org/techniques/aria/\n * https://www.w3.org/TR/wai-aria-1.1/\n *\n */\nimport { TabIndex } from \"../api/common/TutanotaConstants\"\nimport { lang, MaybeTranslation } from \"../misc/LanguageViewModel.js\"\n\nassertMainOrNodeBoot()\n\n// See: https://webaim.org/techniques/aria/#landmarks\nexport const enum AriaLandmarks {\n\tBanner = \"banner\",\n\tSearch = \"search\",\n\tNavigation = \"navigation\",\n\tMain = \"main\",\n\tComplementary = \"complementary\",\n\tContentinfo = \"contentinfo\",\n\tRegion = \"region\",\n}\n\nexport const enum AriaLiveRegions {\n\tAlert = \"alert\",\n\tLog = \"log\",\n\tMarquee = \"Marquee\",\n\tStatus = \"status\",\n\tTimer = \"timer\",\n}\n\nexport const enum AriaWindow {\n\tAlertDialog = \"alertdialog\",\n\tDialog = \"dialog\",\n}\n\nconst enum AriaLiveData {\n\t//default\n\tOff = \"off\",\n\t//\tIndicates that updates to the region should be presented at the next graceful opportunity\n\tPolite = \"polite\",\n\t//region has the highest priority\n\tAssertive = \"assertive\",\n}\n\nexport function liveDataAttrs(): Record<string, string> {\n\treturn {\n\t\t\"aria-live\": AriaLiveData.Polite,\n\t\t\"aria-atomic\": \"true\",\n\t}\n}\n\nexport const enum AriaPopupType {\n\tNone = \"false\",\n\tMenu = \"menu\",\n\tListBox = \"listbox\",\n\tTree = \"tree\",\n\tGrid = \"grid\",\n\tDialog = \"dialog\",\n}\n\nexport const enum AriaRole {\n\tMenu = \"Menu\",\n\tMenuItem = \"menuitem\",\n\tCombobox = \"combobox\",\n\tListbox = \"listbox\",\n\tOption = \"option\",\n\tSwitch = \"switch\",\n\tMenuItemCheckbox = \"menuitemcheckbox\",\n\tRadioGroup = \"radiogroup\",\n}\n\n/**\n * construct spreadable landmark attributes for screen readers.\n * return value includes a hide-outline class that will be overridden if the selector\n * used to construct the element contains other classes.\n */\nexport function landmarkAttrs(role: AriaLandmarks, label?: string): Record<string, string | undefined> {\n\treturn {\n\t\tclass: \"hide-outline\",\n\t\trole,\n\t\ttabindex: TabIndex.Programmatic,\n\t\t\"aria-label\": label,\n\t}\n}\n","import m, { Children } from \"mithril\"\nimport { modal, ModalComponent } from \"./Modal\"\nimport { animations, opacity, transform, TransformEnum } from \"../animation/Animations\"\nimport { ease } from \"../animation/Easing\"\nimport { px, size } from \"../size\"\nimport { focusNext, focusPrevious, Shortcut } from \"../../misc/KeyManager\"\nimport type { ButtonAttrs } from \"./Button.js\"\nimport { lang, MaybeTranslation } from \"../../misc/LanguageViewModel\"\nimport { Keys, TabIndex } from \"../../api/common/TutanotaConstants\"\nimport { getSafeAreaInsetBottom, getSafeAreaInsetTop } from \"../HtmlUtils\"\nimport type { $Promisable, lazy, lazyAsync } from \"@tutao/tutanota-utils\"\nimport { assertNotNull, delay, downcast, filterNull, makeSingleUse, neverNull, noOp, Thunk } from \"@tutao/tutanota-utils\"\nimport { client } from \"../../misc/ClientDetector\"\nimport { pureComponent } from \"./PureComponent\"\nimport type { ClickHandler } from \"./GuiUtils\"\nimport { assertMainOrNode } from \"../../api/common/Env\"\nimport { IconButtonAttrs } from \"./IconButton.js\"\nimport { AllIcons } from \"./Icon.js\"\nimport { RowButton, RowButtonAttrs } from \"./buttons/RowButton.js\"\nimport { AriaRole } from \"../AriaUtils.js\"\nimport { BaseButton } from \"./buttons/BaseButton\"\n\nassertMainOrNode()\nexport type DropdownInfoAttrs = {\n\tinfo: string\n\tcenter: boolean\n\tbold: boolean\n}\n\nexport interface DropdownButtonAttrs {\n\t/** accessibility & tooltip description */\n\tlabel: MaybeTranslation\n\t/** visible text inside button */\n\ttext?: MaybeTranslation\n\ticon?: AllIcons\n\tclick?: ClickHandler\n\tselected?: boolean\n}\n\n/**\n * Renders small info message inside the dropdown.\n */\nconst DropdownInfo = pureComponent<DropdownInfoAttrs>(({ center, bold, info }) => {\n\treturn m(\".dropdown-info.text-break.selectable\" + (center ? \".center\" : \"\") + (bold ? \".b\" : \"\"), info)\n})\nexport type DropdownChildAttrs = DropdownInfoAttrs | DropdownButtonAttrs\n\nfunction isDropDownInfo(dropdownChild: DropdownChildAttrs): dropdownChild is DropdownInfoAttrs {\n\treturn Object.hasOwn(dropdownChild, \"info\") && Object.hasOwn(dropdownChild, \"center\") && Object.hasOwn(dropdownChild, \"bold\")\n}\n\nexport interface PosRect {\n\treadonly height: number\n\treadonly width: number\n\treadonly top: number\n\treadonly left: number\n\treadonly right: number\n\treadonly bottom: number\n}\n\n// Some Android WebViews still don't support DOMRect so we polyfill that\n// Implemented according to https://developer.mozilla.org/en-US/docs/Web/API/DOMRectReadOnly and common sense\nexport class DomRectReadOnlyPolyfilled implements PosRect {\n\tx: number\n\ty: number\n\twidth: number\n\theight: number\n\n\tconstructor(x: number, y: number, width: number, height: number) {\n\t\tthis.x = x\n\t\tthis.y = y\n\t\tthis.width = width\n\t\tthis.height = height\n\t}\n\n\tget top(): number {\n\t\treturn this.height > 0 ? this.y : this.y + this.height\n\t}\n\n\tget bottom(): number {\n\t\treturn this.height > 0 ? this.y + this.height : this.y\n\t}\n\n\tget left(): number {\n\t\treturn this.width > 0 ? this.x : this.x + this.width\n\t}\n\n\tget right(): number {\n\t\treturn this.width > 0 ? this.x + this.width : this.x\n\t}\n}\n\n// TODO: add resize listener like in the old Dropdown\nexport class Dropdown implements ModalComponent {\n\tprivate children: ReadonlyArray<DropdownChildAttrs>\n\tprivate domDropdown: HTMLElement | null = null\n\torigin: PosRect | null = null\n\toninit: ModalComponent[\"oninit\"]\n\tview: ModalComponent[\"view\"]\n\tprivate readonly width: number\n\tshortcuts: (...args: Array<any>) => any\n\tprivate filterString: string\n\tprivate domInput: HTMLInputElement | null = null\n\tprivate domContents: HTMLElement | null = null\n\tprivate isFilterable: boolean = false\n\tprivate maxHeight: number | null = null\n\tprivate closeHandler: Thunk | null = null\n\tprivate focusedBeforeShown: HTMLElement | null = document.activeElement as HTMLElement\n\n\tconstructor(lazyChildren: lazy<ReadonlyArray<DropdownChildAttrs | null>>, width: number) {\n\t\tthis.children = []\n\t\tthis.width = width\n\t\tthis.filterString = \"\"\n\n\t\tthis.oninit = () => {\n\t\t\tthis.children = filterNull(lazyChildren())\n\t\t\tthis.isFilterable = this.children.length > 10\n\t\t\tthis.children.map((child) => {\n\t\t\t\tif (isDropDownInfo(child)) {\n\t\t\t\t\treturn child\n\t\t\t\t}\n\n\t\t\t\tconst buttonChild: DropdownButtonAttrs = child\n\t\t\t\tbuttonChild.click = this.wrapClick(child.click ? child.click : () => null)\n\n\t\t\t\treturn child\n\t\t\t})\n\t\t}\n\n\t\tlet _shortcuts = this._createShortcuts()\n\n\t\tthis.shortcuts = () => {\n\t\t\treturn _shortcuts\n\t\t}\n\n\t\tconst inputField = () => {\n\t\t\treturn this.isFilterable\n\t\t\t\t? m(\n\t\t\t\t\t\t\"input.input.dropdown-bar.elevated-bg.doNotClose.button-height.button-min-height.pr-s\",\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tplaceholder: lang.get(\"typeToFilter_label\"),\n\t\t\t\t\t\t\toncreate: (vnode) => {\n\t\t\t\t\t\t\t\tthis.domInput = downcast<HTMLInputElement>(vnode.dom)\n\t\t\t\t\t\t\t\tthis.domInput.value = this.filterString\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\toninput: () => {\n\t\t\t\t\t\t\t\tthis.filterString = neverNull(this.domInput).value\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\tpaddingLeft: px(size.hpad_large * 2),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tthis.filterString,\n\t\t\t\t  )\n\t\t\t\t: null\n\t\t}\n\n\t\tconst contents = () => {\n\t\t\tconst showingIcons = this.children.some((c) => \"icon\" in c && typeof c.icon !== \"undefined\")\n\t\t\t// We need to set the height to the height of the parent which already has the calculated and measured height, otherwise this element might\n\t\t\t// overflow the parent (the overall dropdown container) when there's not enough vertical space to display all items\n\t\t\treturn m(\n\t\t\t\t\".dropdown-content.scroll\",\n\t\t\t\t{\n\t\t\t\t\trole: AriaRole.Menu,\n\t\t\t\t\ttabindex: TabIndex.Programmatic,\n\t\t\t\t\toncreate: (vnode) => {\n\t\t\t\t\t\tthis.domContents = vnode.dom as HTMLElement\n\t\t\t\t\t},\n\t\t\t\t\tonupdate: (vnode) => {\n\t\t\t\t\t\tif (this.maxHeight == null) {\n\t\t\t\t\t\t\tconst children = Array.from(vnode.dom.children) as Array<HTMLElement>\n\t\t\t\t\t\t\tthis.maxHeight = children.reduce((accumulator, children) => accumulator + children.offsetHeight, 0) + size.vpad\n\n\t\t\t\t\t\t\tif (this.origin) {\n\t\t\t\t\t\t\t\t// The dropdown-content element is added to the dom has a hidden element first.\n\t\t\t\t\t\t\t\t// The maxHeight is available after the first onupdate call. Then this promise will resolve and we can safely\n\t\t\t\t\t\t\t\t// show the dropdown.\n\t\t\t\t\t\t\t\t// Modal always schedules redraw in oncreate() of a component so we are guaranteed to have onupdate() call.\n\t\t\t\t\t\t\t\tshowDropdown(this.origin, assertNotNull(this.domDropdown), this.maxHeight, this.width).then(() => {\n\t\t\t\t\t\t\t\t\tconst firstButton = vnode.dom.getElementsByTagName(\"button\").item(0)\n\t\t\t\t\t\t\t\t\tif (this.domInput && !client.isMobileDevice()) {\n\t\t\t\t\t\t\t\t\t\tthis.domInput.focus()\n\t\t\t\t\t\t\t\t\t} else if (firstButton !== null) {\n\t\t\t\t\t\t\t\t\t\tfirstButton.focus()\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tthis.domContents?.focus()\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tonscroll: (ev: EventRedraw<Event>) => {\n\t\t\t\t\t\tconst target = ev.target as HTMLElement\n\t\t\t\t\t\t// needed here to prevent flickering on ios\n\t\t\t\t\t\tev.redraw = this.domContents != null && target.scrollTop < 0 && target.scrollTop + this.domContents.offsetHeight > target.scrollHeight\n\t\t\t\t\t},\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\ttop: px(this.getFilterHeight()),\n\t\t\t\t\t\tbottom: 0,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tthis.visibleChildren().map((child) => {\n\t\t\t\t\tif (isDropDownInfo(child)) {\n\t\t\t\t\t\treturn m(DropdownInfo, child)\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn Dropdown.renderDropDownButton(child, showingIcons)\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t)\n\t\t}\n\t\tconst closeBtn = () => {\n\t\t\treturn m(BaseButton, {\n\t\t\t\tlabel: \"close_alt\",\n\t\t\t\ttext: lang.get(\"close_alt\"),\n\t\t\t\tclass: \"hidden-until-focus content-accent-fg button-content\",\n\t\t\t\tonclick: () => {\n\t\t\t\t\tthis.onClose()\n\t\t\t\t},\n\t\t\t})\n\t\t}\n\n\t\tthis.view = (): Children => {\n\t\t\treturn m(\n\t\t\t\t\".dropdown-panel.elevated-bg.border-radius.dropdown-shadow.fit-content.flex-column.flex-start\",\n\t\t\t\t{\n\t\t\t\t\toncreate: (vnode) => {\n\t\t\t\t\t\tthis.domDropdown = vnode.dom as HTMLElement\n\t\t\t\t\t\t// It is important to set initial opacity so that user doesn't see it with full opacity before animating.\n\t\t\t\t\t\tthis.domDropdown.style.opacity = \"0\"\n\t\t\t\t\t},\n\t\t\t\t\tonkeypress: () => {\n\t\t\t\t\t\tif (this.domInput) {\n\t\t\t\t\t\t\tthis.domInput.focus()\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t[inputField(), contents(), closeBtn()],\n\t\t\t)\n\t\t}\n\t}\n\n\tprivate static renderDropDownButton(child: DropdownButtonAttrs, showingIcons: boolean) {\n\t\treturn m(RowButton, {\n\t\t\trole: AriaRole.Option,\n\t\t\tselected: child.selected,\n\t\t\tlabel: child.label,\n\t\t\ttext: child.text,\n\t\t\ticon: child.icon && showingIcons ? child.icon : showingIcons ? \"none\" : undefined,\n\t\t\tclass: \"dropdown-button\",\n\t\t\tonclick: child.click ? child.click : noOp,\n\t\t} satisfies RowButtonAttrs)\n\t}\n\n\twrapClick(fn: (event: MouseEvent, dom: HTMLElement) => unknown): (event: MouseEvent, dom: HTMLElement) => unknown {\n\t\treturn (e: MouseEvent, dom) => {\n\t\t\tconst r = fn(e, dom)\n\t\t\tthis.close()\n\t\t\treturn r\n\t\t}\n\t}\n\n\tbackgroundClick(e: MouseEvent) {\n\t\tif (\n\t\t\tthis.domDropdown &&\n\t\t\t!(e.target as HTMLElement).classList.contains(\"doNotClose\") &&\n\t\t\t(this.domDropdown.contains(e.target as HTMLElement) || this.domDropdown.parentNode === e.target)\n\t\t) {\n\t\t\tthis.onClose()\n\t\t}\n\t}\n\n\t_createShortcuts(): Array<Shortcut> {\n\t\treturn [\n\t\t\t{\n\t\t\t\tkey: Keys.ESC,\n\t\t\t\texec: () => this.onClose(),\n\t\t\t\thelp: \"close_alt\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: Keys.TAB,\n\t\t\t\tshift: true,\n\t\t\t\texec: () => (this.domDropdown ? focusPrevious(this.domDropdown) : false),\n\t\t\t\thelp: \"selectPrevious_action\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: Keys.TAB,\n\t\t\t\tshift: false,\n\t\t\t\texec: () => (this.domDropdown ? focusNext(this.domDropdown) : false),\n\t\t\t\thelp: \"selectNext_action\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: Keys.UP,\n\t\t\t\texec: () => (this.domDropdown ? focusPrevious(this.domDropdown) : false),\n\t\t\t\thelp: \"selectPrevious_action\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: Keys.DOWN,\n\t\t\t\texec: () => (this.domDropdown ? focusNext(this.domDropdown) : false),\n\t\t\t\thelp: \"selectNext_action\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: Keys.RETURN,\n\t\t\t\texec: () => this.chooseMatch(),\n\t\t\t\thelp: \"ok_action\",\n\t\t\t},\n\t\t]\n\t}\n\n\tsetOrigin(origin: PosRect): this {\n\t\tthis.origin = origin\n\t\treturn this\n\t}\n\n\tclose(): void {\n\t\tmodal.remove(this)\n\t}\n\n\tonClose(): void {\n\t\tif (this.closeHandler) {\n\t\t\tthis.closeHandler()\n\t\t} else {\n\t\t\tthis.close()\n\t\t}\n\t}\n\n\tpopState(e: Event): boolean {\n\t\tthis.onClose()\n\t\treturn false\n\t}\n\n\tcallingElement(): HTMLElement | null {\n\t\treturn this.focusedBeforeShown\n\t}\n\n\tchooseMatch: () => boolean = () => {\n\t\tconst filterString = this.filterString.toLowerCase()\n\n\t\tlet visibleElements: Array<ButtonAttrs> = downcast(this.visibleChildren().filter((b) => !isDropDownInfo(b)))\n\t\tlet matchingButton =\n\t\t\tvisibleElements.length === 1 ? visibleElements[0] : visibleElements.find((b) => lang.getTranslationText(b.label).toLowerCase() === filterString)\n\n\t\tif (this.domInput && document.activeElement === this.domInput && matchingButton && matchingButton.click) {\n\t\t\tmatchingButton.click(new MouseEvent(\"click\"), this.domInput)\n\t\t\treturn false\n\t\t}\n\n\t\treturn true\n\t}\n\n\t/**\n\t * Is invoked from modal as the two animations (background layer opacity and dropdown) should run in parallel\n\t */\n\thideAnimation(): Promise<void> {\n\t\treturn Promise.resolve()\n\t}\n\n\tsetCloseHandler(handler: Thunk): this {\n\t\tthis.closeHandler = handler\n\t\treturn this\n\t}\n\n\tprivate visibleChildren(): Array<DropdownChildAttrs> {\n\t\treturn this.children.filter((b) => {\n\t\t\tif (isDropDownInfo(b)) {\n\t\t\t\treturn b.info.includes(this.filterString.toLowerCase())\n\t\t\t} else if (this.isFilterable) {\n\t\t\t\tconst filterable = lang.getTranslationText(b.text ?? b.label)\n\t\t\t\treturn filterable.toLowerCase().includes(this.filterString.toLowerCase())\n\t\t\t} else {\n\t\t\t\treturn true\n\t\t\t}\n\t\t})\n\t}\n\n\tprivate getFilterHeight(): number {\n\t\treturn this.isFilterable ? size.button_height + size.vpad_xs : 0\n\t}\n}\n\nexport function createDropdown({\n\tlazyButtons,\n\toverrideOrigin,\n\twidth,\n\twithBackground,\n}: {\n\tlazyButtons: lazy<ReadonlyArray<DropdownChildAttrs | null>>\n\toverrideOrigin?: (original: PosRect) => PosRect\n\twidth?: number\n\twithBackground?: boolean\n}): ClickHandler {\n\treturn createAsyncDropdown({ lazyButtons: async () => lazyButtons(), overrideOrigin, width, withBackground })\n}\n\nexport function createAsyncDropdown({\n\tlazyButtons,\n\toverrideOrigin,\n\twidth = 200,\n\twithBackground = false,\n\tonClose = undefined,\n}: {\n\tlazyButtons: lazyAsync<ReadonlyArray<DropdownChildAttrs | null>>\n\toverrideOrigin?: (original: PosRect) => PosRect\n\twidth?: number\n\twithBackground?: boolean\n\tonClose?: Thunk\n}): ClickHandler {\n\t// not all browsers have the actual button as e.currentTarget, but all of them send it as a second argument (see https://github.com/tutao/tutanota/issues/1110)\n\treturn (_, dom) => {\n\t\tconst originalButtons = lazyButtons()\n\t\tlet buttonsResolved = false\n\t\toriginalButtons.then(() => {\n\t\t\tbuttonsResolved = true\n\t\t})\n\t\tlet buttons = originalButtons\n\t\t// If the promise is pending and does not resolve in 100ms, show progress dialog\n\t\tbuttons = Promise.race([\n\t\t\toriginalButtons,\n\t\t\tPromise.all([delay(100), import(\"../dialogs/ProgressDialog.js\")]).then(([_, module]) => {\n\t\t\t\tif (!buttonsResolved) {\n\t\t\t\t\treturn module.showProgressDialog(\"loading_msg\", originalButtons)\n\t\t\t\t} else {\n\t\t\t\t\treturn originalButtons\n\t\t\t\t}\n\t\t\t}),\n\t\t])\n\t\tbuttons.then((buttons) => {\n\t\t\tlet dropdown = new Dropdown(() => buttons, width)\n\t\t\tif (onClose) {\n\t\t\t\tdropdown.setCloseHandler(() => {\n\t\t\t\t\tonClose()\n\t\t\t\t\tdropdown.close()\n\t\t\t\t})\n\t\t\t}\n\t\t\tlet buttonRect\n\t\t\tif (overrideOrigin) {\n\t\t\t\tbuttonRect = overrideOrigin(dom.getBoundingClientRect())\n\t\t\t} else {\n\t\t\t\t// When new instance is created and the old DOM is detached we may have incorrect positioning\n\t\t\t\tbuttonRect = dom.getBoundingClientRect()\n\t\t\t}\n\t\t\tdropdown.setOrigin(buttonRect)\n\t\t\tmodal.displayUnique(dropdown, withBackground)\n\t\t})\n\t}\n}\n\nexport function showDropdownAtPosition(\n\tbuttons: ReadonlyArray<DropdownChildAttrs>,\n\txPos: number,\n\tyPos: number,\n\tcloseHandler: Thunk = noOp,\n\twidth: number = 200,\n) {\n\tconst dropdown = new Dropdown(() => buttons, width)\n\tconst close = makeSingleUse<void>(() => {\n\t\tcloseHandler()\n\t\tdropdown.close()\n\t})\n\tdropdown.setOrigin(new DomRectReadOnlyPolyfilled(xPos, yPos, 0, 0))\n\tdropdown.setCloseHandler(close)\n\tmodal.displayUnique(dropdown, false)\n}\n\ntype AttachDropdownParams = {\n\tmainButtonAttrs: Omit<IconButtonAttrs, \"click\">\n\tchildAttrs: lazy<$Promisable<ReadonlyArray<DropdownChildAttrs | null>>>\n\t/** called to determine if the dropdown actually needs to be shown */\n\tshowDropdown?: lazy<boolean>\n\twidth?: number\n\toverrideOrigin?: (original: PosRect) => PosRect\n\tonClose?: Thunk\n}\n\n/**\n *\n * @param mainButtonAttrs the attributes of the main button. if showDropdown returns false, nothing will happen.\n * @param childAttrs the attributes of the children shown in the dropdown\n * @param showDropdown this will be checked before showing the dropdown\n * @param width width of the dropdown\n * @param onClose callback that is called when the dropdown closes\n * @returns {ButtonAttrs} modified mainButtonAttrs that shows a dropdown on click or\n * button doesn't do anything if showDropdown returns false\n */\nexport function attachDropdown({\n\tmainButtonAttrs,\n\tchildAttrs,\n\tshowDropdown = () => true,\n\twidth,\n\toverrideOrigin,\n\tonClose,\n}: AttachDropdownParams): IconButtonAttrs {\n\treturn Object.assign({}, mainButtonAttrs, {\n\t\tclick: (e: MouseEvent, dom: HTMLElement) => {\n\t\t\tif (showDropdown()) {\n\t\t\t\tconst dropDownFn = createAsyncDropdown({\n\t\t\t\t\tlazyButtons: () => Promise.resolve(childAttrs()),\n\t\t\t\t\toverrideOrigin,\n\t\t\t\t\twidth,\n\t\t\t\t\tonClose,\n\t\t\t\t})\n\t\t\t\tdropDownFn(e, dom)\n\t\t\t\te.stopPropagation()\n\t\t\t}\n\t\t},\n\t})\n}\n\nexport const DROPDOWN_MARGIN = 4\n\nexport function showDropdown(\n\torigin: PosRect,\n\tdomDropdown: HTMLElement,\n\tcontentHeight: number,\n\tcontentWidth: number,\n\tposition?: \"top\" | \"bottom\",\n): Promise<unknown> {\n\t// |------------------|    |------------------|    |------------------|    |------------------|\n\t// |                  |    |                  |    |                  |    |                  |\n\t// |      |-------|   |    |  |-------|       |    |  |-----------^   |    |  ^-----------|   |\n\t// |      | elem  |   |    |  | elem  |       |    |  | dropdown  |   |    |  | dropdown  |   |\n\t// |      |-------|   |    |  |-------|       |    |  |<----------|   |    |  |---------->|   |\n\t// |  |<----------|   |    |  |---------->|   |    |      |-------|   |    |  |-------|       |\n\t// |  | dropdown  |   |    |  | dropdown  |   |    |      | elem  |   |    |  | elem  |       |\n\t// /  |-----------V   |    |  V-----------|   |    |      |-------|   |    |  |-------|       |\n\t//\n\t// Decide were to open dropdown. We open the dropdown depending on the position of the touched element.\n\t// For that we devide the screen into four parts which are upper/lower and right/left part of the screen.\n\t// If the element is in the upper right part for example we try to open the dropdown below the touched element\n\t// starting from the right edge of the touched element.\n\t// If the element is in the lower left part of the screen we open the dropdown above the element\n\t// starting from the left edge of the touched element.\n\t// If the dropdown width does not fit from its calculated starting position we open it from the edge of the screen.\n\tconst leftEdgeOfElement = origin.left\n\tconst rightEdgeOfElement = origin.right\n\tconst bottomEdgeOfElement = origin.bottom\n\tconst topEdgeOfElement = origin.top\n\tconst upperSpace = origin.top - getSafeAreaInsetTop()\n\tconst lowerSpace = window.innerHeight - origin.bottom - getSafeAreaInsetBottom()\n\tconst leftSpace = origin.left\n\tconst rightSpace = window.innerWidth - origin.right\n\tlet transformOrigin = \"\"\n\tlet maxHeight\n\n\tconst showBelow = (!position && lowerSpace > upperSpace) || position === \"bottom\"\n\tif (showBelow) {\n\t\t// element is in the upper part of the screen, dropdown should be below the element\n\t\ttransformOrigin += \"top\"\n\t\tdomDropdown.style.top = bottomEdgeOfElement + \"px\"\n\t\tdomDropdown.style.bottom = \"\"\n\t\tmaxHeight = Math.min(contentHeight, lowerSpace)\n\t} else {\n\t\t// element is in the lower part of the screen, dropdown should be above the element\n\t\ttransformOrigin += \"bottom\"\n\t\tdomDropdown.style.top = \"\"\n\t\t// position bottom is defined from the bottom edge of the screen\n\t\t// and not like the viewport origin which starts at top/left\n\t\tdomDropdown.style.bottom = px(window.innerHeight - topEdgeOfElement)\n\t\tmaxHeight = Math.min(contentHeight, upperSpace)\n\t}\n\n\ttransformOrigin += leftSpace < rightSpace ? \" left\" : \" right\"\n\tconst dropdownMaxWidth = window.innerWidth - DROPDOWN_MARGIN * 2\n\tconst dropdownWidth = Math.max(contentWidth, domDropdown.getBoundingClientRect().width)\n\tlet width = dropdownWidth\n\tlet leftStyle: number | null = null\n\tlet rightStyle: number | null = null\n\n\tif (width >= dropdownMaxWidth) {\n\t\t// If the dropdown is wider than the viewport, it takes the entire width (- margins) and text is cut off\n\t\tdomDropdown.classList.remove(\"fit-content\")\n\t\tleftStyle = DROPDOWN_MARGIN\n\t\twidth = dropdownMaxWidth\n\t} else if (leftSpace < rightSpace) {\n\t\t// element is in the left part of the screen, dropdown should extend to the right from the element\n\t\tconst availableSpaceForDropdown = window.innerWidth - leftEdgeOfElement\n\t\tlet leftEdgeOfDropdown = leftEdgeOfElement\n\n\t\tif (availableSpaceForDropdown < dropdownWidth) {\n\t\t\t// If the dropdown does not fit, we shift it by the required amount\n\t\t\tconst shiftForDropdown = leftEdgeOfDropdown + dropdownWidth - window.innerWidth + DROPDOWN_MARGIN\n\t\t\tleftEdgeOfDropdown = leftEdgeOfElement - shiftForDropdown\n\t\t}\n\n\t\tleftStyle = Math.max(DROPDOWN_MARGIN, leftEdgeOfDropdown)\n\t} else {\n\t\t// element is in the right part of the screen, dropdown should extend to the left from the element\n\t\tconst availableSpaceForDropdown = origin.right\n\t\tlet rightEdgeOfDropdown = rightEdgeOfElement\n\n\t\tif (availableSpaceForDropdown < dropdownWidth) {\n\t\t\t// If the dropdown does not fit, we shift it by the required amount. If it still does not fit, we reduce the width.\n\t\t\tconst shiftForDropdown = dropdownWidth - rightEdgeOfDropdown + DROPDOWN_MARGIN\n\t\t\trightEdgeOfDropdown = rightEdgeOfElement + shiftForDropdown\n\t\t}\n\n\t\t// position right is defined from the right edge of the screen\n\t\t// and not like the viewport origin which starts at top/left\n\t\trightStyle = Math.max(DROPDOWN_MARGIN, window.innerWidth - rightEdgeOfDropdown)\n\t}\n\n\tdomDropdown.style.left = leftStyle != null ? px(leftStyle) : \"\"\n\tdomDropdown.style.right = rightStyle != null ? px(rightStyle) : \"\"\n\tdomDropdown.style.width = px(width)\n\tdomDropdown.style.height = px(maxHeight)\n\tdomDropdown.style.transformOrigin = transformOrigin\n\treturn animations.add(domDropdown, [opacity(0, 1, true), transform(TransformEnum.Scale, 0.5, 1)], {\n\t\teasing: ease.out,\n\t})\n}\n","import m, { Children, ClassComponent, Vnode } from \"mithril\"\nimport { TextField } from \"./TextField.js\"\nimport { createDropdown } from \"./Dropdown.js\"\nimport type { AllIcons } from \"./Icon\"\nimport type { lazy } from \"@tutao/tutanota-utils\"\nimport { lazyStringValue, noOp } from \"@tutao/tutanota-utils\"\nimport { lang, TranslationKey, MaybeTranslation } from \"../../misc/LanguageViewModel\"\nimport { BootIcons } from \"./icons/BootIcons\"\nimport { ClickHandler, getOperatingClasses } from \"./GuiUtils\"\nimport { assertMainOrNode } from \"../../api/common/Env\"\nimport { IconButton } from \"./IconButton.js\"\nimport { ButtonSize } from \"./ButtonSize.js\"\n\nassertMainOrNode()\nexport type SelectorItem<T> = {\n\tname: string\n\tvalue: T\n\tselectable?: boolean\n\ticon?: AllIcons\n\tindentationLevel?: number\n}\nexport type SelectorItemList<T> = ReadonlyArray<SelectorItem<T>>\n\nexport interface DropDownSelectorAttrs<T> {\n\tlabel: MaybeTranslation\n\titems: SelectorItemList<T>\n\tselectedValue: T | null\n\t/** Override what is displayed for the selected value in the text field (but not in the dropdown) */\n\tselectedValueDisplay?: string\n\t/**\n\t * The handler is invoked with the new selected value. The displayed selected value is not changed automatically,\n\t * but the handler is responsible for updating this DropDownSelector. The value is updated immediately, if no selectionChangedHandler is provided\n\t */\n\tselectionChangedHandler?: ((newValue: T) => unknown) | null\n\thelpLabel?: lazy<Children>\n\tdropdownWidth?: number\n\ticon?: AllIcons\n\tdisabled?: boolean\n\tclass?: string\n\tstyle?: Record<string, any> // Temporary, do not use\n\tdoShowBorder?: boolean | null\n}\n\nexport class DropDownSelector<T> implements ClassComponent<DropDownSelectorAttrs<T>> {\n\tview(vnode: Vnode<DropDownSelectorAttrs<T>>): Children {\n\t\tconst a = vnode.attrs\n\t\treturn m(TextField, {\n\t\t\tlabel: a.label,\n\t\t\tvalue: this.valueToText(a, a.selectedValue) || \"\",\n\t\t\thelpLabel: a.helpLabel,\n\t\t\tisReadOnly: true,\n\t\t\tonclick: a.disabled ? noOp : this.createDropdown(a),\n\t\t\tclass: \"click \" + (a.class == null ? \"mt\" : a.class) + \" \" + getOperatingClasses(a.disabled),\n\t\t\tstyle: a.style,\n\t\t\tinjectionsRight: () =>\n\t\t\t\ta.disabled\n\t\t\t\t\t? null\n\t\t\t\t\t: // This whole thing with the button is not ideal. We shouldn't have a proper button with its own state layer, we should have the whole\n\t\t\t\t\t  // selector be interactive. Just putting an icon here doesn't work either because the selector disappears from tabindex even if you set it\n\t\t\t\t\t  // explicitly (at least in FF).\n\t\t\t\t\t  // Ideally we should also set correct role (\"option\") and highlight only parts of what is not text field (without help text in the bottom.\n\t\t\t\t\t  // We could hack some of this in here, but we should probably redo it from scratch with the right HTML structure.\n\t\t\t\t\t  m(\n\t\t\t\t\t\t\t\".flex.items-center.justify-center\",\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\t\twidth: \"30px\",\n\t\t\t\t\t\t\t\t\theight: \"30px\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tm(IconButton, {\n\t\t\t\t\t\t\t\ticon: a.icon ? a.icon : BootIcons.Expand,\n\t\t\t\t\t\t\t\ttitle: \"show_action\",\n\t\t\t\t\t\t\t\tclick: a.disabled ? noOp : this.createDropdown(a),\n\t\t\t\t\t\t\t\tsize: ButtonSize.Compact,\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t  ),\n\t\t\tdoShowBorder: a.doShowBorder,\n\t\t})\n\t}\n\n\tcreateDropdown(a: DropDownSelectorAttrs<T>): ClickHandler {\n\t\treturn createDropdown({\n\t\t\tlazyButtons: () => {\n\t\t\t\treturn a.items\n\t\t\t\t\t.filter((item) => item.selectable !== false)\n\t\t\t\t\t.map((item) => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tlabel: lang.makeTranslation(item.name, item.name),\n\t\t\t\t\t\t\tclick: () => {\n\t\t\t\t\t\t\t\ta.selectionChangedHandler?.(item.value)\n\t\t\t\t\t\t\t\tm.redraw()\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tselected: a.selectedValue === item.value,\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t},\n\t\t\twidth: a.dropdownWidth,\n\t\t})\n\t}\n\n\tvalueToText(a: DropDownSelectorAttrs<T>, value: T | null): string | null {\n\t\tif (a.selectedValueDisplay) {\n\t\t\treturn a.selectedValueDisplay\n\t\t}\n\n\t\tconst selectedItem = a.items.find((item) => item.value === a.selectedValue)\n\t\tif (selectedItem) {\n\t\t\treturn selectedItem.name\n\t\t} else {\n\t\t\tconsole.log(`Dropdown ${lang.getTranslationText(a.label)} couldn't find element for value: ${String(JSON.stringify(value))}`)\n\t\t\treturn null\n\t\t}\n\t}\n}\n","import type { Country } from \"../../api/common/CountryList\"\nimport { Countries } from \"../../api/common/CountryList\"\nimport type { InfoLink, TranslationKey, MaybeTranslation } from \"../../misc/LanguageViewModel\"\nimport { lang } from \"../../misc/LanguageViewModel\"\nimport { ButtonColor } from \"./Button.js\"\nimport { Icons } from \"./icons/Icons\"\nimport type { DropdownChildAttrs } from \"./Dropdown.js\"\nimport { createAsyncDropdown } from \"./Dropdown.js\"\nimport type { $Promisable, lazy, MaybeLazy } from \"@tutao/tutanota-utils\"\nimport { assertNotNull, lazyMemoized, resolveMaybeLazy } from \"@tutao/tutanota-utils\"\nimport { Dialog } from \"./Dialog\"\nimport { ProgrammingError } from \"../../api/common/error/ProgrammingError\"\nimport m, { Children } from \"mithril\"\nimport { DropDownSelector } from \"./DropDownSelector.js\"\nimport { IconButtonAttrs } from \"./IconButton.js\"\nimport { LoginController } from \"../../api/main/LoginController.js\"\nimport { client } from \"../../misc/ClientDetector.js\"\nimport type { Contact } from \"../../api/entities/tutanota/TypeRefs.js\"\nimport { isColorLight } from \"./Color.js\"\n\nexport const enum DropType {\n\tExternalFile = \"ExternalFile\",\n\tMail = \"Mail\",\n}\n\nexport type MailDropData = {\n\tdropType: DropType.Mail\n\tmailId: string\n}\nexport type FileDropData = {\n\tdropType: DropType.ExternalFile\n\tfiles: Array<File>\n}\n\nexport type DropData = FileDropData | MailDropData\n\nexport type DropHandler = (dropData: DropData) => void\n// not all browsers have the actual button as e.currentTarget, but all of them send it as a second argument (see https://github.com/tutao/tutanota/issues/1110)\nexport type ClickHandler = (event: MouseEvent, dom: HTMLElement) => void\n\n// lazy because of global dependencies\nconst dropdownCountries = lazyMemoized(() => Countries.map((c) => ({ value: c, name: c.n })))\n\nexport function renderCountryDropdown(params: {\n\tselectedCountry: Country | null\n\tonSelectionChanged: (country: Country) => void\n\thelpLabel?: lazy<string>\n\tlabel?: MaybeTranslation\n}): Children {\n\treturn m(DropDownSelector, {\n\t\tlabel: params.label ?? \"invoiceCountry_label\",\n\t\thelpLabel: params.helpLabel,\n\t\titems: [\n\t\t\t...dropdownCountries(),\n\t\t\t{\n\t\t\t\tvalue: null,\n\t\t\t\tname: lang.get(\"choose_label\"),\n\t\t\t},\n\t\t],\n\t\tselectedValue: params.selectedCountry,\n\t\tselectionChangedHandler: params.onSelectionChanged,\n\t})\n}\n\nexport function createMoreActionButtonAttrs(\n\tlazyChildren: MaybeLazy<$Promisable<ReadonlyArray<DropdownChildAttrs | null>>>,\n\tdropdownWidth?: number,\n): IconButtonAttrs {\n\treturn {\n\t\ttitle: \"more_label\",\n\t\tcolors: ButtonColor.Nav,\n\t\ticon: Icons.More,\n\t\tclick: createAsyncDropdown({\n\t\t\twidth: dropdownWidth,\n\t\t\tlazyButtons: async () => resolveMaybeLazy(lazyChildren),\n\t\t}),\n\t}\n}\n\ntype Confirmation = {\n\tconfirmed: (_: () => unknown) => Confirmation\n\tcancelled: (_: () => unknown) => Confirmation\n\tresult: Promise<boolean>\n}\n\n/**\n * Wrapper around Dialog.confirm\n *\n * call getConfirmation(...).confirmed(() => doStuff()) or getConfirmation(...).cancelled(() => doStuff())\n * to handle confirmation or termination\n * @param message\n * @param confirmMessage\n * @returns {Confirmation}\n */\nexport function getConfirmation(message: MaybeTranslation, confirmMessage: TranslationKey = \"ok_action\"): Confirmation {\n\tconst confirmationPromise = Dialog.confirm(message, confirmMessage)\n\tconst confirmation: Confirmation = {\n\t\tconfirmed(action) {\n\t\t\tconfirmationPromise.then((ok) => {\n\t\t\t\tif (ok) {\n\t\t\t\t\taction()\n\t\t\t\t}\n\t\t\t})\n\t\t\treturn confirmation\n\t\t},\n\n\t\tcancelled(action) {\n\t\t\tconfirmationPromise.then((ok) => {\n\t\t\t\tif (!ok) {\n\t\t\t\t\taction()\n\t\t\t\t}\n\t\t\t})\n\t\t\treturn confirmation\n\t\t},\n\n\t\tresult: confirmationPromise,\n\t}\n\treturn confirmation\n}\n\n/**\n * Get either the coord of a mouseevent or the coord of the first touch of a touch event\n * @param event\n * @returns {{x: number, y: number}}\n */\nexport function getCoordsOfMouseOrTouchEvent(event: MouseEvent | TouchEvent): {\n\tx: number\n\ty: number\n} {\n\treturn event instanceof MouseEvent\n\t\t? {\n\t\t\t\tx: event.clientX,\n\t\t\t\ty: event.clientY,\n\t\t  }\n\t\t: {\n\t\t\t\t// Why would touches be empty?\n\t\t\t\tx: assertNotNull(event.touches.item(0)).clientX,\n\t\t\t\ty: assertNotNull(event.touches.item(0)).clientY,\n\t\t  }\n}\n\nexport function makeListSelectionChangedScrollHandler(scrollDom: HTMLElement, entryHeight: number, getSelectedEntryIndex: lazy<number>): () => void {\n\treturn function () {\n\t\tscrollListDom(scrollDom, entryHeight, getSelectedEntryIndex())\n\t}\n}\n\nexport function scrollListDom(scrollDom: HTMLElement, entryHeight: number, selectedIndex: number) {\n\tconst scrollWindowHeight = scrollDom.getBoundingClientRect().height\n\tconst scrollOffset = scrollDom.scrollTop\n\t// Actual position in the list\n\tconst selectedTop = entryHeight * selectedIndex\n\tconst selectedBottom = selectedTop + entryHeight\n\t// Relative to the top of the scroll window\n\tconst selectedRelativeTop = selectedTop - scrollOffset\n\tconst selectedRelativeBottom = selectedBottom - scrollOffset\n\n\t// clamp the selected item to stay between the top and bottom of the scroll window\n\tif (selectedRelativeTop < 0) {\n\t\tscrollDom.scrollTop = selectedTop\n\t} else if (selectedRelativeBottom > scrollWindowHeight) {\n\t\tscrollDom.scrollTop = selectedBottom - scrollWindowHeight\n\t}\n}\n\n/**\n * Executes the passed function if the user is allowed to see `tuta.com` links.\n * @param logins LoginController to ask about login information\n * @param linkId\n * @param render receives the resolved link\n * @returns {Children|null}\n */\nexport function ifAllowedTutaLinks(logins: LoginController, linkId: InfoLink, render: (linkId: InfoLink) => Children): Children | null {\n\t// this is currently in gui-base, preventing us from accessing logins ourselves.\n\t// may be subject to change\n\tif (canSeeTutaLinks(logins)) {\n\t\treturn render(linkId)\n\t}\n\treturn null\n}\n\n/**\n * Check if the user is allowed to see `tutanota.com` links or other major references to Tutanota.\n *\n * If the user is on whitelabel and they are not global admin, information like this should not be shown.\n * @param logins LoginController to ask about login information\n * @returns true if the user should see tutanota links or false if they should not\n */\nexport function canSeeTutaLinks(logins: LoginController): boolean {\n\treturn !logins.isWhitelabel() || logins.getUserController().isGlobalAdmin()\n}\n\nexport type MousePosAndBounds = {\n\tx: number\n\ty: number\n\ttargetWidth: number\n\ttargetHeight: number\n}\n\n/**\n * Get the mouse's x and y coordinates relative to the target, and the width and height of the target.\n * The currentTarget must be a HTMLElement or this throws an error\n * @param mouseEvent\n */\nexport function getPosAndBoundsFromMouseEvent({ currentTarget, x, y }: MouseEvent): MousePosAndBounds {\n\tif (currentTarget instanceof HTMLElement) {\n\t\tconst { height, width, left, top } = currentTarget.getBoundingClientRect()\n\t\treturn {\n\t\t\ttargetHeight: height,\n\t\t\ttargetWidth: width,\n\t\t\tx: x - left,\n\t\t\ty: y - top,\n\t\t}\n\t} else {\n\t\tthrow new ProgrammingError(\"Target is not a HTMLElement\")\n\t}\n}\n\n/** render two children either next to each other (on desktop devices) or above each other (mobile) */\nexport function renderTwoColumnsIfFits(left: Children, right: Children): Children {\n\tif (client.isMobileDevice()) {\n\t\treturn m(\".flex.col\", [m(\".flex\", left), m(\".flex\", right)])\n\t} else {\n\t\treturn m(\".flex\", [m(\".flex.flex-half.pr-s\", left), m(\".flex.flex-half.pl-s\", right)])\n\t}\n}\n\n/** Encode a SVG element into a CSS readable string */\nexport function encodeSVG(svg: string): string {\n\treturn (\n\t\t\"data:image/svg+xml;utf8,\" +\n\t\tsvg\n\t\t\t// the svg data string must contain ' instead of \" to avoid display errors in Edge (probably not relevant anymore but better be safe)\n\t\t\t.replace(/\"/g, \"'\")\n\t\t\t// '#' character is reserved in URL and FF won't display SVG otherwise\n\t\t\t.replace(/#/g, \"%23\")\n\t\t\t/// fold consecutive whitespace into a single one (useful for tests)\n\t\t\t.replace(/\\s+/g, \" \")\n\t)\n}\n\n// Returns the disabled style CSS classes seperated by spaces if `isDisabled` is true. A value of `null` or `undefined` is treated as `false`.\nexport function getOperatingClasses(isDisabled: boolean | null | undefined, cursorClass?: string): string {\n\tconst cursorClassOrDefault = cursorClass ? cursorClass : \"\"\n\treturn isDisabled ? \"disabled click-disabled\" : cursorClassOrDefault\n}\n\n/* Returns whether the change in a scroll position should be animated */\nexport function getIfLargeScroll(oldPosition: number | null, newPosition: number | null): boolean {\n\tif (oldPosition === null || newPosition === null) return false\n\tconst difference = Math.abs(oldPosition - newPosition)\n\treturn difference > 10\n}\n\nexport function getContactTitle(contact: Contact) {\n\tconst title = contact.title ? `${contact.title} ` : \"\"\n\tconst middleName = contact.middleName != null ? ` ${contact.middleName} ` : \" \"\n\tconst fullName = `${contact.firstName}${middleName}${contact.lastName} `\n\tconst suffix = contact.nameSuffix ?? \"\"\n\treturn (title + fullName + suffix).trim()\n}\n\nexport function colorForBg(color: string): string {\n\treturn isColorLight(color) ? \"black\" : \"white\"\n}\n","import m, { Children, ClassComponent, CVnode } from \"mithril\"\nimport { px, size } from \"../size\"\nimport { DefaultAnimationTime } from \"../animation/Animations\"\nimport { theme } from \"../theme\"\nimport type { MaybeTranslation } from \"../../misc/LanguageViewModel\"\nimport { lang } from \"../../misc/LanguageViewModel\"\nimport type { lazy } from \"@tutao/tutanota-utils\"\nimport { isKeyPressed, keyHandler, useKeyHandler } from \"../../misc/KeyManager\"\nimport { Keys, TabIndex } from \"../../api/common/TutanotaConstants\"\nimport { ClickHandler, getOperatingClasses } from \"./GuiUtils\"\nimport { AriaPopupType } from \"../AriaUtils.js\"\n\nexport type TextFieldAttrs = {\n\tid?: string\n\tlabel: MaybeTranslation\n\tvalue: string\n\tautocompleteAs?: Autocomplete\n\tautocapitalize?: Autocapitalize\n\ttype?: TextFieldType\n\thasPopup?: AriaPopupType\n\thelpLabel?: lazy<Children> | null\n\talignRight?: boolean\n\tinjectionsLeft?: lazy<Children>\n\t// only used by the BubbleTextField (-> uses old TextField) to display bubbles and out of office notification\n\tinjectionsRight?: lazy<Children>\n\tkeyHandler?: keyHandler\n\tonDomInputCreated?: (dom: HTMLInputElement) => void\n\t// interceptor used by the BubbleTextField to react on certain keys\n\tonfocus?: (dom: HTMLElement, input: HTMLInputElement) => unknown\n\tonblur?: (...args: Array<any>) => any\n\tmaxWidth?: number\n\tclass?: string\n\tstyle?: Record<string, any> //Temporary, Do not use\n\tdisabled?: boolean\n\t// Creates a dummy TextField without interactively & disabled styling\n\tisReadOnly?: boolean\n\toninput?: (value: string, input: HTMLInputElement) => unknown\n\tonclick?: ClickHandler\n\tdoShowBorder?: boolean | null\n\tfontSize?: string\n\tmin?: number\n\tmax?: number\n}\n\nexport const enum TextFieldType {\n\tText = \"text\",\n\tEmail = \"email\",\n\t/** @deprecated Prefer the `PasswordField` component over using this type with `TextField` */\n\tPassword = \"password\",\n\tArea = \"area\",\n\tNumber = \"number\",\n\tUrl = \"url\",\n\tDate = \"date\",\n\tTime = \"time\",\n}\n\n// relevant subset of possible values for the autocomplete html field\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete\nexport const enum Autocomplete {\n\toff = \"off\",\n\temail = \"email\",\n\tusername = \"username\",\n\tnewPassword = \"new-password\",\n\tcurrentPassword = \"current-password\",\n\toneTimeCode = \"one-time-code\",\n\tccNumber = \"cc-number\",\n\tccCsc = \"cc-csc\",\n\tccExp = \"cc-exp\",\n}\n\n// relevant subset of possible values for the autocapitalize html field\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/autocapitalize\nexport const enum Autocapitalize {\n\tnone = \"none\",\n}\n\nexport const inputLineHeight: number = size.font_size_base + 8\nconst inputMarginTop = size.font_size_small + size.hpad_small + 3\n\n// this is not always correct because font size can be bigger/smaller, and we ideally should take that into account\nconst baseLabelPosition = 21\n// it should fit\n// compact button + 1 px border + 1 px padding to keep things centered = 32\n// 24px line-height + 12px label + some space between them = 36 + ?\nconst minInputHeight = 46\n\nexport class TextField implements ClassComponent<TextFieldAttrs> {\n\tactive: boolean\n\tonblur: EventListener | null = null\n\tdomInput!: HTMLInputElement\n\t_domWrapper!: HTMLElement\n\tprivate _domLabel!: HTMLElement\n\tprivate _domInputWrapper!: HTMLElement\n\tprivate _didAutofill!: boolean\n\n\tconstructor() {\n\t\tthis.active = false\n\t}\n\n\tview(vnode: CVnode<TextFieldAttrs>): Children {\n\t\tconst a = vnode.attrs\n\t\tconst maxWidth = a.maxWidth\n\t\tconst labelBase = !this.active && a.value === \"\" && !a.isReadOnly && !this._didAutofill && !a.injectionsLeft\n\t\tconst labelTransitionSpeed = DefaultAnimationTime / 2\n\t\tconst doShowBorder = a.doShowBorder !== false\n\t\tconst borderWidth = this.active ? \"2px\" : \"1px\"\n\t\tconst borderColor = this.active ? theme.content_accent : theme.content_border\n\t\treturn m(\n\t\t\t\".text-field.rel.overflow-hidden\",\n\t\t\t{\n\t\t\t\tid: vnode.attrs.id,\n\t\t\t\toncreate: (vnode) => (this._domWrapper = vnode.dom as HTMLElement),\n\t\t\t\tonclick: (e: MouseEvent) => (a.onclick ? a.onclick(e, this._domInputWrapper) : this.focus(e, a)),\n\t\t\t\t\"aria-haspopup\": a.hasPopup,\n\t\t\t\tclass: a.class != null ? a.class : \"pt\" + \" \" + getOperatingClasses(a.disabled),\n\t\t\t\tstyle: maxWidth\n\t\t\t\t\t? {\n\t\t\t\t\t\t\tmaxWidth: px(maxWidth),\n\t\t\t\t\t\t\t...a.style,\n\t\t\t\t\t  }\n\t\t\t\t\t: { ...a.style },\n\t\t\t},\n\t\t\t[\n\t\t\t\tm(\n\t\t\t\t\t\"label.abs.text-ellipsis.noselect.z1.i.pr-s\",\n\t\t\t\t\t{\n\t\t\t\t\t\t\"aria-hidden\": \"true\",\n\t\t\t\t\t\tclass: this.active ? \"content-accent-fg\" : \"\" + \" \" + getOperatingClasses(a.disabled),\n\t\t\t\t\t\toncreate: (vnode) => {\n\t\t\t\t\t\t\tthis._domLabel = vnode.dom as HTMLElement\n\t\t\t\t\t\t},\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\tfontSize: `${labelBase ? size.font_size_base : size.font_size_small}px`,\n\t\t\t\t\t\t\ttransform: `translateY(${labelBase ? baseLabelPosition : 0}px)`,\n\t\t\t\t\t\t\ttransition: `transform ${labelTransitionSpeed}ms ease-out, font-size ${labelTransitionSpeed}ms  ease-out`,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tlang.getTranslationText(a.label),\n\t\t\t\t),\n\t\t\t\tm(\".flex.flex-column\", [\n\t\t\t\t\t// another wrapper to fix IE 11 min-height bug https://github.com/philipwalton/flexbugs#3-min-height-on-a-flex-container-wont-apply-to-its-flex-items\n\t\t\t\t\tm(\n\t\t\t\t\t\t\".flex.items-end.flex-wrap\",\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// .flex-wrap\n\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\t\"min-height\": px(minInputHeight),\n\t\t\t\t\t\t\t\t// 2 px border\n\t\t\t\t\t\t\t\t\"padding-bottom\": this.active ? px(0) : px(1),\n\t\t\t\t\t\t\t\t\"border-bottom\": doShowBorder ? `${borderWidth} solid ${borderColor}` : \"\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\ta.injectionsLeft ? a.injectionsLeft() : null, // additional wrapper element for bubble input field. input field should always be in one line with right injections\n\t\t\t\t\t\t\tm(\n\t\t\t\t\t\t\t\t\".inputWrapper.flex-space-between.items-end\",\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\t\t\tminHeight: px(minInputHeight - 2), // minus padding\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\toncreate: (vnode) => (this._domInputWrapper = vnode.dom as HTMLElement),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\ta.type !== TextFieldType.Area ? this._getInputField(a) : this._getTextArea(a),\n\t\t\t\t\t\t\t\t\ta.injectionsRight\n\t\t\t\t\t\t\t\t\t\t? m(\n\t\t\t\t\t\t\t\t\t\t\t\t\".flex-end.items-center\",\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle: { minHeight: px(minInputHeight - 2) },\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\ta.injectionsRight(),\n\t\t\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t\t\t\t: null,\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t],\n\t\t\t\t\t),\n\t\t\t\t]),\n\t\t\t\ta.helpLabel\n\t\t\t\t\t? m(\n\t\t\t\t\t\t\t\"small.noselect\",\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tonclick: (e: MouseEvent) => {\n\t\t\t\t\t\t\t\t\te.stopPropagation()\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\ta.helpLabel(),\n\t\t\t\t\t  )\n\t\t\t\t\t: [],\n\t\t\t],\n\t\t)\n\t}\n\n\t_getInputField(a: TextFieldAttrs): Children {\n\t\tif (a.isReadOnly) {\n\t\t\treturn m(\n\t\t\t\t\".text-break.selectable\",\n\t\t\t\t{\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tmarginTop: px(inputMarginTop),\n\t\t\t\t\t\tlineHeight: px(inputLineHeight),\n\t\t\t\t\t},\n\t\t\t\t\t\"data-testid\": `tf:${lang.getTestId(a.label)}`,\n\t\t\t\t},\n\t\t\t\ta.value,\n\t\t\t)\n\t\t} else {\n\t\t\t// Due to modern browser's 'smart' password managers that try to autofill everything\n\t\t\t// that remotely resembles a password field, we prepend invisible inputs to password fields\n\t\t\t// that shouldn't be autofilled.\n\t\t\t// since the autofill algorithm looks at inputs that come before and after the password field we need\n\t\t\t// three dummies.\n\t\t\tconst autofillGuard: Children =\n\t\t\t\ta.autocompleteAs === Autocomplete.off\n\t\t\t\t\t? [\n\t\t\t\t\t\t\tm(\"input.abs\", {\n\t\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\t\topacity: \"0\",\n\t\t\t\t\t\t\t\t\theight: \"0\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\ttabIndex: TabIndex.Programmatic,\n\t\t\t\t\t\t\t\ttype: TextFieldType.Text,\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tm(\"input.abs\", {\n\t\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\t\topacity: \"0\",\n\t\t\t\t\t\t\t\t\theight: \"0\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\ttabIndex: TabIndex.Programmatic,\n\t\t\t\t\t\t\t\ttype: TextFieldType.Password,\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tm(\"input.abs\", {\n\t\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\t\topacity: \"0\",\n\t\t\t\t\t\t\t\t\theight: \"0\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\ttabIndex: TabIndex.Programmatic,\n\t\t\t\t\t\t\t\ttype: TextFieldType.Text,\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t  ]\n\t\t\t\t\t: []\n\t\t\treturn m(\n\t\t\t\t\".flex-grow.rel\",\n\t\t\t\tautofillGuard.concat([\n\t\t\t\t\tm(\"input.input\" + (a.alignRight ? \".right\" : \"\"), {\n\t\t\t\t\t\tautocomplete: a.autocompleteAs ?? \"\",\n\t\t\t\t\t\tautocapitalize: a.autocapitalize,\n\t\t\t\t\t\ttype: a.type,\n\t\t\t\t\t\tmin: a.min,\n\t\t\t\t\t\tmax: a.max,\n\t\t\t\t\t\t\"aria-label\": lang.getTranslationText(a.label),\n\t\t\t\t\t\tdisabled: a.disabled,\n\t\t\t\t\t\tclass: getOperatingClasses(a.disabled) + \" text\",\n\t\t\t\t\t\toncreate: (vnode) => {\n\t\t\t\t\t\t\tthis.domInput = vnode.dom as HTMLInputElement\n\t\t\t\t\t\t\ta.onDomInputCreated?.(this.domInput)\n\t\t\t\t\t\t\tthis.domInput.value = a.value\n\t\t\t\t\t\t\tif (a.type !== TextFieldType.Area) {\n\t\t\t\t\t\t\t\t;(vnode.dom as HTMLElement).addEventListener(\"animationstart\", (e: AnimationEvent) => {\n\t\t\t\t\t\t\t\t\tif (e.animationName === \"onAutoFillStart\") {\n\t\t\t\t\t\t\t\t\t\tthis._didAutofill = true\n\t\t\t\t\t\t\t\t\t\tm.redraw()\n\t\t\t\t\t\t\t\t\t} else if (e.animationName === \"onAutoFillCancel\") {\n\t\t\t\t\t\t\t\t\t\tthis._didAutofill = false\n\t\t\t\t\t\t\t\t\t\tm.redraw()\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonfocus: (e: FocusEvent) => {\n\t\t\t\t\t\t\tthis.focus(e, a)\n\t\t\t\t\t\t\ta.onfocus?.(this._domWrapper, this.domInput)\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonblur: (e: FocusEvent) => this.blur(e, a),\n\t\t\t\t\t\tonkeydown: (e: KeyboardEvent) => {\n\t\t\t\t\t\t\tconst handled = useKeyHandler(e, a.keyHandler)\n\t\t\t\t\t\t\tif (!isKeyPressed(e.key, Keys.F1, Keys.TAB, Keys.ESC)) {\n\t\t\t\t\t\t\t\t// When we are in a text field we don't want keys propagated up to act as hotkeys\n\t\t\t\t\t\t\t\te.stopPropagation()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn handled\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonupdate: () => {\n\t\t\t\t\t\t\t// only change the value if the value has changed otherwise the cursor in Safari and in the iOS App cannot be positioned.\n\t\t\t\t\t\t\tif (this.domInput.value !== a.value) {\n\t\t\t\t\t\t\t\tthis.domInput.value = a.value\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\toninput: () => {\n\t\t\t\t\t\t\ta.oninput?.(this.domInput.value, this.domInput)\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonremove: () => {\n\t\t\t\t\t\t\t// We clean up any value that might still be in DOM e.g. password\n\t\t\t\t\t\t\tif (this.domInput) this.domInput.value = \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\tmaxWidth: a.maxWidth,\n\t\t\t\t\t\t\tminWidth: px(20),\n\t\t\t\t\t\t\t// fix for edge browser. buttons are cut off in small windows otherwise\n\t\t\t\t\t\t\tlineHeight: px(inputLineHeight),\n\t\t\t\t\t\t\tfontSize: a.fontSize,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"data-testid\": `tf:${lang.getTestId(a.label)}`,\n\t\t\t\t\t}),\n\t\t\t\t]),\n\t\t\t)\n\t\t}\n\t}\n\n\t_getTextArea(a: TextFieldAttrs): Children {\n\t\tif (a.isReadOnly) {\n\t\t\treturn m(\n\t\t\t\t\".text-prewrap.text-break.selectable\",\n\t\t\t\t{\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tmarginTop: px(inputMarginTop),\n\t\t\t\t\t\tlineHeight: px(inputLineHeight),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\ta.value,\n\t\t\t)\n\t\t} else {\n\t\t\treturn m(\"textarea.input-area.text-pre\", {\n\t\t\t\t\"aria-label\": lang.getTranslationText(a.label),\n\t\t\t\tdisabled: a.disabled,\n\t\t\t\tautocapitalize: a.autocapitalize,\n\t\t\t\tclass: getOperatingClasses(a.disabled) + \" text\",\n\t\t\t\toncreate: (vnode) => {\n\t\t\t\t\tthis.domInput = vnode.dom as HTMLInputElement\n\t\t\t\t\tthis.domInput.value = a.value\n\t\t\t\t\tthis.domInput.style.height = px(Math.max(a.value.split(\"\\n\").length, 1) * inputLineHeight) // display all lines on creation of text area\n\t\t\t\t},\n\t\t\t\tonfocus: (e: FocusEvent) => this.focus(e, a),\n\t\t\t\tonblur: (e: FocusEvent) => this.blur(e, a),\n\t\t\t\tonkeydown: (e: KeyboardEvent) => useKeyHandler(e, a.keyHandler),\n\t\t\t\toninput: () => {\n\t\t\t\t\tthis.domInput.style.height = \"0px\"\n\t\t\t\t\tthis.domInput.style.height = px(this.domInput.scrollHeight)\n\t\t\t\t\ta.oninput?.(this.domInput.value, this.domInput)\n\t\t\t\t},\n\t\t\t\tonupdate: () => {\n\t\t\t\t\t// only change the value if the value has changed otherwise the cursor in Safari and in the iOS App cannot be positioned.\n\t\t\t\t\tif (this.domInput.value !== a.value) {\n\t\t\t\t\t\tthis.domInput.value = a.value\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tstyle: {\n\t\t\t\t\tmarginTop: px(inputMarginTop),\n\t\t\t\t\tlineHeight: px(inputLineHeight),\n\t\t\t\t\tminWidth: px(20), // fix for edge browser. buttons are cut off in small windows otherwise\n\t\t\t\t\tfontSize: a.fontSize,\n\t\t\t\t},\n\t\t\t})\n\t\t}\n\t}\n\n\tfocus(e: Event, a: TextFieldAttrs) {\n\t\tif (!this.active && !a.disabled && !a.isReadOnly) {\n\t\t\tthis.active = true\n\t\t\tthis.domInput.focus()\n\n\t\t\tthis._domWrapper.classList.add(\"active\")\n\t\t}\n\t}\n\n\tblur(e: Event, a: TextFieldAttrs) {\n\t\tthis._domWrapper.classList.remove(\"active\")\n\t\tthis.active = false\n\t\tif (a.onblur instanceof Function) a.onblur(e)\n\t}\n\n\tisEmpty(value: string): boolean {\n\t\treturn value === \"\"\n\t}\n}\n","import m, { Children, Component, Vnode } from \"mithril\"\nimport type { DialogHeaderBarAttrs } from \"./DialogHeaderBar\"\nimport { DialogHeaderBar } from \"./DialogHeaderBar\"\nimport { px } from \"../size\"\nimport type { MaybeLazy } from \"@tutao/tutanota-utils\"\nimport { resolveMaybeLazy } from \"@tutao/tutanota-utils\"\nimport Stream from \"mithril/stream\"\n\nexport type DialogInjectionRightAttrs<T extends object> = {\n\tvisible: Stream<boolean>\n\theaderAttrs: MaybeLazy<DialogHeaderBarAttrs>\n\tcomponent: Class<Component<T>>\n\tcomponentAttrs: T\n}\n\n/**\n * injects additional content on the right of a dialog\n */\nexport class DialogInjectionRight<T extends object> implements Component<DialogInjectionRightAttrs<T>> {\n\tview({ attrs }: Vnode<DialogInjectionRightAttrs<T>>): Children {\n\t\tconst { component, componentAttrs } = attrs\n\n\t\tif (attrs.visible()) {\n\t\t\treturn m(\".flex-grow-shrink-auto.flex-transition.ml-s.rel.dialog.dialog-width-m.elevated-bg.dropdown-shadow.border-radius\", [\n\t\t\t\tm(DialogHeaderBar, resolveMaybeLazy(attrs.headerAttrs)),\n\t\t\t\tm(\".dialog-container.scroll.plr-l\", m(component, componentAttrs)),\n\t\t\t])\n\t\t} else {\n\t\t\treturn m(\".flex-hide.flex-transition.rel\", {\n\t\t\t\tstyle: {\n\t\t\t\t\tmaxWidth: px(0),\n\t\t\t\t},\n\t\t\t})\n\t\t}\n\t}\n}\n","import m, { Children, Component } from \"mithril\"\nimport type { ModalComponent } from \"./Modal\"\nimport { modal } from \"./Modal\"\nimport { alpha, AlphaEnum, AnimationPromise, animations, DefaultAnimationTime, opacity, transform, TransformEnum } from \"../animation/Animations\"\nimport { ease } from \"../animation/Easing\"\nimport type { MaybeTranslation, TranslationKey } from \"../../misc/LanguageViewModel\"\nimport { lang } from \"../../misc/LanguageViewModel\"\nimport type { Shortcut } from \"../../misc/KeyManager\"\nimport { focusNext, focusPrevious, keyManager } from \"../../misc/KeyManager\"\nimport { getElevatedBackground } from \"../theme\"\nimport { px, size } from \"../size\"\nimport { HabReminderImage } from \"./icons/Icons\"\nimport { windowFacade } from \"../../misc/WindowFacade\"\nimport type { ButtonAttrs } from \"./Button.js\"\nimport { Button, ButtonType } from \"./Button.js\"\nimport type { DialogHeaderBarAttrs } from \"./DialogHeaderBar\"\nimport { DialogHeaderBar } from \"./DialogHeaderBar\"\nimport { TextField, TextFieldType } from \"./TextField.js\"\nimport type { DropDownSelectorAttrs, SelectorItemList } from \"./DropDownSelector.js\"\nimport { DropDownSelector } from \"./DropDownSelector.js\"\nimport { DEFAULT_ERROR, Keys, TabIndex } from \"../../api/common/TutanotaConstants\"\nimport { AriaWindow } from \"../AriaUtils\"\nimport { styles } from \"../styles\"\nimport { $Promisable, assertNotNull, getAsLazy, identity, lazy, mapLazily, MaybeLazy, noOp, Thunk } from \"@tutao/tutanota-utils\"\nimport type { DialogInjectionRightAttrs } from \"./DialogInjectionRight\"\nimport { DialogInjectionRight } from \"./DialogInjectionRight\"\nimport { assertMainOrNode } from \"../../api/common/Env\"\nimport { isOfflineError } from \"../../api/common/utils/ErrorUtils.js\"\nimport Stream from \"mithril/stream\"\n\nassertMainOrNode()\nexport const INPUT = \"input, textarea, div[contenteditable='true']\"\n\nexport const enum DialogType {\n\tProgress = \"Progress\",\n\tAlert = \"Alert\",\n\tReminder = \"Reminder\",\n\tEditSmall = \"EditSmall\",\n\tEditMedium = \"EditMedium\",\n\tEditLarger = \"EditLarger\",\n\tEditLarge = \"EditLarge\",\n}\n\ntype Validator = () => $Promisable<TranslationKey | null>\n\nexport type ActionDialogProps = {\n\ttitle: MaybeTranslation\n\tchild: Component | lazy<Children>\n\tvalidator?: Validator | null\n\tokAction: null | ((arg0: Dialog) => unknown)\n\tallowCancel?: MaybeLazy<boolean>\n\tallowOkWithReturn?: boolean\n\tokActionTextId?: MaybeTranslation\n\tcancelAction?: ((arg0: Dialog) => unknown) | null\n\tcancelActionTextId?: TranslationKey\n\ttype?: DialogType\n}\n\nexport interface TextInputDialogParams {\n\t/** title of the dialog */\n\ttitle: MaybeTranslation\n\n\t/** label of the text field */\n\tlabel: MaybeTranslation\n\n\t/** help label of the text field */\n\tinfoMsgId?: MaybeTranslation\n\n\t/** initial value, if any */\n\tdefaultValue?: string\n\n\t/** Called when \"Ok\" is clicked receiving the entered text. Must return null if the text is valid or an error messageId if the text is invalid, so an error message is shown. */\n\tinputValidator?: stringValidator\n\n\t/** Text field type to display (determines what keyboard to display on mobile devices) */\n\ttextFieldType?: TextFieldType\n}\n\nexport class Dialog implements ModalComponent {\n\tprivate static keyboardHeight: number = 0\n\tprivate domDialog: HTMLElement | null = null\n\tprivate _shortcuts: Shortcut[]\n\tview: ModalComponent[\"view\"]\n\tvisible: boolean\n\tprivate focusOnLoadFunction: (dom: HTMLElement) => void\n\tprivate wasFocusOnLoadCalled: boolean\n\tprivate closeHandler: Thunk | null = null\n\tprivate focusedBeforeShown: HTMLElement | null = null\n\tprivate injectionRightAttrs: DialogInjectionRightAttrs<any> | null = null\n\n\tconstructor(dialogType: DialogType, childComponent: Component) {\n\t\tthis.visible = false\n\n\t\tthis.focusOnLoadFunction = () => this.defaultFocusOnLoad(assertNotNull(this.domDialog))\n\n\t\tthis.wasFocusOnLoadCalled = false\n\t\tthis._shortcuts = [\n\t\t\t{\n\t\t\t\tkey: Keys.TAB,\n\t\t\t\tshift: true,\n\t\t\t\texec: () => (this.domDialog ? focusPrevious(this.domDialog) : false),\n\t\t\t\thelp: \"selectPrevious_action\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: Keys.TAB,\n\t\t\t\tshift: false,\n\t\t\t\texec: () => (this.domDialog ? focusNext(this.domDialog) : false),\n\t\t\t\thelp: \"selectNext_action\",\n\t\t\t},\n\t\t]\n\n\t\tthis.view = (): Children => {\n\t\t\tconst marginPx = px(size.hpad)\n\t\t\tconst isEditLarge = dialogType === DialogType.EditLarge\n\t\t\tconst sidesMargin = styles.isSingleColumnLayout() && isEditLarge ? \"4px\" : marginPx\n\t\t\treturn m(\n\t\t\t\tthis.getDialogWrapperClasses(dialogType),\n\t\t\t\t{\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tpaddingTop: \"env(safe-area-inset-top)\",\n\t\t\t\t\t\tpaddingLeft: \"env(safe-area-inset-left)\",\n\t\t\t\t\t\tpaddingRight: \"env(safe-area-inset-right)\",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t/** controls vertical alignment\n\t\t\t\t * we need overflow-hidden (actually resulting in min-height: 0 instead of auto)\n\t\t\t\t * here because otherwise the content of the dialog may make this wrapper grow bigger outside\n\t\t\t\t * the window on some browsers, e.g. upgrade reminder on Firefox mobile */\n\t\t\t\tm(\n\t\t\t\t\t\".flex.justify-center.align-self-stretch.rel.overflow-hidden\" + (isEditLarge ? \".flex-grow\" : \".transition-margin\"),\n\t\t\t\t\t{\n\t\t\t\t\t\t// controls horizontal alignment\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\tmarginTop: marginPx,\n\t\t\t\t\t\t\tmarginLeft: sidesMargin,\n\t\t\t\t\t\t\tmarginRight: sidesMargin,\n\t\t\t\t\t\t\t\"margin-bottom\": Dialog.keyboardHeight > 0 ? px(Dialog.keyboardHeight) : isEditLarge ? 0 : marginPx,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t[\n\t\t\t\t\t\tm(\n\t\t\t\t\t\t\tthis.getDialogStyle(dialogType),\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\trole: AriaWindow.Dialog,\n\t\t\t\t\t\t\t\t\"aria-modal\": \"true\",\n\t\t\t\t\t\t\t\t\"aria-labelledby\": \"dialog-title\",\n\t\t\t\t\t\t\t\t\"aria-describedby\": \"dialog-message\",\n\t\t\t\t\t\t\t\tonclick: (e: MouseEvent) => e.stopPropagation(),\n\t\t\t\t\t\t\t\t// do not propagate clicks on the dialog as the Modal expects all propagated clicks to be clicks on the background\n\t\t\t\t\t\t\t\toncreate: (vnode) => {\n\t\t\t\t\t\t\t\t\tthis.domDialog = vnode.dom as HTMLElement\n\t\t\t\t\t\t\t\t\tlet animation: AnimationPromise | null = null\n\n\t\t\t\t\t\t\t\t\tif (isEditLarge) {\n\t\t\t\t\t\t\t\t\t\tthis.domDialog.style.transform = `translateY(${window.innerHeight}px)`\n\t\t\t\t\t\t\t\t\t\tanimation = animations.add(this.domDialog, transform(TransformEnum.TranslateY, window.innerHeight, 0))\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tconst bgcolor = getElevatedBackground()\n\t\t\t\t\t\t\t\t\t\tconst children = Array.from(this.domDialog.children) as Array<HTMLElement>\n\t\t\t\t\t\t\t\t\t\tfor (let child of children) {\n\t\t\t\t\t\t\t\t\t\t\tchild.style.opacity = \"0\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tthis.domDialog.style.backgroundColor = `rgba(0, 0, 0, 0)`\n\t\t\t\t\t\t\t\t\t\tanimation = Promise.all([\n\t\t\t\t\t\t\t\t\t\t\tanimations.add(this.domDialog, alpha(AlphaEnum.BackgroundColor, bgcolor, 0, 1)),\n\t\t\t\t\t\t\t\t\t\t\tanimations.add(children, opacity(0, 1, true), {\n\t\t\t\t\t\t\t\t\t\t\t\tdelay: DefaultAnimationTime / 2,\n\t\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// select first input field. blur first to avoid that users can enter text in the previously focused element while the animation is running\n\t\t\t\t\t\t\t\t\twindow.requestAnimationFrame(() => {\n\t\t\t\t\t\t\t\t\t\tconst activeElement = document.activeElement as HTMLElement | null\n\t\t\t\t\t\t\t\t\t\tif (activeElement && typeof activeElement.blur === \"function\") {\n\t\t\t\t\t\t\t\t\t\t\tactiveElement.blur()\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\tanimation.then(() => {\n\t\t\t\t\t\t\t\t\t\tthis.focusOnLoadFunction(assertNotNull(this.domDialog))\n\n\t\t\t\t\t\t\t\t\t\tthis.wasFocusOnLoadCalled = true\n\n\t\t\t\t\t\t\t\t\t\t// Fall back to the CSS classes after completing the opening animation.\n\t\t\t\t\t\t\t\t\t\t// Because `bgcolor` is only calculated on create and not on theme change.\n\t\t\t\t\t\t\t\t\t\tif (this.domDialog != null && !isEditLarge) {\n\t\t\t\t\t\t\t\t\t\t\tthis.domDialog.style.removeProperty(\"background-color\")\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tm(childComponent),\n\t\t\t\t\t\t),\n\t\t\t\t\t\tthis.injectionRightAttrs ? m(DialogInjectionRight, this.injectionRightAttrs) : null,\n\t\t\t\t\t],\n\t\t\t\t),\n\t\t\t)\n\t\t}\n\t}\n\n\tsetInjectionRight(injectionRightAttrs: DialogInjectionRightAttrs<any>) {\n\t\tthis.injectionRightAttrs = injectionRightAttrs\n\t}\n\n\tprivate defaultFocusOnLoad(dom: HTMLElement) {\n\t\tconst inputs = Array.from(dom.querySelectorAll(INPUT)) as Array<HTMLElement>\n\t\tconst scrollableWrapper = dom.querySelector(\".dialog-container.scroll\") as HTMLElement | null\n\n\t\tif (inputs.length > 0) {\n\t\t\tinputs[0].focus()\n\t\t} else if (!scrollableWrapper) {\n\t\t\tlet button = dom.querySelector(\"button\")\n\n\t\t\tif (button) {\n\t\t\t\tbutton.focus()\n\t\t\t}\n\t\t} else {\n\t\t\tscrollableWrapper.tabIndex = Number(TabIndex.Default)\n\t\t\tscrollableWrapper.focus()\n\t\t}\n\t}\n\n\t/**\n\t * By default the focus is set on the first text field after this dialog is fully visible. This behavior can be overwritten by calling this function.\n\t * If it has already been called, then calls it instantly\n\t */\n\tsetFocusOnLoadFunction(callback: Dialog[\"focusOnLoadFunction\"]): void {\n\t\tthis.focusOnLoadFunction = callback\n\n\t\tif (this.wasFocusOnLoadCalled) {\n\t\t\tthis.focusOnLoadFunction(assertNotNull(this.domDialog))\n\t\t}\n\t}\n\n\tprivate getDialogWrapperClasses(dialogType: DialogType): string {\n\t\t// change direction of axis to handle resize of dialogs (iOS keyboard open changes size)\n\t\tlet dialogWrapperStyle = \".fill-absolute.flex.items-stretch.flex-column\"\n\n\t\tif (dialogType === DialogType.EditLarge) {\n\t\t\tdialogWrapperStyle += \".flex-start\"\n\t\t} else {\n\t\t\tdialogWrapperStyle += \".flex-center\" // vertical alignment\n\t\t}\n\n\t\treturn dialogWrapperStyle\n\t}\n\n\tprivate getDialogStyle(dialogType: DialogType): string {\n\t\tlet dialogStyle = \".dialog.elevated-bg.flex-grow.border-radius-top\"\n\n\t\tif (dialogType === DialogType.Progress) {\n\t\t\tdialogStyle += \".dialog-width-s.dialog-progress.border-radius-bottom\"\n\t\t} else if (dialogType === DialogType.Alert) {\n\t\t\tdialogStyle += \".dialog-width-alert.pt.border-radius-bottom\"\n\t\t} else if (dialogType === DialogType.Reminder) {\n\t\t\tdialogStyle += \".dialog-width-m.pt.flex.flex-column.border-radius-bottom\"\n\t\t} else if (dialogType === DialogType.EditSmall) {\n\t\t\tdialogStyle += \".dialog-width-s.flex.flex-column.border-radius-bottom\"\n\t\t} else if (dialogType === DialogType.EditMedium) {\n\t\t\tdialogStyle += \".dialog-width-m.border-radius-bottom\"\n\t\t} else if (dialogType === DialogType.EditLarge || dialogType === DialogType.EditLarger) {\n\t\t\tdialogStyle += \".dialog-width-l\"\n\t\t}\n\n\t\treturn dialogStyle\n\t}\n\n\taddShortcut(shortcut: Shortcut): Dialog {\n\t\tthis._shortcuts.push(shortcut)\n\n\t\tif (this.visible) {\n\t\t\tkeyManager.registerModalShortcuts([shortcut])\n\t\t}\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Sets a close handler to the dialog. If set the handler will be notified when onClose is called on the dialog.\n\t * The handler must is then responsible for closing the dialog.\n\t */\n\tsetCloseHandler(closeHandler: (() => unknown) | null): Dialog {\n\t\tthis.closeHandler = closeHandler\n\t\treturn this\n\t}\n\n\tshortcuts(): Shortcut[] {\n\t\treturn this._shortcuts\n\t}\n\n\tshow(): Dialog {\n\t\tthis.focusedBeforeShown = document.activeElement as HTMLElement\n\t\tmodal.display(this)\n\t\tthis.visible = true\n\t\treturn this\n\t}\n\n\t/**\n\t * Removes the dialog from the current view.\n\t */\n\tclose(): void {\n\t\tthis.visible = false\n\t\tmodal.remove(this)\n\t}\n\n\t/**\n\t * Should be called to close a dialog. Notifies the closeHandler about the close attempt.\n\t */\n\tonClose(): void {\n\t\tif (this.closeHandler) {\n\t\t\tthis.closeHandler()\n\t\t} else {\n\t\t\tthis.close()\n\t\t}\n\t}\n\n\tpopState(e: Event): boolean {\n\t\tthis.onClose()\n\t\treturn false\n\t}\n\n\tcallingElement(): HTMLElement | null {\n\t\treturn this.focusedBeforeShown\n\t}\n\n\t/**\n\t * Is invoked from modal as the two animations (background layer opacity and dropdown) should run in parallel\n\t * @returns {Promise.<void>}\n\t */\n\thideAnimation(): Promise<void> {\n\t\tlet bgcolor = getElevatedBackground()\n\n\t\tif (this.domDialog) {\n\t\t\treturn Promise.all([\n\t\t\t\tanimations.add(this.domDialog.children, opacity(1, 0, true)),\n\t\t\t\tanimations.add(this.domDialog, alpha(AlphaEnum.BackgroundColor, bgcolor, 1, 0), {\n\t\t\t\t\tdelay: DefaultAnimationTime / 2,\n\t\t\t\t\teasing: ease.linear,\n\t\t\t\t}),\n\t\t\t]).then(noOp)\n\t\t} else {\n\t\t\treturn Promise.resolve()\n\t\t}\n\t}\n\n\tbackgroundClick(e: MouseEvent) {}\n\n\t/**\n\t * show a dialog with only a \"ok\" button\n\t *\n\t * @param messageIdOrMessageFunction the text to display\n\t * @param infoToAppend {?string | lazy<Children>} some text or UI elements to show below the message\n\t * @returns {Promise<void>} a promise that resolves after the dialog is fully closed\n\t */\n\tstatic message(messageIdOrMessageFunction: MaybeTranslation, infoToAppend?: string | lazy<Children>): Promise<void> {\n\t\treturn new Promise((resolve) => {\n\t\t\tlet dialog: Dialog\n\n\t\t\tconst closeAction = () => {\n\t\t\t\tdialog.close()\n\t\t\t\tsetTimeout(() => resolve(), DefaultAnimationTime)\n\t\t\t}\n\n\t\t\tlet lines = lang.getTranslationText(messageIdOrMessageFunction).split(\"\\n\")\n\t\t\tlet testId = `dialog:${lang.getTestId(messageIdOrMessageFunction)}`\n\n\t\t\tif (typeof infoToAppend === \"string\") {\n\t\t\t\tlines.push(infoToAppend)\n\t\t\t}\n\n\t\t\tconst buttonAttrs: ButtonAttrs = {\n\t\t\t\tlabel: \"ok_action\",\n\t\t\t\tclick: closeAction,\n\t\t\t\ttype: ButtonType.Primary,\n\t\t\t}\n\t\t\tdialog = new Dialog(DialogType.Alert, {\n\t\t\t\tview: () => [\n\t\t\t\t\tm(\n\t\t\t\t\t\t\".dialog-max-height.dialog-contentButtonsBottom.text-break.text-prewrap.selectable.scroll\",\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"data-testid\": testId,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t[lines.map((line) => m(\".text-break.selectable\", line)), typeof infoToAppend == \"function\" ? infoToAppend() : null],\n\t\t\t\t\t),\n\t\t\t\t\tm(\".flex-center.dialog-buttons\", m(Button, buttonAttrs)),\n\t\t\t\t],\n\t\t\t})\n\t\t\t\t.setCloseHandler(closeAction)\n\t\t\t\t.addShortcut({\n\t\t\t\t\tkey: Keys.RETURN,\n\t\t\t\t\tshift: false,\n\t\t\t\t\texec: closeAction,\n\t\t\t\t\thelp: \"close_alt\",\n\t\t\t\t})\n\t\t\t\t.addShortcut({\n\t\t\t\t\tkey: Keys.ESC,\n\t\t\t\t\tshift: false,\n\t\t\t\t\texec: closeAction,\n\t\t\t\t\thelp: \"close_alt\",\n\t\t\t\t})\n\t\t\t\t.show()\n\t\t})\n\t}\n\n\t/**\n\t * fallback for cases where we can't directly download and open a file\n\t */\n\tstatic legacyDownload(filename: string, url: string): Promise<void> {\n\t\treturn new Promise((resolve) => {\n\t\t\tlet dialog: Dialog\n\n\t\t\tconst closeAction = () => {\n\t\t\t\tdialog.close()\n\t\t\t\tsetTimeout(() => resolve(), DefaultAnimationTime)\n\t\t\t}\n\n\t\t\tconst closeButtonAttrs: ButtonAttrs = {\n\t\t\t\tlabel: \"close_alt\",\n\t\t\t\tclick: closeAction,\n\t\t\t\ttype: ButtonType.Primary,\n\t\t\t}\n\t\t\tconst downloadButtonAttrs: ButtonAttrs = {\n\t\t\t\tlabel: \"download_action\",\n\t\t\t\tclick: () => {\n\t\t\t\t\tconst popup = open(\"\", \"_blank\")\n\t\t\t\t\tif (popup) {\n\t\t\t\t\t\tpopup.location = url\n\t\t\t\t\t}\n\t\t\t\t\tdialog.close()\n\t\t\t\t\tresolve()\n\t\t\t\t},\n\t\t\t\ttype: ButtonType.Primary,\n\t\t\t}\n\t\t\tdialog = new Dialog(DialogType.Alert, {\n\t\t\t\tview: () =>\n\t\t\t\t\tm(\"\", [\n\t\t\t\t\t\tm(\".dialog-contentButtonsBottom.text-break\", [m(Button, downloadButtonAttrs), m(\".pt\", lang.get(\"saveDownloadNotPossibleIos_msg\"))]),\n\t\t\t\t\t\tm(\".flex-center.dialog-buttons\", m(Button, closeButtonAttrs)),\n\t\t\t\t\t]),\n\t\t\t})\n\t\t\t\t.setCloseHandler(closeAction)\n\t\t\t\t.show()\n\t\t})\n\t}\n\n\t/**\n\t * Simpler version of {@link Dialog#confirmMultiple} with just two options: no and yes (or another confirmation).\n\t * @return Promise, which is resolved with user selection - true for confirm, false for cancel.\n\t */\n\tstatic confirm(\n\t\tmessageIdOrMessageFunction: MaybeTranslation,\n\t\tconfirmId: TranslationKey = \"ok_action\",\n\t\tinfoToAppend?: string | lazy<Children>,\n\t): Promise<boolean> {\n\t\treturn new Promise((resolve) => {\n\t\t\tconst closeAction = (conf: boolean) => {\n\t\t\t\tdialog.close()\n\t\t\t\tsetTimeout(() => resolve(conf), DefaultAnimationTime)\n\t\t\t}\n\n\t\t\tconst buttonAttrs: Array<ButtonAttrs> = [\n\t\t\t\t{\n\t\t\t\t\tlabel: \"cancel_action\",\n\t\t\t\t\tclick: () => closeAction(false),\n\t\t\t\t\ttype: ButtonType.Secondary,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: confirmId,\n\t\t\t\t\tclick: () => closeAction(true),\n\t\t\t\t\ttype: ButtonType.Primary,\n\t\t\t\t},\n\t\t\t]\n\t\t\tconst dialog = Dialog.confirmMultiple(messageIdOrMessageFunction, buttonAttrs, resolve, infoToAppend)\n\t\t})\n\t}\n\n\t/**\n\t * Show a dialog with multiple selection options below the message.\n\t * @param messageIdOrMessageFunction which displayed in the body\n\t * @param buttons which are displayed below\n\t * @param onclose which is called on shortcut or when dialog is closed any other way (e.g. back navigation). Not called when pressing\n\t * one of the buttons.\n\t * @param infoToAppend additional UI elements to show below the message\n\t */\n\tstatic confirmMultiple(\n\t\tmessageIdOrMessageFunction: MaybeTranslation,\n\t\tbuttons: ReadonlyArray<ButtonAttrs>,\n\t\tonclose?: (positive: boolean) => unknown,\n\t\tinfoToAppend?: string | lazy<Children>,\n\t): Dialog {\n\t\tlet dialog: Dialog\n\n\t\tconst closeAction = (positive: boolean) => {\n\t\t\tdialog.close()\n\t\t\tsetTimeout(() => onclose && onclose(positive), DefaultAnimationTime)\n\t\t}\n\n\t\t// Wrap in a function to ensure that m() is called in every view() update for the infoToAppend\n\t\tfunction getContent(): Children {\n\t\t\tconst additionalChild =\n\t\t\t\ttypeof infoToAppend === \"string\"\n\t\t\t\t\t? m(\".dialog-contentButtonsBottom.text-break.selectable\", infoToAppend)\n\t\t\t\t\t: typeof infoToAppend === \"function\"\n\t\t\t\t\t? infoToAppend()\n\t\t\t\t\t: null\n\n\t\t\treturn [lang.getTranslationText(messageIdOrMessageFunction), additionalChild]\n\t\t}\n\n\t\tdialog = new Dialog(DialogType.Alert, {\n\t\t\tview: () => [\n\t\t\t\tm(\"#dialog-message.dialog-max-height.dialog-contentButtonsBottom.text-break.text-prewrap.selectable.scroll\", getContent()),\n\t\t\t\tbuttons.length === 0\n\t\t\t\t\t? null\n\t\t\t\t\t: m(\n\t\t\t\t\t\t\t\".flex-center.dialog-buttons\",\n\t\t\t\t\t\t\tbuttons.map((a) => m(Button, a)),\n\t\t\t\t\t  ),\n\t\t\t],\n\t\t})\n\t\t\t.setCloseHandler(() => closeAction(false))\n\t\t\t.addShortcut({\n\t\t\t\tkey: Keys.ESC,\n\t\t\t\tshift: false,\n\t\t\t\texec: () => closeAction(false),\n\t\t\t\thelp: \"cancel_action\",\n\t\t\t})\n\t\tdialog.show()\n\t\treturn dialog\n\t}\n\n\t/** show a dialog with several buttons on the bottom and return the option that was selected.\n\t *\n\t * never resolves if the user escapes out of the dialog without selecting an option.\n\t * */\n\tstatic choice<T>(\n\t\tmessage: MaybeTranslation,\n\t\tchoices: Array<{\n\t\t\ttext: MaybeTranslation\n\t\t\tvalue: T\n\t\t}>,\n\t): Promise<T> {\n\t\treturn new Promise((resolve) => {\n\t\t\tconst choose = (choice: T) => {\n\t\t\t\tdialog.close()\n\t\t\t\tsetTimeout(() => resolve(choice), DefaultAnimationTime)\n\t\t\t}\n\n\t\t\tconst buttonAttrs = choices.map((choice) => {\n\t\t\t\treturn {\n\t\t\t\t\tlabel: choice.text,\n\t\t\t\t\tclick: () => choose(choice.value),\n\t\t\t\t\ttype: ButtonType.Secondary,\n\t\t\t\t}\n\t\t\t})\n\t\t\tconst dialog = Dialog.confirmMultiple(message, buttonAttrs)\n\t\t})\n\t}\n\n\t/**\n\t * Shows a (not-cancellable) multiple-choice dialog.\n\t * @returns the selected option.\n\t */\n\tstatic choiceVertical<T>(\n\t\tmessage: MaybeTranslation,\n\t\tchoices: Array<{\n\t\t\ttext: MaybeTranslation\n\t\t\tvalue: T\n\t\t\ttype?: \"primary\" | \"secondary\"\n\t\t}>,\n\t): Promise<T> {\n\t\treturn new Promise((resolve) => {\n\t\t\tconst choose = (choice: T) => {\n\t\t\t\tdialog.close()\n\t\t\t\tsetTimeout(() => resolve(choice), DefaultAnimationTime)\n\t\t\t}\n\n\t\t\tconst buttonAttrs = choices.map((choice) => {\n\t\t\t\treturn {\n\t\t\t\t\tlabel: choice.text,\n\t\t\t\t\tclick: () => choose(choice.value),\n\t\t\t\t\ttype: choice.type === \"primary\" ? ButtonType.Primary : ButtonType.Secondary,\n\t\t\t\t}\n\t\t\t})\n\n\t\t\t// Wrap in a function to ensure that m() is called in every view() update for the infoToAppend\n\t\t\tfunction getContent(): Children {\n\t\t\t\treturn lang.getTranslationText(message)\n\t\t\t}\n\n\t\t\tconst dialog = new Dialog(DialogType.Alert, {\n\t\t\t\tview: () =>\n\t\t\t\t\tm(\".flex.flex-column.pl-l.pr-l.pb-s\", [\n\t\t\t\t\t\tm(\"#dialog-message.dialog-max-height.text-break.text-prewrap.selectable.scroll\", getContent()),\n\t\t\t\t\t\tbuttonAttrs.length === 0\n\t\t\t\t\t\t\t? null\n\t\t\t\t\t\t\t: m(\n\t\t\t\t\t\t\t\t\t\".flex.flex-column\",\n\t\t\t\t\t\t\t\t\tbuttonAttrs.map((a) => m(Button, a)),\n\t\t\t\t\t\t\t  ),\n\t\t\t\t\t]),\n\t\t\t})\n\t\t\tdialog.show()\n\t\t})\n\t}\n\n\t/**\n\t * show a dialog (resp. monologue) with no buttons that can not be closed, not even with ESC.\n\t */\n\tstatic deadEnd(message: MaybeTranslation) {\n\t\tconst dialog = Dialog.confirmMultiple(message, [])\n\t\tdialog.addShortcut({\n\t\t\tkey: Keys.ESC,\n\t\t\tshift: false,\n\t\t\texec: noOp,\n\t\t\thelp: \"emptyString_msg\",\n\t\t})\n\t\tdialog.addShortcut({\n\t\t\tkey: Keys.F1,\n\t\t\tshift: false,\n\t\t\texec: noOp,\n\t\t\thelp: \"emptyString_msg\",\n\t\t})\n\t}\n\n\t// used in admin client\n\tstatic save(title: lazy<string>, saveAction: () => Promise<void>, child: Component): Promise<void> {\n\t\treturn new Promise((resolve) => {\n\t\t\tlet saveDialog: Dialog\n\n\t\t\tconst closeAction = () => {\n\t\t\t\tsaveDialog.close()\n\t\t\t\tsetTimeout(() => resolve(), DefaultAnimationTime)\n\t\t\t}\n\n\t\t\tconst onOk = () => {\n\t\t\t\tsaveAction().then(() => {\n\t\t\t\t\tsaveDialog.close()\n\t\t\t\t\tsetTimeout(() => resolve(), DefaultAnimationTime)\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tconst actionBarAttrs: DialogHeaderBarAttrs = {\n\t\t\t\tleft: [\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: \"close_alt\",\n\t\t\t\t\t\tclick: closeAction,\n\t\t\t\t\t\ttype: ButtonType.Secondary,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tright: [\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: \"save_action\",\n\t\t\t\t\t\tclick: onOk,\n\t\t\t\t\t\ttype: ButtonType.Primary,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tmiddle: lang.makeTranslation(\"title\", title()),\n\t\t\t}\n\t\t\tsaveDialog = new Dialog(DialogType.EditMedium, {\n\t\t\t\tview: () => m(\"\", [m(DialogHeaderBar, actionBarAttrs), m(\".plr-l.pb.text-break\", m(child))]),\n\t\t\t})\n\t\t\t\t.setCloseHandler(closeAction)\n\t\t\t\t.show()\n\t\t})\n\t}\n\n\tstatic reminder(title: string, message: string): Promise<boolean> {\n\t\treturn new Promise((resolve) => {\n\t\t\tlet dialog: Dialog\n\n\t\t\tconst closeAction = (res: boolean) => {\n\t\t\t\tdialog.close()\n\t\t\t\tsetTimeout(() => resolve(res), DefaultAnimationTime)\n\t\t\t}\n\n\t\t\tconst buttonAttrs: Array<ButtonAttrs> = [\n\t\t\t\t{\n\t\t\t\t\tlabel: \"upgradeReminderCancel_action\",\n\t\t\t\t\tclick: () => closeAction(false),\n\t\t\t\t\ttype: ButtonType.Secondary,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: \"showMoreUpgrade_action\",\n\t\t\t\t\tclick: () => closeAction(true),\n\t\t\t\t\ttype: ButtonType.Primary,\n\t\t\t\t},\n\t\t\t]\n\t\t\tdialog = new Dialog(DialogType.Reminder, {\n\t\t\t\tview: () => [\n\t\t\t\t\tm(\".dialog-contentButtonsBottom.text-break.scroll\", [\n\t\t\t\t\t\tm(\".h2.pb\", title),\n\t\t\t\t\t\tm(\".flex-direction-change.items-center\", [\n\t\t\t\t\t\t\tm(\"#dialog-message.pb\", message),\n\t\t\t\t\t\t\tm(\"img[src=\" + HabReminderImage + \"].dialog-img.mb.bg-white.border-radius\", {\n\t\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\t\t\"min-width\": \"150px\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t]),\n\t\t\t\t\t]),\n\t\t\t\t\tm(\n\t\t\t\t\t\t\".flex-center.dialog-buttons.flex-no-grow-no-shrink-auto\",\n\t\t\t\t\t\tbuttonAttrs.map((a) => m(Button, a)),\n\t\t\t\t\t),\n\t\t\t\t],\n\t\t\t})\n\t\t\t\t.setCloseHandler(() => closeAction(false))\n\t\t\t\t.addShortcut({\n\t\t\t\t\tkey: Keys.ESC,\n\t\t\t\t\tshift: false,\n\t\t\t\t\texec: () => closeAction(false),\n\t\t\t\t\thelp: \"cancel_action\",\n\t\t\t\t})\n\t\t\t\t.show()\n\t\t})\n\t}\n\n\t/**\n\t * Shows a dialog with a text field input and ok/cancel buttons.\n\t * @param   props.child either a component (object with view function that returns a Children) or a naked view Function\n\t * @param   props.validator Called when \"Ok\" is clicked. Must return null if the input is valid or an error messageID if it is invalid, so an error message is shown.\n\t * @param   props.okAction called after successful validation.\n\t * @param   props.cancelAction called when allowCancel is true and the cancel button/shortcut was pressed.\n\t * @returns the Dialog\n\t */\n\tstatic showActionDialog(props: ActionDialogProps): Dialog {\n\t\tlet dialog = this.createActionDialog(props)\n\t\treturn dialog.show()\n\t}\n\n\tstatic createActionDialog(props: ActionDialogProps): Dialog {\n\t\tlet dialog: Dialog\n\t\tconst { title, child, okAction, validator, allowCancel, allowOkWithReturn, okActionTextId, cancelActionTextId, cancelAction, type } = Object.assign(\n\t\t\t{},\n\t\t\t{\n\t\t\t\tallowCancel: true,\n\t\t\t\tallowOkWithReturn: false,\n\t\t\t\tokActionTextId: \"ok_action\",\n\t\t\t\tcancelActionTextId: \"cancel_action\",\n\t\t\t\ttype: DialogType.EditSmall,\n\t\t\t\terrorMessageStream: Stream(DEFAULT_ERROR), // No error = errorMessageStream value is an empty string \"\"\n\t\t\t},\n\t\t\tprops,\n\t\t)\n\n\t\tconst doCancel = () => {\n\t\t\tif (cancelAction) {\n\t\t\t\tcancelAction(dialog)\n\t\t\t}\n\n\t\t\tdialog.close()\n\t\t}\n\n\t\tconst doAction = () => {\n\t\t\tif (!okAction) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tlet validationResult: $Promisable<TranslationKey | null> | null = null\n\n\t\t\tif (validator) {\n\t\t\t\tvalidationResult = validator()\n\t\t\t}\n\n\t\t\tlet finalizer = Promise.resolve(validationResult).then((error_id) => {\n\t\t\t\tif (error_id) {\n\t\t\t\t\tDialog.message(error_id)\n\t\t\t\t} else {\n\t\t\t\t\tokAction(dialog)\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (validationResult instanceof Promise) {\n\t\t\t\t// breaking hard circular dependency\n\t\t\t\timport(\"../dialogs/ProgressDialog\").then((module) => module.showProgressDialog(\"pleaseWait_msg\", finalizer))\n\t\t\t}\n\t\t}\n\n\t\tconst actionBarAttrs: DialogHeaderBarAttrs = {\n\t\t\tleft: mapLazily(allowCancel, (allow) =>\n\t\t\t\tallow\n\t\t\t\t\t? [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: cancelActionTextId,\n\t\t\t\t\t\t\t\tclick: doCancel,\n\t\t\t\t\t\t\t\ttype: ButtonType.Secondary,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t  ]\n\t\t\t\t\t: [],\n\t\t\t),\n\t\t\tright: okAction\n\t\t\t\t? [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: okActionTextId,\n\t\t\t\t\t\t\tclick: doAction,\n\t\t\t\t\t\t\ttype: ButtonType.Primary,\n\t\t\t\t\t\t},\n\t\t\t\t  ]\n\t\t\t\t: [],\n\t\t\tmiddle: title,\n\t\t}\n\t\tdialog = new Dialog(type, {\n\t\t\tview: () => [\n\t\t\t\tm(DialogHeaderBar, actionBarAttrs),\n\t\t\t\tm(\".dialog-max-height.plr-l.pb.text-break.scroll\", [\"function\" === typeof child ? child() : m(child)]),\n\t\t\t],\n\t\t}).setCloseHandler(doCancel)\n\t\tdialog.addShortcut({\n\t\t\tkey: Keys.ESC,\n\t\t\tshift: false,\n\t\t\texec: mapLazily(allowCancel, (allow) => allow && doCancel()),\n\t\t\thelp: \"cancel_action\",\n\t\t\tenabled: getAsLazy(allowCancel),\n\t\t})\n\n\t\tif (allowOkWithReturn) {\n\t\t\tdialog.addShortcut({\n\t\t\t\tkey: Keys.RETURN,\n\t\t\t\tshift: false,\n\t\t\t\texec: doAction,\n\t\t\t\thelp: \"ok_action\",\n\t\t\t})\n\t\t}\n\t\treturn dialog\n\t}\n\n\t/**\n\t * Shows a dialog with a text field input and ok/cancel buttons.\n\t * @returns A promise resolving to the entered text. The returned promise is only resolved if \"ok\" is clicked.\n\t */\n\tstatic showTextInputDialog(props: TextInputDialogParams): Promise<string> {\n\t\treturn new Promise((resolve) => {\n\t\t\tDialog.showProcessTextInputDialog(props, async (value) => resolve(value))\n\t\t})\n\t}\n\n\t/**\n\t * Shows a dialog with a text field input and ok/cancel buttons. In contrast to {@link showTextInputDialog} the entered text is not returned but processed in the okAction.\n\t */\n\tstatic showProcessTextInputDialog(props: TextInputDialogParams, okAction: (action: string) => Promise<unknown>) {\n\t\tlet textFieldType = props.textFieldType ?? TextFieldType.Text\n\n\t\tlet result = props.defaultValue ?? \"\"\n\t\tDialog.showActionDialog({\n\t\t\ttitle: props.title,\n\t\t\tchild: () =>\n\t\t\t\tm(TextField, {\n\t\t\t\t\tlabel: props.label,\n\t\t\t\t\tvalue: result,\n\t\t\t\t\ttype: textFieldType,\n\t\t\t\t\toninput: (newValue) => (result = newValue),\n\t\t\t\t\thelpLabel: () => (props.infoMsgId ? lang.getTranslationText(props.infoMsgId) : \"\"),\n\t\t\t\t}),\n\t\t\tvalidator: () => (props.inputValidator ? props.inputValidator(result) : null),\n\t\t\tallowOkWithReturn: true,\n\t\t\tokAction: async (dialog: Dialog) => {\n\t\t\t\ttry {\n\t\t\t\t\tawait okAction(result)\n\t\t\t\t\tdialog.close()\n\t\t\t\t} catch (error) {\n\t\t\t\t\tif (!isOfflineError(error)) {\n\t\t\t\t\t\tdialog.close()\n\t\t\t\t\t}\n\t\t\t\t\tthrow error\n\t\t\t\t}\n\t\t\t},\n\t\t})\n\t}\n\n\t/**\n\t * Shows a dialog with a text area input and ok/cancel buttons.\n\t * @param titleId title of the dialog\n\t * @param labelIdOrLabelFunction label of the text area\n\t * @param infoMsgId help label of the text area\n\t * @param value initial value\n\t * @returns A promise resolving to the entered text. The returned promise is only resolved if \"ok\" is clicked.\n\t */\n\tstatic showTextAreaInputDialog(\n\t\ttitleId: TranslationKey,\n\t\tlabelIdOrLabelFunction: MaybeTranslation,\n\t\tinfoMsgId: TranslationKey | null,\n\t\tvalue: string,\n\t): Promise<string> {\n\t\treturn new Promise((resolve) => {\n\t\t\tlet result: string = value\n\t\t\tDialog.showActionDialog({\n\t\t\t\ttitle: titleId,\n\t\t\t\tchild: {\n\t\t\t\t\tview: () =>\n\t\t\t\t\t\tm(TextField, {\n\t\t\t\t\t\t\tlabel: labelIdOrLabelFunction,\n\t\t\t\t\t\t\thelpLabel: () => (infoMsgId ? lang.get(infoMsgId) : \"\"),\n\t\t\t\t\t\t\tvalue: result,\n\t\t\t\t\t\t\toninput: (newValue) => (result = newValue),\n\t\t\t\t\t\t\ttype: TextFieldType.Area,\n\t\t\t\t\t\t}),\n\t\t\t\t},\n\t\t\t\tokAction: (dialog: Dialog) => {\n\t\t\t\t\tresolve(result)\n\t\t\t\t\tdialog.close()\n\t\t\t\t},\n\t\t\t})\n\t\t})\n\t}\n\n\t/**\n\t * Show a dialog with a dropdown selector\n\t * @param titleId title of the dialog\n\t * @param label label of the dropdown selector\n\t * @param infoMsgId help label of the dropdown selector\n\t * @param items selection set\n\t * @param initialValue initial value\n\t * @param dropdownWidth width of the dropdown\n\t * @returns A promise resolving to the selected item. The returned promise is only resolved if \"ok\" is clicked.\n\t */\n\tstatic showDropDownSelectionDialog<T>(\n\t\ttitleId: TranslationKey,\n\t\tlabel: TranslationKey,\n\t\tinfoMsgId: TranslationKey | null,\n\t\titems: SelectorItemList<T>,\n\t\tinitialValue: T,\n\t\tdropdownWidth?: number,\n\t): Promise<T> {\n\t\tlet selectedValue: T = initialValue\n\t\treturn new Promise((resolve) => {\n\t\t\tDialog.showActionDialog({\n\t\t\t\ttitle: titleId,\n\t\t\t\tchild: {\n\t\t\t\t\tview: () =>\n\t\t\t\t\t\t// identity as type assertion\n\t\t\t\t\t\tm(\n\t\t\t\t\t\t\tDropDownSelector,\n\t\t\t\t\t\t\tidentity<DropDownSelectorAttrs<T>>({\n\t\t\t\t\t\t\t\tlabel,\n\t\t\t\t\t\t\t\titems,\n\t\t\t\t\t\t\t\tselectedValue: selectedValue,\n\t\t\t\t\t\t\t\tselectionChangedHandler: (newValue) => (selectedValue = newValue),\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\tokAction: (dialog: Dialog) => {\n\t\t\t\t\tresolve(selectedValue)\n\t\t\t\t\tdialog.close()\n\t\t\t\t},\n\t\t\t})\n\t\t})\n\t}\n\n\t/** @deprecated use editDialog*/\n\tstatic largeDialog(headerBarAttrs: DialogHeaderBarAttrs, child: Component): Dialog {\n\t\treturn new Dialog(DialogType.EditLarge, {\n\t\t\tview: () => {\n\t\t\t\treturn m(\"\", [m(DialogHeaderBar, headerBarAttrs), m(\".dialog-container.scroll\", m(\".fill-absolute.plr-l\", m(child)))])\n\t\t\t},\n\t\t})\n\t}\n\n\tstatic editDialog<T extends object>(headerBarAttrs: DialogHeaderBarAttrs, child: Class<Component<T>>, childAttrs: T): Dialog {\n\t\treturn new Dialog(DialogType.EditLarge, {\n\t\t\tview: () =>\n\t\t\t\tm(\"\", [\n\t\t\t\t\t/** fixed-height header with a title, left and right buttons that's fixed to the top of the dialog's area */\n\t\t\t\t\theaderBarAttrs.noHeader ? null : m(DialogHeaderBar, headerBarAttrs),\n\t\t\t\t\t/** variable-size child container that may be scrollable. */\n\t\t\t\t\tm(\".dialog-container.scroll.hide-outline\", m(\".fill-absolute.plr-l\", m(child, childAttrs))),\n\t\t\t\t]),\n\t\t})\n\t}\n\n\tstatic editMediumDialog<T extends object>(\n\t\theaderBarAttrs: DialogHeaderBarAttrs,\n\t\tchild: Class<Component<T>>,\n\t\tchildAttrs: T,\n\t\tdialogStyle?: Partial<CSSStyleDeclaration> | object,\n\t): Dialog {\n\t\treturn new Dialog(DialogType.EditMedium, {\n\t\t\tview: () =>\n\t\t\t\tm(\".flex.col.border-radius\", { style: dialogStyle }, [\n\t\t\t\t\t/** fixed-height header with a title, left and right buttons that's fixed to the top of the dialog's area */\n\t\t\t\t\theaderBarAttrs.noHeader ? null : m(DialogHeaderBar, headerBarAttrs),\n\t\t\t\t\t/** variable-size child container that may be scrollable. */\n\t\t\t\t\tm(\".scroll.hide-outline.plr-l.flex-grow\", { style: { \"overflow-x\": \"hidden\" } }, m(child, childAttrs)),\n\t\t\t\t]),\n\t\t})\n\t}\n\n\tstatic editSmallDialog<T extends object>(headerBarAttrs: DialogHeaderBarAttrs, child: () => Children): Dialog {\n\t\treturn new Dialog(DialogType.EditSmall, {\n\t\t\tview: () => [\n\t\t\t\t/** fixed-height header with a title, left and right buttons that's fixed to the top of the dialog's area */\n\t\t\t\theaderBarAttrs.noHeader ? null : m(DialogHeaderBar, headerBarAttrs),\n\t\t\t\t/** variable-size child container that may be scrollable. */\n\t\t\t\tm(\".scroll.hide-outline.plr-l\", child()),\n\t\t\t],\n\t\t})\n\t}\n\n\tstatic async viewerDialog<T extends object>(title: MaybeTranslation, child: Class<Component<T>>, childAttrs: T): Promise<void> {\n\t\treturn new Promise((resolve) => {\n\t\t\tlet dialog: Dialog\n\n\t\t\tconst close = () => {\n\t\t\t\tdialog.close()\n\t\t\t\tresolve()\n\t\t\t}\n\n\t\t\tconst headerAttrs: DialogHeaderBarAttrs = {\n\t\t\t\tleft: [\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: \"close_alt\",\n\t\t\t\t\t\tclick: close,\n\t\t\t\t\t\ttype: ButtonType.Secondary,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tmiddle: title,\n\t\t\t}\n\t\t\tdialog = Dialog.editDialog(headerAttrs, child, childAttrs)\n\t\t\t\t.setCloseHandler(close)\n\t\t\t\t.addShortcut({\n\t\t\t\t\tkey: Keys.ESC,\n\t\t\t\t\texec: close,\n\t\t\t\t\thelp: \"close_alt\",\n\t\t\t\t})\n\t\t\t\t.show()\n\t\t})\n\t}\n\n\tstatic onKeyboardSizeChanged(newSize: number): void {\n\t\tDialog.keyboardHeight = newSize\n\t\tm.redraw()\n\t}\n}\n\nexport type stringValidator = (arg0: string) => (TranslationKey | null) | Promise<TranslationKey | null>\nwindowFacade.addKeyboardSizeListener(Dialog.onKeyboardSizeChanged)\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAoBa,kBAAN,MAAiE;CACvE,KAAKA,OAA8C;EAClD,MAAM,IAAI,OAAO,OAChB,CAAE,GACF;GACC,MAAM,CAAE;GACR,OAAO,CAAE;EACT,GACD,MAAM,MACN;EACD,IAAI,cAAc,EAAE,SAAS,gCAAgC;AAC7D,SAAO,gBACN,qEACA;GACC,UAAU,CAAC,EAAE,KAAK,KAAK;AACtB,QAAI,EAAE,OAAQ,GAAE,OAAO,IAAmB;GAC1C;GACD,UAAU,MAAM;AACf,QAAI,EAAE,OAAQ,GAAE,QAAQ;GACxB;GACD,OAAO,MAAM,MAAM;EACnB,GACD;GACC,gBACC,cAAc,kBACd,iBAAiB,EAAE,KAAK,CAAC,IAAI,CAACC,QAAM,gBAAE,QAAQA,IAAE,CAAC,CACjD;GACD,EAAE,SACC,gBACA,sFACA,EACC,gBAAgB,SAAS,KAAK,UAAU,EAAE,OAAO,CAAC,EAClD,GACD,CAAC,gBAAE,kBAAkB,KAAK,mBAAmB,EAAE,OAAO,CAAC,AAAC,EACvD,GACD;GACH,gBACC,cAAc,mCACd,iBAAiB,EAAE,MAAM,CAAC,IAAI,CAACA,QAAM,gBAAE,QAAQA,IAAE,CAAC,CAClD;EACD,EACD;CACD;AACD;;;;ACzDM,SAAS,cAAiBC,SAAmE;AACnG,QAAO,EACN,KAAKC,OAA2B;AAC/B,SAAO,QAAQ,MAAM,OAAO,MAAM,SAAS;CAC3C,EACD;AACD;;;;ICUY,YAAN,MAAqD;CAC3D,KAAKC,OAA8B;EAClC,MAAM,QAAQ,MAAM;EACpB,MAAM,QAAQ,KAAK,mBAAmB,MAAM,MAAM;EAClD,MAAM,OAAO,KAAK,mBAAmB,MAAM,QAAQ,MAAM,MAAM;EAC/D,MAAM,QAAQ,MAAM,WAAW,MAAM,0BAA0B,MAAM;AACrE,SAAO,gBAAE,YAAY;GACpB,OAAO,MAAM;GACb,MAAM,gBACL,6BACA;IACC,OAAO,EAAE,MAAO;IAEhB,YAAY,UAAU;GACtB,GACD,KACA;GACD,MAAM,MAAM;GACZ,UAAU,MAAM;GAChB,MACC,MAAM,QAAQ,MAAM,SAAS,SAC1B,gBAAE,MAAM;IACR,MAAM,MAAM;IACZ,WAAW;IACX,OAAO;IACP,OAAO,EAAE,MAAM,MAAO;IACtB,MAAM,SAAS;GACd,EAAC,GACF,MAAM,SAAS,SACf,gBAAE,wBAAwB,GAC1B;GACJ,OAAO,0DAA0D,MAAM;GACvE,OAAO;IACN,GAAG,MAAM;IACT;GACA;GACD,SAAS,MAAM;EACf,EAAC;CACF;AACD;;;;AChDD,sBAAsB;IAGJ,0CAAX;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;IAEiB,8CAAX;AACN;AACA;AACA;AACA;AACA;;AACA;IAEiB,oCAAX;AACN;AACA;;AACA;AAED,IAAW,wCAAX;AAEC;AAEA;AAEA;;AACA,EAPU;AASJ,SAAS,gBAAwC;AACvD,QAAO;EACN,aAAa,aAAa;EAC1B,eAAe;CACf;AACD;IAEiB,0CAAX;AACN;AACA;AACA;AACA;AACA;AACA;;AACA;IAEiB,gCAAX;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAOM,SAAS,cAAcC,MAAqBC,OAAoD;AACtG,QAAO;EACN,OAAO;EACP;EACA,UAAU,SAAS;EACnB,cAAc;CACd;AACD;;;;ACjED,kBAAkB;;;;AAoBlB,MAAM,eAAe,cAAiC,CAAC,EAAE,QAAQ,MAAM,MAAM,KAAK;AACjF,QAAO,gBAAE,0CAA0C,SAAS,YAAY,OAAO,OAAO,OAAO,KAAK,KAAK;AACvG,EAAC;AAGF,SAAS,eAAeC,eAAuE;AAC9F,QAAO,OAAO,OAAO,eAAe,OAAO,IAAI,OAAO,OAAO,eAAe,SAAS,IAAI,OAAO,OAAO,eAAe,OAAO;AAC7H;IAaY,4BAAN,MAAmD;CACzD;CACA;CACA;CACA;CAEA,YAAYC,GAAWC,GAAWC,OAAeC,QAAgB;AAChE,OAAK,IAAI;AACT,OAAK,IAAI;AACT,OAAK,QAAQ;AACb,OAAK,SAAS;CACd;CAED,IAAI,MAAc;AACjB,SAAO,KAAK,SAAS,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK;CAChD;CAED,IAAI,SAAiB;AACpB,SAAO,KAAK,SAAS,IAAI,KAAK,IAAI,KAAK,SAAS,KAAK;CACrD;CAED,IAAI,OAAe;AAClB,SAAO,KAAK,QAAQ,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK;CAC/C;CAED,IAAI,QAAgB;AACnB,SAAO,KAAK,QAAQ,IAAI,KAAK,IAAI,KAAK,QAAQ,KAAK;CACnD;AACD;IAGY,WAAN,MAAM,SAAmC;CAC/C,AAAQ;CACR,AAAQ,cAAkC;CAC1C,SAAyB;CACzB;CACA;CACA,AAAiB;CACjB;CACA,AAAQ;CACR,AAAQ,WAAoC;CAC5C,AAAQ,cAAkC;CAC1C,AAAQ,eAAwB;CAChC,AAAQ,YAA2B;CACnC,AAAQ,eAA6B;CACrC,AAAQ,qBAAyC,SAAS;CAE1D,YAAYC,cAA8DF,OAAe;AACxF,OAAK,WAAW,CAAE;AAClB,OAAK,QAAQ;AACb,OAAK,eAAe;AAEpB,OAAK,SAAS,MAAM;AACnB,QAAK,WAAW,WAAW,cAAc,CAAC;AAC1C,QAAK,eAAe,KAAK,SAAS,SAAS;AAC3C,QAAK,SAAS,IAAI,CAAC,UAAU;AAC5B,QAAI,eAAe,MAAM,CACxB,QAAO;IAGR,MAAMG,cAAmC;AACzC,gBAAY,QAAQ,KAAK,UAAU,MAAM,QAAQ,MAAM,QAAQ,MAAM,KAAK;AAE1E,WAAO;GACP,EAAC;EACF;EAED,IAAI,aAAa,KAAK,kBAAkB;AAExC,OAAK,YAAY,MAAM;AACtB,UAAO;EACP;EAED,MAAM,aAAa,MAAM;AACxB,UAAO,KAAK,eACT,gBACA,wFACA;IACC,aAAa,KAAK,IAAI,qBAAqB;IAC3C,UAAU,CAAC,UAAU;AACpB,UAAK,WAAW,SAA2B,MAAM,IAAI;AACrD,UAAK,SAAS,QAAQ,KAAK;IAC3B;IACD,SAAS,MAAM;AACd,UAAK,eAAe,UAAU,KAAK,SAAS,CAAC;IAC7C;IACD,OAAO,EACN,aAAa,GAAG,KAAK,aAAa,EAAE,CACpC;GACD,GACD,KAAK,aACJ,GACD;EACH;EAED,MAAM,WAAW,MAAM;GACtB,MAAM,eAAe,KAAK,SAAS,KAAK,CAAC,MAAM,UAAU,YAAY,EAAE,SAAS,YAAY;AAG5F,UAAO,gBACN,4BACA;IACC,MAAM,SAAS;IACf,UAAU,SAAS;IACnB,UAAU,CAAC,UAAU;AACpB,UAAK,cAAc,MAAM;IACzB;IACD,UAAU,CAAC,UAAU;AACpB,SAAI,KAAK,aAAa,MAAM;MAC3B,MAAM,WAAW,MAAM,KAAK,MAAM,IAAI,SAAS;AAC/C,WAAK,YAAY,SAAS,OAAO,CAAC,aAAaC,eAAa,cAAcA,WAAS,cAAc,EAAE,GAAG,KAAK;AAE3G,UAAI,KAAK,OAKR,cAAa,KAAK,QAAQ,cAAc,KAAK,YAAY,EAAE,KAAK,WAAW,KAAK,MAAM,CAAC,KAAK,MAAM;OACjG,MAAM,cAAc,MAAM,IAAI,qBAAqB,SAAS,CAAC,KAAK,EAAE;AACpE,WAAI,KAAK,aAAa,OAAO,gBAAgB,CAC5C,MAAK,SAAS,OAAO;SACX,gBAAgB,KAC1B,aAAY,OAAO;IAEnB,MAAK,aAAa,OAAO;MAE1B,EAAC;KAEH;IACD;IACD,UAAU,CAACC,OAA2B;KACrC,MAAM,SAAS,GAAG;AAElB,QAAG,SAAS,KAAK,eAAe,QAAQ,OAAO,YAAY,KAAK,OAAO,YAAY,KAAK,YAAY,eAAe,OAAO;IAC1H;IACD,OAAO;KACN,KAAK,GAAG,KAAK,iBAAiB,CAAC;KAC/B,QAAQ;IACR;GACD,GACD,KAAK,iBAAiB,CAAC,IAAI,CAAC,UAAU;AACrC,QAAI,eAAe,MAAM,CACxB,QAAO,gBAAE,cAAc,MAAM;IAE7B,QAAO,SAAS,qBAAqB,OAAO,aAAa;GAE1D,EAAC,CACF;EACD;EACD,MAAM,WAAW,MAAM;AACtB,UAAO,gBAAE,YAAY;IACpB,OAAO;IACP,MAAM,KAAK,IAAI,YAAY;IAC3B,OAAO;IACP,SAAS,MAAM;AACd,UAAK,SAAS;IACd;GACD,EAAC;EACF;AAED,OAAK,OAAO,MAAgB;AAC3B,UAAO,gBACN,gGACA;IACC,UAAU,CAAC,UAAU;AACpB,UAAK,cAAc,MAAM;AAEzB,UAAK,YAAY,MAAM,UAAU;IACjC;IACD,YAAY,MAAM;AACjB,SAAI,KAAK,SACR,MAAK,SAAS,OAAO;IAEtB;GACD,GACD;IAAC,YAAY;IAAE,UAAU;IAAE,UAAU;GAAC,EACtC;EACD;CACD;CAED,OAAe,qBAAqBC,OAA4BC,cAAuB;AACtF,SAAO,gBAAE,WAAW;GACnB,MAAM,SAAS;GACf,UAAU,MAAM;GAChB,OAAO,MAAM;GACb,MAAM,MAAM;GACZ,MAAM,MAAM,QAAQ,eAAe,MAAM,OAAO,eAAe,SAAS;GACxE,OAAO;GACP,SAAS,MAAM,QAAQ,MAAM,QAAQ;EACrC,EAA0B;CAC3B;CAED,UAAUC,IAAwG;AACjH,SAAO,CAACC,GAAe,QAAQ;GAC9B,MAAM,IAAI,GAAG,GAAG,IAAI;AACpB,QAAK,OAAO;AACZ,UAAO;EACP;CACD;CAED,gBAAgBA,GAAe;AAC9B,MACC,KAAK,gBACJ,AAAC,EAAE,OAAuB,UAAU,SAAS,aAAa,KAC1D,KAAK,YAAY,SAAS,EAAE,OAAsB,IAAI,KAAK,YAAY,eAAe,EAAE,QAEzF,MAAK,SAAS;CAEf;CAED,mBAAoC;AACnC,SAAO;GACN;IACC,KAAK,KAAK;IACV,MAAM,MAAM,KAAK,SAAS;IAC1B,MAAM;GACN;GACD;IACC,KAAK,KAAK;IACV,OAAO;IACP,MAAM,MAAO,KAAK,cAAc,cAAc,KAAK,YAAY,GAAG;IAClE,MAAM;GACN;GACD;IACC,KAAK,KAAK;IACV,OAAO;IACP,MAAM,MAAO,KAAK,cAAc,UAAU,KAAK,YAAY,GAAG;IAC9D,MAAM;GACN;GACD;IACC,KAAK,KAAK;IACV,MAAM,MAAO,KAAK,cAAc,cAAc,KAAK,YAAY,GAAG;IAClE,MAAM;GACN;GACD;IACC,KAAK,KAAK;IACV,MAAM,MAAO,KAAK,cAAc,UAAU,KAAK,YAAY,GAAG;IAC9D,MAAM;GACN;GACD;IACC,KAAK,KAAK;IACV,MAAM,MAAM,KAAK,aAAa;IAC9B,MAAM;GACN;EACD;CACD;CAED,UAAUC,QAAuB;AAChC,OAAK,SAAS;AACd,SAAO;CACP;CAED,QAAc;AACb,QAAM,OAAO,KAAK;CAClB;CAED,UAAgB;AACf,MAAI,KAAK,aACR,MAAK,cAAc;IAEnB,MAAK,OAAO;CAEb;CAED,SAASC,GAAmB;AAC3B,OAAK,SAAS;AACd,SAAO;CACP;CAED,iBAAqC;AACpC,SAAO,KAAK;CACZ;CAED,cAA6B,MAAM;EAClC,MAAM,eAAe,KAAK,aAAa,aAAa;EAEpD,IAAIC,kBAAsC,SAAS,KAAK,iBAAiB,CAAC,OAAO,CAAC,OAAO,eAAe,EAAE,CAAC,CAAC;EAC5G,IAAI,iBACH,gBAAgB,WAAW,IAAI,gBAAgB,KAAK,gBAAgB,KAAK,CAAC,MAAM,KAAK,mBAAmB,EAAE,MAAM,CAAC,aAAa,KAAK,aAAa;AAEjJ,MAAI,KAAK,YAAY,SAAS,kBAAkB,KAAK,YAAY,kBAAkB,eAAe,OAAO;AACxG,kBAAe,MAAM,IAAI,WAAW,UAAU,KAAK,SAAS;AAC5D,UAAO;EACP;AAED,SAAO;CACP;;;;CAKD,gBAA+B;AAC9B,SAAO,QAAQ,SAAS;CACxB;CAED,gBAAgBC,SAAsB;AACrC,OAAK,eAAe;AACpB,SAAO;CACP;CAED,AAAQ,kBAA6C;AACpD,SAAO,KAAK,SAAS,OAAO,CAAC,MAAM;AAClC,OAAI,eAAe,EAAE,CACpB,QAAO,EAAE,KAAK,SAAS,KAAK,aAAa,aAAa,CAAC;SAC7C,KAAK,cAAc;IAC7B,MAAM,aAAa,KAAK,mBAAmB,EAAE,QAAQ,EAAE,MAAM;AAC7D,WAAO,WAAW,aAAa,CAAC,SAAS,KAAK,aAAa,aAAa,CAAC;GACzE,MACA,QAAO;EAER,EAAC;CACF;CAED,AAAQ,kBAA0B;AACjC,SAAO,KAAK,eAAe,KAAK,gBAAgB,KAAK,UAAU;CAC/D;AACD;AAEM,SAAS,eAAe,EAC9B,aACA,gBACA,OACA,gBAMA,EAAgB;AAChB,QAAO,oBAAoB;EAAE,aAAa,YAAY,aAAa;EAAE;EAAgB;EAAO;CAAgB,EAAC;AAC7G;AAEM,SAAS,oBAAoB,EACnC,aACA,gBACA,QAAQ,KACR,iBAAiB,OACjB,UAAU,WAOV,EAAgB;AAEhB,QAAO,CAAC,GAAG,QAAQ;EAClB,MAAM,kBAAkB,aAAa;EACrC,IAAI,kBAAkB;AACtB,kBAAgB,KAAK,MAAM;AAC1B,qBAAkB;EAClB,EAAC;EACF,IAAI,UAAU;AAEd,YAAU,QAAQ,KAAK,CACtB,iBACA,QAAQ,IAAI,CAAC,MAAM,IAAI,EAAE,OAAO,+BAAgC,EAAC,CAAC,KAAK,CAAC,CAACC,KAAG,OAAO,KAAK;AACvF,QAAK,gBACJ,QAAO,OAAO,mBAAmB,eAAe,gBAAgB;IAEhE,QAAO;EAER,EAAC,AACF,EAAC;AACF,UAAQ,KAAK,CAACC,cAAY;GACzB,IAAI,WAAW,IAAI,SAAS,MAAMA,WAAS;AAC3C,OAAI,QACH,UAAS,gBAAgB,MAAM;AAC9B,aAAS;AACT,aAAS,OAAO;GAChB,EAAC;GAEH,IAAI;AACJ,OAAI,eACH,cAAa,eAAe,IAAI,uBAAuB,CAAC;IAGxD,cAAa,IAAI,uBAAuB;AAEzC,YAAS,UAAU,WAAW;AAC9B,SAAM,cAAc,UAAU,eAAe;EAC7C,EAAC;CACF;AACD;AAEM,SAAS,uBACfC,SACAC,MACAC,MACAC,eAAsB,MACtBnB,QAAgB,KACf;CACD,MAAM,WAAW,IAAI,SAAS,MAAM,SAAS;CAC7C,MAAM,QAAQ,cAAoB,MAAM;AACvC,gBAAc;AACd,WAAS,OAAO;CAChB,EAAC;AACF,UAAS,UAAU,IAAI,0BAA0B,MAAM,MAAM,GAAG,GAAG;AACnE,UAAS,gBAAgB,MAAM;AAC/B,OAAM,cAAc,UAAU,MAAM;AACpC;AAsBM,SAAS,eAAe,EAC9B,iBACA,YACA,+BAAe,MAAM,MACrB,OACA,gBACA,SACsB,EAAmB;AACzC,QAAO,OAAO,OAAO,CAAE,GAAE,iBAAiB,EACzC,OAAO,CAACS,GAAeW,QAAqB;AAC3C,MAAI,gBAAc,EAAE;GACnB,MAAM,aAAa,oBAAoB;IACtC,aAAa,MAAM,QAAQ,QAAQ,YAAY,CAAC;IAChD;IACA;IACA;GACA,EAAC;AACF,cAAW,GAAG,IAAI;AAClB,KAAE,iBAAiB;EACnB;CACD,EACD,EAAC;AACF;MAEY,kBAAkB;AAExB,SAAS,aACfV,QACAW,aACAC,eACAC,cACAC,UACmB;CAiBnB,MAAM,oBAAoB,OAAO;CACjC,MAAM,qBAAqB,OAAO;CAClC,MAAM,sBAAsB,OAAO;CACnC,MAAM,mBAAmB,OAAO;CAChC,MAAM,aAAa,OAAO,MAAM,qBAAqB;CACrD,MAAM,aAAa,OAAO,cAAc,OAAO,SAAS,wBAAwB;CAChF,MAAM,YAAY,OAAO;CACzB,MAAM,aAAa,OAAO,aAAa,OAAO;CAC9C,IAAI,kBAAkB;CACtB,IAAI;CAEJ,MAAM,aAAc,YAAY,aAAa,cAAe,aAAa;AACzE,KAAI,WAAW;AAEd,qBAAmB;AACnB,cAAY,MAAM,MAAM,sBAAsB;AAC9C,cAAY,MAAM,SAAS;AAC3B,cAAY,KAAK,IAAI,eAAe,WAAW;CAC/C,OAAM;AAEN,qBAAmB;AACnB,cAAY,MAAM,MAAM;AAGxB,cAAY,MAAM,SAAS,GAAG,OAAO,cAAc,iBAAiB;AACpE,cAAY,KAAK,IAAI,eAAe,WAAW;CAC/C;AAED,oBAAmB,YAAY,aAAa,UAAU;CACtD,MAAM,mBAAmB,OAAO,aAAa,kBAAkB;CAC/D,MAAM,gBAAgB,KAAK,IAAI,cAAc,YAAY,uBAAuB,CAAC,MAAM;CACvF,IAAI,QAAQ;CACZ,IAAIC,YAA2B;CAC/B,IAAIC,aAA4B;AAEhC,KAAI,SAAS,kBAAkB;AAE9B,cAAY,UAAU,OAAO,cAAc;AAC3C,cAAY;AACZ,UAAQ;CACR,WAAU,YAAY,YAAY;EAElC,MAAM,4BAA4B,OAAO,aAAa;EACtD,IAAI,qBAAqB;AAEzB,MAAI,4BAA4B,eAAe;GAE9C,MAAM,mBAAmB,qBAAqB,gBAAgB,OAAO,aAAa;AAClF,wBAAqB,oBAAoB;EACzC;AAED,cAAY,KAAK,IAAI,iBAAiB,mBAAmB;CACzD,OAAM;EAEN,MAAM,4BAA4B,OAAO;EACzC,IAAI,sBAAsB;AAE1B,MAAI,4BAA4B,eAAe;GAE9C,MAAM,mBAAmB,gBAAgB,sBAAsB;AAC/D,yBAAsB,qBAAqB;EAC3C;AAID,eAAa,KAAK,IAAI,iBAAiB,OAAO,aAAa,oBAAoB;CAC/E;AAED,aAAY,MAAM,OAAO,aAAa,OAAO,GAAG,UAAU,GAAG;AAC7D,aAAY,MAAM,QAAQ,cAAc,OAAO,GAAG,WAAW,GAAG;AAChE,aAAY,MAAM,QAAQ,GAAG,MAAM;AACnC,aAAY,MAAM,SAAS,GAAG,UAAU;AACxC,aAAY,MAAM,kBAAkB;AACpC,QAAO,WAAW,IAAI,aAAa,CAAC,QAAQ,GAAG,GAAG,KAAK,EAAE,UAAU,cAAc,OAAO,IAAK,EAAE,AAAC,GAAE,EACjG,QAAQ,KAAK,IACb,EAAC;AACF;;;;ACplBD,kBAAkB;IA8BL,mBAAN,MAA8E;CACpF,KAAKC,OAAkD;EACtD,MAAM,IAAI,MAAM;AAChB,SAAO,gBAAE,WAAW;GACnB,OAAO,EAAE;GACT,OAAO,KAAK,YAAY,GAAG,EAAE,cAAc,IAAI;GAC/C,WAAW,EAAE;GACb,YAAY;GACZ,SAAS,EAAE,WAAW,OAAO,KAAK,eAAe,EAAE;GACnD,OAAO,YAAY,EAAE,SAAS,OAAO,OAAO,EAAE,SAAS,MAAM,oBAAoB,EAAE,SAAS;GAC5F,OAAO,EAAE;GACT,iBAAiB,MAChB,EAAE,WACC,OAMA,gBACA,qCACA,EACC,OAAO;IACN,OAAO;IACP,QAAQ;GACR,EACD,GACD,gBAAE,YAAY;IACb,MAAM,EAAE,OAAO,EAAE,OAAO,UAAU;IAClC,OAAO;IACP,OAAO,EAAE,WAAW,OAAO,KAAK,eAAe,EAAE;IACjD,MAAM,WAAW;GACjB,EAAC,CACD;GACL,cAAc,EAAE;EAChB,EAAC;CACF;CAED,eAAeC,GAA2C;AACzD,SAAO,eAAe;GACrB,aAAa,MAAM;AAClB,WAAO,EAAE,MACP,OAAO,CAAC,SAAS,KAAK,eAAe,MAAM,CAC3C,IAAI,CAAC,SAAS;AACd,YAAO;MACN,OAAO,KAAK,gBAAgB,KAAK,MAAM,KAAK,KAAK;MACjD,OAAO,MAAM;AACZ,SAAE,0BAA0B,KAAK,MAAM;AACvC,uBAAE,QAAQ;MACV;MACD,UAAU,EAAE,kBAAkB,KAAK;KACnC;IACD,EAAC;GACH;GACD,OAAO,EAAE;EACT,EAAC;CACF;CAED,YAAYA,GAA6BC,OAAgC;AACxE,MAAI,EAAE,qBACL,QAAO,EAAE;EAGV,MAAM,eAAe,EAAE,MAAM,KAAK,CAAC,SAAS,KAAK,UAAU,EAAE,cAAc;AAC3E,MAAI,aACH,QAAO,aAAa;KACd;AACN,WAAQ,KAAK,WAAW,KAAK,mBAAmB,EAAE,MAAM,CAAC,oCAAoC,OAAO,KAAK,UAAU,MAAM,CAAC,CAAC,EAAE;AAC7H,UAAO;EACP;CACD;AACD;;;;IC9FiB,gCAAX;AACN;AACA;;AACA;AAkBD,MAAM,oBAAoB,aAAa,MAAM,UAAU,IAAI,CAAC,OAAO;CAAE,OAAO;CAAG,MAAM,EAAE;AAAG,GAAE,CAAC;AAEtF,SAAS,sBAAsBC,QAKzB;AACZ,QAAO,gBAAE,kBAAkB;EAC1B,OAAO,OAAO,SAAS;EACvB,WAAW,OAAO;EAClB,OAAO,CACN,GAAG,mBAAmB,EACtB;GACC,OAAO;GACP,MAAM,KAAK,IAAI,eAAe;EAC9B,CACD;EACD,eAAe,OAAO;EACtB,yBAAyB,OAAO;CAChC,EAAC;AACF;AAgCM,SAAS,gBAAgBC,SAA2BC,iBAAiC,aAA2B;CACtH,MAAM,sBAAsB,OAAO,QAAQ,SAAS,eAAe;CACnE,MAAMC,eAA6B;EAClC,UAAU,QAAQ;AACjB,uBAAoB,KAAK,CAAC,OAAO;AAChC,QAAI,GACH,SAAQ;GAET,EAAC;AACF,UAAO;EACP;EAED,UAAU,QAAQ;AACjB,uBAAoB,KAAK,CAAC,OAAO;AAChC,SAAK,GACJ,SAAQ;GAET,EAAC;AACF,UAAO;EACP;EAED,QAAQ;CACR;AACD,QAAO;AACP;AAuBM,SAAS,sCAAsCC,WAAwBC,aAAqBC,uBAAiD;AACnJ,QAAO,WAAY;AAClB,gBAAc,WAAW,aAAa,uBAAuB,CAAC;CAC9D;AACD;AAEM,SAAS,cAAcF,WAAwBC,aAAqBE,eAAuB;CACjG,MAAM,qBAAqB,UAAU,uBAAuB,CAAC;CAC7D,MAAM,eAAe,UAAU;CAE/B,MAAM,cAAc,cAAc;CAClC,MAAM,iBAAiB,cAAc;CAErC,MAAM,sBAAsB,cAAc;CAC1C,MAAM,yBAAyB,iBAAiB;AAGhD,KAAI,sBAAsB,EACzB,WAAU,YAAY;SACZ,yBAAyB,mBACnC,WAAU,YAAY,iBAAiB;AAExC;AASM,SAAS,mBAAmBC,QAAyBC,QAAkBC,QAAyD;AAGtI,KAAI,gBAAgB,OAAO,CAC1B,QAAO,OAAO,OAAO;AAEtB,QAAO;AACP;AASM,SAAS,gBAAgBF,QAAkC;AACjE,SAAQ,OAAO,cAAc,IAAI,OAAO,mBAAmB,CAAC,eAAe;AAC3E;AAsCM,SAAS,UAAUG,KAAqB;AAC9C,QACC,6BACA,IAEE,QAAQ,MAAM,IAAI,CAElB,QAAQ,MAAM,MAAM,CAEpB,QAAQ,QAAQ,IAAI;AAEvB;AAGM,SAAS,oBAAoBC,YAAwCC,aAA8B;CACzG,MAAM,uBAAuB,cAAc,cAAc;AACzD,QAAO,aAAa,4BAA4B;AAChD;AASM,SAAS,gBAAgBC,SAAkB;CACjD,MAAM,QAAQ,QAAQ,SAAS,EAAE,QAAQ,MAAM,KAAK;CACpD,MAAM,aAAa,QAAQ,cAAc,QAAQ,GAAG,QAAQ,WAAW,KAAK;CAC5E,MAAM,YAAY,EAAE,QAAQ,UAAU,EAAE,WAAW,EAAE,QAAQ,SAAS;CACtE,MAAM,SAAS,QAAQ,cAAc;AACrC,QAAO,CAAC,QAAQ,WAAW,QAAQ,MAAM;AACzC;AAEM,SAAS,WAAWC,OAAuB;AACjD,QAAO,aAAa,MAAM,GAAG,UAAU;AACvC;;;;IC5NiB,0CAAX;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA;IAIiB,wCAAX;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;IAIiB,4CAAX;AACN;;AACA;MAEYC,kBAA0B,KAAK,iBAAiB;AAC7D,MAAM,iBAAiB,KAAK,kBAAkB,KAAK,aAAa;AAGhE,MAAM,oBAAoB;AAI1B,MAAM,iBAAiB;IAEV,YAAN,MAA0D;CAChE;CACA,SAA+B;CAC/B;CACA;CACA,AAAQ;CACR,AAAQ;CACR,AAAQ;CAER,cAAc;AACb,OAAK,SAAS;CACd;CAED,KAAKC,OAAyC;EAC7C,MAAM,IAAI,MAAM;EAChB,MAAM,WAAW,EAAE;EACnB,MAAM,aAAa,KAAK,UAAU,EAAE,UAAU,OAAO,EAAE,eAAe,KAAK,iBAAiB,EAAE;EAC9F,MAAM,uBAAuB,uBAAuB;EACpD,MAAM,eAAe,EAAE,iBAAiB;EACxC,MAAM,cAAc,KAAK,SAAS,QAAQ;EAC1C,MAAM,cAAc,KAAK,SAAS,MAAM,iBAAiB,MAAM;AAC/D,SAAO,gBACN,mCACA;GACC,IAAI,MAAM,MAAM;GAChB,UAAU,CAACC,YAAW,KAAK,cAAcA,QAAM;GAC/C,SAAS,CAACC,MAAmB,EAAE,UAAU,EAAE,QAAQ,GAAG,KAAK,iBAAiB,GAAG,KAAK,MAAM,GAAG,EAAE;GAC/F,iBAAiB,EAAE;GACnB,OAAO,EAAE,SAAS,OAAO,EAAE,QAAQ,QAAa,oBAAoB,EAAE,SAAS;GAC/E,OAAO,WACJ;IACA,UAAU,GAAG,SAAS;IACtB,GAAG,EAAE;GACJ,IACD,EAAE,GAAG,EAAE,MAAO;EACjB,GACD;GACC,gBACC,8CACA;IACC,eAAe;IACf,OAAO,KAAK,SAAS,sBAAsB,MAAW,oBAAoB,EAAE,SAAS;IACrF,UAAU,CAACD,YAAU;AACpB,UAAK,YAAYA,QAAM;IACvB;IACD,OAAO;KACN,WAAW,EAAE,YAAY,KAAK,iBAAiB,KAAK,gBAAgB;KACpE,YAAY,aAAa,YAAY,oBAAoB,EAAE;KAC3D,aAAa,YAAY,qBAAqB,yBAAyB,qBAAqB;IAC5F;GACD,GACD,KAAK,mBAAmB,EAAE,MAAM,CAChC;GACD,gBAAE,qBAAqB,CAEtB,gBACC,6BACA,EAEC,OAAO;IACN,cAAc,GAAG,eAAe;IAEhC,kBAAkB,KAAK,SAAS,GAAG,EAAE,GAAG,GAAG,EAAE;IAC7C,iBAAiB,gBAAgB,EAAE,YAAY,SAAS,YAAY,IAAI;GACxE,EACD,GACD,CACC,EAAE,iBAAiB,EAAE,gBAAgB,GAAG,MACxC,gBACC,8CACA;IACC,OAAO,EACN,WAAW,GAAG,iBAAiB,EAAE,CACjC;IACD,UAAU,CAACA,YAAW,KAAK,mBAAmBA,QAAM;GACpD,GACD,CACC,EAAE,SAAS,cAAc,OAAO,KAAK,eAAe,EAAE,GAAG,KAAK,aAAa,EAAE,EAC7E,EAAE,kBACC,gBACA,0BACA,EACC,OAAO,EAAE,WAAW,GAAG,iBAAiB,EAAE,CAAE,EAC5C,GACD,EAAE,iBAAiB,CAClB,GACD,IACH,EACD,AACD,EACD,AACD,EAAC;GACF,EAAE,YACC,gBACA,kBACA,EACC,SAAS,CAACC,MAAkB;AAC3B,MAAE,iBAAiB;GACnB,EACD,GACD,EAAE,WAAW,CACZ,GACD,CAAE;EACL,EACD;CACD;CAED,eAAeC,GAA6B;AAC3C,MAAI,EAAE,WACL,QAAO,gBACN,0BACA;GACC,OAAO;IACN,WAAW,GAAG,eAAe;IAC7B,YAAY,GAAG,gBAAgB;GAC/B;GACD,gBAAgB,KAAK,KAAK,UAAU,EAAE,MAAM,CAAC;EAC7C,GACD,EAAE,MACF;KACK;GAMN,MAAMC,gBACL,EAAE,mBAAmB,aAAa,MAC/B;IACA,gBAAE,aAAa;KACd,OAAO;MACN,SAAS;MACT,QAAQ;KACR;KACD,UAAU,SAAS;KACnB,MAAM,cAAc;IACpB,EAAC;IACF,gBAAE,aAAa;KACd,OAAO;MACN,SAAS;MACT,QAAQ;KACR;KACD,UAAU,SAAS;KACnB,MAAM,cAAc;IACpB,EAAC;IACF,gBAAE,aAAa;KACd,OAAO;MACN,SAAS;MACT,QAAQ;KACR;KACD,UAAU,SAAS;KACnB,MAAM,cAAc;IACpB,EAAC;GACD,IACD,CAAE;AACN,UAAO,gBACN,kBACA,cAAc,OAAO,CACpB,gBAAE,iBAAiB,EAAE,aAAa,WAAW,KAAK;IACjD,cAAc,EAAE,kBAAkB;IAClC,gBAAgB,EAAE;IAClB,MAAM,EAAE;IACR,KAAK,EAAE;IACP,KAAK,EAAE;IACP,cAAc,KAAK,mBAAmB,EAAE,MAAM;IAC9C,UAAU,EAAE;IACZ,OAAO,oBAAoB,EAAE,SAAS,GAAG;IACzC,UAAU,CAAC,UAAU;AACpB,UAAK,WAAW,MAAM;AACtB,OAAE,oBAAoB,KAAK,SAAS;AACpC,UAAK,SAAS,QAAQ,EAAE;AACxB,SAAI,EAAE,SAAS,cAAc,KAC3B,CAAC,MAAM,IAAoB,iBAAiB,kBAAkB,CAACC,MAAsB;AACrF,UAAI,EAAE,kBAAkB,mBAAmB;AAC1C,YAAK,eAAe;AACpB,uBAAE,QAAQ;MACV,WAAU,EAAE,kBAAkB,oBAAoB;AAClD,YAAK,eAAe;AACpB,uBAAE,QAAQ;MACV;KACD,EAAC;IAEH;IACD,SAAS,CAACC,MAAkB;AAC3B,UAAK,MAAM,GAAG,EAAE;AAChB,OAAE,UAAU,KAAK,aAAa,KAAK,SAAS;IAC5C;IACD,QAAQ,CAACA,MAAkB,KAAK,KAAK,GAAG,EAAE;IAC1C,WAAW,CAACC,MAAqB;KAChC,MAAM,UAAU,cAAc,GAAG,EAAE,WAAW;AAC9C,UAAK,aAAa,EAAE,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,IAAI,CAEpD,GAAE,iBAAiB;AAEpB,YAAO;IACP;IACD,UAAU,MAAM;AAEf,SAAI,KAAK,SAAS,UAAU,EAAE,MAC7B,MAAK,SAAS,QAAQ,EAAE;IAEzB;IACD,SAAS,MAAM;AACd,OAAE,UAAU,KAAK,SAAS,OAAO,KAAK,SAAS;IAC/C;IACD,UAAU,MAAM;AAEf,SAAI,KAAK,SAAU,MAAK,SAAS,QAAQ;IACzC;IACD,OAAO;KACN,UAAU,EAAE;KACZ,UAAU,GAAG,GAAG;KAEhB,YAAY,GAAG,gBAAgB;KAC/B,UAAU,EAAE;IACZ;IACD,gBAAgB,KAAK,KAAK,UAAU,EAAE,MAAM,CAAC;GAC7C,EAAC,AACF,EAAC,CACF;EACD;CACD;CAED,aAAaJ,GAA6B;AACzC,MAAI,EAAE,WACL,QAAO,gBACN,uCACA,EACC,OAAO;GACN,WAAW,GAAG,eAAe;GAC7B,YAAY,GAAG,gBAAgB;EAC/B,EACD,GACD,EAAE,MACF;IAED,QAAO,gBAAE,gCAAgC;GACxC,cAAc,KAAK,mBAAmB,EAAE,MAAM;GAC9C,UAAU,EAAE;GACZ,gBAAgB,EAAE;GAClB,OAAO,oBAAoB,EAAE,SAAS,GAAG;GACzC,UAAU,CAAC,UAAU;AACpB,SAAK,WAAW,MAAM;AACtB,SAAK,SAAS,QAAQ,EAAE;AACxB,SAAK,SAAS,MAAM,SAAS,GAAG,KAAK,IAAI,EAAE,MAAM,MAAM,KAAK,CAAC,QAAQ,EAAE,GAAG,gBAAgB;GAC1F;GACD,SAAS,CAACG,MAAkB,KAAK,MAAM,GAAG,EAAE;GAC5C,QAAQ,CAACA,MAAkB,KAAK,KAAK,GAAG,EAAE;GAC1C,WAAW,CAACC,MAAqB,cAAc,GAAG,EAAE,WAAW;GAC/D,SAAS,MAAM;AACd,SAAK,SAAS,MAAM,SAAS;AAC7B,SAAK,SAAS,MAAM,SAAS,GAAG,KAAK,SAAS,aAAa;AAC3D,MAAE,UAAU,KAAK,SAAS,OAAO,KAAK,SAAS;GAC/C;GACD,UAAU,MAAM;AAEf,QAAI,KAAK,SAAS,UAAU,EAAE,MAC7B,MAAK,SAAS,QAAQ,EAAE;GAEzB;GACD,OAAO;IACN,WAAW,GAAG,eAAe;IAC7B,YAAY,GAAG,gBAAgB;IAC/B,UAAU,GAAG,GAAG;IAChB,UAAU,EAAE;GACZ;EACD,EAAC;CAEH;CAED,MAAMC,GAAUL,GAAmB;AAClC,OAAK,KAAK,WAAW,EAAE,aAAa,EAAE,YAAY;AACjD,QAAK,SAAS;AACd,QAAK,SAAS,OAAO;AAErB,QAAK,YAAY,UAAU,IAAI,SAAS;EACxC;CACD;CAED,KAAKK,GAAUL,GAAmB;AACjC,OAAK,YAAY,UAAU,OAAO,SAAS;AAC3C,OAAK,SAAS;AACd,MAAI,EAAE,kBAAkB,SAAU,GAAE,OAAO,EAAE;CAC7C;CAED,QAAQM,OAAwB;AAC/B,SAAO,UAAU;CACjB;AACD;;;;ICpWY,uBAAN,MAAgG;CACtG,KAAK,EAAE,OAA4C,EAAY;EAC9D,MAAM,EAAE,WAAW,gBAAgB,GAAG;AAEtC,MAAI,MAAM,SAAS,CAClB,QAAO,gBAAE,mHAAmH,CAC3H,gBAAE,iBAAiB,iBAAiB,MAAM,YAAY,CAAC,EACvD,gBAAE,kCAAkC,gBAAE,WAAW,eAAe,CAAC,AACjE,EAAC;IAEF,QAAO,gBAAE,kCAAkC,EAC1C,OAAO,EACN,UAAU,GAAG,EAAE,CACf,EACD,EAAC;CAEH;AACD;;;;;ACLD,kBAAkB;MACL,QAAQ;IAEH,oCAAX;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;IAqCY,SAAN,MAAM,OAAiC;CAC7C,OAAe,iBAAyB;CACxC,AAAQ,YAAgC;CACxC,AAAQ;CACR;CACA;CACA,AAAQ;CACR,AAAQ;CACR,AAAQ,eAA6B;CACrC,AAAQ,qBAAyC;CACjD,AAAQ,sBAA6D;CAErE,YAAYC,YAAwBC,gBAA2B;AAC9D,OAAK,UAAU;AAEf,OAAK,sBAAsB,MAAM,KAAK,mBAAmB,cAAc,KAAK,UAAU,CAAC;AAEvF,OAAK,uBAAuB;AAC5B,OAAK,aAAa,CACjB;GACC,KAAK,KAAK;GACV,OAAO;GACP,MAAM,MAAO,KAAK,YAAY,cAAc,KAAK,UAAU,GAAG;GAC9D,MAAM;EACN,GACD;GACC,KAAK,KAAK;GACV,OAAO;GACP,MAAM,MAAO,KAAK,YAAY,UAAU,KAAK,UAAU,GAAG;GAC1D,MAAM;EACN,CACD;AAED,OAAK,OAAO,MAAgB;GAC3B,MAAM,WAAW,GAAG,KAAK,KAAK;GAC9B,MAAM,cAAc,eAAe,WAAW;GAC9C,MAAM,cAAc,OAAO,sBAAsB,IAAI,cAAc,QAAQ;AAC3E,UAAO;IACN,KAAK,wBAAwB,WAAW;IACxC,EACC,OAAO;KACN,YAAY;KACZ,aAAa;KACb,cAAc;IACd,EACD;;;;;IAKD,gBACC,iEAAiE,cAAc,eAAe,uBAC9F,EAEC,OAAO;KACN,WAAW;KACX,YAAY;KACZ,aAAa;KACb,iBAAiB,OAAO,iBAAiB,IAAI,GAAG,OAAO,eAAe,GAAG,cAAc,IAAI;IAC3F,EACD,GACD,CACC,gBACC,KAAK,eAAe,WAAW,EAC/B;KACC,MAAM,WAAW;KACjB,cAAc;KACd,mBAAmB;KACnB,oBAAoB;KACpB,SAAS,CAACC,MAAkB,EAAE,iBAAiB;KAE/C,UAAU,CAAC,UAAU;AACpB,WAAK,YAAY,MAAM;MACvB,IAAIC,YAAqC;AAEzC,UAAI,aAAa;AAChB,YAAK,UAAU,MAAM,aAAa,aAAa,OAAO,YAAY;AAClE,mBAAY,WAAW,IAAI,KAAK,WAAW,UAAU,cAAc,YAAY,OAAO,aAAa,EAAE,CAAC;MACtG,OAAM;OACN,MAAM,UAAU,uBAAuB;OACvC,MAAM,WAAW,MAAM,KAAK,KAAK,UAAU,SAAS;AACpD,YAAK,IAAI,SAAS,SACjB,OAAM,MAAM,UAAU;AAEvB,YAAK,UAAU,MAAM,mBAAmB;AACxC,mBAAY,QAAQ,IAAI,CACvB,WAAW,IAAI,KAAK,WAAW,MAAM,UAAU,iBAAiB,SAAS,GAAG,EAAE,CAAC,EAC/E,WAAW,IAAI,UAAU,QAAQ,GAAG,GAAG,KAAK,EAAE,EAC7C,OAAO,uBAAuB,EAC9B,EAAC,AACF,EAAC;MACF;AAGD,aAAO,sBAAsB,MAAM;OAClC,MAAM,gBAAgB,SAAS;AAC/B,WAAI,wBAAwB,cAAc,SAAS,WAClD,eAAc,MAAM;MAErB,EAAC;AACF,gBAAU,KAAK,MAAM;AACpB,YAAK,oBAAoB,cAAc,KAAK,UAAU,CAAC;AAEvD,YAAK,uBAAuB;AAI5B,WAAI,KAAK,aAAa,SAAS,YAC9B,MAAK,UAAU,MAAM,eAAe,mBAAmB;MAExD,EAAC;KACF;IACD,GACD,gBAAE,eAAe,CACjB,EACD,KAAK,sBAAsB,gBAAE,sBAAsB,KAAK,oBAAoB,GAAG,IAC/E,EACD;CACD;EACD;CACD;CAED,kBAAkBC,qBAAqD;AACtE,OAAK,sBAAsB;CAC3B;CAED,AAAQ,mBAAmBC,KAAkB;EAC5C,MAAM,SAAS,MAAM,KAAK,IAAI,iBAAiB,MAAM,CAAC;EACtD,MAAM,oBAAoB,IAAI,cAAc,2BAA2B;AAEvE,MAAI,OAAO,SAAS,EACnB,QAAO,GAAG,OAAO;UACN,mBAAmB;GAC9B,IAAI,SAAS,IAAI,cAAc,SAAS;AAExC,OAAI,OACH,QAAO,OAAO;EAEf,OAAM;AACN,qBAAkB,WAAW,OAAO,SAAS,QAAQ;AACrD,qBAAkB,OAAO;EACzB;CACD;;;;;CAMD,uBAAuBC,UAA+C;AACrE,OAAK,sBAAsB;AAE3B,MAAI,KAAK,qBACR,MAAK,oBAAoB,cAAc,KAAK,UAAU,CAAC;CAExD;CAED,AAAQ,wBAAwBN,YAAgC;EAE/D,IAAI,qBAAqB;AAEzB,MAAI,eAAe,WAAW,UAC7B,uBAAsB;IAEtB,uBAAsB;AAGvB,SAAO;CACP;CAED,AAAQ,eAAeA,YAAgC;EACtD,IAAI,cAAc;AAElB,MAAI,eAAe,WAAW,SAC7B,gBAAe;SACL,eAAe,WAAW,MACpC,gBAAe;SACL,eAAe,WAAW,SACpC,gBAAe;SACL,eAAe,WAAW,UACpC,gBAAe;SACL,eAAe,WAAW,WACpC,gBAAe;SACL,eAAe,WAAW,aAAa,eAAe,WAAW,WAC3E,gBAAe;AAGhB,SAAO;CACP;CAED,YAAYO,UAA4B;AACvC,OAAK,WAAW,KAAK,SAAS;AAE9B,MAAI,KAAK,QACR,YAAW,uBAAuB,CAAC,QAAS,EAAC;AAG9C,SAAO;CACP;;;;;CAMD,gBAAgBC,cAA8C;AAC7D,OAAK,eAAe;AACpB,SAAO;CACP;CAED,YAAwB;AACvB,SAAO,KAAK;CACZ;CAED,OAAe;AACd,OAAK,qBAAqB,SAAS;AACnC,QAAM,QAAQ,KAAK;AACnB,OAAK,UAAU;AACf,SAAO;CACP;;;;CAKD,QAAc;AACb,OAAK,UAAU;AACf,QAAM,OAAO,KAAK;CAClB;;;;CAKD,UAAgB;AACf,MAAI,KAAK,aACR,MAAK,cAAc;IAEnB,MAAK,OAAO;CAEb;CAED,SAASC,GAAmB;AAC3B,OAAK,SAAS;AACd,SAAO;CACP;CAED,iBAAqC;AACpC,SAAO,KAAK;CACZ;;;;;CAMD,gBAA+B;EAC9B,IAAI,UAAU,uBAAuB;AAErC,MAAI,KAAK,UACR,QAAO,QAAQ,IAAI,CAClB,WAAW,IAAI,KAAK,UAAU,UAAU,QAAQ,GAAG,GAAG,KAAK,CAAC,EAC5D,WAAW,IAAI,KAAK,WAAW,MAAM,UAAU,iBAAiB,SAAS,GAAG,EAAE,EAAE;GAC/E,OAAO,uBAAuB;GAC9B,QAAQ,KAAK;EACb,EAAC,AACF,EAAC,CAAC,KAAK,KAAK;IAEb,QAAO,QAAQ,SAAS;CAEzB;CAED,gBAAgBP,GAAe,CAAE;;;;;;;;CASjC,OAAO,QAAQQ,4BAA8CC,cAAuD;AACnH,SAAO,IAAI,QAAQ,CAAC,YAAY;GAC/B,IAAIC;GAEJ,MAAM,cAAc,MAAM;AACzB,WAAO,OAAO;AACd,eAAW,MAAM,SAAS,EAAE,qBAAqB;GACjD;GAED,IAAI,QAAQ,KAAK,mBAAmB,2BAA2B,CAAC,MAAM,KAAK;GAC3E,IAAI,UAAU,SAAS,KAAK,UAAU,2BAA2B,CAAC;AAElE,cAAW,iBAAiB,SAC3B,OAAM,KAAK,aAAa;GAGzB,MAAMC,cAA2B;IAChC,OAAO;IACP,OAAO;IACP,MAAM,WAAW;GACjB;AACD,YAAS,IAAI,OAAO,WAAW,OAAO,EACrC,MAAM,MAAM,CACX,gBACC,4FACA,EACC,eAAe,OACf,GACD,CAAC,MAAM,IAAI,CAAC,SAAS,gBAAE,0BAA0B,KAAK,CAAC,SAAS,gBAAgB,aAAa,cAAc,GAAG,IAAK,EACnH,EACD,gBAAE,+BAA+B,gBAAE,QAAQ,YAAY,CAAC,AACxD,EACD,GACC,gBAAgB,YAAY,CAC5B,YAAY;IACZ,KAAK,KAAK;IACV,OAAO;IACP,MAAM;IACN,MAAM;GACN,EAAC,CACD,YAAY;IACZ,KAAK,KAAK;IACV,OAAO;IACP,MAAM;IACN,MAAM;GACN,EAAC,CACD,MAAM;EACR;CACD;;;;CAKD,OAAO,eAAeC,UAAkBC,KAA4B;AACnE,SAAO,IAAI,QAAQ,CAAC,YAAY;GAC/B,IAAIH;GAEJ,MAAM,cAAc,MAAM;AACzB,WAAO,OAAO;AACd,eAAW,MAAM,SAAS,EAAE,qBAAqB;GACjD;GAED,MAAMI,mBAAgC;IACrC,OAAO;IACP,OAAO;IACP,MAAM,WAAW;GACjB;GACD,MAAMC,sBAAmC;IACxC,OAAO;IACP,OAAO,MAAM;KACZ,MAAM,QAAQ,KAAK,IAAI,SAAS;AAChC,SAAI,MACH,OAAM,WAAW;AAElB,YAAO,OAAO;AACd,cAAS;IACT;IACD,MAAM,WAAW;GACjB;AACD,YAAS,IAAI,OAAO,WAAW,OAAO,EACrC,MAAM,MACL,gBAAE,IAAI,CACL,gBAAE,2CAA2C,CAAC,gBAAE,QAAQ,oBAAoB,EAAE,gBAAE,OAAO,KAAK,IAAI,iCAAiC,CAAC,AAAC,EAAC,EACpI,gBAAE,+BAA+B,gBAAE,QAAQ,iBAAiB,CAAC,AAC7D,EAAC,CACH,GACC,gBAAgB,YAAY,CAC5B,MAAM;EACR;CACD;;;;;CAMD,OAAO,QACNP,4BACAQ,YAA4B,aAC5BP,cACmB;AACnB,SAAO,IAAI,QAAQ,CAAC,YAAY;GAC/B,MAAM,cAAc,CAACQ,SAAkB;AACtC,WAAO,OAAO;AACd,eAAW,MAAM,QAAQ,KAAK,EAAE,qBAAqB;GACrD;GAED,MAAMC,cAAkC,CACvC;IACC,OAAO;IACP,OAAO,MAAM,YAAY,MAAM;IAC/B,MAAM,WAAW;GACjB,GACD;IACC,OAAO;IACP,OAAO,MAAM,YAAY,KAAK;IAC9B,MAAM,WAAW;GACjB,CACD;GACD,MAAM,SAAS,OAAO,gBAAgB,4BAA4B,aAAa,SAAS,aAAa;EACrG;CACD;;;;;;;;;CAUD,OAAO,gBACNV,4BACAW,SACAC,SACAX,cACS;EACT,IAAIC;EAEJ,MAAM,cAAc,CAACW,aAAsB;AAC1C,UAAO,OAAO;AACd,cAAW,MAAM,WAAW,QAAQ,SAAS,EAAE,qBAAqB;EACpE;EAGD,SAAS,aAAuB;GAC/B,MAAM,yBACE,iBAAiB,WACrB,gBAAE,sDAAsD,aAAa,UAC9D,iBAAiB,aACxB,cAAc,GACd;AAEJ,UAAO,CAAC,KAAK,mBAAmB,2BAA2B,EAAE,eAAgB;EAC7E;AAED,WAAS,IAAI,OAAO,WAAW,OAAO,EACrC,MAAM,MAAM,CACX,gBAAE,2GAA2G,YAAY,CAAC,EAC1H,QAAQ,WAAW,IAChB,OACA,gBACA,+BACA,QAAQ,IAAI,CAAC,MAAM,gBAAE,QAAQ,EAAE,CAAC,CAC/B,AACJ,EACD,GACC,gBAAgB,MAAM,YAAY,MAAM,CAAC,CACzC,YAAY;GACZ,KAAK,KAAK;GACV,OAAO;GACP,MAAM,MAAM,YAAY,MAAM;GAC9B,MAAM;EACN,EAAC;AACH,SAAO,MAAM;AACb,SAAO;CACP;;;;;CAMD,OAAO,OACNC,SACAC,SAIa;AACb,SAAO,IAAI,QAAQ,CAAC,YAAY;GAC/B,MAAM,SAAS,CAACC,WAAc;AAC7B,WAAO,OAAO;AACd,eAAW,MAAM,QAAQ,OAAO,EAAE,qBAAqB;GACvD;GAED,MAAM,cAAc,QAAQ,IAAI,CAAC,WAAW;AAC3C,WAAO;KACN,OAAO,OAAO;KACd,OAAO,MAAM,OAAO,OAAO,MAAM;KACjC,MAAM,WAAW;IACjB;GACD,EAAC;GACF,MAAM,SAAS,OAAO,gBAAgB,SAAS,YAAY;EAC3D;CACD;;;;;CAMD,OAAO,eACNF,SACAG,SAKa;AACb,SAAO,IAAI,QAAQ,CAAC,YAAY;GAC/B,MAAM,SAAS,CAACD,WAAc;AAC7B,WAAO,OAAO;AACd,eAAW,MAAM,QAAQ,OAAO,EAAE,qBAAqB;GACvD;GAED,MAAM,cAAc,QAAQ,IAAI,CAAC,WAAW;AAC3C,WAAO;KACN,OAAO,OAAO;KACd,OAAO,MAAM,OAAO,OAAO,MAAM;KACjC,MAAM,OAAO,SAAS,YAAY,WAAW,UAAU,WAAW;IAClE;GACD,EAAC;GAGF,SAAS,aAAuB;AAC/B,WAAO,KAAK,mBAAmB,QAAQ;GACvC;GAED,MAAM,SAAS,IAAI,OAAO,WAAW,OAAO,EAC3C,MAAM,MACL,gBAAE,oCAAoC,CACrC,gBAAE,+EAA+E,YAAY,CAAC,EAC9F,YAAY,WAAW,IACpB,OACA,gBACA,qBACA,YAAY,IAAI,CAAC,MAAM,gBAAE,QAAQ,EAAE,CAAC,CACnC,AACJ,EAAC,CACH;AACD,UAAO,MAAM;EACb;CACD;;;;CAKD,OAAO,QAAQF,SAA2B;EACzC,MAAM,SAAS,OAAO,gBAAgB,SAAS,CAAE,EAAC;AAClD,SAAO,YAAY;GAClB,KAAK,KAAK;GACV,OAAO;GACP,MAAM;GACN,MAAM;EACN,EAAC;AACF,SAAO,YAAY;GAClB,KAAK,KAAK;GACV,OAAO;GACP,MAAM;GACN,MAAM;EACN,EAAC;CACF;CAGD,OAAO,KAAKI,OAAqBC,YAAiCC,OAAiC;AAClG,SAAO,IAAI,QAAQ,CAAC,YAAY;GAC/B,IAAIC;GAEJ,MAAM,cAAc,MAAM;AACzB,eAAW,OAAO;AAClB,eAAW,MAAM,SAAS,EAAE,qBAAqB;GACjD;GAED,MAAM,OAAO,MAAM;AAClB,gBAAY,CAAC,KAAK,MAAM;AACvB,gBAAW,OAAO;AAClB,gBAAW,MAAM,SAAS,EAAE,qBAAqB;IACjD,EAAC;GACF;GAED,MAAMC,iBAAuC;IAC5C,MAAM,CACL;KACC,OAAO;KACP,OAAO;KACP,MAAM,WAAW;IACjB,CACD;IACD,OAAO,CACN;KACC,OAAO;KACP,OAAO;KACP,MAAM,WAAW;IACjB,CACD;IACD,QAAQ,KAAK,gBAAgB,SAAS,OAAO,CAAC;GAC9C;AACD,gBAAa,IAAI,OAAO,WAAW,YAAY,EAC9C,MAAM,MAAM,gBAAE,IAAI,CAAC,gBAAE,iBAAiB,eAAe,EAAE,gBAAE,wBAAwB,gBAAE,MAAM,CAAC,AAAC,EAAC,CAC5F,GACC,gBAAgB,YAAY,CAC5B,MAAM;EACR;CACD;CAED,OAAO,SAASC,OAAeC,SAAmC;AACjE,SAAO,IAAI,QAAQ,CAAC,YAAY;GAC/B,IAAItB;GAEJ,MAAM,cAAc,CAACuB,QAAiB;AACrC,WAAO,OAAO;AACd,eAAW,MAAM,QAAQ,IAAI,EAAE,qBAAqB;GACpD;GAED,MAAMf,cAAkC,CACvC;IACC,OAAO;IACP,OAAO,MAAM,YAAY,MAAM;IAC/B,MAAM,WAAW;GACjB,GACD;IACC,OAAO;IACP,OAAO,MAAM,YAAY,KAAK;IAC9B,MAAM,WAAW;GACjB,CACD;AACD,YAAS,IAAI,OAAO,WAAW,UAAU,EACxC,MAAM,MAAM,CACX,gBAAE,kDAAkD,CACnD,gBAAE,UAAU,MAAM,EAClB,gBAAE,uCAAuC,CACxC,gBAAE,sBAAsB,QAAQ,EAChC,gBAAE,aAAa,mBAAmB,0CAA0C,EAC3E,OAAO,EACN,aAAa,QACb,EACD,EAAC,AACF,EAAC,AACF,EAAC,EACF,gBACC,2DACA,YAAY,IAAI,CAAC,MAAM,gBAAE,QAAQ,EAAE,CAAC,CACpC,AACD,EACD,GACC,gBAAgB,MAAM,YAAY,MAAM,CAAC,CACzC,YAAY;IACZ,KAAK,KAAK;IACV,OAAO;IACP,MAAM,MAAM,YAAY,MAAM;IAC9B,MAAM;GACN,EAAC,CACD,MAAM;EACR;CACD;;;;;;;;;CAUD,OAAO,iBAAiBgB,OAAkC;EACzD,IAAI,SAAS,KAAK,mBAAmB,MAAM;AAC3C,SAAO,OAAO,MAAM;CACpB;CAED,OAAO,mBAAmBA,OAAkC;EAC3D,IAAIxB;EACJ,MAAM,EAAE,OAAO,OAAO,UAAU,WAAW,aAAa,mBAAmB,gBAAgB,oBAAoB,cAAc,MAAM,GAAG,OAAO,OAC5I,CAAE,GACF;GACC,aAAa;GACb,mBAAmB;GACnB,gBAAgB;GAChB,oBAAoB;GACpB,MAAM,WAAW;GACjB,oBAAoB,2BAAO,cAAc;EACzC,GACD,MACA;EAED,MAAM,WAAW,MAAM;AACtB,OAAI,aACH,cAAa,OAAO;AAGrB,UAAO,OAAO;EACd;EAED,MAAM,WAAW,MAAM;AACtB,QAAK,SACJ;GAGD,IAAIyB,mBAA8D;AAElE,OAAI,UACH,oBAAmB,WAAW;GAG/B,IAAI,YAAY,QAAQ,QAAQ,iBAAiB,CAAC,KAAK,CAAC,aAAa;AACpE,QAAI,SACH,QAAO,QAAQ,SAAS;IAExB,UAAS,OAAO;GAEjB,EAAC;AAEF,OAAI,4BAA4B,QAE/B,QAAO,gCAA6B,KAAK,CAAC,WAAW,OAAO,mBAAmB,kBAAkB,UAAU,CAAC;EAE7G;EAED,MAAML,iBAAuC;GAC5C,MAAM,UAAU,aAAa,CAAC,UAC7B,QACG,CACA;IACC,OAAO;IACP,OAAO;IACP,MAAM,WAAW;GACjB,CACA,IACD,CAAE,EACL;GACD,OAAO,WACJ,CACA;IACC,OAAO;IACP,OAAO;IACP,MAAM,WAAW;GACjB,CACA,IACD,CAAE;GACL,QAAQ;EACR;AACD,WAAS,IAAI,OAAO,MAAM,EACzB,MAAM,MAAM,CACX,gBAAE,iBAAiB,eAAe,EAClC,gBAAE,iDAAiD,CAAC,sBAAsB,QAAQ,OAAO,GAAG,gBAAE,MAAM,AAAC,EAAC,AACtG,EACD,GAAE,gBAAgB,SAAS;AAC5B,SAAO,YAAY;GAClB,KAAK,KAAK;GACV,OAAO;GACP,MAAM,UAAU,aAAa,CAAC,UAAU,SAAS,UAAU,CAAC;GAC5D,MAAM;GACN,SAAS,UAAU,YAAY;EAC/B,EAAC;AAEF,MAAI,kBACH,QAAO,YAAY;GAClB,KAAK,KAAK;GACV,OAAO;GACP,MAAM;GACN,MAAM;EACN,EAAC;AAEH,SAAO;CACP;;;;;CAMD,OAAO,oBAAoBM,OAA+C;AACzE,SAAO,IAAI,QAAQ,CAAC,YAAY;AAC/B,UAAO,2BAA2B,OAAO,OAAO,UAAU,QAAQ,MAAM,CAAC;EACzE;CACD;;;;CAKD,OAAO,2BAA2BA,OAA8BC,UAAgD;EAC/G,IAAI,gBAAgB,MAAM,iBAAiB,cAAc;EAEzD,IAAI,SAAS,MAAM,gBAAgB;AACnC,SAAO,iBAAiB;GACvB,OAAO,MAAM;GACb,OAAO,MACN,gBAAE,WAAW;IACZ,OAAO,MAAM;IACb,OAAO;IACP,MAAM;IACN,SAAS,CAAC,aAAc,SAAS;IACjC,WAAW,MAAO,MAAM,YAAY,KAAK,mBAAmB,MAAM,UAAU,GAAG;GAC/E,EAAC;GACH,WAAW,MAAO,MAAM,iBAAiB,MAAM,eAAe,OAAO,GAAG;GACxE,mBAAmB;GACnB,UAAU,OAAO3B,WAAmB;AACnC,QAAI;AACH,WAAM,SAAS,OAAO;AACtB,YAAO,OAAO;IACd,SAAQ,OAAO;AACf,UAAK,eAAe,MAAM,CACzB,QAAO,OAAO;AAEf,WAAM;IACN;GACD;EACD,EAAC;CACF;;;;;;;;;CAUD,OAAO,wBACN4B,SACAC,wBACAC,WACAC,OACkB;AAClB,SAAO,IAAI,QAAQ,CAAC,YAAY;GAC/B,IAAIC,SAAiB;AACrB,UAAO,iBAAiB;IACvB,OAAO;IACP,OAAO,EACN,MAAM,MACL,gBAAE,WAAW;KACZ,OAAO;KACP,WAAW,MAAO,YAAY,KAAK,IAAI,UAAU,GAAG;KACpD,OAAO;KACP,SAAS,CAAC,aAAc,SAAS;KACjC,MAAM,cAAc;IACpB,EAAC,CACH;IACD,UAAU,CAAChC,WAAmB;AAC7B,aAAQ,OAAO;AACf,YAAO,OAAO;IACd;GACD,EAAC;EACF;CACD;;;;;;;;;;;CAYD,OAAO,4BACN4B,SACAK,OACAH,WACAI,OACAC,cACAC,eACa;EACb,IAAIC,gBAAmB;AACvB,SAAO,IAAI,QAAQ,CAAC,YAAY;AAC/B,UAAO,iBAAiB;IACvB,OAAO;IACP,OAAO,EACN,MAAM,MAEL,gBACC,kBACA,SAAmC;KAClC;KACA;KACe;KACf,yBAAyB,CAAC,aAAc,gBAAgB;IACxD,EAAC,CACF,CACF;IACD,UAAU,CAACrC,WAAmB;AAC7B,aAAQ,cAAc;AACtB,YAAO,OAAO;IACd;GACD,EAAC;EACF;CACD;;CAGD,OAAO,YAAYsC,gBAAsCpB,OAA0B;AAClF,SAAO,IAAI,OAAO,WAAW,WAAW,EACvC,MAAM,MAAM;AACX,UAAO,gBAAE,IAAI,CAAC,gBAAE,iBAAiB,eAAe,EAAE,gBAAE,4BAA4B,gBAAE,wBAAwB,gBAAE,MAAM,CAAC,CAAC,AAAC,EAAC;EACtH,EACD;CACD;CAED,OAAO,WAA6BoB,gBAAsCC,OAA4BC,YAAuB;AAC5H,SAAO,IAAI,OAAO,WAAW,WAAW,EACvC,MAAM,MACL,gBAAE,IAAI,CAEL,eAAe,WAAW,OAAO,gBAAE,iBAAiB,eAAe,EAEnE,gBAAE,yCAAyC,gBAAE,wBAAwB,gBAAE,OAAO,WAAW,CAAC,CAAC,AAC3F,EAAC,CACH;CACD;CAED,OAAO,iBACNF,gBACAC,OACAC,YACAC,aACS;AACT,SAAO,IAAI,OAAO,WAAW,YAAY,EACxC,MAAM,MACL,gBAAE,2BAA2B,EAAE,OAAO,YAAa,GAAE,CAEpD,eAAe,WAAW,OAAO,gBAAE,iBAAiB,eAAe,EAEnE,gBAAE,wCAAwC,EAAE,OAAO,EAAE,cAAc,SAAU,EAAE,GAAE,gBAAE,OAAO,WAAW,CAAC,AACtG,EAAC,CACH;CACD;CAED,OAAO,gBAAkCH,gBAAsCI,OAA+B;AAC7G,SAAO,IAAI,OAAO,WAAW,WAAW,EACvC,MAAM,MAAM,CAEX,eAAe,WAAW,OAAO,gBAAE,iBAAiB,eAAe,EAEnE,gBAAE,8BAA8B,OAAO,CAAC,AACxC,EACD;CACD;CAED,aAAa,aAA+BC,OAAyBJ,OAA4BC,YAA8B;AAC9H,SAAO,IAAI,QAAQ,CAAC,YAAY;GAC/B,IAAIxC;GAEJ,MAAM,QAAQ,MAAM;AACnB,WAAO,OAAO;AACd,aAAS;GACT;GAED,MAAM4C,cAAoC;IACzC,MAAM,CACL;KACC,OAAO;KACP,OAAO;KACP,MAAM,WAAW;IACjB,CACD;IACD,QAAQ;GACR;AACD,YAAS,OAAO,WAAW,aAAa,OAAO,WAAW,CACxD,gBAAgB,MAAM,CACtB,YAAY;IACZ,KAAK,KAAK;IACV,MAAM;IACN,MAAM;GACN,EAAC,CACD,MAAM;EACR;CACD;CAED,OAAO,sBAAsBC,SAAuB;AACnD,SAAO,iBAAiB;AACxB,kBAAE,QAAQ;CACV;AACD;AAGD,aAAa,wBAAwB,OAAO,sBAAsB"}