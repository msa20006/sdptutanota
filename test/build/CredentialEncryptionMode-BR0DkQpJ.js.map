{"version":3,"file":"CredentialEncryptionMode-BR0DkQpJ.js","names":[],"sources":["../../src/common/misc/credentials/CredentialEncryptionMode.ts"],"sourcesContent":["/**\n * Enum that describes the different methods for encrypting the intermediate key used for credentials encryption.\n */\nexport enum CredentialEncryptionMode {\n\t/**\n\t * Credentials key can be decrypted without user interaction if the device is in an unlocked state.\n\t */\n\tDEVICE_LOCK = \"DEVICE_LOCK\",\n\n\t/**\n\t * Credentials key can only be decrypted after authenticating using the system password/device pin.\n\t * Depending on the platform authenticating using system password will keep the user authenticated for\n\t * a certain period of time, i.e. the user might NOT have to enter the system password each time.\n\t */\n\tSYSTEM_PASSWORD = \"SYSTEM_PASSWORD\",\n\n\t/**\n\t * Credentials key can only be decrypted using biometric evidence. Depending on the device, there might be\n\t * a fallback option to use the system password/device pin as an alternative. In contrast to SYSTEM_PASSWORD\n\t * mode every access to the credentials key must be individually authenticated - even when using the fallback.\n\t */\n\tBIOMETRICS = \"BIOMETRICS\",\n\n\t/**\n\t * Credentials key is secured with a separate password / pin that is independent of the state of the system\n\t * keychain.\n\t */\n\tAPP_PASSWORD = \"APP_PASSWORD\",\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAGY,gEAAL;;;;AAIN;;;;;;AAOA;;;;;;AAOA;;;;;AAMA;;AACA"}