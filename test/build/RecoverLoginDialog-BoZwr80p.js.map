{"version":3,"file":"RecoverLoginDialog-BoZwr80p.js","names":["mailAddress?: string | null","resetAction?: ResetAction","selectedAction: Stream<ResetAction | null>","resetPasswordAction: DropdownButtonAttrs","resetSecondFactorAction: DropdownButtonAttrs","resetActionButtonAttrs: IconButtonAttrs","cleanMailAddress: string","e: Error"],"sources":["../../src/common/login/recover/RecoverLoginDialog.ts"],"sourcesContent":["import m from \"mithril\"\nimport stream from \"mithril/stream\"\nimport Stream from \"mithril/stream\"\nimport { AccessBlockedError, AccessDeactivatedError, NotAuthenticatedError, TooManyRequestsError } from \"../../api/common/error/RestError\"\nimport { showProgressDialog } from \"../../gui/dialogs/ProgressDialog\"\nimport { isMailAddress } from \"../../misc/FormatValidator.js\"\nimport { Autocomplete, TextField, TextFieldType } from \"../../gui/base/TextField.js\"\nimport { lang } from \"../../misc/LanguageViewModel.js\"\nimport { PasswordForm, PasswordModel } from \"../../settings/PasswordForm.js\"\nimport { Icons } from \"../../gui/base/icons/Icons\"\nimport { Dialog, DialogType } from \"../../gui/base/Dialog\"\nimport { HtmlEditor, HtmlEditorMode } from \"../../gui/editor/HtmlEditor\"\nimport { client } from \"../../misc/ClientDetector.js\"\nimport { CancelledError } from \"../../api/common/error/CancelledError\"\nimport { locator } from \"../../api/main/CommonLocator\"\nimport { windowFacade } from \"../../misc/WindowFacade.js\"\nimport { assertMainOrNode } from \"../../api/common/Env\"\nimport { createDropdown, DropdownButtonAttrs } from \"../../gui/base/Dropdown.js\"\nimport { IconButton, IconButtonAttrs } from \"../../gui/base/IconButton.js\"\nimport { ButtonSize } from \"../../gui/base/ButtonSize.js\"\nimport { PasswordField } from \"../../misc/passwords/PasswordField.js\"\n\nassertMainOrNode()\nexport type ResetAction = \"password\" | \"secondFactor\"\n\nexport function show(mailAddress?: string | null, resetAction?: ResetAction): Dialog {\n\tconst selectedAction: Stream<ResetAction | null> = stream(resetAction ?? null)\n\tconst passwordModel = new PasswordModel(locator.usageTestController, locator.logins, { checkOldPassword: false, enforceStrength: true })\n\tconst passwordValueStream = stream(\"\")\n\tconst emailAddressStream = stream(mailAddress || \"\")\n\tconst resetPasswordAction: DropdownButtonAttrs = {\n\t\tlabel: \"recoverSetNewPassword_action\",\n\t\tclick: () => selectedAction(\"password\"),\n\t}\n\tconst resetSecondFactorAction: DropdownButtonAttrs = {\n\t\tlabel: \"recoverResetFactors_action\",\n\t\tclick: () => selectedAction(\"secondFactor\"),\n\t}\n\tconst resetActionClickHandler = createDropdown({\n\t\tlazyButtons: () => [resetPasswordAction, resetSecondFactorAction],\n\t\twidth: 300,\n\t})\n\tconst resetActionButtonAttrs: IconButtonAttrs = {\n\t\ttitle: \"action_label\",\n\t\tclick: resetActionClickHandler,\n\t\ticon: Icons.Edit,\n\t\tsize: ButtonSize.Compact,\n\t}\n\tconst selectedValueLabelStream = selectedAction.map((v) => {\n\t\tif (v === \"password\") {\n\t\t\treturn lang.get(\"recoverSetNewPassword_action\")\n\t\t} else if (v === \"secondFactor\") {\n\t\t\treturn lang.get(\"recoverResetFactors_action\")\n\t\t} else {\n\t\t\treturn lang.get(\"choose_label\")\n\t\t}\n\t})\n\tconst editor = new HtmlEditor(\"recoveryCode_label\")\n\teditor.setMode(HtmlEditorMode.HTML)\n\teditor.setHtmlMonospace(true)\n\teditor.setMinHeight(80)\n\teditor.showBorders()\n\tconst recoverDialog = Dialog.showActionDialog({\n\t\ttitle: \"recover_label\",\n\t\ttype: DialogType.EditSmall,\n\t\tchild: {\n\t\t\tview: () => {\n\t\t\t\treturn [\n\t\t\t\t\tm(TextField, {\n\t\t\t\t\t\tlabel: \"mailAddress_label\",\n\t\t\t\t\t\tvalue: emailAddressStream(),\n\t\t\t\t\t\tautocompleteAs: Autocomplete.email,\n\t\t\t\t\t\ttype: TextFieldType.Email,\n\t\t\t\t\t\toninput: emailAddressStream,\n\t\t\t\t\t}),\n\t\t\t\t\tm(editor),\n\t\t\t\t\tm(TextField, {\n\t\t\t\t\t\tlabel: \"action_label\",\n\t\t\t\t\t\tvalue: selectedValueLabelStream(),\n\t\t\t\t\t\toninput: selectedValueLabelStream,\n\t\t\t\t\t\tinjectionsRight: () => m(IconButton, resetActionButtonAttrs),\n\t\t\t\t\t\tisReadOnly: true,\n\t\t\t\t\t}),\n\t\t\t\t\tselectedAction() == null\n\t\t\t\t\t\t? null\n\t\t\t\t\t\t: selectedAction() === \"password\"\n\t\t\t\t\t\t? m(PasswordForm, { model: passwordModel })\n\t\t\t\t\t\t: m(PasswordField, {\n\t\t\t\t\t\t\t\tvalue: passwordValueStream(),\n\t\t\t\t\t\t\t\tautocompleteAs: Autocomplete.currentPassword,\n\t\t\t\t\t\t\t\toninput: passwordValueStream,\n\t\t\t\t\t\t  }),\n\t\t\t\t]\n\t\t\t},\n\t\t},\n\t\tokAction: async () => {\n\t\t\tconst cleanMailAddress = emailAddressStream().trim().toLowerCase()\n\t\t\tconst cleanRecoverCodeValue = editor.getValue().replace(/\\s/g, \"\").toLowerCase()\n\n\t\t\tif (!isMailAddress(cleanMailAddress, true)) {\n\t\t\t\tDialog.message(\"mailAddressInvalid_msg\")\n\t\t\t} else if (cleanRecoverCodeValue === \"\") {\n\t\t\t\tDialog.message(\"recoveryCodeEmpty_msg\")\n\t\t\t} else if (selectedAction() === \"password\") {\n\t\t\t\tconst errorMessageId = passwordModel.getErrorMessageId()\n\n\t\t\t\tif (errorMessageId) {\n\t\t\t\t\tDialog.message(errorMessageId)\n\t\t\t\t} else {\n\t\t\t\t\tshowProgressDialog(\n\t\t\t\t\t\t\"pleaseWait_msg\",\n\t\t\t\t\t\tlocator.loginFacade.recoverLogin(cleanMailAddress, cleanRecoverCodeValue, passwordModel.getNewPassword(), client.getIdentifier()),\n\t\t\t\t\t)\n\t\t\t\t\t\t.then(async () => {\n\t\t\t\t\t\t\trecoverDialog.close()\n\t\t\t\t\t\t\tawait deleteCredentialsByMailAddress(cleanMailAddress)\n\t\t\t\t\t\t\twindowFacade.reload({})\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch((e) => handleError(e))\n\t\t\t\t\t\t.finally(() => locator.secondFactorHandler.closeWaitingForSecondFactorDialog())\n\t\t\t\t}\n\t\t\t} else if (selectedAction() === \"secondFactor\") {\n\t\t\t\tconst passwordValue = passwordValueStream()\n\t\t\t\tshowProgressDialog(\"pleaseWait_msg\", locator.loginFacade.resetSecondFactors(cleanMailAddress, passwordValue, cleanRecoverCodeValue))\n\t\t\t\t\t.then(async () => {\n\t\t\t\t\t\trecoverDialog.close()\n\t\t\t\t\t\tawait deleteCredentialsByMailAddress(cleanMailAddress)\n\t\t\t\t\t\twindowFacade.reload({})\n\t\t\t\t\t})\n\t\t\t\t\t.catch((e) => handleError(e))\n\t\t\t}\n\t\t},\n\t\tcancelAction: () =>\n\t\t\tm.route.set(\"/login\", {\n\t\t\t\tnoAutoLogin: true,\n\t\t\t}),\n\t})\n\treturn recoverDialog\n}\n\nasync function deleteCredentialsByMailAddress(cleanMailAddress: string) {\n\tconst allCredentials = await locator.credentialsProvider.getInternalCredentialsInfos()\n\tconst credentials = allCredentials.find((c) => c.login === cleanMailAddress)\n\n\tif (credentials) {\n\t\tawait locator.credentialsProvider.deleteByUserId(credentials.userId)\n\t}\n}\n\nfunction handleError(e: Error) {\n\tif (e instanceof NotAuthenticatedError) {\n\t\tDialog.message(\"loginFailed_msg\")\n\t} else if (e instanceof AccessBlockedError || e instanceof AccessDeactivatedError) {\n\t\tDialog.message(\"loginFailedOften_msg\")\n\t} else if (e instanceof CancelledError) {\n\t\t// Thrown when second factor dialog is cancelled\n\t\tm.redraw()\n\t} else if (e instanceof TooManyRequestsError) {\n\t\tDialog.message(\"tooManyAttempts_msg\")\n\t} else {\n\t\tthrow e\n\t}\n}\n"],"mappings":"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"}