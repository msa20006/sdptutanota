{"version":3,"file":"OwnMailAddressNameChanger-n0V6M1sm.js","names":["mailboxModel: MailboxModel","entityClient: EntityClient","address: string","name: string","mailboxProperties: MailboxProperties"],"sources":["../../src/common/settings/mailaddress/OwnMailAddressNameChanger.ts"],"sourcesContent":["import { AddressToName, MailAddressNameChanger } from \"./MailAddressTableModel.js\"\nimport { MailboxModel } from \"../../mailFunctionality/MailboxModel.js\"\nimport { createMailAddressProperties, MailboxProperties } from \"../../api/entities/tutanota/TypeRefs.js\"\nimport { EntityClient } from \"../../api/common/EntityClient.js\"\nimport { findAndRemove } from \"@tutao/tutanota-utils\"\n\n/** Name changer for personal mailbox of the currently logged-in user. */\nexport class OwnMailAddressNameChanger implements MailAddressNameChanger {\n\tconstructor(private readonly mailboxModel: MailboxModel, private readonly entityClient: EntityClient) {}\n\n\tasync getSenderNames(): Promise<AddressToName> {\n\t\tconst mailboxProperties = await this.getMailboxProperties()\n\t\treturn this.collectMap(mailboxProperties)\n\t}\n\n\tasync setSenderName(address: string, name: string): Promise<AddressToName> {\n\t\tconst mailboxDetails = await this.mailboxModel.getUserMailboxDetails()\n\t\tconst mailboxProperties = await this.mailboxModel.getMailboxProperties(mailboxDetails.mailboxGroupRoot)\n\t\tlet aliasConfig = mailboxProperties.mailAddressProperties.find((p) => p.mailAddress === address)\n\t\tif (aliasConfig == null) {\n\t\t\taliasConfig = createMailAddressProperties({ mailAddress: address, senderName: name })\n\t\t\tmailboxProperties.mailAddressProperties.push(aliasConfig)\n\t\t} else {\n\t\t\taliasConfig.senderName = name\n\t\t}\n\t\tawait this.entityClient.update(mailboxProperties)\n\t\treturn this.collectMap(mailboxProperties)\n\t}\n\n\tasync removeSenderName(address: string): Promise<AddressToName> {\n\t\tconst mailboxDetails = await this.mailboxModel.getUserMailboxDetails()\n\t\tconst mailboxProperties = await this.mailboxModel.getMailboxProperties(mailboxDetails.mailboxGroupRoot)\n\t\tfindAndRemove(mailboxProperties.mailAddressProperties, (p) => p.mailAddress === address)\n\t\tawait this.entityClient.update(mailboxProperties)\n\t\treturn this.collectMap(mailboxProperties)\n\t}\n\n\tprivate collectMap(mailboxProperties: MailboxProperties): AddressToName {\n\t\tconst result = new Map()\n\t\tfor (const properties of mailboxProperties.mailAddressProperties) {\n\t\t\tresult.set(properties.mailAddress, properties.senderName)\n\t\t}\n\t\treturn result\n\t}\n\n\tprivate async getMailboxProperties(): Promise<MailboxProperties> {\n\t\tconst mailboxDetails = await this.mailboxModel.getUserMailboxDetails()\n\t\treturn await this.mailboxModel.getMailboxProperties(mailboxDetails.mailboxGroupRoot)\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAOa,4BAAN,MAAkE;CACxE,YAA6BA,cAA6CC,cAA4B;EA0CtG,KA1C6B;EA0C5B,KA1CyE;CAA8B;CAExG,MAAM,iBAAyC;EAC9C,MAAM,oBAAoB,MAAM,KAAK,sBAAsB;AAC3D,SAAO,KAAK,WAAW,kBAAkB;CACzC;CAED,MAAM,cAAcC,SAAiBC,MAAsC;EAC1E,MAAM,iBAAiB,MAAM,KAAK,aAAa,uBAAuB;EACtE,MAAM,oBAAoB,MAAM,KAAK,aAAa,qBAAqB,eAAe,iBAAiB;EACvG,IAAI,cAAc,kBAAkB,sBAAsB,KAAK,CAAC,MAAM,EAAE,gBAAgB,QAAQ;AAChG,MAAI,eAAe,MAAM;AACxB,iBAAc,4BAA4B;IAAE,aAAa;IAAS,YAAY;GAAM,EAAC;AACrF,qBAAkB,sBAAsB,KAAK,YAAY;EACzD,MACA,aAAY,aAAa;AAE1B,QAAM,KAAK,aAAa,OAAO,kBAAkB;AACjD,SAAO,KAAK,WAAW,kBAAkB;CACzC;CAED,MAAM,iBAAiBD,SAAyC;EAC/D,MAAM,iBAAiB,MAAM,KAAK,aAAa,uBAAuB;EACtE,MAAM,oBAAoB,MAAM,KAAK,aAAa,qBAAqB,eAAe,iBAAiB;AACvG,gBAAc,kBAAkB,uBAAuB,CAAC,MAAM,EAAE,gBAAgB,QAAQ;AACxF,QAAM,KAAK,aAAa,OAAO,kBAAkB;AACjD,SAAO,KAAK,WAAW,kBAAkB;CACzC;CAED,AAAQ,WAAWE,mBAAqD;EACvE,MAAM,SAAS,IAAI;AACnB,OAAK,MAAM,cAAc,kBAAkB,sBAC1C,QAAO,IAAI,WAAW,aAAa,WAAW,WAAW;AAE1D,SAAO;CACP;CAED,MAAc,uBAAmD;EAChE,MAAM,iBAAiB,MAAM,KAAK,aAAa,uBAAuB;AACtE,SAAO,MAAM,KAAK,aAAa,qBAAqB,eAAe,iBAAiB;CACpF;AACD"}