{"version":3,"file":"IconButton-DsU60HJ_.js","names":["size: ButtonSize | undefined"],"sources":["../../src/common/gui/base/ButtonSize.ts","../../src/common/gui/base/IconButton.ts"],"sourcesContent":["/**\n * Buttons have an interactive area that is larger than the visual size\n * this size is too large to fit into some injections, so we have\n * a compact size for that.\n */\nexport const enum ButtonSize {\n\tNormal,\n\tCompact,\n\tLarge,\n}\n","import m, { Children, Component, Vnode } from \"mithril\"\nimport type { MaybeTranslation } from \"../../misc/LanguageViewModel\"\nimport { lang } from \"../../misc/LanguageViewModel\"\nimport { AllIcons, Icon, IconSize } from \"./Icon\"\nimport type { ClickHandler } from \"./GuiUtils\"\nimport { assertMainOrNode } from \"../../api/common/Env\"\nimport { ButtonColor, getColors } from \"./Button.js\"\nimport { ButtonSize } from \"./ButtonSize.js\"\nimport { BaseButton, BaseButtonAttrs } from \"./buttons/BaseButton.js\"\n\nassertMainOrNode()\n\nexport interface IconButtonAttrs {\n\ticon: AllIcons\n\ttitle: MaybeTranslation\n\tclick: ClickHandler\n\tcolors?: ButtonColor\n\tsize?: ButtonSize\n\tonkeydown?: (event: KeyboardEvent) => unknown\n\tdisabled?: boolean\n}\n\nexport class IconButton implements Component<IconButtonAttrs> {\n\tview({ attrs }: Vnode<IconButtonAttrs>): Children {\n\t\treturn m(BaseButton, {\n\t\t\tlabel: attrs.title,\n\t\t\ticon: m(Icon, {\n\t\t\t\ticon: attrs.icon,\n\t\t\t\tcontainer: \"div\",\n\t\t\t\tclass: \"center-h\",\n\t\t\t\tsize: attrs.size === ButtonSize.Large ? IconSize.XL : IconSize.Medium,\n\t\t\t\tstyle: {\n\t\t\t\t\tfill: getColors(attrs.colors ?? ButtonColor.Content).button,\n\t\t\t\t\tvisibility: attrs.disabled ? \"hidden\" : \"visible\",\n\t\t\t\t},\n\t\t\t}),\n\t\t\tonclick: attrs.click,\n\t\t\tonkeydown: attrs.onkeydown,\n\t\t\tclass: `icon-button state-bg ${IconButton.getSizeClass(attrs.size)}`,\n\t\t\tdisabled: attrs.disabled,\n\t\t\tstyle: {\n\t\t\t\tvisibility: attrs.disabled ? \"hidden\" : \"visible\",\n\t\t\t},\n\t\t} satisfies BaseButtonAttrs)\n\t}\n\n\tprivate static getSizeClass(size: ButtonSize | undefined) {\n\t\tswitch (size) {\n\t\t\tcase ButtonSize.Compact:\n\t\t\t\treturn \"compact\"\n\t\t\tcase ButtonSize.Large:\n\t\t\t\treturn \"large\"\n\t\t\tcase ButtonSize.Normal:\n\t\t\tdefault:\n\t\t\t\treturn \"\"\n\t\t}\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAKkB,oCAAX;AACN;AACA;AACA;;AACA;;;;ACCD,kBAAkB;IAYL,aAAN,MAAM,WAAiD;CAC7D,KAAK,EAAE,OAA+B,EAAY;AACjD,SAAO,gBAAE,YAAY;GACpB,OAAO,MAAM;GACb,MAAM,gBAAE,MAAM;IACb,MAAM,MAAM;IACZ,WAAW;IACX,OAAO;IACP,MAAM,MAAM,SAAS,WAAW,QAAQ,SAAS,KAAK,SAAS;IAC/D,OAAO;KACN,MAAM,UAAU,MAAM,UAAU,YAAY,QAAQ,CAAC;KACrD,YAAY,MAAM,WAAW,WAAW;IACxC;GACD,EAAC;GACF,SAAS,MAAM;GACf,WAAW,MAAM;GACjB,QAAQ,uBAAuB,WAAW,aAAa,MAAM,KAAK,CAAC;GACnE,UAAU,MAAM;GAChB,OAAO,EACN,YAAY,MAAM,WAAW,WAAW,UACxC;EACD,EAA2B;CAC5B;CAED,OAAe,aAAaA,MAA8B;AACzD,UAAQ,MAAR;AACC,QAAK,WAAW,QACf,QAAO;AACR,QAAK,WAAW,MACf,QAAO;AACR,QAAK,WAAW;AAChB,WACC,QAAO;EACR;CACD;AACD"}