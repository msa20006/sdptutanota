{"version":3,"file":"RedeemGiftCardWizard-B3LDNfGP.js","names":["config: {\n\t\t\tgiftCardInfo: GiftCardRedeemGetReturn\n\t\t\tkey: string\n\t\t\tpremiumPrice: number\n\t\t\tstoredCredentials: ReadonlyArray<CredentialsInfo>\n\t\t}","giftCardFacade: GiftCardFacade","credentialsProvider: CredentialsProvider","secondFactorHandler: SecondFactorHandler","logins: LoginController","entityClient: EntityClient","encryptedCredentials: CredentialsInfo","mailAddress: string","password: string","newAccountData: NewAccountData | null","country: Country | null","vnodeDOM: VnodeDOM<GiftCardRedeemAttrs>","vnode: Vnode<GiftCardRedeemAttrs>","method: GetCredentialsMethod","vnode: VnodeDOM<GiftCardRedeemAttrs>","model: RedeemGiftCardModel","hashFromUrl: string"],"sources":["../../src/common/subscription/giftcards/RedeemGiftCardWizard.ts"],"sourcesContent":["import m, { Children, Vnode, VnodeDOM } from \"mithril\"\nimport stream from \"mithril/stream\"\nimport { mapNullable, neverNull, noOp, ofClass } from \"@tutao/tutanota-utils\"\nimport type { WizardPageAttrs, WizardPageN } from \"../../gui/base/WizardDialog.js\"\nimport { createWizardDialog, emitWizardEvent, WizardEventType, wizardPageWrapper } from \"../../gui/base/WizardDialog.js\"\nimport { LoginController } from \"../../api/main/LoginController\"\nimport type { NewAccountData } from \"../UpgradeSubscriptionWizard\"\nimport { Dialog, DialogType } from \"../../gui/base/Dialog\"\nimport { LoginForm } from \"../../../common/login/LoginForm\"\nimport { CredentialsSelector } from \"../../../common/login/CredentialsSelector\"\nimport { showProgressDialog } from \"../../gui/dialogs/ProgressDialog\"\nimport { SignupForm } from \"../SignupForm\"\nimport { UserError } from \"../../api/main/UserError\"\nimport { showUserError } from \"../../misc/ErrorHandlerImpl\"\nimport type { AccountingInfo, GiftCardRedeemGetReturn } from \"../../api/entities/sys/TypeRefs.js\"\nimport { AccountingInfoTypeRef, CustomerInfoTypeRef } from \"../../api/entities/sys/TypeRefs.js\"\nimport { locator } from \"../../api/main/CommonLocator\"\nimport { getTokenFromUrl, renderAcceptGiftCardTermsCheckbox, renderGiftCardSvg } from \"./GiftCardUtils\"\nimport { CancelledError } from \"../../api/common/error/CancelledError\"\nimport { lang } from \"../../misc/LanguageViewModel\"\nimport { getLoginErrorMessage, handleExpectedLoginError } from \"../../misc/LoginUtils\"\nimport { RecoverCodeField } from \"../../settings/login/RecoverCodeDialog.js\"\nimport { HabReminderImage } from \"../../gui/base/icons/Icons\"\nimport { PaymentMethodType, PlanType } from \"../../api/common/TutanotaConstants\"\nimport { formatPrice, getPaymentMethodName, PaymentInterval, PriceAndConfigProvider } from \"../PriceUtils\"\nimport { TextField } from \"../../gui/base/TextField.js\"\nimport { elementIdPart, isSameId } from \"../../api/common/utils/EntityUtils\"\nimport { CredentialsProvider } from \"../../misc/credentials/CredentialsProvider.js\"\nimport { SessionType } from \"../../api/common/SessionType.js\"\nimport { NotAuthorizedError, NotFoundError } from \"../../api/common/error/RestError.js\"\nimport { GiftCardFacade } from \"../../api/worker/facades/lazy/GiftCardFacade.js\"\nimport { EntityClient } from \"../../api/common/EntityClient.js\"\nimport { Country, getByAbbreviation } from \"../../api/common/CountryList.js\"\nimport { renderCountryDropdown } from \"../../gui/base/GuiUtils.js\"\nimport { UpgradePriceType } from \"../FeatureListProvider\"\nimport { SecondFactorHandler } from \"../../misc/2fa/SecondFactorHandler.js\"\nimport { LoginButton } from \"../../gui/base/buttons/LoginButton.js\"\nimport { CredentialsInfo } from \"../../native/common/generatedipc/CredentialsInfo.js\"\n\nconst enum GetCredentialsMethod {\n\tLogin,\n\tSignup,\n}\n\nclass RedeemGiftCardModel {\n\tmailAddress = \"\"\n\tnewAccountData: NewAccountData | null = null\n\tcredentialsMethod = GetCredentialsMethod.Signup\n\n\t// accountingInfo is loaded after the user logs in, before redeeming the gift card\n\taccountingInfo: AccountingInfo | null = null\n\n\tconstructor(\n\t\tprivate readonly config: {\n\t\t\tgiftCardInfo: GiftCardRedeemGetReturn\n\t\t\tkey: string\n\t\t\tpremiumPrice: number\n\t\t\tstoredCredentials: ReadonlyArray<CredentialsInfo>\n\t\t},\n\t\tprivate readonly giftCardFacade: GiftCardFacade,\n\t\tprivate readonly credentialsProvider: CredentialsProvider,\n\t\tprivate readonly secondFactorHandler: SecondFactorHandler,\n\t\tprivate readonly logins: LoginController,\n\t\tprivate readonly entityClient: EntityClient,\n\t) {}\n\n\tget giftCardInfo(): GiftCardRedeemGetReturn {\n\t\treturn this.config.giftCardInfo\n\t}\n\n\tget giftCardId(): Id {\n\t\treturn elementIdPart(this.giftCardInfo.giftCard)\n\t}\n\n\tget key(): string {\n\t\treturn this.config.key\n\t}\n\n\tget premiumPrice(): number {\n\t\treturn this.config.premiumPrice\n\t}\n\n\tget message(): string {\n\t\treturn this.config.giftCardInfo.message\n\t}\n\n\tget paymentMethod(): PaymentMethodType {\n\t\treturn (this.accountingInfo?.paymentMethod as PaymentMethodType | null) ?? PaymentMethodType.AccountBalance\n\t}\n\n\tget storedCredentials(): ReadonlyArray<CredentialsInfo> {\n\t\treturn this.config.storedCredentials\n\t}\n\n\tasync loginWithStoredCredentials(encryptedCredentials: CredentialsInfo) {\n\t\tif (this.logins.isUserLoggedIn() && isSameId(this.logins.getUserController().user._id, encryptedCredentials.userId)) {\n\t\t\t// If the user is logged in already (because they selected credentials and then went back) we dont have to do\n\t\t\t// anything, so just move on\n\t\t\tawait this.postLogin()\n\t\t} else {\n\t\t\tawait this.logins.logout(false)\n\t\t\tconst credentials = await this.credentialsProvider.getDecryptedCredentialsByUserId(encryptedCredentials.userId)\n\n\t\t\tif (credentials) {\n\t\t\t\tawait this.logins.resumeSession(credentials, null, null)\n\t\t\t\tawait this.postLogin()\n\t\t\t}\n\t\t}\n\t}\n\n\tasync loginWithFormCredentials(mailAddress: string, password: string) {\n\t\tthis.mailAddress = mailAddress\n\t\t// If they try to login with a mail address that is stored, we want to swap out the old session with a new one\n\t\tawait this.logins.logout(false)\n\t\tawait this.logins.createSession(mailAddress, password, SessionType.Temporary)\n\t\tawait this.postLogin()\n\t}\n\n\tasync handleNewSignup(newAccountData: NewAccountData | null) {\n\t\tif (newAccountData || this.newAccountData) {\n\t\t\t// if there's an existing account it means the signup form was readonly\n\t\t\t// because we came back from the next page after having already signed up\n\t\t\tif (!this.newAccountData) {\n\t\t\t\tthis.newAccountData = newAccountData\n\t\t\t}\n\n\t\t\tconst { mailAddress, password } = neverNull(newAccountData || this.newAccountData)\n\n\t\t\tthis.mailAddress = mailAddress\n\n\t\t\tawait this.logins.createSession(mailAddress, password, SessionType.Temporary)\n\t\t\tawait this.postLogin()\n\t\t}\n\t}\n\n\tasync redeemGiftCard(country: Country | null): Promise<void> {\n\t\tif (country == null) {\n\t\t\tthrow new UserError(\"invoiceCountryInfoBusiness_msg\")\n\t\t}\n\n\t\treturn this.giftCardFacade\n\t\t\t.redeemGiftCard(this.giftCardId, this.key, country?.a ?? null)\n\t\t\t.catch(\n\t\t\t\tofClass(NotFoundError, () => {\n\t\t\t\t\tthrow new UserError(\"invalidGiftCard_msg\")\n\t\t\t\t}),\n\t\t\t)\n\t\t\t.catch(\n\t\t\t\tofClass(NotAuthorizedError, (e) => {\n\t\t\t\t\tthrow new UserError(lang.makeTranslation(\"error_msg\", e.message))\n\t\t\t\t}),\n\t\t\t)\n\t}\n\n\tprivate async postLogin(): Promise<void> {\n\t\tif (!this.logins.getUserController().isGlobalAdmin()) {\n\t\t\tthrow new UserError(\"onlyAccountAdminFeature_msg\")\n\t\t}\n\n\t\tawait this.secondFactorHandler.closeWaitingForSecondFactorDialog()\n\t\tconst customer = await this.logins.getUserController().loadCustomer()\n\t\tconst customerInfo = await this.entityClient.load(CustomerInfoTypeRef, customer.customerInfo)\n\t\tthis.accountingInfo = await this.entityClient.load(AccountingInfoTypeRef, customerInfo.accountingInfo)\n\n\t\tif (PaymentMethodType.AppStore === this.accountingInfo.paymentMethod) {\n\t\t\tthrow new UserError(\"redeemGiftCardWithAppStoreSubscription_msg\")\n\t\t}\n\n\t\tif (customer.businessUse) {\n\t\t\tthrow new UserError(\"onlyPrivateAccountFeature_msg\")\n\t\t}\n\t}\n}\n\ntype GiftCardRedeemAttrs = WizardPageAttrs<RedeemGiftCardModel>\n\n/**\n * This page gives the user the option to either signup or login to an account with which to redeem their gift card.\n */\n\nclass GiftCardWelcomePage implements WizardPageN<RedeemGiftCardModel> {\n\tprivate dom!: HTMLElement\n\n\toncreate(vnodeDOM: VnodeDOM<GiftCardRedeemAttrs>) {\n\t\tthis.dom = vnodeDOM.dom as HTMLElement\n\t}\n\n\tview(vnode: Vnode<GiftCardRedeemAttrs>): Children {\n\t\tconst a = vnode.attrs\n\n\t\tconst nextPage = (method: GetCredentialsMethod) => {\n\t\t\tlocator.logins.logout(false).then(() => {\n\t\t\t\ta.data.credentialsMethod = method\n\t\t\t\temitWizardEvent(this.dom, WizardEventType.SHOW_NEXT_PAGE)\n\t\t\t})\n\t\t}\n\n\t\treturn [\n\t\t\tm(\n\t\t\t\t\".flex-center.full-width.pt-l\",\n\t\t\t\tm(\n\t\t\t\t\t\".pt-l\", // Needed to center SVG\n\t\t\t\t\t{\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\twidth: \"480px\",\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\trenderGiftCardSvg(parseFloat(a.data.giftCardInfo.value), null, a.data.message),\n\t\t\t\t),\n\t\t\t),\n\t\t\tm(\n\t\t\t\t\".flex-center.full-width.pt-l\",\n\t\t\t\tm(LoginButton, {\n\t\t\t\t\tlabel: \"existingAccount_label\",\n\t\t\t\t\tclass: \"small-login-button\",\n\t\t\t\t\tonclick: () => nextPage(GetCredentialsMethod.Login),\n\t\t\t\t}),\n\t\t\t),\n\t\t\tm(\n\t\t\t\t\".flex-center.full-width.pt-l.pb\",\n\t\t\t\tm(LoginButton, {\n\t\t\t\t\tlabel: \"register_label\",\n\t\t\t\t\tclass: \"small-login-button\",\n\t\t\t\t\tonclick: () => nextPage(GetCredentialsMethod.Signup),\n\t\t\t\t}),\n\t\t\t),\n\t\t]\n\t}\n}\n\n/**\n * This page will either show a signup or login form depending on how they choose to select their credentials\n * When they go to the next page the will be logged in.\n */\n\nclass GiftCardCredentialsPage implements WizardPageN<RedeemGiftCardModel> {\n\tprivate domElement: HTMLElement | null = null\n\tprivate loginFormHelpText = lang.get(\"emptyString_msg\")\n\tprivate mailAddress = stream<string>(\"\")\n\tprivate password = stream<string>(\"\")\n\n\toncreate(vnode: VnodeDOM<GiftCardRedeemAttrs>) {\n\t\tthis.domElement = vnode.dom as HTMLElement\n\t}\n\n\tview(vnode: Vnode<GiftCardRedeemAttrs>): Children {\n\t\tconst data = vnode.attrs.data\n\n\t\tswitch (data.credentialsMethod) {\n\t\t\tcase GetCredentialsMethod.Login:\n\t\t\t\treturn this.renderLoginPage(data)\n\n\t\t\tcase GetCredentialsMethod.Signup:\n\t\t\t\treturn this.renderSignupPage(data)\n\t\t}\n\t}\n\n\tonremove() {\n\t\tthis.password(\"\")\n\t}\n\n\tprivate renderLoginPage(model: RedeemGiftCardModel): Children {\n\t\treturn [\n\t\t\tm(\n\t\t\t\t\".flex-grow.flex-center.scroll\",\n\t\t\t\tm(\".flex-grow-shrink-auto.max-width-s.pt.plr-l\", [this.renderLoginForm(model), this.renderCredentialsSelector(model)]),\n\t\t\t),\n\t\t]\n\t}\n\n\tprivate renderLoginForm(model: RedeemGiftCardModel): Children {\n\t\treturn m(LoginForm, {\n\t\t\tonSubmit: async (mailAddress, password) => {\n\t\t\t\tif (mailAddress === \"\" || password === \"\") {\n\t\t\t\t\tthis.loginFormHelpText = lang.get(\"loginFailed_msg\")\n\t\t\t\t} else {\n\t\t\t\t\ttry {\n\t\t\t\t\t\t// If they try to login with a mail address that is stored, we want to swap out the old session with a new one\n\t\t\t\t\t\tawait showProgressDialog(\"pleaseWait_msg\", model.loginWithFormCredentials(this.mailAddress(), this.password()))\n\t\t\t\t\t\temitWizardEvent(this.domElement, WizardEventType.SHOW_NEXT_PAGE)\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tif (e instanceof UserError) {\n\t\t\t\t\t\t\tshowUserError(e)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.loginFormHelpText = lang.getTranslationText(getLoginErrorMessage(e, false))\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tmailAddress: this.mailAddress,\n\t\t\tpassword: this.password,\n\t\t\thelpText: this.loginFormHelpText,\n\t\t})\n\t}\n\n\tprivate renderCredentialsSelector(model: RedeemGiftCardModel): Children {\n\t\tif (model.storedCredentials.length === 0) {\n\t\t\treturn null\n\t\t}\n\n\t\treturn m(CredentialsSelector, {\n\t\t\tcredentials: model.storedCredentials,\n\t\t\tonCredentialsSelected: async (encryptedCredentials) => {\n\t\t\t\ttry {\n\t\t\t\t\tawait showProgressDialog(\"pleaseWait_msg\", model.loginWithStoredCredentials(encryptedCredentials))\n\t\t\t\t\temitWizardEvent(this.domElement, WizardEventType.SHOW_NEXT_PAGE)\n\t\t\t\t} catch (e) {\n\t\t\t\t\tif (e instanceof UserError) {\n\t\t\t\t\t\tshowUserError(e)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.loginFormHelpText = lang.getTranslationText(getLoginErrorMessage(e, false))\n\t\t\t\t\t\thandleExpectedLoginError(e, noOp)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t})\n\t}\n\n\tprivate renderSignupPage(model: RedeemGiftCardModel): Children {\n\t\treturn m(SignupForm, {\n\t\t\t// After having an account created we log them in to be in the same state as if they had selected an existing account\n\t\t\tonComplete: (newAccountData) => {\n\t\t\t\tshowProgressDialog(\n\t\t\t\t\t\"pleaseWait_msg\",\n\t\t\t\t\tmodel\n\t\t\t\t\t\t.handleNewSignup(newAccountData)\n\t\t\t\t\t\t.then(() => {\n\t\t\t\t\t\t\temitWizardEvent(this.domElement, WizardEventType.SHOW_NEXT_PAGE)\n\t\t\t\t\t\t\tm.redraw()\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch((e) => {\n\t\t\t\t\t\t\t// TODO when would login fail here and how does it get handled? can we attempt to login again?\n\t\t\t\t\t\t\tDialog.message(\"giftCardLoginError_msg\")\n\t\t\t\t\t\t\tm.route.set(\"/login\", {\n\t\t\t\t\t\t\t\tnoAutoLogin: true,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}),\n\t\t\t\t)\n\t\t\t},\n\t\t\tonChangePlan: () => {\n\t\t\t\temitWizardEvent(this.domElement, WizardEventType.SHOW_PREVIOUS_PAGE)\n\t\t\t},\n\t\t\treadonly: model.newAccountData != null,\n\t\t\tprefilledMailAddress: model.newAccountData ? model.newAccountData.mailAddress : \"\",\n\t\t\tisBusinessUse: () => false,\n\t\t\tisPaidSubscription: () => true,\n\t\t\tcampaign: () => null,\n\t\t})\n\t}\n}\n\nclass RedeemGiftCardPage implements WizardPageN<RedeemGiftCardModel> {\n\tprivate confirmed = false\n\tprivate showCountryDropdown: boolean\n\tprivate country: Country | null\n\tprivate dom!: HTMLElement\n\n\tconstructor({ attrs }: Vnode<GiftCardRedeemAttrs>) {\n\t\t// we expect that the accounting info is actually available by now,\n\t\t// but we optional chain because invoiceCountry is nullable anyway\n\t\tthis.country = mapNullable(attrs.data.accountingInfo?.invoiceCountry, getByAbbreviation)\n\n\t\t// if a country is already set, then we don't need to ask for one\n\t\tthis.showCountryDropdown = this.country == null\n\t}\n\n\toncreate(vnodeDOM: VnodeDOM<GiftCardRedeemAttrs>) {\n\t\tthis.dom = vnodeDOM.dom as HTMLElement\n\t}\n\n\tview(vnode: Vnode<GiftCardRedeemAttrs>): Children {\n\t\tconst model = vnode.attrs.data\n\t\tconst isFree = locator.logins.getUserController().isFreeAccount()\n\n\t\treturn m(\"\", [\n\t\t\tmapNullable(model.newAccountData?.recoverCode, (code) =>\n\t\t\t\tm(\n\t\t\t\t\t\".pt-l.plr-l\",\n\t\t\t\t\tm(RecoverCodeField, {\n\t\t\t\t\t\tshowMessage: true,\n\t\t\t\t\t\trecoverCode: code,\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t),\n\t\t\tisFree ? this.renderInfoForFreeAccounts(model) : this.renderInfoForPaidAccounts(model),\n\t\t\tm(\n\t\t\t\t\".flex-center.full-width.pt-l\",\n\t\t\t\tm(\n\t\t\t\t\t\"\",\n\t\t\t\t\t{\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\tmaxWidth: \"620px\",\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t[\n\t\t\t\t\t\tthis.showCountryDropdown\n\t\t\t\t\t\t\t? renderCountryDropdown({\n\t\t\t\t\t\t\t\t\tselectedCountry: this.country,\n\t\t\t\t\t\t\t\t\tonSelectionChanged: (country) => (this.country = country),\n\t\t\t\t\t\t\t\t\thelpLabel: () => lang.get(\"invoiceCountryInfoConsumer_msg\"),\n\t\t\t\t\t\t\t  })\n\t\t\t\t\t\t\t: null,\n\t\t\t\t\t\trenderAcceptGiftCardTermsCheckbox(this.confirmed, (confirmed) => (this.confirmed = confirmed)),\n\t\t\t\t\t],\n\t\t\t\t),\n\t\t\t),\n\t\t\tm(\n\t\t\t\t\".flex-center.full-width.pt-s.pb\",\n\t\t\t\tm(LoginButton, {\n\t\t\t\t\tlabel: \"redeem_label\",\n\t\t\t\t\tclass: \"small-login-button\",\n\t\t\t\t\tonclick: () => {\n\t\t\t\t\t\tif (!this.confirmed) {\n\t\t\t\t\t\t\tDialog.message(\"termsAcceptedNeutral_msg\")\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmodel\n\t\t\t\t\t\t\t.redeemGiftCard(this.country)\n\t\t\t\t\t\t\t.then(() => emitWizardEvent(this.dom, WizardEventType.CLOSE_DIALOG))\n\t\t\t\t\t\t\t.catch(ofClass(UserError, showUserError))\n\t\t\t\t\t\t\t.catch(ofClass(CancelledError, noOp))\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t),\n\t\t])\n\t}\n\n\tprivate getCreditOrDebitMessage(model: RedeemGiftCardModel): string {\n\t\tconst remainingAmount = Number(model.giftCardInfo.value) - model.premiumPrice\n\t\tif (remainingAmount > 0) {\n\t\t\treturn `${lang.get(\"giftCardUpgradeNotifyCredit_msg\", {\n\t\t\t\t\"{price}\": formatPrice(model.premiumPrice, true),\n\t\t\t\t\"{amount}\": formatPrice(remainingAmount, true),\n\t\t\t})} ${lang.get(\"creditUsageOptions_msg\")}`\n\t\t} else if (remainingAmount < 0) {\n\t\t\treturn lang.get(\"giftCardUpgradeNotifyDebit_msg\", {\n\t\t\t\t\"{price}\": formatPrice(model.premiumPrice, true),\n\t\t\t\t\"{amount}\": formatPrice(remainingAmount * -1, true),\n\t\t\t})\n\t\t} else {\n\t\t\treturn \"\"\n\t\t}\n\t}\n\n\tprivate renderInfoForFreeAccounts(model: RedeemGiftCardModel): Children {\n\t\treturn [\n\t\t\tm(\".pt-l.plr-l\", `${lang.get(\"giftCardUpgradeNotifyRevolutionary_msg\")} ${this.getCreditOrDebitMessage(model)}`),\n\t\t\tm(\".center.h4.pt\", lang.get(\"upgradeConfirm_msg\")),\n\t\t\tm(\".flex-space-around.flex-wrap\", [\n\t\t\t\tm(\".flex-grow-shrink-half.plr-l\", [\n\t\t\t\t\tm(TextField, {\n\t\t\t\t\t\tlabel: \"subscription_label\",\n\t\t\t\t\t\tvalue: \"Revolutionary\",\n\t\t\t\t\t\tisReadOnly: true,\n\t\t\t\t\t}),\n\t\t\t\t\tm(TextField, {\n\t\t\t\t\t\tlabel: \"paymentInterval_label\",\n\t\t\t\t\t\tvalue: lang.get(\"pricing.yearly_label\"),\n\t\t\t\t\t\tisReadOnly: true,\n\t\t\t\t\t}),\n\t\t\t\t\tm(TextField, {\n\t\t\t\t\t\tlabel: \"price_label\",\n\t\t\t\t\t\tvalue: formatPrice(Number(model.premiumPrice), true) + \" \" + lang.get(\"pricing.perYear_label\"),\n\t\t\t\t\t\tisReadOnly: true,\n\t\t\t\t\t}),\n\t\t\t\t\tm(TextField, {\n\t\t\t\t\t\tlabel: \"paymentMethod_label\",\n\t\t\t\t\t\tvalue: getPaymentMethodName(model.paymentMethod),\n\t\t\t\t\t\tisReadOnly: true,\n\t\t\t\t\t}),\n\t\t\t\t]),\n\t\t\t\tm(\n\t\t\t\t\t\".flex-grow-shrink-half.plr-l.flex-center.items-end\",\n\t\t\t\t\tm(\"img[src=\" + HabReminderImage + \"].pt.bg-white.border-radius\", {\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\twidth: \"200px\",\n\t\t\t\t\t\t},\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t]),\n\t\t]\n\t}\n\n\tprivate renderInfoForPaidAccounts(model: RedeemGiftCardModel): Children {\n\t\treturn [\n\t\t\tm(\n\t\t\t\t\".pt-l.plr-l.flex-center\",\n\t\t\t\t`${lang.get(\"giftCardCreditNotify_msg\", {\n\t\t\t\t\t\"{credit}\": formatPrice(Number(model.giftCardInfo.value), true),\n\t\t\t\t})} ${lang.get(\"creditUsageOptions_msg\")}`,\n\t\t\t),\n\t\t\tm(\n\t\t\t\t\".flex-grow-shrink-half.plr-l.flex-center.items-end\",\n\t\t\t\tm(\"img[src=\" + HabReminderImage + \"].pt.bg-white.border-radius\", {\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\twidth: \"200px\",\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t),\n\t\t]\n\t}\n}\n\nexport async function loadRedeemGiftCardWizard(hashFromUrl: string): Promise<Dialog> {\n\tconst model = await loadModel(hashFromUrl)\n\n\tconst wizardPages = [\n\t\twizardPageWrapper(GiftCardWelcomePage, {\n\t\t\tdata: model,\n\t\t\theaderTitle: () => \"giftCard_label\",\n\t\t\tnextAction: async () => true,\n\t\t\tisSkipAvailable: () => false,\n\t\t\tisEnabled: () => true,\n\t\t}),\n\t\twizardPageWrapper(GiftCardCredentialsPage, {\n\t\t\tdata: model,\n\t\t\theaderTitle: () => (model.credentialsMethod === GetCredentialsMethod.Signup ? \"register_label\" : \"login_label\"),\n\t\t\tnextAction: async () => true,\n\t\t\tisSkipAvailable: () => false,\n\t\t\tisEnabled: () => true,\n\t\t}),\n\t\twizardPageWrapper(RedeemGiftCardPage, {\n\t\t\tdata: model,\n\t\t\theaderTitle: () => \"redeem_label\",\n\t\t\tnextAction: async () => true,\n\t\t\tisSkipAvailable: () => false,\n\t\t\tisEnabled: () => true,\n\t\t}),\n\t]\n\treturn createWizardDialog(\n\t\tmodel,\n\t\twizardPages,\n\t\tasync () => {\n\t\t\tconst urlParams = model.mailAddress ? { loginWith: model.mailAddress, noAutoLogin: true } : {}\n\t\t\tm.route.set(\"/login\", urlParams)\n\t\t},\n\t\tDialogType.EditLarge,\n\t).dialog\n}\n\nasync function loadModel(hashFromUrl: string): Promise<RedeemGiftCardModel> {\n\tconst { id, key } = await getTokenFromUrl(hashFromUrl)\n\tconst giftCardInfo = await locator.giftCardFacade.getGiftCardInfo(id, key)\n\n\tconst storedCredentials = await locator.credentialsProvider.getInternalCredentialsInfos()\n\tconst pricesDataProvider = await PriceAndConfigProvider.getInitializedInstance(null, locator.serviceExecutor, null)\n\n\treturn new RedeemGiftCardModel(\n\t\t{\n\t\t\tgiftCardInfo,\n\t\t\tkey,\n\t\t\tpremiumPrice: pricesDataProvider.getSubscriptionPrice(PaymentInterval.Yearly, PlanType.Revolutionary, UpgradePriceType.PlanActualPrice),\n\t\t\tstoredCredentials,\n\t\t},\n\t\tlocator.giftCardFacade,\n\t\tlocator.credentialsProvider,\n\t\tlocator.secondFactorHandler,\n\t\tlocator.logins,\n\t\tlocator.entityClient,\n\t)\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA,IAAW,wDAAX;AACC;AACA;;AACA,EAHU;IAKL,sBAAN,MAA0B;CACzB,cAAc;CACd,iBAAwC;CACxC,oBAAoB,qBAAqB;CAGzC,iBAAwC;CAExC,YACkBA,QAMAC,gBACAC,qBACAC,qBACAC,QACAC,cAChB;EAkfF,KA7fkB;EA6fjB,KAvfiB;EAufhB,KAtfgB;EAsff,KArfe;EAqfd,KApfc;EAofb,KAnfa;CACd;CAEJ,IAAI,eAAwC;AAC3C,SAAO,KAAK,OAAO;CACnB;CAED,IAAI,aAAiB;AACpB,SAAO,cAAc,KAAK,aAAa,SAAS;CAChD;CAED,IAAI,MAAc;AACjB,SAAO,KAAK,OAAO;CACnB;CAED,IAAI,eAAuB;AAC1B,SAAO,KAAK,OAAO;CACnB;CAED,IAAI,UAAkB;AACrB,SAAO,KAAK,OAAO,aAAa;CAChC;CAED,IAAI,gBAAmC;AACtC,SAAQ,KAAK,gBAAgB,iBAA8C,kBAAkB;CAC7F;CAED,IAAI,oBAAoD;AACvD,SAAO,KAAK,OAAO;CACnB;CAED,MAAM,2BAA2BC,sBAAuC;AACvE,MAAI,KAAK,OAAO,gBAAgB,IAAI,SAAS,KAAK,OAAO,mBAAmB,CAAC,KAAK,KAAK,qBAAqB,OAAO,CAGlH,OAAM,KAAK,WAAW;KAChB;AACN,SAAM,KAAK,OAAO,OAAO,MAAM;GAC/B,MAAM,cAAc,MAAM,KAAK,oBAAoB,gCAAgC,qBAAqB,OAAO;AAE/G,OAAI,aAAa;AAChB,UAAM,KAAK,OAAO,cAAc,aAAa,MAAM,KAAK;AACxD,UAAM,KAAK,WAAW;GACtB;EACD;CACD;CAED,MAAM,yBAAyBC,aAAqBC,UAAkB;AACrE,OAAK,cAAc;AAEnB,QAAM,KAAK,OAAO,OAAO,MAAM;AAC/B,QAAM,KAAK,OAAO,cAAc,aAAa,UAAU,YAAY,UAAU;AAC7E,QAAM,KAAK,WAAW;CACtB;CAED,MAAM,gBAAgBC,gBAAuC;AAC5D,MAAI,kBAAkB,KAAK,gBAAgB;AAG1C,QAAK,KAAK,eACT,MAAK,iBAAiB;GAGvB,MAAM,EAAE,aAAa,UAAU,GAAG,UAAU,kBAAkB,KAAK,eAAe;AAElF,QAAK,cAAc;AAEnB,SAAM,KAAK,OAAO,cAAc,aAAa,UAAU,YAAY,UAAU;AAC7E,SAAM,KAAK,WAAW;EACtB;CACD;CAED,MAAM,eAAeC,SAAwC;AAC5D,MAAI,WAAW,KACd,OAAM,IAAI,UAAU;AAGrB,SAAO,KAAK,eACV,eAAe,KAAK,YAAY,KAAK,KAAK,SAAS,KAAK,KAAK,CAC7D,MACA,QAAQ,eAAe,MAAM;AAC5B,SAAM,IAAI,UAAU;EACpB,EAAC,CACF,CACA,MACA,QAAQ,oBAAoB,CAAC,MAAM;AAClC,SAAM,IAAI,UAAU,KAAK,gBAAgB,aAAa,EAAE,QAAQ;EAChE,EAAC,CACF;CACF;CAED,MAAc,YAA2B;AACxC,OAAK,KAAK,OAAO,mBAAmB,CAAC,eAAe,CACnD,OAAM,IAAI,UAAU;AAGrB,QAAM,KAAK,oBAAoB,mCAAmC;EAClE,MAAM,WAAW,MAAM,KAAK,OAAO,mBAAmB,CAAC,cAAc;EACrE,MAAM,eAAe,MAAM,KAAK,aAAa,KAAK,qBAAqB,SAAS,aAAa;AAC7F,OAAK,iBAAiB,MAAM,KAAK,aAAa,KAAK,uBAAuB,aAAa,eAAe;AAEtG,MAAI,kBAAkB,aAAa,KAAK,eAAe,cACtD,OAAM,IAAI,UAAU;AAGrB,MAAI,SAAS,YACZ,OAAM,IAAI,UAAU;CAErB;AACD;IAQK,sBAAN,MAAsE;CACrE,AAAQ;CAER,SAASC,UAAyC;AACjD,OAAK,MAAM,SAAS;CACpB;CAED,KAAKC,OAA6C;EACjD,MAAM,IAAI,MAAM;EAEhB,MAAM,WAAW,CAACC,WAAiC;AAClD,WAAQ,OAAO,OAAO,MAAM,CAAC,KAAK,MAAM;AACvC,MAAE,KAAK,oBAAoB;AAC3B,oBAAgB,KAAK,KAAK,gBAAgB,eAAe;GACzD,EAAC;EACF;AAED,SAAO;GACN,gBACC,gCACA,gBACC,SACA,EACC,OAAO,EACN,OAAO,QACP,EACD,GACD,kBAAkB,WAAW,EAAE,KAAK,aAAa,MAAM,EAAE,MAAM,EAAE,KAAK,QAAQ,CAC9E,CACD;GACD,gBACC,gCACA,gBAAE,aAAa;IACd,OAAO;IACP,OAAO;IACP,SAAS,MAAM,SAAS,qBAAqB,MAAM;GACnD,EAAC,CACF;GACD,gBACC,mCACA,gBAAE,aAAa;IACd,OAAO;IACP,OAAO;IACP,SAAS,MAAM,SAAS,qBAAqB,OAAO;GACpD,EAAC,CACF;EACD;CACD;AACD;IAOK,0BAAN,MAA0E;CACzE,AAAQ,aAAiC;CACzC,AAAQ,oBAAoB,KAAK,IAAI,kBAAkB;CACvD,AAAQ,cAAc,2BAAe,GAAG;CACxC,AAAQ,WAAW,2BAAe,GAAG;CAErC,SAASC,OAAsC;AAC9C,OAAK,aAAa,MAAM;CACxB;CAED,KAAKF,OAA6C;EACjD,MAAM,OAAO,MAAM,MAAM;AAEzB,UAAQ,KAAK,mBAAb;AACC,QAAK,qBAAqB,MACzB,QAAO,KAAK,gBAAgB,KAAK;AAElC,QAAK,qBAAqB,OACzB,QAAO,KAAK,iBAAiB,KAAK;EACnC;CACD;CAED,WAAW;AACV,OAAK,SAAS,GAAG;CACjB;CAED,AAAQ,gBAAgBG,OAAsC;AAC7D,SAAO,CACN,gBACC,iCACA,gBAAE,+CAA+C,CAAC,KAAK,gBAAgB,MAAM,EAAE,KAAK,0BAA0B,MAAM,AAAC,EAAC,CACtH,AACD;CACD;CAED,AAAQ,gBAAgBA,OAAsC;AAC7D,SAAO,gBAAE,WAAW;GACnB,UAAU,OAAO,aAAa,aAAa;AAC1C,QAAI,gBAAgB,MAAM,aAAa,GACtC,MAAK,oBAAoB,KAAK,IAAI,kBAAkB;IAEpD,KAAI;AAEH,WAAM,mBAAmB,kBAAkB,MAAM,yBAAyB,KAAK,aAAa,EAAE,KAAK,UAAU,CAAC,CAAC;AAC/G,qBAAgB,KAAK,YAAY,gBAAgB,eAAe;IAChE,SAAQ,GAAG;AACX,SAAI,aAAa,UAChB,eAAc,EAAE;IAEhB,MAAK,oBAAoB,KAAK,mBAAmB,qBAAqB,GAAG,MAAM,CAAC;IAEjF;GAEF;GACD,aAAa,KAAK;GAClB,UAAU,KAAK;GACf,UAAU,KAAK;EACf,EAAC;CACF;CAED,AAAQ,0BAA0BA,OAAsC;AACvE,MAAI,MAAM,kBAAkB,WAAW,EACtC,QAAO;AAGR,SAAO,gBAAE,qBAAqB;GAC7B,aAAa,MAAM;GACnB,uBAAuB,OAAO,yBAAyB;AACtD,QAAI;AACH,WAAM,mBAAmB,kBAAkB,MAAM,2BAA2B,qBAAqB,CAAC;AAClG,qBAAgB,KAAK,YAAY,gBAAgB,eAAe;IAChE,SAAQ,GAAG;AACX,SAAI,aAAa,UAChB,eAAc,EAAE;KACV;AACN,WAAK,oBAAoB,KAAK,mBAAmB,qBAAqB,GAAG,MAAM,CAAC;AAChF,+BAAyB,GAAG,KAAK;KACjC;IACD;GACD;EACD,EAAC;CACF;CAED,AAAQ,iBAAiBA,OAAsC;AAC9D,SAAO,gBAAE,YAAY;GAEpB,YAAY,CAAC,mBAAmB;AAC/B,uBACC,kBACA,MACE,gBAAgB,eAAe,CAC/B,KAAK,MAAM;AACX,qBAAgB,KAAK,YAAY,gBAAgB,eAAe;AAChE,qBAAE,QAAQ;IACV,EAAC,CACD,MAAM,CAAC,MAAM;AAEb,YAAO,QAAQ,yBAAyB;AACxC,qBAAE,MAAM,IAAI,UAAU,EACrB,aAAa,KACb,EAAC;IACF,EAAC,CACH;GACD;GACD,cAAc,MAAM;AACnB,oBAAgB,KAAK,YAAY,gBAAgB,mBAAmB;GACpE;GACD,UAAU,MAAM,kBAAkB;GAClC,sBAAsB,MAAM,iBAAiB,MAAM,eAAe,cAAc;GAChF,eAAe,MAAM;GACrB,oBAAoB,MAAM;GAC1B,UAAU,MAAM;EAChB,EAAC;CACF;AACD;IAEK,qBAAN,MAAqE;CACpE,AAAQ,YAAY;CACpB,AAAQ;CACR,AAAQ;CACR,AAAQ;CAER,YAAY,EAAE,OAAmC,EAAE;AAGlD,OAAK,UAAU,YAAY,MAAM,KAAK,gBAAgB,gBAAgB,kBAAkB;AAGxF,OAAK,sBAAsB,KAAK,WAAW;CAC3C;CAED,SAASJ,UAAyC;AACjD,OAAK,MAAM,SAAS;CACpB;CAED,KAAKC,OAA6C;EACjD,MAAM,QAAQ,MAAM,MAAM;EAC1B,MAAM,SAAS,QAAQ,OAAO,mBAAmB,CAAC,eAAe;AAEjE,SAAO,gBAAE,IAAI;GACZ,YAAY,MAAM,gBAAgB,aAAa,CAAC,SAC/C,gBACC,eACA,gBAAE,kBAAkB;IACnB,aAAa;IACb,aAAa;GACb,EAAC,CACF,CACD;GACD,SAAS,KAAK,0BAA0B,MAAM,GAAG,KAAK,0BAA0B,MAAM;GACtF,gBACC,gCACA,gBACC,IACA,EACC,OAAO,EACN,UAAU,QACV,EACD,GACD,CACC,KAAK,sBACF,sBAAsB;IACtB,iBAAiB,KAAK;IACtB,oBAAoB,CAAC,YAAa,KAAK,UAAU;IACjD,WAAW,MAAM,KAAK,IAAI,iCAAiC;GAC1D,EAAC,GACF,MACH,kCAAkC,KAAK,WAAW,CAAC,cAAe,KAAK,YAAY,UAAW,AAC9F,EACD,CACD;GACD,gBACC,mCACA,gBAAE,aAAa;IACd,OAAO;IACP,OAAO;IACP,SAAS,MAAM;AACd,UAAK,KAAK,WAAW;AACpB,aAAO,QAAQ,2BAA2B;AAC1C;KACA;AAED,WACE,eAAe,KAAK,QAAQ,CAC5B,KAAK,MAAM,gBAAgB,KAAK,KAAK,gBAAgB,aAAa,CAAC,CACnE,MAAM,QAAQ,WAAW,cAAc,CAAC,CACxC,MAAM,QAAQ,gBAAgB,KAAK,CAAC;IACtC;GACD,EAAC,CACF;EACD,EAAC;CACF;CAED,AAAQ,wBAAwBG,OAAoC;EACnE,MAAM,kBAAkB,OAAO,MAAM,aAAa,MAAM,GAAG,MAAM;AACjE,MAAI,kBAAkB,EACrB,SAAQ,EAAE,KAAK,IAAI,mCAAmC;GACrD,WAAW,YAAY,MAAM,cAAc,KAAK;GAChD,YAAY,YAAY,iBAAiB,KAAK;EAC9C,EAAC,CAAC,GAAG,KAAK,IAAI,yBAAyB,CAAC;SAC/B,kBAAkB,EAC5B,QAAO,KAAK,IAAI,kCAAkC;GACjD,WAAW,YAAY,MAAM,cAAc,KAAK;GAChD,YAAY,YAAY,kBAAkB,IAAI,KAAK;EACnD,EAAC;IAEF,QAAO;CAER;CAED,AAAQ,0BAA0BA,OAAsC;AACvE,SAAO;GACN,gBAAE,gBAAgB,EAAE,KAAK,IAAI,yCAAyC,CAAC,GAAG,KAAK,wBAAwB,MAAM,CAAC,EAAE;GAChH,gBAAE,iBAAiB,KAAK,IAAI,qBAAqB,CAAC;GAClD,gBAAE,gCAAgC,CACjC,gBAAE,gCAAgC;IACjC,gBAAE,WAAW;KACZ,OAAO;KACP,OAAO;KACP,YAAY;IACZ,EAAC;IACF,gBAAE,WAAW;KACZ,OAAO;KACP,OAAO,KAAK,IAAI,uBAAuB;KACvC,YAAY;IACZ,EAAC;IACF,gBAAE,WAAW;KACZ,OAAO;KACP,OAAO,YAAY,OAAO,MAAM,aAAa,EAAE,KAAK,GAAG,MAAM,KAAK,IAAI,wBAAwB;KAC9F,YAAY;IACZ,EAAC;IACF,gBAAE,WAAW;KACZ,OAAO;KACP,OAAO,qBAAqB,MAAM,cAAc;KAChD,YAAY;IACZ,EAAC;GACF,EAAC,EACF,gBACC,sDACA,gBAAE,aAAa,mBAAmB,+BAA+B,EAChE,OAAO,EACN,OAAO,QACP,EACD,EAAC,CACF,AACD,EAAC;EACF;CACD;CAED,AAAQ,0BAA0BA,OAAsC;AACvE,SAAO,CACN,gBACC,4BACC,EAAE,KAAK,IAAI,4BAA4B,EACvC,YAAY,YAAY,OAAO,MAAM,aAAa,MAAM,EAAE,KAAK,CAC/D,EAAC,CAAC,GAAG,KAAK,IAAI,yBAAyB,CAAC,EACzC,EACD,gBACC,sDACA,gBAAE,aAAa,mBAAmB,+BAA+B,EAChE,OAAO,EACN,OAAO,QACP,EACD,EAAC,CACF,AACD;CACD;AACD;AAEM,eAAe,yBAAyBC,aAAsC;CACpF,MAAM,QAAQ,MAAM,UAAU,YAAY;CAE1C,MAAM,cAAc;EACnB,kBAAkB,qBAAqB;GACtC,MAAM;GACN,aAAa,MAAM;GACnB,YAAY,YAAY;GACxB,iBAAiB,MAAM;GACvB,WAAW,MAAM;EACjB,EAAC;EACF,kBAAkB,yBAAyB;GAC1C,MAAM;GACN,aAAa,MAAO,MAAM,sBAAsB,qBAAqB,SAAS,mBAAmB;GACjG,YAAY,YAAY;GACxB,iBAAiB,MAAM;GACvB,WAAW,MAAM;EACjB,EAAC;EACF,kBAAkB,oBAAoB;GACrC,MAAM;GACN,aAAa,MAAM;GACnB,YAAY,YAAY;GACxB,iBAAiB,MAAM;GACvB,WAAW,MAAM;EACjB,EAAC;CACF;AACD,QAAO,mBACN,OACA,aACA,YAAY;EACX,MAAM,YAAY,MAAM,cAAc;GAAE,WAAW,MAAM;GAAa,aAAa;EAAM,IAAG,CAAE;AAC9F,kBAAE,MAAM,IAAI,UAAU,UAAU;CAChC,GACD,WAAW,UACX,CAAC;AACF;AAED,eAAe,UAAUA,aAAmD;CAC3E,MAAM,EAAE,IAAI,KAAK,GAAG,MAAM,gBAAgB,YAAY;CACtD,MAAM,eAAe,MAAM,QAAQ,eAAe,gBAAgB,IAAI,IAAI;CAE1E,MAAM,oBAAoB,MAAM,QAAQ,oBAAoB,6BAA6B;CACzF,MAAM,qBAAqB,MAAM,uBAAuB,uBAAuB,MAAM,QAAQ,iBAAiB,KAAK;AAEnH,QAAO,IAAI,oBACV;EACC;EACA;EACA,cAAc,mBAAmB,qBAAqB,gBAAgB,QAAQ,SAAS,eAAe,iBAAiB,gBAAgB;EACvI;CACA,GACD,QAAQ,gBACR,QAAQ,qBACR,QAAQ,qBACR,QAAQ,QACR,QAAQ;AAET"}