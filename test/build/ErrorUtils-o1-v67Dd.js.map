{"version":3,"file":"ErrorUtils-o1-v67Dd.js","names":["message: string","m: string","m: string","error: Error","msg: string","message: string","message: string","message: string","data: ImportErrorData","instance: Entity","key?: K","e: Error","o: Record<string, any>"],"sources":["../../src/common/api/common/error/SessionKeyNotFoundError.ts","../../src/common/api/common/error/SseError.ts","../../src/common/api/common/error/RecipientNotResolvedError.ts","../../src/common/api/common/error/WebauthnError.ts","../../src/common/api/common/error/FileNotFoundError.ts","../../src/common/api/common/error/CredentialAuthenticationError.ts","../../src/common/api/common/error/ContactStoreError.ts","../../src/common/api/common/error/MobilePaymentError.ts","../../src/common/api/common/error/MailImportError.ts","../../src/common/api/common/utils/ErrorUtils.ts"],"sourcesContent":["//@bundleInto:common-min\n\nimport { TutanotaError } from \"@tutao/tutanota-error\"\n\nexport class SessionKeyNotFoundError extends TutanotaError {\n\tconstructor(message: string) {\n\t\tsuper(\"SessionKeyNotFoundError\", message)\n\t}\n}\n","//@bundleInto:common-min\n\nimport { TutanotaError } from \"@tutao/tutanota-error\"\n\nexport class SseError extends TutanotaError {\n\tconstructor(m: string) {\n\t\tsuper(\"SseError\", m)\n\t}\n}\n","//@bundleInto:common-min\n\nimport { TutanotaError } from \"@tutao/tutanota-error\"\n\nexport class RecipientNotResolvedError extends TutanotaError {\n\tconstructor(m: string) {\n\t\tsuper(\"RecipientNotResolvedError\", m)\n\t}\n}\n","//@bundleInto:common-min\n\nimport { TutanotaError } from \"@tutao/tutanota-error\"\n\nexport class WebauthnError extends TutanotaError {\n\tconstructor(error: Error) {\n\t\tsuper(\"WebauthnError\", `${error.name} ${String(error)}`)\n\t}\n}\n","//@bundleInto:common-min\n\nimport { TutanotaError } from \"@tutao/tutanota-error\"\n\nexport class FileNotFoundError extends TutanotaError {\n\tconstructor(msg: string) {\n\t\tsuper(\"FileNotFoundError\", msg)\n\t}\n}\n","//@bundleInto:common-min\n\nexport class CredentialAuthenticationError extends Error {\n\tconstructor(message: string) {\n\t\tsuper(message)\n\t}\n}\n","import { TutanotaError } from \"@tutao/tutanota-error\"\n\n/**\n * Errors related to the native contact store/phone book.\n */\nexport class ContactStoreError extends TutanotaError {\n\tconstructor(message: string) {\n\t\tsuper(\"ContactStoreError\", message)\n\t}\n}\n","import { TutanotaError } from \"@tutao/tutanota-error\"\n\n/**\n * An error related to mobile payments.\n */\nexport class MobilePaymentError extends TutanotaError {\n\tconstructor(message: string) {\n\t\tsuper(\"MobilePaymentError\", message)\n\t}\n}\n","//@bundleInto:common-min\n\nimport { TutanotaError } from \"@tutao/tutanota-error\"\nimport type { ImportErrorData } from \"../../../desktop/mailimport/DesktopMailImportFacade.js\"\n\nexport const enum ImportErrorCategories {\n\tImportFeatureDisabled,\n\tLocalSdkError,\n\tServerCommunicationError,\n\tInvalidImportFilesErrors,\n\tImportIncomplete,\n\tConcurrentImport,\n}\n\nexport class MailImportError extends TutanotaError {\n\tdata: ImportErrorData\n\n\tconstructor(data: ImportErrorData) {\n\t\tsuper(\"MailImportError\", `Failed to import mails`)\n\t\tthis.data = data\n\t}\n}\n","// @bundleInto:common\n\nimport { downcast } from \"@tutao/tutanota-utils\"\nimport { Entity } from \"../EntityTypes\"\nimport {\n\tAccessBlockedError,\n\tAccessDeactivatedError,\n\tAccessExpiredError,\n\tBadGatewayError,\n\tBadRequestError,\n\tConnectionError,\n\tInsufficientStorageError,\n\tInternalServerError,\n\tInvalidDataError,\n\tInvalidSoftwareVersionError,\n\tLimitReachedError,\n\tLockedError,\n\tMethodNotAllowedError,\n\tNotAuthenticatedError,\n\tNotAuthorizedError,\n\tNotFoundError,\n\tPayloadTooLargeError,\n\tPreconditionFailedError,\n\tRequestTimeoutError,\n\tResourceError,\n\tServiceUnavailableError,\n\tSessionExpiredError,\n\tTooManyRequestsError,\n} from \"../error/RestError.js\"\nimport { SuspensionError } from \"../error/SuspensionError.js\"\nimport { LoginIncompleteError } from \"../error/LoginIncompleteError.js\"\nimport { CryptoError } from \"@tutao/tutanota-crypto/error.js\"\nimport { SessionKeyNotFoundError } from \"../error/SessionKeyNotFoundError.js\"\nimport { SseError } from \"../error/SseError.js\"\nimport { ProgrammingError } from \"../error/ProgrammingError.js\"\nimport { RecipientsNotFoundError } from \"../error/RecipientsNotFoundError.js\"\nimport { RecipientNotResolvedError } from \"../error/RecipientNotResolvedError.js\"\nimport { OfflineDbClosedError } from \"../error/OfflineDbClosedError.js\"\nimport { OutOfSyncError } from \"../error/OutOfSyncError.js\"\nimport { DbError } from \"../error/DbError.js\"\nimport { IndexingNotSupportedError } from \"../error/IndexingNotSupportedError.js\"\nimport { QuotaExceededError } from \"../error/QuotaExceededError.js\"\nimport { CancelledError } from \"../error/CancelledError.js\"\nimport { FileOpenError } from \"../error/FileOpenError.js\"\nimport { DeviceStorageUnavailableError } from \"../error/DeviceStorageUnavailableError.js\"\nimport { MailBodyTooLargeError } from \"../error/MailBodyTooLargeError.js\"\nimport { ImportError } from \"../error/ImportError.js\"\nimport { WebauthnError } from \"../error/WebauthnError.js\"\nimport { PermissionError } from \"../error/PermissionError.js\"\nimport { FileNotFoundError } from \"../error/FileNotFoundError.js\"\nimport { CredentialAuthenticationError } from \"../error/CredentialAuthenticationError.js\"\nimport { KeyPermanentlyInvalidatedError } from \"../error/KeyPermanentlyInvalidatedError.js\"\nimport { ParserError } from \"../../../misc/parsing/ParserCombinator.js\"\nimport { ContactStoreError } from \"../error/ContactStoreError.js\"\nimport { MobilePaymentError } from \"../error/MobilePaymentError\"\nimport { MailImportError } from \"../error/MailImportError.js\"\nimport { ExportError } from \"../error/ExportError\"\n\n/**\n * Checks if the given instance has an error in the _errors property which is usually written\n * if decryption fails for some reason in InstanceMapper.\n * @param instance the instance to check for errors.\n * @param key only returns true if there is an error for this key. Other errors will be ignored if the key is defined.\n * @returns {boolean} true if error was found (for the given key).\n */\nexport function hasError<K>(instance: Entity, key?: K): boolean {\n\tconst downCastedInstance = downcast(instance)\n\treturn !instance || (!!downCastedInstance._errors && (!key || !!downCastedInstance._errors.key))\n}\n\n//If importing fails it is a good idea to bundle the error into common-min which can be achieved by annotating the module with \"<at>bundleInto:common-min\"\n/**\n * Checks whether {@param e} is an error that can error before we are fully logged in and connected.\n */\nexport function isOfflineError(e: Error) {\n\treturn e instanceof ConnectionError || e instanceof LoginIncompleteError\n}\n\n// If importing fails it is a good idea to adjust the chunking to bundle the error into common\n\n/**\n * This maps the errors from their names to their constructors.\n * This is needed generally when errors cross IPC boundaries and more specifically when we want to map native errors to\n * our error classes.\n *\n * All errors that cross IPC boundaries should be added here.\n */\nconst ErrorNameToType = {\n\tConnectionError,\n\tBadRequestError,\n\tNotAuthenticatedError,\n\tSessionExpiredError,\n\tNotAuthorizedError,\n\tNotFoundError,\n\tMethodNotAllowedError,\n\tPreconditionFailedError,\n\tLockedError,\n\tTooManyRequestsError,\n\tAccessDeactivatedError,\n\tAccessExpiredError,\n\tAccessBlockedError,\n\tInvalidDataError,\n\tInvalidSoftwareVersionError,\n\tLimitReachedError,\n\tInternalServerError,\n\tBadGatewayError,\n\tResourceError,\n\tRequestTimeoutError,\n\tInsufficientStorageError,\n\tCryptoError,\n\tSessionKeyNotFoundError,\n\tSseError,\n\tProgrammingError,\n\tRecipientsNotFoundError,\n\tRecipientNotResolvedError,\n\tOfflineDbClosedError,\n\tOutOfSyncError,\n\tServiceUnavailableError,\n\tDbError,\n\tIndexingNotSupportedError,\n\tQuotaExceededError,\n\tCancelledError,\n\tFileOpenError,\n\tPayloadTooLargeError,\n\tDeviceStorageUnavailableError,\n\tMailBodyTooLargeError,\n\tImportError,\n\tExportError,\n\tWebauthnError,\n\tSuspensionError,\n\tLoginIncompleteError,\n\tParserError,\n\tKeyPermanentlyInvalidatedError,\n\tMailImportError,\n\tError,\n\t\"java.net.SocketTimeoutException\": ConnectionError,\n\t\"java.net.SocketException\": ConnectionError,\n\t\"java.net.ConnectException\": ConnectionError,\n\t\"javax.net.ssl.SSLException\": ConnectionError,\n\t\"javax.net.ssl.SSLHandshakeException\": ConnectionError,\n\t\"java.io.EOFException\": ConnectionError,\n\t\"java.net.UnknownHostException\": ConnectionError,\n\t\"java.lang.SecurityException\": PermissionError,\n\t\"java.io.FileNotFoundException\": FileNotFoundError,\n\t\"de.tutao.tutashared.CryptoError\": CryptoError,\n\t// Android app exception class name\n\t\"de.tutao.tutashared.TutCrypto\": CryptoError,\n\t// iOS app crypto error domain\n\t\"android.content.ActivityNotFoundException\": FileOpenError,\n\t\"de.tutao.tutashared.TutFileViewer\": FileOpenError,\n\tNSURLErrorDomain: ConnectionError,\n\t\"de.tutao.tutashared.CredentialAuthenticationException\": CredentialAuthenticationError,\n\t\"android.security.keystore.KeyPermanentlyInvalidatedException\": KeyPermanentlyInvalidatedError,\n\t\"de.tutao.tutashared.KeyPermanentlyInvalidatedError\": KeyPermanentlyInvalidatedError,\n\t\"de.tutao.tutashared.CredentialAuthenticationError\": CredentialAuthenticationError,\n\t\"de.tutao.tutashared.offline.OfflineDbClosedError\": OfflineDbClosedError,\n\t\"de.tutao.tutashared.CancelledError\": CancelledError,\n\t\"de.tutao.tutanota.webauthn.WebauthnError\": WebauthnError,\n\t\"de.tutao.tutanota.Webauthn\": WebauthnError,\n\t\"de.tutao.tutashared.PermissionError\": PermissionError,\n\t\"de.tutao.tutashared.ContactStoreError\": ContactStoreError,\n\t\"de.tutao.tutanota.MobilePayment\": MobilePaymentError,\n}\n\nexport function isSecurityError(e: any): boolean {\n\treturn e instanceof DOMException && (e.name === \"SecurityError\" || e.code === e.SECURITY_ERR)\n}\n\nexport function isNotSupportedError(e: any): boolean {\n\treturn e instanceof DOMException && (e.name === \"NotSupportedError\" || e.code === e.NOT_SUPPORTED_ERR)\n}\n\n/**\n * Convert a plain object to a class matching it's {@code name} field.\n */\nexport function objToError(o: Record<string, any>): Error {\n\t// @ts-ignore\n\tlet errorType = ErrorNameToType[o.name]\n\tlet e = (errorType != null ? new errorType(o.message) : new Error(o.message)) as any\n\te.name = o.name\n\te.stack = o.stack || e.stack\n\te.data = o.data\n\treturn e\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAIa,0BAAN,cAAsC,cAAc;CAC1D,YAAYA,SAAiB;AAC5B,QAAM,2BAA2B,QAAQ;CACzC;AACD;;;;ICJY,WAAN,cAAuB,cAAc;CAC3C,YAAYC,GAAW;AACtB,QAAM,YAAY,EAAE;CACpB;AACD;;;;ICJY,4BAAN,cAAwC,cAAc;CAC5D,YAAYC,GAAW;AACtB,QAAM,6BAA6B,EAAE;CACrC;AACD;;;;ICJY,gBAAN,cAA4B,cAAc;CAChD,YAAYC,OAAc;AACzB,QAAM,kBAAkB,EAAE,MAAM,KAAK,GAAG,OAAO,MAAM,CAAC,EAAE;CACxD;AACD;;;;ICJY,oBAAN,cAAgC,cAAc;CACpD,YAAYC,KAAa;AACxB,QAAM,qBAAqB,IAAI;CAC/B;AACD;;;;ICNY,gCAAN,cAA4C,MAAM;CACxD,YAAYC,SAAiB;AAC5B,QAAM,QAAQ;CACd;AACD;;;;ICDY,oBAAN,cAAgC,cAAc;CACpD,YAAYC,SAAiB;AAC5B,QAAM,qBAAqB,QAAQ;CACnC;AACD;;;;ICJY,qBAAN,cAAiC,cAAc;CACrD,YAAYC,SAAiB;AAC5B,QAAM,sBAAsB,QAAQ;CACpC;AACD;;;;ICJiB,0DAAX;AACN;AACA;AACA;AACA;AACA;AACA;;AACA;IAEY,kBAAN,cAA8B,cAAc;CAClD;CAEA,YAAYC,MAAuB;AAClC,QAAM,oBAAoB,wBAAwB;AAClD,OAAK,OAAO;CACZ;AACD;;;;AC4CM,SAAS,SAAYC,UAAkBC,KAAkB;CAC/D,MAAM,qBAAqB,SAAS,SAAS;AAC7C,SAAQ,cAAe,mBAAmB,aAAa,SAAS,mBAAmB,QAAQ;AAC3F;AAMM,SAAS,eAAeC,GAAU;AACxC,QAAO,aAAa,mBAAmB,aAAa;AACpD;;;;;;;;AAWD,MAAM,kBAAkB;CACvB;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,mCAAmC;CACnC,4BAA4B;CAC5B,6BAA6B;CAC7B,8BAA8B;CAC9B,uCAAuC;CACvC,wBAAwB;CACxB,iCAAiC;CACjC,+BAA+B;CAC/B,iCAAiC;CACjC,mCAAmC;CAEnC,iCAAiC;CAEjC,6CAA6C;CAC7C,qCAAqC;CACrC,kBAAkB;CAClB,yDAAyD;CACzD,gEAAgE;CAChE,sDAAsD;CACtD,qDAAqD;CACrD,oDAAoD;CACpD,sCAAsC;CACtC,4CAA4C;CAC5C,8BAA8B;CAC9B,uCAAuC;CACvC,yCAAyC;CACzC,mCAAmC;AACnC;AAaM,SAAS,WAAWC,GAA+B;CAEzD,IAAI,YAAY,gBAAgB,EAAE;CAClC,IAAI,IAAK,aAAa,OAAO,IAAI,UAAU,EAAE,WAAW,IAAI,MAAM,EAAE;AACpE,GAAE,OAAO,EAAE;AACX,GAAE,QAAQ,EAAE,SAAS,EAAE;AACvB,GAAE,OAAO,EAAE;AACX,QAAO;AACP"}