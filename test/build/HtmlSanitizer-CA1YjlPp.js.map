{"version":3,"file":"HtmlSanitizer-CA1YjlPp.js","names":["freeze","seal","apply","construct","getGlobal","_createTrustedTypesPolicy","html","_createHooksMap","window","DOMPurify","FORBID_TAGS","isRegexOrFunction","_parseConfig","_checkValidNamespace","_forceRemove","_removeAttribute","_initDocument","DOMParser","_createNodeIterator","_isClobbered","_isNode","hooks","_sanitizeElements","MUSTACHE_EXPR","ERB_EXPR","TMPLIT_EXPR","_isValidAttribute","DATA_ATTR","ARIA_ATTR","ATTR_WHITESPACE","IS_SCRIPT_OR_DATA","_isBasicCustomElement","CUSTOM_ELEMENT","_sanitizeAttributes","_sanitizeShadowDOM","PREVENT_EXTERNAL_IMAGE_LOADING_ICON: string","DEFAULT_CONFIG_EXTRA: SanitizeConfigExtra","HTML_CONFIG: Config & { RETURN_DOM_FRAGMENT?: undefined; RETURN_DOM?: undefined }","SVG_CONFIG: Config & { RETURN_DOM_FRAGMENT?: undefined; RETURN_DOM?: undefined }","FRAGMENT_CONFIG: Config & { RETURN_DOM_FRAGMENT: true }","DOMPurify","html: string","configExtra?: Partial<SanitizeConfigExtra>","svg: string","dirtyFile: DataFile","config: T","configExtra: Partial<SanitizeConfigExtra>","currentNode: Element","data: null","config: Config","htmlNode: HTMLElement","config: SanitizeConfig","cssStyleAttributeName: string","styleAttributeName: string","limitWidth: boolean","value: string","currentNode: HTMLElement","link: string","htmlSanitizer: HtmlSanitizer"],"sources":["../../libs/purify.js","../../src/common/misc/HtmlSanitizer.ts"],"sourcesContent":["/*! @license DOMPurify 3.2.4 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/3.2.4/LICENSE */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.DOMPurify = factory());\n})(this, (function () { 'use strict';\n\n  const {\n    entries,\n    setPrototypeOf,\n    isFrozen,\n    getPrototypeOf,\n    getOwnPropertyDescriptor\n  } = Object;\n  let {\n    freeze,\n    seal,\n    create\n  } = Object; // eslint-disable-line import/no-mutable-exports\n  let {\n    apply,\n    construct\n  } = typeof Reflect !== 'undefined' && Reflect;\n  if (!freeze) {\n    freeze = function freeze(x) {\n      return x;\n    };\n  }\n  if (!seal) {\n    seal = function seal(x) {\n      return x;\n    };\n  }\n  if (!apply) {\n    apply = function apply(fun, thisValue, args) {\n      return fun.apply(thisValue, args);\n    };\n  }\n  if (!construct) {\n    construct = function construct(Func, args) {\n      return new Func(...args);\n    };\n  }\n  const arrayForEach = unapply(Array.prototype.forEach);\n  const arrayLastIndexOf = unapply(Array.prototype.lastIndexOf);\n  const arrayPop = unapply(Array.prototype.pop);\n  const arrayPush = unapply(Array.prototype.push);\n  const arraySplice = unapply(Array.prototype.splice);\n  const stringToLowerCase = unapply(String.prototype.toLowerCase);\n  const stringToString = unapply(String.prototype.toString);\n  const stringMatch = unapply(String.prototype.match);\n  const stringReplace = unapply(String.prototype.replace);\n  const stringIndexOf = unapply(String.prototype.indexOf);\n  const stringTrim = unapply(String.prototype.trim);\n  const objectHasOwnProperty = unapply(Object.prototype.hasOwnProperty);\n  const regExpTest = unapply(RegExp.prototype.test);\n  const typeErrorCreate = unconstruct(TypeError);\n  /**\n   * Creates a new function that calls the given function with a specified thisArg and arguments.\n   *\n   * @param func - The function to be wrapped and called.\n   * @returns A new function that calls the given function with a specified thisArg and arguments.\n   */\n  function unapply(func) {\n    return function (thisArg) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n      return apply(func, thisArg, args);\n    };\n  }\n  /**\n   * Creates a new function that constructs an instance of the given constructor function with the provided arguments.\n   *\n   * @param func - The constructor function to be wrapped and called.\n   * @returns A new function that constructs an instance of the given constructor function with the provided arguments.\n   */\n  function unconstruct(func) {\n    return function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      return construct(func, args);\n    };\n  }\n  /**\n   * Add properties to a lookup table\n   *\n   * @param set - The set to which elements will be added.\n   * @param array - The array containing elements to be added to the set.\n   * @param transformCaseFunc - An optional function to transform the case of each element before adding to the set.\n   * @returns The modified set with added elements.\n   */\n  function addToSet(set, array) {\n    let transformCaseFunc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : stringToLowerCase;\n    if (setPrototypeOf) {\n      // Make 'in' and truthy checks like Boolean(set.constructor)\n      // independent of any properties defined on Object.prototype.\n      // Prevent prototype setters from intercepting set as a this value.\n      setPrototypeOf(set, null);\n    }\n    let l = array.length;\n    while (l--) {\n      let element = array[l];\n      if (typeof element === 'string') {\n        const lcElement = transformCaseFunc(element);\n        if (lcElement !== element) {\n          // Config presets (e.g. tags.js, attrs.js) are immutable.\n          if (!isFrozen(array)) {\n            array[l] = lcElement;\n          }\n          element = lcElement;\n        }\n      }\n      set[element] = true;\n    }\n    return set;\n  }\n  /**\n   * Clean up an array to harden against CSPP\n   *\n   * @param array - The array to be cleaned.\n   * @returns The cleaned version of the array\n   */\n  function cleanArray(array) {\n    for (let index = 0; index < array.length; index++) {\n      const isPropertyExist = objectHasOwnProperty(array, index);\n      if (!isPropertyExist) {\n        array[index] = null;\n      }\n    }\n    return array;\n  }\n  /**\n   * Shallow clone an object\n   *\n   * @param object - The object to be cloned.\n   * @returns A new object that copies the original.\n   */\n  function clone(object) {\n    const newObject = create(null);\n    for (const [property, value] of entries(object)) {\n      const isPropertyExist = objectHasOwnProperty(object, property);\n      if (isPropertyExist) {\n        if (Array.isArray(value)) {\n          newObject[property] = cleanArray(value);\n        } else if (value && typeof value === 'object' && value.constructor === Object) {\n          newObject[property] = clone(value);\n        } else {\n          newObject[property] = value;\n        }\n      }\n    }\n    return newObject;\n  }\n  /**\n   * This method automatically checks if the prop is function or getter and behaves accordingly.\n   *\n   * @param object - The object to look up the getter function in its prototype chain.\n   * @param prop - The property name for which to find the getter function.\n   * @returns The getter function found in the prototype chain or a fallback function.\n   */\n  function lookupGetter(object, prop) {\n    while (object !== null) {\n      const desc = getOwnPropertyDescriptor(object, prop);\n      if (desc) {\n        if (desc.get) {\n          return unapply(desc.get);\n        }\n        if (typeof desc.value === 'function') {\n          return unapply(desc.value);\n        }\n      }\n      object = getPrototypeOf(object);\n    }\n    function fallbackValue() {\n      return null;\n    }\n    return fallbackValue;\n  }\n\n  const html$1 = freeze(['a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio', 'b', 'bdi', 'bdo', 'big', 'blink', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'content', 'data', 'datalist', 'dd', 'decorator', 'del', 'details', 'dfn', 'dialog', 'dir', 'div', 'dl', 'dt', 'element', 'em', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'img', 'input', 'ins', 'kbd', 'label', 'legend', 'li', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meter', 'nav', 'nobr', 'ol', 'optgroup', 'option', 'output', 'p', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'section', 'select', 'shadow', 'small', 'source', 'spacer', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr']);\n  const svg$1 = freeze(['svg', 'a', 'altglyph', 'altglyphdef', 'altglyphitem', 'animatecolor', 'animatemotion', 'animatetransform', 'circle', 'clippath', 'defs', 'desc', 'ellipse', 'filter', 'font', 'g', 'glyph', 'glyphref', 'hkern', 'image', 'line', 'lineargradient', 'marker', 'mask', 'metadata', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialgradient', 'rect', 'stop', 'style', 'switch', 'symbol', 'text', 'textpath', 'title', 'tref', 'tspan', 'view', 'vkern']);\n  const svgFilters = freeze(['feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight', 'feDropShadow', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feImage', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence']);\n  // List of SVG elements that are disallowed by default.\n  // We still need to know them so that we can do namespace\n  // checks properly in case one wants to add them to\n  // allow-list.\n  const svgDisallowed = freeze(['animate', 'color-profile', 'cursor', 'discard', 'font-face', 'font-face-format', 'font-face-name', 'font-face-src', 'font-face-uri', 'foreignobject', 'hatch', 'hatchpath', 'mesh', 'meshgradient', 'meshpatch', 'meshrow', 'missing-glyph', 'script', 'set', 'solidcolor', 'unknown', 'use']);\n  const mathMl$1 = freeze(['math', 'menclose', 'merror', 'mfenced', 'mfrac', 'mglyph', 'mi', 'mlabeledtr', 'mmultiscripts', 'mn', 'mo', 'mover', 'mpadded', 'mphantom', 'mroot', 'mrow', 'ms', 'mspace', 'msqrt', 'mstyle', 'msub', 'msup', 'msubsup', 'mtable', 'mtd', 'mtext', 'mtr', 'munder', 'munderover', 'mprescripts']);\n  // Similarly to SVG, we want to know all MathML elements,\n  // even those that we disallow by default.\n  const mathMlDisallowed = freeze(['maction', 'maligngroup', 'malignmark', 'mlongdiv', 'mscarries', 'mscarry', 'msgroup', 'mstack', 'msline', 'msrow', 'semantics', 'annotation', 'annotation-xml', 'mprescripts', 'none']);\n  const text = freeze(['#text']);\n\n  const html = freeze(['accept', 'action', 'align', 'alt', 'autocapitalize', 'autocomplete', 'autopictureinpicture', 'autoplay', 'background', 'bgcolor', 'border', 'capture', 'cellpadding', 'cellspacing', 'checked', 'cite', 'class', 'clear', 'color', 'cols', 'colspan', 'controls', 'controlslist', 'coords', 'crossorigin', 'datetime', 'decoding', 'default', 'dir', 'disabled', 'disablepictureinpicture', 'disableremoteplayback', 'download', 'draggable', 'enctype', 'enterkeyhint', 'face', 'for', 'headers', 'height', 'hidden', 'high', 'href', 'hreflang', 'id', 'inputmode', 'integrity', 'ismap', 'kind', 'label', 'lang', 'list', 'loading', 'loop', 'low', 'max', 'maxlength', 'media', 'method', 'min', 'minlength', 'multiple', 'muted', 'name', 'nonce', 'noshade', 'novalidate', 'nowrap', 'open', 'optimum', 'pattern', 'placeholder', 'playsinline', 'popover', 'popovertarget', 'popovertargetaction', 'poster', 'preload', 'pubdate', 'radiogroup', 'readonly', 'rel', 'required', 'rev', 'reversed', 'role', 'rows', 'rowspan', 'spellcheck', 'scope', 'selected', 'shape', 'size', 'sizes', 'span', 'srclang', 'start', 'src', 'srcset', 'step', 'style', 'summary', 'tabindex', 'title', 'translate', 'type', 'usemap', 'valign', 'value', 'width', 'wrap', 'xmlns', 'slot']);\n  const svg = freeze(['accent-height', 'accumulate', 'additive', 'alignment-baseline', 'amplitude', 'ascent', 'attributename', 'attributetype', 'azimuth', 'basefrequency', 'baseline-shift', 'begin', 'bias', 'by', 'class', 'clip', 'clippathunits', 'clip-path', 'clip-rule', 'color', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'cx', 'cy', 'd', 'dx', 'dy', 'diffuseconstant', 'direction', 'display', 'divisor', 'dur', 'edgemode', 'elevation', 'end', 'exponent', 'fill', 'fill-opacity', 'fill-rule', 'filter', 'filterunits', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'fx', 'fy', 'g1', 'g2', 'glyph-name', 'glyphref', 'gradientunits', 'gradienttransform', 'height', 'href', 'id', 'image-rendering', 'in', 'in2', 'intercept', 'k', 'k1', 'k2', 'k3', 'k4', 'kerning', 'keypoints', 'keysplines', 'keytimes', 'lang', 'lengthadjust', 'letter-spacing', 'kernelmatrix', 'kernelunitlength', 'lighting-color', 'local', 'marker-end', 'marker-mid', 'marker-start', 'markerheight', 'markerunits', 'markerwidth', 'maskcontentunits', 'maskunits', 'max', 'mask', 'media', 'method', 'mode', 'min', 'name', 'numoctaves', 'offset', 'operator', 'opacity', 'order', 'orient', 'orientation', 'origin', 'overflow', 'paint-order', 'path', 'pathlength', 'patterncontentunits', 'patterntransform', 'patternunits', 'points', 'preservealpha', 'preserveaspectratio', 'primitiveunits', 'r', 'rx', 'ry', 'radius', 'refx', 'refy', 'repeatcount', 'repeatdur', 'restart', 'result', 'rotate', 'scale', 'seed', 'shape-rendering', 'slope', 'specularconstant', 'specularexponent', 'spreadmethod', 'startoffset', 'stddeviation', 'stitchtiles', 'stop-color', 'stop-opacity', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke', 'stroke-width', 'style', 'surfacescale', 'systemlanguage', 'tabindex', 'tablevalues', 'targetx', 'targety', 'transform', 'transform-origin', 'text-anchor', 'text-decoration', 'text-rendering', 'textlength', 'type', 'u1', 'u2', 'unicode', 'values', 'viewbox', 'visibility', 'version', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'width', 'word-spacing', 'wrap', 'writing-mode', 'xchannelselector', 'ychannelselector', 'x', 'x1', 'x2', 'xmlns', 'y', 'y1', 'y2', 'z', 'zoomandpan']);\n  const mathMl = freeze(['accent', 'accentunder', 'align', 'bevelled', 'close', 'columnsalign', 'columnlines', 'columnspan', 'denomalign', 'depth', 'dir', 'display', 'displaystyle', 'encoding', 'fence', 'frame', 'height', 'href', 'id', 'largeop', 'length', 'linethickness', 'lspace', 'lquote', 'mathbackground', 'mathcolor', 'mathsize', 'mathvariant', 'maxsize', 'minsize', 'movablelimits', 'notation', 'numalign', 'open', 'rowalign', 'rowlines', 'rowspacing', 'rowspan', 'rspace', 'rquote', 'scriptlevel', 'scriptminsize', 'scriptsizemultiplier', 'selection', 'separator', 'separators', 'stretchy', 'subscriptshift', 'supscriptshift', 'symmetric', 'voffset', 'width', 'xmlns']);\n  const xml = freeze(['xlink:href', 'xml:id', 'xlink:title', 'xml:space', 'xmlns:xlink']);\n\n  // eslint-disable-next-line unicorn/better-regex\n  const MUSTACHE_EXPR = seal(/\\{\\{[\\w\\W]*|[\\w\\W]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\n  const ERB_EXPR = seal(/<%[\\w\\W]*|[\\w\\W]*%>/gm);\n  const TMPLIT_EXPR = seal(/\\$\\{[\\w\\W]*/gm); // eslint-disable-line unicorn/better-regex\n  const DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]+$/); // eslint-disable-line no-useless-escape\n  const ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\n  const IS_ALLOWED_URI = seal(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|sms|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n  );\n  const IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\n  const ATTR_WHITESPACE = seal(/[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n  );\n  const DOCTYPE_NAME = seal(/^html$/i);\n  const CUSTOM_ELEMENT = seal(/^[a-z][.\\w]*(-[.\\w]+)+$/i);\n\n  var EXPRESSIONS = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    ARIA_ATTR: ARIA_ATTR,\n    ATTR_WHITESPACE: ATTR_WHITESPACE,\n    CUSTOM_ELEMENT: CUSTOM_ELEMENT,\n    DATA_ATTR: DATA_ATTR,\n    DOCTYPE_NAME: DOCTYPE_NAME,\n    ERB_EXPR: ERB_EXPR,\n    IS_ALLOWED_URI: IS_ALLOWED_URI,\n    IS_SCRIPT_OR_DATA: IS_SCRIPT_OR_DATA,\n    MUSTACHE_EXPR: MUSTACHE_EXPR,\n    TMPLIT_EXPR: TMPLIT_EXPR\n  });\n\n  /* eslint-disable @typescript-eslint/indent */\n  // https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\n  const NODE_TYPE = {\n    element: 1,\n    attribute: 2,\n    text: 3,\n    cdataSection: 4,\n    entityReference: 5,\n    // Deprecated\n    entityNode: 6,\n    // Deprecated\n    progressingInstruction: 7,\n    comment: 8,\n    document: 9,\n    documentType: 10,\n    documentFragment: 11,\n    notation: 12 // Deprecated\n  };\n  const getGlobal = function getGlobal() {\n    return typeof window === 'undefined' ? null : window;\n  };\n  /**\n   * Creates a no-op policy for internal use only.\n   * Don't export this function outside this module!\n   * @param trustedTypes The policy factory.\n   * @param purifyHostElement The Script element used to load DOMPurify (to determine policy name suffix).\n   * @return The policy created (or null, if Trusted Types\n   * are not supported or creating the policy failed).\n   */\n  const _createTrustedTypesPolicy = function _createTrustedTypesPolicy(trustedTypes, purifyHostElement) {\n    if (typeof trustedTypes !== 'object' || typeof trustedTypes.createPolicy !== 'function') {\n      return null;\n    }\n    // Allow the callers to control the unique policy name\n    // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n    // Policy creation with duplicate names throws in Trusted Types.\n    let suffix = null;\n    const ATTR_NAME = 'data-tt-policy-suffix';\n    if (purifyHostElement && purifyHostElement.hasAttribute(ATTR_NAME)) {\n      suffix = purifyHostElement.getAttribute(ATTR_NAME);\n    }\n    const policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n    try {\n      return trustedTypes.createPolicy(policyName, {\n        createHTML(html) {\n          return html;\n        },\n        createScriptURL(scriptUrl) {\n          return scriptUrl;\n        }\n      });\n    } catch (_) {\n      // Policy creation failed (most likely another DOMPurify script has\n      // already run). Skip creating the policy, as this will only cause errors\n      // if TT are enforced.\n      console.warn('TrustedTypes policy ' + policyName + ' could not be created.');\n      return null;\n    }\n  };\n  const _createHooksMap = function _createHooksMap() {\n    return {\n      afterSanitizeAttributes: [],\n      afterSanitizeElements: [],\n      afterSanitizeShadowDOM: [],\n      beforeSanitizeAttributes: [],\n      beforeSanitizeElements: [],\n      beforeSanitizeShadowDOM: [],\n      uponSanitizeAttribute: [],\n      uponSanitizeElement: [],\n      uponSanitizeShadowNode: []\n    };\n  };\n  function createDOMPurify() {\n    let window = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getGlobal();\n    const DOMPurify = root => createDOMPurify(root);\n    DOMPurify.version = '3.2.4';\n    DOMPurify.removed = [];\n    if (!window || !window.document || window.document.nodeType !== NODE_TYPE.document || !window.Element) {\n      // Not running in a browser, provide a factory function\n      // so that you can pass your own Window\n      DOMPurify.isSupported = false;\n      return DOMPurify;\n    }\n    let {\n      document\n    } = window;\n    const originalDocument = document;\n    const currentScript = originalDocument.currentScript;\n    const {\n      DocumentFragment,\n      HTMLTemplateElement,\n      Node,\n      Element,\n      NodeFilter,\n      NamedNodeMap = window.NamedNodeMap || window.MozNamedAttrMap,\n      HTMLFormElement,\n      DOMParser,\n      trustedTypes\n    } = window;\n    const ElementPrototype = Element.prototype;\n    const cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n    const remove = lookupGetter(ElementPrototype, 'remove');\n    const getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n    const getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n    const getParentNode = lookupGetter(ElementPrototype, 'parentNode');\n    // As per issue #47, the web-components registry is inherited by a\n    // new document created via createHTMLDocument. As per the spec\n    // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n    // a new empty registry is used when creating a template contents owner\n    // document, so we use that as our parent document to ensure nothing\n    // is inherited.\n    if (typeof HTMLTemplateElement === 'function') {\n      const template = document.createElement('template');\n      if (template.content && template.content.ownerDocument) {\n        document = template.content.ownerDocument;\n      }\n    }\n    let trustedTypesPolicy;\n    let emptyHTML = '';\n    const {\n      implementation,\n      createNodeIterator,\n      createDocumentFragment,\n      getElementsByTagName\n    } = document;\n    const {\n      importNode\n    } = originalDocument;\n    let hooks = _createHooksMap();\n    /**\n     * Expose whether this browser supports running the full DOMPurify.\n     */\n    DOMPurify.isSupported = typeof entries === 'function' && typeof getParentNode === 'function' && implementation && implementation.createHTMLDocument !== undefined;\n    const {\n      MUSTACHE_EXPR,\n      ERB_EXPR,\n      TMPLIT_EXPR,\n      DATA_ATTR,\n      ARIA_ATTR,\n      IS_SCRIPT_OR_DATA,\n      ATTR_WHITESPACE,\n      CUSTOM_ELEMENT\n    } = EXPRESSIONS;\n    let {\n      IS_ALLOWED_URI: IS_ALLOWED_URI$1\n    } = EXPRESSIONS;\n    /**\n     * We consider the elements and attributes below to be safe. Ideally\n     * don't add any new ones but feel free to remove unwanted ones.\n     */\n    /* allowed element names */\n    let ALLOWED_TAGS = null;\n    const DEFAULT_ALLOWED_TAGS = addToSet({}, [...html$1, ...svg$1, ...svgFilters, ...mathMl$1, ...text]);\n    /* Allowed attribute names */\n    let ALLOWED_ATTR = null;\n    const DEFAULT_ALLOWED_ATTR = addToSet({}, [...html, ...svg, ...mathMl, ...xml]);\n    /*\n     * Configure how DOMPurify should handle custom elements and their attributes as well as customized built-in elements.\n     * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)\n     * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)\n     * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.\n     */\n    let CUSTOM_ELEMENT_HANDLING = Object.seal(create(null, {\n      tagNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null\n      },\n      attributeNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null\n      },\n      allowCustomizedBuiltInElements: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: false\n      }\n    }));\n    /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n    let FORBID_TAGS = null;\n    /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n    let FORBID_ATTR = null;\n    /* Decide if ARIA attributes are okay */\n    let ALLOW_ARIA_ATTR = true;\n    /* Decide if custom data attributes are okay */\n    let ALLOW_DATA_ATTR = true;\n    /* Decide if unknown protocols are okay */\n    let ALLOW_UNKNOWN_PROTOCOLS = false;\n    /* Decide if self-closing tags in attributes are allowed.\n     * Usually removed due to a mXSS issue in jQuery 3.0 */\n    let ALLOW_SELF_CLOSE_IN_ATTR = true;\n    /* Output should be safe for common template engines.\n     * This means, DOMPurify removes data attributes, mustaches and ERB\n     */\n    let SAFE_FOR_TEMPLATES = false;\n    /* Output should be safe even for XML used within HTML and alike.\n     * This means, DOMPurify removes comments when containing risky content.\n     */\n    let SAFE_FOR_XML = true;\n    /* Decide if document with <html>... should be returned */\n    let WHOLE_DOCUMENT = false;\n    /* Track whether config is already set on this instance of DOMPurify. */\n    let SET_CONFIG = false;\n    /* Decide if all elements (e.g. style, script) must be children of\n     * document.body. By default, browsers might move them to document.head */\n    let FORCE_BODY = false;\n    /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n     * string (or a TrustedHTML object if Trusted Types are supported).\n     * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n     */\n    let RETURN_DOM = false;\n    /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n     * string  (or a TrustedHTML object if Trusted Types are supported) */\n    let RETURN_DOM_FRAGMENT = false;\n    /* Try to return a Trusted Type object instead of a string, return a string in\n     * case Trusted Types are not supported  */\n    let RETURN_TRUSTED_TYPE = false;\n    /* Output should be free from DOM clobbering attacks?\n     * This sanitizes markups named with colliding, clobberable built-in DOM APIs.\n     */\n    let SANITIZE_DOM = true;\n    /* Achieve full DOM Clobbering protection by isolating the namespace of named\n     * properties and JS variables, mitigating attacks that abuse the HTML/DOM spec rules.\n     *\n     * HTML/DOM spec rules that enable DOM Clobbering:\n     *   - Named Access on Window (§7.3.3)\n     *   - DOM Tree Accessors (§3.1.5)\n     *   - Form Element Parent-Child Relations (§4.10.3)\n     *   - Iframe srcdoc / Nested WindowProxies (§4.8.5)\n     *   - HTMLCollection (§4.2.10.2)\n     *\n     * Namespace isolation is implemented by prefixing `id` and `name` attributes\n     * with a constant string, i.e., `user-content-`\n     */\n    let SANITIZE_NAMED_PROPS = false;\n    const SANITIZE_NAMED_PROPS_PREFIX = 'user-content-';\n    /* Keep element content when removing element? */\n    let KEEP_CONTENT = true;\n    /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n     * of importing it into a new Document and returning a sanitized copy */\n    let IN_PLACE = false;\n    /* Allow usage of profiles like html, svg and mathMl */\n    let USE_PROFILES = {};\n    /* Tags to ignore content of when KEEP_CONTENT is true */\n    let FORBID_CONTENTS = null;\n    const DEFAULT_FORBID_CONTENTS = addToSet({}, ['annotation-xml', 'audio', 'colgroup', 'desc', 'foreignobject', 'head', 'iframe', 'math', 'mi', 'mn', 'mo', 'ms', 'mtext', 'noembed', 'noframes', 'noscript', 'plaintext', 'script', 'style', 'svg', 'template', 'thead', 'title', 'video', 'xmp']);\n    /* Tags that are safe for data: URIs */\n    let DATA_URI_TAGS = null;\n    const DEFAULT_DATA_URI_TAGS = addToSet({}, ['audio', 'video', 'img', 'source', 'image', 'track']);\n    /* Attributes safe for values like \"javascript:\" */\n    let URI_SAFE_ATTRIBUTES = null;\n    const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, ['alt', 'class', 'for', 'id', 'label', 'name', 'pattern', 'placeholder', 'role', 'summary', 'title', 'value', 'style', 'xmlns']);\n    const MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n    const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n    const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n    /* Document namespace */\n    let NAMESPACE = HTML_NAMESPACE;\n    let IS_EMPTY_INPUT = false;\n    /* Allowed XHTML+XML namespaces */\n    let ALLOWED_NAMESPACES = null;\n    const DEFAULT_ALLOWED_NAMESPACES = addToSet({}, [MATHML_NAMESPACE, SVG_NAMESPACE, HTML_NAMESPACE], stringToString);\n    let MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, ['mi', 'mo', 'mn', 'ms', 'mtext']);\n    let HTML_INTEGRATION_POINTS = addToSet({}, ['annotation-xml']);\n    // Certain elements are allowed in both SVG and HTML\n    // namespace. We need to specify them explicitly\n    // so that they don't get erroneously deleted from\n    // HTML namespace.\n    const COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, ['title', 'style', 'font', 'a', 'script']);\n    /* Parsing of strict XHTML documents */\n    let PARSER_MEDIA_TYPE = null;\n    const SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\n    const DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\n    let transformCaseFunc = null;\n    /* Keep a reference to config to pass to hooks */\n    let CONFIG = null;\n    /* Ideally, do not touch anything below this line */\n    /* ______________________________________________ */\n    const formElement = document.createElement('form');\n    const isRegexOrFunction = function isRegexOrFunction(testValue) {\n      return testValue instanceof RegExp || testValue instanceof Function;\n    };\n    /**\n     * _parseConfig\n     *\n     * @param cfg optional config literal\n     */\n    // eslint-disable-next-line complexity\n    const _parseConfig = function _parseConfig() {\n      let cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      if (CONFIG && CONFIG === cfg) {\n        return;\n      }\n      /* Shield configuration object from tampering */\n      if (!cfg || typeof cfg !== 'object') {\n        cfg = {};\n      }\n      /* Shield configuration object from prototype pollution */\n      cfg = clone(cfg);\n      PARSER_MEDIA_TYPE =\n      // eslint-disable-next-line unicorn/prefer-includes\n      SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1 ? DEFAULT_PARSER_MEDIA_TYPE : cfg.PARSER_MEDIA_TYPE;\n      // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\n      transformCaseFunc = PARSER_MEDIA_TYPE === 'application/xhtml+xml' ? stringToString : stringToLowerCase;\n      /* Set configuration parameters */\n      ALLOWED_TAGS = objectHasOwnProperty(cfg, 'ALLOWED_TAGS') ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc) : DEFAULT_ALLOWED_TAGS;\n      ALLOWED_ATTR = objectHasOwnProperty(cfg, 'ALLOWED_ATTR') ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc) : DEFAULT_ALLOWED_ATTR;\n      ALLOWED_NAMESPACES = objectHasOwnProperty(cfg, 'ALLOWED_NAMESPACES') ? addToSet({}, cfg.ALLOWED_NAMESPACES, stringToString) : DEFAULT_ALLOWED_NAMESPACES;\n      URI_SAFE_ATTRIBUTES = objectHasOwnProperty(cfg, 'ADD_URI_SAFE_ATTR') ? addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES), cfg.ADD_URI_SAFE_ATTR, transformCaseFunc) : DEFAULT_URI_SAFE_ATTRIBUTES;\n      DATA_URI_TAGS = objectHasOwnProperty(cfg, 'ADD_DATA_URI_TAGS') ? addToSet(clone(DEFAULT_DATA_URI_TAGS), cfg.ADD_DATA_URI_TAGS, transformCaseFunc) : DEFAULT_DATA_URI_TAGS;\n      FORBID_CONTENTS = objectHasOwnProperty(cfg, 'FORBID_CONTENTS') ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc) : DEFAULT_FORBID_CONTENTS;\n      FORBID_TAGS = objectHasOwnProperty(cfg, 'FORBID_TAGS') ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc) : {};\n      FORBID_ATTR = objectHasOwnProperty(cfg, 'FORBID_ATTR') ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc) : {};\n      USE_PROFILES = objectHasOwnProperty(cfg, 'USE_PROFILES') ? cfg.USE_PROFILES : false;\n      ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n      ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n      ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n      ALLOW_SELF_CLOSE_IN_ATTR = cfg.ALLOW_SELF_CLOSE_IN_ATTR !== false; // Default true\n      SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n      SAFE_FOR_XML = cfg.SAFE_FOR_XML !== false; // Default true\n      WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n      RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n      RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n      RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n      FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n      SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n      SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false; // Default false\n      KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n      IN_PLACE = cfg.IN_PLACE || false; // Default false\n      IS_ALLOWED_URI$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI;\n      NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n      MATHML_TEXT_INTEGRATION_POINTS = cfg.MATHML_TEXT_INTEGRATION_POINTS || MATHML_TEXT_INTEGRATION_POINTS;\n      HTML_INTEGRATION_POINTS = cfg.HTML_INTEGRATION_POINTS || HTML_INTEGRATION_POINTS;\n      CUSTOM_ELEMENT_HANDLING = cfg.CUSTOM_ELEMENT_HANDLING || {};\n      if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)) {\n        CUSTOM_ELEMENT_HANDLING.tagNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;\n      }\n      if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)) {\n        CUSTOM_ELEMENT_HANDLING.attributeNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;\n      }\n      if (cfg.CUSTOM_ELEMENT_HANDLING && typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements === 'boolean') {\n        CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements = cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;\n      }\n      if (SAFE_FOR_TEMPLATES) {\n        ALLOW_DATA_ATTR = false;\n      }\n      if (RETURN_DOM_FRAGMENT) {\n        RETURN_DOM = true;\n      }\n      /* Parse profile info */\n      if (USE_PROFILES) {\n        ALLOWED_TAGS = addToSet({}, text);\n        ALLOWED_ATTR = [];\n        if (USE_PROFILES.html === true) {\n          addToSet(ALLOWED_TAGS, html$1);\n          addToSet(ALLOWED_ATTR, html);\n        }\n        if (USE_PROFILES.svg === true) {\n          addToSet(ALLOWED_TAGS, svg$1);\n          addToSet(ALLOWED_ATTR, svg);\n          addToSet(ALLOWED_ATTR, xml);\n        }\n        if (USE_PROFILES.svgFilters === true) {\n          addToSet(ALLOWED_TAGS, svgFilters);\n          addToSet(ALLOWED_ATTR, svg);\n          addToSet(ALLOWED_ATTR, xml);\n        }\n        if (USE_PROFILES.mathMl === true) {\n          addToSet(ALLOWED_TAGS, mathMl$1);\n          addToSet(ALLOWED_ATTR, mathMl);\n          addToSet(ALLOWED_ATTR, xml);\n        }\n      }\n      /* Merge configuration parameters */\n      if (cfg.ADD_TAGS) {\n        if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n          ALLOWED_TAGS = clone(ALLOWED_TAGS);\n        }\n        addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);\n      }\n      if (cfg.ADD_ATTR) {\n        if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n          ALLOWED_ATTR = clone(ALLOWED_ATTR);\n        }\n        addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);\n      }\n      if (cfg.ADD_URI_SAFE_ATTR) {\n        addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);\n      }\n      if (cfg.FORBID_CONTENTS) {\n        if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n          FORBID_CONTENTS = clone(FORBID_CONTENTS);\n        }\n        addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);\n      }\n      /* Add #text in case KEEP_CONTENT is set to true */\n      if (KEEP_CONTENT) {\n        ALLOWED_TAGS['#text'] = true;\n      }\n      /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n      if (WHOLE_DOCUMENT) {\n        addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n      }\n      /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n      if (ALLOWED_TAGS.table) {\n        addToSet(ALLOWED_TAGS, ['tbody']);\n        delete FORBID_TAGS.tbody;\n      }\n      if (cfg.TRUSTED_TYPES_POLICY) {\n        if (typeof cfg.TRUSTED_TYPES_POLICY.createHTML !== 'function') {\n          throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createHTML\" hook.');\n        }\n        if (typeof cfg.TRUSTED_TYPES_POLICY.createScriptURL !== 'function') {\n          throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createScriptURL\" hook.');\n        }\n        // Overwrite existing TrustedTypes policy.\n        trustedTypesPolicy = cfg.TRUSTED_TYPES_POLICY;\n        // Sign local variables required by `sanitize`.\n        emptyHTML = trustedTypesPolicy.createHTML('');\n      } else {\n        // Uninitialized policy, attempt to initialize the internal dompurify policy.\n        if (trustedTypesPolicy === undefined) {\n          trustedTypesPolicy = _createTrustedTypesPolicy(trustedTypes, currentScript);\n        }\n        // If creating the internal policy succeeded sign internal variables.\n        if (trustedTypesPolicy !== null && typeof emptyHTML === 'string') {\n          emptyHTML = trustedTypesPolicy.createHTML('');\n        }\n      }\n      // Prevent further manipulation of configuration.\n      // Not available in IE8, Safari 5, etc.\n      if (freeze) {\n        freeze(cfg);\n      }\n      CONFIG = cfg;\n    };\n    /* Keep track of all possible SVG and MathML tags\n     * so that we can perform the namespace checks\n     * correctly. */\n    const ALL_SVG_TAGS = addToSet({}, [...svg$1, ...svgFilters, ...svgDisallowed]);\n    const ALL_MATHML_TAGS = addToSet({}, [...mathMl$1, ...mathMlDisallowed]);\n    /**\n     * @param element a DOM element whose namespace is being checked\n     * @returns Return false if the element has a\n     *  namespace that a spec-compliant parser would never\n     *  return. Return true otherwise.\n     */\n    const _checkValidNamespace = function _checkValidNamespace(element) {\n      let parent = getParentNode(element);\n      // In JSDOM, if we're inside shadow DOM, then parentNode\n      // can be null. We just simulate parent in this case.\n      if (!parent || !parent.tagName) {\n        parent = {\n          namespaceURI: NAMESPACE,\n          tagName: 'template'\n        };\n      }\n      const tagName = stringToLowerCase(element.tagName);\n      const parentTagName = stringToLowerCase(parent.tagName);\n      if (!ALLOWED_NAMESPACES[element.namespaceURI]) {\n        return false;\n      }\n      if (element.namespaceURI === SVG_NAMESPACE) {\n        // The only way to switch from HTML namespace to SVG\n        // is via <svg>. If it happens via any other tag, then\n        // it should be killed.\n        if (parent.namespaceURI === HTML_NAMESPACE) {\n          return tagName === 'svg';\n        }\n        // The only way to switch from MathML to SVG is via`\n        // svg if parent is either <annotation-xml> or MathML\n        // text integration points.\n        if (parent.namespaceURI === MATHML_NAMESPACE) {\n          return tagName === 'svg' && (parentTagName === 'annotation-xml' || MATHML_TEXT_INTEGRATION_POINTS[parentTagName]);\n        }\n        // We only allow elements that are defined in SVG\n        // spec. All others are disallowed in SVG namespace.\n        return Boolean(ALL_SVG_TAGS[tagName]);\n      }\n      if (element.namespaceURI === MATHML_NAMESPACE) {\n        // The only way to switch from HTML namespace to MathML\n        // is via <math>. If it happens via any other tag, then\n        // it should be killed.\n        if (parent.namespaceURI === HTML_NAMESPACE) {\n          return tagName === 'math';\n        }\n        // The only way to switch from SVG to MathML is via\n        // <math> and HTML integration points\n        if (parent.namespaceURI === SVG_NAMESPACE) {\n          return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n        }\n        // We only allow elements that are defined in MathML\n        // spec. All others are disallowed in MathML namespace.\n        return Boolean(ALL_MATHML_TAGS[tagName]);\n      }\n      if (element.namespaceURI === HTML_NAMESPACE) {\n        // The only way to switch from SVG to HTML is via\n        // HTML integration points, and from MathML to HTML\n        // is via MathML text integration points\n        if (parent.namespaceURI === SVG_NAMESPACE && !HTML_INTEGRATION_POINTS[parentTagName]) {\n          return false;\n        }\n        if (parent.namespaceURI === MATHML_NAMESPACE && !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]) {\n          return false;\n        }\n        // We disallow tags that are specific for MathML\n        // or SVG and should never appear in HTML namespace\n        return !ALL_MATHML_TAGS[tagName] && (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName]);\n      }\n      // For XHTML and XML documents that support custom namespaces\n      if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && ALLOWED_NAMESPACES[element.namespaceURI]) {\n        return true;\n      }\n      // The code should never reach this place (this means\n      // that the element somehow got namespace that is not\n      // HTML, SVG, MathML or allowed via ALLOWED_NAMESPACES).\n      // Return false just in case.\n      return false;\n    };\n    /**\n     * _forceRemove\n     *\n     * @param node a DOM node\n     */\n    const _forceRemove = function _forceRemove(node) {\n      arrayPush(DOMPurify.removed, {\n        element: node\n      });\n      try {\n        // eslint-disable-next-line unicorn/prefer-dom-node-remove\n        getParentNode(node).removeChild(node);\n      } catch (_) {\n        remove(node);\n      }\n    };\n    /**\n     * _removeAttribute\n     *\n     * @param name an Attribute name\n     * @param element a DOM node\n     */\n    const _removeAttribute = function _removeAttribute(name, element) {\n      try {\n        arrayPush(DOMPurify.removed, {\n          attribute: element.getAttributeNode(name),\n          from: element\n        });\n      } catch (_) {\n        arrayPush(DOMPurify.removed, {\n          attribute: null,\n          from: element\n        });\n      }\n      element.removeAttribute(name);\n      // We void attribute values for unremovable \"is\" attributes\n      if (name === 'is') {\n        if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n          try {\n            _forceRemove(element);\n          } catch (_) {}\n        } else {\n          try {\n            element.setAttribute(name, '');\n          } catch (_) {}\n        }\n      }\n    };\n    /**\n     * _initDocument\n     *\n     * @param dirty - a string of dirty markup\n     * @return a DOM, filled with the dirty markup\n     */\n    const _initDocument = function _initDocument(dirty) {\n      /* Create a HTML document */\n      let doc = null;\n      let leadingWhitespace = null;\n      if (FORCE_BODY) {\n        dirty = '<remove></remove>' + dirty;\n      } else {\n        /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n        const matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n        leadingWhitespace = matches && matches[0];\n      }\n      if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && NAMESPACE === HTML_NAMESPACE) {\n        // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\n        dirty = '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' + dirty + '</body></html>';\n      }\n      const dirtyPayload = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;\n      /*\n       * Use the DOMParser API by default, fallback later if needs be\n       * DOMParser not work for svg when has multiple root element.\n       */\n      if (NAMESPACE === HTML_NAMESPACE) {\n        try {\n          doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n        } catch (_) {}\n      }\n      /* Use createHTMLDocument in case DOMParser is not available */\n      if (!doc || !doc.documentElement) {\n        doc = implementation.createDocument(NAMESPACE, 'template', null);\n        try {\n          doc.documentElement.innerHTML = IS_EMPTY_INPUT ? emptyHTML : dirtyPayload;\n        } catch (_) {\n          // Syntax error if dirtyPayload is invalid xml\n        }\n      }\n      const body = doc.body || doc.documentElement;\n      if (dirty && leadingWhitespace) {\n        body.insertBefore(document.createTextNode(leadingWhitespace), body.childNodes[0] || null);\n      }\n      /* Work on whole document or just its body */\n      if (NAMESPACE === HTML_NAMESPACE) {\n        return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? 'html' : 'body')[0];\n      }\n      return WHOLE_DOCUMENT ? doc.documentElement : body;\n    };\n    /**\n     * Creates a NodeIterator object that you can use to traverse filtered lists of nodes or elements in a document.\n     *\n     * @param root The root element or node to start traversing on.\n     * @return The created NodeIterator\n     */\n    const _createNodeIterator = function _createNodeIterator(root) {\n      return createNodeIterator.call(root.ownerDocument || root, root,\n      // eslint-disable-next-line no-bitwise\n      NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT | NodeFilter.SHOW_PROCESSING_INSTRUCTION | NodeFilter.SHOW_CDATA_SECTION, null);\n    };\n    /**\n     * _isClobbered\n     *\n     * @param element element to check for clobbering attacks\n     * @return true if clobbered, false if safe\n     */\n    const _isClobbered = function _isClobbered(element) {\n      return element instanceof HTMLFormElement && (typeof element.nodeName !== 'string' || typeof element.textContent !== 'string' || typeof element.removeChild !== 'function' || !(element.attributes instanceof NamedNodeMap) || typeof element.removeAttribute !== 'function' || typeof element.setAttribute !== 'function' || typeof element.namespaceURI !== 'string' || typeof element.insertBefore !== 'function' || typeof element.hasChildNodes !== 'function');\n    };\n    /**\n     * Checks whether the given object is a DOM node.\n     *\n     * @param value object to check whether it's a DOM node\n     * @return true is object is a DOM node\n     */\n    const _isNode = function _isNode(value) {\n      return typeof Node === 'function' && value instanceof Node;\n    };\n    function _executeHooks(hooks, currentNode, data) {\n      arrayForEach(hooks, hook => {\n        hook.call(DOMPurify, currentNode, data, CONFIG);\n      });\n    }\n    /**\n     * _sanitizeElements\n     *\n     * @protect nodeName\n     * @protect textContent\n     * @protect removeChild\n     * @param currentNode to check for permission to exist\n     * @return true if node was killed, false if left alive\n     */\n    const _sanitizeElements = function _sanitizeElements(currentNode) {\n      let content = null;\n      /* Execute a hook if present */\n      _executeHooks(hooks.beforeSanitizeElements, currentNode, null);\n      /* Check if element is clobbered or can clobber */\n      if (_isClobbered(currentNode)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n      /* Now let's check the element's type and name */\n      const tagName = transformCaseFunc(currentNode.nodeName);\n      /* Execute a hook if present */\n      _executeHooks(hooks.uponSanitizeElement, currentNode, {\n        tagName,\n        allowedTags: ALLOWED_TAGS\n      });\n      /* Detect mXSS attempts abusing namespace confusion */\n      if (currentNode.hasChildNodes() && !_isNode(currentNode.firstElementChild) && regExpTest(/<[/\\w]/g, currentNode.innerHTML) && regExpTest(/<[/\\w]/g, currentNode.textContent)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n      /* Remove any occurrence of processing instructions */\n      if (currentNode.nodeType === NODE_TYPE.progressingInstruction) {\n        _forceRemove(currentNode);\n        return true;\n      }\n      /* Remove any kind of possibly harmful comments */\n      if (SAFE_FOR_XML && currentNode.nodeType === NODE_TYPE.comment && regExpTest(/<[/\\w]/g, currentNode.data)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n      /* Remove element if anything forbids its presence */\n      if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n        /* Check if we have a custom element to handle */\n        if (!FORBID_TAGS[tagName] && _isBasicCustomElement(tagName)) {\n          if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)) {\n            return false;\n          }\n          if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)) {\n            return false;\n          }\n        }\n        /* Keep content except for bad-listed elements */\n        if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n          const parentNode = getParentNode(currentNode) || currentNode.parentNode;\n          const childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n          if (childNodes && parentNode) {\n            const childCount = childNodes.length;\n            for (let i = childCount - 1; i >= 0; --i) {\n              const childClone = cloneNode(childNodes[i], true);\n              childClone.__removalCount = (currentNode.__removalCount || 0) + 1;\n              parentNode.insertBefore(childClone, getNextSibling(currentNode));\n            }\n          }\n        }\n        _forceRemove(currentNode);\n        return true;\n      }\n      /* Check whether element has a valid namespace */\n      if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n      /* Make sure that older browsers don't get fallback-tag mXSS */\n      if ((tagName === 'noscript' || tagName === 'noembed' || tagName === 'noframes') && regExpTest(/<\\/no(script|embed|frames)/i, currentNode.innerHTML)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n      /* Sanitize element content to be template-safe */\n      if (SAFE_FOR_TEMPLATES && currentNode.nodeType === NODE_TYPE.text) {\n        /* Get the element's text content */\n        content = currentNode.textContent;\n        arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n          content = stringReplace(content, expr, ' ');\n        });\n        if (currentNode.textContent !== content) {\n          arrayPush(DOMPurify.removed, {\n            element: currentNode.cloneNode()\n          });\n          currentNode.textContent = content;\n        }\n      }\n      /* Execute a hook if present */\n      _executeHooks(hooks.afterSanitizeElements, currentNode, null);\n      return false;\n    };\n    /**\n     * _isValidAttribute\n     *\n     * @param lcTag Lowercase tag name of containing element.\n     * @param lcName Lowercase attribute name.\n     * @param value Attribute value.\n     * @return Returns true if `value` is valid, otherwise false.\n     */\n    // eslint-disable-next-line complexity\n    const _isValidAttribute = function _isValidAttribute(lcTag, lcName, value) {\n      /* Make sure attribute cannot clobber */\n      if (SANITIZE_DOM && (lcName === 'id' || lcName === 'name') && (value in document || value in formElement)) {\n        return false;\n      }\n      /* Allow valid data-* attributes: At least one character after \"-\"\n          (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n          XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n          We don't need to check the value; it's always URI safe. */\n      if (ALLOW_DATA_ATTR && !FORBID_ATTR[lcName] && regExpTest(DATA_ATTR, lcName)) ; else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR, lcName)) ; else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n        if (\n        // First condition does a very basic check if a) it's basically a valid custom element tagname AND\n        // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck\n        _isBasicCustomElement(lcTag) && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag)) && (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName) || CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)) ||\n        // Alternative, second condition checks if it's an `is`-attribute, AND\n        // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        lcName === 'is' && CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))) ; else {\n          return false;\n        }\n        /* Check value is safe. First, is attr inert? If so, is safe */\n      } else if (URI_SAFE_ATTRIBUTES[lcName]) ; else if (regExpTest(IS_ALLOWED_URI$1, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if ((lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') && lcTag !== 'script' && stringIndexOf(value, 'data:') === 0 && DATA_URI_TAGS[lcTag]) ; else if (ALLOW_UNKNOWN_PROTOCOLS && !regExpTest(IS_SCRIPT_OR_DATA, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if (value) {\n        return false;\n      } else ;\n      return true;\n    };\n    /**\n     * _isBasicCustomElement\n     * checks if at least one dash is included in tagName, and it's not the first char\n     * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name\n     *\n     * @param tagName name of the tag of the node to sanitize\n     * @returns Returns true if the tag name meets the basic criteria for a custom element, otherwise false.\n     */\n    const _isBasicCustomElement = function _isBasicCustomElement(tagName) {\n      return tagName !== 'annotation-xml' && stringMatch(tagName, CUSTOM_ELEMENT);\n    };\n    /**\n     * _sanitizeAttributes\n     *\n     * @protect attributes\n     * @protect nodeName\n     * @protect removeAttribute\n     * @protect setAttribute\n     *\n     * @param currentNode to sanitize\n     */\n    const _sanitizeAttributes = function _sanitizeAttributes(currentNode) {\n      /* Execute a hook if present */\n      _executeHooks(hooks.beforeSanitizeAttributes, currentNode, null);\n      const {\n        attributes\n      } = currentNode;\n      /* Check if we have attributes; if not we might have a text node */\n      if (!attributes || _isClobbered(currentNode)) {\n        return;\n      }\n      const hookEvent = {\n        attrName: '',\n        attrValue: '',\n        keepAttr: true,\n        allowedAttributes: ALLOWED_ATTR,\n        forceKeepAttr: undefined\n      };\n      let l = attributes.length;\n      /* Go backwards over all attributes; safely remove bad ones */\n      while (l--) {\n        const attr = attributes[l];\n        const {\n          name,\n          namespaceURI,\n          value: attrValue\n        } = attr;\n        const lcName = transformCaseFunc(name);\n        let value = name === 'value' ? attrValue : stringTrim(attrValue);\n        /* Execute a hook if present */\n        hookEvent.attrName = lcName;\n        hookEvent.attrValue = value;\n        hookEvent.keepAttr = true;\n        hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n        _executeHooks(hooks.uponSanitizeAttribute, currentNode, hookEvent);\n        value = hookEvent.attrValue;\n        /* Full DOM Clobbering protection via namespace isolation,\n         * Prefix id and name attributes with `user-content-`\n         */\n        if (SANITIZE_NAMED_PROPS && (lcName === 'id' || lcName === 'name')) {\n          // Remove the attribute with this value\n          _removeAttribute(name, currentNode);\n          // Prefix the value and later re-create the attribute with the sanitized value\n          value = SANITIZE_NAMED_PROPS_PREFIX + value;\n        }\n        /* Work around a security issue with comments inside attributes */\n        if (SAFE_FOR_XML && regExpTest(/((--!?|])>)|<\\/(style|title)/i, value)) {\n          _removeAttribute(name, currentNode);\n          continue;\n        }\n        /* Did the hooks approve of the attribute? */\n        if (hookEvent.forceKeepAttr) {\n          continue;\n        }\n        /* Remove attribute */\n        _removeAttribute(name, currentNode);\n        /* Did the hooks approve of the attribute? */\n        if (!hookEvent.keepAttr) {\n          continue;\n        }\n        /* Work around a security issue in jQuery 3.0 */\n        if (!ALLOW_SELF_CLOSE_IN_ATTR && regExpTest(/\\/>/i, value)) {\n          _removeAttribute(name, currentNode);\n          continue;\n        }\n        /* Sanitize attribute content to be template-safe */\n        if (SAFE_FOR_TEMPLATES) {\n          arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n            value = stringReplace(value, expr, ' ');\n          });\n        }\n        /* Is `value` valid for this attribute? */\n        const lcTag = transformCaseFunc(currentNode.nodeName);\n        if (!_isValidAttribute(lcTag, lcName, value)) {\n          continue;\n        }\n        /* Handle attributes that require Trusted Types */\n        if (trustedTypesPolicy && typeof trustedTypes === 'object' && typeof trustedTypes.getAttributeType === 'function') {\n          if (namespaceURI) ; else {\n            switch (trustedTypes.getAttributeType(lcTag, lcName)) {\n              case 'TrustedHTML':\n                {\n                  value = trustedTypesPolicy.createHTML(value);\n                  break;\n                }\n              case 'TrustedScriptURL':\n                {\n                  value = trustedTypesPolicy.createScriptURL(value);\n                  break;\n                }\n            }\n          }\n        }\n        /* Handle invalid data-* attribute set by try-catching it */\n        try {\n          if (namespaceURI) {\n            currentNode.setAttributeNS(namespaceURI, name, value);\n          } else {\n            /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n            currentNode.setAttribute(name, value);\n          }\n          if (_isClobbered(currentNode)) {\n            _forceRemove(currentNode);\n          } else {\n            arrayPop(DOMPurify.removed);\n          }\n        } catch (_) {}\n      }\n      /* Execute a hook if present */\n      _executeHooks(hooks.afterSanitizeAttributes, currentNode, null);\n    };\n    /**\n     * _sanitizeShadowDOM\n     *\n     * @param fragment to iterate over recursively\n     */\n    const _sanitizeShadowDOM = function _sanitizeShadowDOM(fragment) {\n      let shadowNode = null;\n      const shadowIterator = _createNodeIterator(fragment);\n      /* Execute a hook if present */\n      _executeHooks(hooks.beforeSanitizeShadowDOM, fragment, null);\n      while (shadowNode = shadowIterator.nextNode()) {\n        /* Execute a hook if present */\n        _executeHooks(hooks.uponSanitizeShadowNode, shadowNode, null);\n        /* Sanitize tags and elements */\n        _sanitizeElements(shadowNode);\n        /* Check attributes next */\n        _sanitizeAttributes(shadowNode);\n        /* Deep shadow DOM detected */\n        if (shadowNode.content instanceof DocumentFragment) {\n          _sanitizeShadowDOM(shadowNode.content);\n        }\n      }\n      /* Execute a hook if present */\n      _executeHooks(hooks.afterSanitizeShadowDOM, fragment, null);\n    };\n    // eslint-disable-next-line complexity\n    DOMPurify.sanitize = function (dirty) {\n      let cfg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      let body = null;\n      let importedNode = null;\n      let currentNode = null;\n      let returnNode = null;\n      /* Make sure we have a string to sanitize.\n        DO NOT return early, as this will return the wrong type if\n        the user has requested a DOM object rather than a string */\n      IS_EMPTY_INPUT = !dirty;\n      if (IS_EMPTY_INPUT) {\n        dirty = '<!-->';\n      }\n      /* Stringify, in case dirty is an object */\n      if (typeof dirty !== 'string' && !_isNode(dirty)) {\n        if (typeof dirty.toString === 'function') {\n          dirty = dirty.toString();\n          if (typeof dirty !== 'string') {\n            throw typeErrorCreate('dirty is not a string, aborting');\n          }\n        } else {\n          throw typeErrorCreate('toString is not a function');\n        }\n      }\n      /* Return dirty HTML if DOMPurify cannot run */\n      if (!DOMPurify.isSupported) {\n        return dirty;\n      }\n      /* Assign config vars */\n      if (!SET_CONFIG) {\n        _parseConfig(cfg);\n      }\n      /* Clean up removed elements */\n      DOMPurify.removed = [];\n      /* Check if dirty is correctly typed for IN_PLACE */\n      if (typeof dirty === 'string') {\n        IN_PLACE = false;\n      }\n      if (IN_PLACE) {\n        /* Do some early pre-sanitization to avoid unsafe root nodes */\n        if (dirty.nodeName) {\n          const tagName = transformCaseFunc(dirty.nodeName);\n          if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n            throw typeErrorCreate('root node is forbidden and cannot be sanitized in-place');\n          }\n        }\n      } else if (dirty instanceof Node) {\n        /* If dirty is a DOM element, append to an empty document to avoid\n           elements being stripped by the parser */\n        body = _initDocument('<!---->');\n        importedNode = body.ownerDocument.importNode(dirty, true);\n        if (importedNode.nodeType === NODE_TYPE.element && importedNode.nodeName === 'BODY') {\n          /* Node is already a body, use as is */\n          body = importedNode;\n        } else if (importedNode.nodeName === 'HTML') {\n          body = importedNode;\n        } else {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          body.appendChild(importedNode);\n        }\n      } else {\n        /* Exit directly if we have nothing to do */\n        if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT &&\n        // eslint-disable-next-line unicorn/prefer-includes\n        dirty.indexOf('<') === -1) {\n          return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(dirty) : dirty;\n        }\n        /* Initialize the document to work on */\n        body = _initDocument(dirty);\n        /* Check we have a DOM node from the data */\n        if (!body) {\n          return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : '';\n        }\n      }\n      /* Remove first element node (ours) if FORCE_BODY is set */\n      if (body && FORCE_BODY) {\n        _forceRemove(body.firstChild);\n      }\n      /* Get node iterator */\n      const nodeIterator = _createNodeIterator(IN_PLACE ? dirty : body);\n      /* Now start iterating over the created document */\n      while (currentNode = nodeIterator.nextNode()) {\n        /* Sanitize tags and elements */\n        _sanitizeElements(currentNode);\n        /* Check attributes next */\n        _sanitizeAttributes(currentNode);\n        /* Shadow DOM detected, sanitize it */\n        if (currentNode.content instanceof DocumentFragment) {\n          _sanitizeShadowDOM(currentNode.content);\n        }\n      }\n      /* If we sanitized `dirty` in-place, return it. */\n      if (IN_PLACE) {\n        return dirty;\n      }\n      /* Return sanitized string or DOM */\n      if (RETURN_DOM) {\n        if (RETURN_DOM_FRAGMENT) {\n          returnNode = createDocumentFragment.call(body.ownerDocument);\n          while (body.firstChild) {\n            // eslint-disable-next-line unicorn/prefer-dom-node-append\n            returnNode.appendChild(body.firstChild);\n          }\n        } else {\n          returnNode = body;\n        }\n        if (ALLOWED_ATTR.shadowroot || ALLOWED_ATTR.shadowrootmode) {\n          /*\n            AdoptNode() is not used because internal state is not reset\n            (e.g. the past names map of a HTMLFormElement), this is safe\n            in theory but we would rather not risk another attack vector.\n            The state that is cloned by importNode() is explicitly defined\n            by the specs.\n          */\n          returnNode = importNode.call(originalDocument, returnNode, true);\n        }\n        return returnNode;\n      }\n      let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n      /* Serialize doctype if allowed */\n      if (WHOLE_DOCUMENT && ALLOWED_TAGS['!doctype'] && body.ownerDocument && body.ownerDocument.doctype && body.ownerDocument.doctype.name && regExpTest(DOCTYPE_NAME, body.ownerDocument.doctype.name)) {\n        serializedHTML = '<!DOCTYPE ' + body.ownerDocument.doctype.name + '>\\n' + serializedHTML;\n      }\n      /* Sanitize final string template-safe */\n      if (SAFE_FOR_TEMPLATES) {\n        arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n          serializedHTML = stringReplace(serializedHTML, expr, ' ');\n        });\n      }\n      return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;\n    };\n    DOMPurify.setConfig = function () {\n      let cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      _parseConfig(cfg);\n      SET_CONFIG = true;\n    };\n    DOMPurify.clearConfig = function () {\n      CONFIG = null;\n      SET_CONFIG = false;\n    };\n    DOMPurify.isValidAttribute = function (tag, attr, value) {\n      /* Initialize shared config vars if necessary. */\n      if (!CONFIG) {\n        _parseConfig({});\n      }\n      const lcTag = transformCaseFunc(tag);\n      const lcName = transformCaseFunc(attr);\n      return _isValidAttribute(lcTag, lcName, value);\n    };\n    DOMPurify.addHook = function (entryPoint, hookFunction) {\n      if (typeof hookFunction !== 'function') {\n        return;\n      }\n      arrayPush(hooks[entryPoint], hookFunction);\n    };\n    DOMPurify.removeHook = function (entryPoint, hookFunction) {\n      if (hookFunction !== undefined) {\n        const index = arrayLastIndexOf(hooks[entryPoint], hookFunction);\n        return index === -1 ? undefined : arraySplice(hooks[entryPoint], index, 1)[0];\n      }\n      return arrayPop(hooks[entryPoint]);\n    };\n    DOMPurify.removeHooks = function (entryPoint) {\n      hooks[entryPoint] = [];\n    };\n    DOMPurify.removeAllHooks = function () {\n      hooks = _createHooksMap();\n    };\n    return DOMPurify;\n  }\n  var purify = createDOMPurify();\n\n  return purify;\n\n}));\n//# sourceMappingURL=purify.js.map\n","import { ReplacementImage } from \"../gui/base/icons/Icons\"\nimport { downcast, stringToUtf8Uint8Array, utf8Uint8ArrayToString } from \"@tutao/tutanota-utils\"\nimport { DataFile } from \"../api/common/DataFile\"\nimport { encodeSVG } from \"../gui/base/GuiUtils.js\"\nimport DOMPurify, { Config } from \"dompurify\"\n\n/** Data url for an SVG image that will be shown in place of external content. */\nexport const PREVENT_EXTERNAL_IMAGE_LOADING_ICON: string = encodeSVG(ReplacementImage)\n\n// background attribute is deprecated but still used in common browsers\nconst EXTERNAL_CONTENT_ATTRS = Object.freeze([\n\t\"src\",\n\t\"poster\",\n\t\"srcset\",\n\t\"background\",\n\t\"draft-src\",\n\t\"draft-srcset\",\n\t\"draft-xlink:href\",\n\t\"draft-href\",\n\t\"xlink:href\",\n\t\"href\",\n])\n\nconst DRAFT_ATTRIBUTES = [\"draft-src\", \"draft-srcset\", \"draft-xlink:href\", \"draft-href\"]\n\ntype SanitizeConfigExtra = {\n\tblockExternalContent: boolean\n\tallowRelativeLinks: boolean\n\tusePlaceholderForInlineImages: boolean\n}\n\nconst DEFAULT_CONFIG_EXTRA: SanitizeConfigExtra = Object.freeze({\n\tblockExternalContent: true,\n\tallowRelativeLinks: false,\n\tusePlaceholderForInlineImages: true,\n})\n\n/** Result of sanitization operation with result in a string form */\nexport type SanitizedHTML = {\n\t/** Clean HTML text */\n\thtml: string\n\t/** Number of blocked external content that was encountered */\n\tblockedExternalContent: number\n\t/** Collected cid: URLs, normally used for inline content */\n\tinlineImageCids: Array<string>\n\t/** Collected href link elements */\n\tlinks: Array<HTMLElement>\n}\n\ntype SanitizeConfig = SanitizeConfigExtra & Config\n\nexport type Link = HTMLElement\n\n/** Result of sanitization operation with result in a form of a DocumentFragment */\nexport type SanitizedFragment = {\n\t/** Clean HTML fragment */\n\tfragment: DocumentFragment\n\t/** Number of blocked external content that was encountered */\n\tblockedExternalContent: number\n\t/** Collected cid: URLs, normally used for inline content */\n\tinlineImageCids: Array<string>\n\t/** Collected href link elements */\n\tlinks: Array<Link>\n}\n\n/** Allowing additional HTML attributes */\nconst ADD_ATTR = Object.freeze([\n\t// for target=_blank\n\t\"target\",\n\t// for audio element\n\t\"controls\",\n\t// for embedded images\n\t\"cid\",\n\t// to persist not loaded images\n\t\"draft-src\",\n\t\"draft-srcset\",\n] as const)\n\n/** These must be safe for URI-like values */\nconst ADD_URI_SAFE_ATTR = Object.freeze([\n\t// for video element\n\t\"poster\",\n] as const)\n\n/** Complete disallow some HTML tags. */\nconst FORBID_TAGS = Object.freeze([\n\t// prevent loading of external stylesheets and fonts by blocking the whole <style> tag\n\t\"style\",\n] as const)\n\n/** restricts the allowed protocols to some standard ones + our tutatemplate protocol that allows the knowledge base to link to email templates. */\nconst ALLOWED_URI_REGEXP = /^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp|tutatemplate):|[^a-z]|[a-z+.-]+(?:[^a-z+.\\-:]|$))/i\n\nconst HTML_CONFIG: Config & { RETURN_DOM_FRAGMENT?: undefined; RETURN_DOM?: undefined } = Object.freeze({\n\tADD_ATTR: ADD_ATTR.slice(),\n\tADD_URI_SAFE_ATTR: ADD_URI_SAFE_ATTR.slice(),\n\tFORBID_TAGS: FORBID_TAGS.slice(),\n\tALLOWED_URI_REGEXP,\n} as const)\nconst SVG_CONFIG: Config & { RETURN_DOM_FRAGMENT?: undefined; RETURN_DOM?: undefined } = Object.freeze({\n\tADD_ATTR: ADD_ATTR.slice(),\n\tADD_URI_SAFE_ATTR: ADD_URI_SAFE_ATTR.slice(),\n\tFORBID_TAGS: FORBID_TAGS.slice(),\n\tNAMESPACE: \"http://www.w3.org/2000/svg\",\n} as const)\nconst FRAGMENT_CONFIG: Config & { RETURN_DOM_FRAGMENT: true } = Object.freeze({\n\tADD_ATTR: ADD_ATTR.slice(),\n\tADD_URI_SAFE_ATTR: ADD_URI_SAFE_ATTR.slice(),\n\tFORBID_TAGS: FORBID_TAGS.slice(),\n\tRETURN_DOM_FRAGMENT: true,\n\tALLOWED_URI_REGEXP,\n} as const)\n\ntype BaseConfig = typeof HTML_CONFIG | typeof SVG_CONFIG | typeof FRAGMENT_CONFIG\n\n/** Class to pre-process HTML/SVG content. */\nexport class HtmlSanitizer {\n\tprivate externalContent!: number\n\tprivate inlineImageCids!: Array<string>\n\tprivate links!: Array<Link>\n\tprivate purifier!: typeof DOMPurify\n\n\tconstructor() {\n\t\tif (DOMPurify.isSupported) {\n\t\t\tthis.purifier = DOMPurify\n\t\t\t// Do changes in afterSanitizeAttributes and not afterSanitizeElements so that images are not removed again because of the SVGs.\n\t\t\tthis.purifier.addHook(\"afterSanitizeAttributes\", this.afterSanitizeAttributes.bind(this))\n\t\t}\n\t}\n\n\t/**\n\t * Sanitizes the given html. Returns as HTML\n\t */\n\tsanitizeHTML(html: string, configExtra?: Partial<SanitizeConfigExtra>): SanitizedHTML {\n\t\tconst config = this.init(HTML_CONFIG, configExtra ?? {})\n\t\tconst cleanHtml = this.purifier.sanitize(html, config)\n\t\treturn {\n\t\t\thtml: cleanHtml,\n\t\t\tblockedExternalContent: this.externalContent,\n\t\t\tinlineImageCids: this.inlineImageCids,\n\t\t\tlinks: this.links,\n\t\t}\n\t}\n\n\t/**\n\t * Sanitizes the given SVG. Returns as SVG\n\t */\n\tsanitizeSVG(svg: string, configExtra?: Partial<SanitizeConfigExtra>): SanitizedHTML {\n\t\tconst config = this.init(SVG_CONFIG, configExtra ?? {})\n\t\tconst cleanSvg = this.purifier.sanitize(svg, config)\n\t\treturn {\n\t\t\thtml: cleanSvg,\n\t\t\tblockedExternalContent: this.externalContent,\n\t\t\tinlineImageCids: this.inlineImageCids,\n\t\t\tlinks: this.links,\n\t\t}\n\t}\n\n\t/**\n\t * inline images are attachments that are rendered as part of an <img> tag with a blob URL in the\n\t * mail body when it's displayed\n\t *\n\t * svg images can contain malicious code, so we need to sanitize them before we display them.\n\t * DOMPurify can do that, but can't handle the xml declaration at the start of well-formed svg documents.\n\t *\n\t * 1. parse the document as xml\n\t * 2. strip the declaration\n\t * 3. sanitize\n\t * 4. add the declaration back on\n\t *\n\t * NOTE: currently, we only allow UTF-8 inline SVG.\n\t * NOTE: SVG with incompatible encodings will be replaced with an empty file.\n\t *\n\t * @param dirtyFile the svg DataFile as received in the mail\n\t * @returns clean a sanitized svg document as a DataFile\n\t */\n\tsanitizeInlineAttachment(dirtyFile: DataFile): DataFile {\n\t\tif (dirtyFile.mimeType === \"image/svg+xml\") {\n\t\t\tlet cleanedData = Uint8Array.from([])\n\t\t\ttry {\n\t\t\t\tconst dirtySVG = utf8Uint8ArrayToString(dirtyFile.data)\n\t\t\t\tconst parser = new DOMParser()\n\t\t\t\tconst dirtyTree = parser.parseFromString(dirtySVG, \"image/svg+xml\")\n\t\t\t\tconst errs = dirtyTree.getElementsByTagName(\"parsererror\")\n\t\t\t\tif (errs.length === 0) {\n\t\t\t\t\tconst svgElement = dirtyTree.getElementsByTagName(\"svg\")[0]\n\t\t\t\t\tif (svgElement != null) {\n\t\t\t\t\t\tconst config = this.init(SVG_CONFIG, {})\n\t\t\t\t\t\tconst cleanText = this.purifier.sanitize(svgElement.outerHTML, config)\n\t\t\t\t\t\tcleanedData = stringToUtf8Uint8Array('<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\\n' + cleanText)\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(\"svg sanitization failed, possibly due to wrong input encoding.\")\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log(\"svg sanitization failed\")\n\t\t\t}\n\t\t\tdirtyFile.data = cleanedData\n\t\t}\n\t\treturn dirtyFile\n\t}\n\n\t/**\n\t * Sanitizes given HTML. Returns a DocumentFragment instead of an HTML string\n\t */\n\tsanitizeFragment(html: string, configExtra?: Partial<SanitizeConfigExtra>): SanitizedFragment {\n\t\tconst config = this.init(FRAGMENT_CONFIG, configExtra ?? {})\n\t\tconst cleanFragment = this.purifier.sanitize(html, config)\n\t\treturn {\n\t\t\tfragment: cleanFragment,\n\t\t\tblockedExternalContent: this.externalContent,\n\t\t\tinlineImageCids: this.inlineImageCids,\n\t\t\tlinks: this.links,\n\t\t}\n\t}\n\n\tprivate init<T extends BaseConfig>(config: T, configExtra: Partial<SanitizeConfigExtra>): SanitizeConfigExtra & T {\n\t\tthis.externalContent = 0\n\t\tthis.inlineImageCids = []\n\t\tthis.links = []\n\t\treturn Object.assign({}, config, DEFAULT_CONFIG_EXTRA, configExtra)\n\t}\n\n\tprivate afterSanitizeAttributes(currentNode: Element, data: null, config: Config) {\n\t\tconst typedConfig = config as SanitizeConfig\n\t\t// remove custom css classes as we do not allow style definitions. custom css classes can be in conflict to our self defined classes.\n\t\t// just allow our own \"tutanota_quote\" class and MsoListParagraph classes for compatibility with Outlook 2010/2013 emails. see main-styles.js\n\t\tlet allowedClasses = [\n\t\t\t\"tutanota_indented\",\n\t\t\t\"tutanota_quote\",\n\t\t\t\"MsoListParagraph\",\n\t\t\t\"MsoListParagraphCxSpFirst\",\n\t\t\t\"MsoListParagraphCxSpMiddle\",\n\t\t\t\"MsoListParagraphCxSpLast\",\n\t\t]\n\n\t\tif (currentNode.classList) {\n\t\t\tlet cl = currentNode.classList\n\n\t\t\tfor (let i = cl.length - 1; i >= 0; i--) {\n\t\t\t\tconst item = cl.item(i)\n\n\t\t\t\tif (item && allowedClasses.indexOf(item) === -1) {\n\t\t\t\t\tcl.remove(item)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.replaceAttributes(currentNode as HTMLElement, typedConfig)\n\n\t\tthis.processLink(currentNode as HTMLElement, typedConfig)\n\n\t\treturn currentNode\n\t}\n\n\tprivate replaceAttributes(htmlNode: HTMLElement, config: SanitizeConfig) {\n\t\t// Don't allow inline images to have a bigger width than the email itself\n\t\t// Otherwise this would lead to weird rendering with very large images and pinch zoom\n\t\t// The order of the replacement should not be changed since maxWidth=100% is replaced with 100px in case of\n\t\t// placeholder images further below in the code\n\t\tif (htmlNode.tagName === \"IMG\") {\n\t\t\thtmlNode.style.maxWidth = \"100%\"\n\t\t}\n\n\t\tif (htmlNode.attributes) {\n\t\t\tthis.replaceAttributeValue(htmlNode, config)\n\t\t}\n\n\t\tif (htmlNode.style) {\n\t\t\tif (config.blockExternalContent) {\n\t\t\t\t// for a decent table of where <image> CSS type can occur see https://developer.mozilla.org/en-US/docs/Web/CSS/image\n\t\t\t\tif (htmlNode.style.backgroundImage) {\n\t\t\t\t\tthis.replaceStyleImage(htmlNode, \"backgroundImage\", false)\n\n\t\t\t\t\thtmlNode.style.backgroundRepeat = \"no-repeat\"\n\t\t\t\t}\n\n\t\t\t\tif (htmlNode.style.listStyleImage) {\n\t\t\t\t\tthis.replaceStyleImage(htmlNode, \"listStyleImage\", true)\n\t\t\t\t}\n\n\t\t\t\tif (htmlNode.style.content) {\n\t\t\t\t\tthis.replaceStyleImage(htmlNode, \"content\", true)\n\t\t\t\t}\n\n\t\t\t\tif (htmlNode.style.cursor) {\n\t\t\t\t\tthis.removeStyleImage(htmlNode, \"cursor\")\n\t\t\t\t}\n\n\t\t\t\tif (htmlNode.style.filter) {\n\t\t\t\t\tthis.removeStyleImage(htmlNode, \"filter\")\n\t\t\t\t}\n\n\t\t\t\tif (htmlNode.style.borderImageSource) {\n\t\t\t\t\tthis.removeStyleImage(htmlNode, \"border-image-source\")\n\t\t\t\t}\n\n\t\t\t\tif (htmlNode.style.maskImage || htmlNode.style.webkitMaskImage) {\n\t\t\t\t\tthis.removeStyleImage(htmlNode, \"mask-image\")\n\t\t\t\t\tthis.removeStyleImage(htmlNode, \"-webkit-mask-image\")\n\t\t\t\t}\n\n\t\t\t\tif (htmlNode.style.shapeOutside) {\n\t\t\t\t\tthis.removeStyleImage(htmlNode, \"shape-outside\")\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Disallow position because you can do bad things with it and it also messes up layout\n\t\t\t// Do this unconditionally, independent from the external content blocking.\n\t\t\tif (htmlNode.style.position) {\n\t\t\t\thtmlNode.style.removeProperty(\"position\")\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate replaceAttributeValue(htmlNode: HTMLElement, config: SanitizeConfig) {\n\t\tconst nodeName = htmlNode.tagName.toLowerCase()\n\n\t\tfor (const attrName of EXTERNAL_CONTENT_ATTRS) {\n\t\t\tlet attribute = htmlNode.attributes.getNamedItem(attrName)\n\n\t\t\tif (attribute) {\n\t\t\t\tif (config.usePlaceholderForInlineImages && attribute.value.startsWith(\"cid:\")) {\n\t\t\t\t\t// replace embedded image with local image until the embedded image is loaded and ready to be shown.\n\t\t\t\t\tconst cid = attribute.value.substring(4)\n\n\t\t\t\t\tthis.inlineImageCids.push(cid)\n\n\t\t\t\t\tattribute.value = PREVENT_EXTERNAL_IMAGE_LOADING_ICON\n\t\t\t\t\thtmlNode.setAttribute(\"cid\", cid)\n\t\t\t\t\thtmlNode.classList.add(\"tutanota-placeholder\")\n\t\t\t\t} else if (config.blockExternalContent && attribute.name === \"srcset\") {\n\t\t\t\t\tthis.externalContent++\n\n\t\t\t\t\thtmlNode.setAttribute(\"draft-srcset\", attribute.value)\n\t\t\t\t\thtmlNode.removeAttribute(\"srcset\")\n\t\t\t\t\thtmlNode.setAttribute(\"src\", PREVENT_EXTERNAL_IMAGE_LOADING_ICON)\n\t\t\t\t\thtmlNode.style.maxWidth = \"100px\"\n\t\t\t\t} else if (\n\t\t\t\t\tconfig.blockExternalContent &&\n\t\t\t\t\t!attribute.value.startsWith(\"data:\") &&\n\t\t\t\t\t!attribute.value.startsWith(\"cid:\") &&\n\t\t\t\t\t!attribute.name.startsWith(\"draft-\") &&\n\t\t\t\t\t!(nodeName === \"a\") &&\n\t\t\t\t\t!(nodeName === \"area\") &&\n\t\t\t\t\t!(nodeName === \"base\") &&\n\t\t\t\t\t!(nodeName === \"link\")\n\t\t\t\t) {\n\t\t\t\t\t// Since we are blocking href now we need to check if the attr isn't\n\t\t\t\t\t// being used by a valid tag (a, area, base, link)\n\t\t\t\t\tthis.externalContent++\n\n\t\t\t\t\thtmlNode.setAttribute(\"draft-\" + attribute.name, attribute.value)\n\t\t\t\t\tattribute.value = PREVENT_EXTERNAL_IMAGE_LOADING_ICON\n\t\t\t\t\thtmlNode.attributes.setNamedItem(attribute)\n\t\t\t\t\thtmlNode.style.maxWidth = \"100px\"\n\t\t\t\t} else if (!config.blockExternalContent && DRAFT_ATTRIBUTES.includes(attribute.name)) {\n\t\t\t\t\tif (attribute.name === \"draft-src\") {\n\t\t\t\t\t\thtmlNode.setAttribute(\"src\", attribute.value)\n\t\t\t\t\t\thtmlNode.removeAttribute(attribute.name)\n\t\t\t\t\t} else if (attribute.name === \"draft-href\" || attribute.name === \"draft-xlink:href\") {\n\t\t\t\t\t\tconst hrefTag = attribute.name === \"draft-href\" ? \"href\" : \"xlink:href\"\n\t\t\t\t\t\thtmlNode.setAttribute(hrefTag, attribute.value)\n\t\t\t\t\t\thtmlNode.removeAttribute(attribute.name)\n\t\t\t\t\t} else {\n\t\t\t\t\t\thtmlNode.setAttribute(\"srcset\", attribute.value)\n\t\t\t\t\t\thtmlNode.removeAttribute(attribute.name)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/** NB! {@param cssStyleAttributeName} is a *CSS* name (\"border-image-source\" as opposed to \"borderImageSource\"). */\n\tprivate removeStyleImage(htmlNode: HTMLElement, cssStyleAttributeName: string) {\n\t\tlet value = htmlNode.style.getPropertyValue(cssStyleAttributeName)\n\n\t\tif (value.match(/url\\(/)) {\n\t\t\tthis.externalContent++\n\n\t\t\thtmlNode.style.removeProperty(cssStyleAttributeName)\n\t\t}\n\t}\n\n\t/** {@param styleAttributeName} is a JS name for the style */\n\tprivate replaceStyleImage(htmlNode: HTMLElement, styleAttributeName: string, limitWidth: boolean) {\n\t\tlet value: string = (htmlNode.style as any)[styleAttributeName]\n\n\t\t// if there's a `url(` anywhere in the value and if *the whole* value is not just data URL then replace the whole value with replacement URL\n\t\t// see tests for treacherous example but also\n\t\t//\n\t\t// ```css\n\t\t// background-image: linear-gradient(\n\t\t//     to bottom,\n\t\t//     rgba(255, 255, 0, 0.5),\n\t\t//     rgba(0, 0, 255, 0.5)\n\t\t//   ), url(\"catfront.png\");\n\t\t// ```\n\t\t// in this case background-image can have multiple values but it's safe to just block the whole thing\n\t\t//\n\t\t// some examples where it can be inside a single <image> value:\n\t\t//\n\t\t// cross-fade(20% url(twenty.png), url(eighty.png))\n\t\t// image-set('test.jpg' 1x, 'test-2x.jpg' 2x)\n\t\tif (value.includes(\"url(\") && value.match(/url\\(/g)?.length !== value.match(/url\\([\"']?data:/g)?.length) {\n\t\t\tthis.externalContent++\n\t\t\t;(htmlNode.style as any)[styleAttributeName] = `url(\"${PREVENT_EXTERNAL_IMAGE_LOADING_ICON}\")`\n\n\t\t\tif (limitWidth) {\n\t\t\t\thtmlNode.style.maxWidth = \"100px\"\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate processLink(currentNode: HTMLElement, config: SanitizeConfig) {\n\t\t// set target=\"_blank\" for all links\n\t\t// collect them\n\t\tif (\n\t\t\tcurrentNode.tagName &&\n\t\t\t(currentNode.tagName.toLowerCase() === \"a\" || currentNode.tagName.toLowerCase() === \"area\" || currentNode.tagName.toLowerCase() === \"form\")\n\t\t) {\n\t\t\tconst href = currentNode.getAttribute(\"href\")\n\t\t\tif (href) this.links.push(currentNode)\n\n\t\t\tif (config.allowRelativeLinks || !href || isAllowedLink(href)) {\n\t\t\t\tcurrentNode.setAttribute(\"rel\", \"noopener noreferrer\")\n\t\t\t\tcurrentNode.setAttribute(\"target\", \"_blank\")\n\t\t\t} else if (href.trim() === \"{link}\") {\n\t\t\t\t// notification mail template\n\t\t\t\tdowncast(currentNode).href = \"{link}\"\n\t\t\t\tcurrentNode.setAttribute(\"rel\", \"noopener noreferrer\")\n\t\t\t\tcurrentNode.setAttribute(\"target\", \"_blank\")\n\t\t\t} else {\n\t\t\t\tconsole.log(\"Relative/invalid URL\", currentNode, href)\n\t\t\t\tdowncast(currentNode).href = \"javascript:void(0)\"\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction isAllowedLink(link: string): boolean {\n\ttry {\n\t\t// We create URL without explicit base (second argument). It is an error for relative links\n\t\treturn new URL(link).protocol !== \"file:\"\n\t} catch (e) {\n\t\treturn false\n\t}\n}\n\nexport const htmlSanitizer: HtmlSanitizer = new HtmlSanitizer()\n"],"mappings":"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"}