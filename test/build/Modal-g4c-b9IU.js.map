{"version":3,"file":"Modal-g4c-b9IU.js","names":["overlays: Map<number, OverlayAttrs>","position: lazy<PositionRect>","component: Component","createAnimation?: string","closeAnimation?: string","shadowClass: string","overlay: Component","overlay","key","vnode: VnodeDOM","currentNavigationType: PrimaryNavigationType","vnode: Vnode","vnode","e: EventRedraw<PointerEvent>","e: EventRedraw<KeyboardEvent>","newType: PrimaryNavigationType","root: RootView","e: Event","event: MouseEvent","component: ModalComponent","needsBg: boolean","key: number","key","domLayer: HTMLElement","fadein: boolean","modal: Modal"],"sources":["../../src/common/gui/base/Overlay.ts","../../src/RootView.ts","../../src/common/gui/base/Modal.ts"],"sourcesContent":["import m, { Children, Component, VnodeDOM } from \"mithril\"\nimport { LayerType } from \"../../../RootView\"\nimport { lazy, makeSingleUse } from \"@tutao/tutanota-utils\"\nimport { assertMainOrNodeBoot } from \"../../api/common/Env\"\nimport { px, size } from \"../size.js\"\nimport { styles } from \"../styles.js\"\nimport { getSafeAreaInsetBottom } from \"../HtmlUtils.js\"\n\nassertMainOrNodeBoot()\nexport type PositionRect = {\n\ttop?: string | null\n\tleft?: string | null\n\tright?: string | null\n\twidth?: string | null\n\tbottom?: string | null\n\theight?: string | null\n\tzIndex?: LayerType\n}\ntype OverlayAttrs = {\n\tcomponent: Component\n\tposition: lazy<PositionRect>\n\tcreateAnimation?: string\n\tcloseAnimation?: string\n\tshadowClass: string\n}\n\nconst overlays: Map<number, OverlayAttrs> = new Map()\nlet key = 0\n\nexport function displayOverlay(\n\tposition: lazy<PositionRect>,\n\tcomponent: Component,\n\tcreateAnimation?: string,\n\tcloseAnimation?: string,\n\tshadowClass: string = \"dropdown-shadow\",\n): () => void {\n\t// Use the inverse of the show animation as the close animation if it is not given\n\tif (createAnimation != null && closeAnimation == null) closeAnimation = `${createAnimation} animation-reverse`\n\n\tconst overlayKey = key++\n\tconst pair = {\n\t\tposition,\n\t\tcomponent,\n\t\tcreateAnimation,\n\t\tcloseAnimation,\n\t\tshadowClass,\n\t} as OverlayAttrs\n\t// Add the new overlay into the overlay container\n\toverlays.set(overlayKey, pair)\n\n\t// Make single so fast taps doesn't try to remove\n\t// the same overlay twice\n\treturn makeSingleUse(() => {\n\t\t// Remove the overlay & error if unsuccessful\n\t\tif (!overlays.delete(overlayKey)) {\n\t\t\tconsole.warn(`Missing overlay with key:${overlayKey}!`)\n\t\t}\n\t}) as () => void\n}\n\nexport const overlay: Component = {\n\tview: (): Children =>\n\t\tm(\n\t\t\t// we want the overlays to position relative to the overlay parent\n\t\t\t// the overlay parent also should fill the root\n\t\t\t\"#overlay.fill-absolute.noprint\",\n\t\t\t{\n\t\t\t\tstyle: {\n\t\t\t\t\tdisplay: overlays.size > 0 ? \"\" : \"none\",\n\t\t\t\t\t\"margin-top\": \"env(safe-area-inset-top)\", // insets for iPhone X\n\t\t\t\t\t// keep the bottom nav bar clear & inset for iOS\n\t\t\t\t\t\"margin-bottom\": styles.isUsingBottomNavigation() ? px(size.bottom_nav_bar + getSafeAreaInsetBottom()) : \"unset\",\n\t\t\t\t\t// we would need to change this if we wanted something to appear from the side\n\t\t\t\t\t\"margin-left\": \"env(safe-area-inset-left)\",\n\t\t\t\t\t\"margin-right\": \"env(safe-area-inset-right)\",\n\t\t\t\t},\n\t\t\t\t\"aria-hidden\": overlays.size === 0,\n\t\t\t},\n\t\t\tArray.from(overlays.entries()).map((overlay) => {\n\t\t\t\tconst [key, attrs] = overlay\n\t\t\t\tconst position = attrs.position()\n\n\t\t\t\tconst baseClasses = \"abs elevated-bg \" + attrs.shadowClass\n\t\t\t\tconst classes = attrs.createAnimation == null ? baseClasses : baseClasses + \" \" + attrs.createAnimation\n\n\t\t\t\treturn m(\n\t\t\t\t\t\"\",\n\t\t\t\t\t{\n\t\t\t\t\t\tkey,\n\t\t\t\t\t\tclass: classes,\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\twidth: position.width,\n\t\t\t\t\t\t\ttop: position.top,\n\t\t\t\t\t\t\tbottom: position.bottom,\n\t\t\t\t\t\t\tright: position.right,\n\t\t\t\t\t\t\tleft: position.left,\n\t\t\t\t\t\t\theight: position.height,\n\t\t\t\t\t\t\t\"z-index\": position.zIndex != null ? position.zIndex : LayerType.Overlay,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonbeforeremove: (vnode: VnodeDOM) => {\n\t\t\t\t\t\t\tif (attrs.closeAnimation != null) {\n\t\t\t\t\t\t\t\tconst dom = vnode.dom as HTMLElement\n\n\t\t\t\t\t\t\t\t// Force the environment to restart the animations via a reflow\n\t\t\t\t\t\t\t\tdom.className = baseClasses\n\t\t\t\t\t\t\t\tvoid dom.offsetWidth\n\n\t\t\t\t\t\t\t\t// Play the closing animation\n\t\t\t\t\t\t\t\tdom.className = baseClasses + \" \" + attrs.closeAnimation\n\n\t\t\t\t\t\t\t\t// Wait for the close animation to complete\n\t\t\t\t\t\t\t\treturn new Promise(function (resolve) {\n\t\t\t\t\t\t\t\t\tdom.addEventListener(\"animationend\", resolve)\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tm(attrs.component),\n\t\t\t\t)\n\t\t\t}),\n\t\t),\n}\n","import m, { Children, ClassComponent, Vnode } from \"mithril\"\nimport { modal } from \"./common/gui/base/Modal\"\nimport { overlay } from \"./common/gui/base/Overlay\"\nimport { styles } from \"./common/gui/styles\"\nimport { assertMainOrNodeBoot, isApp } from \"./common/api/common/Env\"\nimport { Keys } from \"./common/api/common/TutanotaConstants.js\"\nimport { isKeyPressed } from \"./common/misc/KeyManager.js\"\n\nassertMainOrNodeBoot()\n\nexport const enum LayerType {\n\t// Minimized editors, SearchBarOverlay\n\tView = 0,\n\t// notifications that require no user interaction\n\tLowPriorityOverlay = 100,\n\t// Foreground menu in mobile layout\n\tLowPriorityNotification = 150,\n\t// Editors, Dialogs\n\tForegroundMenu = 200,\n\t// Error message dialogs, Notifications\n\tModal = 300,\n\tOverlay = 400,\n}\n\nexport const enum PrimaryNavigationType {\n\tKeyboard,\n\tTouch,\n\tMouse,\n\t// theoretically pen is also an option\n}\n\n// global, in case we have multiple instances for some reason\n/** What we infer to be the user's preferred navigation type. */\nexport let currentNavigationType: PrimaryNavigationType = isApp() ? PrimaryNavigationType.Touch : PrimaryNavigationType.Mouse\n\n/**\n * View which wraps anything that we render.\n * It has overlay, modal and the main layers. It also defines some global handlers for better visual indication depending on the interaction.\n */\nexport class RootView implements ClassComponent {\n\tprivate dom: HTMLElement | null = null\n\n\tconstructor() {\n\t\t// still \"old-style\" component, we don't want to lose \"this\" reference\n\t\tthis.view = this.view.bind(this)\n\t}\n\n\tview(vnode: Vnode): Children {\n\t\treturn m(\n\t\t\t\"#root\" + (styles.isUsingBottomNavigation() ? \".mobile\" : \"\"),\n\t\t\t{\n\t\t\t\toncreate: (vnode) => {\n\t\t\t\t\tthis.dom = vnode.dom as HTMLElement\n\t\t\t\t},\n\t\t\t\t// use pointer events instead of mousedown/touchdown because mouse events are still fired for touch on mobile\n\t\t\t\tonpointerup: (e: EventRedraw<PointerEvent>) => {\n\t\t\t\t\tif (e.pointerType === \"mouse\") {\n\t\t\t\t\t\tthis.switchNavType(PrimaryNavigationType.Mouse)\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// can be \"touch\" or \"pen\", treat them the same for now\n\t\t\t\t\t\tthis.switchNavType(PrimaryNavigationType.Touch)\n\t\t\t\t\t}\n\t\t\t\t\te.redraw = false\n\t\t\t\t},\n\t\t\t\tonkeyup: (e: EventRedraw<KeyboardEvent>) => {\n\t\t\t\t\t// tab key can be pressed in some other situations e.g. editor but it would be switched back quickly again if needed.\n\t\t\t\t\tif (isKeyPressed(e.key, Keys.TAB, Keys.UP, Keys.DOWN, Keys.J, Keys.K)) {\n\t\t\t\t\t\tthis.switchNavType(PrimaryNavigationType.Keyboard)\n\t\t\t\t\t}\n\t\t\t\t\te.redraw = false\n\t\t\t\t},\n\t\t\t\t// See styles for usages of these classes.\n\t\t\t\t// We basically use them in css combinators as a query for when to show certain interaction indicators.\n\t\t\t\tclass: this.classForType(),\n\t\t\t\tstyle: {\n\t\t\t\t\theight: \"100%\",\n\t\t\t\t},\n\t\t\t},\n\t\t\t[m(overlay), m(modal), vnode.children],\n\t\t)\n\t}\n\n\tprivate switchNavType(newType: PrimaryNavigationType) {\n\t\tif (currentNavigationType === newType) {\n\t\t\treturn\n\t\t}\n\t\tthis.dom?.classList.remove(this.classForType())\n\t\tcurrentNavigationType = newType\n\t\tthis.dom?.classList.add(this.classForType())\n\t}\n\n\tprivate classForType() {\n\t\tswitch (currentNavigationType) {\n\t\t\tcase PrimaryNavigationType.Keyboard:\n\t\t\t\treturn \"keyboard-nav\"\n\t\t\tcase PrimaryNavigationType.Mouse:\n\t\t\t\treturn \"mouse-nav\"\n\t\t\tcase PrimaryNavigationType.Touch:\n\t\t\t\treturn \"touch-nav\"\n\t\t}\n\t}\n}\n\nexport const root: RootView = new RootView()\n","import m, { Children, Component } from \"mithril\"\nimport { alpha, AlphaEnum, animations } from \"./../animation/Animations\"\nimport { theme } from \"../theme\"\nimport type { Shortcut } from \"../../misc/KeyManager\"\nimport { keyManager } from \"../../misc/KeyManager\"\nimport { windowFacade } from \"../../misc/WindowFacade\"\nimport { insideRect, remove } from \"@tutao/tutanota-utils\"\nimport { LayerType } from \"../../../RootView\"\nimport { assertMainOrNodeBoot } from \"../../api/common/Env\"\n\nassertMainOrNodeBoot()\n\ntype ModalComponentWrapper = {\n\tkey: number\n\tcomponent: ModalComponent\n\tneedsBg: boolean\n}\n\nclass Modal implements Component {\n\tcomponents: Array<ModalComponentWrapper>\n\tprivate uniqueComponent: ModalComponent | null\n\tview: Component[\"view\"]\n\tvisible: boolean\n\tcurrentKey: number\n\tprivate closingComponents: Array<ModalComponent>\n\tprivate readonly historyEventListener = (e: Event) => this.popState(e)\n\n\tconstructor() {\n\t\tthis.currentKey = 0\n\t\tthis.components = []\n\t\tthis.visible = false\n\t\tthis.uniqueComponent = null\n\t\tthis.closingComponents = []\n\n\t\tthis.view = (): Children => {\n\t\t\treturn m(\n\t\t\t\t\"#modal.fill-absolute\",\n\t\t\t\t{\n\t\t\t\t\toncreate: (_) => {\n\t\t\t\t\t\t// const lastComponent = last(this.components)\n\t\t\t\t\t\t// if (lastComponent) {\n\t\t\t\t\t\t// \tlastComponent.component.backgroundClick(e)\n\t\t\t\t\t\t// }\n\t\t\t\t\t},\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\"z-index\": LayerType.Modal,\n\t\t\t\t\t\tdisplay: this.visible ? \"\" : \"none\",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tthis.components.map((wrapper, i, array) => {\n\t\t\t\t\treturn m(\n\t\t\t\t\t\t\".fill-absolute\",\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tkey: wrapper.key,\n\t\t\t\t\t\t\toncreate: (vnode) => {\n\t\t\t\t\t\t\t\t// do not set visible=true already in display() because it leads to modal staying open in a second window in Chrome\n\t\t\t\t\t\t\t\t// because onbeforeremove is not called in that case to set visible=false. this is probably an optimization in Chrome to reduce\n\t\t\t\t\t\t\t\t// UI updates if the window is not visible. setting visible=true here is fine because this code is not even called then\n\t\t\t\t\t\t\t\tthis.visible = true\n\t\t\t\t\t\t\t\tm.redraw()\n\t\t\t\t\t\t\t\tif (wrapper.needsBg) this.addAnimation(vnode.dom as HTMLElement, true)\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tonclick: (event: MouseEvent) => {\n\t\t\t\t\t\t\t\tconst element = event.currentTarget as HTMLElement\n\t\t\t\t\t\t\t\t// This layer div has a single child, the modal component\n\t\t\t\t\t\t\t\tconst child = element.firstElementChild\n\n\t\t\t\t\t\t\t\t// child shouldn't be null but maybe the user click fast idk\n\t\t\t\t\t\t\t\tif (child) {\n\t\t\t\t\t\t\t\t\tconst childRect = child.getBoundingClientRect()\n\n\t\t\t\t\t\t\t\t\tif (!insideRect(event, childRect)) {\n\t\t\t\t\t\t\t\t\t\twrapper.component.backgroundClick(event)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\tzIndex: LayerType.Modal + 1 + i,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tonbeforeremove: (vnode) => {\n\t\t\t\t\t\t\t\tif (wrapper.needsBg) {\n\t\t\t\t\t\t\t\t\tthis.closingComponents.push(wrapper.component)\n\n\t\t\t\t\t\t\t\t\treturn Promise.all([\n\t\t\t\t\t\t\t\t\t\tthis.addAnimation(vnode.dom as HTMLElement, false).then(() => {\n\t\t\t\t\t\t\t\t\t\t\tremove(this.closingComponents, wrapper.component)\n\n\t\t\t\t\t\t\t\t\t\t\tif (this.components.length === 0 && this.closingComponents.length === 0) {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.visible = false\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\twrapper.component.hideAnimation(),\n\t\t\t\t\t\t\t\t\t]).then(() => {\n\t\t\t\t\t\t\t\t\t\tm.redraw()\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tif (this.components.length === 0 && this.closingComponents.length === 0) {\n\t\t\t\t\t\t\t\t\t\tthis.visible = false\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\treturn wrapper.component.hideAnimation().then(() => m.redraw())\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tm(wrapper.component),\n\t\t\t\t\t)\n\t\t\t\t}),\n\t\t\t)\n\t\t}\n\t}\n\n\tdisplay(component: ModalComponent, needsBg: boolean = true) {\n\t\t// move the handler to the top of the handler stack\n\t\twindowFacade.removeHistoryEventListener(this.historyEventListener)\n\t\twindowFacade.addHistoryEventListener(this.historyEventListener)\n\t\tif (this.components.length > 0) {\n\t\t\tkeyManager.unregisterModalShortcuts(this.components[this.components.length - 1].component.shortcuts())\n\t\t}\n\n\t\tconst existingIndex = this.components.findIndex((shownComponent) => shownComponent.component === component)\n\n\t\tif (existingIndex !== -1) {\n\t\t\tconsole.warn(\"Attempting to display the same modal component multiple times!\")\n\t\t\tthis.components.splice(existingIndex, 1)\n\t\t}\n\n\t\tthis.components.push({\n\t\t\tkey: this.currentKey++,\n\t\t\tcomponent: component,\n\t\t\tneedsBg,\n\t\t})\n\t\tm.redraw()\n\t\tkeyManager.registerModalShortcuts(component.shortcuts())\n\t}\n\n\t/**\n\t * notify components that a history state was popped. The Component Stack is notified from the top and the first\n\t * Component to return false will stop underlying components from receiving the notification.\n\t * Components that return true are expected to remove themselves from the Modal stack, eg dropdowns.\n\t * @param e: the DOM Event\n\t * @private\n\t */\n\tprivate popState(e: Event): boolean {\n\t\tconsole.log(\"modal popstate\")\n\t\tconst len = this.components.length\n\n\t\tif (len === 0) {\n\t\t\tconsole.log(\"no modals to close\")\n\t\t\treturn true\n\t\t}\n\n\t\t// get the keys because we're going to modify the component stack during iteration\n\t\tconst keys = this.components.map((c) => c.key)\n\n\t\tfor (let i = len - 1; i >= 0; i--) {\n\t\t\tconst component = this.getComponentByKey(keys[i])\n\n\t\t\tif (!component) {\n\t\t\t\tconsole.log(\"component went AWOL, continuing\")\n\t\t\t\tcontinue\n\t\t\t}\n\n\t\t\tif (!component.popState(e)) {\n\t\t\t\tconsole.log(\"component handled popstate\")\n\t\t\t\treturn false\n\t\t\t}\n\t\t}\n\n\t\treturn true\n\t}\n\n\t/**\n\t * used for modal components that should only be opened once\n\t * multiple calls will be ignored if the first component is still visible\n\t * @param component\n\t */\n\tdisplayUnique(component: ModalComponent, needsBg: boolean = true) {\n\t\tif (this.uniqueComponent) {\n\t\t\tconsole.log(\"tried to open unique component while another was open!\")\n\t\t\treturn\n\t\t}\n\n\t\tthis.display(component, needsBg)\n\t\tthis.uniqueComponent = component\n\t}\n\n\tprivate getComponentByKey(key: number): ModalComponent | null {\n\t\tconst entry = this.components.find((c) => c.key === key)\n\t\treturn entry?.component ?? null\n\t}\n\n\tremove(component: ModalComponent): void {\n\t\tconst componentIndex = this.components.findIndex((wrapper) => wrapper.component === component)\n\n\t\tif (componentIndex === -1) {\n\t\t\tconsole.log(\"can't remove non existing component from modal\")\n\t\t\treturn\n\t\t}\n\n\t\tconst componentIsTopmostComponent = componentIndex === this.components.length - 1\n\n\t\tif (componentIsTopmostComponent) {\n\t\t\tconsole.log(\"removed topmost modal component\")\n\t\t\tkeyManager.unregisterModalShortcuts(component.shortcuts())\n\t\t}\n\n\t\tthis.components.splice(componentIndex, 1)\n\n\t\tif (this.uniqueComponent === component) {\n\t\t\tthis.uniqueComponent = null\n\t\t}\n\n\t\tm.redraw()\n\n\t\tif (this.components.length > 0 && componentIsTopmostComponent) {\n\t\t\t// the removed component was the last component, so we can now register the shortcuts of the now last component\n\t\t\tkeyManager.registerModalShortcuts(this.components[this.components.length - 1].component.shortcuts())\n\t\t}\n\n\t\t// Return the focus back to it's calling element.\n\t\tcomponent.callingElement()?.focus()\n\t}\n\n\t/**\n\t * adds an animation to the topmost component\n\t */\n\taddAnimation(domLayer: HTMLElement, fadein: boolean): Promise<unknown> {\n\t\tconst start = 0\n\t\tconst end = 0.5\n\t\treturn animations.add(domLayer, alpha(AlphaEnum.BackgroundColor, theme.modal_bg, fadein ? start : end, fadein ? end : start))\n\t}\n}\n\nexport const modal: Modal = new Modal()\n\nexport interface ModalComponent extends Component {\n\thideAnimation(): Promise<void>\n\n\tonClose(): void\n\n\tshortcuts(): Shortcut[]\n\n\tbackgroundClick(e: MouseEvent): void\n\n\t/**\n\t * will be called by the main modal if no other component above this one blocked the event (previous components returned true)\n\t * return false if the event was handled and lower components shouldn't be notified, true otherwise\n\t * @param e\n\t */\n\tpopState(e: Event): boolean\n\n\t// The element that was interacted with to show the modal.\n\tcallingElement(): HTMLElement | null\n}\n"],"mappings":"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"}