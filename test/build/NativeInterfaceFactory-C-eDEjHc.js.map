{"version":3,"file":"NativeInterfaceFactory-C-eDEjHc.js","names":["message: NativeMessage","encodedMessage: Array<string>","value: unknown","newObject: Record<string, any>","encoded: string","parsedMessage: Message<any>","window: Window","message: NativeMessage","handler: JsMessageHandler","msg64: Base64","window: Window","message: MessageEvent","messageEvent: MessageEvent","message: NativeMessage","handler: JsMessageHandler","nativeApp: NativeApp","message: Message<OutgoingRequestType>","handler: (message: Message<IncomingRequestType>) => unknown","globalDispatcher: WebGlobalDispatcher","transport: Transport<NativeRequestType, JsRequestType>","request: Request<JsRequestType>","queue: MessageDispatcher<NativeRequestType, JsRequestType>","requestType: NativeRequestType","args: ReadonlyArray<unknown>","listener: () => void","modelInfo","nativePushFacade: NativePushFacade","logins: LoginController","cryptoFacade: CryptoFacade","entityClient: EntityClient","deviceConfig: DeviceConfig","calendarFacade: CalendarFacade","app: AppType","userId: Id","pushIdentifier: PushIdentifier","identifier: string","pushServiceType: PushServiceType","addresses: string[]","type: ExtendedNotificationMode","value: boolean","facade: CommonNativeFacade","method: string","arg: Array<any>","filesUris: ReadonlyArray<string>","text: string","addresses: ReadonlyArray<string>","subject: string","mailToUrlString: string","userId: string","address: string","requestedPath: string | null","contactId: string","translationKey: string","title: string","oldPassword: string | null","path: string","facade: DesktopFacade","method: string","arg: Array<any>","result: ElectronResult | null","errorInfo: ErrorInfo","url: string","appPath: string","mailAddress: string | null","shortcuts: ReadonlyArray<NativeShortcut>","facade: InterWindowEventFacade","method: string","arg: Array<any>","userId: string","facade: MobileFacade","method: string","arg: Array<any>","visibility: boolean","newSize: number","commonNativeFacade: CommonNativeFacade","desktopFacade: DesktopFacade","interWindowEventFacade: InterWindowEventFacade","mobileFacade: MobileFacade","facadeName: string","methodName: string","args: Array<any>","transport: NativeInterface","transport: NativeInterface","transport: NativeInterface","transport: NativeInterface","transport: NativeInterface","transport: NativeInterface","transport: NativeInterface","transport: NativeInterface","transport: NativeInterface","transport: NativeInterface","transport: NativeInterface","mobileFacade: WebMobileFacade","desktopFacade: DesktopFacade","interWindowEventFacade: InterWindowEventFacade","commonNativeFacade: CommonNativeFacade","cryptoFacade: CryptoFacade","calendarFacade: CalendarFacade","entityClient: EntityClient","logins: LoginController","app: AppType","native: NativeInterfaceMain"],"sources":["../../src/common/native/common/NativeLineProtocol.ts","../../src/common/native/main/IosNativeTransport.ts","../../src/common/native/main/AndroidNativeTransport.ts","../../src/common/native/main/DesktopNativeTransport.ts","../../src/common/native/main/NativeInterfaceMain.ts","../../src/common/native/main/NativePushServiceApp.ts","../../src/common/native/common/generatedipc/CommonNativeFacadeReceiveDispatcher.ts","../../src/common/native/common/generatedipc/DesktopFacadeReceiveDispatcher.ts","../../src/common/native/common/generatedipc/InterWindowEventFacadeReceiveDispatcher.ts","../../src/common/native/common/generatedipc/MobileFacadeReceiveDispatcher.ts","../../src/common/native/common/generatedipc/WebGlobalDispatcher.ts","../../src/common/native/common/generatedipc/CommonSystemFacadeSendDispatcher.ts","../../src/common/native/common/generatedipc/MobileSystemFacadeSendDispatcher.ts","../../src/common/native/common/generatedipc/ThemeFacadeSendDispatcher.ts","../../src/common/native/common/generatedipc/SearchTextInAppFacadeSendDispatcher.ts","../../src/common/native/common/generatedipc/SettingsFacadeSendDispatcher.ts","../../src/common/native/common/generatedipc/DesktopSystemFacadeSendDispatcher.ts","../../src/common/native/common/generatedipc/MobileContactsFacadeSendDispatcher.ts","../../src/common/native/common/generatedipc/NativeCredentialsFacadeSendDispatcher.ts","../../src/common/native/common/generatedipc/MobilePaymentsFacadeSendDispatcher.ts","../../src/common/native/common/generatedipc/ExternalCalendarFacadeSendDispatcher.ts","../../src/common/native/common/generatedipc/NativeMailImportFacadeSendDispatcher.ts","../../src/common/native/main/NativeInterfaceFactory.ts"],"sourcesContent":["/**\n * this file contains the typescript implementation of the line protocol\n * for IPC used by the mobile apps that can't use the structured clone\n * algorithm.\n *\n * to prevent us from parsing the messages twice -- once as a dict to find\n * out the type and method, a second time to parse the arguments into\n * their actual types -- we use a line-based protocol. It supports\n * requests with arbitrary arguments, responses with a return value\n * and request errors with an attached error object and works as\n * follows:\n *\n * \tline\t\ttype\t\tcontent\t\t\t\tnote\n *  [1] \t\tall\t\t\t<type> \t\t\t\t\"request\", \"response\" or \"responseError\"\n *  [2]\t\t\tall\t\t\t<requestId>\t\t\ta string like \"main123\", responses and errors cite the original requestId\n *  [3]\t\t\trequest\t\t<method>\t\t\ta string method name to invoke\n *  [3]\t\t\tresponse\t<return>\t\t\tjson-encoded return value\n *  [3]\t\t\terror\t\t<error>\t\t\t\tjson-encoded error object\n *  [4]\t\t\trequest\t\t<arg0>\t\t\t\tjson-encoded first argument\n *  ...\n *  [n] \t\trequest\t\t<argx>\t\t\t\tjson-encoded last argument\n */\nimport { Message, Request, RequestError, Response } from \"../../api/common/threading/MessageDispatcher.js\"\nimport { ProgrammingError } from \"../../api/common/error/ProgrammingError.js\"\nimport { base64ToUint8Array, uint8ArrayToBase64 } from \"@tutao/tutanota-utils\"\n\nexport type NativeMessage = Message<NativeRequestType>\nexport type JsMessage = Message<JsRequestType>\nexport type JsMessageHandler = (message: JsMessage) => unknown\n\n/**\n * serialize a native message to the line protocol used in the apps\n * @param message\n */\nexport function encodeNativeMessage(message: NativeMessage): string {\n\tlet encodedMessage: Array<string> = []\n\tencodedMessage.push(message.type)\n\tencodedMessage.push(message.id!)\n\tswitch (message.type) {\n\t\tcase \"request\":\n\t\t\tencodedMessage.push(message.requestType)\n\t\t\tif (message.args.length === 0) {\n\t\t\t\tencodedMessage.push(\"\")\n\t\t\t}\n\t\t\tfor (const arg of message.args) {\n\t\t\t\tencodedMessage.push(encodeValueForNative(arg))\n\t\t\t}\n\t\t\tbreak\n\t\tcase \"response\":\n\t\t\tencodedMessage.push(encodeValueForNative(message.value))\n\t\t\tbreak\n\t\tcase \"requestError\":\n\t\t\tencodedMessage.push(encodeValueForNative(message.error))\n\t\t\tbreak\n\t}\n\treturn encodedMessage.join(\"\\n\")\n}\n\nexport function encodeValueForNative(value: unknown): string {\n\treturn JSON.stringify(replaceBytesWithWrapper(value))\n}\n\nconst BYTES_MARKER = \"__bytes\"\n\nexport function replaceBytesWithWrapper(value: unknown): unknown {\n\tif (value == null) {\n\t\treturn null\n\t} else if (value instanceof Uint8Array) {\n\t\treturn { data: uint8ArrayToBase64(value), marker: BYTES_MARKER }\n\t} else if (Array.isArray(value)) {\n\t\treturn value.map(replaceBytesWithWrapper)\n\t} else if (typeof value === \"object\") {\n\t\tconst newObject: Record<string, any> = {}\n\t\tfor (const [key, field] of Object.entries(value)) {\n\t\t\tnewObject[key] = replaceBytesWithWrapper(field)\n\t\t}\n\t\treturn newObject\n\t} else {\n\t\treturn value\n\t}\n}\n\nexport function replaceWrapperByBytes(value: unknown): unknown {\n\tif (value == null) {\n\t\treturn null\n\t} else if (isByteWrapper(value)) {\n\t\treturn base64ToUint8Array(value.data)\n\t} else if (Array.isArray(value)) {\n\t\treturn value.map(replaceWrapperByBytes)\n\t} else if (typeof value === \"object\") {\n\t\tconst newObject: Record<string, any> = {}\n\t\tfor (const [key, field] of Object.entries(value)) {\n\t\t\tnewObject[key] = replaceWrapperByBytes(field)\n\t\t}\n\t\treturn newObject\n\t} else {\n\t\treturn value\n\t}\n}\n\nfunction isByteWrapper(value: unknown): value is { marker: typeof BYTES_MARKER; data: string } {\n\treturn (\n\t\tvalue != null &&\n\t\ttypeof value === \"object\" &&\n\t\t(value as Record<string, unknown>).marker === BYTES_MARKER &&\n\t\ttypeof (value as Record<string, unknown>).data === \"string\"\n\t)\n}\n\n/**\n * decode a string received over the native bridge in the apps into a native message object\n * @param encoded\n */\nexport function decodeNativeMessage(encoded: string): JsMessage {\n\tconst [type, messageId, ...rest] = encoded.split(\"\\n\")\n\tlet parsedMessage: Message<any>\n\tswitch (type) {\n\t\tcase \"request\": {\n\t\t\tconst [requestType, ...args] = rest\n\t\t\tparsedMessage = new Request(\n\t\t\t\trequestType,\n\t\t\t\targs.map((s) => decodeValueFromNative(s)),\n\t\t\t)\n\t\t\tparsedMessage.id = messageId\n\t\t\tbreak\n\t\t}\n\t\tcase \"response\": {\n\t\t\tconst [value] = rest\n\t\t\tparsedMessage = new Response(messageId, decodeValueFromNative(value))\n\t\t\tbreak\n\t\t}\n\t\tcase \"requestError\": {\n\t\t\tconst [error] = rest\n\t\t\tparsedMessage = new RequestError(messageId, decodeValueFromNative(error) as Error)\n\t\t\tbreak\n\t\t}\n\t\tdefault:\n\t\t\tthrow new ProgrammingError(`unknown message type: ${type}`)\n\t}\n\treturn parsedMessage\n}\n\nexport function decodeValueFromNative(encoded: string): unknown {\n\treturn replaceWrapperByBytes(JSON.parse(encoded))\n}\n","import { Transport } from \"../../api/common/threading/Transport.js\"\nimport { decodeNativeMessage, encodeNativeMessage, JsMessageHandler, NativeMessage } from \"../common/NativeLineProtocol.js\"\nimport { Base64, base64ToUint8Array, utf8Uint8ArrayToString } from \"@tutao/tutanota-utils\"\nimport { assertMainOrNode } from \"../../api/common/Env.js\"\n\nassertMainOrNode()\n\n/**\n * Transport for communication between ios native and webview\n * Messages are passed from native via as eval()-type call which invokes sendMessageFromApp, see WebViewBridge.swift\n * window.tutao.nativeApp is injected during webview initialization\n */\n\nexport class IosNativeTransport implements Transport<NativeRequestType, JsRequestType> {\n\tprivate messageHandler: JsMessageHandler | null = null\n\n\tconstructor(private readonly window: Window) {\n\t\tthis.window.tutao.nativeApp = this\n\t}\n\n\tpostMessage(message: NativeMessage) {\n\t\tconst encoded = encodeNativeMessage(message)\n\t\t// @ts-ignore this is set in the WebViewBrigde on Ios\n\t\tthis.window.webkit.messageHandlers.nativeApp.postMessage(encoded)\n\t}\n\n\tsetMessageHandler(handler: JsMessageHandler): void {\n\t\tthis.messageHandler = handler\n\t}\n\n\treceiveMessageFromApp(msg64: Base64): void {\n\t\tconst handler = this.messageHandler\n\n\t\tif (handler) {\n\t\t\tconst msg = utf8Uint8ArrayToString(base64ToUint8Array(msg64))\n\t\t\tconst parsed = decodeNativeMessage(msg)\n\t\t\thandler(parsed)\n\t\t} else {\n\t\t\tconsole.warn(\"Request from native but no handler is set!\")\n\t\t}\n\t}\n}\n","import { Transport } from \"../../api/common/threading/Transport.js\"\nimport { decodeNativeMessage, encodeNativeMessage, JsMessageHandler, NativeMessage } from \"../common/NativeLineProtocol.js\"\nimport { defer, DeferredObject } from \"@tutao/tutanota-utils\"\nimport { assertMainOrNode } from \"../../api/common/Env.js\"\n\nassertMainOrNode()\n\n/**\n * Transport for communication between android native and webview, using WebMessagePorts for two-way communication.\n * The interface `nativeApp.startWebMessageChannel` is defined in Native.java in order to initiate the setup of the port channel\n */\n\nexport class AndroidNativeTransport implements Transport<NativeRequestType, JsRequestType> {\n\tprivate messageHandler: JsMessageHandler | null = null\n\tprivate deferredPort: DeferredObject<MessagePort> = defer()\n\n\tconstructor(private readonly window: Window) {}\n\n\t/**\n\t * Creates a global `window.onmessage` handler, and then tells native to create the messageport channel\n\t */\n\tstart() {\n\t\t// We will receive a message from native after the call to\n\t\t// window.nativeApp.startWebMessageChannel\n\t\tthis.window.onmessage = (message: MessageEvent) => {\n\t\t\t// All further messages to and from native will be via this port\n\t\t\tconst port = message.ports[0]\n\n\t\t\tport.onmessage = (messageEvent: MessageEvent) => {\n\t\t\t\tconst handler = this.messageHandler\n\n\t\t\t\tif (handler) {\n\t\t\t\t\t// We can be sure we have a string here, because\n\t\t\t\t\t// Android only allows sending strings across MessagePorts\n\t\t\t\t\tconst response = decodeNativeMessage(messageEvent.data)\n\t\t\t\t\thandler(response)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.deferredPort.resolve(port)\n\t\t}\n\n\t\t// window.nativeApp is defined in Native.java using WebView.addJavaScriptInterface\n\t\t// The native side needs to initialize the WebMessagePorts\n\t\t// We have to tell it when we are ready, otherwise it will happen too early and we won't receive the message event\n\t\tthis.window.nativeApp.startWebMessageChannel()\n\t}\n\n\tpostMessage(message: NativeMessage): void {\n\t\tconst encoded = encodeNativeMessage(message)\n\t\tthis.deferredPort.promise.then((port) => port.postMessage(encoded))\n\t}\n\n\tsetMessageHandler(handler: JsMessageHandler): void {\n\t\tthis.messageHandler = handler\n\t}\n}\n","import { assertMainOrNode } from \"../../api/common/Env.js\"\nimport { Message } from \"../../api/common/threading/MessageDispatcher.js\"\nimport { Transport } from \"../../api/common/threading/Transport.js\"\nimport { NativeApp } from \"../../../global.js\"\n\nassertMainOrNode()\n\n/**\n * Transport for communication between electron native and webview\n * Uses window.nativeApp, which is injected by the preload script in desktop mode\n * electron can handle message passing without jsonification\n */\n\nexport class DesktopNativeTransport<OutgoingRequestType extends string = JsRequestType, IncomingRequestType extends string = NativeRequestType>\n\timplements Transport<OutgoingRequestType, IncomingRequestType>\n{\n\tconstructor(private readonly nativeApp: NativeApp) {}\n\n\tpostMessage(message: Message<OutgoingRequestType>) {\n\t\tthis.nativeApp.invoke(message)\n\t}\n\n\tsetMessageHandler(handler: (message: Message<IncomingRequestType>) => unknown): void {\n\t\tthis.nativeApp.attach(handler)\n\t}\n}\n","import { assertMainOrNode, isAndroidApp, isElectronClient, isIOSApp } from \"../../api/common/Env\"\nimport type { Transport } from \"../../api/common/threading/Transport.js\"\nimport { MessageDispatcher, Request } from \"../../api/common/threading/MessageDispatcher.js\"\nimport type { DeferredObject } from \"@tutao/tutanota-utils\"\nimport { defer } from \"@tutao/tutanota-utils\"\nimport type { NativeInterface } from \"../common/NativeInterface\"\nimport { ProgrammingError } from \"../../api/common/error/ProgrammingError\"\nimport { IosNativeTransport } from \"./IosNativeTransport.js\"\nimport { AndroidNativeTransport } from \"./AndroidNativeTransport.js\"\nimport { DesktopNativeTransport } from \"./DesktopNativeTransport.js\"\nimport { WebGlobalDispatcher } from \"../common/generatedipc/WebGlobalDispatcher.js\"\n\nassertMainOrNode()\n\n/** the side of the node-main interface that's running in the browser windows renderer/main thread. */\nexport class NativeInterfaceMain implements NativeInterface {\n\tprivate readonly _dispatchDeferred: DeferredObject<MessageDispatcher<NativeRequestType, JsRequestType>> = defer()\n\tprivate _appUpdateListener: (() => void) | null = null\n\n\tconstructor(private readonly globalDispatcher: WebGlobalDispatcher) {}\n\n\tasync init() {\n\t\tlet transport: Transport<NativeRequestType, JsRequestType>\n\n\t\tif (isAndroidApp()) {\n\t\t\tconst androidTransport = new AndroidNativeTransport(window)\n\t\t\tandroidTransport.start()\n\t\t\ttransport = androidTransport\n\t\t} else if (isIOSApp()) {\n\t\t\ttransport = new IosNativeTransport(window)\n\t\t} else if (isElectronClient()) {\n\t\t\ttransport = new DesktopNativeTransport(window.nativeApp)\n\t\t} else {\n\t\t\tthrow new ProgrammingError(\"Tried to create a native interface in the browser\")\n\t\t}\n\n\t\t// Ensure that we have messaged native with \"init\" before we allow anyone else to make native requests\n\t\tconst queue = new MessageDispatcher<NativeRequestType, JsRequestType>(\n\t\t\ttransport,\n\t\t\t{\n\t\t\t\tipc: (request: Request<JsRequestType>) => this.globalDispatcher.dispatch(request.args[0], request.args[1], request.args.slice(2)),\n\t\t\t},\n\t\t\t\"main-worker\",\n\t\t)\n\t\tawait queue.postRequest(new Request(\"ipc\", [\"CommonSystemFacade\", \"initializeRemoteBridge\"]))\n\t\tthis._dispatchDeferred.resolve(queue)\n\t}\n\n\t// for testing\n\tasync initWithQueue(queue: MessageDispatcher<NativeRequestType, JsRequestType>) {\n\t\tthis._dispatchDeferred.resolve(queue)\n\t}\n\n\t/**\n\t * Send a request to the native side.\n\t */\n\tasync invokeNative(requestType: NativeRequestType, args: ReadonlyArray<unknown>): Promise<any> {\n\t\tconst dispatch = await this._dispatchDeferred.promise\n\t\treturn dispatch.postRequest(new Request<NativeRequestType>(requestType, args))\n\t}\n\n\t/**\n\t * Saves a listener method to be called when an app update has been downloaded on the native side.\n\t */\n\tsetAppUpdateListener(listener: () => void): void {\n\t\tthis._appUpdateListener = listener\n\t}\n\n\t/**\n\t * Call the update listener if set.\n\t */\n\thandleUpdateDownload(): void {\n\t\tthis._appUpdateListener?.()\n\t}\n}\n","import type { PushIdentifier } from \"../../api/entities/sys/TypeRefs.js\"\nimport { createPushIdentifier, PushIdentifierTypeRef } from \"../../api/entities/sys/TypeRefs.js\"\nimport { assertNotNull } from \"@tutao/tutanota-utils\"\nimport { PushServiceType } from \"../../api/common/TutanotaConstants\"\nimport { lang } from \"../../misc/LanguageViewModel\"\nimport { isAndroidApp, isApp, isDesktop, isIOSApp } from \"../../api/common/Env\"\nimport { LoginController } from \"../../api/main/LoginController\"\nimport { client } from \"../../misc/ClientDetector\"\nimport { DeviceConfig } from \"../../misc/DeviceConfig\"\nimport { getElementId } from \"../../api/common/utils/EntityUtils\"\nimport { locator } from \"../../api/main/CommonLocator\"\nimport { DeviceStorageUnavailableError } from \"../../api/common/error/DeviceStorageUnavailableError\"\nimport { NativePushFacade } from \"../common/generatedipc/NativePushFacade.js\"\nimport { CryptoFacade } from \"../../api/worker/crypto/CryptoFacade.js\"\nimport { EntityClient } from \"../../api/common/EntityClient.js\"\nimport { CalendarFacade } from \"../../api/worker/facades/lazy/CalendarFacade.js\"\nimport modelInfo from \"../../api/entities/sys/ModelInfo.js\"\nimport { ExtendedNotificationMode } from \"../common/generatedipc/ExtendedNotificationMode.js\"\nimport { AppType } from \"../../misc/ClientConstants.js\"\n\n// keep in sync with SYS_MODEL_VERSION in app-android/app/build.gradle\n// keep in sync with SYS_MODEL_VERSION in app-android/calendar/build.gradle.kts\n// keep in sync with app-ios/TutanotaSharedFramework/Utils/Utils.swift\nconst MOBILE_SYS_MODEL_VERSION = 99\n\nfunction effectiveModelVersion(): number {\n\t// on desktop we use generated classes\n\t// on mobile we use hand-written classes\n\treturn isDesktop() ? modelInfo.version : MOBILE_SYS_MODEL_VERSION\n}\n\ninterface CurrentPushIdentifier {\n\tidentifier: string\n\tdisabled: boolean\n}\n\nexport class NativePushServiceApp {\n\tprivate _currentIdentifier: CurrentPushIdentifier | null = null\n\n\tconstructor(\n\t\tprivate readonly nativePushFacade: NativePushFacade,\n\t\tprivate readonly logins: LoginController,\n\t\tprivate readonly cryptoFacade: CryptoFacade,\n\t\tprivate readonly entityClient: EntityClient,\n\t\tprivate readonly deviceConfig: DeviceConfig,\n\t\tprivate readonly calendarFacade: CalendarFacade,\n\t\tprivate readonly app: AppType,\n\t) {}\n\n\tasync register(): Promise<void> {\n\t\tconsole.log(\"Registering for push notifications for app\", this.app)\n\t\tif (isAndroidApp() || isDesktop()) {\n\t\t\ttry {\n\t\t\t\tconst identifier = (await this.loadPushIdentifierFromNative()) ?? (await locator.workerFacade.generateSsePushIdentifer())\n\t\t\t\tconst pushIdentifier = (await this.loadPushIdentifier(identifier)) ?? (await this.createPushIdentifierInstance(identifier, PushServiceType.SSE))\n\t\t\t\tthis._currentIdentifier = { identifier, disabled: pushIdentifier.disabled }\n\n\t\t\t\tawait this.storePushIdentifierLocally(pushIdentifier) // Also sets the extended notification mode to SENDER_AND_SUBJECT if the user is new\n\n\t\t\t\tconst userId = this.logins.getUserController().userId\n\t\t\t\tif (!(await locator.pushService.allowReceiveCalendarNotifications())) {\n\t\t\t\t\tawait this.nativePushFacade.invalidateAlarmsForUser(userId)\n\t\t\t\t} else {\n\t\t\t\t\tawait this.scheduleAlarmsIfNeeded(pushIdentifier)\n\t\t\t\t}\n\n\t\t\t\tawait this.initPushNotifications()\n\t\t\t} catch (e) {\n\t\t\t\tif (e instanceof DeviceStorageUnavailableError) {\n\t\t\t\t\tconsole.warn(\"Device storage is unavailable, cannot register for push notifications\", e)\n\t\t\t\t} else {\n\t\t\t\t\tthrow e\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isIOSApp()) {\n\t\t\tconst identifier = await this.loadPushIdentifierFromNative()\n\n\t\t\tif (identifier) {\n\t\t\t\tconst pushIdentifier = (await this.loadPushIdentifier(identifier)) ?? (await this.createPushIdentifierInstance(identifier, PushServiceType.IOS))\n\n\t\t\t\tthis._currentIdentifier = { identifier, disabled: pushIdentifier.disabled }\n\n\t\t\t\tif (pushIdentifier.language !== lang.code) {\n\t\t\t\t\tpushIdentifier.language = lang.code\n\t\t\t\t\tlocator.entityClient.update(pushIdentifier)\n\t\t\t\t}\n\n\t\t\t\tawait this.storePushIdentifierLocally(pushIdentifier)\n\t\t\t\tconst userId = this.logins.getUserController().userId\n\t\t\t\tif (!(await locator.pushService.allowReceiveCalendarNotifications())) {\n\t\t\t\t\tawait this.nativePushFacade.invalidateAlarmsForUser(userId)\n\t\t\t\t} else {\n\t\t\t\t\tawait this.scheduleAlarmsIfNeeded(pushIdentifier)\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconsole.log(\"Push notifications were rejected by user\")\n\t\t\t}\n\t\t}\n\t}\n\n\tasync reRegister(): Promise<void> {\n\t\tconsole.log(\"re-registering for push notifications, setting no alarms as scheduled\")\n\t\tthis.deviceConfig.setNoAlarmsScheduled()\n\n\t\tif (this.logins.isUserLoggedIn()) {\n\t\t\tawait this.logins.waitForFullLogin()\n\t\t\treturn this.register()\n\t\t} else {\n\t\t\treturn Promise.resolve()\n\t\t}\n\t}\n\n\tasync invalidateAlarmsForUser(userId: Id) {\n\t\treturn this.nativePushFacade.invalidateAlarmsForUser(userId)\n\t}\n\n\tremoveUserFromNotifications(userId: Id): Promise<void> {\n\t\treturn this.nativePushFacade.removeUser(userId)\n\t}\n\n\tloadPushIdentifierFromNative(): Promise<string | null> {\n\t\treturn this.nativePushFacade.getPushIdentifier()\n\t}\n\n\tprivate async storePushIdentifierLocally(pushIdentifier: PushIdentifier): Promise<void> {\n\t\tconst userId = this.logins.getUserController().user._id\n\n\t\tconst sk = assertNotNull(await this.cryptoFacade.resolveSessionKeyForInstanceBinary(pushIdentifier))\n\t\tconst origin = assertNotNull(env.staticUrl)\n\t\tawait this.nativePushFacade.storePushIdentifierLocally(pushIdentifier.identifier, userId, origin, getElementId(pushIdentifier), sk)\n\t}\n\n\tprivate async loadPushIdentifier(identifier: string): Promise<PushIdentifier | null> {\n\t\tconst list = assertNotNull(this.logins.getUserController().user.pushIdentifierList)\n\t\tconst identifiers = await this.entityClient.loadAll(PushIdentifierTypeRef, list.list)\n\t\treturn identifiers.find((i) => i.identifier === identifier) ?? null\n\t}\n\n\tprivate async createPushIdentifierInstance(identifier: string, pushServiceType: PushServiceType): Promise<PushIdentifier> {\n\t\tconst list = assertNotNull(this.logins.getUserController().user.pushIdentifierList?.list)\n\t\tconst pushIdentifier = createPushIdentifier({\n\t\t\t_area: \"0\",\n\t\t\t_owner: this.logins.getUserController().userGroupInfo.group,\n\t\t\t_ownerGroup: this.logins.getUserController().userGroupInfo.group,\n\t\t\tdisplayName: client.getIdentifier(),\n\t\t\tpushServiceType: pushServiceType,\n\t\t\tidentifier,\n\t\t\tlanguage: lang.code,\n\t\t\tdisabled: false,\n\t\t\tlastUsageTime: new Date(),\n\t\t\tlastNotificationDate: null,\n\t\t\tapp: this.app,\n\t\t})\n\t\tconst id = await this.entityClient.setup(list, pushIdentifier)\n\t\treturn this.entityClient.load(PushIdentifierTypeRef, [list, id])\n\t}\n\n\tasync closePushNotification(addresses: string[]) {\n\t\tawait this.nativePushFacade.closePushNotifications(addresses)\n\t}\n\n\tgetLoadedPushIdentifier(): CurrentPushIdentifier | null {\n\t\treturn this._currentIdentifier\n\t}\n\n\tgetExtendedNotificationMode(): Promise<ExtendedNotificationMode> {\n\t\treturn this.nativePushFacade.getExtendedNotificationConfig(this.logins.getUserController().userId)\n\t}\n\n\tasync setExtendedNotificationMode(type: ExtendedNotificationMode) {\n\t\tawait this.nativePushFacade.setExtendedNotificationConfig(this.logins.getUserController().userId, type)\n\t}\n\n\tprivate initPushNotifications(): Promise<void> {\n\t\treturn this.nativePushFacade.initPushNotifications()\n\t}\n\n\tprivate async scheduleAlarmsIfNeeded(pushIdentifier: PushIdentifier): Promise<void> {\n\t\tif (this._currentIdentifier?.disabled) {\n\t\t\treturn\n\t\t}\n\n\t\tconst userId = this.logins.getUserController().user._id\n\n\t\t// The native part might have alarms stored for the older model version and they might miss some new fields.\n\t\t// We need to remove all of them, re-download and re-schedule all of them.\n\t\tconst scheduledAlarmsModelVersion = this.deviceConfig.getScheduledAlarmsModelVersion(userId)\n\t\tif (scheduledAlarmsModelVersion == null || scheduledAlarmsModelVersion < effectiveModelVersion()) {\n\t\t\tconsole.log(`Alarms not scheduled for user ${userId} (stored v ${scheduledAlarmsModelVersion}), scheduling`)\n\t\t\tawait this.nativePushFacade.invalidateAlarmsForUser(userId)\n\t\t\tawait this.calendarFacade.scheduleAlarmsForNewDevice(pushIdentifier)\n\t\t\t// tell native to delete all alarms for the user\n\t\t\tthis.deviceConfig.setScheduledAlarmsModelVersion(userId, effectiveModelVersion())\n\t\t}\n\t}\n\n\tasync setReceiveCalendarNotificationConfig(value: boolean) {\n\t\tawait this.nativePushFacade.setReceiveCalendarNotificationConfig(this.getLoadedPushIdentifier()!.identifier, value)\n\t}\n\n\tasync getReceiveCalendarNotificationConfig() {\n\t\tconst pushIdentifier = this.getLoadedPushIdentifier()\n\t\tif (!pushIdentifier) return true\n\t\treturn await this.nativePushFacade.getReceiveCalendarNotificationConfig(pushIdentifier.identifier)\n\t}\n\n\tasync allowReceiveCalendarNotifications() {\n\t\treturn !isApp() || (await this.getReceiveCalendarNotificationConfig())\n\t}\n}\n","/* generated file, don't edit. */\n\nimport { CommonNativeFacade } from \"./CommonNativeFacade.js\"\n\nexport class CommonNativeFacadeReceiveDispatcher {\n\tconstructor(private readonly facade: CommonNativeFacade) {}\n\tasync dispatch(method: string, arg: Array<any>): Promise<any> {\n\t\tswitch (method) {\n\t\t\tcase \"createMailEditor\": {\n\t\t\t\tconst filesUris: ReadonlyArray<string> = arg[0]\n\t\t\t\tconst text: string = arg[1]\n\t\t\t\tconst addresses: ReadonlyArray<string> = arg[2]\n\t\t\t\tconst subject: string = arg[3]\n\t\t\t\tconst mailToUrlString: string = arg[4]\n\t\t\t\treturn this.facade.createMailEditor(filesUris, text, addresses, subject, mailToUrlString)\n\t\t\t}\n\t\t\tcase \"openMailBox\": {\n\t\t\t\tconst userId: string = arg[0]\n\t\t\t\tconst address: string = arg[1]\n\t\t\t\tconst requestedPath: string | null = arg[2]\n\t\t\t\treturn this.facade.openMailBox(userId, address, requestedPath)\n\t\t\t}\n\t\t\tcase \"openCalendar\": {\n\t\t\t\tconst userId: string = arg[0]\n\t\t\t\treturn this.facade.openCalendar(userId)\n\t\t\t}\n\t\t\tcase \"openContactEditor\": {\n\t\t\t\tconst contactId: string = arg[0]\n\t\t\t\treturn this.facade.openContactEditor(contactId)\n\t\t\t}\n\t\t\tcase \"showAlertDialog\": {\n\t\t\t\tconst translationKey: string = arg[0]\n\t\t\t\treturn this.facade.showAlertDialog(translationKey)\n\t\t\t}\n\t\t\tcase \"invalidateAlarms\": {\n\t\t\t\treturn this.facade.invalidateAlarms()\n\t\t\t}\n\t\t\tcase \"updateTheme\": {\n\t\t\t\treturn this.facade.updateTheme()\n\t\t\t}\n\t\t\tcase \"promptForNewPassword\": {\n\t\t\t\tconst title: string = arg[0]\n\t\t\t\tconst oldPassword: string | null = arg[1]\n\t\t\t\treturn this.facade.promptForNewPassword(title, oldPassword)\n\t\t\t}\n\t\t\tcase \"promptForPassword\": {\n\t\t\t\tconst title: string = arg[0]\n\t\t\t\treturn this.facade.promptForPassword(title)\n\t\t\t}\n\t\t\tcase \"handleFileImport\": {\n\t\t\t\tconst filesUris: ReadonlyArray<string> = arg[0]\n\t\t\t\treturn this.facade.handleFileImport(filesUris)\n\t\t\t}\n\t\t\tcase \"openSettings\": {\n\t\t\t\tconst path: string = arg[0]\n\t\t\t\treturn this.facade.openSettings(path)\n\t\t\t}\n\t\t}\n\t}\n}\n","/* generated file, don't edit. */\n\nimport { ElectronResult } from \"./ElectronResult.js\"\nimport { ErrorInfo } from \"./ErrorInfo.js\"\nimport { NativeShortcut } from \"./NativeShortcut.js\"\nimport { DesktopFacade } from \"./DesktopFacade.js\"\n\nexport class DesktopFacadeReceiveDispatcher {\n\tconstructor(private readonly facade: DesktopFacade) {}\n\tasync dispatch(method: string, arg: Array<any>): Promise<any> {\n\t\tswitch (method) {\n\t\t\tcase \"print\": {\n\t\t\t\treturn this.facade.print()\n\t\t\t}\n\t\t\tcase \"showSpellcheckDropdown\": {\n\t\t\t\treturn this.facade.showSpellcheckDropdown()\n\t\t\t}\n\t\t\tcase \"openFindInPage\": {\n\t\t\t\treturn this.facade.openFindInPage()\n\t\t\t}\n\t\t\tcase \"applySearchResultToOverlay\": {\n\t\t\t\tconst result: ElectronResult | null = arg[0]\n\t\t\t\treturn this.facade.applySearchResultToOverlay(result)\n\t\t\t}\n\t\t\tcase \"reportError\": {\n\t\t\t\tconst errorInfo: ErrorInfo = arg[0]\n\t\t\t\treturn this.facade.reportError(errorInfo)\n\t\t\t}\n\t\t\tcase \"updateTargetUrl\": {\n\t\t\t\tconst url: string = arg[0]\n\t\t\t\tconst appPath: string = arg[1]\n\t\t\t\treturn this.facade.updateTargetUrl(url, appPath)\n\t\t\t}\n\t\t\tcase \"openCustomer\": {\n\t\t\t\tconst mailAddress: string | null = arg[0]\n\t\t\t\treturn this.facade.openCustomer(mailAddress)\n\t\t\t}\n\t\t\tcase \"addShortcuts\": {\n\t\t\t\tconst shortcuts: ReadonlyArray<NativeShortcut> = arg[0]\n\t\t\t\treturn this.facade.addShortcuts(shortcuts)\n\t\t\t}\n\t\t\tcase \"appUpdateDownloaded\": {\n\t\t\t\treturn this.facade.appUpdateDownloaded()\n\t\t\t}\n\t\t}\n\t}\n}\n","/* generated file, don't edit. */\n\nimport { InterWindowEventFacade } from \"./InterWindowEventFacade.js\"\n\nexport class InterWindowEventFacadeReceiveDispatcher {\n\tconstructor(private readonly facade: InterWindowEventFacade) {}\n\tasync dispatch(method: string, arg: Array<any>): Promise<any> {\n\t\tswitch (method) {\n\t\t\tcase \"localUserDataInvalidated\": {\n\t\t\t\tconst userId: string = arg[0]\n\t\t\t\treturn this.facade.localUserDataInvalidated(userId)\n\t\t\t}\n\t\t\tcase \"reloadDeviceConfig\": {\n\t\t\t\treturn this.facade.reloadDeviceConfig()\n\t\t\t}\n\t\t}\n\t}\n}\n","/* generated file, don't edit. */\n\nimport { MobileFacade } from \"./MobileFacade.js\"\n\nexport class MobileFacadeReceiveDispatcher {\n\tconstructor(private readonly facade: MobileFacade) {}\n\tasync dispatch(method: string, arg: Array<any>): Promise<any> {\n\t\tswitch (method) {\n\t\t\tcase \"handleBackPress\": {\n\t\t\t\treturn this.facade.handleBackPress()\n\t\t\t}\n\t\t\tcase \"visibilityChange\": {\n\t\t\t\tconst visibility: boolean = arg[0]\n\t\t\t\treturn this.facade.visibilityChange(visibility)\n\t\t\t}\n\t\t\tcase \"keyboardSizeChanged\": {\n\t\t\t\tconst newSize: number = arg[0]\n\t\t\t\treturn this.facade.keyboardSizeChanged(newSize)\n\t\t\t}\n\t\t}\n\t}\n}\n","/* generated file, don't edit. */\n\nimport { CommonNativeFacade } from \"./CommonNativeFacade.js\"\nimport { CommonNativeFacadeReceiveDispatcher } from \"./CommonNativeFacadeReceiveDispatcher.js\"\nimport { DesktopFacade } from \"./DesktopFacade.js\"\nimport { DesktopFacadeReceiveDispatcher } from \"./DesktopFacadeReceiveDispatcher.js\"\nimport { InterWindowEventFacade } from \"./InterWindowEventFacade.js\"\nimport { InterWindowEventFacadeReceiveDispatcher } from \"./InterWindowEventFacadeReceiveDispatcher.js\"\nimport { MobileFacade } from \"./MobileFacade.js\"\nimport { MobileFacadeReceiveDispatcher } from \"./MobileFacadeReceiveDispatcher.js\"\n\nexport class WebGlobalDispatcher {\n\tprivate readonly commonNativeFacade: CommonNativeFacadeReceiveDispatcher\n\tprivate readonly desktopFacade: DesktopFacadeReceiveDispatcher\n\tprivate readonly interWindowEventFacade: InterWindowEventFacadeReceiveDispatcher\n\tprivate readonly mobileFacade: MobileFacadeReceiveDispatcher\n\tconstructor(\n\t\tcommonNativeFacade: CommonNativeFacade,\n\t\tdesktopFacade: DesktopFacade,\n\t\tinterWindowEventFacade: InterWindowEventFacade,\n\t\tmobileFacade: MobileFacade,\n\t) {\n\t\tthis.commonNativeFacade = new CommonNativeFacadeReceiveDispatcher(commonNativeFacade)\n\t\tthis.desktopFacade = new DesktopFacadeReceiveDispatcher(desktopFacade)\n\t\tthis.interWindowEventFacade = new InterWindowEventFacadeReceiveDispatcher(interWindowEventFacade)\n\t\tthis.mobileFacade = new MobileFacadeReceiveDispatcher(mobileFacade)\n\t}\n\n\tasync dispatch(facadeName: string, methodName: string, args: Array<any>) {\n\t\tswitch (facadeName) {\n\t\t\tcase \"CommonNativeFacade\":\n\t\t\t\treturn this.commonNativeFacade.dispatch(methodName, args)\n\t\t\tcase \"DesktopFacade\":\n\t\t\t\treturn this.desktopFacade.dispatch(methodName, args)\n\t\t\tcase \"InterWindowEventFacade\":\n\t\t\t\treturn this.interWindowEventFacade.dispatch(methodName, args)\n\t\t\tcase \"MobileFacade\":\n\t\t\t\treturn this.mobileFacade.dispatch(methodName, args)\n\t\t\tdefault:\n\t\t\t\tthrow new Error(\"licc messed up! \" + facadeName)\n\t\t}\n\t}\n}\n","/* generated file, don't edit. */\n\nimport { CommonSystemFacade } from \"./CommonSystemFacade.js\"\n\ninterface NativeInterface {\n\tinvokeNative(requestType: string, args: unknown[]): Promise<any>\n}\nexport class CommonSystemFacadeSendDispatcher implements CommonSystemFacade {\n\tconstructor(private readonly transport: NativeInterface) {}\n\tasync initializeRemoteBridge(...args: Parameters<CommonSystemFacade[\"initializeRemoteBridge\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"CommonSystemFacade\", \"initializeRemoteBridge\", ...args])\n\t}\n\tasync reload(...args: Parameters<CommonSystemFacade[\"reload\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"CommonSystemFacade\", \"reload\", ...args])\n\t}\n\tasync getLog(...args: Parameters<CommonSystemFacade[\"getLog\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"CommonSystemFacade\", \"getLog\", ...args])\n\t}\n}\n","/* generated file, don't edit. */\n\nimport { MobileSystemFacade } from \"./MobileSystemFacade.js\"\n\ninterface NativeInterface {\n\tinvokeNative(requestType: string, args: unknown[]): Promise<any>\n}\nexport class MobileSystemFacadeSendDispatcher implements MobileSystemFacade {\n\tconstructor(private readonly transport: NativeInterface) {}\n\tasync goToSettings(...args: Parameters<MobileSystemFacade[\"goToSettings\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"MobileSystemFacade\", \"goToSettings\", ...args])\n\t}\n\tasync openLink(...args: Parameters<MobileSystemFacade[\"openLink\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"MobileSystemFacade\", \"openLink\", ...args])\n\t}\n\tasync shareText(...args: Parameters<MobileSystemFacade[\"shareText\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"MobileSystemFacade\", \"shareText\", ...args])\n\t}\n\tasync hasPermission(...args: Parameters<MobileSystemFacade[\"hasPermission\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"MobileSystemFacade\", \"hasPermission\", ...args])\n\t}\n\tasync requestPermission(...args: Parameters<MobileSystemFacade[\"requestPermission\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"MobileSystemFacade\", \"requestPermission\", ...args])\n\t}\n\tasync getAppLockMethod(...args: Parameters<MobileSystemFacade[\"getAppLockMethod\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"MobileSystemFacade\", \"getAppLockMethod\", ...args])\n\t}\n\tasync setAppLockMethod(...args: Parameters<MobileSystemFacade[\"setAppLockMethod\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"MobileSystemFacade\", \"setAppLockMethod\", ...args])\n\t}\n\tasync enforceAppLock(...args: Parameters<MobileSystemFacade[\"enforceAppLock\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"MobileSystemFacade\", \"enforceAppLock\", ...args])\n\t}\n\tasync getSupportedAppLockMethods(...args: Parameters<MobileSystemFacade[\"getSupportedAppLockMethods\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"MobileSystemFacade\", \"getSupportedAppLockMethods\", ...args])\n\t}\n\tasync openMailApp(...args: Parameters<MobileSystemFacade[\"openMailApp\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"MobileSystemFacade\", \"openMailApp\", ...args])\n\t}\n\tasync openCalendarApp(...args: Parameters<MobileSystemFacade[\"openCalendarApp\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"MobileSystemFacade\", \"openCalendarApp\", ...args])\n\t}\n\tasync getInstallationDate(...args: Parameters<MobileSystemFacade[\"getInstallationDate\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"MobileSystemFacade\", \"getInstallationDate\", ...args])\n\t}\n\tasync requestInAppRating(...args: Parameters<MobileSystemFacade[\"requestInAppRating\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"MobileSystemFacade\", \"requestInAppRating\", ...args])\n\t}\n}\n","/* generated file, don't edit. */\n\nimport { ThemeFacade } from \"./ThemeFacade.js\"\n\ninterface NativeInterface {\n\tinvokeNative(requestType: string, args: unknown[]): Promise<any>\n}\nexport class ThemeFacadeSendDispatcher implements ThemeFacade {\n\tconstructor(private readonly transport: NativeInterface) {}\n\tasync getThemes(...args: Parameters<ThemeFacade[\"getThemes\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"ThemeFacade\", \"getThemes\", ...args])\n\t}\n\tasync setThemes(...args: Parameters<ThemeFacade[\"setThemes\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"ThemeFacade\", \"setThemes\", ...args])\n\t}\n\tasync getThemePreference(...args: Parameters<ThemeFacade[\"getThemePreference\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"ThemeFacade\", \"getThemePreference\", ...args])\n\t}\n\tasync setThemePreference(...args: Parameters<ThemeFacade[\"setThemePreference\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"ThemeFacade\", \"setThemePreference\", ...args])\n\t}\n\tasync prefersDark(...args: Parameters<ThemeFacade[\"prefersDark\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"ThemeFacade\", \"prefersDark\", ...args])\n\t}\n}\n","/* generated file, don't edit. */\n\nimport { SearchTextInAppFacade } from \"./SearchTextInAppFacade.js\"\n\ninterface NativeInterface {\n\tinvokeNative(requestType: string, args: unknown[]): Promise<any>\n}\nexport class SearchTextInAppFacadeSendDispatcher implements SearchTextInAppFacade {\n\tconstructor(private readonly transport: NativeInterface) {}\n\tasync findInPage(...args: Parameters<SearchTextInAppFacade[\"findInPage\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"SearchTextInAppFacade\", \"findInPage\", ...args])\n\t}\n\tasync stopFindInPage(...args: Parameters<SearchTextInAppFacade[\"stopFindInPage\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"SearchTextInAppFacade\", \"stopFindInPage\", ...args])\n\t}\n\tasync setSearchOverlayState(...args: Parameters<SearchTextInAppFacade[\"setSearchOverlayState\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"SearchTextInAppFacade\", \"setSearchOverlayState\", ...args])\n\t}\n}\n","/* generated file, don't edit. */\n\nimport { SettingsFacade } from \"./SettingsFacade.js\"\n\ninterface NativeInterface {\n\tinvokeNative(requestType: string, args: unknown[]): Promise<any>\n}\nexport class SettingsFacadeSendDispatcher implements SettingsFacade {\n\tconstructor(private readonly transport: NativeInterface) {}\n\tasync getStringConfigValue(...args: Parameters<SettingsFacade[\"getStringConfigValue\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"SettingsFacade\", \"getStringConfigValue\", ...args])\n\t}\n\tasync setStringConfigValue(...args: Parameters<SettingsFacade[\"setStringConfigValue\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"SettingsFacade\", \"setStringConfigValue\", ...args])\n\t}\n\tasync getBooleanConfigValue(...args: Parameters<SettingsFacade[\"getBooleanConfigValue\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"SettingsFacade\", \"getBooleanConfigValue\", ...args])\n\t}\n\tasync setBooleanConfigValue(...args: Parameters<SettingsFacade[\"setBooleanConfigValue\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"SettingsFacade\", \"setBooleanConfigValue\", ...args])\n\t}\n\tasync getUpdateInfo(...args: Parameters<SettingsFacade[\"getUpdateInfo\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"SettingsFacade\", \"getUpdateInfo\", ...args])\n\t}\n\tasync registerMailto(...args: Parameters<SettingsFacade[\"registerMailto\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"SettingsFacade\", \"registerMailto\", ...args])\n\t}\n\tasync unregisterMailto(...args: Parameters<SettingsFacade[\"unregisterMailto\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"SettingsFacade\", \"unregisterMailto\", ...args])\n\t}\n\tasync integrateDesktop(...args: Parameters<SettingsFacade[\"integrateDesktop\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"SettingsFacade\", \"integrateDesktop\", ...args])\n\t}\n\tasync unIntegrateDesktop(...args: Parameters<SettingsFacade[\"unIntegrateDesktop\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"SettingsFacade\", \"unIntegrateDesktop\", ...args])\n\t}\n\tasync getSpellcheckLanguages(...args: Parameters<SettingsFacade[\"getSpellcheckLanguages\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"SettingsFacade\", \"getSpellcheckLanguages\", ...args])\n\t}\n\tasync getIntegrationInfo(...args: Parameters<SettingsFacade[\"getIntegrationInfo\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"SettingsFacade\", \"getIntegrationInfo\", ...args])\n\t}\n\tasync enableAutoLaunch(...args: Parameters<SettingsFacade[\"enableAutoLaunch\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"SettingsFacade\", \"enableAutoLaunch\", ...args])\n\t}\n\tasync disableAutoLaunch(...args: Parameters<SettingsFacade[\"disableAutoLaunch\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"SettingsFacade\", \"disableAutoLaunch\", ...args])\n\t}\n\tasync manualUpdate(...args: Parameters<SettingsFacade[\"manualUpdate\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"SettingsFacade\", \"manualUpdate\", ...args])\n\t}\n\tasync changeLanguage(...args: Parameters<SettingsFacade[\"changeLanguage\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"SettingsFacade\", \"changeLanguage\", ...args])\n\t}\n}\n","/* generated file, don't edit. */\n\nimport { DesktopSystemFacade } from \"./DesktopSystemFacade.js\"\n\ninterface NativeInterface {\n\tinvokeNative(requestType: string, args: unknown[]): Promise<any>\n}\nexport class DesktopSystemFacadeSendDispatcher implements DesktopSystemFacade {\n\tconstructor(private readonly transport: NativeInterface) {}\n\tasync openNewWindow(...args: Parameters<DesktopSystemFacade[\"openNewWindow\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"DesktopSystemFacade\", \"openNewWindow\", ...args])\n\t}\n\tasync focusApplicationWindow(...args: Parameters<DesktopSystemFacade[\"focusApplicationWindow\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"DesktopSystemFacade\", \"focusApplicationWindow\", ...args])\n\t}\n\tasync sendSocketMessage(...args: Parameters<DesktopSystemFacade[\"sendSocketMessage\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"DesktopSystemFacade\", \"sendSocketMessage\", ...args])\n\t}\n}\n","/* generated file, don't edit. */\n\nimport { MobileContactsFacade } from \"./MobileContactsFacade.js\"\n\ninterface NativeInterface {\n\tinvokeNative(requestType: string, args: unknown[]): Promise<any>\n}\nexport class MobileContactsFacadeSendDispatcher implements MobileContactsFacade {\n\tconstructor(private readonly transport: NativeInterface) {}\n\tasync findSuggestions(...args: Parameters<MobileContactsFacade[\"findSuggestions\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"MobileContactsFacade\", \"findSuggestions\", ...args])\n\t}\n\tasync saveContacts(...args: Parameters<MobileContactsFacade[\"saveContacts\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"MobileContactsFacade\", \"saveContacts\", ...args])\n\t}\n\tasync syncContacts(...args: Parameters<MobileContactsFacade[\"syncContacts\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"MobileContactsFacade\", \"syncContacts\", ...args])\n\t}\n\tasync getContactBooks(...args: Parameters<MobileContactsFacade[\"getContactBooks\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"MobileContactsFacade\", \"getContactBooks\", ...args])\n\t}\n\tasync getContactsInContactBook(...args: Parameters<MobileContactsFacade[\"getContactsInContactBook\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"MobileContactsFacade\", \"getContactsInContactBook\", ...args])\n\t}\n\tasync deleteContacts(...args: Parameters<MobileContactsFacade[\"deleteContacts\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"MobileContactsFacade\", \"deleteContacts\", ...args])\n\t}\n\tasync isLocalStorageAvailable(...args: Parameters<MobileContactsFacade[\"isLocalStorageAvailable\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"MobileContactsFacade\", \"isLocalStorageAvailable\", ...args])\n\t}\n\tasync findLocalMatches(...args: Parameters<MobileContactsFacade[\"findLocalMatches\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"MobileContactsFacade\", \"findLocalMatches\", ...args])\n\t}\n\tasync deleteLocalContacts(...args: Parameters<MobileContactsFacade[\"deleteLocalContacts\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"MobileContactsFacade\", \"deleteLocalContacts\", ...args])\n\t}\n}\n","/* generated file, don't edit. */\n\nimport { NativeCredentialsFacade } from \"./NativeCredentialsFacade.js\"\n\ninterface NativeInterface {\n\tinvokeNative(requestType: string, args: unknown[]): Promise<any>\n}\nexport class NativeCredentialsFacadeSendDispatcher implements NativeCredentialsFacade {\n\tconstructor(private readonly transport: NativeInterface) {}\n\tasync getSupportedEncryptionModes(...args: Parameters<NativeCredentialsFacade[\"getSupportedEncryptionModes\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"NativeCredentialsFacade\", \"getSupportedEncryptionModes\", ...args])\n\t}\n\tasync loadAll(...args: Parameters<NativeCredentialsFacade[\"loadAll\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"NativeCredentialsFacade\", \"loadAll\", ...args])\n\t}\n\tasync store(...args: Parameters<NativeCredentialsFacade[\"store\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"NativeCredentialsFacade\", \"store\", ...args])\n\t}\n\tasync storeEncrypted(...args: Parameters<NativeCredentialsFacade[\"storeEncrypted\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"NativeCredentialsFacade\", \"storeEncrypted\", ...args])\n\t}\n\tasync loadByUserId(...args: Parameters<NativeCredentialsFacade[\"loadByUserId\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"NativeCredentialsFacade\", \"loadByUserId\", ...args])\n\t}\n\tasync deleteByUserId(...args: Parameters<NativeCredentialsFacade[\"deleteByUserId\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"NativeCredentialsFacade\", \"deleteByUserId\", ...args])\n\t}\n\tasync getCredentialEncryptionMode(...args: Parameters<NativeCredentialsFacade[\"getCredentialEncryptionMode\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"NativeCredentialsFacade\", \"getCredentialEncryptionMode\", ...args])\n\t}\n\tasync setCredentialEncryptionMode(...args: Parameters<NativeCredentialsFacade[\"setCredentialEncryptionMode\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"NativeCredentialsFacade\", \"setCredentialEncryptionMode\", ...args])\n\t}\n\tasync clear(...args: Parameters<NativeCredentialsFacade[\"clear\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"NativeCredentialsFacade\", \"clear\", ...args])\n\t}\n\tasync migrateToNativeCredentials(...args: Parameters<NativeCredentialsFacade[\"migrateToNativeCredentials\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"NativeCredentialsFacade\", \"migrateToNativeCredentials\", ...args])\n\t}\n}\n","/* generated file, don't edit. */\n\nimport { MobilePaymentsFacade } from \"./MobilePaymentsFacade.js\"\n\ninterface NativeInterface {\n\tinvokeNative(requestType: string, args: unknown[]): Promise<any>\n}\nexport class MobilePaymentsFacadeSendDispatcher implements MobilePaymentsFacade {\n\tconstructor(private readonly transport: NativeInterface) {}\n\tasync requestSubscriptionToPlan(...args: Parameters<MobilePaymentsFacade[\"requestSubscriptionToPlan\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"MobilePaymentsFacade\", \"requestSubscriptionToPlan\", ...args])\n\t}\n\tasync getPlanPrices(...args: Parameters<MobilePaymentsFacade[\"getPlanPrices\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"MobilePaymentsFacade\", \"getPlanPrices\", ...args])\n\t}\n\tasync showSubscriptionConfigView(...args: Parameters<MobilePaymentsFacade[\"showSubscriptionConfigView\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"MobilePaymentsFacade\", \"showSubscriptionConfigView\", ...args])\n\t}\n\tasync queryAppStoreSubscriptionOwnership(...args: Parameters<MobilePaymentsFacade[\"queryAppStoreSubscriptionOwnership\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"MobilePaymentsFacade\", \"queryAppStoreSubscriptionOwnership\", ...args])\n\t}\n\tasync isAppStoreRenewalEnabled(...args: Parameters<MobilePaymentsFacade[\"isAppStoreRenewalEnabled\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"MobilePaymentsFacade\", \"isAppStoreRenewalEnabled\", ...args])\n\t}\n}\n","/* generated file, don't edit. */\n\nimport { ExternalCalendarFacade } from \"./ExternalCalendarFacade.js\"\n\ninterface NativeInterface {\n\tinvokeNative(requestType: string, args: unknown[]): Promise<any>\n}\nexport class ExternalCalendarFacadeSendDispatcher implements ExternalCalendarFacade {\n\tconstructor(private readonly transport: NativeInterface) {}\n\tasync fetchExternalCalendar(...args: Parameters<ExternalCalendarFacade[\"fetchExternalCalendar\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"ExternalCalendarFacade\", \"fetchExternalCalendar\", ...args])\n\t}\n}\n","/* generated file, don't edit. */\n\nimport { NativeMailImportFacade } from \"./NativeMailImportFacade.js\"\n\ninterface NativeInterface {\n\tinvokeNative(requestType: string, args: unknown[]): Promise<any>\n}\nexport class NativeMailImportFacadeSendDispatcher implements NativeMailImportFacade {\n\tconstructor(private readonly transport: NativeInterface) {}\n\tasync getResumableImport(...args: Parameters<NativeMailImportFacade[\"getResumableImport\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"NativeMailImportFacade\", \"getResumableImport\", ...args])\n\t}\n\tasync prepareNewImport(...args: Parameters<NativeMailImportFacade[\"prepareNewImport\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"NativeMailImportFacade\", \"prepareNewImport\", ...args])\n\t}\n\tasync setProgressAction(...args: Parameters<NativeMailImportFacade[\"setProgressAction\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"NativeMailImportFacade\", \"setProgressAction\", ...args])\n\t}\n\tasync setAsyncErrorHook(...args: Parameters<NativeMailImportFacade[\"setAsyncErrorHook\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"NativeMailImportFacade\", \"setAsyncErrorHook\", ...args])\n\t}\n}\n","import { NativeInterfaceMain } from \"./NativeInterfaceMain.js\"\nimport { NativePushServiceApp } from \"./NativePushServiceApp.js\"\nimport { NativeFileApp } from \"../common/FileApp.js\"\nimport { isBrowser, isElectronClient } from \"../../api/common/Env.js\"\nimport { ProgrammingError } from \"../../api/common/error/ProgrammingError.js\"\nimport { DesktopFacade } from \"../common/generatedipc/DesktopFacade.js\"\nimport { CommonNativeFacade } from \"../common/generatedipc/CommonNativeFacade.js\"\nimport { CryptoFacade } from \"../../api/worker/crypto/CryptoFacade.js\"\nimport { EntityClient } from \"../../api/common/EntityClient.js\"\nimport { deviceConfig } from \"../../misc/DeviceConfig.js\"\nimport { CalendarFacade } from \"../../api/worker/facades/lazy/CalendarFacade.js\"\nimport { MobileSystemFacade } from \"../common/generatedipc/MobileSystemFacade.js\"\nimport { CommonSystemFacade } from \"../common/generatedipc/CommonSystemFacade.js\"\nimport { ThemeFacade } from \"../common/generatedipc/ThemeFacade.js\"\nimport { WebGlobalDispatcher } from \"../common/generatedipc/WebGlobalDispatcher.js\"\nimport { NativePushFacadeSendDispatcher } from \"../common/generatedipc/NativePushFacadeSendDispatcher.js\"\nimport { FileFacadeSendDispatcher } from \"../common/generatedipc/FileFacadeSendDispatcher.js\"\nimport { ExportFacadeSendDispatcher } from \"../common/generatedipc/ExportFacadeSendDispatcher.js\"\nimport { CommonSystemFacadeSendDispatcher } from \"../common/generatedipc/CommonSystemFacadeSendDispatcher.js\"\nimport { MobileSystemFacadeSendDispatcher } from \"../common/generatedipc/MobileSystemFacadeSendDispatcher.js\"\nimport { ThemeFacadeSendDispatcher } from \"../common/generatedipc/ThemeFacadeSendDispatcher.js\"\nimport { SearchTextInAppFacadeSendDispatcher } from \"../common/generatedipc/SearchTextInAppFacadeSendDispatcher.js\"\nimport { SettingsFacadeSendDispatcher } from \"../common/generatedipc/SettingsFacadeSendDispatcher.js\"\nimport { DesktopSystemFacadeSendDispatcher } from \"../common/generatedipc/DesktopSystemFacadeSendDispatcher.js\"\nimport { SearchTextInAppFacade } from \"../common/generatedipc/SearchTextInAppFacade.js\"\nimport { DesktopSystemFacade } from \"../common/generatedipc/DesktopSystemFacade.js\"\nimport { InterWindowEventFacade } from \"../common/generatedipc/InterWindowEventFacade.js\"\nimport { InterWindowEventFacadeSendDispatcher } from \"../common/generatedipc/InterWindowEventFacadeSendDispatcher.js\"\nimport { LoginController } from \"../../api/main/LoginController.js\"\nimport { MobileContactsFacade } from \"../common/generatedipc/MobileContactsFacade.js\"\nimport { MobileContactsFacadeSendDispatcher } from \"../common/generatedipc/MobileContactsFacadeSendDispatcher.js\"\nimport { WebMobileFacade } from \"./WebMobileFacade.js\"\nimport { NativeCredentialsFacade } from \"../common/generatedipc/NativeCredentialsFacade.js\"\nimport { NativeCredentialsFacadeSendDispatcher } from \"../common/generatedipc/NativeCredentialsFacadeSendDispatcher.js\"\nimport { MobilePaymentsFacade } from \"../common/generatedipc/MobilePaymentsFacade.js\"\nimport { MobilePaymentsFacadeSendDispatcher } from \"../common/generatedipc/MobilePaymentsFacadeSendDispatcher.js\"\n\nimport { AppType } from \"../../misc/ClientConstants.js\"\nimport { ExternalCalendarFacade } from \"../common/generatedipc/ExternalCalendarFacade.js\"\nimport { ExternalCalendarFacadeSendDispatcher } from \"../common/generatedipc/ExternalCalendarFacadeSendDispatcher.js\"\nimport { NativeMailImportFacadeSendDispatcher } from \"../common/generatedipc/NativeMailImportFacadeSendDispatcher\"\nimport { NativeMailImportFacade } from \"../common/generatedipc/NativeMailImportFacade\"\nimport { ExportFacade } from \"../common/generatedipc/ExportFacade.js\"\n\nexport type NativeInterfaces = {\n\tnative: NativeInterfaceMain\n\tfileApp: NativeFileApp\n\tpushService: NativePushServiceApp\n\tmobileSystemFacade: MobileSystemFacade\n\tcommonSystemFacade: CommonSystemFacade\n\tthemeFacade: ThemeFacade\n\tmobileContactsFacade: MobileContactsFacade\n\tnativeCredentialsFacade: NativeCredentialsFacade\n\tmobilePaymentsFacade: MobilePaymentsFacade\n\texternalCalendarFacade: ExternalCalendarFacade\n}\n\nexport type DesktopInterfaces = {\n\tsearchTextFacade: SearchTextInAppFacade\n\tdesktopSettingsFacade: SettingsFacadeSendDispatcher\n\tdesktopSystemFacade: DesktopSystemFacade\n\tnativeMailImportFacade: NativeMailImportFacade\n\tinterWindowEventSender: InterWindowEventFacadeSendDispatcher\n\texportFacade: ExportFacade\n}\n\n/**\n * @returns NativeInterfaces\n * @throws ProgrammingError when you try to call this in the web browser\n */\nexport function createNativeInterfaces(\n\tmobileFacade: WebMobileFacade,\n\tdesktopFacade: DesktopFacade,\n\tinterWindowEventFacade: InterWindowEventFacade,\n\tcommonNativeFacade: CommonNativeFacade,\n\tcryptoFacade: CryptoFacade,\n\tcalendarFacade: CalendarFacade,\n\tentityClient: EntityClient,\n\tlogins: LoginController,\n\tapp: AppType,\n): NativeInterfaces {\n\tif (isBrowser()) {\n\t\tthrow new ProgrammingError(\"Tried to make native interfaces in non-native\")\n\t}\n\n\tconst dispatcher = new WebGlobalDispatcher(commonNativeFacade, desktopFacade, interWindowEventFacade, mobileFacade)\n\tconst native = new NativeInterfaceMain(dispatcher)\n\tconst nativePushFacadeSendDispatcher = new NativePushFacadeSendDispatcher(native)\n\tconst pushService = new NativePushServiceApp(nativePushFacadeSendDispatcher, logins, cryptoFacade, entityClient, deviceConfig, calendarFacade, app)\n\tconst fileApp = new NativeFileApp(new FileFacadeSendDispatcher(native), new ExportFacadeSendDispatcher(native))\n\tconst commonSystemFacade = new CommonSystemFacadeSendDispatcher(native)\n\tconst mobileSystemFacade = new MobileSystemFacadeSendDispatcher(native)\n\tconst themeFacade = new ThemeFacadeSendDispatcher(native)\n\tconst mobileContactsFacade = new MobileContactsFacadeSendDispatcher(native)\n\tconst nativeCredentialsFacade = new NativeCredentialsFacadeSendDispatcher(native)\n\tconst mobilePaymentsFacade = new MobilePaymentsFacadeSendDispatcher(native)\n\tconst externalCalendarFacade = new ExternalCalendarFacadeSendDispatcher(native)\n\n\treturn {\n\t\tnative,\n\t\tfileApp,\n\t\tpushService,\n\t\tmobileSystemFacade,\n\t\tcommonSystemFacade,\n\t\tthemeFacade,\n\t\tmobileContactsFacade,\n\t\tnativeCredentialsFacade,\n\t\tmobilePaymentsFacade,\n\t\texternalCalendarFacade,\n\t}\n}\n\nexport function createDesktopInterfaces(native: NativeInterfaceMain): DesktopInterfaces {\n\tif (!isElectronClient()) {\n\t\tthrow new ProgrammingError(\"tried to create desktop interfaces in non-electron client\")\n\t}\n\treturn {\n\t\tsearchTextFacade: new SearchTextInAppFacadeSendDispatcher(native),\n\t\tdesktopSettingsFacade: new SettingsFacadeSendDispatcher(native),\n\t\tdesktopSystemFacade: new DesktopSystemFacadeSendDispatcher(native),\n\t\tnativeMailImportFacade: new NativeMailImportFacadeSendDispatcher(native),\n\t\tinterWindowEventSender: new InterWindowEventFacadeSendDispatcher(native),\n\t\texportFacade: new ExportFacadeSendDispatcher(native),\n\t}\n}\n"],"mappings":"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"}