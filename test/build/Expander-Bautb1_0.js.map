{"version":3,"file":"Expander-Bautb1_0.js","names":["vnode: Vnode<ExpanderAttrs>","event: MouseEvent","e: KeyboardEvent","vnode: Vnode<ExpanderPanelAttrs>","old: Vnode<ExpanderPanelAttrs>","vnode","expanded: boolean"],"sources":["../../src/common/gui/base/Expander.ts"],"sourcesContent":["import m, { Children, Component, Vnode } from \"mithril\"\nimport type { TranslationKey, MaybeTranslation } from \"../../misc/LanguageViewModel\"\nimport { lang } from \"../../misc/LanguageViewModel\"\nimport { Icon, IconSize } from \"./Icon\"\nimport { Icons } from \"./icons/Icons\"\nimport { BootIcons } from \"./icons/BootIcons\"\nimport { theme } from \"../theme\"\nimport { px } from \"../size\"\nimport { DefaultAnimationTime } from \"../animation/Animations\"\nimport type { lazy } from \"@tutao/tutanota-utils\"\nimport { assertNotNull } from \"@tutao/tutanota-utils\"\nimport { isKeyPressed } from \"../../misc/KeyManager.js\"\nimport { Keys } from \"../../api/common/TutanotaConstants.js\"\n\nexport type ExpanderAttrs = {\n\tlabel: MaybeTranslation\n\texpanded: boolean\n\tonExpandedChange: (value: boolean) => unknown\n\tisPropagatingEvents?: boolean\n\tisBig?: boolean\n\tisUnformattedLabel?: boolean\n\tshowWarning?: boolean\n\tcolor?: string\n\tstyle?: Record<string, any>\n}\nexport type ExpanderPanelAttrs = {\n\texpanded: boolean\n}\n\nexport class ExpanderButton implements Component<ExpanderAttrs> {\n\tview(vnode: Vnode<ExpanderAttrs>): Children {\n\t\tconst a = vnode.attrs\n\t\tconst label = lang.getTranslationText(a.label)\n\t\treturn m(\n\t\t\t\".limit-width\",\n\t\t\tm(\n\t\t\t\t\"button.expander.bg-transparent.pt-s.hover-ul.limit-width.flex.items-center.b.text-ellipsis.flash\",\n\t\t\t\t{\n\t\t\t\t\tstyle: a.style,\n\t\t\t\t\tonclick: (event: MouseEvent) => {\n\t\t\t\t\t\ta.onExpandedChange(!a.expanded)\n\t\t\t\t\t\tif (!a.isPropagatingEvents) event.stopPropagation()\n\t\t\t\t\t},\n\t\t\t\t\tonkeydown: (e: KeyboardEvent) => {\n\t\t\t\t\t\tif (isKeyPressed(e.key, Keys.SPACE, Keys.RETURN)) {\n\t\t\t\t\t\t\ta.onExpandedChange(!a.expanded)\n\t\t\t\t\t\t\tif (!a.isPropagatingEvents) e.preventDefault()\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"aria-expanded\": String(a.expanded),\n\t\t\t\t},\n\t\t\t\t[\n\t\t\t\t\ta.showWarning\n\t\t\t\t\t\t? m(Icon, {\n\t\t\t\t\t\t\t\ticon: Icons.Warning,\n\t\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\t\tfill: a.color ? a.color : theme.content_button,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t  })\n\t\t\t\t\t\t: null,\n\t\t\t\t\tm(\n\t\t\t\t\t\t`${a.isBig ? \"span\" : \"small\"}`,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\tcolor: a.color || theme.content_button,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\ta.isUnformattedLabel ? label : label.toUpperCase(),\n\t\t\t\t\t),\n\t\t\t\t\tm(Icon, {\n\t\t\t\t\t\ticon: BootIcons.Expand,\n\t\t\t\t\t\tclass: \"flex-center items-center\",\n\t\t\t\t\t\tsize: a.isBig ? IconSize.Medium : IconSize.Normal,\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\tfill: a.color ? a.color : theme.content_button,\n\t\t\t\t\t\t\t\"margin-right\": px(-4),\n\t\t\t\t\t\t\t// icon is has 4px whitespace to the right,\n\t\t\t\t\t\t\ttransform: `rotateZ(${a.expanded ? 180 : 0}deg)`,\n\t\t\t\t\t\t\ttransition: `transform ${DefaultAnimationTime}ms`,\n\t\t\t\t\t\t},\n\t\t\t\t\t}),\n\t\t\t\t],\n\t\t\t),\n\t\t)\n\t}\n}\n\n/**\n * Panel which shows or hides content depending on the attrs.expanded and animates transitions.\n */\nexport class ExpanderPanel implements Component<ExpanderPanelAttrs> {\n\tchildDiv: HTMLElement | null = null\n\t// There are some cases where the child div will be added to and a redraw won't be triggered, in which case\n\t// the expander panel won't update until some kind of interaction happens.\n\t// Unfortunately no one knows what these cases are anymore besides some direct mutation.\n\tobserver: MutationObserver | null = null\n\t// We calculate the height manually because we need concrete values for the transition (can't just transition from 0px to 100%)\n\tlastCalculatedHeight: number | null = null\n\t// We remove the children from the DOM to take them out of the taborder. Setting \"tabindex = -1\" on the element will not work because\n\t// it does not apply to any children\n\tchildrenInDom: boolean | null = null\n\tsetChildrenInDomTimeout: TimeoutID | null\n\n\toninit(vnode: Vnode<ExpanderPanelAttrs>) {\n\t\tthis.childrenInDom = vnode.attrs.expanded\n\t\tthis.observer = new MutationObserver((mutations) => {\n\t\t\t// redraw if a child has been added that won't be getting displayed\n\t\t\tif (this.childDiv && this.childDiv.getBoundingClientRect().height !== this.lastCalculatedHeight) {\n\t\t\t\tm.redraw()\n\t\t\t}\n\t\t})\n\t}\n\n\tonbeforeupdate(vnode: Vnode<ExpanderPanelAttrs>, old: Vnode<ExpanderPanelAttrs>): boolean {\n\t\tconst oldExpanded = old.attrs.expanded\n\t\tconst currentExpanded = vnode.attrs.expanded\n\n\t\tif (oldExpanded !== currentExpanded) {\n\t\t\tthis.handleExpansionStateChanged(currentExpanded)\n\t\t}\n\n\t\treturn true\n\t}\n\n\tview(vnode: Vnode<ExpanderPanelAttrs>): Children {\n\t\tconst expanded = vnode.attrs.expanded\n\t\t// getBoundingClientRect() gives us the correct size, with a fraction\n\t\tthis.lastCalculatedHeight = this.childDiv?.getBoundingClientRect().height ?? 0\n\t\treturn m(\n\t\t\t\".expander-panel\",\n\t\t\t// We want overflow while expanded in some specific cases like dropdowns, but generally we don't want it because we want to clip our children\n\t\t\t// for animation and sizing, so we enable it only when expanded\n\t\t\tm(\n\t\t\t\texpanded ? \"div\" : \".overflow-hidden\",\n\t\t\t\t{\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\topacity: expanded ? \"1\" : \"0\",\n\t\t\t\t\t\theight: expanded ? `${this.lastCalculatedHeight}px` : \"0px\",\n\t\t\t\t\t\ttransition: `opacity ${DefaultAnimationTime}ms ease-out, height ${DefaultAnimationTime}ms ease-out`,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t// we use this wrapper to measure the child reliably\n\t\t\t\t// just a marker class\n\t\t\t\tm(\n\t\t\t\t\t\".expander-child-wrapper\",\n\t\t\t\t\t{\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t// one way to deal with collapsible margins.\n\t\t\t\t\t\t\t// CSS is fun in the way that it likes to collapse some vertical margins in some cases.\n\t\t\t\t\t\t\t// https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Box_Model/Mastering_margin_collapsing\n\t\t\t\t\t\t\t// One of such cases is when there's no content between the parent and the child and no margins or borders.\n\t\t\t\t\t\t\t// So assuming that the child we want to display inside has a margin-top set it would actually overflow our child-wrapper on the\n\t\t\t\t\t\t\t// top. Which means all our sizing is wrong.\n\t\t\t\t\t\t\t// There are few ways to prevent this, one of them is `display: flow-root`. It should have no side effects except for some\n\t\t\t\t\t\t\t// `display: float` items but if you are using `float` still you have no one to blame but yourself.\n\t\t\t\t\t\t\t// we could set `overflow: hidden` here instead but we do measure this element so we probably shouldn't\n\t\t\t\t\t\t\tdisplay: \"flow-root\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\toncreate: (vnode) => {\n\t\t\t\t\t\t\tthis.childDiv = vnode.dom as HTMLElement\n\t\t\t\t\t\t\tassertNotNull(this.observer).observe(this.childDiv, {\n\t\t\t\t\t\t\t\tchildList: true,\n\t\t\t\t\t\t\t\tsubtree: true,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonremove: () => {\n\t\t\t\t\t\t\tthis.observer?.disconnect()\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tthis.childrenInDom ? vnode.children : null,\n\t\t\t\t),\n\t\t\t),\n\t\t)\n\t}\n\n\tprivate handleExpansionStateChanged(expanded: boolean) {\n\t\tclearTimeout(this.setChildrenInDomTimeout)\n\n\t\tif (expanded) {\n\t\t\tthis.childrenInDom = true\n\t\t} else {\n\t\t\tthis.setChildrenInDomTimeout = setTimeout(() => {\n\t\t\t\tthis.childrenInDom = false\n\t\t\t\tm.redraw()\n\t\t\t}, DefaultAnimationTime)\n\t\t}\n\t}\n}\n"],"mappings":"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"}