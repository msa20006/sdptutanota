{"version":3,"file":"ShortcutDialog-DjCZjOxh.js","names":["shortcut: Shortcut","shortcuts: Array<Shortcut>","vnode: Vnode<ShortcutDialogAttrs>"],"sources":["../../src/common/gui/dialogs/ShortcutDialog.ts"],"sourcesContent":["import { lang, Translation } from \"../../misc/LanguageViewModel\"\nimport m, { Component, Vnode } from \"mithril\"\nimport { Dialog } from \"../base/Dialog\"\nimport { Keys } from \"../../api/common/TutanotaConstants\"\nimport { TextField } from \"../base/TextField.js\"\nimport type { Shortcut } from \"../../misc/KeyManager\"\nimport { ButtonType } from \"../base/Button.js\"\nimport { DialogHeaderBarAttrs } from \"../base/DialogHeaderBar\"\nimport { isAppleDevice } from \"../../api/common/Env.js\"\n\nfunction makeShortcutName(shortcut: Shortcut): Translation {\n\tconst mainModifier = isAppleDevice() ? Keys.META.name : Keys.CTRL.name\n\n\treturn lang.makeTranslation(\n\t\tshortcut.help,\n\t\t(shortcut.meta ? Keys.META.name + \" + \" : \"\") +\n\t\t\t(shortcut.ctrlOrCmd ? mainModifier + \" + \" : \"\") +\n\t\t\t(shortcut.ctrl ? Keys.CTRL.name + \" + \" : \"\") +\n\t\t\t(shortcut.shift ? Keys.SHIFT.name + \" + \" : \"\") +\n\t\t\t(shortcut.alt ? Keys.ALT.name + \" + \" : \"\") +\n\t\t\tshortcut.key.name,\n\t)\n}\n\n/**\n * return a promise that resolves when the dialog is closed\n */\nexport function showShortcutDialog(shortcuts: Array<Shortcut>): Promise<void> {\n\treturn Dialog.viewerDialog(\"keyboardShortcuts_title\", ShortcutDialog, {\n\t\tshortcuts,\n\t})\n}\n\ntype ShortcutDialogAttrs = {\n\tshortcuts: Array<Shortcut>\n}\n\n/**\n * The Dialog that shows the currently active Keyboard shortcuts when you press F1\n *\n *\n */\n\nclass ShortcutDialog implements Component<ShortcutDialogAttrs> {\n\tview(vnode: Vnode<ShortcutDialogAttrs>) {\n\t\tconst { shortcuts } = vnode.attrs\n\t\tconst textFieldAttrs = shortcuts\n\t\t\t.filter((shortcut) => shortcut.enabled == null || shortcut.enabled())\n\t\t\t.map((shortcut) => ({\n\t\t\t\tlabel: makeShortcutName(shortcut),\n\t\t\t\tvalue: lang.get(shortcut.help),\n\t\t\t\tisReadOnly: true,\n\t\t\t}))\n\t\treturn m(\n\t\t\t\"div.pb\",\n\t\t\ttextFieldAttrs.map((t) => m(TextField, t)),\n\t\t)\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUA,SAAS,iBAAiBA,UAAiC;CAC1D,MAAM,eAAe,eAAe,GAAG,KAAK,KAAK,OAAO,KAAK,KAAK;AAElE,QAAO,KAAK,gBACX,SAAS,OACR,SAAS,OAAO,KAAK,KAAK,OAAO,QAAQ,OACxC,SAAS,YAAY,eAAe,QAAQ,OAC5C,SAAS,OAAO,KAAK,KAAK,OAAO,QAAQ,OACzC,SAAS,QAAQ,KAAK,MAAM,OAAO,QAAQ,OAC3C,SAAS,MAAM,KAAK,IAAI,OAAO,QAAQ,MACxC,SAAS,IAAI,KACd;AACD;AAKM,SAAS,mBAAmBC,WAA2C;AAC7E,QAAO,OAAO,aAAa,2BAA2B,gBAAgB,EACrE,UACA,EAAC;AACF;IAYK,iBAAN,MAA+D;CAC9D,KAAKC,OAAmC;EACvC,MAAM,EAAE,WAAW,GAAG,MAAM;EAC5B,MAAM,iBAAiB,UACrB,OAAO,CAAC,aAAa,SAAS,WAAW,QAAQ,SAAS,SAAS,CAAC,CACpE,IAAI,CAAC,cAAc;GACnB,OAAO,iBAAiB,SAAS;GACjC,OAAO,KAAK,IAAI,SAAS,KAAK;GAC9B,YAAY;EACZ,GAAE;AACJ,SAAO,gBACN,UACA,eAAe,IAAI,CAAC,MAAM,gBAAE,WAAW,EAAE,CAAC,CAC1C;CACD;AACD"}