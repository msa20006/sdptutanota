{"version":3,"file":"DesktopFileFacadeTest-C-8eR8kB.js","names":["win: ApplicationWindow","conf: DesktopConfig","du: DesktopUtils","dp: DateProvider","fetch: FetchImpl","electron: ElectronExports","fs: FsExports","tfs: TempFs","ff: DesktopFileFacade","response: FetchResult","ws: fs.WriteStream","rs: fs.ReadStream","ws?: fs.WriteStream","matcherArgs: any[]","actual: any","response?: FetchResult","statusCode: number","resOpts: {\n\t\tresponseBody?: Uint8Array\n\t\tresponseHeaders?: Record<string, string>\n\t}"],"sources":["../tests/desktop/files/DesktopFileFacadeTest.ts"],"sourcesContent":["import o from \"@tutao/otest\"\nimport { createDataFile } from \"../../../../src/common/api/common/DataFile.js\"\nimport { DesktopFileFacade } from \"../../../../src/common/desktop/files/DesktopFileFacade.js\"\nimport { ApplicationWindow } from \"../../../../src/common/desktop/ApplicationWindow.js\"\nimport { func, matchers, object, verify, when } from \"testdouble\"\nimport { ElectronExports, FsExports } from \"../../../../src/common/desktop/ElectronExportTypes.js\"\nimport { NotFoundError, PreconditionFailedError, TooManyRequestsError } from \"../../../../src/common/api/common/error/RestError.js\"\nimport type fs from \"node:fs\"\nimport { assertThrows } from \"@tutao/tutanota-test-utils\"\nimport n from \"../../nodemocker.js\"\nimport { stringToUtf8Uint8Array } from \"@tutao/tutanota-utils\"\nimport { DesktopConfig } from \"../../../../src/common/desktop/config/DesktopConfig.js\"\nimport { DesktopUtils } from \"../../../../src/common/desktop/DesktopUtils.js\"\nimport { DateProvider } from \"../../../../src/common/api/common/DateProvider.js\"\nimport { TempFs } from \"../../../../src/common/desktop/files/TempFs.js\"\nimport { BuildConfigKey, DesktopConfigKey } from \"../../../../src/common/desktop/config/ConfigKeys.js\"\nimport { HttpMethod } from \"../../../../src/common/api/common/EntityFunctions\"\nimport { FetchImpl, FetchResult } from \"../../../../src/common/desktop/net/NetAgent\"\n\nconst DEFAULT_DOWNLOAD_PATH = \"/a/download/path/\"\n\no.spec(\"DesktopFileFacade\", function () {\n\tlet win: ApplicationWindow\n\tlet conf: DesktopConfig\n\tlet du: DesktopUtils\n\tlet dp: DateProvider\n\tlet fetch: FetchImpl\n\tlet electron: ElectronExports\n\tlet fs: FsExports\n\tlet tfs: TempFs\n\tlet ff: DesktopFileFacade\n\n\to.beforeEach(function () {\n\t\twin = object()\n\t\tfetch = func() as FetchImpl\n\t\tfs = object()\n\t\ttfs = object()\n\t\tfs.promises = object()\n\t\twhen(fs.promises.stat(matchers.anything())).thenResolve({ size: 42 })\n\t\telectron = object()\n\t\t// @ts-ignore read-only prop\n\t\telectron[\"shell\"] = object()\n\t\t// @ts-ignore read-only prop\n\t\telectron[\"dialog\"] = object()\n\n\t\tconf = object()\n\t\tdu = object()\n\t\tdp = object()\n\n\t\tff = new DesktopFileFacade(win, conf, dp, fetch, electron, tfs, fs)\n\t})\n\to.spec(\"saveDataFile\", function () {\n\t\to(\"when there's no existing file it will be simply written\", async function () {\n\t\t\tconst dataFile = createDataFile(\"blob\", \"application/octet-stream\", new Uint8Array([1]))\n\t\t\twhen(fs.promises.readdir(matchers.anything())).thenResolve([\"somethingelse\"])\n\t\t\twhen(fs.promises.mkdir(\"/tutanota/tmp/path/download\", { recursive: true })).thenResolve(undefined)\n\t\t\twhen(fs.promises.writeFile(\"/tutanota/tmp/path/download/blob\", dataFile.data)).thenResolve()\n\t\t\tawait ff.writeDataFile(dataFile)\n\t\t})\n\n\t\to(\"with default download path but file exists -> nonclobbering name is chosen\", async function () {\n\t\t\tconst e = new Error() as any\n\t\t\te.code = \"EEXISTS\"\n\t\t\tconst dataFile = createDataFile(\"blob\", \"application/octet-stream\", new Uint8Array([1]))\n\t\t\twhen(fs.promises.writeFile(\"/tutanota/tmp/path/download/blob\", matchers.anything())).thenReject(e)\n\t\t\twhen(fs.promises.readdir(matchers.anything())).thenResolve([\"blob\"])\n\t\t\twhen(fs.promises.mkdir(\"/tutanota/tmp/path/download\", { recursive: true })).thenResolve(undefined)\n\t\t\twhen(fs.promises.writeFile(\"/tutanota/tmp/path/download/blob-1\", dataFile.data)).thenResolve()\n\t\t\tawait ff.writeDataFile(dataFile)\n\t\t})\n\t})\n\n\to.spec(\"download\", function () {\n\t\to(\"no error\", async function () {\n\t\t\tconst headers = { v: \"foo\", accessToken: \"bar\" }\n\t\t\tconst expectedFilePath = \"/tutanota/tmp/path/encrypted/nativelyDownloadedFile\"\n\t\t\tconst response: FetchResult = mockResponse(200, { responseBody: new Uint8Array() })\n\t\t\tconst ws: fs.WriteStream = mockWriteStream(response)\n\t\t\twhen(fs.createWriteStream(expectedFilePath, { emitClose: true })).thenReturn(ws)\n\t\t\twhen(\n\t\t\t\tfetch(urlMatches(new URL(\"some://url/file\")), {\n\t\t\t\t\tmethod: \"GET\",\n\t\t\t\t\theaders,\n\t\t\t\t}),\n\t\t\t).thenResolve(response)\n\t\t\t// @ts-ignore callback omit\n\t\t\twhen(ws.on(\"finish\")).thenCallback(undefined, undefined)\n\t\t\twhen(tfs.ensureEncryptedDir()).thenResolve(\"/tutanota/tmp/path/encrypted\")\n\n\t\t\tconst downloadResult = await ff.download(\"some://url/file\", \"nativelyDownloadedFile\", headers)\n\t\t\to(downloadResult.statusCode).equals(200)\n\t\t\to(downloadResult.encryptedFileUri).equals(expectedFilePath)\n\t\t})\n\n\t\to(\"404 error gets returned\", async function () {\n\t\t\tconst headers = {\n\t\t\t\tv: \"foo\",\n\t\t\t\taccessToken: \"bar\",\n\t\t\t}\n\n\t\t\tconst errorId = \"123\"\n\t\t\tconst response: FetchResult = mockResponse(NotFoundError.CODE, {\n\t\t\t\tresponseHeaders: {\n\t\t\t\t\t\"error-id\": errorId,\n\t\t\t\t},\n\t\t\t})\n\t\t\twhen(fetch(matchers.anything(), matchers.anything())).thenResolve(response)\n\t\t\tconst result = await ff.download(\"some://url/file\", \"nativelyDownloadedFile\", headers)\n\n\t\t\to(result).deepEquals({\n\t\t\t\tstatusCode: 404,\n\t\t\t\terrorId,\n\t\t\t\tprecondition: null,\n\t\t\t\tsuspensionTime: null,\n\t\t\t\tencryptedFileUri: null,\n\t\t\t})\n\t\t\tverify(fs.createWriteStream(matchers.anything(), matchers.anything()), { times: 0 })\n\t\t})\n\n\t\to(\"retry-after\", async function () {\n\t\t\tconst retryAfter = \"20\"\n\t\t\tconst errorId = \"123\"\n\n\t\t\tconst response: FetchResult = mockResponse(TooManyRequestsError.CODE, {\n\t\t\t\tresponseHeaders: {\n\t\t\t\t\t\"error-id\": errorId,\n\t\t\t\t\t\"retry-after\": retryAfter,\n\t\t\t\t},\n\t\t\t})\n\t\t\twhen(fetch(matchers.anything(), matchers.anything())).thenResolve(response)\n\n\t\t\tconst headers = { v: \"foo\", accessToken: \"bar\" }\n\t\t\tconst result = await ff.download(\"some://url/file\", \"nativelyDownloadedFile\", headers)\n\n\t\t\to(result).deepEquals({\n\t\t\t\tstatusCode: TooManyRequestsError.CODE,\n\t\t\t\terrorId,\n\t\t\t\tprecondition: null,\n\t\t\t\tsuspensionTime: retryAfter,\n\t\t\t\tencryptedFileUri: null,\n\t\t\t})\n\t\t\tverify(fs.createWriteStream(matchers.anything(), matchers.anything()), { times: 0 })\n\t\t})\n\n\t\to(\"suspension\", async function () {\n\t\t\tconst headers = { v: \"foo\", accessToken: \"bar\" }\n\t\t\tconst errorId = \"123\"\n\t\t\tconst retryAfter = \"20\"\n\t\t\tconst response: FetchResult = mockResponse(TooManyRequestsError.CODE, {\n\t\t\t\tresponseHeaders: {\n\t\t\t\t\t\"error-id\": errorId,\n\t\t\t\t\t\"suspension-time\": retryAfter,\n\t\t\t\t},\n\t\t\t})\n\t\t\twhen(fetch(matchers.anything(), matchers.anything())).thenResolve(response)\n\n\t\t\tconst result = await ff.download(\"some://url/file\", \"nativelyDownloadedFile\", headers)\n\n\t\t\to(result).deepEquals({\n\t\t\t\tstatusCode: TooManyRequestsError.CODE,\n\t\t\t\terrorId,\n\t\t\t\tprecondition: null,\n\t\t\t\tsuspensionTime: retryAfter,\n\t\t\t\tencryptedFileUri: null,\n\t\t\t})\n\t\t\tverify(fs.createWriteStream(matchers.anything(), matchers.anything()), { times: 0 })\n\t\t})\n\n\t\to(\"precondition\", async function () {\n\t\t\tconst headers = { v: \"foo\", accessToken: \"bar\" }\n\t\t\tconst errorId = \"123\"\n\t\t\tconst precondition = \"a.2\"\n\t\t\tconst response: FetchResult = mockResponse(PreconditionFailedError.CODE, {\n\t\t\t\tresponseHeaders: {\n\t\t\t\t\t\"error-id\": errorId,\n\t\t\t\t\tprecondition: precondition,\n\t\t\t\t},\n\t\t\t})\n\t\t\twhen(fetch(matchers.anything(), matchers.anything())).thenResolve(response)\n\n\t\t\tconst result = await ff.download(\"some://url/file\", \"nativelyDownloadedFile\", headers)\n\n\t\t\to(result).deepEquals({\n\t\t\t\tstatusCode: PreconditionFailedError.CODE,\n\t\t\t\terrorId,\n\t\t\t\tprecondition,\n\t\t\t\tsuspensionTime: null,\n\t\t\t\tencryptedFileUri: null,\n\t\t\t})\n\t\t\tverify(fs.createWriteStream(matchers.anything(), matchers.anything()), { times: 0 })\n\t\t})\n\n\t\to(\"IO error during download leads to cleanup and error is thrown\", async function () {\n\t\t\tconst headers = { v: \"foo\", accessToken: \"bar\" }\n\t\t\tconst response: FetchResult = mockResponse(200, { responseBody: new Uint8Array() })\n\t\t\twhen(fetch(matchers.anything(), matchers.anything())).thenResolve(response)\n\t\t\tconst error = new Error(\"Test! I/O error\")\n\t\t\tconst ws = mockWriteStream()\n\t\t\twhen(ws.on(\"finish\", matchers.anything())).thenThrow(error)\n\t\t\twhen(fs.createWriteStream(matchers.anything(), matchers.anything())).thenReturn(ws)\n\t\t\twhen(tfs.ensureEncryptedDir()).thenResolve(\"/tutanota/tmp/path/encrypted\")\n\n\t\t\tconst e = await assertThrows(Error, () => ff.download(\"some://url/file\", \"nativelyDownloadedFile\", headers))\n\t\t\to(e).equals(error)\n\t\t\tverify(fs.promises.unlink(\"/tutanota/tmp/path/encrypted/nativelyDownloadedFile\"), { times: 1 })\n\t\t})\n\t})\n\n\to.spec(\"upload\", function () {\n\t\tconst fileToUploadPath = \"/tutnaota/tmp/path/encrypted/toUpload.txt\"\n\t\tconst targetUrl = \"https://test.tutanota.com/rest/for/a/bit\"\n\n\t\to(\"when there's no error it uploads correct data and returns the right result\", async function () {\n\t\t\tconst body = stringToUtf8Uint8Array(\"BODY\")\n\t\t\tconst response = mockResponse(200, { responseBody: body })\n\t\t\tconst headers = {\n\t\t\t\tblobAccessToken: \"1236\",\n\t\t\t}\n\t\t\tconst fileStreamMock = mockReadStream()\n\t\t\twhen(fs.createReadStream(fileToUploadPath)).thenReturn(fileStreamMock)\n\t\t\twhen(\n\t\t\t\tfetch(urlMatches(new URL(targetUrl)), {\n\t\t\t\t\tmethod: HttpMethod.POST,\n\t\t\t\t\theaders,\n\t\t\t\t\tbody: fileStreamMock,\n\t\t\t\t}),\n\t\t\t).thenResolve(response)\n\t\t\tconst uploadResult = await ff.upload(fileToUploadPath, targetUrl, HttpMethod.POST, headers)\n\n\t\t\to(uploadResult.statusCode).equals(200)\n\t\t\to(uploadResult.errorId).equals(null)\n\t\t\to(uploadResult.precondition).equals(null)\n\t\t\to(uploadResult.suspensionTime).equals(null)\n\t\t\to(Array.from(uploadResult.responseBody)).deepEquals(Array.from(body))\n\t\t})\n\n\t\to(\"when 404 is returned it returns correct result\", async function () {\n\t\t\tconst errorId = \"123\"\n\t\t\tconst response = mockResponse(404, { responseHeaders: { \"error-id\": errorId } })\n\t\t\twhen(fetch(matchers.anything(), matchers.anything())).thenResolve(response)\n\t\t\tconst uploadResult = await ff.upload(fileToUploadPath, targetUrl, HttpMethod.POST, {})\n\t\t\to(uploadResult.statusCode).equals(404)\n\t\t\to(uploadResult.errorId).equals(errorId)\n\t\t\to(uploadResult.precondition).equals(null)\n\t\t\to(uploadResult.suspensionTime).equals(null)\n\t\t\to(Array.from(uploadResult.responseBody)).deepEquals([])\n\t\t})\n\n\t\to(\"when retry-after is returned, it is propagated\", async function () {\n\t\t\tconst retryAFter = \"20\"\n\t\t\tconst errorId = \"123\"\n\t\t\tconst response = mockResponse(TooManyRequestsError.CODE, {\n\t\t\t\tresponseHeaders: {\n\t\t\t\t\t\"error-id\": errorId,\n\t\t\t\t\t\"retry-after\": retryAFter,\n\t\t\t\t},\n\t\t\t})\n\t\t\twhen(fetch(matchers.anything(), matchers.anything())).thenResolve(response)\n\n\t\t\tconst uploadResult = await ff.upload(fileToUploadPath, targetUrl, HttpMethod.POST, {})\n\n\t\t\to(uploadResult.statusCode).equals(TooManyRequestsError.CODE)\n\t\t\to(uploadResult.errorId).equals(errorId)\n\t\t\to(uploadResult.precondition).equals(null)\n\t\t\to(uploadResult.suspensionTime).equals(retryAFter)\n\t\t\to(Array.from(uploadResult.responseBody)).deepEquals([])\n\t\t})\n\n\t\to(\"when suspension-time is returned, it is propagated\", async function () {\n\t\t\tconst retryAFter = \"20\"\n\t\t\tconst errorId = \"123\"\n\t\t\tconst response = mockResponse(TooManyRequestsError.CODE, {\n\t\t\t\tresponseHeaders: {\n\t\t\t\t\t\"error-id\": errorId,\n\t\t\t\t\t\"suspension-time\": retryAFter,\n\t\t\t\t},\n\t\t\t})\n\t\t\twhen(fetch(matchers.anything(), matchers.anything())).thenResolve(response)\n\t\t\tconst uploadResult = await ff.upload(fileToUploadPath, targetUrl, HttpMethod.POST, {})\n\n\t\t\to(uploadResult.statusCode).equals(TooManyRequestsError.CODE)\n\t\t\to(uploadResult.errorId).equals(errorId)\n\t\t\to(uploadResult.precondition).equals(null)\n\t\t\to(uploadResult.suspensionTime).equals(retryAFter)\n\t\t\to(Array.from(uploadResult.responseBody)).deepEquals([])\n\t\t})\n\n\t\to(\"when precondition-time is returned, it is propagated\", async function () {\n\t\t\tconst precondition = \"a.2\"\n\t\t\tconst errorId = \"123\"\n\t\t\tconst response = mockResponse(PreconditionFailedError.CODE, {\n\t\t\t\tresponseHeaders: {\n\t\t\t\t\t\"error-id\": errorId,\n\t\t\t\t\tprecondition: precondition,\n\t\t\t\t},\n\t\t\t})\n\t\t\twhen(fetch(matchers.anything(), matchers.anything())).thenResolve(response)\n\n\t\t\tconst uploadResult = await ff.upload(fileToUploadPath, targetUrl, HttpMethod.POST, {})\n\n\t\t\to(uploadResult.statusCode).equals(PreconditionFailedError.CODE)\n\t\t\to(uploadResult.errorId).equals(errorId)\n\t\t\to(uploadResult.precondition).equals(precondition)\n\t\t\to(uploadResult.suspensionTime).equals(null)\n\t\t\to(Array.from(uploadResult.responseBody)).deepEquals([])\n\t\t})\n\t})\n\n\to.spec(\"open\", function () {\n\t\to(\"open valid\", async function () {\n\t\t\twhen(electron.shell.openPath(\"/some/folder/file\")).thenResolve(\"\")\n\t\t\tawait ff.open(\"/some/folder/file\")\n\t\t})\n\n\t\to(\"open invalid\", async () => {\n\t\t\tawait assertThrows(Error, () => ff.open(\"invalid\"))\n\t\t\tverify(electron.shell.openPath(\"invalid\"), { times: 1 })\n\t\t})\n\n\t\to(\"open on windows\", async function () {\n\t\t\tn.setPlatform(\"win32\")\n\t\t\twhen(electron.dialog.showMessageBox(matchers.anything())).thenReturn(\n\t\t\t\tPromise.resolve({\n\t\t\t\t\tresponse: 1,\n\t\t\t\t\tcheckboxChecked: false,\n\t\t\t\t}),\n\t\t\t)\n\t\t\tawait ff.open(\"exec.exe\")\n\t\t\tverify(electron.shell.openPath(matchers.anything()), { times: 0 })\n\t\t})\n\t})\n\n\to.spec(\"join\", function () {\n\t\to(\"join a single file\", async function () {\n\t\t\tconst ws: fs.WriteStream = mockWriteStream()\n\t\t\tconst rs: fs.ReadStream = mockReadStream(ws)\n\t\t\twhen(fs.createWriteStream(matchers.anything(), matchers.anything())).thenReturn(ws)\n\t\t\twhen(fs.createReadStream(matchers.anything())).thenReturn(rs)\n\t\t\t// @ts-ignore callback omit\n\t\t\twhen(rs.on(\"end\")).thenCallback(undefined, undefined)\n\t\t\twhen(fs.promises.readdir(\"/tutanota/tmp/path/unencrypted\")).thenResolve([\"folderContents\"])\n\t\t\twhen(tfs.ensureUnencrytpedDir()).thenResolve(\"/tutanota/tmp/path/unencrypted\")\n\t\t\tconst joinedFilePath = await ff.joinFiles(\"fileName.pdf\", [\"/file1\"])\n\t\t\to(joinedFilePath).equals(\"/tutanota/tmp/path/unencrypted/fileName.pdf\")\n\t\t})\n\t})\n\n\to.spec(\"splitFile\", function () {\n\t\to(\"returns one slice for a small file\", async function () {\n\t\t\t// fs mock returns file name as the content\n\t\t\tconst filename = \"/tutanota/tmp/path/download/small.txt\"\n\t\t\tconst fileContent = stringToUtf8Uint8Array(filename)\n\t\t\tconst filenameHash = \"9ca089f82e397e9e860daa312ac25def39f2da0e066f0de94ffc02aa7b3a6250\"\n\t\t\tconst expectedChunkPath = `/tutanota/tmp/path/unencrypted/${filenameHash}.0.blob`\n\t\t\twhen(tfs.ensureUnencrytpedDir()).thenResolve(\"/tutanota/tmp/path/unencrypted\")\n\t\t\twhen(fs.promises.writeFile(expectedChunkPath, fileContent)).thenResolve()\n\t\t\twhen(fs.promises.readFile(filename)).thenResolve(Buffer.from(fileContent))\n\t\t\tconst chunks = await ff.splitFile(filename, 1024)\n\t\t\to(chunks).deepEquals([expectedChunkPath])(\"only one chunk\")\n\t\t})\n\n\t\to(\"returns multiple slices for a bigger file\", async function () {\n\t\t\t// fs mock returns file name as the content\n\t\t\tconst filename = \"/tutanota/tmp/path/download/big.txt\"\n\t\t\t// length 37\n\t\t\tconst fileContent = stringToUtf8Uint8Array(filename)\n\t\t\tconst filenameHash = \"c24646a4738a92d624cd03134f26c371d8a2950d2b3bbce7921c288de9a56fd3\"\n\t\t\tconst expectedChunkPath0 = `/tutanota/tmp/path/unencrypted/${filenameHash}.0.blob`\n\t\t\tconst expectedChunkPath1 = `/tutanota/tmp/path/unencrypted/${filenameHash}.1.blob`\n\n\t\t\twhen(tfs.ensureUnencrytpedDir()).thenResolve(\"/tutanota/tmp/path/unencrypted\")\n\t\t\twhen(fs.promises.writeFile(expectedChunkPath0, fileContent.slice(0, 30))).thenResolve()\n\t\t\twhen(fs.promises.writeFile(expectedChunkPath1, fileContent.slice(30))).thenResolve()\n\t\t\twhen(fs.promises.readFile(filename)).thenResolve(Buffer.from(fileContent))\n\t\t\tconst chunks = await ff.splitFile(filename, 30)\n\t\t\to(chunks).deepEquals([expectedChunkPath0, expectedChunkPath1])(\"both written files are in the returned array\")\n\t\t})\n\t})\n\n\to.spec(\"showInFileExplorer\", function () {\n\t\to(\"two downloads, open two filemanagers\", async function () {\n\t\t\tconst dir = \"/path/to\"\n\t\t\tconst p = dir + \"/file.txt\"\n\t\t\tawait ff.showInFileExplorer(p)\n\t\t\tverify(electron.shell.openPath(dir), { times: 1 })\n\t\t})\n\n\t\to(\"two downloads, open two filemanagers after a pause\", async function () {\n\t\t\tconst time = 1629115820468\n\t\t\tconst dir = \"/path/to\"\n\t\t\tconst p = dir + \"/file.txt\"\n\t\t\tawait ff.showInFileExplorer(p)\n\t\t\twhen(dp.now()).thenReturn(time)\n\t\t\twhen(conf.getConst(BuildConfigKey.fileManagerTimeout)).thenResolve(2)\n\t\t\tverify(electron.shell.openPath(dir), { times: 1 })\n\t\t\twhen(dp.now()).thenReturn(time + 10)\n\t\t\tawait ff.showInFileExplorer(p)\n\t\t\tverify(electron.shell.openPath(dir), { times: 2 })\n\t\t})\n\t})\n\n\to.spec(\"putFileIntoDownloadsFolder\", function () {\n\t\to(\"putFileIntoDownloadsFolder\", async function () {\n\t\t\tconst src = \"/path/random.pdf\"\n\t\t\tconst filename = \"fileName.pdf\"\n\t\t\twhen(conf.getVar(DesktopConfigKey.defaultDownloadPath)).thenResolve(DEFAULT_DOWNLOAD_PATH)\n\t\t\twhen(fs.promises.readdir(matchers.anything())).thenResolve([])\n\t\t\tconst copiedFileUri = await ff.putFileIntoDownloadsFolder(src, filename)\n\t\t\tverify(fs.promises.copyFile(src, DEFAULT_DOWNLOAD_PATH + \"fileName.pdf\"))\n\t\t\to(copiedFileUri).equals(DEFAULT_DOWNLOAD_PATH + \"fileName.pdf\")\n\t\t})\n\t})\n\n\to.spec(\"size\", function () {\n\t\to(\"size\", async function () {\n\t\t\twhen(fs.promises.stat(matchers.anything())).thenResolve({ size: 33 })\n\t\t\to(await ff.getSize(\"/file1\")).equals(33)\n\t\t})\n\t})\n\n\to.spec(\"hash\", function () {\n\t\to(\"hash\", async function () {\n\t\t\twhen(fs.promises.readFile(\"/file1\")).thenResolve(new Uint8Array([0, 1, 2, 3]) as Buffer)\n\t\t\to(await ff.hashFile(\"/file1\")).equals(\"BU7ewdAh\")\n\t\t})\n\t})\n})\n\nfunction mockReadStream(ws?: fs.WriteStream): fs.ReadStream {\n\tconst rs: fs.ReadStream = object()\n\tif (ws != null) {\n\t\twhen(rs.pipe(ws, { end: false })).thenReturn(ws)\n\t}\n\n\treturn rs\n}\n\nconst urlMatches = matchers.create({\n\tname: \"urlMatches\",\n\tmatches(matcherArgs: any[], actual: any): boolean {\n\t\treturn (actual as URL).toString() === (matcherArgs[0] as URL).toString()\n\t},\n})\n\nfunction mockWriteStream(response?: FetchResult): fs.WriteStream {\n\tconst ws: fs.WriteStream = object()\n\tif (response != null) {\n\t\t// when(response.pipe(ws)).thenReturn(ws)\n\t}\n\tconst closeCapturer = matchers.captor()\n\twhen(ws.on(\"close\", closeCapturer.capture())).thenReturn(ws)\n\twhen(ws.close()).thenDo(() => closeCapturer.value())\n\treturn ws\n}\n\nfunction mockResponse(\n\tstatusCode: number,\n\tresOpts: {\n\t\tresponseBody?: Uint8Array\n\t\tresponseHeaders?: Record<string, string>\n\t},\n): FetchResult {\n\tconst { responseBody, responseHeaders } = resOpts\n\treturn new global.Response(responseBody, {\n\t\tstatus: statusCode,\n\t\theaders: new Headers(responseHeaders),\n\t}) as FetchResult\n}\n"],"mappings":"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"}