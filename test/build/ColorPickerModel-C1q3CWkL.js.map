{"version":3,"file":"ColorPickerModel-C1q3CWkL.js","names":["isDarkTheme: boolean","hue: number","variant: number","saturation: number","lightness: number","s: number","l: number"],"sources":["../../src/common/gui/base/colorPicker/ColorPickerModel.ts"],"sourcesContent":["import { hslToHex, normalizeHueAngle } from \"../Color.js\"\n\ntype NumberTuple<L extends number> = readonly number[] & { length: L }\n\ninterface PaletteSchema<L extends number> {\n\treadonly hueShift: NumberTuple<L>\n\treadonly saturation: NumberTuple<L>\n\treadonly lightness: NumberTuple<L>\n}\n\nexport class ColorPickerModel {\n\tstatic readonly PALETTE_SIZE = 8\n\treadonly paletteSchema: PaletteSchema<typeof ColorPickerModel.PALETTE_SIZE>\n\tprivate readonly variantIndexBySL: Map<string, number> = new Map()\n\n\tconstructor(private readonly isDarkTheme: boolean) {\n\t\tconst { hueShift: hueWindowH, saturation: hueWindowS, lightness: hueWindowL } = this.getHueWindowSchema()\n\n\t\tthis.paletteSchema = Object.freeze({\n\t\t\thueShift: [hueWindowH, 0, 0, -1, -1, 0, 0, 0],\n\t\t\tsaturation: [hueWindowS, 100, 54, 36, 27, 25, 28, 31],\n\t\t\tlightness: [hueWindowL, 87, 77, 66, 55, 46, 41, 36],\n\t\t} as const)\n\t}\n\n\tgetHueWindowColor(hue: number) {\n\t\tconst { saturation, lightness } = this.getHueWindowSchema()\n\t\treturn hslToHex({ h: hue, s: saturation, l: lightness })\n\t}\n\n\tprivate getHueWindowSchema() {\n\t\treturn {\n\t\t\thueShift: 0,\n\t\t\tsaturation: this.isDarkTheme ? 50 : 100,\n\t\t\tlightness: this.isDarkTheme ? 50 : 40,\n\t\t}\n\t}\n\n\tgetColor(hue: number, variant: number): { h: number; s: number; l: number } {\n\t\tconst h = normalizeHueAngle(hue + this.paletteSchema.hueShift[variant])\n\t\tconst s = this.paletteSchema.saturation[variant]\n\t\tconst l = this.paletteSchema.lightness[variant]\n\n\t\treturn { h, s, l }\n\t}\n\n\tgetVariantIndexBySL(saturation: number, lightness: number) {\n\t\tif (this.variantIndexBySL.size === 0) {\n\t\t\tfor (let i = 0; i < ColorPickerModel.PALETTE_SIZE; i++) {\n\t\t\t\tthis.variantIndexBySL.set(this.slKey(this.paletteSchema.saturation[i], this.paletteSchema.lightness[i]), i)\n\t\t\t}\n\t\t}\n\n\t\treturn this.variantIndexBySL.get(this.slKey(saturation, lightness))\n\t}\n\n\tprivate slKey(s: number, l: number) {\n\t\treturn `${s}_${l}`\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAUa,mBAAN,MAAM,iBAAiB;CAC7B,OAAgB,eAAe;CAC/B,AAAS;CACT,AAAiB,mBAAwC,IAAI;CAE7D,YAA6BA,aAAsB;EA6CnD,KA7C6B;EAC5B,MAAM,EAAE,UAAU,YAAY,YAAY,YAAY,WAAW,YAAY,GAAG,KAAK,oBAAoB;AAEzG,OAAK,gBAAgB,OAAO,OAAO;GAClC,UAAU;IAAC;IAAY;IAAG;IAAG;IAAI;IAAI;IAAG;IAAG;GAAE;GAC7C,YAAY;IAAC;IAAY;IAAK;IAAI;IAAI;IAAI;IAAI;IAAI;GAAG;GACrD,WAAW;IAAC;IAAY;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;GAAG;EACnD,EAAU;CACX;CAED,kBAAkBC,KAAa;EAC9B,MAAM,EAAE,YAAY,WAAW,GAAG,KAAK,oBAAoB;AAC3D,SAAO,SAAS;GAAE,GAAG;GAAK,GAAG;GAAY,GAAG;EAAW,EAAC;CACxD;CAED,AAAQ,qBAAqB;AAC5B,SAAO;GACN,UAAU;GACV,YAAY,KAAK,cAAc,KAAK;GACpC,WAAW,KAAK,cAAc,KAAK;EACnC;CACD;CAED,SAASA,KAAaC,SAAsD;EAC3E,MAAM,IAAI,kBAAkB,MAAM,KAAK,cAAc,SAAS,SAAS;EACvE,MAAM,IAAI,KAAK,cAAc,WAAW;EACxC,MAAM,IAAI,KAAK,cAAc,UAAU;AAEvC,SAAO;GAAE;GAAG;GAAG;EAAG;CAClB;CAED,oBAAoBC,YAAoBC,WAAmB;AAC1D,MAAI,KAAK,iBAAiB,SAAS,EAClC,MAAK,IAAI,IAAI,GAAG,IAAI,iBAAiB,cAAc,IAClD,MAAK,iBAAiB,IAAI,KAAK,MAAM,KAAK,cAAc,WAAW,IAAI,KAAK,cAAc,UAAU,GAAG,EAAE,EAAE;AAI7G,SAAO,KAAK,iBAAiB,IAAI,KAAK,MAAM,YAAY,UAAU,CAAC;CACnE;CAED,AAAQ,MAAMC,GAAWC,GAAW;AACnC,UAAQ,EAAE,EAAE,GAAG,EAAE;CACjB;AACD"}