{"version":3,"file":"KnowledgeBaseEditor-7OSLD2QV.js","names":["entry: KnowledgeBaseEntry | null","templateGroupInstances: TemplateGroupRoot","entityClient: EntityClient","provider: () => string","keywords: Array<KnowledgeBaseEntryKeyword>","keywords: string","entry: KnowledgeBaseEntry | null","templateGroupRoot: TemplateGroupRoot","headerBarAttrs: DialogHeaderBarAttrs","vnode: Vnode<KnowledgeBaseEditorModel>","model: KnowledgeBaseEditorModel","template: EmailTemplate"],"sources":["../../src/mail-app/settings/KnowledgeBaseEditorModel.ts","../../src/mail-app/settings/KnowledgeBaseEditor.ts"],"sourcesContent":["import type { EmailTemplate } from \"../../common/api/entities/tutanota/TypeRefs.js\"\nimport { EmailTemplateTypeRef } from \"../../common/api/entities/tutanota/TypeRefs.js\"\nimport { EntityClient } from \"../../common/api/common/EntityClient\"\nimport type { TemplateGroupRoot } from \"../../common/api/entities/tutanota/TypeRefs.js\"\nimport type { KnowledgeBaseEntry } from \"../../common/api/entities/tutanota/TypeRefs.js\"\nimport { createKnowledgeBaseEntry } from \"../../common/api/entities/tutanota/TypeRefs.js\"\nimport { clone, deduplicate, LazyLoaded, localeCompare, noOp, ofClass } from \"@tutao/tutanota-utils\"\nimport stream from \"mithril/stream\"\nimport Stream from \"mithril/stream\"\nimport { NotFoundError } from \"../../common/api/common/error/RestError\"\nimport { UserError } from \"../../common/api/main/UserError\"\nimport type { KnowledgeBaseEntryKeyword } from \"../../common/api/entities/tutanota/TypeRefs.js\"\nimport { createKnowledgeBaseEntryKeyword } from \"../../common/api/entities/tutanota/TypeRefs.js\"\n\nexport class KnowledgeBaseEditorModel {\n\ttitle: Stream<string>\n\tkeywords: Stream<string>\n\tprivate readonly _entityClient: EntityClient\n\tprivate readonly _templateGroupRoot: TemplateGroupRoot\n\treadonly entry: KnowledgeBaseEntry\n\treadonly availableTemplates: LazyLoaded<Array<EmailTemplate>>\n\tprivate _descriptionProvider: (() => string) | null\n\n\tconstructor(entry: KnowledgeBaseEntry | null, templateGroupInstances: TemplateGroupRoot, entityClient: EntityClient) {\n\t\tthis.title = stream(entry ? entry.title : \"\")\n\t\tthis.keywords = stream(entry ? keywordsToString(entry.keywords) : \"\")\n\t\tthis._entityClient = entityClient\n\t\tthis._templateGroupRoot = templateGroupInstances\n\t\tthis.entry = entry ? clone(entry) : createKnowledgeBaseEntry({ description: \"\", title: \"\", keywords: [] })\n\t\tthis._descriptionProvider = null\n\t\tthis.availableTemplates = new LazyLoaded(() => {\n\t\t\treturn this._entityClient.loadAll(EmailTemplateTypeRef, this._templateGroupRoot.templates)\n\t\t}, [])\n\t}\n\n\tisUpdate(): boolean {\n\t\treturn this.entry._id != null\n\t}\n\n\tsave(): Promise<any> {\n\t\tif (!this.title()) {\n\t\t\treturn Promise.reject(new UserError(\"emptyTitle_msg\"))\n\t\t}\n\n\t\tthis.entry.title = this.title()\n\t\tthis.entry.keywords = stringToKeywords(this.keywords())\n\n\t\tif (this._descriptionProvider) {\n\t\t\tthis.entry.description = this._descriptionProvider()\n\t\t}\n\n\t\tif (this.entry._id) {\n\t\t\treturn this._entityClient.update(this.entry).catch(ofClass(NotFoundError, noOp))\n\t\t} else {\n\t\t\tthis.entry._ownerGroup = this._templateGroupRoot._id\n\t\t\treturn this._entityClient.setup(this._templateGroupRoot.knowledgeBase, this.entry)\n\t\t}\n\t}\n\n\tsetDescriptionProvider(provider: () => string) {\n\t\tthis._descriptionProvider = provider\n\t}\n}\n\n/**\n * get keywords as a space separated string\n * @param keywords\n */\nfunction keywordsToString(keywords: Array<KnowledgeBaseEntryKeyword>): string {\n\treturn keywords.map((keyword) => keyword.keyword).join(\" \")\n}\n\nfunction stringToKeywords(keywords: string): Array<KnowledgeBaseEntryKeyword> {\n\treturn deduplicate(keywords.split(\" \").filter(Boolean))\n\t\t.sort(localeCompare)\n\t\t.map((keyword) =>\n\t\t\tcreateKnowledgeBaseEntryKeyword({\n\t\t\t\tkeyword,\n\t\t\t}),\n\t\t)\n}\n","import m, { Children, Component, Vnode } from \"mithril\"\nimport type { EmailTemplate, KnowledgeBaseEntry, TemplateGroupRoot } from \"../../common/api/entities/tutanota/TypeRefs.js\"\nimport { ButtonColor, ButtonType } from \"../../common/gui/base/Button.js\"\nimport { KnowledgeBaseEditorModel } from \"./KnowledgeBaseEditorModel\"\nimport { noOp, ofClass } from \"@tutao/tutanota-utils\"\nimport { TextField } from \"../../common/gui/base/TextField.js\"\nimport { Dialog } from \"../../common/gui/base/Dialog\"\nimport type { DialogHeaderBarAttrs } from \"../../common/gui/base/DialogHeaderBar\"\nimport { lang } from \"../../common/misc/LanguageViewModel\"\nimport { locator } from \"../../common/api/main/CommonLocator\"\nimport type { DropdownChildAttrs } from \"../../common/gui/base/Dropdown.js\"\nimport { createAsyncDropdown } from \"../../common/gui/base/Dropdown.js\"\nimport { showUserError } from \"../../common/misc/ErrorHandlerImpl\"\nimport { elementIdPart, getLetId, listIdPart } from \"../../common/api/common/utils/EntityUtils\"\nimport { HtmlEditor } from \"../../common/gui/editor/HtmlEditor\"\nimport { UserError } from \"../../common/api/main/UserError\"\nimport { TEMPLATE_SHORTCUT_PREFIX } from \"../templates/model/TemplatePopupModel\"\nimport { IconButtonAttrs } from \"../../common/gui/base/IconButton.js\"\nimport { Icons } from \"../../common/gui/base/icons/Icons.js\"\nimport { ButtonSize } from \"../../common/gui/base/ButtonSize.js\"\n\n/**\n *  Editor to edit / add a knowledgeBase entry\n *  Returned promise resolves when the dialog closes\n */\nexport function showKnowledgeBaseEditor(entry: KnowledgeBaseEntry | null, templateGroupRoot: TemplateGroupRoot): void {\n\tconst { entityClient } = locator\n\tconst editorModel = new KnowledgeBaseEditorModel(entry, templateGroupRoot, entityClient)\n\n\tconst closeDialog = () => {\n\t\tdialog.close()\n\t}\n\n\tconst saveAction = () => {\n\t\teditorModel.save().then(closeDialog).catch(ofClass(UserError, showUserError))\n\t}\n\n\tconst headerBarAttrs: DialogHeaderBarAttrs = {\n\t\tleft: [\n\t\t\t{\n\t\t\t\tlabel: \"cancel_action\",\n\t\t\t\tclick: closeDialog,\n\t\t\t\ttype: ButtonType.Secondary,\n\t\t\t},\n\t\t],\n\t\tright: [\n\t\t\t{\n\t\t\t\tlabel: \"save_action\",\n\t\t\t\tclick: saveAction,\n\t\t\t\ttype: ButtonType.Primary,\n\t\t\t},\n\t\t],\n\t\tmiddle: editorModel.entry._id ? \"editEntry_label\" : \"createEntry_action\",\n\t}\n\tconst dialog = Dialog.editDialog(headerBarAttrs, KnowledgeBaseEditor, editorModel)\n\tdialog.show()\n}\n\nclass KnowledgeBaseEditor implements Component<KnowledgeBaseEditorModel> {\n\tentryContentEditor: HtmlEditor\n\tlinkedTemplateButtonAttrs: IconButtonAttrs\n\n\tconstructor(vnode: Vnode<KnowledgeBaseEditorModel>) {\n\t\tconst model = vnode.attrs\n\t\tthis.linkedTemplateButtonAttrs = {\n\t\t\ttitle: \"linkTemplate_label\",\n\t\t\ticon: Icons.Add,\n\t\t\tcolors: ButtonColor.Elevated,\n\t\t\tclick: (e, dom) => {\n\t\t\t\te.stopPropagation()\n\t\t\t\tcreateAsyncDropdown({\n\t\t\t\t\tlazyButtons: () => this._createDropdownChildAttrs(model),\n\t\t\t\t})(e, dom)\n\t\t\t},\n\t\t\tsize: ButtonSize.Compact,\n\t\t}\n\t\tthis.entryContentEditor = new HtmlEditor(\"content_label\")\n\t\t\t.showBorders()\n\t\t\t.setMinHeight(500)\n\t\t\t.enableToolbar()\n\t\t\t.setToolbarOptions({\n\t\t\t\tcustomButtonAttrs: [this.linkedTemplateButtonAttrs],\n\t\t\t})\n\t\tmodel.setDescriptionProvider(() => {\n\t\t\treturn this.entryContentEditor.getValue()\n\t\t})\n\n\t\tif (model.isUpdate()) {\n\t\t\tthis.entryContentEditor.setValue(model.entry.description)\n\t\t}\n\t}\n\n\t_createDropdownChildAttrs(model: KnowledgeBaseEditorModel): Promise<Array<DropdownChildAttrs>> {\n\t\treturn model.availableTemplates.getAsync().then((templates) => {\n\t\t\tif (templates.length > 0) {\n\t\t\t\treturn templates.map((template) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tlabel: lang.makeTranslation(\"tag\", template.tag),\n\t\t\t\t\t\tclick: () => this.entryContentEditor.editor.insertHTML(createTemplateLink(template)),\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\treturn [\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: \"noEntries_msg\",\n\t\t\t\t\t\tclick: noOp,\n\t\t\t\t\t},\n\t\t\t\t]\n\t\t\t}\n\t\t})\n\t}\n\n\tview(vnode: Vnode<KnowledgeBaseEditorModel>): Children {\n\t\tconst model = vnode.attrs\n\t\treturn m(\"\", [\n\t\t\tm(TextField, {\n\t\t\t\tlabel: \"title_placeholder\",\n\t\t\t\tvalue: model.title(),\n\t\t\t\toninput: model.title,\n\t\t\t}),\n\t\t\tm(TextField, {\n\t\t\t\tlabel: \"keywords_label\",\n\t\t\t\tvalue: model.keywords(),\n\t\t\t\toninput: model.keywords,\n\t\t\t}),\n\t\t\tm(this.entryContentEditor),\n\t\t])\n\t}\n}\n\nfunction createTemplateLink(template: EmailTemplate): string {\n\tconst listId = listIdPart(getLetId(template))\n\tconst elementId = elementIdPart(getLetId(template))\n\treturn `<a href=\"tutatemplate:${listId}/${elementId}\">${TEMPLATE_SHORTCUT_PREFIX + template.tag}</a>`\n}\n"],"mappings":"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"}