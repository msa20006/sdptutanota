{"version":3,"file":"DesktopLog-yAgEoQsh.js","names":["log: {\n\tdebug: LogFn\n\twarn: LogFn\n\terror: LogFn\n\tinfo: LogFn\n}","tag: string"],"sources":["../../src/common/desktop/DesktopLog.ts"],"sourcesContent":["import { noOp } from \"@tutao/tutanota-utils\"\nimport { Mode } from \"../api/common/Env\"\n\ntype LogFn = (...args: any) => void\nexport const log: {\n\tdebug: LogFn\n\twarn: LogFn\n\terror: LogFn\n\tinfo: LogFn\n} =\n\ttypeof env !== \"undefined\" && env.mode === Mode.Test\n\t\t? {\n\t\t\t\tdebug: noOp,\n\t\t\t\twarn: noOp,\n\t\t\t\terror: noOp,\n\t\t\t\tinfo: noOp,\n\t\t  }\n\t\t: makeLog()\n\nexport function rebindDesktopLog() {\n\tObject.assign(log, makeLog())\n}\n\nfunction makeLog() {\n\treturn {\n\t\tdebug: console.log.bind(console),\n\t\twarn: console.warn.bind(console),\n\t\terror: console.error.bind(console),\n\t\tinfo: console.info.bind(console),\n\t}\n}\n\nexport function makeTaggedLogger(tag: string): typeof log {\n\treturn {\n\t\tdebug: (...args) => log.debug(tag, ...args),\n\t\tinfo: (...args) => log.info(tag, ...args),\n\t\twarn: (...args) => log.warn(tag, ...args),\n\t\terror: (...args) => log.error(tag, ...args),\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAIaA,aAML,QAAQ,eAAe,IAAI,SAAS,KAAK,OAC7C;CACA,OAAO;CACP,MAAM;CACN,OAAO;CACP,MAAM;AACL,IACD,SAAS;AAMb,SAAS,UAAU;AAClB,QAAO;EACN,OAAO,QAAQ,IAAI,KAAK,QAAQ;EAChC,MAAM,QAAQ,KAAK,KAAK,QAAQ;EAChC,OAAO,QAAQ,MAAM,KAAK,QAAQ;EAClC,MAAM,QAAQ,KAAK,KAAK,QAAQ;CAChC;AACD;AAEM,SAAS,iBAAiBC,KAAyB;AACzD,QAAO;EACN,OAAO,CAAC,GAAG,SAAS,IAAI,MAAM,KAAK,GAAG,KAAK;EAC3C,MAAM,CAAC,GAAG,SAAS,IAAI,KAAK,KAAK,GAAG,KAAK;EACzC,MAAM,CAAC,GAAG,SAAS,IAAI,KAAK,KAAK,GAAG,KAAK;EACzC,OAAO,CAAC,GAAG,SAAS,IAAI,MAAM,KAAK,GAAG,KAAK;CAC3C;AACD"}