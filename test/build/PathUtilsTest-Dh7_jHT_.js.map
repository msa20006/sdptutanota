{"version":3,"file":"PathUtilsTest-Dh7_jHT_.js","names":[],"sources":["../tests/desktop/PathUtilsTest.ts"],"sourcesContent":["import o from \"@tutao/otest\"\nimport { EXECUTABLE_EXTENSIONS, looksExecutable, nonClobberingFilename, swapFilename } from \"../../../src/common/desktop/PathUtils.js\"\nimport path from \"node:path\"\n\no.spec(\"PathUtils\", function () {\n\to.spec(\"nonClobberingFileName Test\", function () {\n\t\to(\"noClash\", function () {\n\t\t\to(nonClobberingFilename([\"bye.txt\"], \"hello.ext\")).equals(\"hello.ext\")\n\t\t})\n\t\to(\"emptyDir\", function () {\n\t\t\to(nonClobberingFilename([], \"hello.ext\")).equals(\"hello.ext\")\n\t\t})\n\t\to(\"emptyString\", function () {\n\t\t\to(nonClobberingFilename([\"\"], \"hello.ext\")).equals(\"hello.ext\")\n\t\t})\n\t\to(\"duplicateFileNonClashing\", function () {\n\t\t\to(nonClobberingFilename([\"hallo.txt\", \"hallo.txt\"], \"hello.ext\")).equals(\"hello.ext\")\n\t\t})\n\t\to(\"duplicateFileClashing\", function () {\n\t\t\to(nonClobberingFilename([\"hello.ext\", \"hello.ext\"], \"hello.ext\")).equals(\"hello-1.ext\")\n\t\t})\n\t\to(\"clashingFiles\", function () {\n\t\t\to(nonClobberingFilename([\"hello.ext\"], \"hello.ext\")).equals(\"hello-1.ext\")\n\t\t\to(nonClobberingFilename([\"hello.ext\", \"hello-1.ext\"], \"hello.ext\")).equals(\"hello-2.ext\")\n\t\t\to(nonClobberingFilename([\"hello.ext\", \"hello-1.ext\", \"hello-2.ext\"], \"hello.ext\")).equals(\"hello-3.ext\")\n\t\t\to(\n\t\t\t\tnonClobberingFilename(\n\t\t\t\t\t[\n\t\t\t\t\t\t\"hello.ext\",\n\t\t\t\t\t\t\"hello-1.ext\",\n\t\t\t\t\t\t\"hello-2.ext\",\n\t\t\t\t\t\t\"hello-3.ext\",\n\t\t\t\t\t\t\"hello-4.ext\",\n\t\t\t\t\t\t\"hello-5.ext\",\n\t\t\t\t\t\t\"hello-6.ext\",\n\t\t\t\t\t\t\"hello-7.ext\",\n\t\t\t\t\t\t\"hello-8.ext\",\n\t\t\t\t\t\t\"hello-9.ext\",\n\t\t\t\t\t\t\"hello-10.ext\",\n\t\t\t\t\t],\n\t\t\t\t\t\"hello.ext\",\n\t\t\t\t),\n\t\t\t).equals(\"hello-11.ext\")\n\t\t})\n\t\to(\"numberedFileNameNonClashing\", function () {\n\t\t\to(nonClobberingFilename([\"hello.ext\"], \"hello-1.ext\")).equals(\"hello-1.ext\")\n\t\t})\n\t\to(\"numberedFileNameClashing\", function () {\n\t\t\to(nonClobberingFilename([\"hello-1.ext\"], \"hello-1.ext\")).equals(\"hello-1-1.ext\")\n\t\t})\n\t\to(\"intermediate value\", function () {\n\t\t\to(nonClobberingFilename([\"hello.ext\", \"hello-3.ext\", \"hello-1.ext\", \"hello-undefined.ext\", \"hello-Infinity.ext\"], \"hello.ext\")).equals(\n\t\t\t\t\"hello-2.ext\",\n\t\t\t)\n\t\t\to(nonClobberingFilename([\"hello-0.ext\", \"hello.ext\", \"hello-3.ext\", \"hello-1.ext\"], \"hello.ext\")).equals(\"hello-2.ext\")\n\t\t\to(nonClobberingFilename([\"hello--2.ext\", \"hello-0.ext\", \"hello-3.ext\", \"hello-1.ext\"], \"hello.ext\")).equals(\"hello.ext\")\n\t\t})\n\t\to(\"truncated clashes\", function () {\n\t\t\to(nonClobberingFilename([\"hello-.ext\", \"hello.\", \"hello\", \"ello.ext\"], \"hello.ext\")).equals(\"hello.ext\")\n\t\t})\n\t\to(\"almost clashes\", function () {\n\t\t\to(nonClobberingFilename([\"hello.ext\", \"hello-a.ext\", \"hello-01.ext\", \"hello-0x01.ext\"], \"hello.ext\")).equals(\"hello-1.ext\")\n\t\t})\n\t\to(\"dotfiles\", function () {\n\t\t\to(\n\t\t\t\tnonClobberingFilename(\n\t\t\t\t\t[\n\t\t\t\t\t\t\".ext\", // unix dotfile w/o extension\n\t\t\t\t\t],\n\t\t\t\t\t\".ext\",\n\t\t\t\t),\n\t\t\t).equals(\".ext-1\")\n\t\t\to(\n\t\t\t\tnonClobberingFilename(\n\t\t\t\t\t[\n\t\t\t\t\t\t\".ext.txt\", // unix dotfile w/o extension\n\t\t\t\t\t],\n\t\t\t\t\t\".ext.txt\",\n\t\t\t\t),\n\t\t\t).equals(\".ext-1.txt\")\n\t\t})\n\t\to(\"malformedFilename\", function () {\n\t\t\to(nonClobberingFilename([\"\"], \"\")).equals(\"-1\")\n\t\t\to(nonClobberingFilename([\"hello.ext\"], \"\")).equals(\"\")\n\t\t})\n\t\t// These would rather be in sanitize file name tests\n\t\to(\"invalid/reserved filenames\", function () {\n\t\t\to(nonClobberingFilename([], \"\\x00-\\x1f\\x80-\\x9f.exe\")).equals(\"_-__-_.exe\")\n\t\t\t// n.setPlatform(\"win32\")\n\t\t\tenv.platformId = \"win32\"\n\t\t\to(nonClobberingFilename([\"CON-1.exe\"], \"CON.exe\")).equals(\"CON_.exe\")\n\t\t\to(nonClobberingFilename([], \".\")).equals(\"._\")\n\t\t\to(nonClobberingFilename([\"._\"], \".\")).equals(\"._-1\")\n\t\t\to(nonClobberingFilename([], \"..\")).equals(\".._\")\n\t\t\t// sanitizeFilename converts .. to .._\n\t\t\t// and then nonClobbering filename thinks ._ is the extension so if you have two files named .. then this is what you get\n\t\t\t// this isn't pretty, but lucky for us I also don't think it's possible to have a file named .. on windows or linux or mac, so it should\n\t\t\t// not even be an issue when dealing with attachments, unless we somehow cause this in code.\n\t\t\t// i'd rather not special case the code for something that may not even be a case\n\t\t\t// tl;dr this assertion could probably be removed altogether\n\t\t\to(nonClobberingFilename([\".._\"], \"..\")).equals(\".-1._\")\n\t\t\to(nonClobberingFilename([], \"<>|?/\\\\.mp3\")).equals(\"______.mp3\")\n\t\t\to(nonClobberingFilename([], \"CON<>|?/\\\\CON.mp3\")).equals(\"CON______CON.mp3\")\n\t\t\to(nonClobberingFilename([], \"PRN.<p2.\")).equals(\"PRN_._p2_\")\n\t\t\to(nonClobberingFilename([], \"LPT0\")).equals(\"LPT0_\")\n\t\t\to(nonClobberingFilename([], \"COM9\")).equals(\"COM9_\")\n\t\t\to(nonClobberingFilename([], \"AUX.AUX\")).equals(\"AUX_.AUX\")\n\t\t\to(nonClobberingFilename([], \"NUL\")).equals(\"NUL_\")\n\t\t\to(nonClobberingFilename([], \"nul\")).equals(\"nul_\")\n\t\t\to(nonClobberingFilename([], \"NULNUL\")).equals(\"NULNUL\")\n\t\t\to(nonClobberingFilename([], \".NUL\")).equals(\".NUL\")\n\t\t\to(nonClobberingFilename([], \"<>|?/\\\\CON.\")).equals(\"______CON_\")\n\t\t\t// n.setPlatform(\"linux\")\n\t\t\tenv.platformId = \"linux\"\n\t\t\to(nonClobberingFilename([], \"nul\")).equals(\"nul\")\n\t\t\to(nonClobberingFilename([], \"..\")).equals(\".._\")\n\t\t})\n\t})\n\to.spec(\"swapFileName Test\", function () {\n\t\to(\"replace file with file, posix\", function () {\n\t\t\to(swapFilename(\"/a/b/c.txt\", \"d.txt\")).equals(\"/a/b/d.txt\")\n\t\t\to(swapFilename(\"a/b/c.txt\", \"d.txt\")).equals(\"a/b/d.txt\")\n\t\t\to(swapFilename(\"/a/b/c.txt\", \"d\")).equals(\"/a/b/d\")\n\t\t\to(swapFilename(\"/a/b/c\", \"d.txt\")).equals(\"/a/b/d.txt\")\n\t\t\to(swapFilename(\"/a/b/c\", \"d.txt\")).equals(\"/a/b/d.txt\")\n\t\t\to(swapFilename(\"/\", \"bla.txt\")).equals(\"/bla.txt\")\n\t\t})\n\t\to(\"replace file with file, windows\", function () {\n\t\t\to(swapFilename(\"C:\\\\tmp\\\\file.html\", \"text.txt\", path.win32)).equals(\"C:\\\\tmp\\\\text.txt\")\n\t\t\to(swapFilename(\"C:\\\\tmp\\\\file.html\", \"text\", path.win32)).equals(\"C:\\\\tmp\\\\text\")\n\t\t\to(swapFilename(\"C:\\\\tmp\\\\folder\\\\\", \"text\", path.win32)).equals(\"C:\\\\tmp\\\\text\")\n\t\t\to(swapFilename(\"tmp\\\\file.html\", \"text.txt\", path.win32)).equals(\"tmp\\\\text.txt\")\n\t\t\to(swapFilename(\"tmp\", \"text.txt\", path.win32)).equals(\"text.txt\")\n\t\t\to(swapFilename(\"C:\\\\\", \"text.txt\", path.win32)).equals(\"C:\\\\text.txt\")\n\t\t})\n\t})\n\n\to.spec(\"looksExecutable\", function () {\n\t\tfunction testDoesLookExecutable(filename) {\n\t\t\to(`should detect \"${filename}\" as looking executable`, function () {\n\t\t\t\to(looksExecutable(filename)).equals(true)\n\t\t\t})\n\t\t}\n\n\t\tfor (const extension of EXECUTABLE_EXTENSIONS) testDoesLookExecutable(`someFile.${extension}`)\n\t\tfor (const extension of EXECUTABLE_EXTENSIONS) testDoesLookExecutable(`C:\\\\a\\\\b\\\\someFile.${extension}`)\n\t\tfor (const extension of EXECUTABLE_EXTENSIONS) testDoesLookExecutable(`C:\\\\a\\\\b\\\\.${extension}`)\n\t\tfor (const extension of EXECUTABLE_EXTENSIONS) testDoesLookExecutable(`/a/b/someFile.${extension}`)\n\t\tfor (const extension of EXECUTABLE_EXTENSIONS) testDoesLookExecutable(`/a/b/.${extension}`)\n\t\tfor (const extension of EXECUTABLE_EXTENSIONS) testDoesLookExecutable(`file:///a/b/someFile.${extension}`)\n\t\tfor (const extension of EXECUTABLE_EXTENSIONS) testDoesLookExecutable(`file:///a/b/.${extension}`)\n\t\tfor (const extension of EXECUTABLE_EXTENSIONS) testDoesLookExecutable(`.${extension}`)\n\n\t\to(\"should not detect non executable extensions as looking executable\", function () {\n\t\t\to(looksExecutable(\"picture.jpg\")).equals(false)\n\t\t\to(looksExecutable(\".jpg\")).equals(false)\n\t\t})\n\t})\n})\n"],"mappings":"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"}