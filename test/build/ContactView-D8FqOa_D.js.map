{"version":3,"file":"ContactView-D8FqOa_D.js","names":["component: Component","columnType: ColumnType","foregroundState: boolean","touch: Touch","viewColumns: ViewColumn[]","enableDrawer: boolean","column: ViewColumn","visibleColumns: ViewColumn[]","allColumns: ViewColumn[]","remainingSpace: number","viewColumn: ViewColumn","nextVisibleViewColumn: ViewColumn","oldOffset: number","newOffset: number","foregroundColumn: ViewColumn","toForeground: boolean","element: HTMLElement","lastGestureInfo: GestureInfo | null","oldGestureInfo: GestureInfo | null","initialGestureInfo: GestureInfo | null","directionLock: 0 | 1 | 2","event: any","attrs: HeaderAttrs","numberEntities: number","vnode: Vnode<TextDisplayAreaAttrs>","contact1: Contact","contact2: Contact","commentField1: Children","commentField2: Children","contact: Contact","value1: string | null","value2: string | null","labelTextId: TranslationKey","action: ContactMergeAction","logins: LoginController","vnode: Vnode<NewsListAttrs>","newsModel: NewsModel","closeButton: ButtonAttrs","header: DialogHeaderBarAttrs","child: Component","vnode: Vnode<DrawerMenuAttrs>","e: EventRedraw<Event>","attrs: Attrs","vnode: Vnode<SidebarSectionAttrs>","vnode: Vnode<MobileActionBarAttrs>","actionButtons: Children[]","vnode: VnodeDOM<ContactViewToolbarAttrs>","contacts: Contact[]","contactModel: ContactModel","attrs: MobileHeaderAttrs","event: MouseEvent","vnode: Vnode<SearchBarAttrs, this>","attrs: MultiselectMobileHeaderAttrs","item: ContactListEntry","onSelected: (entity: ContactListEntry, selected: boolean) => unknown","entry: ContactListEntry","selected: boolean","isInMultiSelect: boolean","show: boolean","e: MouseEvent","selectedEntities: ContactListEntry[] | undefined","vnode: Vnode<Attrs>","event: KeyboardEvent","navButtonAttrs: NavButtonAttrs","vnode: Vnode<ContactViewAttrs>","vnode","header: AppHeaderAttrs","contacts: Contact[]","contacts","contact: Contact","listId?: Id","c: Contact","shortcuts: Shortcut[]","m","vcardButtons: Array<DropdownButtonAttrs>","contactListInfo: ContactListInfo","shared: boolean","contactListButton: NavButtonAttrs","newName: string","mergable: Contact[][]","args: Record<string, any>","e: MouseEvent","dom: HTMLElement","to: PartialRecipient","subject: string","contactList: Contact[]","onConfirm: () => void","keptContact: Contact","goodbyeContact: Contact"],"sources":["../../src/common/gui/base/ViewColumn.ts","../../src/common/gui/nav/ViewSlider.ts","../../src/common/gui/base/NavBar.ts","../../src/common/gui/Header.ts","../../src/mail-app/contacts/view/MultiContactViewer.ts","../../src/common/gui/base/TextDisplayArea.ts","../../src/mail-app/contacts/view/ContactMergeView.ts","../../src/common/gui/nav/NavFunctions.ts","../../src/common/misc/news/NewsList.ts","../../src/common/misc/news/NewsDialog.ts","../../src/common/gui/nav/DrawerMenu.ts","../../src/common/gui/FolderColumnView.ts","../../src/common/gui/SidebarSection.ts","../../src/common/gui/MobileActionBar.ts","../../src/common/gui/BackgroundColumnLayout.ts","../../src/common/gui/DesktopToolbars.ts","../../src/mail-app/contacts/view/ContactViewerActions.ts","../../src/common/gui/MobileBottomActionBar.ts","../../src/mail-app/contacts/view/ImportAsVCard.ts","../../src/common/gui/BaseMobileHeader.ts","../../src/common/gui/MobileHeader.ts","../../src/mail-app/LazySearchBar.ts","../../src/common/gui/MultiselectMobileHeader.ts","../../src/common/gui/EnterMultiselectIconButton.ts","../../src/mail-app/contacts/view/ContactListRecipientView.ts","../../src/mail-app/contacts/view/ContactListEntryViewer.ts","../../src/mail-app/gui/BottomNav.ts","../../src/common/gui/base/SidebarSectionRow.ts","../../src/mail-app/contacts/view/ContactView.ts"],"sourcesContent":["import m, { Component } from \"mithril\"\nimport { AriaLandmarks, landmarkAttrs } from \"../AriaUtils\"\nimport { LayerType } from \"../../../RootView\"\nimport { lazy, MaybeLazy, resolveMaybeLazy } from \"@tutao/tutanota-utils\"\nimport { assertMainOrNode } from \"../../api/common/Env\"\nimport { lang, Translation, TranslationKey, MaybeTranslation } from \"../../misc/LanguageViewModel.js\"\n\nassertMainOrNode()\n\nexport const enum ColumnType {\n\tBackground = 1,\n\tForeground = 0,\n}\n\ntype Attrs = {\n\trightBorder?: boolean\n}\n\nexport class ViewColumn implements Component<Attrs> {\n\tprivate readonly component: Component\n\treadonly columnType: ColumnType\n\treadonly minWidth: number\n\treadonly maxWidth: number\n\tprivate readonly headerCenter: MaybeLazy<MaybeTranslation>\n\tprivate readonly ariaLabel: lazy<string>\n\twidth: number\n\toffset: number // offset to the left\n\n\t// not private because used by ViewSlider\n\tdomColumn: HTMLElement | null = null\n\tisInForeground: boolean\n\tisVisible: boolean\n\tariaRole: AriaLandmarks | null = null\n\n\t/**\n\t * Create a view column.\n\t * @param component The component that is rendered as this column\n\t * @param columnType The type of the view column.\n\t * @param minWidth The minimum allowed width for the view column.\n\t * @param headerCenter returned in {@link getTitle}. Used in ARIA landmark unless overriden by {@link ariaLabel}\n\t * @param ariaLabel used in ARIA landmark\n\t * @param maxWidth The maximum allowed width for the view column.\n\t * @param headerCenter The title of the view column.\n\t * @param ariaLabel The label of the view column to be read by screen readers. Defaults to headerCenter if not specified.\n\t */\n\tconstructor(\n\t\tcomponent: Component,\n\t\tcolumnType: ColumnType,\n\t\t{\n\t\t\tminWidth,\n\t\t\tmaxWidth,\n\t\t\t// note: headerCenter is a candidate for removal, ViewColumn is not responsible for the header. This is only useful as an ARIA description which we can already\n\t\t\t// provide separately. We should always require aria description instead.\n\t\t\theaderCenter,\n\t\t\tariaLabel = () => lang.getTranslationText(this.getTitle()),\n\t\t}: {\n\t\t\tminWidth: number\n\t\t\tmaxWidth: number\n\t\t\theaderCenter?: MaybeLazy<MaybeTranslation>\n\t\t\tariaLabel?: lazy<string>\n\t\t},\n\t) {\n\t\tthis.component = component\n\t\tthis.columnType = columnType\n\t\tthis.minWidth = minWidth\n\t\tthis.maxWidth = maxWidth\n\n\t\tthis.headerCenter = headerCenter || \"emptyString_msg\"\n\n\t\tthis.ariaLabel = ariaLabel ?? null\n\t\tthis.width = minWidth\n\t\tthis.offset = 0\n\t\tthis.isInForeground = false\n\t\tthis.isVisible = false\n\t\t// fixup for old-style components\n\t\tthis.view = this.view.bind(this)\n\t}\n\n\tview() {\n\t\tconst zIndex = !this.isVisible && this.columnType === ColumnType.Foreground ? LayerType.ForegroundMenu + 1 : \"\"\n\t\tconst landmark = this.ariaRole ? landmarkAttrs(this.ariaRole, this.ariaLabel ? this.ariaLabel() : lang.getTranslationText(this.getTitle())) : {}\n\t\treturn m(\n\t\t\t\".view-column.fill-absolute\",\n\t\t\t{\n\t\t\t\t...landmark,\n\t\t\t\t\"data-testid\": lang.getTranslationText(this.getTitle()),\n\t\t\t\tinert: !this.isVisible && !this.isInForeground,\n\t\t\t\toncreate: (vnode) => {\n\t\t\t\t\tthis.domColumn = vnode.dom as HTMLElement\n\t\t\t\t\tthis.domColumn.style.transform =\n\t\t\t\t\t\tthis.columnType === ColumnType.Foreground ? \"translateX(\" + this.getOffsetForeground(this.isInForeground) + \"px)\" : \"\"\n\n\t\t\t\t\tif (this.ariaRole === AriaLandmarks.Main) {\n\t\t\t\t\t\tthis.focus()\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tstyle: {\n\t\t\t\t\tzIndex,\n\t\t\t\t\twidth: this.width + \"px\",\n\t\t\t\t\tleft: this.offset + \"px\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tm(this.component),\n\t\t)\n\t}\n\n\tgetTitle(): MaybeTranslation {\n\t\treturn resolveMaybeLazy(this.headerCenter)\n\t}\n\n\tgetOffsetForeground(foregroundState: boolean): number {\n\t\tif (this.isVisible || foregroundState) {\n\t\t\treturn 0\n\t\t} else {\n\t\t\treturn -this.width\n\t\t}\n\t}\n\n\tfocus() {\n\t\tthis.domColumn?.focus()\n\t}\n}\n","import m, { Children, Component } from \"mithril\"\nimport { ColumnType, ViewColumn } from \"../base/ViewColumn.js\"\nimport type { windowSizeListener } from \"../../misc/WindowFacade.js\"\nimport { windowFacade } from \"../../misc/WindowFacade.js\"\nimport { size } from \"../size.js\"\nimport { alpha, AlphaEnum, animations, transform, TransformEnum } from \"../animation/Animations.js\"\nimport { ease } from \"../animation/Easing.js\"\nimport { theme } from \"../theme.js\"\nimport { assertNotNull } from \"@tutao/tutanota-utils\"\nimport { styles } from \"../styles.js\"\nimport { AriaLandmarks } from \"../AriaUtils.js\"\nimport { LayerType } from \"../../../RootView.js\"\nimport { assertMainOrNode } from \"../../api/common/Env.js\"\nimport { client } from \"../../misc/ClientDetector.js\"\n\nassertMainOrNode()\nexport type GestureInfo = {\n\tx: number\n\ty: number\n\ttime: number\n\tidentifier: number\n}\nexport const gestureInfoFromTouch = (touch: Touch): GestureInfo => ({\n\tx: touch.pageX,\n\ty: touch.pageY,\n\ttime: performance.now(),\n\tidentifier: touch.identifier,\n})\n\ninterface ViewSliderAttrs {\n\theader: Children\n\tbottomNav?: Children\n}\n\n/**\n * Represents a view with multiple view columns. Depending on the screen width and the view columns configurations,\n * the actual widths and positions of the view columns is calculated. This allows a consistent layout for any browser\n * resolution on any type of device.\n */\nexport class ViewSlider implements Component<ViewSliderAttrs> {\n\tprivate readonly mainColumn: ViewColumn\n\tfocusedColumn: ViewColumn\n\tprivate visibleBackgroundColumns: ViewColumn[]\n\tprivate domSlidingPart!: HTMLElement\n\tview: Component<ViewSliderAttrs>[\"view\"]\n\tprivate busy: Promise<unknown>\n\tprivate isModalBackgroundVisible: boolean\n\tprivate readonly resizeListener: windowSizeListener = () => this.updateVisibleBackgroundColumns()\n\tprivate readonly handleHistoryEvent = () => {\n\t\tconst prev = this.getPreviousColumn()\n\t\tif (prev != null && prev.columnType !== ColumnType.Foreground) {\n\t\t\tthis.focusPreviousColumn()\n\t\t\treturn false\n\t\t} else if (this.isForegroundColumnFocused()) {\n\t\t\tthis.focusNextColumn()\n\t\t\treturn false\n\t\t}\n\t\treturn true\n\t}\n\n\t/** Creates the event listeners as soon as this component is loaded (invoked by mithril)*/\n\toncreate: () => void = () => {\n\t\tthis.updateVisibleBackgroundColumns()\n\n\t\twindowFacade.addResizeListener(this.resizeListener)\n\t\twindowFacade.addHistoryEventListener(this.handleHistoryEvent)\n\t}\n\n\t/** Removes the registered event listeners as soon as this component is unloaded (invoked by mithril)*/\n\tonremove: () => void = () => {\n\t\twindowFacade.removeResizeListener(this.resizeListener)\n\t\twindowFacade.removeHistoryEventListener(this.handleHistoryEvent)\n\t}\n\tprivate getSideColDom: () => HTMLElement | null = () => this.viewColumns[0].domColumn\n\n\tconstructor(private readonly viewColumns: ViewColumn[], private readonly enableDrawer: boolean = true) {\n\t\t// the first background column is the main column\n\t\tthis.mainColumn = assertNotNull(\n\t\t\tviewColumns.find((column) => column.columnType === ColumnType.Background),\n\t\t\t\"there was no backgroung column passed to viewslider\",\n\t\t)\n\n\t\tthis.focusedColumn = this.mainColumn\n\t\tthis.visibleBackgroundColumns = []\n\n\t\tthis.updateVisibleBackgroundColumns()\n\n\t\tthis.busy = Promise.resolve()\n\t\tthis.isModalBackgroundVisible = false\n\t\tfor (const column of this.viewColumns) {\n\t\t\tcolumn.ariaRole = this.getColumnRole(column)\n\t\t}\n\n\t\tthis.view = ({ attrs }): Children => {\n\t\t\tconst mainSliderColumns = this.getColumnsForMainSlider()\n\n\t\t\tconst allBackgroundColumnsAreVisible = this.visibleBackgroundColumns.length === mainSliderColumns.length\n\t\t\treturn m(\n\t\t\t\t\".fill-absolute.flex.col\",\n\t\t\t\t{\n\t\t\t\t\toncreate: (vnode) => {\n\t\t\t\t\t\tif (this.enableDrawer) this.attachTouchHandler(vnode.dom as HTMLElement)\n\t\t\t\t\t},\n\t\t\t\t\tonremove: () => {\n\t\t\t\t\t\tif (this.viewColumns[0].columnType === ColumnType.Foreground && this.viewColumns[0].isInForeground) {\n\t\t\t\t\t\t\tthis.viewColumns[0].isInForeground = false\n\t\t\t\t\t\t\tthis.isModalBackgroundVisible = false\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t[\n\t\t\t\t\tstyles.isUsingBottomNavigation() ? null : attrs.header,\n\t\t\t\t\tm(\n\t\t\t\t\t\t\".view-columns.flex-grow.rel\",\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\toncreate: (vnode) => {\n\t\t\t\t\t\t\t\tthis.domSlidingPart = vnode.dom as HTMLElement\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\twidth: this.getWidth() + \"px\",\n\t\t\t\t\t\t\t\ttransform: \"translateX(\" + this.getOffset(this.visibleBackgroundColumns[0]) + \"px)\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmainSliderColumns.map((column, index) =>\n\t\t\t\t\t\t\tm(column, {\n\t\t\t\t\t\t\t\t// Only apply right border if 1. all background columns are visible. 2. It's not the last column.\n\t\t\t\t\t\t\t\t// Perhaps the condition should be \"there's another visible column after this one\" but it works like this too\n\t\t\t\t\t\t\t\trightBorder: allBackgroundColumnsAreVisible && index !== mainSliderColumns.length - 1,\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t\t\tstyles.isUsingBottomNavigation() && !client.isCalendarApp() ? attrs.bottomNav : null,\n\t\t\t\t\tthis.getColumnsForOverlay().map((c) => m(c, {})),\n\t\t\t\t\tthis.enableDrawer ? this.createModalBackground() : null,\n\t\t\t\t],\n\t\t\t)\n\t\t}\n\t}\n\n\tprivate getColumnRole(column: ViewColumn): AriaLandmarks | null {\n\t\t// role  for foreground column is handled inside FolderColumnView\n\t\tif (column.columnType === ColumnType.Foreground) {\n\t\t\treturn null\n\t\t}\n\n\t\treturn this.mainColumn === column ? AriaLandmarks.Main : AriaLandmarks.Region\n\t}\n\n\tgetMainColumn(): ViewColumn {\n\t\treturn this.mainColumn\n\t}\n\n\tprivate getColumnsForMainSlider(): Array<ViewColumn> {\n\t\treturn this.viewColumns.filter((c) => c.columnType === ColumnType.Background || c.isVisible)\n\t}\n\n\tprivate getColumnsForOverlay(): Array<ViewColumn> {\n\t\treturn this.viewColumns.filter((c) => c.columnType === ColumnType.Foreground && !c.isVisible)\n\t}\n\n\tprivate createModalBackground(): Children {\n\t\tif (this.isModalBackgroundVisible) {\n\t\t\treturn [\n\t\t\t\tm(\".fill-absolute.will-change-alpha\", {\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tzIndex: LayerType.ForegroundMenu,\n\t\t\t\t\t},\n\t\t\t\t\toncreate: (vnode) => {\n\t\t\t\t\t\tthis.busy.then(() => animations.add(vnode.dom as HTMLElement, alpha(AlphaEnum.BackgroundColor, theme.modal_bg, 0, 0.5)))\n\t\t\t\t\t},\n\t\t\t\t\tonbeforeremove: (vnode) => {\n\t\t\t\t\t\treturn this.busy.then(() => animations.add(vnode.dom as HTMLElement, alpha(AlphaEnum.BackgroundColor, theme.modal_bg, 0.5, 0)))\n\t\t\t\t\t},\n\t\t\t\t\tonclick: () => {\n\t\t\t\t\t\tthis.focus(this.visibleBackgroundColumns[0])\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t]\n\t\t} else {\n\t\t\treturn []\n\t\t}\n\t}\n\n\tprivate updateVisibleBackgroundColumns() {\n\t\tthis.focusedColumn = this.focusedColumn || this.mainColumn\n\t\tlet visibleColumns: ViewColumn[] = [this.focusedColumn.columnType === ColumnType.Background ? this.focusedColumn : this.mainColumn]\n\t\tlet remainingSpace = window.innerWidth - visibleColumns[0].minWidth\n\t\tlet nextVisibleColumn = this.getNextVisibleColumn(visibleColumns, this.viewColumns)\n\n\t\twhile (nextVisibleColumn && remainingSpace >= nextVisibleColumn.minWidth) {\n\t\t\tvisibleColumns.push(nextVisibleColumn)\n\t\t\tremainingSpace -= nextVisibleColumn.minWidth\n\t\t\tnextVisibleColumn = this.getNextVisibleColumn(visibleColumns, this.viewColumns)\n\t\t}\n\n\t\t// visible columns must be sort by the initial column order\n\t\tvisibleColumns.sort((a, b) => this.viewColumns.indexOf(a) - this.viewColumns.indexOf(b))\n\n\t\tthis.distributeRemainingSpace(visibleColumns, remainingSpace)\n\n\t\tthis.setWidthForHiddenColumns(visibleColumns)\n\n\t\tfor (const column of this.viewColumns) {\n\t\t\tcolumn.isVisible = visibleColumns.includes(column)\n\t\t}\n\t\tthis.updateOffsets()\n\t\tthis.visibleBackgroundColumns = visibleColumns\n\n\t\tif (this.allColumnsVisible()) {\n\t\t\tthis.focusedColumn.isInForeground = false\n\t\t\tthis.isModalBackgroundVisible = false\n\n\t\t\tif (this.viewColumns[0].domColumn) {\n\t\t\t\tthis.viewColumns[0].domColumn.style.transform = \"\"\n\t\t\t}\n\t\t}\n\n\t\twindow.requestAnimationFrame(() => m.redraw())\n\t}\n\n\tgetVisibleBackgroundColumns(): ViewColumn[] {\n\t\treturn this.visibleBackgroundColumns.slice()\n\t}\n\n\tisUsingOverlayColumns(): boolean {\n\t\treturn this.viewColumns.every((c) => c.columnType !== ColumnType.Foreground || c.isVisible)\n\t}\n\n\t/**\n\t * Returns the next column which should become visible\n\t * @param visibleColumns All columns that will definitely be visible\n\t * @param allColumns All columns*\n\t */\n\tgetNextVisibleColumn(visibleColumns: ViewColumn[], allColumns: ViewColumn[]): ViewColumn | null {\n\t\t// First: try to find a background column which is not visible\n\t\tlet nextColumn = allColumns.find((column) => {\n\t\t\treturn column.columnType === ColumnType.Background && visibleColumns.indexOf(column) < 0\n\t\t})\n\n\t\tif (!nextColumn) {\n\t\t\t// Second: if no more background columns are available add the foreground column to the visible columns\n\t\t\tnextColumn = allColumns.find((column) => {\n\t\t\t\treturn column.columnType === ColumnType.Foreground && visibleColumns.indexOf(column) < 0\n\t\t\t})\n\t\t}\n\n\t\treturn nextColumn ?? null\n\t}\n\n\tgetBackgroundColumns(): ViewColumn[] {\n\t\treturn this.viewColumns.filter((c) => c.columnType === ColumnType.Background)\n\t}\n\n\t/**\n\t * distributes the remaining space to all visible columns\n\t * @param visibleColumns\n\t * @param remainingSpace\n\t */\n\tprivate distributeRemainingSpace(visibleColumns: ViewColumn[], remainingSpace: number) {\n\t\tlet spacePerColumn = remainingSpace / visibleColumns.length\n\t\tfor (const [index, visibleColumn] of visibleColumns.entries()) {\n\t\t\tif (visibleColumns.length - 1 === index) {\n\t\t\t\t// ignore max width for the last visible column\n\t\t\t\tvisibleColumn.width = visibleColumn.minWidth + remainingSpace\n\t\t\t} else {\n\t\t\t\tlet spaceForThisColumn = Math.min(spacePerColumn, visibleColumn.maxWidth - visibleColumn.minWidth)\n\t\t\t\tremainingSpace -= spaceForThisColumn\n\t\t\t\tvisibleColumn.width = visibleColumn.minWidth + spaceForThisColumn\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate setWidthForHiddenColumns(visibleColumns: ViewColumn[]) {\n\t\t// if all columns are visible there is no need to set the width\n\t\tif (this.viewColumns.length === visibleColumns.length) {\n\t\t\treturn\n\t\t}\n\n\t\t// if only one column is visible set the same width for all columns ignoring max width\n\t\tif (visibleColumns.length === 1) {\n\t\t\tfor (const column of this.viewColumns) {\n\t\t\t\tcolumn.width = visibleColumns[0].width\n\t\t\t}\n\t\t}\n\n\t\t// Reduce the width of the foreground button to keep always a small part of the background button visible.\n\t\tlet foreGroundColumn = this.viewColumns.find((column) => column.columnType === ColumnType.Foreground)\n\n\t\tif (foreGroundColumn) {\n\t\t\tlet remainingSpace = window.innerWidth - foreGroundColumn.minWidth - size.hpad_large\n\t\t\tlet additionalSpaceForColumn = Math.min(remainingSpace, foreGroundColumn.maxWidth - foreGroundColumn.minWidth)\n\t\t\tforeGroundColumn.width = foreGroundColumn.minWidth + additionalSpaceForColumn\n\t\t}\n\t}\n\n\tasync focus(viewColumn: ViewColumn): Promise<unknown> {\n\t\ttry {\n\t\t\tawait this.busy\n\t\t\tif (this.focusedColumn === viewColumn) return\n\t\t\t// hide the foreground column if the column is in foreground\n\t\t\tif (this.focusedColumn.isInForeground) {\n\t\t\t\tthis.busy = this.slideForegroundColumn(this.focusedColumn, false)\n\t\t\t\tawait this.busy\n\t\t\t}\n\n\t\t\tthis.focusedColumn = viewColumn\n\t\t\tif (\n\t\t\t\tviewColumn.columnType === ColumnType.Background &&\n\t\t\t\tthis.visibleBackgroundColumns.length === 1 &&\n\t\t\t\tthis.visibleBackgroundColumns.indexOf(viewColumn) < 0\n\t\t\t) {\n\t\t\t\tconst currentOffset = this.domSlidingPart.getBoundingClientRect().left\n\t\t\t\tthis.busy = this.slideBackgroundColumns(viewColumn, currentOffset, this.getOffset(viewColumn))\n\t\t\t} else if (viewColumn.columnType === ColumnType.Foreground && this.visibleBackgroundColumns.indexOf(viewColumn) < 0) {\n\t\t\t\tthis.busy = this.slideForegroundColumn(viewColumn, true)\n\t\t\t}\n\n\t\t\tawait this.busy\n\t\t} finally {\n\t\t\t// for updating header bar after animation\n\t\t\tm.redraw()\n\t\t\tviewColumn.focus()\n\t\t}\n\t}\n\n\twaitForAnimation(): Promise<unknown> {\n\t\treturn this.busy\n\t}\n\n\t/**\n\t * Executes a slide animation for the background buttons.\n\t */\n\tprivate slideBackgroundColumns(nextVisibleViewColumn: ViewColumn, oldOffset: number, newOffset: number): Promise<unknown> {\n\t\treturn animations\n\t\t\t.add(this.domSlidingPart, transform(TransformEnum.TranslateX, oldOffset, newOffset), {\n\t\t\t\teasing: ease.inOut,\n\t\t\t})\n\t\t\t.finally(() => {\n\t\t\t\t// replace the visible column\n\t\t\t\tconst [removed] = this.visibleBackgroundColumns.splice(0, 1, nextVisibleViewColumn)\n\n\t\t\t\tremoved.isVisible = false\n\t\t\t\tnextVisibleViewColumn.isVisible = true\n\t\t\t})\n\t}\n\n\t/**\n\t * Executes a slide animation for the foreground button.\n\t */\n\tprivate slideForegroundColumn(foregroundColumn: ViewColumn, toForeground: boolean): Promise<unknown> {\n\t\tif (!foregroundColumn.domColumn) return Promise.resolve()\n\n\t\t// Remove the `visibility: hidden` from the target column before starting the animation, so it is visible during the animation\n\t\tforegroundColumn.domColumn.style.visibility = \"visible\"\n\n\t\tconst colRect = foregroundColumn.domColumn.getBoundingClientRect()\n\n\t\tconst oldOffset = colRect.left\n\t\tlet newOffset = foregroundColumn.getOffsetForeground(toForeground)\n\t\tthis.isModalBackgroundVisible = toForeground\n\t\treturn animations\n\t\t\t.add(assertNotNull(foregroundColumn.domColumn, \"foreground column has no domcolumn\"), transform(TransformEnum.TranslateX, oldOffset, newOffset), {\n\t\t\t\teasing: ease.in,\n\t\t\t})\n\t\t\t.finally(() => {\n\t\t\t\tforegroundColumn.isInForeground = toForeground\n\t\t\t})\n\t}\n\n\tupdateOffsets() {\n\t\tlet offset = 0\n\n\t\tfor (let column of this.viewColumns) {\n\t\t\tif (column.columnType === ColumnType.Background || column.isVisible) {\n\t\t\t\tcolumn.offset = offset\n\t\t\t\toffset += column.width\n\t\t\t}\n\t\t}\n\t}\n\n\tgetWidth(): number {\n\t\tlet lastColumn = this.viewColumns[this.viewColumns.length - 1]\n\t\treturn lastColumn.offset + lastColumn.width\n\t}\n\n\tgetOffset(column: ViewColumn): number {\n\t\treturn 0 - column.offset\n\t}\n\n\tisFocusPreviousPossible(): boolean {\n\t\treturn this.getPreviousColumn() != null\n\t}\n\n\tfocusPreviousColumn(): Promise<unknown> {\n\t\tif (this.isFocusPreviousPossible()) {\n\t\t\twindow.getSelection()?.empty() // try to deselect text\n\t\t\treturn this.focus(assertNotNull(this.getPreviousColumn(), \"previous column was null!\"))\n\t\t} else {\n\t\t\treturn Promise.resolve()\n\t\t}\n\t}\n\n\tfocusNextColumn() {\n\t\tconst indexOfCurrent = this.viewColumns.indexOf(this.focusedColumn)\n\n\t\tif (indexOfCurrent + 1 < this.viewColumns.length) {\n\t\t\tthis.focus(this.viewColumns[indexOfCurrent + 1])\n\t\t}\n\t}\n\n\tgetPreviousColumn(): ViewColumn | null {\n\t\tif (this.viewColumns.indexOf(this.visibleBackgroundColumns[0]) > 0 && !this.focusedColumn.isInForeground) {\n\t\t\tlet visibleColumnIndex = this.viewColumns.indexOf(this.visibleBackgroundColumns[0])\n\t\t\treturn this.viewColumns[visibleColumnIndex - 1]\n\t\t}\n\n\t\treturn null\n\t}\n\n\tisFirstBackgroundColumnFocused(): boolean {\n\t\treturn this.viewColumns.filter((column) => column.columnType === ColumnType.Background).indexOf(this.focusedColumn) === 0\n\t}\n\n\tisForegroundColumnFocused(): boolean {\n\t\treturn this.focusedColumn && this.focusedColumn.columnType === ColumnType.Foreground\n\t}\n\n\tallColumnsVisible(): boolean {\n\t\treturn this.visibleBackgroundColumns.length === this.viewColumns.length\n\t}\n\n\tattachTouchHandler(element: HTMLElement) {\n\t\tlet lastGestureInfo: GestureInfo | null\n\t\tlet oldGestureInfo: GestureInfo | null\n\t\tlet initialGestureInfo: GestureInfo | null\n\t\tconst VERTICAL = 1\n\t\tconst HORIZONTAL = 2\n\t\tlet directionLock: 0 | 1 | 2 = 0\n\n\t\tconst gestureEnd = (event: any) => {\n\t\t\tconst safeLastGestureInfo = lastGestureInfo\n\t\t\tconst safeOldGestureInfo = oldGestureInfo\n\n\t\t\tif (safeLastGestureInfo && safeOldGestureInfo && !this.allColumnsVisible()) {\n\t\t\t\tconst touch = event.changedTouches[0]\n\t\t\t\tconst mainCol = this.mainColumn.domColumn\n\n\t\t\t\tconst sideCol = this.getSideColDom()\n\n\t\t\t\tif (!mainCol || !sideCol) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tconst mainColRect = mainCol.getBoundingClientRect()\n\t\t\t\tconst velocity = (safeLastGestureInfo.x - safeOldGestureInfo.x) / (safeLastGestureInfo.time - safeOldGestureInfo.time)\n\n\t\t\t\tconst show = () => {\n\t\t\t\t\tthis.focusedColumn = this.viewColumns[0]\n\t\t\t\t\tthis.busy = this.slideForegroundColumn(this.viewColumns[0], true)\n\t\t\t\t\tthis.isModalBackgroundVisible = true\n\t\t\t\t}\n\n\t\t\t\tconst hide = () => {\n\t\t\t\t\tthis.focusedColumn = this.viewColumns[1]\n\t\t\t\t\tthis.busy = this.slideForegroundColumn(this.viewColumns[0], false)\n\t\t\t\t\tthis.isModalBackgroundVisible = false\n\t\t\t\t}\n\n\t\t\t\t// Gesture for the side column\n\t\t\t\tif (this.getBackgroundColumns()[0].isVisible || this.focusedColumn.isInForeground) {\n\t\t\t\t\t// Gesture was with enough velocity to show the menu\n\t\t\t\t\tif (velocity > 0.8) {\n\t\t\t\t\t\tshow() // Gesture was with enough velocity to hide the menu and we're not scrolling vertically\n\t\t\t\t\t} else if (velocity < -0.8 && directionLock !== VERTICAL) {\n\t\t\t\t\t\thide()\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Finger was released without much velocity so if it's further than some distance from edge, open menu. Otherwise, close it.\n\t\t\t\t\t\tif (touch.pageX > mainColRect.left + 100) {\n\t\t\t\t\t\t\tshow()\n\t\t\t\t\t\t} else if (directionLock !== VERTICAL) {\n\t\t\t\t\t\t\thide()\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// Gesture for sliding other columns\n\t\t\t\t\tif ((safeLastGestureInfo.x > window.innerWidth / 3 || velocity > 0.8) && directionLock !== VERTICAL) {\n\t\t\t\t\t\tthis.focusPreviousColumn()\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst colRect = this.domSlidingPart.getBoundingClientRect()\n\n\t\t\t\t\t\t// Re-focus the column to reset offset changed by the gesture\n\t\t\t\t\t\tthis.busy = this.slideBackgroundColumns(this.focusedColumn, colRect.left, -this.focusedColumn.offset)\n\t\t\t\t\t\tthis.focus(this.focusedColumn)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.busy.then(() => m.redraw())\n\t\t\t}\n\n\t\t\t// If this is the first touch and not another one\n\t\t\tif (safeLastGestureInfo && safeLastGestureInfo.identifier === event.changedTouches[0].identifier) {\n\t\t\t\tlastGestureInfo = null\n\t\t\t\toldGestureInfo = null\n\t\t\t\tinitialGestureInfo = null\n\t\t\t\tdirectionLock = 0\n\t\t\t}\n\t\t}\n\n\t\tconst listeners = {\n\t\t\ttouchstart: (event: any) => {\n\t\t\t\tif (lastGestureInfo) {\n\t\t\t\t\t// Already detecting a gesture, ignore second one\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tconst mainCol = this.mainColumn.domColumn\n\n\t\t\t\tconst sideCol = this.getSideColDom()\n\n\t\t\t\tif (!mainCol || !sideCol || this.allColumnsVisible()) {\n\t\t\t\t\tlastGestureInfo = null\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tif (event.touches.length === 1 && (this.viewColumns[0].isInForeground || event.touches[0].pageX < 40)) {\n\t\t\t\t\t// Only stop propogation while the menu is not yet fully visible\n\t\t\t\t\tif (!this.viewColumns[0].isInForeground) {\n\t\t\t\t\t\tevent.stopPropagation()\n\t\t\t\t\t}\n\n\t\t\t\t\tlastGestureInfo = initialGestureInfo = gestureInfoFromTouch(event.touches[0])\n\t\t\t\t}\n\t\t\t},\n\t\t\ttouchmove: (event: any) => {\n\t\t\t\tconst sideCol = this.getSideColDom()\n\n\t\t\t\tif (!sideCol || !this.mainColumn || this.allColumnsVisible()) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tconst gestureInfo = lastGestureInfo\n\t\t\t\tconst safeInitialGestureInfo = initialGestureInfo\n\n\t\t\t\tif (gestureInfo && safeInitialGestureInfo && event.touches.length === 1) {\n\t\t\t\t\tconst touch = event.touches[0]\n\t\t\t\t\tconst newTouchPos = touch.pageX\n\t\t\t\t\tconst sideColRect = sideCol.getBoundingClientRect()\n\t\t\t\t\toldGestureInfo = lastGestureInfo\n\t\t\t\t\tconst safeLastInfo = (lastGestureInfo = gestureInfoFromTouch(touch))\n\n\t\t\t\t\t// If we have horizonal lock or we don't have vertical lock but would like to acquire horizontal one, the lock horizontally\n\t\t\t\t\tif (directionLock === HORIZONTAL || (directionLock !== VERTICAL && Math.abs(safeLastInfo.x - safeInitialGestureInfo.x) > 30)) {\n\t\t\t\t\t\tdirectionLock = HORIZONTAL\n\n\t\t\t\t\t\t// Gesture for side column\n\t\t\t\t\t\tif (this.getBackgroundColumns()[0].isVisible || this.focusedColumn.isInForeground) {\n\t\t\t\t\t\t\tconst newTranslate = Math.min(sideColRect.left - (gestureInfo.x - newTouchPos), 0)\n\t\t\t\t\t\t\tsideCol.style.transform = `translateX(${newTranslate}px)`\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Gesture for background column\n\t\t\t\t\t\t\tconst slidingDomRect = this.domSlidingPart.getBoundingClientRect()\n\n\t\t\t\t\t\t\t// Do not allow to move column to the left\n\t\t\t\t\t\t\tconst newTranslate = Math.max(slidingDomRect.left - (gestureInfo.x - newTouchPos), -this.focusedColumn.offset)\n\t\t\t\t\t\t\tthis.domSlidingPart.style.transform = `translateX(${newTranslate}px)`\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Scroll events are not cancellable and browsees complain a lot\n\t\t\t\t\t\tif (event.cancelable !== false) event.preventDefault() // If we don't have a vertical lock but we would like to acquire one, get it\n\t\t\t\t\t} else if (directionLock !== VERTICAL && Math.abs(safeLastInfo.y - safeInitialGestureInfo.y) > 30) {\n\t\t\t\t\t\tdirectionLock = VERTICAL\n\t\t\t\t\t}\n\n\t\t\t\t\tevent.stopPropagation()\n\t\t\t\t}\n\t\t\t},\n\t\t\ttouchend: gestureEnd,\n\t\t\ttouchcancel: gestureEnd,\n\t\t}\n\n\t\tfor (let [name, listener] of Object.entries(listeners)) {\n\t\t\telement.addEventListener(name, listener, true)\n\t\t}\n\t}\n}\n","import m, { Child, Children, Component, Vnode } from \"mithril\"\nimport { AriaLandmarks, landmarkAttrs } from \"../AriaUtils\"\nimport { assertMainOrNode } from \"../../api/common/Env\"\n\nassertMainOrNode()\nexport type Attrs = void\n\nexport class NavBar implements Component<Attrs> {\n\tview({ children }: Vnode<Attrs>): Children {\n\t\treturn m(\n\t\t\t\"nav.nav-bar.flex-end\",\n\t\t\tlandmarkAttrs(AriaLandmarks.Navigation, \"top\"),\n\t\t\t(children as Array<Child>).map((child) => m(\".plr-nav-button\", child)),\n\t\t)\n\t}\n}\n","import m, { Children, ClassComponent, Vnode } from \"mithril\"\nimport { NavBar } from \"./base/NavBar.js\"\nimport { isSelectedPrefix, NavButton, NavButtonColor } from \"./base/NavButton.js\"\nimport { FeatureType } from \"../api/common/TutanotaConstants.js\"\nimport { BootIcons } from \"./base/icons/BootIcons.js\"\nimport { CALENDAR_PREFIX, CONTACTLIST_PREFIX, CONTACTS_PREFIX, MAIL_PREFIX } from \"../misc/RouteChange.js\"\nimport { assertMainOrNode } from \"../api/common/Env.js\"\nimport { OfflineIndicator } from \"./base/OfflineIndicator.js\"\nimport { OfflineIndicatorViewModel } from \"./base/OfflineIndicatorViewModel.js\"\nimport { NewsModel } from \"../misc/news/NewsModel.js\"\nimport { locator } from \"../api/main/CommonLocator.js\"\nimport { ProgressBar } from \"./base/ProgressBar.js\"\nimport { DesktopBaseHeader } from \"./base/DesktopBaseHeader.js\"\n\nassertMainOrNode()\n\n/** Attrs that are used by different header components in the app.  */\nexport interface AppHeaderAttrs {\n\tnewsModel: NewsModel\n\tofflineIndicatorModel: OfflineIndicatorViewModel\n}\n\nexport interface HeaderAttrs extends AppHeaderAttrs {\n\trightView?: Children\n\thandleBackPress?: () => boolean\n\t/** search bar, only rendered when NOT using bottom navigation */\n\tsearchBar?: () => Children\n\t/** content in the center of the search bar, where title and offline status normally are */\n\tcenterContent?: () => Children\n}\n\nexport class Header implements ClassComponent<HeaderAttrs> {\n\tview({ attrs }: Vnode<HeaderAttrs>): Children {\n\t\treturn m(DesktopBaseHeader, [m(ProgressBar, { progress: attrs.offlineIndicatorModel.getProgress() }), this.renderNavigation(attrs)])\n\t}\n\n\t/**\n\t * render the search and navigation bar in three-column layouts. if there is a navigation, also render an offline indicator.\n\t * @private\n\t */\n\tprivate renderNavigation(attrs: HeaderAttrs): Children {\n\t\treturn m(\".flex-grow.flex.justify-end.items-center\", [\n\t\t\tattrs.searchBar ? attrs.searchBar() : null,\n\t\t\tm(OfflineIndicator, attrs.offlineIndicatorModel.getCurrentAttrs()),\n\t\t\tm(\".nav-bar-spacer\"),\n\t\t\tm(NavBar, this.renderButtons()),\n\t\t])\n\t}\n\n\tprivate renderButtons(): Children {\n\t\t// We assign click listeners to buttons to move focus correctly if the view is already open\n\t\treturn [\n\t\t\tm(NavButton, {\n\t\t\t\tlabel: \"emails_label\",\n\t\t\t\ticon: () => BootIcons.Mail,\n\t\t\t\thref: MAIL_PREFIX,\n\t\t\t\tisSelectedPrefix: MAIL_PREFIX,\n\t\t\t\tcolors: NavButtonColor.Header,\n\t\t\t}),\n\t\t\t// not available for external mailboxes\n\t\t\tlocator.logins.isInternalUserLoggedIn() && !locator.logins.isEnabled(FeatureType.DisableContacts)\n\t\t\t\t? m(NavButton, {\n\t\t\t\t\t\tlabel: \"contacts_label\",\n\t\t\t\t\t\ticon: () => BootIcons.Contacts,\n\t\t\t\t\t\thref: CONTACTS_PREFIX,\n\t\t\t\t\t\tisSelectedPrefix: isSelectedPrefix(CONTACTS_PREFIX) || isSelectedPrefix(CONTACTLIST_PREFIX),\n\t\t\t\t\t\tcolors: NavButtonColor.Header,\n\t\t\t\t  })\n\t\t\t\t: null,\n\t\t\t// not available for external mailboxes\n\t\t\tlocator.logins.isInternalUserLoggedIn() && !locator.logins.isEnabled(FeatureType.DisableCalendar)\n\t\t\t\t? m(NavButton, {\n\t\t\t\t\t\tlabel: \"calendar_label\",\n\t\t\t\t\t\ticon: () => BootIcons.Calendar,\n\t\t\t\t\t\thref: CALENDAR_PREFIX,\n\t\t\t\t\t\tcolors: NavButtonColor.Header,\n\t\t\t\t\t\tclick: () => m.route.get().startsWith(CALENDAR_PREFIX),\n\t\t\t\t  })\n\t\t\t\t: null,\n\t\t]\n\t}\n}\n","import m, { Component, Vnode } from \"mithril\"\nimport ColumnEmptyMessageBox from \"../../../common/gui/base/ColumnEmptyMessageBox\"\nimport { lang, Translation } from \"../../../common/misc/LanguageViewModel\"\nimport { BootIcons } from \"../../../common/gui/base/icons/BootIcons\"\nimport { theme } from \"../../../common/gui/theme\"\nimport { assertMainOrNode } from \"../../../common/api/common/Env\"\nimport { Contact } from \"../../../common/api/entities/tutanota/TypeRefs.js\"\nimport { Button, ButtonType } from \"../../../common/gui/base/Button.js\"\n\nassertMainOrNode()\n\nexport interface MultiContactViewerAttrs {\n\tselectedEntities: Contact[]\n\tselectNone: () => unknown\n}\n\n/**\n * The ContactViewer displays the action buttons for multiple selected contacts.\n */\nexport class MultiContactViewer implements Component<MultiContactViewerAttrs> {\n\tview({ attrs }: Vnode<MultiContactViewerAttrs>) {\n\t\treturn [\n\t\t\tm(ColumnEmptyMessageBox, {\n\t\t\t\tmessage: getContactSelectionMessage(attrs.selectedEntities.length),\n\t\t\t\ticon: BootIcons.Contacts,\n\t\t\t\tcolor: theme.content_message_bg,\n\t\t\t\tbottomContent:\n\t\t\t\t\tattrs.selectedEntities.length > 0\n\t\t\t\t\t\t? m(Button, {\n\t\t\t\t\t\t\t\tlabel: \"cancel_action\",\n\t\t\t\t\t\t\t\ttype: ButtonType.Secondary,\n\t\t\t\t\t\t\t\tclick: () => attrs.selectNone(),\n\t\t\t\t\t\t  })\n\t\t\t\t\t\t: undefined,\n\t\t\t\tbackgroundColor: theme.navigation_bg,\n\t\t\t}),\n\t\t]\n\t}\n}\n\nexport function getContactSelectionMessage(numberEntities: number): Translation {\n\tif (numberEntities === 0) {\n\t\treturn lang.getTranslation(\"noContact_msg\")\n\t} else {\n\t\treturn lang.getTranslation(\"nbrOfContactsSelected_msg\", {\n\t\t\t\"{1}\": numberEntities,\n\t\t})\n\t}\n}\n","import m, { Children, Component, Vnode } from \"mithril\"\nimport type { TranslationKey, MaybeTranslation } from \"../../misc/LanguageViewModel\"\nimport { lang } from \"../../misc/LanguageViewModel\"\nimport { theme } from \"../theme\"\nimport { inputLineHeight, px, size } from \"../size\"\nimport type { lazy } from \"@tutao/tutanota-utils\"\n\nexport type TextDisplayAreaAttrs = {\n\tvalue: string\n\tlabel: MaybeTranslation\n}\n\n/**\n * Simple text area to display some preformated non-editable text.\n */\nexport class TextDisplayArea implements Component<TextDisplayAreaAttrs> {\n\tview(vnode: Vnode<TextDisplayAreaAttrs>): Children {\n\t\treturn m(\".flex.flex-grow.flex-column.text.pt\", [\n\t\t\tm(\n\t\t\t\t\"label.text-ellipsis.noselect.z1.i.pr-s\",\n\t\t\t\t{\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tfontSize: px(size.font_size_small),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tlang.getTranslationText(vnode.attrs.label),\n\t\t\t),\n\t\t\tm(\n\t\t\t\t\".text-pre.flex-grow\",\n\t\t\t\t{\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tborderBottom: `1px solid ${theme.content_border}`,\n\t\t\t\t\t\tlineHeight: px(inputLineHeight),\n\t\t\t\t\t\tminHeight: px(inputLineHeight),\n\t\t\t\t\t},\n\t\t\t\t\tisReadOnly: true,\n\t\t\t\t},\n\t\t\t\tvnode.attrs.value,\n\t\t\t),\n\t\t])\n\t}\n}\n","import m, { ChildArray, Children } from \"mithril\"\nimport { Dialog } from \"../../../common/gui/base/Dialog\"\nimport { windowFacade } from \"../../../common/misc/WindowFacade\"\nimport { Icons } from \"../../../common/gui/base/icons/Icons\"\nimport { ContactAddressType, ContactMergeAction, getContactSocialType, Keys } from \"../../../common/api/common/TutanotaConstants\"\nimport type { TranslationKey } from \"../../../common/misc/LanguageViewModel\"\nimport { lang } from \"../../../common/misc/LanguageViewModel\"\nimport { formatContactDate } from \"../../../common/contactsFunctionality/ContactUtils.js\"\nimport { defer, DeferredObject, delay, downcast, Thunk } from \"@tutao/tutanota-utils\"\nimport { HtmlEditor, HtmlEditorMode } from \"../../../common/gui/editor/HtmlEditor\"\nimport { ButtonType } from \"../../../common/gui/base/Button.js\"\nimport type { Contact } from \"../../../common/api/entities/tutanota/TypeRefs.js\"\nimport { getContactAddressTypeLabel, getContactPhoneNumberTypeLabel, getContactSocialTypeLabel } from \"./ContactGuiUtils\"\nimport { TextField } from \"../../../common/gui/base/TextField.js\"\nimport { TextDisplayArea } from \"../../../common/gui/base/TextDisplayArea\"\nimport { DialogHeaderBarAttrs } from \"../../../common/gui/base/DialogHeaderBar\"\nimport { IconButton } from \"../../../common/gui/base/IconButton.js\"\nimport { LoginButton } from \"../../../common/gui/base/buttons/LoginButton.js\"\n\nexport class ContactMergeView {\n\tdialog: Dialog\n\tcontact1: Contact\n\tcontact2: Contact\n\tresolveFunction: DeferredObject<ContactMergeAction>[\"resolve\"] | null = null // must be called after the user action\n\n\twindowCloseUnsubscribe: Thunk | null = null\n\n\tconstructor(contact1: Contact, contact2: Contact) {\n\t\tthis.contact1 = contact1\n\t\tthis.contact2 = contact2\n\n\t\tconst cancelAction = () => {\n\t\t\tthis._close(ContactMergeAction.Cancel)\n\t\t}\n\n\t\tconst headerBarAttrs = {\n\t\t\tleft: [\n\t\t\t\t{\n\t\t\t\t\tlabel: \"cancel_action\",\n\t\t\t\t\tclick: cancelAction,\n\t\t\t\t\ttype: ButtonType.Secondary,\n\t\t\t\t},\n\t\t\t],\n\t\t\tright: [\n\t\t\t\t{\n\t\t\t\t\tlabel: \"skip_action\",\n\t\t\t\t\tclick: () => this._close(ContactMergeAction.Skip),\n\t\t\t\t\ttype: ButtonType.Primary,\n\t\t\t\t},\n\t\t\t],\n\t\t\tmiddle: \"merge_action\",\n\t\t}\n\t\tthis.dialog = Dialog.largeDialog(headerBarAttrs as DialogHeaderBarAttrs, this)\n\t\t\t.setCloseHandler(cancelAction)\n\t\t\t.addShortcut({\n\t\t\t\tkey: Keys.ESC,\n\t\t\t\texec: () => {\n\t\t\t\t\tthis._close(ContactMergeAction.Cancel)\n\t\t\t\t\treturn false\n\t\t\t\t},\n\t\t\t\thelp: \"close_alt\",\n\t\t\t})\n\t}\n\n\tview(): Children {\n\t\tconst { mailAddresses: mailAddresses1, phones: phones1, addresses: addresses1, socials: socials1 } = this._createContactFields(this.contact1)\n\n\t\tconst { mailAddresses: mailAddresses2, phones: phones2, addresses: addresses2, socials: socials2 } = this._createContactFields(this.contact2)\n\n\t\t//empty.. placeholders are used if one contact has an attribute while the other does not have it, so an empty one is shown for comparison\n\t\tlet emptyFieldPlaceholder = m(TextField, {\n\t\t\tlabel: \"emptyString_msg\",\n\t\t\tvalue: \"\",\n\t\t\tisReadOnly: true,\n\t\t})\n\t\tlet emptyHTMLFieldPlaceholder = m(\n\t\t\tnew HtmlEditor(\"emptyString_msg\").showBorders().setValue(\"\").setReadOnly(false).setMode(HtmlEditorMode.HTML).setHtmlMonospace(false),\n\t\t)\n\n\t\tlet titleFields = this._createTextFields(this.contact1.title, this.contact2.title, \"title_placeholder\")\n\n\t\tlet firstNameFields = this._createTextFields(this.contact1.firstName, this.contact2.firstName, \"firstName_placeholder\")\n\n\t\tlet lastNameFields = this._createTextFields(this.contact1.lastName, this.contact2.lastName, \"lastName_placeholder\")\n\n\t\tlet nicknameFields = this._createTextFields(this.contact1.nickname, this.contact2.nickname, \"nickname_placeholder\")\n\n\t\tlet companyFields = this._createTextFields(this.contact1.company, this.contact2.company, \"company_label\")\n\n\t\tlet roleFields = this._createTextFields(this.contact1.role, this.contact2.role, \"role_placeholder\")\n\n\t\tlet birthdayFields = this._createTextFields(formatContactDate(this.contact1.birthdayIso), formatContactDate(this.contact2.birthdayIso), \"birthday_alt\")\n\n\t\tlet presharedPasswordFields = this._createTextFields(\n\t\t\tthis.contact1.presharedPassword && this.contact1.presharedPassword.length > 0 ? \"***\" : \"\",\n\t\t\tthis.contact2.presharedPassword && this.contact2.presharedPassword.length > 0 ? \"***\" : \"\",\n\t\t\t\"presharedPassword_label\",\n\t\t)\n\n\t\tlet commentField1: Children = null\n\t\tlet commentField2: Children = null\n\n\t\tif (this.contact1.comment || this.contact2.comment) {\n\t\t\tcommentField1 = m(TextDisplayArea, {\n\t\t\t\tlabel: \"comment_label\",\n\t\t\t\tvalue: this.contact1.comment,\n\t\t\t})\n\t\t\tcommentField2 = m(TextDisplayArea, {\n\t\t\t\tlabel: \"comment_label\",\n\t\t\t\tvalue: this.contact2.comment,\n\t\t\t})\n\t\t}\n\n\t\treturn m(\n\t\t\t\"#contact-editor\",\n\t\t\t{\n\t\t\t\toncreate: () => (this.windowCloseUnsubscribe = windowFacade.addWindowCloseListener(() => {})),\n\t\t\t\tonremove: () => this.windowCloseUnsubscribe?.(),\n\t\t\t},\n\t\t\t[\n\t\t\t\tm(\".flex-center.mt\", [\n\t\t\t\t\tm(\".full-width.max-width-s\", [\n\t\t\t\t\t\tm(LoginButton, {\n\t\t\t\t\t\t\tlabel: \"mergeContacts_action\",\n\t\t\t\t\t\t\tonclick: () => this._close(ContactMergeAction.Merge),\n\t\t\t\t\t\t}),\n\t\t\t\t\t]),\n\t\t\t\t]),\n\t\t\t\tm(\".non-wrapping-row\", [\n\t\t\t\t\tm(\n\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t/*first contact */\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tm(\".items-center\", [\n\t\t\t\t\t\t\t\tm(\".items-base.flex-space-between\", [\n\t\t\t\t\t\t\t\t\tm(\".h4.mt-l\", lang.get(\"firstMergeContact_label\")),\n\t\t\t\t\t\t\t\t\tthis._createDeleteContactButton(ContactMergeAction.DeleteFirst),\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t],\n\t\t\t\t\t),\n\t\t\t\t\tm(\n\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t/*second contact */\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tm(\".items-center\", [\n\t\t\t\t\t\t\t\tm(\".items-base.flex-space-between\", [\n\t\t\t\t\t\t\t\t\tm(\".h4.mt-l\", lang.get(\"secondMergeContact_label\")),\n\t\t\t\t\t\t\t\t\tthis._createDeleteContactButton(ContactMergeAction.DeleteSecond),\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t],\n\t\t\t\t\t),\n\t\t\t\t]),\n\t\t\t\ttitleFields ? m(\".non-wrapping-row\", titleFields) : null,\n\t\t\t\tfirstNameFields ? m(\".non-wrapping-row\", firstNameFields) : null,\n\t\t\t\tlastNameFields ? m(\".non-wrapping-row\", lastNameFields) : null,\n\t\t\t\tnicknameFields ? m(\".non-wrapping-row\", nicknameFields) : null,\n\t\t\t\tcompanyFields ? m(\".non-wrapping-row\", companyFields) : null,\n\t\t\t\tbirthdayFields ? m(\".non-wrapping-row\", birthdayFields) : null,\n\t\t\t\troleFields ? m(\".non-wrapping-row\", roleFields) : null,\n\t\t\t\tmailAddresses1.length > 0 || mailAddresses2.length > 0\n\t\t\t\t\t? m(\".non-wrapping-row\", [\n\t\t\t\t\t\t\tm(\".mail.mt-l\", [m(\"\", lang.get(\"email_label\")), mailAddresses1.length > 0 ? mailAddresses1 : emptyFieldPlaceholder]),\n\t\t\t\t\t\t\tm(\".mail.mt-l\", [m(\"\", lang.get(\"email_label\")), mailAddresses2.length > 0 ? mailAddresses2 : emptyFieldPlaceholder]),\n\t\t\t\t\t  ])\n\t\t\t\t\t: null,\n\t\t\t\tphones1.length > 0 || phones2.length > 0\n\t\t\t\t\t? m(\".non-wrapping-row\", [\n\t\t\t\t\t\t\tm(\".phone.mt-l\", [m(\"\", lang.get(\"phone_label\")), m(\".aggregateEditors\", [phones1.length > 0 ? phones1 : emptyFieldPlaceholder])]),\n\t\t\t\t\t\t\tm(\".phone.mt-l\", [m(\"\", lang.get(\"phone_label\")), m(\".aggregateEditors\", [phones2.length > 0 ? phones2 : emptyFieldPlaceholder])]),\n\t\t\t\t\t  ])\n\t\t\t\t\t: null,\n\t\t\t\taddresses1.length > 0 || addresses2.length > 0\n\t\t\t\t\t? m(\".non-wrapping-row\", [\n\t\t\t\t\t\t\tm(\".address.mt-l.flex.flex-column\", [\n\t\t\t\t\t\t\t\tm(\"\", lang.get(\"address_label\")),\n\t\t\t\t\t\t\t\tm(\".aggregateEditors.flex.flex-column.flex-grow\", [addresses1.length > 0 ? addresses1 : emptyHTMLFieldPlaceholder]),\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\tm(\".address.mt-l\", [\n\t\t\t\t\t\t\t\tm(\"\", lang.get(\"address_label\")),\n\t\t\t\t\t\t\t\tm(\".aggregateEditors.flex.flex-column.flex-grow\", [addresses2.length > 0 ? addresses2 : emptyHTMLFieldPlaceholder]),\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t  ])\n\t\t\t\t\t: null,\n\t\t\t\tsocials1.length > 0 || socials2.length > 0\n\t\t\t\t\t? m(\".non-wrapping-row\", [\n\t\t\t\t\t\t\tm(\".social.mt-l\", [\n\t\t\t\t\t\t\t\tm(\"\", lang.get(\"social_label\")),\n\t\t\t\t\t\t\t\tm(\".aggregateEditors\", socials1.length > 0 ? socials1 : emptyFieldPlaceholder),\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\tm(\".social.mt-l\", [\n\t\t\t\t\t\t\t\tm(\"\", lang.get(\"social_label\")),\n\t\t\t\t\t\t\t\tm(\".aggregateEditors\", socials2.length > 0 ? socials2 : emptyFieldPlaceholder),\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t  ])\n\t\t\t\t\t: null,\n\t\t\t\tcommentField1 && commentField2\n\t\t\t\t\t? m(\".non-wrapping-row\", [m(\".mt-l.flex.flex-column\", [commentField1]), m(\".mt-l.flex.flex-column\", [commentField2])])\n\t\t\t\t\t: null,\n\t\t\t\tpresharedPasswordFields ? m(\".non-wrapping-row\", presharedPasswordFields) : null,\n\t\t\t\tm(\n\t\t\t\t\t\"\",\n\t\t\t\t\t{\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\theight: \"5px\",\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t/*Used as spacer so the last gui-element is not touching the window border*/\n\t\t\t\t),\n\t\t\t],\n\t\t)\n\t}\n\n\t_createContactFields(contact: Contact): {\n\t\tmailAddresses: ChildArray\n\t\tphones: ChildArray\n\t\taddresses: ChildArray\n\t\tsocials: ChildArray\n\t} {\n\t\tconst mailAddresses = contact.mailAddresses.map((element) => {\n\t\t\treturn m(TextField, {\n\t\t\t\tlabel: getContactAddressTypeLabel(element.type as any, element.customTypeName),\n\t\t\t\tvalue: element.address,\n\t\t\t\tisReadOnly: true,\n\t\t\t})\n\t\t})\n\t\tconst phones = contact.phoneNumbers.map((element) => {\n\t\t\treturn m(TextField, {\n\t\t\t\tlabel: getContactPhoneNumberTypeLabel(element.type as any, element.customTypeName),\n\t\t\t\tvalue: element.number,\n\t\t\t\tisReadOnly: true,\n\t\t\t})\n\t\t})\n\t\tconst addresses = contact.addresses.map((element) => {\n\t\t\t// Manually implement text area to make it stretch vertically. TextField is unable to do that.\n\t\t\treturn m(TextDisplayArea, {\n\t\t\t\tvalue: element.address,\n\t\t\t\tlabel: getContactAddressTypeLabel(downcast<ContactAddressType>(element.type), element.customTypeName),\n\t\t\t})\n\t\t})\n\t\tconst socials = contact.socialIds.map((element) => {\n\t\t\treturn m(TextField, {\n\t\t\t\tlabel: getContactSocialTypeLabel(getContactSocialType(element), element.customTypeName),\n\t\t\t\tvalue: element.socialId,\n\t\t\t\tisReadOnly: true,\n\t\t\t})\n\t\t})\n\t\treturn {\n\t\t\tmailAddresses,\n\t\t\tphones,\n\t\t\taddresses,\n\t\t\tsocials,\n\t\t}\n\t}\n\n\t_createTextFields(value1: string | null, value2: string | null, labelTextId: TranslationKey): Children {\n\t\tif (value1 || value2) {\n\t\t\treturn [\n\t\t\t\tm(TextField, {\n\t\t\t\t\tlabel: labelTextId,\n\t\t\t\t\tvalue: value1 || \"\",\n\t\t\t\t\tisReadOnly: true,\n\t\t\t\t}),\n\t\t\t\tm(TextField, {\n\t\t\t\t\tlabel: labelTextId,\n\t\t\t\t\tvalue: value2 || \"\",\n\t\t\t\t\tisReadOnly: true,\n\t\t\t\t}),\n\t\t\t]\n\t\t} else {\n\t\t\treturn null\n\t\t}\n\t}\n\n\t_createDeleteContactButton(action: ContactMergeAction): Children {\n\t\treturn m(IconButton, {\n\t\t\ttitle: \"delete_action\",\n\t\t\tclick: () => {\n\t\t\t\tDialog.confirm(\"deleteContact_msg\").then((confirmed) => {\n\t\t\t\t\tif (confirmed) {\n\t\t\t\t\t\tthis._close(action)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\t\t\ticon: Icons.Trash,\n\t\t})\n\t}\n\n\tshow(): Promise<ContactMergeAction> {\n\t\tthis.dialog.show()\n\t\tlet d = defer<ContactMergeAction>()\n\t\tthis.resolveFunction = d.resolve\n\t\treturn d.promise\n\t}\n\n\t_close(action: ContactMergeAction): void {\n\t\tthis.dialog.close()\n\t\tdelay(200).then(() => {\n\t\t\tthis.resolveFunction?.(action)\n\t\t})\n\t}\n}\n","import { FeatureType } from \"../../api/common/TutanotaConstants\"\nimport { locator } from \"../../api/main/CommonLocator.js\"\nimport { LoginController } from \"../../api/main/LoginController.js\"\n\nexport function showUpgradeDialog() {\n\timport(\"../../subscription/UpgradeSubscriptionWizard.js\").then((upgradeWizard) => upgradeWizard.showUpgradeWizard(locator.logins))\n}\n\nexport function showSupportDialog(logins: LoginController) {\n\timport(\"../../support/SupportDialog.js\").then((supportModule) => supportModule.showSupportDialog(logins))\n}\n\nexport function isNewMailActionAvailable(): boolean {\n\treturn locator.logins.isInternalUserLoggedIn() && !locator.logins.isEnabled(FeatureType.ReplyOnly)\n}\n","import m, { Children, Component, Vnode } from \"mithril\"\nimport { NewsId } from \"../../api/entities/tutanota/TypeRefs.js\"\nimport { NewsListItem } from \"./NewsListItem.js\"\nimport ColumnEmptyMessageBox from \"../../gui/base/ColumnEmptyMessageBox.js\"\nimport { theme } from \"../../gui/theme.js\"\nimport { Icons } from \"../../gui/base/icons/Icons.js\"\n\nexport interface NewsListAttrs {\n\tliveNewsListItems: Record<string, NewsListItem>\n\tliveNewsIds: NewsId[]\n}\n\n/**\n * Renders the user's list of unacknowledged news.\n */\nexport class NewsList implements Component<NewsListAttrs> {\n\tview(vnode: Vnode<NewsListAttrs>): Children {\n\t\tif (vnode.attrs.liveNewsIds.length === 0) {\n\t\t\treturn m(ColumnEmptyMessageBox, {\n\t\t\t\tmessage: \"noNews_msg\",\n\t\t\t\ticon: Icons.Bulb,\n\t\t\t\tcolor: theme.content_message_bg,\n\t\t\t})\n\t\t}\n\n\t\treturn m(\n\t\t\t\"\",\n\t\t\tvnode.attrs.liveNewsIds.map((liveNewsId) => {\n\t\t\t\tconst newsListItem = vnode.attrs.liveNewsListItems[liveNewsId.newsItemName]\n\n\t\t\t\treturn m(\".pt.pl-l.pr-l.flex.fill.border-grey.left.list-border-bottom\", { key: liveNewsId.newsItemId }, newsListItem.render(liveNewsId))\n\t\t\t}),\n\t\t)\n\t}\n}\n","import { ButtonAttrs, ButtonType } from \"../../gui/base/Button.js\"\nimport m, { Component } from \"mithril\"\nimport { DialogHeaderBar, DialogHeaderBarAttrs } from \"../../gui/base/DialogHeaderBar.js\"\nimport { lang } from \"../LanguageViewModel.js\"\nimport { Dialog, DialogType } from \"../../gui/base/Dialog.js\"\nimport { Keys } from \"../../api/common/TutanotaConstants.js\"\nimport { NewsList } from \"./NewsList.js\"\nimport { NewsModel } from \"./NewsModel.js\"\nimport { progressIcon } from \"../../gui/base/Icon.js\"\n\nexport function showNewsDialog(newsModel: NewsModel) {\n\tconst closeButton: ButtonAttrs = {\n\t\tlabel: \"close_alt\",\n\t\ttype: ButtonType.Secondary,\n\t\tclick: () => {\n\t\t\tcloseAction()\n\t\t},\n\t}\n\n\tconst closeAction = () => {\n\t\tdialog.close()\n\t}\n\tconst header: DialogHeaderBarAttrs = {\n\t\tleft: [closeButton],\n\t\tmiddle: \"news_label\",\n\t}\n\n\tlet loaded = false\n\tnewsModel.loadNewsIds().then(() => {\n\t\tloaded = true\n\t\tm.redraw()\n\t})\n\n\tconst child: Component = {\n\t\tview: () => {\n\t\t\treturn [\n\t\t\t\tm(\"\", [\n\t\t\t\t\tloaded\n\t\t\t\t\t\t? m(NewsList, {\n\t\t\t\t\t\t\t\tliveNewsIds: newsModel.liveNewsIds,\n\t\t\t\t\t\t\t\tliveNewsListItems: newsModel.liveNewsListItems,\n\t\t\t\t\t\t  })\n\t\t\t\t\t\t: m(\n\t\t\t\t\t\t\t\t\".flex-center.mt-l\",\n\t\t\t\t\t\t\t\tm(\".flex-v-center\", [m(\".full-width.flex-center\", progressIcon()), m(\"p\", lang.getTranslationText(\"pleaseWait_msg\"))]),\n\t\t\t\t\t\t  ),\n\t\t\t\t]),\n\t\t\t]\n\t\t},\n\t}\n\n\tconst dialog = new Dialog(DialogType.EditLarge, {\n\t\tview: () => {\n\t\t\treturn m(\"\", [m(DialogHeaderBar, header), m(\".dialog-container.scroll\", m(\".fill-absolute\", m(child)))])\n\t\t},\n\t}).addShortcut({\n\t\tkey: Keys.ESC,\n\t\texec: () => {\n\t\t\tcloseAction()\n\t\t},\n\t\thelp: \"close_alt\",\n\t})\n\tdialog.show()\n}\n","import m, { Children, Component, Vnode } from \"mithril\"\nimport { ButtonColor } from \"../base/Button.js\"\nimport { BootIcons } from \"../base/icons/BootIcons\"\nimport { showSupportDialog, showUpgradeDialog } from \"./NavFunctions\"\nimport { isIOSApp } from \"../../api/common/Env\"\nimport { LogoutUrl, SETTINGS_PREFIX } from \"../../misc/RouteChange\"\nimport { getSafeAreaInsetLeft } from \"../HtmlUtils\"\nimport { Icons } from \"../base/icons/Icons\"\nimport { AriaLandmarks, landmarkAttrs } from \"../AriaUtils\"\nimport { createDropdown } from \"../base/Dropdown.js\"\nimport { keyManager } from \"../../misc/KeyManager\"\nimport { CounterBadge } from \"../base/CounterBadge.js\"\nimport { px, size } from \"../size.js\"\nimport { theme } from \"../theme.js\"\nimport { showNewsDialog } from \"../../misc/news/NewsDialog.js\"\nimport { LoginController } from \"../../api/main/LoginController.js\"\nimport { NewsModel } from \"../../misc/news/NewsModel.js\"\nimport { DesktopSystemFacade } from \"../../native/common/generatedipc/DesktopSystemFacade.js\"\nimport { styles } from \"../styles.js\"\nimport { IconButton } from \"../base/IconButton.js\"\n\nexport interface DrawerMenuAttrs {\n\tlogins: LoginController\n\tnewsModel: NewsModel\n\tdesktopSystemFacade: DesktopSystemFacade | null\n}\n\nexport class DrawerMenu implements Component<DrawerMenuAttrs> {\n\tview(vnode: Vnode<DrawerMenuAttrs>): Children {\n\t\tconst { logins, newsModel, desktopSystemFacade } = vnode.attrs\n\t\tconst liveNewsCount = newsModel.liveNewsIds.length\n\n\t\tconst isInternalUser = logins.isInternalUserLoggedIn()\n\t\tconst isLoggedIn = logins.isUserLoggedIn()\n\t\tconst userController = logins.getUserController()\n\n\t\treturn m(\n\t\t\t\"drawer-menu.flex.col.items-center.pt.pb\",\n\t\t\t{\n\t\t\t\t...landmarkAttrs(AriaLandmarks.Contentinfo, \"drawer menu\"),\n\t\t\t\tstyle: {\n\t\t\t\t\t\"padding-left\": getSafeAreaInsetLeft(),\n\t\t\t\t\t\"border-top-right-radius\": styles.isDesktopLayout() ? px(size.border_radius_larger) : \"\",\n\t\t\t\t},\n\t\t\t},\n\t\t\t[\n\t\t\t\tm(\".flex-grow\"),\n\t\t\t\tisInternalUser && isLoggedIn\n\t\t\t\t\t? m(\".news-button\", [\n\t\t\t\t\t\t\tm(IconButton, {\n\t\t\t\t\t\t\t\ticon: Icons.Bulb,\n\t\t\t\t\t\t\t\ttitle: \"news_label\",\n\t\t\t\t\t\t\t\tclick: () => showNewsDialog(newsModel),\n\t\t\t\t\t\t\t\tcolors: ButtonColor.DrawerNav,\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tliveNewsCount > 0\n\t\t\t\t\t\t\t\t? m(CounterBadge, {\n\t\t\t\t\t\t\t\t\t\tcount: liveNewsCount,\n\t\t\t\t\t\t\t\t\t\tposition: {\n\t\t\t\t\t\t\t\t\t\t\ttop: px(0),\n\t\t\t\t\t\t\t\t\t\t\tright: px(3),\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tcolor: \"white\",\n\t\t\t\t\t\t\t\t\t\tbackground: theme.list_accent_fg,\n\t\t\t\t\t\t\t\t  })\n\t\t\t\t\t\t\t\t: null,\n\t\t\t\t\t  ])\n\t\t\t\t\t: null,\n\t\t\t\tlogins.isGlobalAdminUserLoggedIn() && userController.isPremiumAccount()\n\t\t\t\t\t? m(IconButton, {\n\t\t\t\t\t\t\ticon: Icons.Gift,\n\t\t\t\t\t\t\ttitle: \"buyGiftCard_label\",\n\t\t\t\t\t\t\tclick: () => {\n\t\t\t\t\t\t\t\tm.route.set(\"/settings/subscription\")\n\t\t\t\t\t\t\t\timport(\"../../subscription/giftcards/PurchaseGiftCardDialog\").then(({ showPurchaseGiftCardDialog }) => {\n\t\t\t\t\t\t\t\t\treturn showPurchaseGiftCardDialog()\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tcolors: ButtonColor.DrawerNav,\n\t\t\t\t\t  })\n\t\t\t\t\t: null,\n\t\t\t\tdesktopSystemFacade\n\t\t\t\t\t? m(IconButton, {\n\t\t\t\t\t\t\ticon: Icons.NewWindow,\n\t\t\t\t\t\t\ttitle: \"openNewWindow_action\",\n\t\t\t\t\t\t\tclick: () => {\n\t\t\t\t\t\t\t\tdesktopSystemFacade.openNewWindow()\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tcolors: ButtonColor.DrawerNav,\n\t\t\t\t\t  })\n\t\t\t\t\t: null,\n\t\t\t\t!isIOSApp() && isLoggedIn && userController.isFreeAccount()\n\t\t\t\t\t? m(IconButton, {\n\t\t\t\t\t\t\ticon: BootIcons.Premium,\n\t\t\t\t\t\t\ttitle: \"upgradePremium_label\",\n\t\t\t\t\t\t\tclick: () => showUpgradeDialog(),\n\t\t\t\t\t\t\tcolors: ButtonColor.DrawerNav,\n\t\t\t\t\t  })\n\t\t\t\t\t: null,\n\t\t\t\tm(IconButton, {\n\t\t\t\t\ttitle: \"showHelp_action\",\n\t\t\t\t\ticon: BootIcons.Help,\n\t\t\t\t\tclick: (e, dom) =>\n\t\t\t\t\t\tcreateDropdown({\n\t\t\t\t\t\t\twidth: 300,\n\t\t\t\t\t\t\tlazyButtons: () => [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tlabel: \"supportMenu_label\",\n\t\t\t\t\t\t\t\t\tclick: () => showSupportDialog(logins),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tlabel: \"keyboardShortcuts_title\",\n\t\t\t\t\t\t\t\t\tclick: () => keyManager.openF1Help(true),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t})(e, dom),\n\t\t\t\t\tcolors: ButtonColor.DrawerNav,\n\t\t\t\t}),\n\t\t\t\tisInternalUser\n\t\t\t\t\t? m(IconButton, {\n\t\t\t\t\t\t\ticon: BootIcons.Settings,\n\t\t\t\t\t\t\ttitle: \"settings_label\",\n\t\t\t\t\t\t\tclick: () => m.route.set(SETTINGS_PREFIX),\n\t\t\t\t\t\t\tcolors: ButtonColor.DrawerNav,\n\t\t\t\t\t  })\n\t\t\t\t\t: null,\n\t\t\t\tm(IconButton, {\n\t\t\t\t\ticon: BootIcons.Logout,\n\t\t\t\t\ttitle: \"switchAccount_action\",\n\t\t\t\t\tclick: () => m.route.set(LogoutUrl),\n\t\t\t\t\tcolors: ButtonColor.DrawerNav,\n\t\t\t\t}),\n\t\t\t],\n\t\t)\n\t}\n}\n","import { DrawerMenu, DrawerMenuAttrs } from \"./nav/DrawerMenu.js\"\nimport { theme } from \"./theme.js\"\nimport m, { Children, Component, Vnode } from \"mithril\"\nimport type { TranslationKey, MaybeTranslation } from \"../misc/LanguageViewModel.js\"\nimport { lang } from \"../misc/LanguageViewModel.js\"\nimport { AriaLandmarks, landmarkAttrs } from \"./AriaUtils.js\"\nimport type { ClickHandler } from \"./base/GuiUtils.js\"\nimport type { lazy } from \"@tutao/tutanota-utils\"\nimport { MainCreateButton } from \"./MainCreateButton.js\"\n\nexport type Attrs = {\n\t/** Button to be displayed on top of the column*/\n\tbutton: { label: TranslationKey; click: ClickHandler } | null | undefined\n\tcontent: Children\n\tariaLabel: MaybeTranslation\n\tdrawer: DrawerMenuAttrs\n}\n\nexport class FolderColumnView implements Component<Attrs> {\n\tview({ attrs }: Vnode<Attrs>): Children {\n\t\treturn m(\".flex.height-100p.nav-bg\", [\n\t\t\tm(DrawerMenu, attrs.drawer),\n\t\t\tm(\".folder-column.flex-grow.overflow-x-hidden.flex.col\", landmarkAttrs(AriaLandmarks.Navigation, lang.getTranslationText(attrs.ariaLabel)), [\n\t\t\t\tthis.renderMainButton(attrs),\n\t\t\t\tm(\n\t\t\t\t\t\".scroll.scrollbar-gutter-stable-or-fallback.visible-scrollbar.overflow-x-hidden.flex.col.flex-grow\",\n\t\t\t\t\t{\n\t\t\t\t\t\tonscroll: (e: EventRedraw<Event>) => {\n\t\t\t\t\t\t\te.redraw = false\n\t\t\t\t\t\t\tconst target = e.target as HTMLElement\n\t\t\t\t\t\t\tif (attrs.button == null || target.scrollTop === 0) {\n\t\t\t\t\t\t\t\ttarget.style.borderTop = \"\"\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ttarget.style.borderTop = `1px solid ${theme.content_border}`\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tattrs.content,\n\t\t\t\t),\n\t\t\t]),\n\t\t])\n\t}\n\n\tprivate renderMainButton(attrs: Attrs): Children {\n\t\tif (attrs.button) {\n\t\t\treturn m(\n\t\t\t\t\".plr-button-double.scrollbar-gutter-stable-or-fallback.scroll\",\n\t\t\t\tm(MainCreateButton, { label: attrs.button.label, click: attrs.button.click }),\n\t\t\t)\n\t\t} else {\n\t\t\treturn null\n\t\t}\n\t}\n}\n","import m, { Child, Children, Component, Vnode } from \"mithril\"\nimport type { MaybeTranslation } from \"../misc/LanguageViewModel\"\nimport { lang } from \"../misc/LanguageViewModel\"\nimport { theme } from \"./theme\"\nimport Stream from \"mithril/stream\"\nimport stream from \"mithril/stream\"\n\nexport type SidebarSectionAttrs = {\n\tname: MaybeTranslation\n\tbutton?: Child\n\thideIfEmpty?: true\n}\n\nexport class SidebarSection implements Component<SidebarSectionAttrs> {\n\texpanded: Stream<boolean> = stream(true)\n\n\tview(vnode: Vnode<SidebarSectionAttrs>): Children {\n\t\tconst { name, button, hideIfEmpty } = vnode.attrs\n\t\tconst content = vnode.children\n\t\tif (hideIfEmpty && content == false) return null // Using loose equality to check if children has any contents\n\t\treturn m(\n\t\t\t\".sidebar-section\",\n\t\t\t{\n\t\t\t\t\"data-testid\": `section:${lang.getTestId(name)}`,\n\t\t\t\tstyle: {\n\t\t\t\t\tcolor: theme.navigation_button,\n\t\t\t\t},\n\t\t\t},\n\t\t\t[\n\t\t\t\tm(\".folder-row.flex-space-between.plr-button.pt-s.button-height\", [\n\t\t\t\t\tm(\"small.b.align-self-center.text-ellipsis.plr-button\", lang.getTranslationText(name).toLocaleUpperCase()),\n\t\t\t\t\tbutton ?? null,\n\t\t\t\t]),\n\t\t\t\tcontent,\n\t\t\t],\n\t\t)\n\t}\n}\n","import m, { Children, Component, Vnode } from \"mithril\"\nimport { IconButton, IconButtonAttrs } from \"./base/IconButton.js\"\nimport { ClickHandler } from \"./base/GuiUtils.js\"\n\nexport interface MobileActionAttrs {\n\ticon: IconButtonAttrs[\"icon\"]\n\ttitle: IconButtonAttrs[\"title\"]\n\taction: ClickHandler\n}\n\nexport interface MobileActionBarAttrs {\n\tactions: Array<MobileActionAttrs>\n}\n\n/** Toolbar with optional delete & edit actions at the bottom of single-column layout. */\nexport class MobileActionBar implements Component<MobileActionBarAttrs> {\n\tview(vnode: Vnode<MobileActionBarAttrs>): Children {\n\t\tconst { attrs } = vnode\n\n\t\treturn m(\n\t\t\t\".bottom-nav.bottom-action-bar.flex.items-center.plr-l\",\n\t\t\t{\n\t\t\t\tstyle: {\n\t\t\t\t\tjustifyContent: \"space-around\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tattrs.actions.map((action) =>\n\t\t\t\tm(IconButton, {\n\t\t\t\t\ttitle: action.title,\n\t\t\t\t\ticon: action.icon,\n\t\t\t\t\tclick: action.action,\n\t\t\t\t}),\n\t\t\t),\n\t\t)\n\t}\n}\n","import m, { Children, Component, Vnode } from \"mithril\"\nimport { styles } from \"./styles.js\"\n\nexport interface BackgroundColumnLayoutAttrs {\n\tmobileHeader: () => Children\n\tdesktopToolbar: () => Children\n\tcolumnLayout: Children\n\tbackgroundColor?: string\n\tfloatingActionButton?: () => Children\n\tclasses?: string\n}\n\n/**\n * A layout component that organizes the column.\n * Renders a frame for the layout and either mobile header or desktop toolbar.\n */\nexport class BackgroundColumnLayout implements Component<BackgroundColumnLayoutAttrs> {\n\tview({ attrs }: Vnode<BackgroundColumnLayoutAttrs>): Children {\n\t\treturn m(\n\t\t\t\".list-column.flex.col.fill-absolute\",\n\t\t\t{\n\t\t\t\tstyle: {\n\t\t\t\t\tbackgroundColor: attrs.backgroundColor,\n\t\t\t\t},\n\t\t\t\tclass: attrs.classes ?? \"\",\n\t\t\t},\n\t\t\t[\n\t\t\t\tstyles.isUsingBottomNavigation() ? attrs.mobileHeader() : attrs.desktopToolbar(),\n\t\t\t\tm(\".flex-grow.rel\", attrs.columnLayout),\n\t\t\t\tattrs.floatingActionButton?.(),\n\t\t\t],\n\t\t)\n\t}\n}\n","import { pureComponent } from \"./base/PureComponent.js\"\nimport m from \"mithril\"\nimport { px, size } from \"./size.js\"\nimport { responsiveCardHMargin } from \"./cards.js\"\n\n/** Toolbar layout that is used in the second/list column. */\nexport const DesktopListToolbar = pureComponent((__, children) => {\n\treturn m(\n\t\t\".flex.pt-xs.pb-xs.items-center.list-bg\",\n\t\t{\n\t\t\tstyle: {\n\t\t\t\t\"border-radius\": `${size.border_radius}px 0 0 ${size.border_radius}px`,\n\t\t\t\t// matching the list\n\t\t\t\tmarginLeft: `5px`,\n\t\t\t\tmarginBottom: px(size.hpad_large),\n\t\t\t},\n\t\t},\n\t\tchildren,\n\t)\n})\n\n/** Toolbar layout that is used in the third/viewer column. */\nexport const DesktopViewerToolbar = pureComponent((__, children) => {\n\t// The viewer below will (or at least should) reserve some space for the scrollbar. To match that we put `scrollbar-gutter: stable` and for it to have\n\t// effect we put `overflow-y: hidden`.\n\t//\n\t// The outer wrapper will give us margins and padding for the scrollbar and the inner one will actually have to visible background\n\t//\n\t// see comment for .scrollbar-gutter-stable-or-fallback\n\treturn m(\n\t\t\".scrollbar-gutter-stable-or-fallback.overflow-y-hidden.noprint\",\n\t\t{\n\t\t\tclass: responsiveCardHMargin(),\n\t\t\tstyle: {\n\t\t\t\tmarginLeft: 0,\n\t\t\t\tmarginBottom: px(size.hpad_large),\n\t\t\t},\n\t\t},\n\t\tm(\n\t\t\t\".flex.list-bg.pt-xs.pb-xs.plr-m\",\n\t\t\t{\n\t\t\t\tstyle: {\n\t\t\t\t\t\"border-radius\": `0 ${size.border_radius_larger}px ${size.border_radius_larger}px 0`,\n\t\t\t\t},\n\t\t\t},\n\t\t\t[\n\t\t\t\t// Height keeps the toolbar showing for consistency, even if there are no actions\n\t\t\t\tm(\".flex-grow\", { style: { height: px(size.button_height) } }),\n\t\t\t\tchildren,\n\t\t\t],\n\t\t),\n\t)\n})\n","import m, { Children, Component, Vnode, VnodeDOM } from \"mithril\"\nimport { Contact } from \"../../../common/api/entities/tutanota/TypeRefs.js\"\nimport { IconButton } from \"../../../common/gui/base/IconButton.js\"\nimport { Icons } from \"../../../common/gui/base/icons/Icons.js\"\nimport { keyManager, Shortcut } from \"../../../common/misc/KeyManager.js\"\nimport { Keys } from \"../../../common/api/common/TutanotaConstants.js\"\n\nexport interface ContactViewToolbarAttrs {\n\tcontacts: Contact[]\n\tonEdit: (contact: Contact) => unknown\n\tonDelete: (contacts: Contact[]) => unknown\n\tonMerge: (left: Contact, right: Contact) => unknown\n\tonExport: (contacts: Contact[]) => unknown\n}\n\n/**\n * Displays actions for contact or multiple contacts.\n * Also registers shortcuts\n */\nexport class ContactViewerActions implements Component<ContactViewToolbarAttrs> {\n\tprivate shortcuts: Array<Shortcut> = []\n\n\tview({ attrs }: Vnode<ContactViewToolbarAttrs>): Children {\n\t\tconst { contacts, onDelete, onEdit, onMerge, onExport } = attrs\n\t\tconst actionButtons: Children[] = []\n\t\tif (this.canEdit(contacts)) {\n\t\t\tactionButtons.push(\n\t\t\t\tm(IconButton, {\n\t\t\t\t\ttitle: \"edit_action\",\n\t\t\t\t\tclick: () => onEdit(contacts[0]),\n\t\t\t\t\ticon: Icons.Edit,\n\t\t\t\t}),\n\t\t\t)\n\t\t} else if (this.canMerge(contacts)) {\n\t\t\tactionButtons.push(\n\t\t\t\tm(IconButton, {\n\t\t\t\t\ttitle: \"merge_action\",\n\t\t\t\t\tclick: () => onMerge(contacts[0], contacts[1]),\n\t\t\t\t\ticon: Icons.People,\n\t\t\t\t}),\n\t\t\t)\n\t\t}\n\n\t\tif (this.canExport(contacts)) {\n\t\t\tactionButtons.push(\n\t\t\t\tm(IconButton, {\n\t\t\t\t\ttitle: \"export_action\",\n\t\t\t\t\tclick: () => onExport(contacts),\n\t\t\t\t\ticon: Icons.Export,\n\t\t\t\t}),\n\t\t\t)\n\t\t}\n\t\tif (this.canDelete(contacts)) {\n\t\t\tactionButtons.push(\n\t\t\t\tm(IconButton, {\n\t\t\t\t\ttitle: \"delete_action\",\n\t\t\t\t\tclick: () => onDelete(contacts),\n\t\t\t\t\ticon: Icons.Trash,\n\t\t\t\t}),\n\t\t\t)\n\t\t}\n\t\treturn actionButtons\n\t}\n\n\tonupdate(vnode: VnodeDOM<ContactViewToolbarAttrs>) {\n\t\tkeyManager.unregisterShortcuts(this.shortcuts)\n\t\tthis.shortcuts.length = 0\n\t\tconst { contacts, onEdit, onDelete, onMerge, onExport } = vnode.attrs\n\t\tif (this.canEdit(contacts)) {\n\t\t\tthis.shortcuts.push({\n\t\t\t\tkey: Keys.E,\n\t\t\t\texec: () => {\n\t\t\t\t\tonEdit(contacts[0])\n\t\t\t\t},\n\t\t\t\thelp: \"edit_action\",\n\t\t\t})\n\t\t}\n\n\t\tif (this.canMerge(contacts)) {\n\t\t\tthis.shortcuts.push({\n\t\t\t\tkey: Keys.M,\n\t\t\t\tctrlOrCmd: true,\n\t\t\t\texec: () => {\n\t\t\t\t\tonMerge(contacts[0], contacts[1])\n\t\t\t\t},\n\t\t\t\thelp: \"merge_action\",\n\t\t\t})\n\t\t}\n\n\t\tif (this.canExport(contacts)) {\n\t\t\tthis.shortcuts.push({\n\t\t\t\tkey: Keys.E,\n\t\t\t\tctrlOrCmd: true,\n\t\t\t\texec: () => {\n\t\t\t\t\tonExport(contacts)\n\t\t\t\t},\n\t\t\t\thelp: \"export_action\",\n\t\t\t})\n\t\t}\n\t\tkeyManager.registerShortcuts(this.shortcuts)\n\t}\n\n\tonremove() {\n\t\tkeyManager.unregisterShortcuts(this.shortcuts)\n\t}\n\n\tprivate canExport(contacts: Contact[]) {\n\t\treturn contacts.length > 0\n\t}\n\n\tprivate canMerge(contacts: Contact[]) {\n\t\treturn contacts.length === 2\n\t}\n\n\tprivate canDelete(contacts: Contact[]) {\n\t\treturn contacts.length > 0\n\t}\n\n\tprivate canEdit(contacts: Contact[]) {\n\t\treturn contacts.length === 1\n\t}\n}\n","import { pureComponent } from \"./base/PureComponent.js\"\nimport m from \"mithril\"\n\n/** A layout that is used instead of bottom navigation in some situations. */\nexport const MobileBottomActionBar = pureComponent((_, children) => {\n\treturn m(\".bottom-nav.flex.items-center.plr-l.justify-between\", children)\n})\n","import { showFileChooser, showNativeFilePicker } from \"../../../common/file/FileController.js\"\nimport { utf8Uint8ArrayToString } from \"@tutao/tutanota-utils\"\nimport { showProgressDialog } from \"../../../common/gui/dialogs/ProgressDialog.js\"\nimport { locator } from \"../../../common/api/main/CommonLocator.js\"\nimport { Dialog } from \"../../../common/gui/base/Dialog.js\"\nimport { ContactModel } from \"../../../common/contactsFunctionality/ContactModel.js\"\nimport { ContactTypeRef } from \"../../../common/api/entities/tutanota/TypeRefs.js\"\nimport { exportContacts } from \"../VCardExporter.js\"\nimport { mailLocator } from \"../../mailLocator.js\"\nimport { isApp } from \"../../../common/api/common/Env.js\"\n\nexport async function importAsVCard() {\n\tconst allowedExtensions = [\"vcf\"]\n\tconst contactFiles = isApp() ? await showNativeFilePicker(allowedExtensions, true) : await showFileChooser(true, allowedExtensions)\n\tif (contactFiles.length <= 0) return\n\treturn showProgressDialog(\n\t\t\"pleaseWait_msg\",\n\t\t(async () => {\n\t\t\tconst contactImporter = await mailLocator.contactImporter()\n\t\t\tconst contactListId = await locator.contactModel.getContactListId()\n\t\t\t// If multiple vCard files where selected, combine the data within them\n\t\t\tconst vCardList = contactFiles.flatMap((contactFile) => {\n\t\t\t\treturn utf8Uint8ArrayToString(contactFile.data)\n\t\t\t})\n\t\t\tawait contactImporter.importContactsFromFile(vCardList, contactListId!)\n\t\t})(),\n\t)\n}\n\n/**\n *Creates a vCard file with all contacts if at least one contact exists\n */\nexport function exportAsVCard(contactModel: ContactModel): Promise<void> {\n\treturn showProgressDialog(\n\t\t\"pleaseWait_msg\",\n\t\tcontactModel.getContactListId().then((contactListId) => {\n\t\t\tif (!contactListId) return 0\n\t\t\treturn locator.entityClient.loadAll(ContactTypeRef, contactListId).then((allContacts) => {\n\t\t\t\tif (allContacts.length === 0) {\n\t\t\t\t\treturn 0\n\t\t\t\t} else {\n\t\t\t\t\treturn exportContacts(allContacts).then(() => allContacts.length)\n\t\t\t\t}\n\t\t\t})\n\t\t}),\n\t).then((nbrOfContacts) => {\n\t\tif (nbrOfContacts === 0) {\n\t\t\tDialog.message(\"noContacts_msg\")\n\t\t}\n\t})\n}\n","import { pureComponent } from \"./base/PureComponent.js\"\nimport m, { Children } from \"mithril\"\nimport { px, size } from \"./size.js\"\n\nexport interface BaseMobileHeaderAttrs {\n\tleft?: Children\n\tcenter?: Children\n\tright?: Children\n\tinjections?: Children\n}\n\n/**\n * A base component that should be used for all mobile headers.\n */\nexport const BaseMobileHeader = pureComponent(({ left, center, right, injections }: BaseMobileHeaderAttrs) => {\n\treturn m(\n\t\t\".flex.items-center.rel.button-height.mt-safe-inset.plr-safe-inset\",\n\t\t{\n\t\t\tstyle: {\n\t\t\t\theight: px(size.navbar_height_mobile),\n\t\t\t},\n\t\t},\n\t\t[\n\t\t\tleft ?? null,\n\t\t\t// normally min-width: is 0 but inside flex it's auto and we need to teach it how to shrink\n\t\t\tm(\n\t\t\t\t\".flex-grow.flex.items-center.min-width-0\",\n\t\t\t\t{\n\t\t\t\t\tclass: !left ? \"ml-hpad_small\" : \"\",\n\t\t\t\t},\n\t\t\t\tcenter ?? null,\n\t\t\t),\n\t\t\tright ?? null,\n\t\t\tinjections ?? null,\n\t\t],\n\t)\n})\n","import { pureComponent } from \"./base/PureComponent.js\"\nimport m, { Children, Component, Vnode } from \"mithril\"\nimport { NBSP } from \"@tutao/tutanota-utils\"\nimport { AppHeaderAttrs } from \"./Header.js\"\nimport { BaseMobileHeader } from \"./BaseMobileHeader.js\"\nimport { IconButton } from \"./base/IconButton.js\"\nimport { BootIcons } from \"./base/icons/BootIcons.js\"\nimport { styles } from \"./styles.js\"\nimport { OfflineIndicator } from \"./base/OfflineIndicator.js\"\nimport { ProgressBar } from \"./base/ProgressBar.js\"\nimport { CounterBadge } from \"./base/CounterBadge.js\"\nimport { px } from \"./size.js\"\nimport { theme } from \"./theme.js\"\nimport { NewsModel } from \"../misc/news/NewsModel.js\"\nimport { ClickHandler } from \"./base/GuiUtils.js\"\nimport { lang, MaybeTranslation } from \"../misc/LanguageViewModel.js\"\n\nexport interface MobileHeaderAttrs extends AppHeaderAttrs {\n\tcolumnType: \"first\" | \"other\"\n\t/** Actions that should be displayed on the opposite side of menu/back button. */\n\tactions: Children\n\t/** Like actions that are only supposed to be displayed in multi-column layout */\n\tmulticolumnActions?: () => Children\n\t/**\n\t * An action that is displayed in the corner of the screen opposite of menu/back button, will be displayed in any column in single column layout or\n\t * in the second column in two column layout.\n\t */\n\tprimaryAction: () => Children\n\ttitle?: MaybeTranslation\n\tbackAction: () => unknown\n\tuseBackButton?: boolean\n}\n\n/**\n * A component that renders a \"standard\" mobile header. It has menu/back button with offline indicator, title and online status, sync progress and some\n * actions.\n *\n * It is intended to be used in both the first (\"list\") and the second (\"viewer\") columns. It will automatically figure whether it should display menu/back\n * button, title and actions.\n */\nexport class MobileHeader implements Component<MobileHeaderAttrs> {\n\tview({ attrs }: Vnode<MobileHeaderAttrs>): Children {\n\t\tconst firstVisibleColumn = attrs.columnType === \"first\" || styles.isSingleColumnLayout()\n\t\treturn m(BaseMobileHeader, {\n\t\t\tleft: this.renderLeftAction(attrs),\n\t\t\tcenter: firstVisibleColumn\n\t\t\t\t? m(MobileHeaderTitle, {\n\t\t\t\t\t\ttitle: attrs.title ? lang.getTranslationText(attrs.title) : undefined,\n\t\t\t\t\t\tbottom: m(OfflineIndicator, attrs.offlineIndicatorModel.getCurrentAttrs()),\n\t\t\t\t  })\n\t\t\t\t: null,\n\t\t\tright: [\n\t\t\t\tstyles.isSingleColumnLayout() ? null : attrs.multicolumnActions?.(),\n\t\t\t\tattrs.actions,\n\t\t\t\tstyles.isSingleColumnLayout() || attrs.columnType === \"other\" ? attrs.primaryAction() : null,\n\t\t\t],\n\t\t\tinjections: firstVisibleColumn ? m(ProgressBar, { progress: attrs.offlineIndicatorModel.getProgress() }) : null,\n\t\t})\n\t}\n\n\tprivate renderLeftAction(attrs: MobileHeaderAttrs) {\n\t\tif (attrs.columnType === \"first\" && !attrs.useBackButton) {\n\t\t\treturn m(MobileHeaderMenuButton, { newsModel: attrs.newsModel, backAction: attrs.backAction })\n\t\t} else if (styles.isSingleColumnLayout() || attrs.useBackButton) {\n\t\t\treturn m(MobileHeaderBackButton, { backAction: attrs.backAction })\n\t\t}\n\n\t\treturn null\n\t}\n}\n\nexport const MobileHeaderBackButton = pureComponent(({ backAction }: { backAction: () => unknown }) => {\n\treturn m(IconButton, {\n\t\ttitle: \"back_action\",\n\t\ticon: BootIcons.Back,\n\t\tclick: () => {\n\t\t\tbackAction()\n\t\t},\n\t})\n})\n\nexport const MobileHeaderTitle = pureComponent(({ title, bottom, onTap }: { title?: string | Children; bottom: Children; onTap?: ClickHandler }) => {\n\t// normally min-width: is 0 but inside flex it's auto and we need to teach it how to shrink\n\t// align-self: stretch restrict the child to the parent width\n\t// text-ellipsis already sets min-width to 0\n\treturn m(\".flex.col.items-start.min-width-0\", [\n\t\tm(\n\t\t\t(onTap ? \"button\" : \"\") + \".font-weight-600.text-ellipsis.align-self-stretch\",\n\t\t\t{ onclick: (event: MouseEvent) => onTap?.(event, event.target as HTMLElement) },\n\t\t\ttitle ?? NBSP,\n\t\t),\n\t\tbottom,\n\t])\n})\n\nexport const MobileHeaderMenuButton = pureComponent(({ newsModel, backAction }: { newsModel: NewsModel; backAction: () => unknown }) => {\n\treturn m(\".rel\", [\n\t\tm(IconButton, {\n\t\t\ttitle: \"menu_label\",\n\t\t\ticon: BootIcons.MoreVertical,\n\t\t\tclick: () => {\n\t\t\t\tbackAction()\n\t\t\t},\n\t\t}),\n\t\tm(CounterBadge, {\n\t\t\tcount: newsModel.liveNewsIds.length,\n\t\t\tposition: {\n\t\t\t\ttop: px(4),\n\t\t\t\tright: px(5),\n\t\t\t},\n\t\t\tcolor: \"white\",\n\t\t\tbackground: theme.list_accent_fg,\n\t\t}),\n\t])\n})\n","import m, { Children, ClassComponent, Vnode } from \"mithril\"\nimport type { SearchBar, SearchBarAttrs } from \"./search/SearchBar.js\"\nimport { LazyLoaded } from \"@tutao/tutanota-utils\"\n\n/**\n * Lazy wrapper around SearchBar which unfortunately resides in the search chunk right now and cannot be imported from some files.\n *\n * Ideally this would be a generic component but it's not simple to implement.\n */\nexport class LazySearchBar implements ClassComponent<SearchBarAttrs> {\n\tprivate static searchBar: LazyLoaded<SearchBar> = new LazyLoaded(async () => {\n\t\tconst { searchBar } = await import(\"./search/SearchBar.js\")\n\t\tm.redraw()\n\t\treturn searchBar\n\t})\n\n\toninit(vnode: Vnode<SearchBarAttrs, this>): any {\n\t\tLazySearchBar.searchBar.load()\n\t}\n\n\tview(vnode: Vnode<SearchBarAttrs, this>): Children | void | null {\n\t\tconst searchBar = LazySearchBar.searchBar.getSync()\n\t\tif (searchBar) {\n\t\t\treturn m(searchBar, vnode.attrs)\n\t\t} else {\n\t\t\treturn null\n\t\t}\n\t}\n}\n\nexport const lazySearchBar = new LazySearchBar()\n","import { pureComponent } from \"./base/PureComponent.js\"\nimport { SelectAllCheckbox, SelectAllCheckboxAttrs } from \"./SelectAllCheckbox.js\"\nimport m from \"mithril\"\nimport { BaseMobileHeader } from \"./BaseMobileHeader.js\"\nimport { IconButton } from \"./base/IconButton.js\"\nimport { Icons } from \"./base/icons/Icons.js\"\nimport { lang, MaybeTranslation } from \"../misc/LanguageViewModel.js\"\n\ntype MultiselectMobileHeaderAttrs = SelectAllCheckboxAttrs & {\n\tmessage: MaybeTranslation\n}\n/** A special header that is used for multiselect state on mobile. */\nexport const MultiselectMobileHeader = pureComponent((attrs: MultiselectMobileHeaderAttrs) => {\n\tconst { selectAll, selectNone, selected, message } = attrs\n\treturn m(BaseMobileHeader, {\n\t\tleft: m(SelectAllCheckbox, { selectNone, selectAll, selected }),\n\t\tcenter: m(\".font-weight-600\", lang.getTranslationText(message)),\n\t\tright: m(IconButton, {\n\t\t\ticon: Icons.Cancel,\n\t\t\ttitle: \"cancel_action\",\n\t\t\tclick: () => selectNone(),\n\t\t}),\n\t})\n})\n","import { pureComponent } from \"./base/PureComponent.js\"\nimport m from \"mithril\"\nimport { IconButton } from \"./base/IconButton.js\"\nimport { Icons } from \"./base/icons/Icons.js\"\n\nexport const EnterMultiselectIconButton = pureComponent(({ clickAction }: { clickAction: () => unknown }) =>\n\tm(IconButton, {\n\t\ticon: Icons.AddCheckCirle,\n\t\ttitle: \"selectMultiple_action\",\n\t\tclick: () => {\n\t\t\tclickAction()\n\t\t},\n\t}),\n)\n","import m, { Children, Component, Vnode } from \"mithril\"\nimport { assertMainOrNode } from \"../../../common/api/common/Env.js\"\nimport { ListColumnWrapper } from \"../../../common/gui/ListColumnWrapper.js\"\nimport ColumnEmptyMessageBox from \"../../../common/gui/base/ColumnEmptyMessageBox.js\"\nimport { theme } from \"../../../common/gui/theme.js\"\nimport { Icons } from \"../../../common/gui/base/icons/Icons.js\"\nimport { List, MultiselectMode, RenderConfig } from \"../../../common/gui/base/List.js\"\nimport { ContactListEntry } from \"../../../common/api/entities/tutanota/TypeRefs.js\"\nimport { noOp } from \"@tutao/tutanota-utils\"\nimport { ContactListViewModel } from \"./ContactListViewModel.js\"\nimport { VirtualRow } from \"../../../common/gui/base/ListUtils.js\"\nimport {\n\tcheckboxOpacity,\n\tscaleXHide,\n\tscaleXShow,\n\tselectableRowAnimParams,\n\tSelectableRowContainer,\n\tSelectableRowSelectedSetter,\n\tshouldAlwaysShowMultiselectCheckbox,\n} from \"../../../common/gui/SelectableRowContainer.js\"\nimport { px, size } from \"../../../common/gui/size.js\"\nimport { shiftByForCheckbox, translateXHide, translateXShow } from \"./ContactRow.js\"\nimport { styles } from \"../../../common/gui/styles.js\"\n\nassertMainOrNode()\n\nexport interface ContactListViewAttrs {\n\tviewModel: ContactListViewModel\n\tfocusDetailsViewer: () => unknown\n}\n\nexport class ContactListRecipientView implements Component<ContactListViewAttrs> {\n\tprivate viewModel: ContactListViewModel | null = null\n\n\tview({ attrs: { viewModel, focusDetailsViewer } }: Vnode<ContactListViewAttrs>): Children {\n\t\tthis.viewModel = viewModel\n\n\t\tconst listModel = this.viewModel.listModel\n\t\treturn m(\n\t\t\tListColumnWrapper,\n\t\t\t{\n\t\t\t\theaderContent: null,\n\t\t\t},\n\t\t\tlistModel == null || listModel.isEmptyAndDone()\n\t\t\t\t? m(ColumnEmptyMessageBox, {\n\t\t\t\t\t\tcolor: theme.list_message_bg,\n\t\t\t\t\t\tmessage: \"noEntries_msg\",\n\t\t\t\t\t\ticon: Icons.People,\n\t\t\t\t  })\n\t\t\t\t: m(List, {\n\t\t\t\t\t\trenderConfig: this.renderConfig,\n\t\t\t\t\t\tstate: listModel.state,\n\t\t\t\t\t\tonLoadMore: () => listModel.loadMore(),\n\t\t\t\t\t\tonRetryLoading: () => listModel.retryLoading(),\n\t\t\t\t\t\tonStopLoading: () => listModel.stopLoading(),\n\t\t\t\t\t\tonSingleSelection: (item: ContactListEntry) => {\n\t\t\t\t\t\t\tlistModel.onSingleSelection(item)\n\t\t\t\t\t\t\tfocusDetailsViewer()\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonSingleTogglingMultiselection: (item: ContactListEntry) => {\n\t\t\t\t\t\t\tlistModel.onSingleInclusiveSelection(item, styles.isSingleColumnLayout())\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonRangeSelectionTowards: (item: ContactListEntry) => {\n\t\t\t\t\t\t\tlistModel.selectRangeTowards(item)\n\t\t\t\t\t\t},\n\t\t\t\t  }),\n\t\t)\n\t}\n\n\tprivate readonly renderConfig: RenderConfig<ContactListEntry, RecipientRow> = {\n\t\titemHeight: size.list_row_height,\n\t\tmultiselectionAllowed: MultiselectMode.Enabled,\n\t\tswipe: null,\n\t\tcreateElement: (dom) => {\n\t\t\tconst recipientEntryRow = new RecipientRow((entity) => this.viewModel?.listModel?.onSingleExclusiveSelection(entity))\n\t\t\tm.render(dom, recipientEntryRow.render())\n\t\t\treturn recipientEntryRow\n\t\t},\n\t}\n}\n\nexport class RecipientRow implements VirtualRow<ContactListEntry> {\n\ttop: number = 0\n\tdomElement: HTMLElement | null = null // set from List\n\tprivate checkboxDom!: HTMLInputElement\n\tprivate checkboxWasVisible = shouldAlwaysShowMultiselectCheckbox()\n\n\tentity: ContactListEntry | null = null\n\tprivate selectionUpdater!: SelectableRowSelectedSetter\n\tprivate titleDom!: HTMLElement\n\tprivate idDom!: HTMLElement\n\n\tconstructor(private readonly onSelected: (entity: ContactListEntry, selected: boolean) => unknown) {}\n\n\tupdate(entry: ContactListEntry, selected: boolean, isInMultiSelect: boolean): void {\n\t\tthis.entity = entry\n\n\t\tthis.selectionUpdater(selected, false)\n\t\tthis.showCheckboxAnimated(shouldAlwaysShowMultiselectCheckbox() || isInMultiSelect)\n\t\tcheckboxOpacity(this.checkboxDom, selected)\n\t\tthis.checkboxDom.checked = selected && isInMultiSelect\n\n\t\tthis.titleDom.textContent = entry.emailAddress\n\t}\n\n\tprivate showCheckboxAnimated(show: boolean) {\n\t\tif (this.checkboxWasVisible === show) return\n\t\tif (show) {\n\t\t\tthis.titleDom.style.paddingRight = shiftByForCheckbox\n\n\t\t\tconst addressAnim = this.titleDom.animate({ transform: [translateXHide, translateXShow] }, selectableRowAnimParams)\n\t\t\tconst checkboxAnim = this.checkboxDom.animate({ transform: [scaleXHide, scaleXShow] }, selectableRowAnimParams)\n\n\t\t\tPromise.all([addressAnim.finished, checkboxAnim.finished]).then(() => {\n\t\t\t\taddressAnim.cancel()\n\t\t\t\tcheckboxAnim.cancel()\n\t\t\t\tthis.showCheckbox(show)\n\t\t\t}, noOp)\n\t\t} else {\n\t\t\tthis.titleDom.style.paddingRight = \"0\"\n\n\t\t\tconst addressAnim = this.titleDom.animate({ transform: [translateXShow, translateXHide] }, selectableRowAnimParams)\n\t\t\tconst checkboxAnim = this.checkboxDom.animate({ transform: [scaleXShow, scaleXHide] }, selectableRowAnimParams)\n\n\t\t\tPromise.all([addressAnim.finished, checkboxAnim.finished]).then(() => {\n\t\t\t\taddressAnim.cancel()\n\t\t\t\tcheckboxAnim.cancel()\n\t\t\t\tthis.showCheckbox(show)\n\t\t\t}, noOp)\n\t\t}\n\t\tthis.checkboxWasVisible = show\n\t}\n\n\trender(): Children {\n\t\treturn m(\n\t\t\tSelectableRowContainer,\n\t\t\t{\n\t\t\t\toncreate: (vnode) => {\n\t\t\t\t\tPromise.resolve().then(() => this.showCheckbox(shouldAlwaysShowMultiselectCheckbox()))\n\t\t\t\t},\n\t\t\t\tonSelectedChangeRef: (updater) => (this.selectionUpdater = updater),\n\t\t\t},\n\t\t\tm(\".mt-xs.abs\", [\n\t\t\t\tm(\".text-ellipsis.smaller.mt-xxs\", {\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\theight: px(9),\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t\tm(\"input.checkbox.list-checkbox\", {\n\t\t\t\t\ttype: \"checkbox\",\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\ttransformOrigin: \"left\",\n\t\t\t\t\t},\n\t\t\t\t\tonclick: (e: MouseEvent) => {\n\t\t\t\t\t\te.stopPropagation()\n\t\t\t\t\t},\n\t\t\t\t\tonchange: () => {\n\t\t\t\t\t\tif (this.entity) this.onSelected(this.entity, this.checkboxDom.checked)\n\t\t\t\t\t},\n\t\t\t\t\toncreate: (vnode) => {\n\t\t\t\t\t\tthis.checkboxDom = vnode.dom as HTMLInputElement\n\t\t\t\t\t\tcheckboxOpacity(this.checkboxDom, false)\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t\tm(\".text-ellipsis.smaller.mt-xxs\", {\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\theight: px(9),\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t]),\n\t\t\tm(\".flex.col.overflow-hidden.flex-grow\", [\n\t\t\t\tm(\"\", [\n\t\t\t\t\tm(\".text-ellipsis.smaller.mt-xxs\", {\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\theight: px(9),\n\t\t\t\t\t\t},\n\t\t\t\t\t}),\n\t\t\t\t\tm(\".text-ellipsis.badge-line-height\", {\n\t\t\t\t\t\toncreate: (vnode) => (this.titleDom = vnode.dom as HTMLElement),\n\t\t\t\t\t}),\n\t\t\t\t\tm(\".text-ellipsis.smaller.mt-xxs\", {\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\theight: px(9),\n\t\t\t\t\t\t},\n\t\t\t\t\t}),\n\t\t\t\t]),\n\t\t\t]),\n\t\t)\n\t}\n\n\tprivate showCheckbox(show: boolean) {\n\t\tlet translate\n\t\tlet scale\n\t\tlet padding\n\t\tif (show) {\n\t\t\ttranslate = translateXShow\n\t\t\tscale = scaleXShow\n\t\t\tpadding = shiftByForCheckbox\n\t\t} else {\n\t\t\ttranslate = translateXHide\n\t\t\tscale = scaleXHide\n\t\t\tpadding = \"0\"\n\t\t}\n\n\t\tthis.titleDom.style.transform = translate\n\t\tthis.titleDom.style.paddingRight = padding\n\t\tthis.checkboxDom.style.transform = scale\n\t\t// Stop the hidden checkbox from entering the tab index\n\t\tthis.checkboxDom.style.display = show ? \"\" : \"none\"\n\t}\n}\n","import m, { Children, Component, Vnode } from \"mithril\"\nimport { Contact, ContactListEntry, createContact, createContactMailAddress } from \"../../../common/api/entities/tutanota/TypeRefs.js\"\nimport { theme } from \"../../../common/gui/theme.js\"\nimport { Button, ButtonType } from \"../../../common/gui/base/Button.js\"\nimport { responsiveCardHMargin } from \"../../../common/gui/cards.js\"\nimport { ContactCardViewer } from \"./ContactCardViewer.js\"\nimport { ContactAddressType } from \"../../../common/api/common/TutanotaConstants.js\"\nimport { PartialRecipient } from \"../../../common/api/common/recipients/Recipient.js\"\nimport { lang, Translation } from \"../../../common/misc/LanguageViewModel.js\"\n\nexport interface ContactListEntryViewerAttrs {\n\tentry: ContactListEntry\n\tcontacts: Contact[]\n\tcontactEdit: (contact: Contact) => unknown\n\tcontactDelete: (contacts: Contact[]) => unknown\n\tcontactCreate: (contact: Contact) => unknown\n\tonWriteMail: (to: PartialRecipient) => unknown\n\tselectNone: () => unknown\n}\n\nexport class ContactListEntryViewer implements Component<ContactListEntryViewerAttrs> {\n\tview({ attrs }: Vnode<ContactListEntryViewerAttrs>): Children {\n\t\treturn m(\".flex.flex-column\", [\n\t\t\tm(\n\t\t\t\t\".border-radius-big.rel\",\n\t\t\t\t{\n\t\t\t\t\tclass: responsiveCardHMargin(),\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tbackgroundColor: theme.content_bg,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tm(\".plr-l.pt.pb.mlr-safe-inset\", m(\".h2.selectable.text-break\", attrs.entry.emailAddress)),\n\t\t\t),\n\t\t\tm(\".mt-l\"),\n\t\t\tattrs.contacts.length >= 1\n\t\t\t\t? attrs.contacts.map((contact) =>\n\t\t\t\t\t\tm(ContactCardViewer, {\n\t\t\t\t\t\t\tcontact,\n\t\t\t\t\t\t\tonWriteMail: attrs.onWriteMail,\n\t\t\t\t\t\t\teditAction: attrs.contactEdit,\n\t\t\t\t\t\t\tdeleteAction: attrs.contactDelete,\n\t\t\t\t\t\t}),\n\t\t\t\t  )\n\t\t\t\t: m(\n\t\t\t\t\t\t\".border-radius-big.rel\",\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tclass: responsiveCardHMargin(),\n\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\tbackgroundColor: theme.content_bg,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tm(\n\t\t\t\t\t\t\t\".plr-l.pt.pb.mlr-safe-inset\",\n\t\t\t\t\t\t\tlang.get(\"noContactFound_msg\"),\n\t\t\t\t\t\t\tm(Button, {\n\t\t\t\t\t\t\t\tlabel: \"createContact_action\",\n\t\t\t\t\t\t\t\tclick: () => {\n\t\t\t\t\t\t\t\t\tlet newContact = createContact({\n\t\t\t\t\t\t\t\t\t\tmailAddresses: [\n\t\t\t\t\t\t\t\t\t\t\tcreateContactMailAddress({\n\t\t\t\t\t\t\t\t\t\t\t\ttype: ContactAddressType.WORK,\n\t\t\t\t\t\t\t\t\t\t\t\tcustomTypeName: \"\",\n\t\t\t\t\t\t\t\t\t\t\t\taddress: attrs.entry.emailAddress,\n\t\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\toldBirthdayAggregate: null,\n\t\t\t\t\t\t\t\t\t\taddresses: [],\n\t\t\t\t\t\t\t\t\t\tbirthdayIso: null,\n\t\t\t\t\t\t\t\t\t\tcomment: \"\",\n\t\t\t\t\t\t\t\t\t\tcompany: \"\",\n\t\t\t\t\t\t\t\t\t\tfirstName: \"\",\n\t\t\t\t\t\t\t\t\t\tlastName: \"\",\n\t\t\t\t\t\t\t\t\t\tnickname: null,\n\t\t\t\t\t\t\t\t\t\toldBirthdayDate: null,\n\t\t\t\t\t\t\t\t\t\tphoneNumbers: [],\n\t\t\t\t\t\t\t\t\t\tphoto: null,\n\t\t\t\t\t\t\t\t\t\trole: \"\",\n\t\t\t\t\t\t\t\t\t\tpresharedPassword: null,\n\t\t\t\t\t\t\t\t\t\tsocialIds: [],\n\t\t\t\t\t\t\t\t\t\ttitle: null,\n\t\t\t\t\t\t\t\t\t\tdepartment: null,\n\t\t\t\t\t\t\t\t\t\tmiddleName: null,\n\t\t\t\t\t\t\t\t\t\tnameSuffix: null,\n\t\t\t\t\t\t\t\t\t\tphoneticFirst: null,\n\t\t\t\t\t\t\t\t\t\tphoneticLast: null,\n\t\t\t\t\t\t\t\t\t\tphoneticMiddle: null,\n\t\t\t\t\t\t\t\t\t\tcustomDate: [],\n\t\t\t\t\t\t\t\t\t\tmessengerHandles: [],\n\t\t\t\t\t\t\t\t\t\tpronouns: [],\n\t\t\t\t\t\t\t\t\t\trelationships: [],\n\t\t\t\t\t\t\t\t\t\twebsites: [],\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\tattrs.contactCreate(newContact)\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\ttype: ButtonType.Primary,\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t),\n\t\t\t\t  ),\n\t\t])\n\t}\n}\n\nexport function getContactListEntriesSelectionMessage(selectedEntities: ContactListEntry[] | undefined): Translation {\n\tif (selectedEntities && selectedEntities.length > 0) {\n\t\treturn lang.getTranslation(\"nbrOfEntriesSelected_msg\", { \"{nbr}\": selectedEntities.length })\n\t} else {\n\t\treturn lang.getTranslation(\"noSelection_msg\")\n\t}\n}\n","import m, { Children, Component, Vnode } from \"mithril\"\nimport { NavButton } from \"../../common/gui/base/NavButton.js\"\nimport { size } from \"../../common/gui/size\"\nimport { CALENDAR_PREFIX, CONTACTS_PREFIX, MAIL_PREFIX, SEARCH_PREFIX } from \"../../common/misc/RouteChange\"\nimport { FeatureType } from \"../../common/api/common/TutanotaConstants\"\nimport { BootIcons } from \"../../common/gui/base/icons/BootIcons\"\nimport { locator } from \"../../common/api/main/CommonLocator.js\"\n\ntype Attrs = void\nconst fontSize = size.font_size_small\n\nfunction getHrefForSearch(): string {\n\tconst route = m.route.get()\n\tif (route.startsWith(SEARCH_PREFIX)) {\n\t\treturn route\n\t} else if (route.startsWith(CONTACTS_PREFIX)) {\n\t\treturn \"/search/contact\"\n\t} else if (route.startsWith(CALENDAR_PREFIX)) {\n\t\treturn \"/search/calendar\"\n\t} else {\n\t\treturn \"/search/mail\"\n\t}\n}\n\nexport class BottomNav implements Component<Attrs> {\n\tview(vnode: Vnode<Attrs>): Children {\n\t\t// Using bottom-nav class too to match it inside media queries like @print, otherwise it's not matched\n\t\treturn m(\"nav.bottom-nav.flex.items-center.z1\", [\n\t\t\tm(NavButton, {\n\t\t\t\tlabel: \"emails_label\",\n\t\t\t\ticon: () => BootIcons.Mail,\n\t\t\t\thref: MAIL_PREFIX,\n\t\t\t\tvertical: true,\n\t\t\t\tfontSize,\n\t\t\t}),\n\t\t\tlocator.logins.isInternalUserLoggedIn()\n\t\t\t\t? m(NavButton, {\n\t\t\t\t\t\tlabel: \"search_label\",\n\t\t\t\t\t\ticon: () => BootIcons.Search,\n\t\t\t\t\t\thref: () => getHrefForSearch(),\n\t\t\t\t\t\tisSelectedPrefix: SEARCH_PREFIX,\n\t\t\t\t\t\tvertical: true,\n\t\t\t\t\t\tfontSize,\n\t\t\t\t  })\n\t\t\t\t: null,\n\t\t\tlocator.logins.isInternalUserLoggedIn() && !locator.logins.isEnabled(FeatureType.DisableContacts)\n\t\t\t\t? m(NavButton, {\n\t\t\t\t\t\tlabel: \"contacts_label\",\n\t\t\t\t\t\ticon: () => BootIcons.Contacts,\n\t\t\t\t\t\thref: () => CONTACTS_PREFIX,\n\t\t\t\t\t\tisSelectedPrefix: CONTACTS_PREFIX,\n\t\t\t\t\t\tvertical: true,\n\t\t\t\t\t\tfontSize,\n\t\t\t\t  })\n\t\t\t\t: null,\n\t\t\tlocator.logins.isInternalUserLoggedIn() && !locator.logins.isEnabled(FeatureType.DisableCalendar)\n\t\t\t\t? m(NavButton, {\n\t\t\t\t\t\tlabel: \"calendar_label\",\n\t\t\t\t\t\ticon: () => BootIcons.Calendar,\n\t\t\t\t\t\thref: CALENDAR_PREFIX,\n\t\t\t\t\t\tvertical: true,\n\t\t\t\t\t\tfontSize,\n\t\t\t\t  })\n\t\t\t\t: null,\n\t\t])\n\t}\n}\n","import m, { Children, Component, Vnode } from \"mithril\"\nimport { AllIcons, Icon, IconSize } from \"./Icon\"\nimport { isNavButtonSelected, NavButton, NavButtonAttrs } from \"./NavButton\"\nimport { ClickHandler } from \"./GuiUtils\"\nimport type { TranslationKey, MaybeTranslation } from \"../../misc/LanguageViewModel\"\nimport type { lazy } from \"@tutao/tutanota-utils\"\nimport { stateBgHover } from \"../builtinThemes\"\nimport { client } from \"../../misc/ClientDetector\"\nimport { IconButton, IconButtonAttrs } from \"./IconButton\"\nimport { theme } from \"../theme\"\n\nexport interface SidebarSectionRowAttrs {\n\ticon: AllIcons\n\tlabel: MaybeTranslation\n\tpath: string\n\tonClick: ClickHandler\n\tmoreButton: IconButtonAttrs\n\ticonColor?: string\n\talwaysShowMoreButton?: boolean\n\tisSelectedPrefix?: string | boolean\n\tdisabled?: boolean\n}\n\n/**\n * Selectable navigation row, typically used in the sidebar, like contact list or labels.\n */\nexport class SidebarSectionRow implements Component<SidebarSectionRowAttrs> {\n\tprivate hovered: boolean = false\n\n\tview({ attrs }: Vnode<SidebarSectionRowAttrs>): Children {\n\t\tconst onHover = () => {\n\t\t\tthis.hovered = true\n\t\t}\n\n\t\t// because onblur is fired upon changing folder due to the route change\n\t\t// these functions can be used to handle keyboard navigation\n\t\tconst handleForwardsTab = (event: KeyboardEvent) => {\n\t\t\tif (event.key === \"Tab\" && !event.shiftKey) {\n\t\t\t\tthis.hovered = false\n\t\t\t}\n\t\t}\n\t\tconst handleBackwardsTab = (event: KeyboardEvent) => {\n\t\t\tif (event.key === \"Tab\" && event.shiftKey) this.hovered = false\n\t\t}\n\n\t\tconst navButtonAttrs: NavButtonAttrs = {\n\t\t\tlabel: attrs.label,\n\t\t\thref: () => attrs.path,\n\t\t\tdisableHoverBackground: true,\n\t\t\tclick: attrs.onClick,\n\t\t\tonfocus: onHover,\n\t\t\tonkeydown: handleBackwardsTab,\n\t\t\tisSelectedPrefix: attrs.isSelectedPrefix,\n\t\t\tdisabled: attrs.disabled,\n\t\t}\n\n\t\treturn m(\n\t\t\t\".folder-row.flex.flex-row.mlr-button.border-radius-small.state-bg.border-radius-small\",\n\t\t\t{\n\t\t\t\tstyle: { background: isNavButtonSelected(navButtonAttrs) ? stateBgHover : \"\" },\n\t\t\t\tonmouseenter: onHover,\n\t\t\t\tonmouseleave: () => {\n\t\t\t\t\tthis.hovered = false\n\t\t\t\t},\n\t\t\t},\n\t\t\t[\n\t\t\t\t// we render icon on our own to be able to override the color and to control the padding\n\t\t\t\tm(\n\t\t\t\t\t\".button-height.flex.items-center.plr-button\",\n\t\t\t\t\tm(Icon, {\n\t\t\t\t\t\ticon: attrs.icon,\n\t\t\t\t\t\tsize: IconSize.Medium,\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\tfill: attrs.iconColor ?? (isNavButtonSelected(navButtonAttrs) ? theme.navigation_button_selected : theme.navigation_button),\n\t\t\t\t\t\t},\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t\tm(NavButton, navButtonAttrs),\n\t\t\t\tattrs.alwaysShowMoreButton || (!client.isMobileDevice() && this.hovered)\n\t\t\t\t\t? m(IconButton, {\n\t\t\t\t\t\t\t...attrs.moreButton,\n\t\t\t\t\t\t\tclick: (event, dom) => {\n\t\t\t\t\t\t\t\tattrs.moreButton.click(event, dom)\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tonkeydown: handleForwardsTab,\n\t\t\t\t\t  })\n\t\t\t\t\t: null,\n\t\t\t],\n\t\t)\n\t}\n}\n","import m, { Children, Vnode } from \"mithril\"\nimport { ViewSlider } from \"../../../common/gui/nav/ViewSlider.js\"\nimport { ColumnType, ViewColumn } from \"../../../common/gui/base/ViewColumn\"\nimport { AppHeaderAttrs, Header } from \"../../../common/gui/Header.js\"\nimport { Button, ButtonColor, ButtonType } from \"../../../common/gui/base/Button.js\"\nimport { ContactEditor } from \"../ContactEditor\"\nimport { Contact, ContactTypeRef } from \"../../../common/api/entities/tutanota/TypeRefs.js\"\nimport { ContactListView } from \"./ContactListView\"\nimport { lang, TranslationKey } from \"../../../common/misc/LanguageViewModel\"\nimport { assertNotNull, clear, getFirstOrThrow, noOp, ofClass } from \"@tutao/tutanota-utils\"\nimport { ContactMergeAction, Keys } from \"../../../common/api/common/TutanotaConstants\"\nimport { assertMainOrNode, isApp } from \"../../../common/api/common/Env\"\nimport type { Shortcut } from \"../../../common/misc/KeyManager\"\nimport { keyManager } from \"../../../common/misc/KeyManager\"\nimport { Icons } from \"../../../common/gui/base/icons/Icons\"\nimport { Dialog } from \"../../../common/gui/base/Dialog\"\nimport { LockedError, NotFoundError } from \"../../../common/api/common/error/RestError\"\nimport { getContactSelectionMessage, MultiContactViewer } from \"./MultiContactViewer\"\nimport { BootIcons } from \"../../../common/gui/base/icons/BootIcons\"\nimport { showProgressDialog } from \"../../../common/gui/dialogs/ProgressDialog\"\nimport { locator } from \"../../../common/api/main/CommonLocator\"\nimport { ContactMergeView } from \"./ContactMergeView\"\nimport { getMergeableContacts, mergeContacts } from \"../ContactMergeUtils\"\nimport { exportContacts } from \"../VCardExporter\"\nimport { NavButtonAttrs } from \"../../../common/gui/base/NavButton.js\"\nimport { styles } from \"../../../common/gui/styles\"\nimport { size } from \"../../../common/gui/size\"\nimport { FolderColumnView } from \"../../../common/gui/FolderColumnView.js\"\nimport { getGroupInfoDisplayName } from \"../../../common/api/common/utils/GroupUtils\"\nimport { SidebarSection } from \"../../../common/gui/SidebarSection\"\nimport { attachDropdown, createDropdown, DropdownButtonAttrs } from \"../../../common/gui/base/Dropdown.js\"\nimport { IconButton, IconButtonAttrs } from \"../../../common/gui/base/IconButton.js\"\nimport { ButtonSize } from \"../../../common/gui/base/ButtonSize.js\"\nimport { DrawerMenuAttrs } from \"../../../common/gui/nav/DrawerMenu.js\"\nimport { BaseTopLevelView } from \"../../../common/gui/BaseTopLevelView.js\"\nimport { TopLevelAttrs, TopLevelView } from \"../../../TopLevelView.js\"\nimport { ContactCardViewer } from \"./ContactCardViewer.js\"\nimport { MobileActionBar } from \"../../../common/gui/MobileActionBar.js\"\nimport { appendEmailSignature } from \"../../mail/signature/Signature.js\"\nimport { PartialRecipient } from \"../../../common/api/common/recipients/Recipient.js\"\nimport { newMailEditorFromTemplate } from \"../../mail/editor/MailEditor.js\"\nimport { BackgroundColumnLayout } from \"../../../common/gui/BackgroundColumnLayout.js\"\nimport { theme } from \"../../../common/gui/theme.js\"\nimport { DesktopListToolbar, DesktopViewerToolbar } from \"../../../common/gui/DesktopToolbars.js\"\nimport { SelectAllCheckbox } from \"../../../common/gui/SelectAllCheckbox.js\"\nimport { ContactViewerActions } from \"./ContactViewerActions.js\"\nimport { MobileBottomActionBar } from \"../../../common/gui/MobileBottomActionBar.js\"\nimport { exportAsVCard, importAsVCard } from \"./ImportAsVCard.js\"\nimport { MobileHeader } from \"../../../common/gui/MobileHeader.js\"\nimport { LazySearchBar } from \"../../LazySearchBar.js\"\nimport { MultiselectMobileHeader } from \"../../../common/gui/MultiselectMobileHeader.js\"\nimport { MultiselectMode } from \"../../../common/gui/base/List.js\"\nimport { EnterMultiselectIconButton } from \"../../../common/gui/EnterMultiselectIconButton.js\"\nimport { selectionAttrsForList } from \"../../../common/misc/ListModel.js\"\nimport { ContactViewModel } from \"./ContactViewModel.js\"\nimport { listSelectionKeyboardShortcuts } from \"../../../common/gui/base/ListUtils.js\"\nimport { ContactListViewModel } from \"./ContactListViewModel.js\"\nimport { ContactListRecipientView } from \"./ContactListRecipientView.js\"\nimport { showContactListEditor, showContactListNameEditor } from \"../ContactListEditor.js\"\nimport { ContactListEntryViewer, getContactListEntriesSelectionMessage } from \"./ContactListEntryViewer.js\"\nimport { showPlanUpgradeRequiredDialog } from \"../../../common/misc/SubscriptionDialogs.js\"\nimport ColumnEmptyMessageBox from \"../../../common/gui/base/ColumnEmptyMessageBox.js\"\nimport { ContactListInfo } from \"../../../common/contactsFunctionality/ContactModel.js\"\nimport { CONTACTLIST_PREFIX } from \"../../../common/misc/RouteChange.js\"\nimport { mailLocator } from \"../../mailLocator.js\"\nimport { BottomNav } from \"../../gui/BottomNav.js\"\nimport { SidebarSectionRow, SidebarSectionRowAttrs } from \"../../../common/gui/base/SidebarSectionRow\"\nimport { client } from \"../../../common/misc/ClientDetector\"\n\nassertMainOrNode()\n\nexport interface ContactViewAttrs extends TopLevelAttrs {\n\tdrawerAttrs: DrawerMenuAttrs\n\theader: AppHeaderAttrs\n\tcontactViewModel: ContactViewModel\n\tcontactListViewModel: ContactListViewModel\n}\n\nexport class ContactView extends BaseTopLevelView implements TopLevelView<ContactViewAttrs> {\n\tprivate listColumn: ViewColumn\n\tprivate folderColumn: ViewColumn\n\tprivate viewSlider: ViewSlider\n\tprivate contactViewModel: ContactViewModel\n\tprivate contactListViewModel: ContactListViewModel\n\tprivate detailsColumn: ViewColumn\n\tprivate invitationRows: Children\n\n\toncreate: TopLevelView[\"oncreate\"]\n\tonremove: TopLevelView[\"onremove\"]\n\n\tconstructor(vnode: Vnode<ContactViewAttrs>) {\n\t\tsuper()\n\t\tthis.contactViewModel = vnode.attrs.contactViewModel\n\t\tthis.contactListViewModel = vnode.attrs.contactListViewModel\n\t\t// safe to call multiple times but we need to do it early to load the contact list groups\n\t\tthis.contactListViewModel.init()\n\n\t\tthis.folderColumn = new ViewColumn(\n\t\t\t{\n\t\t\t\tview: () =>\n\t\t\t\t\tm(FolderColumnView, {\n\t\t\t\t\t\tdrawer: vnode.attrs.drawerAttrs,\n\t\t\t\t\t\tbutton: styles.isUsingBottomNavigation()\n\t\t\t\t\t\t\t? null\n\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\tlabel: \"newContact_action\",\n\t\t\t\t\t\t\t\t\tclick: () => this.createNewContact(),\n\t\t\t\t\t\t\t  },\n\t\t\t\t\t\tcontent: [\n\t\t\t\t\t\t\tm(\n\t\t\t\t\t\t\t\tSidebarSection,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: lang.makeTranslation(\"group_info\", getGroupInfoDisplayName(locator.logins.getUserController().userGroupInfo)),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tthis.renderSidebarElements(),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t],\n\t\t\t\t\t\tariaLabel: \"folderTitle_label\",\n\t\t\t\t\t}),\n\t\t\t},\n\t\t\tColumnType.Foreground,\n\t\t\t{\n\t\t\t\tminWidth: size.first_col_min_width,\n\t\t\t\tmaxWidth: size.first_col_max_width,\n\t\t\t\theaderCenter: \"folderTitle_label\",\n\t\t\t},\n\t\t)\n\n\t\tthis.listColumn = new ViewColumn(\n\t\t\t{\n\t\t\t\tview: () =>\n\t\t\t\t\tthis.inContactListView() ? this.renderContactListRecipientColumn(vnode.attrs.header) : this.renderContactListColumn(vnode.attrs.header),\n\t\t\t},\n\t\t\tColumnType.Background,\n\t\t\t{\n\t\t\t\tminWidth: size.second_col_min_width,\n\t\t\t\tmaxWidth: size.second_col_max_width,\n\t\t\t\theaderCenter: this.getHeaderLabel(),\n\t\t\t},\n\t\t)\n\n\t\tthis.detailsColumn = new ViewColumn(\n\t\t\t{\n\t\t\t\tview: () =>\n\t\t\t\t\tm(BackgroundColumnLayout, {\n\t\t\t\t\t\tbackgroundColor: theme.navigation_bg,\n\t\t\t\t\t\tdesktopToolbar: () => m(DesktopViewerToolbar, this.detailsViewerActions()),\n\t\t\t\t\t\tmobileHeader: () =>\n\t\t\t\t\t\t\tm(MobileHeader, {\n\t\t\t\t\t\t\t\t...vnode.attrs.header,\n\t\t\t\t\t\t\t\tbackAction: () => this.viewSlider.focusPreviousColumn(),\n\t\t\t\t\t\t\t\tactions: null,\n\t\t\t\t\t\t\t\tmulticolumnActions: () => this.detailsViewerActions(),\n\t\t\t\t\t\t\t\tprimaryAction: () => {\n\t\t\t\t\t\t\t\t\treturn this.inContactListView() ? null : this.renderHeaderRightView()\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\ttitle: this.getHeaderLabel(),\n\t\t\t\t\t\t\t\tcolumnType: \"other\",\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\tcolumnLayout:\n\t\t\t\t\t\t\t// see comment for .scrollbar-gutter-stable-or-fallback\n\t\t\t\t\t\t\tm(\".fill-absolute.flex.col.overflow-y-scroll\", this.renderDetailsViewer()),\n\t\t\t\t\t}),\n\t\t\t},\n\t\t\tColumnType.Background,\n\t\t\t{\n\t\t\t\tminWidth: size.third_col_min_width,\n\t\t\t\tmaxWidth: size.third_col_max_width,\n\t\t\t\tariaLabel: () => this.getHeaderLabel(),\n\t\t\t},\n\t\t)\n\n\t\tthis.viewSlider = new ViewSlider([this.folderColumn, this.listColumn, this.detailsColumn])\n\n\t\tconst shortcuts = this.getShortcuts()\n\t\tthis.oncreate = (vnode) => {\n\t\t\tkeyManager.registerShortcuts(shortcuts)\n\t\t}\n\n\t\tthis.onremove = () => {\n\t\t\tkeyManager.unregisterShortcuts(shortcuts)\n\t\t}\n\t}\n\n\tprivate renderContactListColumn(header: AppHeaderAttrs) {\n\t\treturn m(BackgroundColumnLayout, {\n\t\t\tbackgroundColor: theme.navigation_bg,\n\t\t\tcolumnLayout: m(ContactListView, {\n\t\t\t\tcontactViewModel: this.contactViewModel,\n\t\t\t\tonSingleSelection: () => {\n\t\t\t\t\tthis.viewSlider.focus(this.detailsColumn)\n\t\t\t\t},\n\t\t\t}),\n\t\t\tdesktopToolbar: () => this.renderListToolbar(),\n\t\t\tmobileHeader: () =>\n\t\t\t\tthis.contactViewModel.listModel.state.inMultiselect\n\t\t\t\t\t? m(MultiselectMobileHeader, {\n\t\t\t\t\t\t\t...selectionAttrsForList(this.contactViewModel.listModel),\n\t\t\t\t\t\t\tmessage: getContactSelectionMessage(this.getSelectedContacts().length),\n\t\t\t\t\t  })\n\t\t\t\t\t: m(MobileHeader, {\n\t\t\t\t\t\t\t...header,\n\t\t\t\t\t\t\tbackAction: () => this.viewSlider.focusPreviousColumn(),\n\t\t\t\t\t\t\tcolumnType: \"first\",\n\t\t\t\t\t\t\ttitle: this.listColumn.getTitle(),\n\t\t\t\t\t\t\tactions: m(\".flex\", [\n\t\t\t\t\t\t\t\tthis.renderSortByButton(),\n\t\t\t\t\t\t\t\tm(EnterMultiselectIconButton, {\n\t\t\t\t\t\t\t\t\tclickAction: () => {\n\t\t\t\t\t\t\t\t\t\tthis.contactViewModel.listModel.enterMultiselect()\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\tprimaryAction: () => this.renderHeaderRightView(),\n\t\t\t\t\t  }),\n\t\t})\n\t}\n\n\tprivate renderContactListRecipientColumn(header: AppHeaderAttrs) {\n\t\treturn m(BackgroundColumnLayout, {\n\t\t\tbackgroundColor: theme.navigation_bg,\n\t\t\tcolumnLayout: m(ContactListRecipientView, {\n\t\t\t\tviewModel: this.contactListViewModel,\n\t\t\t\tfocusDetailsViewer: () => {\n\t\t\t\t\tthis.viewSlider.focus(this.detailsColumn)\n\t\t\t\t},\n\t\t\t}),\n\t\t\tdesktopToolbar: () => this.renderListToolbar(),\n\t\t\tmobileHeader: () =>\n\t\t\t\tthis.contactListViewModel.listModel?.state.inMultiselect\n\t\t\t\t\t? m(MultiselectMobileHeader, {\n\t\t\t\t\t\t\t...selectionAttrsForList(this.contactListViewModel.listModel),\n\t\t\t\t\t\t\tmessage: getContactSelectionMessage(this.contactListViewModel.listModel?.getSelectedAsArray().length),\n\t\t\t\t\t  })\n\t\t\t\t\t: m(MobileHeader, {\n\t\t\t\t\t\t\t...header,\n\t\t\t\t\t\t\tbackAction: () => this.viewSlider.focusPreviousColumn(),\n\t\t\t\t\t\t\tcolumnType: \"first\",\n\t\t\t\t\t\t\ttitle: this.listColumn.getTitle(),\n\t\t\t\t\t\t\tactions: m(\".flex\", [\n\t\t\t\t\t\t\t\tm(EnterMultiselectIconButton, {\n\t\t\t\t\t\t\t\t\tclickAction: () => {\n\t\t\t\t\t\t\t\t\t\tthis.contactListViewModel.listModel?.enterMultiselect()\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\tprimaryAction: () => {\n\t\t\t\t\t\t\t\tif (this.canEditSelectedContactList()) {\n\t\t\t\t\t\t\t\t\treturn m(IconButton, {\n\t\t\t\t\t\t\t\t\t\ttitle: \"addEntries_action\",\n\t\t\t\t\t\t\t\t\t\tclick: () => this.addAddressesToContactList(),\n\t\t\t\t\t\t\t\t\t\ticon: Icons.Add,\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn null\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t  }),\n\t\t})\n\t}\n\n\tprivate canEditSelectedContactList(): boolean {\n\t\tconst contactListInfo = this.contactListViewModel.getSelectedContactListInfo()\n\t\treturn contactListInfo != null && contactListInfo.canEdit\n\t}\n\n\tprivate detailsViewerActions(): Children {\n\t\tif (this.inContactListView()) {\n\t\t\tconst recipients = this.contactListViewModel.getSelectedContactListEntries()\n\t\t\tif (recipients && recipients.length > 0 && this.canEditSelectedContactList()) {\n\t\t\t\treturn m(IconButton, {\n\t\t\t\t\ttitle: \"delete_action\",\n\t\t\t\t\ticon: Icons.Trash,\n\t\t\t\t\tclick: () => this.contactListViewModel.deleteContactListEntries(recipients),\n\t\t\t\t})\n\t\t\t}\n\t\t} else {\n\t\t\tconst contacts = this.getSelectedContacts()\n\t\t\treturn m(ContactViewerActions, {\n\t\t\t\tcontacts,\n\t\t\t\tonEdit: (c) => this.editContact(c),\n\t\t\t\tonExport: exportContacts,\n\t\t\t\tonDelete: (contacts: Contact[]) => deleteContacts(contacts, () => this.contactViewModel.listModel.selectNone()),\n\t\t\t\tonMerge: confirmMerge,\n\t\t\t})\n\t\t}\n\t}\n\n\tprivate inContactListView() {\n\t\treturn m.route.get().startsWith(CONTACTLIST_PREFIX)\n\t}\n\n\tprivate showingListView() {\n\t\treturn this.inContactListView()\n\t\t\t? this.contactListViewModel.getSelectedContactListEntries()?.length === 0 || this.contactListViewModel.listModel?.state.inMultiselect\n\t\t\t: this.getSelectedContacts().length === 0 || this.contactViewModel.listModel.state.inMultiselect\n\t}\n\n\tview({ attrs }: Vnode<ContactViewAttrs>): Children {\n\t\tthis.getContactListInvitationRows()\n\n\t\treturn m(\n\t\t\t\"#contact.main-view\",\n\t\t\tm(this.viewSlider, {\n\t\t\t\theader: styles.isSingleColumnLayout()\n\t\t\t\t\t? null\n\t\t\t\t\t: m(Header, {\n\t\t\t\t\t\t\tsearchBar: () =>\n\t\t\t\t\t\t\t\tthis.inContactListView()\n\t\t\t\t\t\t\t\t\t? null\n\t\t\t\t\t\t\t\t\t: m(LazySearchBar, {\n\t\t\t\t\t\t\t\t\t\t\tplaceholder: lang.get(\"searchContacts_placeholder\"),\n\t\t\t\t\t\t\t\t\t\t\tdisabled: !locator.logins.isFullyLoggedIn(),\n\t\t\t\t\t\t\t\t\t  }),\n\t\t\t\t\t\t\t...attrs.header,\n\t\t\t\t\t  }),\n\t\t\t\tbottomNav:\n\t\t\t\t\tstyles.isSingleColumnLayout() && this.viewSlider.focusedColumn === this.detailsColumn && !this.showingListView()\n\t\t\t\t\t\t? this.inContactListView()\n\t\t\t\t\t\t\t? m(MobileActionBar, {\n\t\t\t\t\t\t\t\t\tactions: this.canEditSelectedContactList()\n\t\t\t\t\t\t\t\t\t\t? [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ticon: Icons.Trash,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: \"delete_action\",\n\t\t\t\t\t\t\t\t\t\t\t\t\taction: () => this.contactListViewModel.deleteSelectedEntries(),\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t  ]\n\t\t\t\t\t\t\t\t\t\t: [],\n\t\t\t\t\t\t\t  })\n\t\t\t\t\t\t\t: m(MobileActionBar, {\n\t\t\t\t\t\t\t\t\tactions: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ticon: Icons.Edit,\n\t\t\t\t\t\t\t\t\t\t\ttitle: \"edit_action\",\n\t\t\t\t\t\t\t\t\t\t\taction: () => this.editSelectedContact(),\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ticon: Icons.Trash,\n\t\t\t\t\t\t\t\t\t\t\ttitle: \"delete_action\",\n\t\t\t\t\t\t\t\t\t\t\taction: () => this.deleteSelectedContacts(),\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t  })\n\t\t\t\t\t\t: (styles.isSingleColumnLayout() &&\n\t\t\t\t\t\t\t\tthis.viewSlider.focusedColumn === this.listColumn &&\n\t\t\t\t\t\t\t\tthis.contactViewModel.listModel.state.inMultiselect) ||\n\t\t\t\t\t\t  this.contactListViewModel.listModel?.state.inMultiselect\n\t\t\t\t\t\t? m(MobileBottomActionBar, this.detailsViewerActions())\n\t\t\t\t\t\t: m(BottomNav),\n\t\t\t}),\n\t\t)\n\t}\n\n\tprivate getHeaderLabel(): TranslationKey {\n\t\tif (this.inContactListView()) {\n\t\t\treturn \"contactLists_label\"\n\t\t} else {\n\t\t\treturn \"contacts_label\"\n\t\t}\n\t}\n\n\tprivate getSelectedContacts() {\n\t\treturn this.contactViewModel.listModel.getSelectedAsArray()\n\t}\n\n\tprivate async getContactListId(): Promise<Id | null> {\n\t\tif (this.inContactListView()) {\n\t\t\treturn assertNotNull(await this.contactListViewModel.getContactListId())\n\t\t} else {\n\t\t\treturn this.contactViewModel.contactListId\n\t\t}\n\t}\n\n\tasync createNewContact() {\n\t\tconst listId = await this.getContactListId()\n\t\tif (listId) {\n\t\t\tnew ContactEditor(locator.entityClient, null, listId).show()\n\t\t}\n\t}\n\n\tprivate editSelectedContact() {\n\t\tconst firstSelected = this.getSelectedContacts()[0]\n\t\tif (!firstSelected) return\n\t\tthis.editContact(firstSelected)\n\t}\n\n\tprivate editContact(contact: Contact, listId?: Id) {\n\t\tnew ContactEditor(locator.entityClient, contact, listId).show()\n\t}\n\n\tprivate renderHeaderRightView(): Children {\n\t\treturn m(IconButton, {\n\t\t\ttitle: \"newContact_action\",\n\t\t\tclick: () => this.createNewContact(),\n\t\t\ticon: Icons.Add,\n\t\t})\n\t}\n\n\tprivate renderDetailsViewer(): Children {\n\t\tif (this.inContactListView()) {\n\t\t\tconst entries = this.contactListViewModel.getSelectedContactListEntries() ?? []\n\t\t\treturn this.contactListViewModel.listModel == null || this.showingListView()\n\t\t\t\t? m(ColumnEmptyMessageBox, {\n\t\t\t\t\t\tmessage: getContactListEntriesSelectionMessage(entries),\n\t\t\t\t\t\ticon: Icons.People,\n\t\t\t\t\t\tcolor: theme.content_message_bg,\n\t\t\t\t\t\tbottomContent:\n\t\t\t\t\t\t\tentries.length > 0\n\t\t\t\t\t\t\t\t? m(Button, {\n\t\t\t\t\t\t\t\t\t\tlabel: \"cancel_action\",\n\t\t\t\t\t\t\t\t\t\ttype: ButtonType.Secondary,\n\t\t\t\t\t\t\t\t\t\tclick: () => this.contactListViewModel.listModel?.selectNone(),\n\t\t\t\t\t\t\t\t  })\n\t\t\t\t\t\t\t\t: null,\n\t\t\t\t\t\tbackgroundColor: theme.navigation_bg,\n\t\t\t\t  })\n\t\t\t\t: m(ContactListEntryViewer, {\n\t\t\t\t\t\tentry: getFirstOrThrow(entries),\n\t\t\t\t\t\tcontacts: this.contactListViewModel.contactsForSelectedEntry,\n\t\t\t\t\t\tcontactEdit: (c: Contact) => this.editContact(c),\n\t\t\t\t\t\tcontactDelete: deleteContacts,\n\t\t\t\t\t\tcontactCreate: async (c: Contact) => {\n\t\t\t\t\t\t\tconst listId = await this.getContactListId()\n\t\t\t\t\t\t\tif (listId) {\n\t\t\t\t\t\t\t\tthis.editContact(c, listId)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonWriteMail: writeMail,\n\t\t\t\t\t\tselectNone: () => this.contactListViewModel.listModel?.selectNone(),\n\t\t\t\t  })\n\t\t} else {\n\t\t\tconst contacts = this.getSelectedContacts()\n\t\t\treturn this.showingListView()\n\t\t\t\t? m(MultiContactViewer, {\n\t\t\t\t\t\tselectedEntities: contacts,\n\t\t\t\t\t\tselectNone: () => this.contactViewModel.listModel.selectNone(),\n\t\t\t\t  })\n\t\t\t\t: m(ContactCardViewer, {\n\t\t\t\t\t\tcontact: contacts[0],\n\t\t\t\t\t\tonWriteMail: writeMail,\n\t\t\t\t  })\n\t\t}\n\t}\n\n\tprivate getShortcuts() {\n\t\tlet shortcuts: Shortcut[] = [\n\t\t\t...listSelectionKeyboardShortcuts(MultiselectMode.Enabled, () => {\n\t\t\t\treturn this.inContactListView() ? this.contactListViewModel.listModel : this.contactViewModel.listModel\n\t\t\t}),\n\t\t\t{\n\t\t\t\tkey: Keys.DELETE,\n\t\t\t\texec: () => {\n\t\t\t\t\tif (this.inContactListView()) {\n\t\t\t\t\t\tthis.contactListViewModel.deleteSelectedEntries()\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.deleteSelectedContacts()\n\t\t\t\t\t}\n\t\t\t\t\treturn true\n\t\t\t\t},\n\t\t\t\thelp: \"deleteContacts_action\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: Keys.BACKSPACE,\n\t\t\t\texec: () => {\n\t\t\t\t\tif (this.inContactListView()) {\n\t\t\t\t\t\tthis.contactListViewModel.deleteSelectedEntries()\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.deleteSelectedContacts()\n\t\t\t\t\t}\n\t\t\t\t\treturn true\n\t\t\t\t},\n\t\t\t\thelp: \"deleteContacts_action\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: Keys.N,\n\t\t\t\texec: () => {\n\t\t\t\t\tthis.createNewContact()\n\t\t\t\t},\n\t\t\t\thelp: \"newContact_action\",\n\t\t\t},\n\t\t]\n\n\t\treturn shortcuts\n\t}\n\n\tprivate renderSidebarElements(): Children {\n\t\treturn [\n\t\t\tm(SidebarSectionRow, {\n\t\t\t\ticon: BootIcons.Contacts,\n\t\t\t\tlabel: \"all_contacts_label\",\n\t\t\t\tpath: `/contact`,\n\t\t\t\tonClick: () => this.viewSlider.focus(this.listColumn),\n\t\t\t\tmoreButton: this.createMoreButtonAttrs(),\n\t\t\t\talwaysShowMoreButton: client.isMobileDevice(),\n\t\t\t} satisfies SidebarSectionRowAttrs),\n\t\t\tm(\n\t\t\t\tSidebarSection,\n\t\t\t\t{\n\t\t\t\t\tname: \"contactLists_label\",\n\t\t\t\t\tbutton: m(IconButton, {\n\t\t\t\t\t\ticon: Icons.Add,\n\t\t\t\t\t\tsize: ButtonSize.Compact,\n\t\t\t\t\t\ttitle: \"addContactList_action\",\n\t\t\t\t\t\tclick: () => {\n\t\t\t\t\t\t\tthis.addContactList()\n\t\t\t\t\t\t},\n\t\t\t\t\t}),\n\t\t\t\t},\n\t\t\t\t[\n\t\t\t\t\tthis.contactListViewModel.getOwnContactListInfos().map((cl) => {\n\t\t\t\t\t\treturn this.renderContactListRow(cl, false)\n\t\t\t\t\t}),\n\t\t\t\t],\n\t\t\t),\n\t\t\tthis.contactListViewModel.getSharedContactListInfos().length > 0\n\t\t\t\t? m(\n\t\t\t\t\t\t\"\",\n\t\t\t\t\t\tm(\n\t\t\t\t\t\t\tSidebarSection,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: \"sharedContactLists_label\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tthis.contactListViewModel.getSharedContactListInfos().map((cl) => {\n\t\t\t\t\t\t\t\treturn this.renderContactListRow(cl, true)\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t),\n\t\t\t\t  )\n\t\t\t\t: null,\n\t\t\tthis.contactListViewModel.getContactListInvitations().length > 0\n\t\t\t\t? m(\n\t\t\t\t\t\tSidebarSection,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"contactListInvitations_label\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\tthis.invitationRows,\n\t\t\t\t  )\n\t\t\t\t: null,\n\t\t]\n\t}\n\n\tprivate getContactListInvitationRows() {\n\t\timport(\"../../../common/sharing/view/GroupInvitationFolderRow.js\")\n\t\t\t.then(({ GroupInvitationFolderRow }) => {\n\t\t\t\tthis.invitationRows = this.contactListViewModel.getContactListInvitations().map((invitation) =>\n\t\t\t\t\tm(GroupInvitationFolderRow, {\n\t\t\t\t\t\tinvitation,\n\t\t\t\t\t}),\n\t\t\t\t)\n\t\t\t})\n\t\t\t.then(m.redraw)\n\t}\n\n\tprivate renderFolderMoreButton(): Children {\n\t\treturn m(IconButton, this.createMoreButtonAttrs())\n\t}\n\n\tprivate createMoreButtonAttrs(): IconButtonAttrs {\n\t\treturn attachDropdown({\n\t\t\tmainButtonAttrs: {\n\t\t\t\ttitle: \"more_label\",\n\t\t\t\ticon: Icons.More,\n\t\t\t\tsize: ButtonSize.Compact,\n\t\t\t\tcolors: ButtonColor.Nav,\n\t\t\t},\n\t\t\tchildAttrs: () => {\n\t\t\t\tconst vcardButtons: Array<DropdownButtonAttrs> = isApp()\n\t\t\t\t\t? [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: \"importContacts_label\",\n\t\t\t\t\t\t\t\tclick: () => importContacts(),\n\t\t\t\t\t\t\t\ticon: Icons.ContactImport,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t  ]\n\t\t\t\t\t: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: \"exportVCard_action\",\n\t\t\t\t\t\t\t\tclick: () => exportAsVCard(locator.contactModel),\n\t\t\t\t\t\t\t\ticon: Icons.Export,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t  ]\n\n\t\t\t\treturn vcardButtons.concat([\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: \"importVCard_action\",\n\t\t\t\t\t\tclick: () => importAsVCard(),\n\t\t\t\t\t\ticon: Icons.ContactImport,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: \"merge_action\",\n\t\t\t\t\t\ticon: Icons.People,\n\t\t\t\t\t\tclick: () => this._mergeAction(),\n\t\t\t\t\t},\n\t\t\t\t])\n\t\t\t},\n\t\t\twidth: 250,\n\t\t})\n\t}\n\n\tprivate renderContactListRow(contactListInfo: ContactListInfo, shared: boolean) {\n\t\tconst contactListButton: NavButtonAttrs = {\n\t\t\tlabel: lang.makeTranslation(\"contactListName_label\", contactListInfo.name),\n\t\t\ticon: () => Icons.People,\n\t\t\thref: () => `${CONTACTLIST_PREFIX}/${contactListInfo.groupRoot.entries}`,\n\t\t\tdisableHoverBackground: true,\n\t\t\tclick: () => {\n\t\t\t\tthis.contactListViewModel.updateSelectedContactList(contactListInfo.groupRoot.entries)\n\t\t\t\tthis.viewSlider.focus(this.listColumn)\n\t\t\t},\n\t\t}\n\n\t\tconst moreButton = this.createContactListMoreButton(contactListInfo, shared)\n\n\t\treturn m(SidebarSectionRow, {\n\t\t\ticon: Icons.People,\n\t\t\tlabel: lang.makeTranslation(\"contactlist_name\", contactListInfo.name),\n\t\t\tpath: `${CONTACTLIST_PREFIX}/${contactListInfo.groupRoot.entries}`,\n\t\t\tonClick: () => {\n\t\t\t\tthis.contactListViewModel.updateSelectedContactList(contactListInfo.groupRoot.entries)\n\t\t\t\tthis.viewSlider.focus(this.listColumn)\n\t\t\t},\n\t\t\tmoreButton: moreButton,\n\t\t} satisfies SidebarSectionRowAttrs)\n\t}\n\n\tcreateContactListMoreButton(contactListInfo: ContactListInfo, shared: boolean): IconButtonAttrs {\n\t\treturn attachDropdown({\n\t\t\tmainButtonAttrs: {\n\t\t\t\ttitle: \"more_label\",\n\t\t\t\ticon: Icons.More,\n\t\t\t\tcolors: ButtonColor.Nav,\n\t\t\t\tsize: ButtonSize.Compact,\n\t\t\t},\n\t\t\tchildAttrs: () => {\n\t\t\t\treturn [\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: \"edit_action\",\n\t\t\t\t\t\ticon: Icons.Edit,\n\t\t\t\t\t\tclick: () => {\n\t\t\t\t\t\t\tshowContactListNameEditor(contactListInfo.name, (newName) => {\n\t\t\t\t\t\t\t\tif (shared) {\n\t\t\t\t\t\t\t\t\tthis.editSharedContactList(contactListInfo, newName)\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthis.contactListViewModel.updateContactList(contactListInfo, newName, [])\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: \"sharing_label\",\n\t\t\t\t\t\ticon: Icons.ContactImport,\n\t\t\t\t\t\tclick: async () => {\n\t\t\t\t\t\t\tconst { showGroupSharingDialog } = await import(\"../../../common/sharing/view/GroupSharingDialog.js\")\n\t\t\t\t\t\t\tshowGroupSharingDialog(contactListInfo.groupInfo, true)\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tcontactListInfo.isOwner\n\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\tlabel: \"delete_action\",\n\t\t\t\t\t\t\t\ticon: Icons.Trash,\n\t\t\t\t\t\t\t\tclick: async () => {\n\t\t\t\t\t\t\t\t\tif (await Dialog.confirm(\"confirmDeleteContactList_msg\")) {\n\t\t\t\t\t\t\t\t\t\tthis.contactListViewModel.deleteContactList(contactListInfo)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\tlabel: \"leaveGroup_action\",\n\t\t\t\t\t\t\t\ticon: Icons.Trash,\n\t\t\t\t\t\t\t\tclick: async () => {\n\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\tawait Dialog.confirm(\n\t\t\t\t\t\t\t\t\t\t\tlang.makeTranslation(\n\t\t\t\t\t\t\t\t\t\t\t\t\"confirm_msg\",\n\t\t\t\t\t\t\t\t\t\t\t\tlang.get(\"confirmLeaveSharedGroup_msg\", { \"{groupName}\": contactListInfo.name }),\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\treturn this.contactListViewModel.removeUserFromContactList(contactListInfo)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t  },\n\t\t\t\t]\n\t\t\t},\n\t\t})\n\t}\n\n\tprivate editSharedContactList(contactListInfo: ContactListInfo, newName: string) {\n\t\tconst { userSettingsGroupRoot } = locator.logins.getUserController()\n\t\tconst existingGroupSettings = userSettingsGroupRoot.groupSettings.find((gc) => gc.group === contactListInfo.groupInfo.group) ?? null\n\n\t\tif (existingGroupSettings) {\n\t\t\texistingGroupSettings.name = newName\n\t\t}\n\n\t\tlocator.entityClient.update(userSettingsGroupRoot)\n\t\t// Updating the contactListInfo.name directly, so it updates for the user right away\n\t\tcontactListInfo.name = newName\n\t}\n\n\t_mergeAction(): Promise<void> {\n\t\treturn showProgressDialog(\n\t\t\t\"pleaseWait_msg\",\n\t\t\tlocator.contactModel.getContactListId().then((contactListId) => {\n\t\t\t\treturn contactListId ? locator.entityClient.loadAll(ContactTypeRef, contactListId) : []\n\t\t\t}),\n\t\t).then((allContacts) => {\n\t\t\tif (allContacts.length === 0) {\n\t\t\t\tDialog.message(\"noContacts_msg\")\n\t\t\t} else {\n\t\t\t\tlet mergeableAndDuplicates = getMergeableContacts(allContacts)\n\t\t\t\tlet deletePromise = Promise.resolve()\n\n\t\t\t\tif (mergeableAndDuplicates.deletable.length > 0) {\n\t\t\t\t\tdeletePromise = Dialog.confirm(\n\t\t\t\t\t\tlang.makeTranslation(\n\t\t\t\t\t\t\t\"confirm_msg\",\n\t\t\t\t\t\t\tlang.get(\"duplicatesNotification_msg\", {\n\t\t\t\t\t\t\t\t\"{1}\": mergeableAndDuplicates.deletable.length,\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t),\n\t\t\t\t\t).then((confirmed) => {\n\t\t\t\t\t\tif (confirmed) {\n\t\t\t\t\t\t\t// delete async in the background\n\t\t\t\t\t\t\tfor (const dc of mergeableAndDuplicates.deletable) {\n\t\t\t\t\t\t\t\tlocator.entityClient.erase(dc)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tdeletePromise.then(() => {\n\t\t\t\t\tif (mergeableAndDuplicates.mergeable.length === 0) {\n\t\t\t\t\t\tDialog.message(lang.makeTranslation(\"confirm_msg\", lang.get(\"noSimilarContacts_msg\")))\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._showMergeDialogs(mergeableAndDuplicates.mergeable).then((canceled) => {\n\t\t\t\t\t\t\tif (!canceled) {\n\t\t\t\t\t\t\t\tDialog.message(\"noMoreSimilarContacts_msg\")\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * @returns True if the merging was canceled by the user, false otherwise\n\t */\n\t_showMergeDialogs(mergable: Contact[][]): Promise<boolean> {\n\t\tlet canceled = false\n\n\t\tif (mergable.length > 0) {\n\t\t\tlet contact1 = mergable[0][0]\n\t\t\tlet contact2 = mergable[0][1]\n\t\t\tlet mergeDialog = new ContactMergeView(contact1, contact2)\n\t\t\treturn mergeDialog\n\t\t\t\t.show()\n\t\t\t\t.then((action) => {\n\t\t\t\t\t// execute action here and update mergable\n\t\t\t\t\tif (action === ContactMergeAction.Merge) {\n\t\t\t\t\t\tthis._removeFromMergableContacts(mergable, contact2)\n\n\t\t\t\t\t\tmergeContacts(contact1, contact2)\n\t\t\t\t\t\treturn showProgressDialog(\n\t\t\t\t\t\t\t\"pleaseWait_msg\",\n\t\t\t\t\t\t\tlocator.entityClient.update(contact1).then(() => locator.entityClient.erase(contact2)),\n\t\t\t\t\t\t).catch(ofClass(NotFoundError, noOp))\n\t\t\t\t\t} else if (action === ContactMergeAction.DeleteFirst) {\n\t\t\t\t\t\tthis._removeFromMergableContacts(mergable, contact1)\n\n\t\t\t\t\t\treturn locator.entityClient.erase(contact1)\n\t\t\t\t\t} else if (action === ContactMergeAction.DeleteSecond) {\n\t\t\t\t\t\tthis._removeFromMergableContacts(mergable, contact2)\n\n\t\t\t\t\t\treturn locator.entityClient.erase(contact2)\n\t\t\t\t\t} else if (action === ContactMergeAction.Skip) {\n\t\t\t\t\t\tthis._removeFromMergableContacts(mergable, contact2)\n\t\t\t\t\t} else if (action === ContactMergeAction.Cancel) {\n\t\t\t\t\t\tclear(mergable)\n\t\t\t\t\t\tcanceled = true\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.then(() => {\n\t\t\t\t\tif (!canceled && mergable.length > 0) {\n\t\t\t\t\t\treturn this._showMergeDialogs(mergable)\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn canceled\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t} else {\n\t\t\treturn Promise.resolve(canceled)\n\t\t}\n\t}\n\n\t/**\n\t * removes the given contact from the given mergable arrays first entry (first or second element)\n\t */\n\t_removeFromMergableContacts(mergable: Contact[][], contact: Contact) {\n\t\tif (mergable[0][0] === contact) {\n\t\t\tmergable[0].splice(0, 1) // remove contact1\n\t\t} else if (mergable[0][1] === contact) {\n\t\t\tmergable[0].splice(1, 1) // remove contact2\n\t\t}\n\n\t\t// remove the first entry if there is only one contact left in the first entry\n\t\tif (mergable[0].length <= 1) {\n\t\t\tmergable.splice(0, 1)\n\t\t}\n\t}\n\n\tonNewUrl(args: Record<string, any>) {\n\t\tif (this.inContactListView()) {\n\t\t\tthis.contactListViewModel.showListAndEntry(args.listId, args.Id).then(m.redraw)\n\t\t} else {\n\t\t\tthis.contactViewModel.init(args.listId).then(() => this.contactViewModel.selectContact(args.contactId))\n\t\t}\n\t\t// focus the details column if asked explicitly, e.g. to show a specific contact\n\t\tif (args.focusItem) {\n\t\t\tthis.viewSlider.focus(this.detailsColumn)\n\t\t}\n\t}\n\n\tprivate deleteSelectedContacts(): Promise<void> {\n\t\treturn deleteContacts(this.getSelectedContacts(), () => this.contactViewModel.listModel.selectNone())\n\t}\n\n\tgetViewSlider(): ViewSlider | null {\n\t\treturn this.viewSlider\n\t}\n\n\thandleBackButton(): boolean {\n\t\t// only handle back button if viewing contact\n\t\tif (this.viewSlider.focusedColumn === this.detailsColumn) {\n\t\t\tthis.viewSlider.focus(this.listColumn)\n\t\t\treturn true\n\t\t} else if (\n\t\t\tthis.showingListView() &&\n\t\t\t(this.contactViewModel.listModel.state.inMultiselect ||\n\t\t\t\t(this.contactListViewModel.listModel && this.contactListViewModel.listModel?.state.inMultiselect))\n\t\t) {\n\t\t\t// Just try to empty the list of selected items the user is on\n\t\t\t// multiselect mode\n\t\t\tthis.contactViewModel.listModel.selectNone()\n\t\t\tthis.contactListViewModel.listModel?.selectNone()\n\n\t\t\treturn true\n\t\t}\n\n\t\treturn false\n\t}\n\n\tprivate renderListToolbar() {\n\t\tif (this.inContactListView()) {\n\t\t\tconst selectedList = this.contactListViewModel.getSelectedContactListInfo()\n\t\t\treturn m(\n\t\t\t\tDesktopListToolbar,\n\t\t\t\tm(SelectAllCheckbox, selectionAttrsForList(this.contactListViewModel.listModel)),\n\t\t\t\tm(\".flex-grow\"),\n\t\t\t\tthis.canEditSelectedContactList()\n\t\t\t\t\t? m(IconButton, {\n\t\t\t\t\t\t\ttitle: \"addEntries_action\",\n\t\t\t\t\t\t\ticon: Icons.Add,\n\t\t\t\t\t\t\tclick: () => {\n\t\t\t\t\t\t\t\tthis.addAddressesToContactList()\n\t\t\t\t\t\t\t},\n\t\t\t\t\t  })\n\t\t\t\t\t: null,\n\t\t\t)\n\t\t} else {\n\t\t\treturn m(DesktopListToolbar, m(SelectAllCheckbox, selectionAttrsForList(this.contactViewModel.listModel)), this.renderSortByButton())\n\t\t}\n\t}\n\n\tprivate addAddressesToContactList() {\n\t\tconst groupRoot = this.contactListViewModel.getSelectedContactListInfo()?.groupRoot\n\t\tif (!groupRoot) return\n\t\tshowContactListEditor(\n\t\t\tgroupRoot,\n\t\t\t\"addEntries_action\",\n\t\t\t(_, addresses) => {\n\t\t\t\tthis.contactListViewModel.addRecipientstoContactList(addresses, assertNotNull(groupRoot))\n\t\t\t},\n\t\t\tthis.contactListViewModel.listModel?.getUnfilteredAsArray().map((entry) => entry.emailAddress),\n\t\t)\n\t}\n\n\tprivate renderSortByButton() {\n\t\treturn m(IconButton, {\n\t\t\ttitle: \"sortBy_label\",\n\t\t\ticon: Icons.ListOrdered,\n\t\t\tclick: (e: MouseEvent, dom: HTMLElement) => {\n\t\t\t\tcreateDropdown({\n\t\t\t\t\tlazyButtons: () => [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: \"firstName_placeholder\",\n\t\t\t\t\t\t\tclick: () => {\n\t\t\t\t\t\t\t\tthis.contactViewModel.setSortByFirstName(true)\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: \"lastName_placeholder\",\n\t\t\t\t\t\t\tclick: () => {\n\t\t\t\t\t\t\t\tthis.contactViewModel.setSortByFirstName(false)\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t})(e, dom)\n\t\t\t},\n\t\t})\n\t}\n\n\tprivate async addContactList() {\n\t\tif (await this.contactListViewModel.canCreateContactList()) {\n\t\t\tawait showContactListEditor(null, \"createContactList_action\", (name, recipients) => {\n\t\t\t\tthis.contactListViewModel.addContactList(name, recipients)\n\t\t\t})\n\t\t} else {\n\t\t\tif (locator.logins.getUserController().isGlobalAdmin()) {\n\t\t\t\tconst { getAvailablePlansWithContactList } = await import(\"../../../common/subscription/SubscriptionUtils.js\")\n\t\t\t\tconst plans = await getAvailablePlansWithContactList()\n\t\t\t\tawait showPlanUpgradeRequiredDialog(plans)\n\t\t\t} else {\n\t\t\t\tDialog.message(\"contactAdmin_msg\")\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport function writeMail(to: PartialRecipient, subject: string = \"\"): Promise<Dialog> {\n\treturn locator.mailboxModel.getUserMailboxDetails().then((mailboxDetails) => {\n\t\treturn newMailEditorFromTemplate(\n\t\t\tmailboxDetails,\n\t\t\t{\n\t\t\t\tto: [to],\n\t\t\t},\n\t\t\tsubject,\n\t\t\tappendEmailSignature(\"\", locator.logins.getUserController().props),\n\t\t).then((editor) => editor.show())\n\t})\n}\n\nexport function deleteContacts(contactList: Contact[], onConfirm: () => void = noOp): Promise<void> {\n\treturn Dialog.confirm(\"deleteContacts_msg\").then((confirmed) => {\n\t\tif (confirmed) {\n\t\t\tonConfirm()\n\t\t\tfor (const contact of contactList) {\n\t\t\t\tlocator.entityClient.erase(contact).catch(ofClass(NotFoundError, noOp)).catch(ofClass(LockedError, noOp))\n\t\t\t}\n\t\t}\n\t})\n}\n\nexport function confirmMerge(keptContact: Contact, goodbyeContact: Contact): Promise<void> {\n\tif (!keptContact.presharedPassword || !goodbyeContact.presharedPassword || keptContact.presharedPassword === goodbyeContact.presharedPassword) {\n\t\treturn Dialog.confirm(\"mergeAllSelectedContacts_msg\").then((confirmed) => {\n\t\t\tif (confirmed) {\n\t\t\t\tmergeContacts(keptContact, goodbyeContact)\n\t\t\t\treturn showProgressDialog(\n\t\t\t\t\t\"pleaseWait_msg\",\n\t\t\t\t\tlocator.entityClient.update(keptContact).then(() => locator.entityClient.erase(goodbyeContact)),\n\t\t\t\t).catch(ofClass(NotFoundError, noOp))\n\t\t\t}\n\t\t})\n\t} else {\n\t\treturn Dialog.message(\"presharedPasswordsUnequal_msg\")\n\t}\n}\n\nexport async function importContacts() {\n\tconst importer = await mailLocator.contactImporter()\n\tawait importer.importContactsFromDeviceSafely()\n}\n"],"mappings":"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"}