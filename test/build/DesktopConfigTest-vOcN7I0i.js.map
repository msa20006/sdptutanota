{"version":3,"file":"DesktopConfigTest-vOcN7I0i.js","names":["migrator: DesktopConfigMigrator","keyStoreFacade: DesktopKeyStoreFacade","cryptoFacade: DesktopNativeCryptoFacade","buildConfigFile: ConfigFile","desktopConfigFile: ConfigFile","key?: BuildConfigKey","key: K","key: DesktopConfigEncKey","value: ConfigValue | null","key: DesktopConfigKey | DesktopConfigEncKey","key: AllConfigKeys","cb: (val: any) => void","callback: Listener","key?: DesktopConfigKey","desktopConfig: DesktopConfig","configMigrator: DesktopConfigMigrator","keyStoreFacade: DesktopKeyStoreFacade","desktopCrypto: DesktopNativeCryptoFacade","desktopConfigFile: ConfigFile","buildConfigFile: ConfigFile"],"sources":["../../src/common/desktop/config/DesktopConfig.ts","../tests/desktop/config/DesktopConfigTest.ts"],"sourcesContent":["import type { DeferredObject } from \"@tutao/tutanota-utils\"\nimport { defer, downcast } from \"@tutao/tutanota-utils\"\nimport type { MigrationKind } from \"./migrations/DesktopConfigMigrator\"\nimport { DesktopConfigMigrator } from \"./migrations/DesktopConfigMigrator\"\nimport type { Config } from \"./ConfigCommon\"\nimport { BuildConfigKey, DesktopConfigEncKey, DesktopConfigKey } from \"./ConfigKeys\"\nimport type { DesktopKeyStoreFacade } from \"../DesktopKeyStoreFacade.js\"\nimport { DesktopNativeCryptoFacade } from \"../DesktopNativeCryptoFacade\"\nimport { log } from \"../DesktopLog\"\nimport { ProgrammingError } from \"../../api/common/error/ProgrammingError\"\nimport type { ConfigFileType } from \"./ConfigFile\"\nimport { ConfigFile } from \"./ConfigFile\"\nimport { CryptoError } from \"@tutao/tutanota-crypto/error.js\"\n\nexport type AllConfigKeys = DesktopConfigKey | DesktopConfigEncKey\n\ntype ConfigValue = string | number | object | boolean | ReadonlyArray<ConfigValue>\n// a callback function and a note marking if it should be called more than once\ntype Listener = { cb: (val: ConfigValue | null) => void; once: boolean }\ntype OnValueSetListeners = { [k in AllConfigKeys]: Array<Listener> }\n\n/**\n * manages build and user config\n */\nexport class DesktopConfig {\n\tprivate readonly buildConfig: DeferredObject<Config>\n\tprivate readonly desktopConfig: DeferredObject<Config> // user preferences as set for this installation\n\tprivate desktopConfigFile!: ConfigFileType\n\tonValueSetListeners: OnValueSetListeners = {} as OnValueSetListeners\n\n\tconstructor(\n\t\tprivate readonly migrator: DesktopConfigMigrator,\n\t\tprivate readonly keyStoreFacade: DesktopKeyStoreFacade,\n\t\tprivate readonly cryptoFacade: DesktopNativeCryptoFacade,\n\t) {\n\t\tthis.buildConfig = defer()\n\t\tthis.desktopConfig = defer()\n\t}\n\n\tasync init(buildConfigFile: ConfigFile, desktopConfigFile: ConfigFile) {\n\t\tconst packageJson = await buildConfigFile.readJSON()\n\t\tconst buildConfig = packageJson[\"tutao-config\"]\n\t\tthis.buildConfig.resolve(buildConfig)\n\n\t\tthis.desktopConfigFile = desktopConfigFile\n\n\t\tconst defaultConf = buildConfig[\"defaultDesktopConfig\"] as Config\n\n\t\t// create default config if none exists\n\t\tawait this.desktopConfigFile.ensurePresence(defaultConf)\n\t\tconst userConf = (await this.desktopConfigFile.readJSON()) || defaultConf\n\t\tconst populatedConfig = Object.assign({}, defaultConf, userConf)\n\n\t\tconst desktopConfig = await this.migrator.applyMigrations(downcast<MigrationKind>(buildConfig[\"configMigrationFunction\"]), populatedConfig)\n\n\t\tawait this.desktopConfigFile.writeJSON(desktopConfig)\n\t\tthis.desktopConfig.resolve(desktopConfig)\n\t}\n\n\tasync getConst(key?: BuildConfigKey): Promise<any> {\n\t\tconst config = await this.buildConfig.promise\n\t\treturn key ? config[key] : config\n\t}\n\n\tasync getVar<K extends AllConfigKeys>(key: K): Promise<any> {\n\t\tconst desktopConfig = await this.desktopConfig.promise\n\n\t\tif (key in DesktopConfigKey) {\n\t\t\treturn desktopConfig[key]\n\t\t} else if (key in DesktopConfigEncKey) {\n\t\t\treturn this.getEncryptedVar(key as DesktopConfigEncKey)\n\t\t}\n\t}\n\n\tprivate async getEncryptedVar(key: DesktopConfigEncKey): Promise<any> {\n\t\tconst desktopConfig = await this.desktopConfig.promise\n\t\tconst encryptedValue = desktopConfig[key]\n\n\t\tif (!encryptedValue) {\n\t\t\treturn null\n\t\t}\n\n\t\tconst deviceKey = await this.keyStoreFacade.getDeviceKey()\n\t\ttry {\n\t\t\treturn this.cryptoFacade.aesDecryptObject(deviceKey, downcast<string>(encryptedValue))\n\t\t} catch (e) {\n\t\t\tif (e instanceof CryptoError) {\n\t\t\t\tlog.error(`Could not decrypt encrypted var ${key}`, e)\n\t\t\t\tawait this.setVar(key, null)\n\t\t\t\treturn null\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async setEncryptedVar(key: DesktopConfigEncKey, value: ConfigValue | null) {\n\t\tconst deviceKey = await this.keyStoreFacade.getDeviceKey()\n\t\tlet encryptedValue\n\t\tif (value != null) {\n\t\t\tencryptedValue = this.cryptoFacade.aesEncryptObject(deviceKey, value)\n\t\t} else {\n\t\t\tencryptedValue = null\n\t\t}\n\t\tconst desktopConfig = await this.desktopConfig.promise\n\t\tdesktopConfig[key] = encryptedValue\n\t}\n\n\t/**\n\t * change the runtime-defined config and write it to disk\n\t * @param key value to change. a key of \"any\" will replace the conf object with value.\n\t * @param value the new value\n\t * @returns {never|Promise<any>|Promise<void>|*}\n\t */\n\tasync setVar(key: DesktopConfigKey | DesktopConfigEncKey, value: ConfigValue | null): Promise<void> {\n\t\tconst desktopConfig = await this.desktopConfig.promise\n\n\t\tif (Object.values(DesktopConfigKey).includes(downcast(key))) {\n\t\t\tdesktopConfig[key] = value\n\t\t} else if (Object.values(DesktopConfigEncKey).includes(downcast(key))) {\n\t\t\tif (value == null) {\n\t\t\t\tdesktopConfig[key] = value\n\t\t\t} else {\n\t\t\t\tawait this.setEncryptedVar(key as DesktopConfigEncKey, value)\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new ProgrammingError(\"Unknown config key: \" + key)\n\t\t}\n\n\t\tawait this.saveAndNotify(key, value)\n\t}\n\n\tprivate async saveAndNotify(key: AllConfigKeys, value: ConfigValue | null): Promise<void> {\n\t\tconst desktopConfig = await this.desktopConfig.promise\n\t\tawait this.desktopConfigFile.writeJSON(desktopConfig)\n\t\tthis.notifyChangeListeners(key, value)\n\t}\n\n\t/**\n\t * listen to changes in the config\n\t * @param key the value you want to listen for. a key of \"any\" will be called with the complete config for any changes to the config.\n\t * @param cb a function that's called when the config changes. argument is the new value or the entire config object in case of the \"any\" event.\n\t * @returns {DesktopConfig}\n\t */\n\ton(key: AllConfigKeys, cb: (val: any) => void): DesktopConfig {\n\t\treturn this.addListener(key, { cb, once: false })\n\t}\n\n\tonce(key: AllConfigKeys, cb: (val: any) => void): DesktopConfig {\n\t\treturn this.addListener(key, { cb, once: true })\n\t}\n\n\tprivate addListener(key: AllConfigKeys, callback: Listener) {\n\t\tif (!this.onValueSetListeners[key]) {\n\t\t\tthis.onValueSetListeners[key] = [callback]\n\t\t} else {\n\t\t\tthis.onValueSetListeners[key].push(callback)\n\t\t}\n\t\treturn this\n\t}\n\n\tremoveAllListeners(key?: DesktopConfigKey): this {\n\t\tif (key) {\n\t\t\tthis.onValueSetListeners[key] = []\n\t\t} else {\n\t\t\tthis.onValueSetListeners = {} as OnValueSetListeners\n\t\t}\n\n\t\treturn this\n\t}\n\n\tremoveListener(key: AllConfigKeys, cb: (val: any) => void): this {\n\t\tif (!this.onValueSetListeners[key]) return this\n\t\tconst indexOfListener = this.onValueSetListeners[key].findIndex((listener) => listener.cb === cb)\n\t\tthis.onValueSetListeners[key].splice(indexOfListener, 1)\n\t\treturn this\n\t}\n\n\tprivate notifyChangeListeners(key: AllConfigKeys, value: ConfigValue | null) {\n\t\tconst listeners = this.onValueSetListeners[key]\n\t\tif (listeners == null) return\n\t\tfor (const { cb } of listeners) cb(value)\n\t\tthis.onValueSetListeners[key] = listeners.filter((listener) => !listener.once)\n\t}\n}\n","import o from \"@tutao/otest\"\nimport { DesktopConfig } from \"../../../../src/common/desktop/config/DesktopConfig.js\"\nimport { DesktopConfigMigrator } from \"../../../../src/common/desktop/config/migrations/DesktopConfigMigrator.js\"\nimport { noOp } from \"@tutao/tutanota-utils\"\nimport { DesktopKeyStoreFacade } from \"../../../../src/common/desktop/DesktopKeyStoreFacade.js\"\nimport { DesktopNativeCryptoFacade } from \"../../../../src/common/desktop/DesktopNativeCryptoFacade.js\"\nimport { DesktopConfigKey } from \"../../../../src/common/desktop/config/ConfigKeys.js\"\nimport { ConfigFile } from \"../../../../src/common/desktop/config/ConfigFile.js\"\nimport { function as fn, matchers, object, verify, when } from \"testdouble\"\n\no.spec(\"DesktopConfigTest\", function () {\n\tlet desktopConfig: DesktopConfig\n\tlet configMigrator: DesktopConfigMigrator\n\tlet keyStoreFacade: DesktopKeyStoreFacade\n\tlet desktopCrypto: DesktopNativeCryptoFacade\n\tlet desktopConfigFile: ConfigFile\n\n\to.beforeEach(async function () {\n\t\tconst buildConfigFile: ConfigFile = object()\n\t\twhen(buildConfigFile.readJSON()).thenResolve({\n\t\t\t\"tutao-config\": {\n\t\t\t\tdefaultDesktopConfig: {},\n\t\t\t\tconfigMigrationFunction: \"\",\n\t\t\t},\n\t\t})\n\t\twhen(buildConfigFile.writeJSON(matchers.anything())).thenResolve(undefined)\n\t\twhen(buildConfigFile.ensurePresence(matchers.anything())).thenResolve(undefined)\n\n\t\tdesktopConfigFile = object()\n\t\twhen(desktopConfigFile.readJSON()).thenResolve({\n\t\t\t\"tutao-config\": {\n\t\t\t\tdefaultDesktopConfig: {},\n\t\t\t\tconfigMigrationFunction: \"\",\n\t\t\t},\n\t\t})\n\t\twhen(desktopConfigFile.writeJSON(matchers.anything())).thenResolve(undefined)\n\t\twhen(desktopConfigFile.ensurePresence(matchers.anything())).thenResolve(undefined)\n\n\t\tconfigMigrator = object()\n\t\tconst configCaptor = matchers.captor()\n\t\twhen(configMigrator.applyMigrations(matchers.anything(), configCaptor.capture())).thenDo(() => Promise.resolve(configCaptor.value))\n\n\t\tkeyStoreFacade = object()\n\t\twhen(keyStoreFacade.getDeviceKey()).thenResolve([1, 2, 3])\n\t\twhen(keyStoreFacade.getKeyChainKey()).thenResolve([4, 5, 6])\n\n\t\tdesktopCrypto = object()\n\t\twhen(desktopCrypto.aesDecryptObject(matchers.anything(), matchers.anything())).thenReturn(\"decrypted\")\n\t\twhen(desktopCrypto.aesEncryptObject(matchers.anything(), matchers.anything())).thenReturn(\"encrypted\")\n\n\t\tdesktopConfig = new DesktopConfig(configMigrator, keyStoreFacade, desktopCrypto)\n\t\tawait desktopConfig.init(buildConfigFile, desktopConfigFile)\n\t})\n\n\to(\"setVar updates config value\", async function () {\n\t\tconst cb1 = fn<(a: any) => void>()\n\t\tdesktopConfig.on(DesktopConfigKey.lastBounds, cb1)\n\t\tawait desktopConfig.setVar(DesktopConfigKey.lastBounds, \"change\")\n\t\tverify(cb1(\"change\"), { times: 1 })\n\t\t// writeJSON is called twice, because it is called once in the init\n\t\tverify(desktopConfigFile.writeJSON(matchers.argThat((a) => a.lastBounds === \"change\")), { times: 2 })\n\t})\n\n\to(\"setVar updates correct config value\", async function () {\n\t\tconst cb1 = fn<(a: any) => void>()\n\t\tconst cb2 = fn<(a: any) => void>()\n\t\tdesktopConfig.on(DesktopConfigKey.lastBounds, cb1)\n\t\tdesktopConfig.on(DesktopConfigKey.spellcheck, cb2)\n\n\t\to(await desktopConfig.getVar(DesktopConfigKey.lastBounds)).equals(undefined)\n\t\to(await desktopConfig.getVar(DesktopConfigKey.spellcheck)).equals(undefined)\n\n\t\tawait desktopConfig.setVar(DesktopConfigKey.lastBounds, \"change\")\n\n\t\to(await desktopConfig.getVar(DesktopConfigKey.lastBounds)).equals(\"change\")\n\t\to(await desktopConfig.getVar(DesktopConfigKey.spellcheck)).equals(undefined)\n\t\tverify(cb1(\"change\"), { times: 1 })\n\t\tverify(cb2(matchers.anything()), { times: 0 })\n\t\t// writeJSON is called twice, because it is called once in the init\n\t\tverify(desktopConfigFile.writeJSON(matchers.argThat((a) => a.lastBounds === \"change\")), { times: 2 })\n\t})\n\n\to(\"removeAllListeners creates empty OnValueSetListeners object\", function () {\n\t\tdesktopConfig.on(DesktopConfigKey.lastBounds, () => {})\n\t\tdesktopConfig.on(DesktopConfigKey.spellcheck, () => {})\n\n\t\tdesktopConfig.removeAllListeners()\n\t\to(Object.keys(desktopConfig.onValueSetListeners).length).equals(0)\n\t})\n\n\to(\"removeAllListeners removes all listeners from correct key\", function () {\n\t\tdesktopConfig.on(DesktopConfigKey.lastBounds, () => {})\n\t\tdesktopConfig.on(DesktopConfigKey.spellcheck, () => {})\n\n\t\tdesktopConfig.removeAllListeners(DesktopConfigKey.lastBounds)\n\t\to(desktopConfig.onValueSetListeners[DesktopConfigKey.lastBounds].length).equals(0)\n\t})\n\n\to(\"removeListener removes correct listener from correct key\", function () {\n\t\tconst cb1 = () => noOp()\n\t\tconst cb2 = () => noOp()\n\t\tdesktopConfig.on(DesktopConfigKey.lastBounds, cb1)\n\t\tdesktopConfig.on(DesktopConfigKey.lastBounds, cb2)\n\n\t\tdesktopConfig.removeListener(DesktopConfigKey.lastBounds, cb2)\n\t\to(desktopConfig.onValueSetListeners[DesktopConfigKey.lastBounds].length).equals(1)\n\t\to(desktopConfig.onValueSetListeners[DesktopConfigKey.lastBounds][0]).deepEquals({ cb: cb1, once: false })\n\t})\n\n\to(\"once listeners are only called once\", async function () {\n\t\tconst onceCb = fn<(a: any) => void>()\n\t\tdesktopConfig.once(DesktopConfigKey.runAsTrayApp, onceCb)\n\t\tverify(onceCb(matchers.anything()), { times: 0 })\n\t\tawait desktopConfig.setVar(DesktopConfigKey.runAsTrayApp, true)\n\t\tverify(onceCb(matchers.anything()), { times: 1 })\n\t\tawait desktopConfig.setVar(DesktopConfigKey.runAsTrayApp, false)\n\t\tverify(onceCb(matchers.anything()), { times: 1 })\n\t})\n\n\to(\"on listeners are called multiple times\", async function () {\n\t\tconst onCb = fn<(a: any) => void>()\n\t\tdesktopConfig.on(DesktopConfigKey.runAsTrayApp, onCb)\n\t\tverify(onCb(matchers.anything()), { times: 0 })\n\t\tawait desktopConfig.setVar(DesktopConfigKey.runAsTrayApp, true)\n\t\tverify(onCb(matchers.anything()), { times: 1 })\n\t\tawait desktopConfig.setVar(DesktopConfigKey.runAsTrayApp, false)\n\t\tverify(onCb(matchers.anything()), { times: 2 })\n\t})\n})\n"],"mappings":"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"}