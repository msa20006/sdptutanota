{"version":3,"file":"CounterFacade-CCBCCCwe.js","names":["serviceExecutor: IServiceExecutor","counterType: CounterType","rowName: string","columnName: Id","customerId: Id"],"sources":["../../src/common/api/worker/facades/lazy/CounterFacade.ts"],"sourcesContent":["import { CounterValue, createReadCounterData } from \"../../../entities/monitor/TypeRefs.js\"\nimport { assertWorkerOrNode } from \"../../../common/Env.js\"\nimport { IServiceExecutor } from \"../../../common/ServiceRequest.js\"\nimport { CounterService } from \"../../../entities/monitor/Services.js\"\nimport { CounterType } from \"../../../common/TutanotaConstants.js\"\n\nassertWorkerOrNode()\n\nexport class CounterFacade {\n\tconstructor(private readonly serviceExecutor: IServiceExecutor) {}\n\n\tasync readCounterValue(counterType: CounterType, rowName: string, columnName: Id): Promise<number> {\n\t\tconst counterData = createReadCounterData({\n\t\t\tcounterType,\n\t\t\trowName,\n\t\t\tcolumnName,\n\t\t})\n\t\tconst counterReturn = await this.serviceExecutor.get(CounterService, counterData)\n\t\treturn Number(counterReturn.counterValues[0].value)\n\t}\n\n\tasync readAllCustomerCounterValues(counterType: CounterType, customerId: Id): Promise<CounterValue[]> {\n\t\tconst counterData = createReadCounterData({\n\t\t\tcounterType,\n\t\t\trowName: customerId,\n\t\t\tcolumnName: null,\n\t\t})\n\t\tconst counterReturn = await this.serviceExecutor.get(CounterService, counterData)\n\t\treturn counterReturn.counterValues\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMA,oBAAoB;IAEP,gBAAN,MAAoB;CAC1B,YAA6BA,iBAAmC;EAsBhE,KAtB6B;CAAqC;CAElE,MAAM,iBAAiBC,aAA0BC,SAAiBC,YAAiC;EAClG,MAAM,cAAc,sBAAsB;GACzC;GACA;GACA;EACA,EAAC;EACF,MAAM,gBAAgB,MAAM,KAAK,gBAAgB,IAAI,gBAAgB,YAAY;AACjF,SAAO,OAAO,cAAc,cAAc,GAAG,MAAM;CACnD;CAED,MAAM,6BAA6BF,aAA0BG,YAAyC;EACrG,MAAM,cAAc,sBAAsB;GACzC;GACA,SAAS;GACT,YAAY;EACZ,EAAC;EACF,MAAM,gBAAgB,MAAM,KAAK,gBAAgB,IAAI,gBAAgB,YAAY;AACjF,SAAO,cAAc;CACrB;AACD"}