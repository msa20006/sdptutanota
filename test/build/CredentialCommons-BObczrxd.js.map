{"version":3,"file":"CredentialCommons-BObczrxd.js","names":["encryptionMode: DesktopCredentialsMode","encryptionMode: CredentialEncryptionMode"],"sources":["../../src/common/desktop/credentials/CredentialCommons.ts"],"sourcesContent":["import { assert } from \"@tutao/tutanota-utils\"\nimport { CredentialEncryptionMode } from \"../../misc/credentials/CredentialEncryptionMode.js\"\n\n/** the single source of truth for this configuration */\nexport const SUPPORTED_MODES = Object.freeze([CredentialEncryptionMode.DEVICE_LOCK, CredentialEncryptionMode.APP_PASSWORD] as const)\nexport type DesktopCredentialsMode = (typeof SUPPORTED_MODES)[number]\n\nexport function assertSupportedEncryptionMode(encryptionMode: DesktopCredentialsMode) {\n\tassert(SUPPORTED_MODES.includes(encryptionMode), `should not use unsupported encryption mode ${encryptionMode}`)\n}\n\nexport function assertDesktopEncryptionMode(encryptionMode: CredentialEncryptionMode): asserts encryptionMode is DesktopCredentialsMode {\n\tassertSupportedEncryptionMode(encryptionMode as DesktopCredentialsMode)\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAIa,kBAAkB,OAAO,OAAO,CAAC,yBAAyB,aAAa,yBAAyB,YAAa,EAAU;AAG7H,SAAS,8BAA8BA,gBAAwC;AACrF,QAAO,gBAAgB,SAAS,eAAe,GAAG,6CAA6C,eAAe,EAAE;AAChH;AAEM,SAAS,4BAA4BC,gBAA4F;AACvI,+BAA8B,eAAyC;AACvE"}