{"version":3,"file":"WebDesktopFacade-DrZRYxsf.js","names":["language","code: string","mapping: Record<string, TranslationKey>","logins: LoginController","nativeInterface: lazyAsync<NativeInterfaceMain>","result: ElectronResult | null","errorInfo: ErrorInfo","url: string","appPath: string","mailAddress: string | null","shortcuts: Array<NativeShortcut>","baseShortcut: Shortcut","fixedShortcuts: Array<Shortcut>"],"sources":["../../src/common/gui/dialogs/SpellcheckLanguageDialog.ts","../../src/common/native/main/WebDesktopFacade.ts"],"sourcesContent":["import type { SelectorItem } from \"../base/DropDownSelector.js\"\nimport type { TranslationKey } from \"../../misc/LanguageViewModel\"\nimport { locator } from \"../../api/main/CommonLocator\"\n\nexport async function showSpellcheckLanguageDialog(): Promise<string> {\n\tconst { DesktopConfigKey } = await import(\"../../../common/desktop/config/ConfigKeys\")\n\tconst current = await getCurrentSpellcheckLanguage()\n\tconst { Dialog } = await import(\"../base/Dialog.js\")\n\tconst items = await getItems()\n\t// this is a language code\n\tconst newLang = await Dialog.showDropDownSelectionDialog(\"spelling_label\", \"language_label\", null, items, current)\n\tawait locator.desktopSettingsFacade.setStringConfigValue(DesktopConfigKey.spellcheck, newLang)\n\t// return displayable language name\n\tconst selectedItem = items.find((i) => i.value === newLang)\n\treturn selectedItem ? selectedItem.name : items[0].name\n}\n\nexport async function getCurrentSpellcheckLanguageLabel(): Promise<string> {\n\tconst current = await getCurrentSpellcheckLanguage()\n\tconst items = await getItems()\n\tconst selectedItem = items.find((i) => i.value === current)\n\treturn selectedItem ? selectedItem.name : items[0].name\n}\n\nasync function getCurrentSpellcheckLanguage(): Promise<string> {\n\tconst { DesktopConfigKey } = await import(\"../../../common/desktop/config/ConfigKeys\")\n\treturn (await locator.desktopSettingsFacade.getStringConfigValue(DesktopConfigKey.spellcheck)) ?? \"\"\n}\n\nasync function getItems(): Promise<Array<SelectorItem<string>>> {\n\tconst { languages, lang } = await import(\"../../misc/LanguageViewModel.js\")\n\tconst options = await locator.desktopSettingsFacade.getSpellcheckLanguages()\n\treturn [\n\t\t{\n\t\t\tname: lang.get(\"comboBoxSelectionNone_msg\"),\n\t\t\tvalue: \"\",\n\t\t},\n\t\t...options\n\t\t\t.map((code) => {\n\t\t\t\tconst [langCode, locale] = code.split(\"-\")\n\t\t\t\t// first, find the name for a language given a locale with a perfect match\n\t\t\t\tconst language =\n\t\t\t\t\tlanguages.find((language) => locale && language.code === `${langCode}_${locale.toLowerCase()}`) || // find the name for a language without a locale, with a perfect match\n\t\t\t\t\tlanguages.find((language) => language.code === langCode) || // try to get a missing one before splitting\n\t\t\t\t\tgetMissingLanguage(langCode) || // the code given by electron doesn't always have a locale when we do,\n\t\t\t\t\t// e.g. for Persian we have \"fa_ir\" in LanguageViewModel, but electron only gives us \"fa\"\n\t\t\t\t\tlanguages.find((language) => language.code.slice(0, 2) === langCode)\n\t\t\t\tconst textId = language?.textId\n\t\t\t\tconst name = textId ? lang.get(textId) + ` (${code})` : code\n\t\t\t\treturn {\n\t\t\t\t\tname,\n\t\t\t\t\tvalue: code,\n\t\t\t\t}\n\t\t\t})\n\t\t\t.sort((a, b) => a.name.localeCompare(b.name)),\n\t]\n}\n\n/**\n * Electron has a different selection of spellchecker languages from what our client supports,\n * so we can't get all of the names from the LanguageViewModel\n */\nfunction getMissingLanguage(code: string): { textId: TranslationKey; code: string } | null {\n\tconst mapping: Record<string, TranslationKey> = {\n\t\taf: \"languageAfrikaans_label\",\n\t\tcy: \"languageWelsh_label\",\n\t\tfo: \"languageFaroese_label\",\n\t\thy: \"languageArmenian_label\",\n\t\tnb: \"languageNorwegianBokmal_label\",\n\t\tsh: \"languageSerboCroatian_label\",\n\t\tsq: \"languageAlbanian_label\",\n\t\tta: \"languageTamil_label\",\n\t\ttg: \"languageTajik_label\",\n\t\tpt: \"languagePortugese_label\",\n\t}\n\tconst id = mapping[code]\n\treturn id ? { textId: id, code } : null\n}\n","import { DesktopFacade } from \"../common/generatedipc/DesktopFacade\"\nimport { showSpellcheckLanguageDialog } from \"../../gui/dialogs/SpellcheckLanguageDialog\"\nimport { ElectronResult } from \"../common/generatedipc/ElectronResult.js\"\nimport { ErrorInfo } from \"../common/generatedipc/ErrorInfo.js\"\nimport { NativeShortcut } from \"../common/generatedipc/NativeShortcut.js\"\nimport { Shortcut } from \"../../misc/KeyManager.js\"\nimport { Keys } from \"../../api/common/TutanotaConstants.js\"\nimport { LoginController } from \"../../api/main/LoginController.js\"\nimport { lazyAsync } from \"@tutao/tutanota-utils\"\nimport { NativeInterfaceMain } from \"./NativeInterfaceMain.js\"\n\nexport class WebDesktopFacade implements DesktopFacade {\n\tconstructor(private logins: LoginController, private nativeInterface: lazyAsync<NativeInterfaceMain>) {}\n\n\tprint(): Promise<void> {\n\t\twindow.print()\n\t\treturn Promise.resolve()\n\t}\n\n\tasync showSpellcheckDropdown(): Promise<void> {\n\t\tawait showSpellcheckLanguageDialog()\n\t}\n\n\tasync applySearchResultToOverlay(result: ElectronResult | null): Promise<void> {\n\t\tconst { searchInPageOverlay } = await import(\"../../gui/SearchInPageOverlay.js\")\n\t\tsearchInPageOverlay.applyNextResult(result)\n\t\treturn Promise.resolve()\n\t}\n\n\tasync openFindInPage(): Promise<void> {\n\t\tconst { searchInPageOverlay } = await import(\"../../gui/SearchInPageOverlay.js\")\n\t\tsearchInPageOverlay.open()\n\t\treturn Promise.resolve()\n\t}\n\n\tasync reportError(errorInfo: ErrorInfo): Promise<void> {\n\t\tconst { showErrorNotification } = await import(\"../../misc/ErrorReporter.js\")\n\t\tawait this.logins.waitForPartialLogin()\n\t\tawait showErrorNotification(errorInfo)\n\t}\n\n\t/**\n\t * Updates the link-reveal on hover when the main thread detects that\n\t * the hovered url changed. Will _not_ update if hovering a in link app (starts with 2nd argument)\n\t */\n\tasync updateTargetUrl(url: string, appPath: string): Promise<void> {\n\t\tlet linkToolTip = document.getElementById(\"link-tt\")\n\n\t\tif (!linkToolTip) {\n\t\t\tlinkToolTip = document.createElement(\"DIV\")\n\t\t\tlinkToolTip.id = \"link-tt\"\n\t\t\t;(document.body as any).appendChild(linkToolTip)\n\t\t}\n\n\t\tif (url === \"\" || url.startsWith(appPath)) {\n\t\t\tlinkToolTip.className = \"\"\n\t\t} else {\n\t\t\tlinkToolTip.innerText = url\n\t\t\tlinkToolTip.className = \"reveal\"\n\t\t}\n\n\t\treturn Promise.resolve()\n\t}\n\n\t/**\n\t * this is only used in the admin client to sync the DB view with the inbox\n\t */\n\tasync openCustomer(mailAddress: string | null): Promise<void> {\n\t\tconst m = await import(\"mithril\")\n\n\t\tif (typeof mailAddress === \"string\" && m.route.get().startsWith(\"/customer\")) {\n\t\t\tm.route.set(`/customer?query=${encodeURIComponent(mailAddress)}`)\n\t\t\tconsole.log(\"switching to customer\", mailAddress)\n\t\t}\n\t}\n\n\tasync addShortcuts(shortcuts: Array<NativeShortcut>): Promise<void> {\n\t\tconst baseShortcut: Shortcut = {\n\t\t\texec: () => true,\n\t\t\tctrlOrCmd: false,\n\t\t\talt: false,\n\t\t\tmeta: false,\n\t\t\thelp: \"emptyString_msg\",\n\t\t\tkey: Keys.F,\n\t\t}\n\t\tconst fixedShortcuts: Array<Shortcut> = shortcuts.map((nsc) => Object.assign({}, baseShortcut, nsc))\n\t\tconst { keyManager } = await import(\"../../misc/KeyManager.js\")\n\t\tkeyManager.registerDesktopShortcuts(fixedShortcuts)\n\t}\n\n\tasync appUpdateDownloaded(): Promise<void> {\n\t\tconst native = await this.nativeInterface()\n\t\tnative.handleUpdateDownload()\n\t}\n}\n"],"mappings":"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"}