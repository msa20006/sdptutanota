{"version":3,"file":"MailAddressesUtils-yYLKhrr9.js","names":["logins: LoginController","onlyCustomDomains?: boolean","domain: string"],"sources":["../../src/common/settings/mailaddress/MailAddressesUtils.ts"],"sourcesContent":["import { AccountType, TUTA_MAIL_ADDRESS_SIGNUP_DOMAINS } from \"../../api/common/TutanotaConstants.js\"\nimport { LoginController } from \"../../api/main/LoginController.js\"\nimport { getCustomMailDomains } from \"../../api/common/utils/CustomerUtils.js\"\n\nexport interface EmailDomainData {\n\tdomain: string\n\tisPaid: boolean\n}\n\nexport async function getAvailableDomains(logins: LoginController, onlyCustomDomains?: boolean): Promise<EmailDomainData[]> {\n\tconst customerInfo = await logins.getUserController().loadCustomerInfo()\n\tlet availableDomains = getCustomMailDomains(customerInfo).map((info) => info.domain)\n\n\tif (\n\t\t!onlyCustomDomains &&\n\t\tlogins.getUserController().user.accountType !== AccountType.STARTER &&\n\t\t(availableDomains.length === 0 || logins.getUserController().isGlobalAdmin())\n\t) {\n\t\tavailableDomains.push(...TUTA_MAIL_ADDRESS_SIGNUP_DOMAINS)\n\t}\n\n\treturn availableDomains.map((domain) => ({ domain, isPaid: isPaidPlanDomain(domain) }))\n}\n\nexport function isPaidPlanDomain(domain: string): boolean {\n\treturn domain === \"tuta.com\"\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASO,eAAe,oBAAoBA,QAAyBC,mBAAyD;CAC3H,MAAM,eAAe,MAAM,OAAO,mBAAmB,CAAC,kBAAkB;CACxE,IAAI,mBAAmB,qBAAqB,aAAa,CAAC,IAAI,CAAC,SAAS,KAAK,OAAO;AAEpF,MACE,qBACD,OAAO,mBAAmB,CAAC,KAAK,gBAAgB,YAAY,YAC3D,iBAAiB,WAAW,KAAK,OAAO,mBAAmB,CAAC,eAAe,EAE5E,kBAAiB,KAAK,GAAG,iCAAiC;AAG3D,QAAO,iBAAiB,IAAI,CAAC,YAAY;EAAE;EAAQ,QAAQ,iBAAiB,OAAO;CAAE,GAAE;AACvF;AAEM,SAAS,iBAAiBC,QAAyB;AACzD,QAAO,WAAW;AAClB"}