{"version":3,"file":"RegistryScriptGeneratorTest-bO6_RAJH.js","names":["s: string","path: string","value: string | null","key: string","value: RegistryValue","buf: OperationBuffer","remove?: boolean","value: RegistrySubKey","remove: boolean","template: RegistryTemplateDefinition"],"sources":["../../src/common/desktop/integration/RegistryScriptGenerator.ts","../tests/desktop/integration/RegistryScriptGeneratorTest.ts"],"sourcesContent":["/*\n * This file helps keep registry operations for application and removal in sync by generating\n * an application registry script and a removal script from the same template.\n *\n * Windows Registry Scripts look like this:\n *   ```\n *   Windows Registry Editor Version 5.00\n *\n *   [HKCU\\SOFTWARE\\CLIENTS\\MAIL]\n *   @=\"default_value\"\n *\n *   [-HKLM\\SOFTWARE\\CLIENTS\\MAIL\\Mozilla Thunderbird]\n *\n *   [HKCU\\SOFTWARE\\CLIENTS\\MAIL\\Section]\n *   @=\"default_value\"\n *   \"name\"=\"named_value\"\n *   \"value_to_delete\"=-\n *\n *   [HKCU\\SOFTWARE\\CLIENTS\\MAIL\\Section2]\n *   @=-\n *   ```\n *\n * * there is a header line followed by a list of sections\n * * each section starts with a path in square brackets []. if the path is prefixed with a dash (-),\n *   that path and all its subkeys will be removed.\n * * sections can contain\n *     * default value assignments of the form @=\"VALUE\"\n *     * default value nullifications of the form @=-\n *     * named value assignments of the form \"NAME\"=\"VALUE\"\n *     * named value deletions of the form \"NAME\"=-\n *\n * The script generator uses JavaScript arrays of RegistryValueTemplates as templates.\n * During application, RegistryValueTemplates will recursively written to the registry at their respective root path.\n * The removal script preserves the root keys. this means that subkeys that were created in a root key will be recursively deleted,\n * but string values that are assigned directly to a root key or a name in that subkey will only be nulled. Example:\n *\n * To generate this application script:\n * ```\n * Windows Registry Editor Version 5.00\n * [HKLM\\SOFTWARE\\CLIENTS\\MAIL]\n * \"named\"=\"val\"\n * @=\"default_value_1\"\n *\n * [HKLM\\SOFTWARE\\CLIENTS\\MAIL\\subkey]\n * @=\"default_value_2\"\n * \"DLLPath\"=\"C:\\dll\\path\\t.dll\"\n * ```\n *\n * and this removal script\n *\n * ```\n * Windows Registry Editor Version 5.00\n *\n * [HKLM\\SOFTWARE\\CLIENTS\\MAIL]\n * \"named\"=-\n * @=-\n *\n * [-HKLM\\SOFTWARE\\CLIENTS\\MAIL\\subkey]\n * ```\n *\n * We would use this template. Note the values with empty keys which get expanded to @=<value> assignments.\n *\n * ```\n * const template = [{\n * \t\t\troot: \"HKLM\\\\SOFTWARE\\\\CLIENTS\\\\MAIL\",\n *\t\t\tvalue: {\"named\": \"val\", subkey: {\"\": \"default_value_2\", \"DLLPath\": \"C:\\\\dll\\\\path\\\\t.dll\",}, \"\": \"default_value_1\"}\n * }]\n * ```\n *\n * Also note that \"HKLM\\SOFTWARE\\CLIENTS\\MAIL\\subkey\" was removed entirely while the values\n * directly assigned to \"HKLM\\SOFTWARE\\CLIENTS\\MAIL\" are only nulled, because that path was given as a root.\n *\n *  Current Limitations:\n *  * only string values are supported\n *  * application can only write, removal will only remove\n *  */\nexport type RegistryTemplateDefinition = ReadonlyArray<RegistryValueTemplate>\nexport type RegistryValueTemplate = {\n\tvalue: RegistrySubKey\n\troot: string\n}\nexport type RegistrySubKey = { [key: string]: RegistryValue }\nexport type RegistryValue = RegistrySubKey | string\ntype OperationBuffer = Record<string, Array<string>>\nconst header_line = \"Windows Registry Editor Version 5.00\"\n\nfunction quote(s: string): string {\n\treturn `\"${s}\"`\n}\n\nfunction keyLine(path: string): string {\n\treturn `[${path}]`\n}\n\nfunction valueLine(path: string, value: string | null): string {\n\treturn `${path === \"\" ? \"@\" : quote(path)}=${value == null ? \"-\" : quote(value)}`\n}\n\n/**\n * value expander for the script generators. if a value is not a string, it's another section\n * that gets expanded recursively.\n *\n * remove is used to create value/key removal lines\n */\nfunction expandValue(path: string, key: string, value: RegistryValue, buf: OperationBuffer, remove?: boolean): OperationBuffer {\n\tif (typeof value === \"string\") {\n\t\tbuf[path].push(valueLine(key, remove ? null : value))\n\t} else {\n\t\tbuf = expandSection(`${path}\\\\${key}`, value, buf, remove)\n\t}\n\n\treturn buf\n}\n\n/**\n * section expander for the script generator\n */\nfunction expandSection(path: string, value: RegistrySubKey, buf: OperationBuffer, remove?: boolean): OperationBuffer {\n\tif (buf[path] == null) buf[path] = []\n\n\tfor (const key in value) {\n\t\tif (typeof value[key] !== \"string\" && remove) {\n\t\t\tbuf[`-${path}\\\\${key}`] = []\n\t\t} else {\n\t\t\texpandValue(path, key, value[key], buf, remove)\n\t\t}\n\t}\n\n\treturn buf\n}\n\n/**\n * converts a map of registry paths to value setters into an executable registry script\n * @param {OperationBuffer} buf List of operations the need to be done\n * @returns {string} a windows registry script that can be imported by regex.exe to apply the operations\n */\nfunction bufToScript(buf: OperationBuffer): string {\n\tconst lines = [header_line]\n\n\tfor (const key in buf) {\n\t\tconst next = buf[key]\n\t\tif (next.length < 1 && !key.startsWith(\"-\")) continue\n\t\tlines.push(\"\", keyLine(key))\n\t\tlines.push(...next)\n\t}\n\n\treturn lines.join(\"\\r\\n\").trim()\n}\n\n/**\n * the application and removal script generators are very similar in structure, this function abstracts over that.\n */\nfunction scriptBuilder(remove: boolean, template: RegistryTemplateDefinition): string {\n\tconst buf = template.reduce((prev, { root, value }) => expandSection(root, value, prev, remove), {})\n\treturn bufToScript(buf)\n}\n\n/**\n * create a windows registry script that can be executed to apply the given template\n */\nexport function applyScriptBuilder(template: RegistryTemplateDefinition): string {\n\treturn scriptBuilder(false, template)\n}\n\n/**\n * create a windows registry script that can be executed to remove the values that have been\n * created by executing the script generated from the template by applyScriptBuilder\n */\nexport function removeScriptBuilder(template: RegistryTemplateDefinition): string {\n\treturn scriptBuilder(true, template)\n}\n","import o from \"@tutao/otest\"\nimport { applyScriptBuilder, removeScriptBuilder } from \"../../../../src/common/desktop/integration/RegistryScriptGenerator.js\"\n\no.spec(\"RegistryScriptGenerator Test\", function () {\n\tconst templates = [\n\t\t{\n\t\t\tname: \"empty template\",\n\t\t\ttemplate: [],\n\t\t\tapply: \"Windows Registry Editor Version 5.00\",\n\t\t\tremove: \"Windows Registry Editor Version 5.00\",\n\t\t},\n\t\t{\n\t\t\tname: \"naked value\",\n\t\t\ttemplate: [{ root: \"HKLM\", value: { tuta: \"some_value\" } }],\n\t\t\tapply: 'Windows Registry Editor Version 5.00\\r\\n\\r\\n[HKLM]\\r\\n\"tuta\"=\"some_value\"',\n\t\t\tremove: 'Windows Registry Editor Version 5.00\\r\\n\\r\\n[HKLM]\\r\\n\"tuta\"=-',\n\t\t},\n\t\t{\n\t\t\tname: \"with subkeys\",\n\t\t\ttemplate: [{ root: \"HKLM\", value: { tuta: { \"\": \"subkey_value\" } } }],\n\t\t\tapply: 'Windows Registry Editor Version 5.00\\r\\n\\r\\n[HKLM\\\\tuta]\\r\\n@=\"subkey_value\"',\n\t\t\tremove: \"Windows Registry Editor Version 5.00\\r\\n\\r\\n[-HKLM\\\\tuta]\",\n\t\t},\n\t\t{\n\t\t\tname: \"mixed\",\n\t\t\ttemplate: [{ root: \"HKLM\", value: { direct: \"direct_val\", sub: { key: \"sub_val\" } } }],\n\t\t\tapply: 'Windows Registry Editor Version 5.00\\r\\n\\r\\n[HKLM]\\r\\n\"direct\"=\"direct_val\"\\r\\n\\r\\n[HKLM\\\\sub]\\r\\n\"key\"=\"sub_val\"',\n\t\t\tremove: 'Windows Registry Editor Version 5.00\\r\\n\\r\\n[HKLM]\\r\\n\"direct\"=-\\r\\n\\r\\n[-HKLM\\\\sub]',\n\t\t},\n\t\t{\n\t\t\tname: \"deeper subkey\",\n\t\t\ttemplate: [{ root: \"HKCU\", value: { a: { deep: { path: { subkey: { \"\": \"hello.\" } } } } } }],\n\t\t\tapply: 'Windows Registry Editor Version 5.00\\r\\n\\r\\n[HKCU\\\\a\\\\deep\\\\path\\\\subkey]\\r\\n@=\"hello.\"',\n\t\t\tremove: \"Windows Registry Editor Version 5.00\\r\\n\\r\\n[-HKCU\\\\a]\",\n\t\t},\n\t]\n\n\tfor (const { template, apply, remove, name } of templates) {\n\t\to(name, function () {\n\t\t\to(applyScriptBuilder(template)).equals(apply)\n\t\t\to(removeScriptBuilder(template)).equals(remove)\n\t\t})\n\t}\n})\n"],"mappings":"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"}