{"version":3,"file":"GroupGuiUtils-DvJ2EOCj.js","names":["sharedGroupInfo: GroupInfo","recipients: Array<PartialRecipient>","texts: GroupSharingTexts","invitation: ReceivedGroupInvitation","recipients: Recipients","subject: string","body: string","senderMailAddress: string","CALENDAR_SHARING_TEXTS: lazy<GroupSharingTexts>","TEMPLATE_SHARING_TEXTS: lazy<GroupSharingTexts>","sharer: string","groupName: string","member: string","CONTACT_LIST_SHARING_TEXTS: lazy<GroupSharingTexts>","groupType: ShareableGroupType"],"sources":["../../src/common/sharing/GroupSharingUtils.ts","../../src/common/sharing/GroupGuiUtils.ts"],"sourcesContent":["import type { GroupInfo, ReceivedGroupInvitation } from \"../api/entities/sys/TypeRefs.js\"\nimport { locator } from \"../api/main/CommonLocator\"\nimport { MailMethod } from \"../api/common/TutanotaConstants\"\nimport { showProgressDialog } from \"../gui/dialogs/ProgressDialog\"\nimport type { GroupSharingTexts } from \"./GroupGuiUtils\"\nimport { getDefaultGroupName, getInvitationGroupType, getSharedGroupName } from \"./GroupUtils\"\nimport { PartialRecipient, Recipients } from \"../api/common/recipients/Recipient\"\nimport { getDefaultSender, getEnabledMailAddressesWithUser, getMailAddressDisplayText, getSenderNameForUser } from \"../mailFunctionality/SharedMailUtils.js\"\n\nexport function sendShareNotificationEmail(sharedGroupInfo: GroupInfo, recipients: Array<PartialRecipient>, texts: GroupSharingTexts) {\n\tlocator.mailboxModel.getUserMailboxDetails().then((mailboxDetails) => {\n\t\tconst senderMailAddress = getDefaultSender(locator.logins, mailboxDetails)\n\t\tconst userName = getSenderNameForUser(mailboxDetails, locator.logins.getUserController())\n\t\t// Sending notifications as bcc so that invited people don't see each other\n\t\tconst bcc = recipients.map(({ name, address }) => ({\n\t\t\tname,\n\t\t\taddress,\n\t\t}))\n\n\t\tlet senderDisplayName\n\n\t\tif (!userName) {\n\t\t\tsenderDisplayName = senderMailAddress\n\t\t} else {\n\t\t\t// use html code for < > so that they (and the enclosed email address) do not get sanitized away\n\t\t\tsenderDisplayName = `${userName} &lt;${senderMailAddress}&gt;`\n\t\t}\n\n\t\t_sendNotificationEmail(\n\t\t\t{\n\t\t\t\tbcc,\n\t\t\t},\n\t\t\ttexts.shareEmailSubject,\n\t\t\ttexts.shareEmailBody(senderDisplayName, getSharedGroupName(sharedGroupInfo, locator.logins.getUserController(), true)),\n\t\t\tsenderMailAddress,\n\t\t)\n\t})\n}\n\nexport function sendAcceptNotificationEmail(invitation: ReceivedGroupInvitation, texts: GroupSharingTexts) {\n\tconst to = [\n\t\t{\n\t\t\tname: invitation.inviterName,\n\t\t\taddress: invitation.inviterMailAddress,\n\t\t},\n\t]\n\tconst userName = invitation.inviterMailAddress\n\tconst invitee = invitation.inviteeMailAddress\n\tconst groupName = invitation.sharedGroupName || getDefaultGroupName(getInvitationGroupType(invitation))\n\tconst senderMailAddress = invitation.inviteeMailAddress\n\n\t_sendNotificationEmail(\n\t\t{\n\t\t\tto,\n\t\t},\n\t\ttexts.acceptEmailSubject,\n\t\ttexts.acceptEmailBody(userName, invitee, groupName),\n\t\tsenderMailAddress,\n\t)\n}\n\nexport function sendRejectNotificationEmail(invitation: ReceivedGroupInvitation, texts: GroupSharingTexts) {\n\tconst to = [\n\t\t{\n\t\t\tname: invitation.inviterName,\n\t\t\taddress: invitation.inviterMailAddress,\n\t\t},\n\t]\n\tconst userName = invitation.inviterMailAddress\n\tconst invitee = invitation.inviteeMailAddress\n\tconst groupName = invitation.sharedGroupName || getDefaultGroupName(getInvitationGroupType(invitation))\n\tconst senderMailAddress = invitation.inviteeMailAddress\n\n\t_sendNotificationEmail(\n\t\t{\n\t\t\tto,\n\t\t},\n\t\ttexts.declineEmailSubject,\n\t\ttexts.declineEmailBody(userName, invitee, groupName),\n\t\tsenderMailAddress,\n\t)\n}\n\nfunction _sendNotificationEmail(recipients: Recipients, subject: string, body: string, senderMailAddress: string) {\n\timport(\"../misc/HtmlSanitizer\").then(({ htmlSanitizer }) => {\n\t\tconst sanitizedBody = htmlSanitizer.sanitizeHTML(body, {\n\t\t\tblockExternalContent: false,\n\t\t\tallowRelativeLinks: false,\n\t\t\tusePlaceholderForInlineImages: false,\n\t\t}).html\n\t\tlocator.mailboxModel.getUserMailboxDetails().then(async (mailboxDetails) => {\n\t\t\tconst sender = getEnabledMailAddressesWithUser(mailboxDetails, locator.logins.getUserController().userGroupInfo).includes(senderMailAddress)\n\t\t\t\t? senderMailAddress\n\t\t\t\t: getDefaultSender(locator.logins, mailboxDetails)\n\n\t\t\tconst confirm = () => Promise.resolve(true)\n\n\t\t\tconst wait = showProgressDialog\n\t\t\tconst mailboxProperties = await locator.mailboxModel.getMailboxProperties(mailboxDetails.mailboxGroupRoot)\n\t\t\tconst model = await locator.sendMailModel(mailboxDetails, mailboxProperties)\n\t\t\tawait model.initWithTemplate(recipients, subject, sanitizedBody, [], true, sender)\n\t\t\tawait model.send(MailMethod.NONE, confirm, wait, \"tooManyMailsAuto_msg\")\n\t\t})\n\t})\n}\n","import type { TranslationKey, MaybeTranslation } from \"../misc/LanguageViewModel\"\nimport { lang } from \"../misc/LanguageViewModel\"\nimport { GroupType } from \"../api/common/TutanotaConstants\"\nimport { getDefaultGroupName, ShareableGroupType } from \"./GroupUtils\"\nimport type { ReceivedGroupInvitation } from \"../api/entities/sys/TypeRefs.js\"\nimport type { lazy } from \"@tutao/tutanota-utils\"\n\nexport type GroupSharingTexts = {\n\treadonly groupNameLabel: TranslationKey\n\treadonly participantsLabel: (groupName: string) => string\n\treadonly acceptEmailSubject: string\n\treadonly acceptEmailBody: (userName: string, invitee: string, groupName: string) => string\n\treadonly declineEmailSubject: string\n\treadonly declineEmailBody: (userName: string, invitee: string, groupName: string) => string\n\treadonly shareEmailSubject: string\n\treadonly shareEmailBody: (sharer: string, groupName: string) => string\n\treadonly addMemberMessage: (groupName: string) => string\n\treadonly removeMemberMessage: (groupName: string, member: string) => string\n\treadonly alreadyGroupMemberMessage: MaybeTranslation\n\treadonly receivedGroupInvitationMessage: string\n\treadonly sharedGroupDefaultCustomName: (invitation: ReceivedGroupInvitation) => string\n\treadonly yourCustomNameLabel: (groupName: string) => string\n}\n\nconst CALENDAR_SHARING_TEXTS: lazy<GroupSharingTexts> = () => ({\n\tgroupNameLabel: \"calendarName_label\",\n\tparticipantsLabel: (groupName) =>\n\t\tlang.get(\"calendarParticipants_label\", {\n\t\t\t\"{name}\": groupName,\n\t\t}),\n\tacceptEmailSubject: lang.get(\"shareCalendarAcceptEmailSubject_msg\"),\n\tacceptEmailBody: (userName, invitee, groupName) =>\n\t\tlang.get(\"shareCalendarAcceptEmailBody_msg\", {\n\t\t\t\"{invitee}\": invitee,\n\t\t\t\"{calendarName}\": groupName,\n\t\t\t\"{recipientName}\": userName,\n\t\t}),\n\tdeclineEmailSubject: lang.get(\"shareCalendarDeclineEmailSubject_msg\"),\n\tdeclineEmailBody: (userName, invitee, groupName) =>\n\t\tlang.get(\"shareCalendarDeclineEmailBody_msg\", {\n\t\t\t\"{invitee}\": invitee,\n\t\t\t\"{calendarName}\": groupName,\n\t\t\t\"{recipientName}\": userName,\n\t\t}),\n\tshareEmailSubject: lang.get(\"shareCalendarInvitationEmailSubject_msg\"),\n\tshareEmailBody: (sender, calendarName) =>\n\t\tlang.get(\"shareCalendarInvitationEmailBody_msg\", {\n\t\t\t// Sender is displayed like Name <mail.address@tutanota.com>. Less-than and greater-than must be encoded for HTML\n\t\t\t\"{inviter}\": sender,\n\t\t\t\"{calendarName}\": calendarName,\n\t\t}),\n\taddMemberMessage: (_) => `${lang.get(\"shareCalendarWarning_msg\")} ${lang.get(\"shareWarningAliases_msg\")}`,\n\tremoveMemberMessage: (calendarName, invitee) =>\n\t\tlang.get(\"removeCalendarParticipantConfirm_msg\", {\n\t\t\t\"{participant}\": invitee,\n\t\t\t\"{calendarName}\": calendarName,\n\t\t}),\n\talreadyGroupMemberMessage: \"sharedCalendarAlreadyMember_msg\",\n\treceivedGroupInvitationMessage: `${lang.get(\"shareCalendarWarning_msg\")} ${lang.get(\"shareWarningAliases_msg\")}`,\n\tsharedGroupDefaultCustomName: (groupOwnerName) => getDefaultGroupName(GroupType.Calendar),\n\tyourCustomNameLabel: (groupName) =>\n\t\tlang.get(\"calendarCustomName_label\", {\n\t\t\t\"{customName}\": groupName,\n\t\t}),\n})\n\nconst TEMPLATE_SHARING_TEXTS: lazy<GroupSharingTexts> = () => ({\n\tgroupNameLabel: \"templateGroupName_label\",\n\tparticipantsLabel: (groupName) =>\n\t\tlang.get(\"sharedGroupParticipants_label\", {\n\t\t\t\"{groupName}\": groupName,\n\t\t}),\n\tacceptEmailSubject: lang.get(\"acceptTemplateGroupEmailSubject_msg\"),\n\tacceptEmailBody: (userName, invitee, groupName) =>\n\t\t`${lang.get(\"sharedGroupAcceptEmailBody_msg\", {\n\t\t\t\"{recipientName}\": userName,\n\t\t\t\"{invitee}\": invitee,\n\t\t\t\"{groupName}\": groupName,\n\t\t})} ${lang.get(\"automatedMessage_msg\")}`,\n\tdeclineEmailSubject: lang.get(\"declineTemplateGroupEmailSubject_msg\"),\n\tdeclineEmailBody: (userName, invitee, groupName) =>\n\t\t`${lang.get(\"sharedGroupDeclineEmailBody_msg\", {\n\t\t\t\"{recipientName}\": userName,\n\t\t\t\"{invitee}\": invitee,\n\t\t\t\"{groupName}\": groupName,\n\t\t})} ${lang.get(\"automatedMessage_msg\")}`,\n\tshareEmailSubject: lang.get(\"shareTemplateGroupEmailSubject_msg\"),\n\tshareEmailBody: (sharer: string, groupName: string) =>\n\t\tlang.get(\"shareTemplateGroupEmailBody_msg\", {\n\t\t\t\"{inviter}\": sharer,\n\t\t\t\"{groupName}\": groupName,\n\t\t}),\n\taddMemberMessage: (groupName: string) => `${lang.get(\"shareGroupWarning_msg\")} ${lang.get(\"shareWarningAliases_msg\")}`,\n\tremoveMemberMessage: (groupName: string, member: string) =>\n\t\tlang.get(\"removeSharedMemberConfirm_msg\", {\n\t\t\t\"{member}\": member,\n\t\t\t\"{groupName}\": groupName,\n\t\t}),\n\talreadyGroupMemberMessage: \"alreadySharedGroupMember_msg\",\n\treceivedGroupInvitationMessage: `${lang.get(\"shareGroupWarning_msg\")} ${lang.get(\"shareWarningAliases_msg\")}`,\n\tsharedGroupDefaultCustomName: (invitation) =>\n\t\tlang.get(\"sharedTemplateGroupDefaultName_label\", {\n\t\t\t\"{ownerName}\": invitation.inviterName || invitation.inviterMailAddress,\n\t\t}),\n\tyourCustomNameLabel: (groupName) =>\n\t\tlang.get(\"customName_label\", {\n\t\t\t\"{customName}\": groupName,\n\t\t}),\n})\n\nconst CONTACT_LIST_SHARING_TEXTS: lazy<GroupSharingTexts> = () => ({\n\tgroupNameLabel: \"contactListName_label\",\n\tparticipantsLabel: (groupName) =>\n\t\tlang.get(\"sharedGroupParticipants_label\", {\n\t\t\t\"{groupName}\": groupName,\n\t\t}),\n\tacceptEmailSubject: lang.get(\"acceptContactListEmailSubject_msg\"),\n\tacceptEmailBody: (userName, invitee, groupName) =>\n\t\t`${lang.get(\"sharedGroupAcceptEmailBody_msg\", {\n\t\t\t\"{recipientName}\": userName,\n\t\t\t\"{invitee}\": invitee,\n\t\t\t\"{groupName}\": groupName,\n\t\t})} ${lang.get(\"automatedMessage_msg\")}`,\n\tdeclineEmailSubject: lang.get(\"declineContactListEmailSubject_msg\"),\n\tdeclineEmailBody: (userName, invitee, groupName) =>\n\t\t`${lang.get(\"sharedGroupDeclineEmailBody_msg\", {\n\t\t\t\"{recipientName}\": userName,\n\t\t\t\"{invitee}\": invitee,\n\t\t\t\"{groupName}\": groupName,\n\t\t})} ${lang.get(\"automatedMessage_msg\")}`,\n\tshareEmailSubject: lang.get(\"shareContactListEmailSubject_msg\"),\n\tshareEmailBody: (sharer: string, groupName: string) =>\n\t\t`${lang.get(\"shareContactListEmailBody_msg\", {\n\t\t\t\"{inviter}\": sharer,\n\t\t\t\"{groupName}\": groupName,\n\t\t})} ${lang.get(\"automatedMessage_msg\")}`,\n\taddMemberMessage: (groupName: string) => `${lang.get(\"shareGroupWarning_msg\")} ${lang.get(\"shareWarningAliases_msg\")}`,\n\tremoveMemberMessage: (groupName: string, member: string) =>\n\t\tlang.get(\"removeSharedMemberConfirm_msg\", {\n\t\t\t\"{member}\": member,\n\t\t\t\"{groupName}\": groupName,\n\t\t}),\n\talreadyGroupMemberMessage: \"alreadySharedGroupMember_msg\",\n\treceivedGroupInvitationMessage: `${lang.get(\"shareGroupWarning_msg\")} ${lang.get(\"shareWarningAliases_msg\")}`,\n\tsharedGroupDefaultCustomName: (invitation) =>\n\t\tlang.get(\"sharedContactListDefaultName_label\", {\n\t\t\t\"{ownerName}\": invitation.inviterName || invitation.inviterMailAddress,\n\t\t}),\n\tyourCustomNameLabel: (groupName) =>\n\t\tlang.get(\"customName_label\", {\n\t\t\t\"{customName}\": groupName,\n\t\t}),\n})\n\nexport function getTextsForGroupType(groupType: ShareableGroupType): GroupSharingTexts {\n\tswitch (groupType) {\n\t\tcase GroupType.Calendar:\n\t\t\treturn CALENDAR_SHARING_TEXTS()\n\n\t\tcase GroupType.Template:\n\t\t\treturn TEMPLATE_SHARING_TEXTS()\n\n\t\tcase GroupType.ContactList:\n\t\t\treturn CONTACT_LIST_SHARING_TEXTS()\n\t}\n}\n"],"mappings":"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"}