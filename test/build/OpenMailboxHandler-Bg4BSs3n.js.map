{"version":3,"file":"OpenMailboxHandler-Bg4BSs3n.js","names":["logins: LoginController","mailModel: MailModel","mailboxModel: MailboxModel","userId: Id","mailAddress: string","requestedPath: string | null"],"sources":["../../src/mail-app/native/main/OpenMailboxHandler.ts"],"sourcesContent":["import m from \"mithril\"\nimport { MailSetKind } from \"../../../common/api/common/TutanotaConstants.js\"\nimport { assertNotNull } from \"@tutao/tutanota-utils\"\nimport { assertSystemFolderOfType } from \"../../mail/model/MailUtils.js\"\nimport { getElementId } from \"../../../common/api/common/utils/EntityUtils.js\"\nimport { LoginController } from \"../../../common/api/main/LoginController.js\"\nimport { MailModel } from \"../../mail/model/MailModel.js\"\nimport { MailboxModel } from \"../../../common/mailFunctionality/MailboxModel.js\"\n\n/**\n * Handles requests for opening mailbox paths from native.\n */\nexport class OpenMailboxHandler {\n\tconstructor(private readonly logins: LoginController, private readonly mailModel: MailModel, private readonly mailboxModel: MailboxModel) {}\n\n\tasync openMailbox(userId: Id, mailAddress: string, requestedPath: string | null): Promise<void> {\n\t\tif (this.logins.isUserLoggedIn() && this.logins.getUserController().user._id === userId) {\n\t\t\tif (!requestedPath) {\n\t\t\t\tconst [mailboxDetail] = await this.mailboxModel.getMailboxDetails()\n\t\t\t\tconst folders = await this.mailModel.getMailboxFoldersForId(assertNotNull(mailboxDetail.mailbox.folders)._id)\n\t\t\t\tconst inbox = assertSystemFolderOfType(folders, MailSetKind.INBOX)\n\t\t\t\tm.route.set(\"/mail/\" + getElementId(inbox))\n\t\t\t} else {\n\t\t\t\tm.route.set(\"/mail\" + requestedPath)\n\t\t\t}\n\t\t} else {\n\t\t\tif (!requestedPath) {\n\t\t\t\tm.route.set(`/login?noAutoLogin=false&userId=${userId}&loginWith=${mailAddress}`)\n\t\t\t} else {\n\t\t\t\tconst fullRequestedPath = `/mail${requestedPath}`\n\t\t\t\tm.route.set(`/login?noAutoLogin=false&userId=${userId}&loginWith=${mailAddress}&requestedPath=${encodeURIComponent(fullRequestedPath)}`)\n\t\t\t}\n\t\t}\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAYa,qBAAN,MAAyB;CAC/B,YAA6BA,QAA0CC,WAAuCC,cAA4B;EAsB1I,KAtB6B;EAsB5B,KAtBsE;EAsBrE,KAtB4G;CAA8B;CAE5I,MAAM,YAAYC,QAAYC,aAAqBC,eAA6C;AAC/F,MAAI,KAAK,OAAO,gBAAgB,IAAI,KAAK,OAAO,mBAAmB,CAAC,KAAK,QAAQ,OAChF,MAAK,eAAe;GACnB,MAAM,CAAC,cAAc,GAAG,MAAM,KAAK,aAAa,mBAAmB;GACnE,MAAM,UAAU,MAAM,KAAK,UAAU,uBAAuB,cAAc,cAAc,QAAQ,QAAQ,CAAC,IAAI;GAC7G,MAAM,QAAQ,yBAAyB,SAAS,YAAY,MAAM;AAClE,mBAAE,MAAM,IAAI,WAAW,aAAa,MAAM,CAAC;EAC3C,MACA,iBAAE,MAAM,IAAI,UAAU,cAAc;UAGhC,cACJ,iBAAE,MAAM,KAAK,kCAAkC,OAAO,aAAa,YAAY,EAAE;KAC3E;GACN,MAAM,qBAAqB,OAAO,cAAc;AAChD,mBAAE,MAAM,KAAK,kCAAkC,OAAO,aAAa,YAAY,iBAAiB,mBAAmB,kBAAkB,CAAC,EAAE;EACxI;CAEF;AACD"}