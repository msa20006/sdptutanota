{"version":3,"file":"ImportAsVCard.js","sourceRoot":"","sources":["../../../../../src/mail-app/contacts/view/ImportAsVCard.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,eAAe,EAAE,oBAAoB,EAAE,MAAM,wCAAwC,CAAA;AAC9F,OAAO,EAAE,sBAAsB,EAAE,MAAM,uBAAuB,CAAA;AAC9D,OAAO,EAAE,kBAAkB,EAAE,MAAM,+CAA+C,CAAA;AAClF,OAAO,EAAE,OAAO,EAAE,MAAM,2CAA2C,CAAA;AACnE,OAAO,EAAE,MAAM,EAAE,MAAM,oCAAoC,CAAA;AAE3D,OAAO,EAAE,cAAc,EAAE,MAAM,mDAAmD,CAAA;AAClF,OAAO,EAAE,cAAc,EAAE,MAAM,qBAAqB,CAAA;AACpD,OAAO,EAAE,WAAW,EAAE,MAAM,sBAAsB,CAAA;AAClD,OAAO,EAAE,KAAK,EAAE,MAAM,mCAAmC,CAAA;AAEzD,MAAM,CAAC,KAAK,UAAU,aAAa;IAClC,MAAM,iBAAiB,GAAG,CAAC,KAAK,CAAC,CAAA;IACjC,MAAM,YAAY,GAAG,KAAK,EAAE,CAAC,CAAC,CAAC,MAAM,oBAAoB,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,eAAe,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAA;IACnI,IAAI,YAAY,CAAC,MAAM,IAAI,CAAC;QAAE,OAAM;IACpC,OAAO,kBAAkB,CACxB,gBAAgB,EAChB,CAAC,KAAK,IAAI,EAAE;QACX,MAAM,eAAe,GAAG,MAAM,WAAW,CAAC,eAAe,EAAE,CAAA;QAC3D,MAAM,aAAa,GAAG,MAAM,OAAO,CAAC,YAAY,CAAC,gBAAgB,EAAE,CAAA;QACnE,uEAAuE;QACvE,MAAM,SAAS,GAAG,YAAY,CAAC,OAAO,CAAC,CAAC,WAAW,EAAE,EAAE;YACtD,OAAO,sBAAsB,CAAC,WAAW,CAAC,IAAI,CAAC,CAAA;QAChD,CAAC,CAAC,CAAA;QACF,MAAM,eAAe,CAAC,sBAAsB,CAAC,SAAS,EAAE,aAAc,CAAC,CAAA;IACxE,CAAC,CAAC,EAAE,CACJ,CAAA;AACF,CAAC;AAED;;GAEG;AACH,MAAM,UAAU,aAAa,CAAC,YAA0B;IACvD,OAAO,kBAAkB,CACxB,gBAAgB,EAChB,YAAY,CAAC,gBAAgB,EAAE,CAAC,IAAI,CAAC,CAAC,aAAa,EAAE,EAAE;QACtD,IAAI,CAAC,aAAa;YAAE,OAAO,CAAC,CAAA;QAC5B,OAAO,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC,cAAc,EAAE,aAAa,CAAC,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,EAAE;YACvF,IAAI,WAAW,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;gBAC9B,OAAO,CAAC,CAAA;YACT,CAAC;iBAAM,CAAC;gBACP,OAAO,cAAc,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,WAAW,CAAC,MAAM,CAAC,CAAA;YAClE,CAAC;QACF,CAAC,CAAC,CAAA;IACH,CAAC,CAAC,CACF,CAAC,IAAI,CAAC,CAAC,aAAa,EAAE,EAAE;QACxB,IAAI,aAAa,KAAK,CAAC,EAAE,CAAC;YACzB,MAAM,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAA;QACjC,CAAC;IACF,CAAC,CAAC,CAAA;AACH,CAAC","sourcesContent":["import { showFileChooser, showNativeFilePicker } from \"../../../common/file/FileController.js\"\nimport { utf8Uint8ArrayToString } from \"@tutao/tutanota-utils\"\nimport { showProgressDialog } from \"../../../common/gui/dialogs/ProgressDialog.js\"\nimport { locator } from \"../../../common/api/main/CommonLocator.js\"\nimport { Dialog } from \"../../../common/gui/base/Dialog.js\"\nimport { ContactModel } from \"../../../common/contactsFunctionality/ContactModel.js\"\nimport { ContactTypeRef } from \"../../../common/api/entities/tutanota/TypeRefs.js\"\nimport { exportContacts } from \"../VCardExporter.js\"\nimport { mailLocator } from \"../../mailLocator.js\"\nimport { isApp } from \"../../../common/api/common/Env.js\"\n\nexport async function importAsVCard() {\n\tconst allowedExtensions = [\"vcf\"]\n\tconst contactFiles = isApp() ? await showNativeFilePicker(allowedExtensions, true) : await showFileChooser(true, allowedExtensions)\n\tif (contactFiles.length <= 0) return\n\treturn showProgressDialog(\n\t\t\"pleaseWait_msg\",\n\t\t(async () => {\n\t\t\tconst contactImporter = await mailLocator.contactImporter()\n\t\t\tconst contactListId = await locator.contactModel.getContactListId()\n\t\t\t// If multiple vCard files where selected, combine the data within them\n\t\t\tconst vCardList = contactFiles.flatMap((contactFile) => {\n\t\t\t\treturn utf8Uint8ArrayToString(contactFile.data)\n\t\t\t})\n\t\t\tawait contactImporter.importContactsFromFile(vCardList, contactListId!)\n\t\t})(),\n\t)\n}\n\n/**\n *Creates a vCard file with all contacts if at least one contact exists\n */\nexport function exportAsVCard(contactModel: ContactModel): Promise<void> {\n\treturn showProgressDialog(\n\t\t\"pleaseWait_msg\",\n\t\tcontactModel.getContactListId().then((contactListId) => {\n\t\t\tif (!contactListId) return 0\n\t\t\treturn locator.entityClient.loadAll(ContactTypeRef, contactListId).then((allContacts) => {\n\t\t\t\tif (allContacts.length === 0) {\n\t\t\t\t\treturn 0\n\t\t\t\t} else {\n\t\t\t\t\treturn exportContacts(allContacts).then(() => allContacts.length)\n\t\t\t\t}\n\t\t\t})\n\t\t}),\n\t).then((nbrOfContacts) => {\n\t\tif (nbrOfContacts === 0) {\n\t\t\tDialog.message(\"noContacts_msg\")\n\t\t}\n\t})\n}\n"]}