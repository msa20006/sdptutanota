{"version":3,"file":"DesktopSettingsViewer.js","sourceRoot":"","sources":["../../../../src/mail-app/settings/DesktopSettingsViewer.ts"],"names":[],"mappings":"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","sourcesContent":["import m, { Children } from \"mithril\"\nimport { InfoLink, lang } from \"../../common/misc/LanguageViewModel\"\nimport stream from \"mithril/stream\"\nimport Stream from \"mithril/stream\"\nimport { showProgressDialog } from \"../../common/gui/dialogs/ProgressDialog\"\nimport { Icons } from \"../../common/gui/base/icons/Icons\"\nimport type { TextFieldAttrs } from \"../../common/gui/base/TextField.js\"\nimport { TextField } from \"../../common/gui/base/TextField.js\"\nimport { attachDropdown } from \"../../common/gui/base/Dropdown.js\"\nimport type { DropDownSelectorAttrs } from \"../../common/gui/base/DropDownSelector.js\"\nimport { DropDownSelector } from \"../../common/gui/base/DropDownSelector.js\"\nimport { Dialog } from \"../../common/gui/base/Dialog\"\nimport type { UpdateHelpLabelAttrs } from \"./DesktopUpdateHelpLabel\"\nimport { DesktopUpdateHelpLabel } from \"./DesktopUpdateHelpLabel\"\nimport { DesktopConfigKey } from \"../../common/desktop/config/ConfigKeys\"\nimport { getCurrentSpellcheckLanguageLabel, showSpellcheckLanguageDialog } from \"../../common/gui/dialogs/SpellcheckLanguageDialog\"\nimport { ifAllowedTutaLinks } from \"../../common/gui/base/GuiUtils\"\nimport { assertMainOrNode } from \"../../common/api/common/Env\"\nimport { locator } from \"../../common/api/main/CommonLocator\"\nimport { IconButton, IconButtonAttrs } from \"../../common/gui/base/IconButton.js\"\nimport { ButtonSize } from \"../../common/gui/base/ButtonSize.js\"\nimport { MoreInfoLink } from \"../../common/misc/news/MoreInfoLink.js\"\nimport { UpdatableSettingsViewer } from \"../../common/settings/Interfaces.js\"\nimport { MailExportMode } from \"../../common/mailFunctionality/SharedMailUtils.js\"\n\nassertMainOrNode()\n\nenum DownloadLocationStrategy {\n\tALWAYS_ASK,\n\tCHOOSE_DIRECTORY,\n}\n\nexport class DesktopSettingsViewer implements UpdatableSettingsViewer {\n\tprivate readonly isDefaultMailtoHandler: Stream<boolean | null>\n\tprivate defaultDownloadPath!: Stream<string>\n\tprivate readonly runAsTrayApp: Stream<boolean | null>\n\tprivate readonly runOnStartup: Stream<boolean | null>\n\tprivate readonly spellCheckLang: Stream<string>\n\tprivate readonly isIntegrated: Stream<boolean | null>\n\tprivate readonly isAutoUpdateEnabled: Stream<boolean | null>\n\tprivate showAutoUpdateOption: boolean\n\tprivate readonly updateAvailable: Stream<boolean>\n\tprivate readonly mailExportMode: Stream<MailExportMode>\n\tprivate isPathDialogOpen: boolean = false\n\tprivate offlineStorageValue: Stream<boolean>\n\n\tconstructor() {\n\t\tthis.isDefaultMailtoHandler = stream<boolean | null>(false)\n\t\tthis.runAsTrayApp = stream<boolean | null>(true)\n\t\tthis.runOnStartup = stream<boolean | null>(false)\n\t\tthis.spellCheckLang = stream(\"\")\n\t\tthis.isIntegrated = stream<boolean | null>(false)\n\t\tthis.isAutoUpdateEnabled = stream<boolean | null>(false)\n\t\tthis.showAutoUpdateOption = true\n\t\tthis.updateAvailable = stream<boolean>(false)\n\t\tthis.mailExportMode = stream<MailExportMode>(\"msg\") // msg is just a dummy value here, it will be overwritten in requestDesktopConfig\n\t\tthis.offlineStorageValue = stream<boolean>(false)\n\t}\n\n\toninit() {\n\t\tthis.requestDesktopConfig()\n\t}\n\n\tview(): Children {\n\t\tconst setDefaultMailtoHandlerAttrs: DropDownSelectorAttrs<boolean> = {\n\t\t\tlabel: \"defaultMailHandler_label\",\n\t\t\thelpLabel: () => lang.get(\"defaultMailHandler_msg\"),\n\t\t\titems: [\n\t\t\t\t{\n\t\t\t\t\tname: lang.get(\"unregistered_label\"),\n\t\t\t\t\tvalue: false,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: lang.get(\"registered_label\"),\n\t\t\t\t\tvalue: true,\n\t\t\t\t},\n\t\t\t],\n\t\t\tselectedValue: this.isDefaultMailtoHandler(),\n\t\t\tselectionChangedHandler: (v) => {\n\t\t\t\tshowProgressDialog(\"pleaseWait_msg\", this.updateDefaultMailtoHandler(v)).then(() => {\n\t\t\t\t\tthis.isDefaultMailtoHandler(v)\n\n\t\t\t\t\tm.redraw()\n\t\t\t\t})\n\t\t\t},\n\t\t}\n\t\tconst setRunInBackgroundAttrs: DropDownSelectorAttrs<boolean> = {\n\t\t\tlabel: \"runInBackground_action\",\n\t\t\thelpLabel: () => {\n\t\t\t\treturn ifAllowedTutaLinks(locator.logins, InfoLink.RunInBackground, (link) => [\n\t\t\t\t\tm(\"span\", lang.get(\"runInBackground_msg\") + \" \"),\n\t\t\t\t\tm(MoreInfoLink, { link: link }),\n\t\t\t\t])\n\t\t\t},\n\t\t\titems: [\n\t\t\t\t{\n\t\t\t\t\tname: lang.get(\"yes_label\"),\n\t\t\t\t\tvalue: true,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: lang.get(\"no_label\"),\n\t\t\t\t\tvalue: false,\n\t\t\t\t},\n\t\t\t],\n\t\t\tselectedValue: this.runAsTrayApp(),\n\t\t\tselectionChangedHandler: (v) => {\n\t\t\t\tthis.runAsTrayApp(v)\n\n\t\t\t\tthis.setBooleanValue(DesktopConfigKey.runAsTrayApp, v)\n\t\t\t},\n\t\t}\n\t\tconst setRunOnStartupAttrs: DropDownSelectorAttrs<boolean> = {\n\t\t\tlabel: \"runOnStartup_action\",\n\t\t\titems: [\n\t\t\t\t{\n\t\t\t\t\tname: lang.get(\"yes_label\"),\n\t\t\t\t\tvalue: true,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: lang.get(\"no_label\"),\n\t\t\t\t\tvalue: false,\n\t\t\t\t},\n\t\t\t],\n\t\t\tselectedValue: this.runOnStartup(),\n\t\t\tselectionChangedHandler: (v) => {\n\t\t\t\t// this may take a while\n\t\t\t\tshowProgressDialog(\"pleaseWait_msg\", this.toggleAutoLaunchInNative(v)).then(() => {\n\t\t\t\t\tthis.runOnStartup(v)\n\n\t\t\t\t\tm.redraw()\n\t\t\t\t})\n\t\t\t},\n\t\t}\n\t\tconst editSpellcheckLanguageButtonAttrs: IconButtonAttrs = {\n\t\t\ttitle: \"checkSpelling_action\",\n\t\t\tclick: () => showSpellcheckLanguageDialog().then((newLabel) => this.spellCheckLang(newLabel)),\n\t\t\ticon: Icons.Edit,\n\t\t\tsize: ButtonSize.Compact,\n\t\t}\n\t\tconst spellcheckLanguageAttrs: TextFieldAttrs = {\n\t\t\tlabel: \"checkSpelling_action\",\n\t\t\tvalue: this.spellCheckLang(),\n\t\t\toninput: this.spellCheckLang,\n\t\t\tisReadOnly: true,\n\t\t\tinjectionsRight: () => m(IconButton, editSpellcheckLanguageButtonAttrs),\n\t\t\thelpLabel: () => lang.get(\"requiresNewWindow_msg\"),\n\t\t}\n\t\tconst setDesktopIntegrationAttrs: DropDownSelectorAttrs<boolean> = {\n\t\t\tlabel: \"desktopIntegration_label\",\n\t\t\titems: [\n\t\t\t\t{\n\t\t\t\t\tname: lang.get(\"activated_label\"),\n\t\t\t\t\tvalue: true,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: lang.get(\"deactivated_label\"),\n\t\t\t\t\tvalue: false,\n\t\t\t\t},\n\t\t\t],\n\t\t\tselectedValue: this.isIntegrated(),\n\t\t\tselectionChangedHandler: (v) => {\n\t\t\t\tshowProgressDialog(\"pleaseWait_msg\", this.updateDesktopIntegration(v))\n\t\t\t\t\t.then(() => {\n\t\t\t\t\t\tthis.isIntegrated(v)\n\n\t\t\t\t\t\tm.redraw()\n\t\t\t\t\t})\n\t\t\t\t\t.catch((e) => Dialog.message(\"unknownError_msg\", e.message))\n\t\t\t},\n\t\t}\n\t\tconst setMailExportModeAttrs: DropDownSelectorAttrs<MailExportMode> = {\n\t\t\tlabel: \"mailExportMode_label\",\n\t\t\thelpLabel: () => lang.get(\"mailExportModeHelp_msg\"),\n\t\t\titems: [\n\t\t\t\t{\n\t\t\t\t\tname: \"EML\",\n\t\t\t\t\tvalue: \"eml\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"MSG (Outlook)\",\n\t\t\t\t\tvalue: \"msg\",\n\t\t\t\t},\n\t\t\t],\n\t\t\tselectedValue: this.mailExportMode(),\n\t\t\tselectionChangedHandler: (v) => {\n\t\t\t\tthis.mailExportMode(v)\n\n\t\t\t\tthis.setStringValue(DesktopConfigKey.mailExportMode, v)\n\t\t\t},\n\t\t}\n\t\tconst updateHelpLabelAttrs: UpdateHelpLabelAttrs = {\n\t\t\tupdateAvailable: this.updateAvailable,\n\t\t\tmanualUpdate: () => locator.desktopSettingsFacade.manualUpdate(),\n\t\t}\n\t\tconst setAutoUpdateAttrs: DropDownSelectorAttrs<boolean> = {\n\t\t\tlabel: \"autoUpdate_label\",\n\t\t\thelpLabel: () => m(DesktopUpdateHelpLabel, updateHelpLabelAttrs),\n\t\t\titems: [\n\t\t\t\t{\n\t\t\t\t\tname: lang.get(\"activated_label\"),\n\t\t\t\t\tvalue: true,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: lang.get(\"deactivated_label\"),\n\t\t\t\t\tvalue: false,\n\t\t\t\t},\n\t\t\t],\n\t\t\tselectedValue: this.isAutoUpdateEnabled(),\n\t\t\tselectionChangedHandler: (v) => {\n\t\t\t\tthis.isAutoUpdateEnabled(v)\n\n\t\t\t\tthis.setBooleanValue(DesktopConfigKey.enableAutoUpdate, v)\n\t\t\t},\n\t\t}\n\t\tconst changeDefaultDownloadPathAttrs: IconButtonAttrs = attachDropdown({\n\t\t\tmainButtonAttrs: {\n\t\t\t\ttitle: \"edit_action\",\n\t\t\t\ticon: Icons.Edit,\n\t\t\t\tsize: ButtonSize.Compact,\n\t\t\t},\n\t\t\tchildAttrs: () => [\n\t\t\t\t{\n\t\t\t\t\tlabel: \"alwaysAsk_action\",\n\t\t\t\t\tclick: () => this.setDefaultDownloadPath(DownloadLocationStrategy.ALWAYS_ASK),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: \"chooseDirectory_action\",\n\t\t\t\t\tclick: () => this.setDefaultDownloadPath(DownloadLocationStrategy.CHOOSE_DIRECTORY),\n\t\t\t\t},\n\t\t\t],\n\t\t\tshowDropdown: () => !this.isPathDialogOpen,\n\t\t\twidth: 200,\n\t\t})\n\t\tconst defaultDownloadPathAttrs: TextFieldAttrs = {\n\t\t\tlabel: \"defaultDownloadPath_label\",\n\t\t\tvalue: this.defaultDownloadPath(),\n\t\t\toninput: this.defaultDownloadPath,\n\t\t\tinjectionsRight: () => m(IconButton, changeDefaultDownloadPathAttrs),\n\t\t\tisReadOnly: true,\n\t\t}\n\n\t\treturn [\n\t\t\tm(\"#user-settings.fill-absolute.scroll.plr-l.pb-xl\", [\n\t\t\t\tm(\".h4.mt-l\", lang.get(\"desktopSettings_label\")),\n\t\t\t\t// spell check is done via OS on mac\n\t\t\t\tenv.platformId === \"darwin\" ? null : m(TextField, spellcheckLanguageAttrs),\n\t\t\t\t// setting protocol handler via Electron does not work on Linux\n\t\t\t\tenv.platformId === \"linux\" ? null : m(DropDownSelector, setDefaultMailtoHandlerAttrs),\n\t\t\t\t// mac doesn't really have run in background, you can just close a window\n\t\t\t\tenv.platformId === \"darwin\" ? null : m(DropDownSelector, setRunInBackgroundAttrs),\n\t\t\t\tm(DropDownSelector, setRunOnStartupAttrs),\n\t\t\t\tm(TextField, defaultDownloadPathAttrs),\n\t\t\t\tm(DropDownSelector, setMailExportModeAttrs),\n\t\t\t\t// AppImage is kind of a portable install so we optionally add desktop icons etc\n\t\t\t\tenv.platformId === \"linux\" ? m(DropDownSelector, setDesktopIntegrationAttrs) : null,\n\t\t\t\tthis.showAutoUpdateOption ? m(DropDownSelector, setAutoUpdateAttrs) : null,\n\t\t\t]),\n\t\t]\n\t}\n\n\tprivate toggleAutoLaunchInNative(enable: boolean): Promise<void> {\n\t\treturn enable ? locator.desktopSettingsFacade.enableAutoLaunch() : locator.desktopSettingsFacade.disableAutoLaunch()\n\t}\n\n\tprivate updateDefaultMailtoHandler(shouldBeDefaultMailtoHandler: boolean): Promise<void> {\n\t\treturn shouldBeDefaultMailtoHandler ? locator.desktopSettingsFacade.registerMailto() : locator.desktopSettingsFacade.unregisterMailto()\n\t}\n\n\tprivate updateDesktopIntegration(shouldIntegrate: boolean): Promise<void> {\n\t\treturn shouldIntegrate ? locator.desktopSettingsFacade.integrateDesktop() : locator.desktopSettingsFacade.unIntegrateDesktop()\n\t}\n\n\tprivate async requestDesktopConfig() {\n\t\tthis.defaultDownloadPath = stream(lang.get(\"alwaysAsk_action\"))\n\t\tconst [integrationInfo, defaultDownloadPath, runAsTrayApp, showAutoUpdateOption, enableAutoUpdate, mailExportMode, spellcheckLabel] = await Promise.all(\n\t\t\t[\n\t\t\t\tlocator.desktopSettingsFacade.getIntegrationInfo(),\n\t\t\t\tlocator.desktopSettingsFacade.getStringConfigValue(DesktopConfigKey.defaultDownloadPath),\n\t\t\t\tlocator.desktopSettingsFacade.getBooleanConfigValue(DesktopConfigKey.runAsTrayApp),\n\t\t\t\tlocator.desktopSettingsFacade.getBooleanConfigValue(DesktopConfigKey.showAutoUpdateOption),\n\t\t\t\tlocator.desktopSettingsFacade.getBooleanConfigValue(DesktopConfigKey.enableAutoUpdate),\n\t\t\t\tlocator.desktopSettingsFacade.getStringConfigValue(DesktopConfigKey.mailExportMode),\n\t\t\t\tgetCurrentSpellcheckLanguageLabel(),\n\t\t\t],\n\t\t)\n\t\tconst { isMailtoHandler, isAutoLaunchEnabled, isIntegrated, isUpdateAvailable } = integrationInfo\n\n\t\tthis.isDefaultMailtoHandler(isMailtoHandler)\n\n\t\tthis.defaultDownloadPath(defaultDownloadPath || lang.get(\"alwaysAsk_action\"))\n\n\t\tthis.runAsTrayApp(runAsTrayApp)\n\n\t\tthis.runOnStartup(isAutoLaunchEnabled)\n\n\t\tthis.isIntegrated(isIntegrated)\n\n\t\tthis.showAutoUpdateOption = showAutoUpdateOption\n\n\t\tthis.isAutoUpdateEnabled(enableAutoUpdate)\n\n\t\tthis.updateAvailable(isUpdateAvailable)\n\n\t\tthis.mailExportMode(mailExportMode as MailExportMode)\n\n\t\tthis.spellCheckLang(spellcheckLabel)\n\n\t\tm.redraw()\n\t}\n\n\tasync setBooleanValue(setting: DesktopConfigKey, value: boolean): Promise<void> {\n\t\tawait locator.desktopSettingsFacade.setBooleanConfigValue(setting, value)\n\t\tm.redraw()\n\t}\n\n\tasync setStringValue(setting: DesktopConfigKey, value: string | null): Promise<void> {\n\t\tawait locator.desktopSettingsFacade.setStringConfigValue(setting, value)\n\t\tm.redraw()\n\t}\n\n\tasync setDefaultDownloadPath(v: DownloadLocationStrategy): Promise<void> {\n\t\tthis.isPathDialogOpen = true\n\n\t\tlet savePath: string | null\n\t\tif (v === DownloadLocationStrategy.ALWAYS_ASK) {\n\t\t\tsavePath = null\n\t\t} else {\n\t\t\tsavePath = await locator.fileApp.openFolderChooser()\n\t\t}\n\n\t\tthis.defaultDownloadPath(savePath ?? lang.get(\"alwaysAsk_action\"))\n\n\t\tawait this.setStringValue(DesktopConfigKey.defaultDownloadPath, savePath)\n\t\tthis.isPathDialogOpen = false\n\t}\n\n\tonAppUpdateAvailable(): void {\n\t\tthis.updateAvailable(true)\n\n\t\tm.redraw()\n\t}\n\n\t// this is all local for now\n\tentityEventsReceived: () => Promise<void> = () => Promise.resolve()\n}\n"]}