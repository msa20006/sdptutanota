{"version":3,"file":"DesktopMailImportSettingsViewer.js","sourceRoot":"","sources":["../../../../src/mail-app/settings/DesktopMailImportSettingsViewer.ts"],"names":[],"mappings":"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","sourcesContent":["import { UpdatableSettingsViewer } from \"../../common/settings/Interfaces\"\nimport m, { Children } from \"mithril\"\nimport { EntityUpdateData } from \"../../common/api/common/utils/EntityUpdateUtils\"\nimport { IconButton, IconButtonAttrs } from \"../../common/gui/base/IconButton\"\nimport { ButtonSize } from \"../../common/gui/base/ButtonSize\"\nimport { assertNotNull, lazy } from \"@tutao/tutanota-utils\"\nimport { getFolderName, getIndentedFolderNameForDropdown, getPathToFolderString } from \"../mail/model/MailUtils\"\nimport { HighestTierPlans, ImportStatus, MailSetKind, PlanType } from \"../../common/api/common/TutanotaConstants\"\nimport { IndentedFolder } from \"../../common/api/common/mail/FolderSystem\"\nimport { lang, TranslationKey } from \"../../common/misc/LanguageViewModel\"\nimport { MailImporter, UiImportStatus } from \"../mail/import/MailImporter.js\"\nimport { MailFolder } from \"../../common/api/entities/tutanota/TypeRefs\"\nimport { elementIdPart, generatedIdToTimestamp, isSameId, sortCompareByReverseId } from \"../../common/api/common/utils/EntityUtils\"\nimport { Icons } from \"../../common/gui/base/icons/Icons.js\"\nimport { DropDownSelector, SelectorItemList } from \"../../common/gui/base/DropDownSelector.js\"\nimport { showNotAvailableForFreeDialog } from \"../../common/misc/SubscriptionDialogs.js\"\nimport { ProgressBar, ProgressBarType } from \"../../common/gui/base/ProgressBar.js\"\nimport { ExpanderButton, ExpanderPanel } from \"../../common/gui/base/Expander.js\"\nimport { ColumnWidth, Table, TableLineAttrs } from \"../../common/gui/base/Table.js\"\nimport { mailLocator } from \"../mailLocator.js\"\nimport { formatDate } from \"../../common/misc/Formatter.js\"\nimport { LoginButton, LoginButtonType } from \"../../common/gui/base/buttons/LoginButton\"\n\n/**\n * Settings viewer for mail import rendered only in the Desktop client.\n * See {@link WebMailImportSettingsViewer} for other views.\n */\nexport class DesktopMailImportSettingsViewer implements UpdatableSettingsViewer {\n\tprivate isImportHistoryExpanded: boolean = true\n\tprivate importStatePoolHandle: TimeoutID\n\n\tconstructor(private readonly mailImporter: lazy<MailImporter>) {}\n\n\tasync oninit(): Promise<void> {\n\t\tawait this.mailImporter().initImportMailStates()\n\t}\n\n\tonbeforeremove(): void {\n\t\tclearInterval(this.importStatePoolHandle)\n\t}\n\n\tview(): Children {\n\t\treturn m(\".fill-absolute.scroll.plr-l.pb-xl\", [\n\t\t\tm(\".h4.mt-l\", lang.get(\"mailImportSettings_label\")),\n\t\t\tthis.renderTargetFolderControls(),\n\t\t\t!this.mailImporter().shouldRenderImportStatus() ? this.renderStartNewImportControls() : null,\n\t\t\tthis.mailImporter().shouldRenderImportStatus() ? this.renderImportStatus() : null,\n\t\t\tthis.renderImportHistory(),\n\t\t])\n\t}\n\n\tprivate async onImportButtonClick(dom: HTMLElement) {\n\t\tconst currentPlanType = await mailLocator.logins.getUserController().getPlanType()\n\t\tconst isHighestTierPlan = HighestTierPlans.includes(currentPlanType)\n\t\tif (!isHighestTierPlan) {\n\t\t\tshowNotAvailableForFreeDialog([PlanType.Legend, PlanType.Unlimited]).then()\n\t\t\treturn\n\t\t}\n\n\t\tconst allowedExtensions = [\"eml\", \"mbox\"]\n\t\tconst filePaths = await mailLocator.fileApp.openFileChooser(dom.getBoundingClientRect(), allowedExtensions, true)\n\t\tawait this.mailImporter().onStartBtnClick(filePaths.map((fp) => fp.location))\n\t}\n\n\tprivate renderTargetFolderControls() {\n\t\tlet folders = this.mailImporter().foldersForMailbox\n\t\tif (folders) {\n\t\t\tconst loadingMsg = lang.get(\"loading_msg\")\n\t\t\tconst emptyLabel = m(\"br\")\n\t\t\tconst selectedTargetFolder = this.mailImporter().selectedTargetFolder\n\t\t\tconst selectedTargetFolderPath = selectedTargetFolder ? getPathToFolderString(folders!, selectedTargetFolder) : \"\"\n\t\t\tconst isNotSubfolder = selectedTargetFolder ? selectedTargetFolderPath == getFolderName(selectedTargetFolder) : false\n\t\t\tconst helpLabel = selectedTargetFolder ? (isNotSubfolder ? emptyLabel : selectedTargetFolderPath) : emptyLabel\n\n\t\t\t// do not allow importing to inbox folder,\n\t\t\t// problem:\n\t\t\t// if a folder receives/imports a very large amount of mails (hundreds of thousands) that all get moved/deleted at once,\n\t\t\t// the backend will not be able to read any live data from that list for a while.\n\t\t\t// if that happens, user will not see incoming mails in their inbox folder for that time,\n\t\t\t// this problem can still happen on other folders,\n\t\t\t// but at least we won't block inbox ( incoming new mails )\n\t\t\tconst selectableFolders = folders.getIndentedList().filter((folderInfo) => folderInfo.folder.folderType !== MailSetKind.INBOX)\n\n\t\t\tlet targetFolders: SelectorItemList<MailFolder | null> = selectableFolders.map((folderInfo: IndentedFolder) => {\n\t\t\t\treturn {\n\t\t\t\t\tname: getIndentedFolderNameForDropdown(folderInfo),\n\t\t\t\t\tvalue: folderInfo.folder,\n\t\t\t\t}\n\t\t\t})\n\t\t\treturn m(DropDownSelector, {\n\t\t\t\tlabel: \"mailImportTargetFolder_label\",\n\t\t\t\titems: targetFolders,\n\t\t\t\tdisabled: this.mailImporter().shouldRenderImportStatus(),\n\t\t\t\tselectedValue: selectedTargetFolder,\n\t\t\t\tselectedValueDisplay: selectedTargetFolder ? getFolderName(selectedTargetFolder) : loadingMsg,\n\t\t\t\tselectionChangedHandler: (newFolder: MailFolder | null) => (this.mailImporter().selectedTargetFolder = newFolder),\n\t\t\t\thelpLabel: () => helpLabel,\n\t\t\t})\n\t\t} else {\n\t\t\treturn null\n\t\t}\n\t}\n\n\tprivate renderStartNewImportControls() {\n\t\treturn [\n\t\t\tm(\".flex-start.mt-m\", this.renderImportInfoText()),\n\t\t\tm(\n\t\t\t\t\".flex-start.mt-s\",\n\t\t\t\tm(LoginButton, {\n\t\t\t\t\ttype: LoginButtonType.FlexWidth,\n\t\t\t\t\tlabel: \"import_action\",\n\t\t\t\t\tonclick: (_, dom) => this.onImportButtonClick(dom),\n\t\t\t\t}),\n\t\t\t),\n\t\t]\n\t}\n\n\tprivate renderImportInfoText() {\n\t\treturn [m(\".small\", lang.get(\"mailImportInfoText_label\"))]\n\t}\n\n\tprivate renderImportStatus() {\n\t\tconst processedMailsCountLabel = m(\n\t\t\t\".flex-start.p.small\",\n\t\t\tlang.get(\"mailImportStateProcessedMailsTotalMails_label\", {\n\t\t\t\t\"{processedMails}\": this.mailImporter().getProcessedMailsCount(),\n\t\t\t\t\"{totalMails}\": this.mailImporter().getTotalMailsCount(),\n\t\t\t}),\n\t\t)\n\t\tconst resumeMailImportIconButtonAttrs: IconButtonAttrs = {\n\t\t\ttitle: \"resumeMailImport_action\",\n\t\t\ticon: Icons.Play,\n\t\t\tclick: () => this.mailImporter().onResumeBtnClick(),\n\t\t\tsize: ButtonSize.Normal,\n\t\t\tdisabled: this.mailImporter().shouldDisableResumeButton(),\n\t\t}\n\t\tconst pauseMailImportIconButtonAttrs: IconButtonAttrs = {\n\t\t\ttitle: \"pauseMailImport_action\",\n\t\t\ticon: Icons.Pause,\n\t\t\tclick: () => {\n\t\t\t\tthis.mailImporter().onPauseBtnClick()\n\t\t\t},\n\t\t\tsize: ButtonSize.Normal,\n\t\t\tdisabled: this.mailImporter().shouldDisablePauseButton(),\n\t\t}\n\t\tconst cancelMailImportIconButtonAttrs: IconButtonAttrs = {\n\t\t\ttitle: \"cancelMailImport_action\",\n\t\t\ticon: Icons.Cancel,\n\t\t\tclick: () => {\n\t\t\t\tthis.mailImporter().onCancelBtnClick()\n\t\t\t},\n\t\t\tsize: ButtonSize.Normal,\n\t\t\tdisabled: this.mailImporter().shouldDisableCancelButton(),\n\t\t}\n\n\t\tlet buttonControls = []\n\t\tif (this.mailImporter().shouldRenderPauseButton()) {\n\t\t\tbuttonControls.push(m(IconButton, pauseMailImportIconButtonAttrs))\n\t\t}\n\t\tif (this.mailImporter().shouldRenderResumeButton()) {\n\t\t\tbuttonControls.push(m(IconButton, resumeMailImportIconButtonAttrs))\n\t\t}\n\t\tif (this.mailImporter().shouldRenderCancelButton()) {\n\t\t\tbuttonControls.push(m(IconButton, cancelMailImportIconButtonAttrs))\n\t\t}\n\n\t\treturn [\n\t\t\t[\n\t\t\t\tm(\n\t\t\t\t\t\".flex-space-between.p.small.mt-m\",\n\t\t\t\t\tgetReadableUiImportStatus(assertNotNull(this.mailImporter().getUiStatus())),\n\t\t\t\t\tthis.mailImporter().shouldRenderProcessedMails() ? processedMailsCountLabel : null,\n\t\t\t\t),\n\t\t\t],\n\t\t\t[m(\".flex-space-between.border-radius-big.mt-s.rel.nav-bg.full-width\", this.renderMailImportProgressBar(), ...buttonControls)],\n\t\t]\n\t}\n\n\tprivate renderMailImportProgressBar() {\n\t\t// the ProgressBar uses progress values 0 ... 1\n\t\treturn m(\n\t\t\t\".rel.border-radius-big.full-width\",\n\t\t\tm(ProgressBar, {\n\t\t\t\tprogress: this.mailImporter().getProgress() / 100,\n\t\t\t\ttype: ProgressBarType.Large,\n\t\t\t}),\n\t\t)\n\t}\n\n\tprivate renderImportHistory() {\n\t\treturn [\n\t\t\tm(\".flex-space-between.items-center.mt-l.mb-s\", [\n\t\t\t\tm(\".h4\", lang.get(\"mailImportHistory_label\")),\n\t\t\t\tm(ExpanderButton, {\n\t\t\t\t\tlabel: \"show_action\",\n\t\t\t\t\texpanded: this.isImportHistoryExpanded,\n\t\t\t\t\tonExpandedChange: () => {\n\t\t\t\t\t\tthis.isImportHistoryExpanded = !this.isImportHistoryExpanded\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t]),\n\t\t\tm(\n\t\t\t\tExpanderPanel,\n\t\t\t\t{\n\t\t\t\t\texpanded: this.isImportHistoryExpanded,\n\t\t\t\t},\n\t\t\t\tm(Table, {\n\t\t\t\t\tcolumnHeading: [\"mailImportHistoryTableHeading_label\"],\n\t\t\t\t\tcolumnWidths: [ColumnWidth.Small, ColumnWidth.Largest],\n\t\t\t\t\tshowActionButtonColumn: true,\n\t\t\t\t\tlines: this.makeMailImportHistoryTableLines(),\n\t\t\t\t}),\n\t\t\t),\n\t\t]\n\t}\n\n\t/**\n\t * Parses the importMailStates into displayable table lines.\n\t * @returns array of the parsed table lines.\n\t */\n\tprivate makeMailImportHistoryTableLines(): Array<TableLineAttrs> {\n\t\tlet folders = this.mailImporter().foldersForMailbox?.getIndentedList()\n\t\tif (folders) {\n\t\t\treturn this.mailImporter()\n\t\t\t\t.getFinalisedImports()\n\t\t\t\t.sort(sortCompareByReverseId)\n\t\t\t\t.map((im) => {\n\t\t\t\t\tconst targetFolderId = im.targetFolder\n\t\t\t\t\tconst displayTargetFolder = folders!.find((f) => isSameId(f.folder._id, targetFolderId))\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tcells: () => [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tmain: lang.get(\"mailImportHistoryTableRowTitle_label\", {\n\t\t\t\t\t\t\t\t\t\"{status}\": getReadableImportStatus(parseInt(im.status) as ImportStatus),\n\t\t\t\t\t\t\t\t\t\"{folder}\": displayTargetFolder\n\t\t\t\t\t\t\t\t\t\t? getFolderName(displayTargetFolder.folder)\n\t\t\t\t\t\t\t\t\t\t: lang.get(\"mailImportHistoryTableRowFolderDeleted_label\"),\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\tinfo: [\n\t\t\t\t\t\t\t\t\tlang.get(\"mailImportHistoryTableRowSubtitle_label\", {\n\t\t\t\t\t\t\t\t\t\t\"{date}\": formatDate(new Date(generatedIdToTimestamp(elementIdPart(im._id)))),\n\t\t\t\t\t\t\t\t\t\t\"{successfulMails}\": im.successfulMails,\n\t\t\t\t\t\t\t\t\t\t\"{failedMails}\": im.failedMails,\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t} else {\n\t\t\treturn []\n\t\t}\n\t}\n\n\tasync entityEventsReceived(updates: ReadonlyArray<EntityUpdateData>): Promise<void> {}\n}\n\nexport function getReadableUiImportStatus(uiStatus: UiImportStatus): string {\n\treturn lang.get(getUiImportStatusTranslationKey(uiStatus))\n}\n\nexport function getUiImportStatusTranslationKey(uiStatus: UiImportStatus): TranslationKey {\n\tswitch (uiStatus) {\n\t\tcase UiImportStatus.Starting:\n\t\t\treturn \"mailImportStatusStarting_label\"\n\t\tcase UiImportStatus.Resuming:\n\t\t\treturn \"mailImportStatusResuming_label\"\n\t\tcase UiImportStatus.Running:\n\t\t\treturn \"mailImportStatusRunning_label\"\n\t\tcase UiImportStatus.Pausing:\n\t\t\treturn \"mailImportStatusPausing_label\"\n\t\tcase UiImportStatus.Paused:\n\t\t\treturn \"mailImportStatusPaused_label\"\n\t\tcase UiImportStatus.Cancelling:\n\t\t\treturn \"mailImportStatusCancelling_label\"\n\t}\n}\n\nexport function getReadableImportStatus(importStatus: ImportStatus): string {\n\treturn lang.get(getImportStatusTranslationKey(importStatus))\n}\n\nexport function getImportStatusTranslationKey(importStatus: ImportStatus): TranslationKey {\n\tswitch (importStatus) {\n\t\tcase ImportStatus.Running:\n\t\t\treturn \"mailImportStatusRunning_label\"\n\t\tcase ImportStatus.Paused:\n\t\t\treturn \"mailImportStatusPaused_label\"\n\t\tcase ImportStatus.Canceled:\n\t\t\treturn \"mailImportStatusCanceled_label\"\n\t\tcase ImportStatus.Finished:\n\t\t\treturn \"mailImportStatusFinished_label\"\n\t}\n}\n"]}