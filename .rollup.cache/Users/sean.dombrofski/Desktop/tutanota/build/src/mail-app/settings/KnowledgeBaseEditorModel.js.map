{"version":3,"file":"KnowledgeBaseEditorModel.js","sourceRoot":"","sources":["../../../../src/mail-app/settings/KnowledgeBaseEditorModel.ts"],"names":[],"mappings":"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","sourcesContent":["import type { EmailTemplate } from \"../../common/api/entities/tutanota/TypeRefs.js\"\nimport { EmailTemplateTypeRef } from \"../../common/api/entities/tutanota/TypeRefs.js\"\nimport { EntityClient } from \"../../common/api/common/EntityClient\"\nimport type { TemplateGroupRoot } from \"../../common/api/entities/tutanota/TypeRefs.js\"\nimport type { KnowledgeBaseEntry } from \"../../common/api/entities/tutanota/TypeRefs.js\"\nimport { createKnowledgeBaseEntry } from \"../../common/api/entities/tutanota/TypeRefs.js\"\nimport { clone, deduplicate, LazyLoaded, localeCompare, noOp, ofClass } from \"@tutao/tutanota-utils\"\nimport stream from \"mithril/stream\"\nimport Stream from \"mithril/stream\"\nimport { NotFoundError } from \"../../common/api/common/error/RestError\"\nimport { UserError } from \"../../common/api/main/UserError\"\nimport type { KnowledgeBaseEntryKeyword } from \"../../common/api/entities/tutanota/TypeRefs.js\"\nimport { createKnowledgeBaseEntryKeyword } from \"../../common/api/entities/tutanota/TypeRefs.js\"\n\nexport class KnowledgeBaseEditorModel {\n\ttitle: Stream<string>\n\tkeywords: Stream<string>\n\tprivate readonly _entityClient: EntityClient\n\tprivate readonly _templateGroupRoot: TemplateGroupRoot\n\treadonly entry: KnowledgeBaseEntry\n\treadonly availableTemplates: LazyLoaded<Array<EmailTemplate>>\n\tprivate _descriptionProvider: (() => string) | null\n\n\tconstructor(entry: KnowledgeBaseEntry | null, templateGroupInstances: TemplateGroupRoot, entityClient: EntityClient) {\n\t\tthis.title = stream(entry ? entry.title : \"\")\n\t\tthis.keywords = stream(entry ? keywordsToString(entry.keywords) : \"\")\n\t\tthis._entityClient = entityClient\n\t\tthis._templateGroupRoot = templateGroupInstances\n\t\tthis.entry = entry ? clone(entry) : createKnowledgeBaseEntry({ description: \"\", title: \"\", keywords: [] })\n\t\tthis._descriptionProvider = null\n\t\tthis.availableTemplates = new LazyLoaded(() => {\n\t\t\treturn this._entityClient.loadAll(EmailTemplateTypeRef, this._templateGroupRoot.templates)\n\t\t}, [])\n\t}\n\n\tisUpdate(): boolean {\n\t\treturn this.entry._id != null\n\t}\n\n\tsave(): Promise<any> {\n\t\tif (!this.title()) {\n\t\t\treturn Promise.reject(new UserError(\"emptyTitle_msg\"))\n\t\t}\n\n\t\tthis.entry.title = this.title()\n\t\tthis.entry.keywords = stringToKeywords(this.keywords())\n\n\t\tif (this._descriptionProvider) {\n\t\t\tthis.entry.description = this._descriptionProvider()\n\t\t}\n\n\t\tif (this.entry._id) {\n\t\t\treturn this._entityClient.update(this.entry).catch(ofClass(NotFoundError, noOp))\n\t\t} else {\n\t\t\tthis.entry._ownerGroup = this._templateGroupRoot._id\n\t\t\treturn this._entityClient.setup(this._templateGroupRoot.knowledgeBase, this.entry)\n\t\t}\n\t}\n\n\tsetDescriptionProvider(provider: () => string) {\n\t\tthis._descriptionProvider = provider\n\t}\n}\n\n/**\n * get keywords as a space separated string\n * @param keywords\n */\nfunction keywordsToString(keywords: Array<KnowledgeBaseEntryKeyword>): string {\n\treturn keywords.map((keyword) => keyword.keyword).join(\" \")\n}\n\nfunction stringToKeywords(keywords: string): Array<KnowledgeBaseEntryKeyword> {\n\treturn deduplicate(keywords.split(\" \").filter(Boolean))\n\t\t.sort(localeCompare)\n\t\t.map((keyword) =>\n\t\t\tcreateKnowledgeBaseEntryKeyword({\n\t\t\t\tkeyword,\n\t\t\t}),\n\t\t)\n}\n"]}