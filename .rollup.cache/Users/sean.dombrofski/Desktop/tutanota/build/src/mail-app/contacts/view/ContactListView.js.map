{"version":3,"file":"ContactListView.js","sourceRoot":"","sources":["../../../../../src/mail-app/contacts/view/ContactListView.ts"],"names":[],"mappings":"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","sourcesContent":["import m, { Children, ClassComponent, Vnode } from \"mithril\"\nimport type { Contact } from \"../../../common/api/entities/tutanota/TypeRefs.js\"\nimport { size } from \"../../../common/gui/size\"\nimport { ListColumnWrapper } from \"../../../common/gui/ListColumnWrapper\"\nimport { assertMainOrNode } from \"../../../common/api/common/Env\"\nimport { List, ListAttrs, MultiselectMode, RenderConfig, ViewHolder } from \"../../../common/gui/base/List.js\"\nimport { ContactRow } from \"./ContactRow.js\"\nimport { ContactViewModel } from \"./ContactViewModel.js\"\nimport ColumnEmptyMessageBox from \"../../../common/gui/base/ColumnEmptyMessageBox.js\"\nimport { theme } from \"../../../common/gui/theme.js\"\nimport { BootIcons } from \"../../../common/gui/base/icons/BootIcons.js\"\nimport { styles } from \"../../../common/gui/styles.js\"\nimport { shouldAlwaysShowMultiselectCheckbox } from \"../../../common/gui/SelectableRowContainer.js\"\n\nassertMainOrNode()\n\nexport interface ContactListViewAttrs {\n\tonSingleSelection: () => unknown\n\tcontactViewModel: ContactViewModel\n}\n\nexport class ContactListView implements ClassComponent<ContactListViewAttrs> {\n\tprivate contactViewModel: ContactViewModel | null = null\n\n\tview({ attrs: { contactViewModel, onSingleSelection } }: Vnode<ContactListViewAttrs>): Children {\n\t\tthis.contactViewModel = contactViewModel\n\t\treturn m(\n\t\t\tListColumnWrapper,\n\t\t\t{\n\t\t\t\theaderContent: null,\n\t\t\t},\n\t\t\tcontactViewModel.listModel.isEmptyAndDone()\n\t\t\t\t? m(ColumnEmptyMessageBox, {\n\t\t\t\t\t\tcolor: theme.list_message_bg,\n\t\t\t\t\t\tmessage: \"noContacts_msg\",\n\t\t\t\t\t\ticon: BootIcons.Contacts,\n\t\t\t\t  })\n\t\t\t\t: m(List, {\n\t\t\t\t\t\trenderConfig: this.renderConfig,\n\t\t\t\t\t\tstate: contactViewModel.listState(),\n\t\t\t\t\t\t// should not be called anyway\n\t\t\t\t\t\tonLoadMore: () => {},\n\t\t\t\t\t\tonRetryLoading: () => {\n\t\t\t\t\t\t\tcontactViewModel.listModel.retryLoading()\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonSingleSelection: (item: Contact) => {\n\t\t\t\t\t\t\tcontactViewModel.listModel.onSingleSelection(item)\n\t\t\t\t\t\t\tonSingleSelection()\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonSingleTogglingMultiselection: (item: Contact) => {\n\t\t\t\t\t\t\tcontactViewModel.listModel.onSingleInclusiveSelection(item, styles.isSingleColumnLayout())\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonRangeSelectionTowards: (item: Contact) => {\n\t\t\t\t\t\t\tcontactViewModel.listModel.selectRangeTowards(item)\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonStopLoading() {\n\t\t\t\t\t\t\tcontactViewModel.listModel.stopLoading()\n\t\t\t\t\t\t},\n\t\t\t\t  } satisfies ListAttrs<Contact, KindaContactRow>),\n\t\t)\n\t}\n\n\tprivate readonly renderConfig: RenderConfig<Contact, KindaContactRow> = {\n\t\titemHeight: size.list_row_height,\n\t\tmultiselectionAllowed: MultiselectMode.Enabled,\n\t\tswipe: null,\n\t\tcreateElement: (dom) => {\n\t\t\treturn new KindaContactRow(dom, (item) => this.contactViewModel?.listModel.onSingleExclusiveSelection(item))\n\t\t},\n\t}\n}\n\nexport class KindaContactRow implements ViewHolder<Contact> {\n\treadonly cr: ContactRow\n\tdomElement: HTMLElement\n\tentity: Contact | null = null\n\n\tconstructor(\n\t\tdom: HTMLElement,\n\t\tonToggleSelection: (item: Contact) => unknown,\n\t\tshouldShowCheckbox: () => boolean = () => shouldAlwaysShowMultiselectCheckbox(),\n\t) {\n\t\tthis.cr = new ContactRow(onToggleSelection, shouldShowCheckbox)\n\t\tthis.domElement = dom\n\t\tm.render(dom, this.cr.render())\n\t}\n\n\tupdate(item: Contact, selected: boolean, multiselect: boolean) {\n\t\tthis.entity = item\n\t\tthis.cr.update(item, selected, multiselect)\n\t}\n\n\trender(): Children {\n\t\treturn this.cr.render()\n\t}\n}\n"]}