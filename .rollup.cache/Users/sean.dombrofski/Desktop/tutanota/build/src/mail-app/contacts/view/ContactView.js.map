{"version":3,"file":"ContactView.js","sourceRoot":"","sources":["../../../../../src/mail-app/contacts/view/ContactView.ts"],"names":[],"mappings":"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","sourcesContent":["import m, { Children, Vnode } from \"mithril\"\nimport { ViewSlider } from \"../../../common/gui/nav/ViewSlider.js\"\nimport { ColumnType, ViewColumn } from \"../../../common/gui/base/ViewColumn\"\nimport { AppHeaderAttrs, Header } from \"../../../common/gui/Header.js\"\nimport { Button, ButtonColor, ButtonType } from \"../../../common/gui/base/Button.js\"\nimport { ContactEditor } from \"../ContactEditor\"\nimport { Contact, ContactTypeRef } from \"../../../common/api/entities/tutanota/TypeRefs.js\"\nimport { ContactListView } from \"./ContactListView\"\nimport { lang, TranslationKey } from \"../../../common/misc/LanguageViewModel\"\nimport { assertNotNull, clear, getFirstOrThrow, noOp, ofClass } from \"@tutao/tutanota-utils\"\nimport { ContactMergeAction, Keys } from \"../../../common/api/common/TutanotaConstants\"\nimport { assertMainOrNode, isApp } from \"../../../common/api/common/Env\"\nimport type { Shortcut } from \"../../../common/misc/KeyManager\"\nimport { keyManager } from \"../../../common/misc/KeyManager\"\nimport { Icons } from \"../../../common/gui/base/icons/Icons\"\nimport { Dialog } from \"../../../common/gui/base/Dialog\"\nimport { LockedError, NotFoundError } from \"../../../common/api/common/error/RestError\"\nimport { getContactSelectionMessage, MultiContactViewer } from \"./MultiContactViewer\"\nimport { BootIcons } from \"../../../common/gui/base/icons/BootIcons\"\nimport { showProgressDialog } from \"../../../common/gui/dialogs/ProgressDialog\"\nimport { locator } from \"../../../common/api/main/CommonLocator\"\nimport { ContactMergeView } from \"./ContactMergeView\"\nimport { getMergeableContacts, mergeContacts } from \"../ContactMergeUtils\"\nimport { exportContacts } from \"../VCardExporter\"\nimport { NavButtonAttrs } from \"../../../common/gui/base/NavButton.js\"\nimport { styles } from \"../../../common/gui/styles\"\nimport { size } from \"../../../common/gui/size\"\nimport { FolderColumnView } from \"../../../common/gui/FolderColumnView.js\"\nimport { getGroupInfoDisplayName } from \"../../../common/api/common/utils/GroupUtils\"\nimport { SidebarSection } from \"../../../common/gui/SidebarSection\"\nimport { attachDropdown, createDropdown, DropdownButtonAttrs } from \"../../../common/gui/base/Dropdown.js\"\nimport { IconButton, IconButtonAttrs } from \"../../../common/gui/base/IconButton.js\"\nimport { ButtonSize } from \"../../../common/gui/base/ButtonSize.js\"\nimport { DrawerMenuAttrs } from \"../../../common/gui/nav/DrawerMenu.js\"\nimport { BaseTopLevelView } from \"../../../common/gui/BaseTopLevelView.js\"\nimport { TopLevelAttrs, TopLevelView } from \"../../../TopLevelView.js\"\nimport { ContactCardViewer } from \"./ContactCardViewer.js\"\nimport { MobileActionBar } from \"../../../common/gui/MobileActionBar.js\"\nimport { appendEmailSignature } from \"../../mail/signature/Signature.js\"\nimport { PartialRecipient } from \"../../../common/api/common/recipients/Recipient.js\"\nimport { newMailEditorFromTemplate } from \"../../mail/editor/MailEditor.js\"\nimport { BackgroundColumnLayout } from \"../../../common/gui/BackgroundColumnLayout.js\"\nimport { theme } from \"../../../common/gui/theme.js\"\nimport { DesktopListToolbar, DesktopViewerToolbar } from \"../../../common/gui/DesktopToolbars.js\"\nimport { SelectAllCheckbox } from \"../../../common/gui/SelectAllCheckbox.js\"\nimport { ContactViewerActions } from \"./ContactViewerActions.js\"\nimport { MobileBottomActionBar } from \"../../../common/gui/MobileBottomActionBar.js\"\nimport { exportAsVCard, importAsVCard } from \"./ImportAsVCard.js\"\nimport { MobileHeader } from \"../../../common/gui/MobileHeader.js\"\nimport { LazySearchBar } from \"../../LazySearchBar.js\"\nimport { MultiselectMobileHeader } from \"../../../common/gui/MultiselectMobileHeader.js\"\nimport { MultiselectMode } from \"../../../common/gui/base/List.js\"\nimport { EnterMultiselectIconButton } from \"../../../common/gui/EnterMultiselectIconButton.js\"\nimport { selectionAttrsForList } from \"../../../common/misc/ListModel.js\"\nimport { ContactViewModel } from \"./ContactViewModel.js\"\nimport { listSelectionKeyboardShortcuts } from \"../../../common/gui/base/ListUtils.js\"\nimport { ContactListViewModel } from \"./ContactListViewModel.js\"\nimport { ContactListRecipientView } from \"./ContactListRecipientView.js\"\nimport { showContactListEditor, showContactListNameEditor } from \"../ContactListEditor.js\"\nimport { ContactListEntryViewer, getContactListEntriesSelectionMessage } from \"./ContactListEntryViewer.js\"\nimport { showPlanUpgradeRequiredDialog } from \"../../../common/misc/SubscriptionDialogs.js\"\nimport ColumnEmptyMessageBox from \"../../../common/gui/base/ColumnEmptyMessageBox.js\"\nimport { ContactListInfo } from \"../../../common/contactsFunctionality/ContactModel.js\"\nimport { CONTACTLIST_PREFIX } from \"../../../common/misc/RouteChange.js\"\nimport { mailLocator } from \"../../mailLocator.js\"\nimport { BottomNav } from \"../../gui/BottomNav.js\"\nimport { SidebarSectionRow, SidebarSectionRowAttrs } from \"../../../common/gui/base/SidebarSectionRow\"\nimport { client } from \"../../../common/misc/ClientDetector\"\n\nassertMainOrNode()\n\nexport interface ContactViewAttrs extends TopLevelAttrs {\n\tdrawerAttrs: DrawerMenuAttrs\n\theader: AppHeaderAttrs\n\tcontactViewModel: ContactViewModel\n\tcontactListViewModel: ContactListViewModel\n}\n\nexport class ContactView extends BaseTopLevelView implements TopLevelView<ContactViewAttrs> {\n\tprivate listColumn: ViewColumn\n\tprivate folderColumn: ViewColumn\n\tprivate viewSlider: ViewSlider\n\tprivate contactViewModel: ContactViewModel\n\tprivate contactListViewModel: ContactListViewModel\n\tprivate detailsColumn: ViewColumn\n\tprivate invitationRows: Children\n\n\toncreate: TopLevelView[\"oncreate\"]\n\tonremove: TopLevelView[\"onremove\"]\n\n\tconstructor(vnode: Vnode<ContactViewAttrs>) {\n\t\tsuper()\n\t\tthis.contactViewModel = vnode.attrs.contactViewModel\n\t\tthis.contactListViewModel = vnode.attrs.contactListViewModel\n\t\t// safe to call multiple times but we need to do it early to load the contact list groups\n\t\tthis.contactListViewModel.init()\n\n\t\tthis.folderColumn = new ViewColumn(\n\t\t\t{\n\t\t\t\tview: () =>\n\t\t\t\t\tm(FolderColumnView, {\n\t\t\t\t\t\tdrawer: vnode.attrs.drawerAttrs,\n\t\t\t\t\t\tbutton: styles.isUsingBottomNavigation()\n\t\t\t\t\t\t\t? null\n\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\tlabel: \"newContact_action\",\n\t\t\t\t\t\t\t\t\tclick: () => this.createNewContact(),\n\t\t\t\t\t\t\t  },\n\t\t\t\t\t\tcontent: [\n\t\t\t\t\t\t\tm(\n\t\t\t\t\t\t\t\tSidebarSection,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: lang.makeTranslation(\"group_info\", getGroupInfoDisplayName(locator.logins.getUserController().userGroupInfo)),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tthis.renderSidebarElements(),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t],\n\t\t\t\t\t\tariaLabel: \"folderTitle_label\",\n\t\t\t\t\t}),\n\t\t\t},\n\t\t\tColumnType.Foreground,\n\t\t\t{\n\t\t\t\tminWidth: size.first_col_min_width,\n\t\t\t\tmaxWidth: size.first_col_max_width,\n\t\t\t\theaderCenter: \"folderTitle_label\",\n\t\t\t},\n\t\t)\n\n\t\tthis.listColumn = new ViewColumn(\n\t\t\t{\n\t\t\t\tview: () =>\n\t\t\t\t\tthis.inContactListView() ? this.renderContactListRecipientColumn(vnode.attrs.header) : this.renderContactListColumn(vnode.attrs.header),\n\t\t\t},\n\t\t\tColumnType.Background,\n\t\t\t{\n\t\t\t\tminWidth: size.second_col_min_width,\n\t\t\t\tmaxWidth: size.second_col_max_width,\n\t\t\t\theaderCenter: this.getHeaderLabel(),\n\t\t\t},\n\t\t)\n\n\t\tthis.detailsColumn = new ViewColumn(\n\t\t\t{\n\t\t\t\tview: () =>\n\t\t\t\t\tm(BackgroundColumnLayout, {\n\t\t\t\t\t\tbackgroundColor: theme.navigation_bg,\n\t\t\t\t\t\tdesktopToolbar: () => m(DesktopViewerToolbar, this.detailsViewerActions()),\n\t\t\t\t\t\tmobileHeader: () =>\n\t\t\t\t\t\t\tm(MobileHeader, {\n\t\t\t\t\t\t\t\t...vnode.attrs.header,\n\t\t\t\t\t\t\t\tbackAction: () => this.viewSlider.focusPreviousColumn(),\n\t\t\t\t\t\t\t\tactions: null,\n\t\t\t\t\t\t\t\tmulticolumnActions: () => this.detailsViewerActions(),\n\t\t\t\t\t\t\t\tprimaryAction: () => {\n\t\t\t\t\t\t\t\t\treturn this.inContactListView() ? null : this.renderHeaderRightView()\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\ttitle: this.getHeaderLabel(),\n\t\t\t\t\t\t\t\tcolumnType: \"other\",\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\tcolumnLayout:\n\t\t\t\t\t\t\t// see comment for .scrollbar-gutter-stable-or-fallback\n\t\t\t\t\t\t\tm(\".fill-absolute.flex.col.overflow-y-scroll\", this.renderDetailsViewer()),\n\t\t\t\t\t}),\n\t\t\t},\n\t\t\tColumnType.Background,\n\t\t\t{\n\t\t\t\tminWidth: size.third_col_min_width,\n\t\t\t\tmaxWidth: size.third_col_max_width,\n\t\t\t\tariaLabel: () => this.getHeaderLabel(),\n\t\t\t},\n\t\t)\n\n\t\tthis.viewSlider = new ViewSlider([this.folderColumn, this.listColumn, this.detailsColumn])\n\n\t\tconst shortcuts = this.getShortcuts()\n\t\tthis.oncreate = (vnode) => {\n\t\t\tkeyManager.registerShortcuts(shortcuts)\n\t\t}\n\n\t\tthis.onremove = () => {\n\t\t\tkeyManager.unregisterShortcuts(shortcuts)\n\t\t}\n\t}\n\n\tprivate renderContactListColumn(header: AppHeaderAttrs) {\n\t\treturn m(BackgroundColumnLayout, {\n\t\t\tbackgroundColor: theme.navigation_bg,\n\t\t\tcolumnLayout: m(ContactListView, {\n\t\t\t\tcontactViewModel: this.contactViewModel,\n\t\t\t\tonSingleSelection: () => {\n\t\t\t\t\tthis.viewSlider.focus(this.detailsColumn)\n\t\t\t\t},\n\t\t\t}),\n\t\t\tdesktopToolbar: () => this.renderListToolbar(),\n\t\t\tmobileHeader: () =>\n\t\t\t\tthis.contactViewModel.listModel.state.inMultiselect\n\t\t\t\t\t? m(MultiselectMobileHeader, {\n\t\t\t\t\t\t\t...selectionAttrsForList(this.contactViewModel.listModel),\n\t\t\t\t\t\t\tmessage: getContactSelectionMessage(this.getSelectedContacts().length),\n\t\t\t\t\t  })\n\t\t\t\t\t: m(MobileHeader, {\n\t\t\t\t\t\t\t...header,\n\t\t\t\t\t\t\tbackAction: () => this.viewSlider.focusPreviousColumn(),\n\t\t\t\t\t\t\tcolumnType: \"first\",\n\t\t\t\t\t\t\ttitle: this.listColumn.getTitle(),\n\t\t\t\t\t\t\tactions: m(\".flex\", [\n\t\t\t\t\t\t\t\tthis.renderSortByButton(),\n\t\t\t\t\t\t\t\tm(EnterMultiselectIconButton, {\n\t\t\t\t\t\t\t\t\tclickAction: () => {\n\t\t\t\t\t\t\t\t\t\tthis.contactViewModel.listModel.enterMultiselect()\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\tprimaryAction: () => this.renderHeaderRightView(),\n\t\t\t\t\t  }),\n\t\t})\n\t}\n\n\tprivate renderContactListRecipientColumn(header: AppHeaderAttrs) {\n\t\treturn m(BackgroundColumnLayout, {\n\t\t\tbackgroundColor: theme.navigation_bg,\n\t\t\tcolumnLayout: m(ContactListRecipientView, {\n\t\t\t\tviewModel: this.contactListViewModel,\n\t\t\t\tfocusDetailsViewer: () => {\n\t\t\t\t\tthis.viewSlider.focus(this.detailsColumn)\n\t\t\t\t},\n\t\t\t}),\n\t\t\tdesktopToolbar: () => this.renderListToolbar(),\n\t\t\tmobileHeader: () =>\n\t\t\t\tthis.contactListViewModel.listModel?.state.inMultiselect\n\t\t\t\t\t? m(MultiselectMobileHeader, {\n\t\t\t\t\t\t\t...selectionAttrsForList(this.contactListViewModel.listModel),\n\t\t\t\t\t\t\tmessage: getContactSelectionMessage(this.contactListViewModel.listModel?.getSelectedAsArray().length),\n\t\t\t\t\t  })\n\t\t\t\t\t: m(MobileHeader, {\n\t\t\t\t\t\t\t...header,\n\t\t\t\t\t\t\tbackAction: () => this.viewSlider.focusPreviousColumn(),\n\t\t\t\t\t\t\tcolumnType: \"first\",\n\t\t\t\t\t\t\ttitle: this.listColumn.getTitle(),\n\t\t\t\t\t\t\tactions: m(\".flex\", [\n\t\t\t\t\t\t\t\tm(EnterMultiselectIconButton, {\n\t\t\t\t\t\t\t\t\tclickAction: () => {\n\t\t\t\t\t\t\t\t\t\tthis.contactListViewModel.listModel?.enterMultiselect()\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\tprimaryAction: () => {\n\t\t\t\t\t\t\t\tif (this.canEditSelectedContactList()) {\n\t\t\t\t\t\t\t\t\treturn m(IconButton, {\n\t\t\t\t\t\t\t\t\t\ttitle: \"addEntries_action\",\n\t\t\t\t\t\t\t\t\t\tclick: () => this.addAddressesToContactList(),\n\t\t\t\t\t\t\t\t\t\ticon: Icons.Add,\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn null\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t  }),\n\t\t})\n\t}\n\n\tprivate canEditSelectedContactList(): boolean {\n\t\tconst contactListInfo = this.contactListViewModel.getSelectedContactListInfo()\n\t\treturn contactListInfo != null && contactListInfo.canEdit\n\t}\n\n\tprivate detailsViewerActions(): Children {\n\t\tif (this.inContactListView()) {\n\t\t\tconst recipients = this.contactListViewModel.getSelectedContactListEntries()\n\t\t\tif (recipients && recipients.length > 0 && this.canEditSelectedContactList()) {\n\t\t\t\treturn m(IconButton, {\n\t\t\t\t\ttitle: \"delete_action\",\n\t\t\t\t\ticon: Icons.Trash,\n\t\t\t\t\tclick: () => this.contactListViewModel.deleteContactListEntries(recipients),\n\t\t\t\t})\n\t\t\t}\n\t\t} else {\n\t\t\tconst contacts = this.getSelectedContacts()\n\t\t\treturn m(ContactViewerActions, {\n\t\t\t\tcontacts,\n\t\t\t\tonEdit: (c) => this.editContact(c),\n\t\t\t\tonExport: exportContacts,\n\t\t\t\tonDelete: (contacts: Contact[]) => deleteContacts(contacts, () => this.contactViewModel.listModel.selectNone()),\n\t\t\t\tonMerge: confirmMerge,\n\t\t\t})\n\t\t}\n\t}\n\n\tprivate inContactListView() {\n\t\treturn m.route.get().startsWith(CONTACTLIST_PREFIX)\n\t}\n\n\tprivate showingListView() {\n\t\treturn this.inContactListView()\n\t\t\t? this.contactListViewModel.getSelectedContactListEntries()?.length === 0 || this.contactListViewModel.listModel?.state.inMultiselect\n\t\t\t: this.getSelectedContacts().length === 0 || this.contactViewModel.listModel.state.inMultiselect\n\t}\n\n\tview({ attrs }: Vnode<ContactViewAttrs>): Children {\n\t\tthis.getContactListInvitationRows()\n\n\t\treturn m(\n\t\t\t\"#contact.main-view\",\n\t\t\tm(this.viewSlider, {\n\t\t\t\theader: styles.isSingleColumnLayout()\n\t\t\t\t\t? null\n\t\t\t\t\t: m(Header, {\n\t\t\t\t\t\t\tsearchBar: () =>\n\t\t\t\t\t\t\t\tthis.inContactListView()\n\t\t\t\t\t\t\t\t\t? null\n\t\t\t\t\t\t\t\t\t: m(LazySearchBar, {\n\t\t\t\t\t\t\t\t\t\t\tplaceholder: lang.get(\"searchContacts_placeholder\"),\n\t\t\t\t\t\t\t\t\t\t\tdisabled: !locator.logins.isFullyLoggedIn(),\n\t\t\t\t\t\t\t\t\t  }),\n\t\t\t\t\t\t\t...attrs.header,\n\t\t\t\t\t  }),\n\t\t\t\tbottomNav:\n\t\t\t\t\tstyles.isSingleColumnLayout() && this.viewSlider.focusedColumn === this.detailsColumn && !this.showingListView()\n\t\t\t\t\t\t? this.inContactListView()\n\t\t\t\t\t\t\t? m(MobileActionBar, {\n\t\t\t\t\t\t\t\t\tactions: this.canEditSelectedContactList()\n\t\t\t\t\t\t\t\t\t\t? [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ticon: Icons.Trash,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: \"delete_action\",\n\t\t\t\t\t\t\t\t\t\t\t\t\taction: () => this.contactListViewModel.deleteSelectedEntries(),\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t  ]\n\t\t\t\t\t\t\t\t\t\t: [],\n\t\t\t\t\t\t\t  })\n\t\t\t\t\t\t\t: m(MobileActionBar, {\n\t\t\t\t\t\t\t\t\tactions: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ticon: Icons.Edit,\n\t\t\t\t\t\t\t\t\t\t\ttitle: \"edit_action\",\n\t\t\t\t\t\t\t\t\t\t\taction: () => this.editSelectedContact(),\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ticon: Icons.Trash,\n\t\t\t\t\t\t\t\t\t\t\ttitle: \"delete_action\",\n\t\t\t\t\t\t\t\t\t\t\taction: () => this.deleteSelectedContacts(),\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t  })\n\t\t\t\t\t\t: (styles.isSingleColumnLayout() &&\n\t\t\t\t\t\t\t\tthis.viewSlider.focusedColumn === this.listColumn &&\n\t\t\t\t\t\t\t\tthis.contactViewModel.listModel.state.inMultiselect) ||\n\t\t\t\t\t\t  this.contactListViewModel.listModel?.state.inMultiselect\n\t\t\t\t\t\t? m(MobileBottomActionBar, this.detailsViewerActions())\n\t\t\t\t\t\t: m(BottomNav),\n\t\t\t}),\n\t\t)\n\t}\n\n\tprivate getHeaderLabel(): TranslationKey {\n\t\tif (this.inContactListView()) {\n\t\t\treturn \"contactLists_label\"\n\t\t} else {\n\t\t\treturn \"contacts_label\"\n\t\t}\n\t}\n\n\tprivate getSelectedContacts() {\n\t\treturn this.contactViewModel.listModel.getSelectedAsArray()\n\t}\n\n\tprivate async getContactListId(): Promise<Id | null> {\n\t\tif (this.inContactListView()) {\n\t\t\treturn assertNotNull(await this.contactListViewModel.getContactListId())\n\t\t} else {\n\t\t\treturn this.contactViewModel.contactListId\n\t\t}\n\t}\n\n\tasync createNewContact() {\n\t\tconst listId = await this.getContactListId()\n\t\tif (listId) {\n\t\t\tnew ContactEditor(locator.entityClient, null, listId).show()\n\t\t}\n\t}\n\n\tprivate editSelectedContact() {\n\t\tconst firstSelected = this.getSelectedContacts()[0]\n\t\tif (!firstSelected) return\n\t\tthis.editContact(firstSelected)\n\t}\n\n\tprivate editContact(contact: Contact, listId?: Id) {\n\t\tnew ContactEditor(locator.entityClient, contact, listId).show()\n\t}\n\n\tprivate renderHeaderRightView(): Children {\n\t\treturn m(IconButton, {\n\t\t\ttitle: \"newContact_action\",\n\t\t\tclick: () => this.createNewContact(),\n\t\t\ticon: Icons.Add,\n\t\t})\n\t}\n\n\tprivate renderDetailsViewer(): Children {\n\t\tif (this.inContactListView()) {\n\t\t\tconst entries = this.contactListViewModel.getSelectedContactListEntries() ?? []\n\t\t\treturn this.contactListViewModel.listModel == null || this.showingListView()\n\t\t\t\t? m(ColumnEmptyMessageBox, {\n\t\t\t\t\t\tmessage: getContactListEntriesSelectionMessage(entries),\n\t\t\t\t\t\ticon: Icons.People,\n\t\t\t\t\t\tcolor: theme.content_message_bg,\n\t\t\t\t\t\tbottomContent:\n\t\t\t\t\t\t\tentries.length > 0\n\t\t\t\t\t\t\t\t? m(Button, {\n\t\t\t\t\t\t\t\t\t\tlabel: \"cancel_action\",\n\t\t\t\t\t\t\t\t\t\ttype: ButtonType.Secondary,\n\t\t\t\t\t\t\t\t\t\tclick: () => this.contactListViewModel.listModel?.selectNone(),\n\t\t\t\t\t\t\t\t  })\n\t\t\t\t\t\t\t\t: null,\n\t\t\t\t\t\tbackgroundColor: theme.navigation_bg,\n\t\t\t\t  })\n\t\t\t\t: m(ContactListEntryViewer, {\n\t\t\t\t\t\tentry: getFirstOrThrow(entries),\n\t\t\t\t\t\tcontacts: this.contactListViewModel.contactsForSelectedEntry,\n\t\t\t\t\t\tcontactEdit: (c: Contact) => this.editContact(c),\n\t\t\t\t\t\tcontactDelete: deleteContacts,\n\t\t\t\t\t\tcontactCreate: async (c: Contact) => {\n\t\t\t\t\t\t\tconst listId = await this.getContactListId()\n\t\t\t\t\t\t\tif (listId) {\n\t\t\t\t\t\t\t\tthis.editContact(c, listId)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonWriteMail: writeMail,\n\t\t\t\t\t\tselectNone: () => this.contactListViewModel.listModel?.selectNone(),\n\t\t\t\t  })\n\t\t} else {\n\t\t\tconst contacts = this.getSelectedContacts()\n\t\t\treturn this.showingListView()\n\t\t\t\t? m(MultiContactViewer, {\n\t\t\t\t\t\tselectedEntities: contacts,\n\t\t\t\t\t\tselectNone: () => this.contactViewModel.listModel.selectNone(),\n\t\t\t\t  })\n\t\t\t\t: m(ContactCardViewer, {\n\t\t\t\t\t\tcontact: contacts[0],\n\t\t\t\t\t\tonWriteMail: writeMail,\n\t\t\t\t  })\n\t\t}\n\t}\n\n\tprivate getShortcuts() {\n\t\tlet shortcuts: Shortcut[] = [\n\t\t\t...listSelectionKeyboardShortcuts(MultiselectMode.Enabled, () => {\n\t\t\t\treturn this.inContactListView() ? this.contactListViewModel.listModel : this.contactViewModel.listModel\n\t\t\t}),\n\t\t\t{\n\t\t\t\tkey: Keys.DELETE,\n\t\t\t\texec: () => {\n\t\t\t\t\tif (this.inContactListView()) {\n\t\t\t\t\t\tthis.contactListViewModel.deleteSelectedEntries()\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.deleteSelectedContacts()\n\t\t\t\t\t}\n\t\t\t\t\treturn true\n\t\t\t\t},\n\t\t\t\thelp: \"deleteContacts_action\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: Keys.BACKSPACE,\n\t\t\t\texec: () => {\n\t\t\t\t\tif (this.inContactListView()) {\n\t\t\t\t\t\tthis.contactListViewModel.deleteSelectedEntries()\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.deleteSelectedContacts()\n\t\t\t\t\t}\n\t\t\t\t\treturn true\n\t\t\t\t},\n\t\t\t\thelp: \"deleteContacts_action\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: Keys.N,\n\t\t\t\texec: () => {\n\t\t\t\t\tthis.createNewContact()\n\t\t\t\t},\n\t\t\t\thelp: \"newContact_action\",\n\t\t\t},\n\t\t]\n\n\t\treturn shortcuts\n\t}\n\n\tprivate renderSidebarElements(): Children {\n\t\treturn [\n\t\t\tm(SidebarSectionRow, {\n\t\t\t\ticon: BootIcons.Contacts,\n\t\t\t\tlabel: \"all_contacts_label\",\n\t\t\t\tpath: `/contact`,\n\t\t\t\tonClick: () => this.viewSlider.focus(this.listColumn),\n\t\t\t\tmoreButton: this.createMoreButtonAttrs(),\n\t\t\t\talwaysShowMoreButton: client.isMobileDevice(),\n\t\t\t} satisfies SidebarSectionRowAttrs),\n\t\t\tm(\n\t\t\t\tSidebarSection,\n\t\t\t\t{\n\t\t\t\t\tname: \"contactLists_label\",\n\t\t\t\t\tbutton: m(IconButton, {\n\t\t\t\t\t\ticon: Icons.Add,\n\t\t\t\t\t\tsize: ButtonSize.Compact,\n\t\t\t\t\t\ttitle: \"addContactList_action\",\n\t\t\t\t\t\tclick: () => {\n\t\t\t\t\t\t\tthis.addContactList()\n\t\t\t\t\t\t},\n\t\t\t\t\t}),\n\t\t\t\t},\n\t\t\t\t[\n\t\t\t\t\tthis.contactListViewModel.getOwnContactListInfos().map((cl) => {\n\t\t\t\t\t\treturn this.renderContactListRow(cl, false)\n\t\t\t\t\t}),\n\t\t\t\t],\n\t\t\t),\n\t\t\tthis.contactListViewModel.getSharedContactListInfos().length > 0\n\t\t\t\t? m(\n\t\t\t\t\t\t\"\",\n\t\t\t\t\t\tm(\n\t\t\t\t\t\t\tSidebarSection,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: \"sharedContactLists_label\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tthis.contactListViewModel.getSharedContactListInfos().map((cl) => {\n\t\t\t\t\t\t\t\treturn this.renderContactListRow(cl, true)\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t),\n\t\t\t\t  )\n\t\t\t\t: null,\n\t\t\tthis.contactListViewModel.getContactListInvitations().length > 0\n\t\t\t\t? m(\n\t\t\t\t\t\tSidebarSection,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"contactListInvitations_label\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\tthis.invitationRows,\n\t\t\t\t  )\n\t\t\t\t: null,\n\t\t]\n\t}\n\n\tprivate getContactListInvitationRows() {\n\t\timport(\"../../../common/sharing/view/GroupInvitationFolderRow.js\")\n\t\t\t.then(({ GroupInvitationFolderRow }) => {\n\t\t\t\tthis.invitationRows = this.contactListViewModel.getContactListInvitations().map((invitation) =>\n\t\t\t\t\tm(GroupInvitationFolderRow, {\n\t\t\t\t\t\tinvitation,\n\t\t\t\t\t}),\n\t\t\t\t)\n\t\t\t})\n\t\t\t.then(m.redraw)\n\t}\n\n\tprivate renderFolderMoreButton(): Children {\n\t\treturn m(IconButton, this.createMoreButtonAttrs())\n\t}\n\n\tprivate createMoreButtonAttrs(): IconButtonAttrs {\n\t\treturn attachDropdown({\n\t\t\tmainButtonAttrs: {\n\t\t\t\ttitle: \"more_label\",\n\t\t\t\ticon: Icons.More,\n\t\t\t\tsize: ButtonSize.Compact,\n\t\t\t\tcolors: ButtonColor.Nav,\n\t\t\t},\n\t\t\tchildAttrs: () => {\n\t\t\t\tconst vcardButtons: Array<DropdownButtonAttrs> = isApp()\n\t\t\t\t\t? [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: \"importContacts_label\",\n\t\t\t\t\t\t\t\tclick: () => importContacts(),\n\t\t\t\t\t\t\t\ticon: Icons.ContactImport,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t  ]\n\t\t\t\t\t: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: \"exportVCard_action\",\n\t\t\t\t\t\t\t\tclick: () => exportAsVCard(locator.contactModel),\n\t\t\t\t\t\t\t\ticon: Icons.Export,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t  ]\n\n\t\t\t\treturn vcardButtons.concat([\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: \"importVCard_action\",\n\t\t\t\t\t\tclick: () => importAsVCard(),\n\t\t\t\t\t\ticon: Icons.ContactImport,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: \"merge_action\",\n\t\t\t\t\t\ticon: Icons.People,\n\t\t\t\t\t\tclick: () => this._mergeAction(),\n\t\t\t\t\t},\n\t\t\t\t])\n\t\t\t},\n\t\t\twidth: 250,\n\t\t})\n\t}\n\n\tprivate renderContactListRow(contactListInfo: ContactListInfo, shared: boolean) {\n\t\tconst contactListButton: NavButtonAttrs = {\n\t\t\tlabel: lang.makeTranslation(\"contactListName_label\", contactListInfo.name),\n\t\t\ticon: () => Icons.People,\n\t\t\thref: () => `${CONTACTLIST_PREFIX}/${contactListInfo.groupRoot.entries}`,\n\t\t\tdisableHoverBackground: true,\n\t\t\tclick: () => {\n\t\t\t\tthis.contactListViewModel.updateSelectedContactList(contactListInfo.groupRoot.entries)\n\t\t\t\tthis.viewSlider.focus(this.listColumn)\n\t\t\t},\n\t\t}\n\n\t\tconst moreButton = this.createContactListMoreButton(contactListInfo, shared)\n\n\t\treturn m(SidebarSectionRow, {\n\t\t\ticon: Icons.People,\n\t\t\tlabel: lang.makeTranslation(\"contactlist_name\", contactListInfo.name),\n\t\t\tpath: `${CONTACTLIST_PREFIX}/${contactListInfo.groupRoot.entries}`,\n\t\t\tonClick: () => {\n\t\t\t\tthis.contactListViewModel.updateSelectedContactList(contactListInfo.groupRoot.entries)\n\t\t\t\tthis.viewSlider.focus(this.listColumn)\n\t\t\t},\n\t\t\tmoreButton: moreButton,\n\t\t} satisfies SidebarSectionRowAttrs)\n\t}\n\n\tcreateContactListMoreButton(contactListInfo: ContactListInfo, shared: boolean): IconButtonAttrs {\n\t\treturn attachDropdown({\n\t\t\tmainButtonAttrs: {\n\t\t\t\ttitle: \"more_label\",\n\t\t\t\ticon: Icons.More,\n\t\t\t\tcolors: ButtonColor.Nav,\n\t\t\t\tsize: ButtonSize.Compact,\n\t\t\t},\n\t\t\tchildAttrs: () => {\n\t\t\t\treturn [\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: \"edit_action\",\n\t\t\t\t\t\ticon: Icons.Edit,\n\t\t\t\t\t\tclick: () => {\n\t\t\t\t\t\t\tshowContactListNameEditor(contactListInfo.name, (newName) => {\n\t\t\t\t\t\t\t\tif (shared) {\n\t\t\t\t\t\t\t\t\tthis.editSharedContactList(contactListInfo, newName)\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthis.contactListViewModel.updateContactList(contactListInfo, newName, [])\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: \"sharing_label\",\n\t\t\t\t\t\ticon: Icons.ContactImport,\n\t\t\t\t\t\tclick: async () => {\n\t\t\t\t\t\t\tconst { showGroupSharingDialog } = await import(\"../../../common/sharing/view/GroupSharingDialog.js\")\n\t\t\t\t\t\t\tshowGroupSharingDialog(contactListInfo.groupInfo, true)\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tcontactListInfo.isOwner\n\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\tlabel: \"delete_action\",\n\t\t\t\t\t\t\t\ticon: Icons.Trash,\n\t\t\t\t\t\t\t\tclick: async () => {\n\t\t\t\t\t\t\t\t\tif (await Dialog.confirm(\"confirmDeleteContactList_msg\")) {\n\t\t\t\t\t\t\t\t\t\tthis.contactListViewModel.deleteContactList(contactListInfo)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\tlabel: \"leaveGroup_action\",\n\t\t\t\t\t\t\t\ticon: Icons.Trash,\n\t\t\t\t\t\t\t\tclick: async () => {\n\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\tawait Dialog.confirm(\n\t\t\t\t\t\t\t\t\t\t\tlang.makeTranslation(\n\t\t\t\t\t\t\t\t\t\t\t\t\"confirm_msg\",\n\t\t\t\t\t\t\t\t\t\t\t\tlang.get(\"confirmLeaveSharedGroup_msg\", { \"{groupName}\": contactListInfo.name }),\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\treturn this.contactListViewModel.removeUserFromContactList(contactListInfo)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t  },\n\t\t\t\t]\n\t\t\t},\n\t\t})\n\t}\n\n\tprivate editSharedContactList(contactListInfo: ContactListInfo, newName: string) {\n\t\tconst { userSettingsGroupRoot } = locator.logins.getUserController()\n\t\tconst existingGroupSettings = userSettingsGroupRoot.groupSettings.find((gc) => gc.group === contactListInfo.groupInfo.group) ?? null\n\n\t\tif (existingGroupSettings) {\n\t\t\texistingGroupSettings.name = newName\n\t\t}\n\n\t\tlocator.entityClient.update(userSettingsGroupRoot)\n\t\t// Updating the contactListInfo.name directly, so it updates for the user right away\n\t\tcontactListInfo.name = newName\n\t}\n\n\t_mergeAction(): Promise<void> {\n\t\treturn showProgressDialog(\n\t\t\t\"pleaseWait_msg\",\n\t\t\tlocator.contactModel.getContactListId().then((contactListId) => {\n\t\t\t\treturn contactListId ? locator.entityClient.loadAll(ContactTypeRef, contactListId) : []\n\t\t\t}),\n\t\t).then((allContacts) => {\n\t\t\tif (allContacts.length === 0) {\n\t\t\t\tDialog.message(\"noContacts_msg\")\n\t\t\t} else {\n\t\t\t\tlet mergeableAndDuplicates = getMergeableContacts(allContacts)\n\t\t\t\tlet deletePromise = Promise.resolve()\n\n\t\t\t\tif (mergeableAndDuplicates.deletable.length > 0) {\n\t\t\t\t\tdeletePromise = Dialog.confirm(\n\t\t\t\t\t\tlang.makeTranslation(\n\t\t\t\t\t\t\t\"confirm_msg\",\n\t\t\t\t\t\t\tlang.get(\"duplicatesNotification_msg\", {\n\t\t\t\t\t\t\t\t\"{1}\": mergeableAndDuplicates.deletable.length,\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t),\n\t\t\t\t\t).then((confirmed) => {\n\t\t\t\t\t\tif (confirmed) {\n\t\t\t\t\t\t\t// delete async in the background\n\t\t\t\t\t\t\tfor (const dc of mergeableAndDuplicates.deletable) {\n\t\t\t\t\t\t\t\tlocator.entityClient.erase(dc)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tdeletePromise.then(() => {\n\t\t\t\t\tif (mergeableAndDuplicates.mergeable.length === 0) {\n\t\t\t\t\t\tDialog.message(lang.makeTranslation(\"confirm_msg\", lang.get(\"noSimilarContacts_msg\")))\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._showMergeDialogs(mergeableAndDuplicates.mergeable).then((canceled) => {\n\t\t\t\t\t\t\tif (!canceled) {\n\t\t\t\t\t\t\t\tDialog.message(\"noMoreSimilarContacts_msg\")\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * @returns True if the merging was canceled by the user, false otherwise\n\t */\n\t_showMergeDialogs(mergable: Contact[][]): Promise<boolean> {\n\t\tlet canceled = false\n\n\t\tif (mergable.length > 0) {\n\t\t\tlet contact1 = mergable[0][0]\n\t\t\tlet contact2 = mergable[0][1]\n\t\t\tlet mergeDialog = new ContactMergeView(contact1, contact2)\n\t\t\treturn mergeDialog\n\t\t\t\t.show()\n\t\t\t\t.then((action) => {\n\t\t\t\t\t// execute action here and update mergable\n\t\t\t\t\tif (action === ContactMergeAction.Merge) {\n\t\t\t\t\t\tthis._removeFromMergableContacts(mergable, contact2)\n\n\t\t\t\t\t\tmergeContacts(contact1, contact2)\n\t\t\t\t\t\treturn showProgressDialog(\n\t\t\t\t\t\t\t\"pleaseWait_msg\",\n\t\t\t\t\t\t\tlocator.entityClient.update(contact1).then(() => locator.entityClient.erase(contact2)),\n\t\t\t\t\t\t).catch(ofClass(NotFoundError, noOp))\n\t\t\t\t\t} else if (action === ContactMergeAction.DeleteFirst) {\n\t\t\t\t\t\tthis._removeFromMergableContacts(mergable, contact1)\n\n\t\t\t\t\t\treturn locator.entityClient.erase(contact1)\n\t\t\t\t\t} else if (action === ContactMergeAction.DeleteSecond) {\n\t\t\t\t\t\tthis._removeFromMergableContacts(mergable, contact2)\n\n\t\t\t\t\t\treturn locator.entityClient.erase(contact2)\n\t\t\t\t\t} else if (action === ContactMergeAction.Skip) {\n\t\t\t\t\t\tthis._removeFromMergableContacts(mergable, contact2)\n\t\t\t\t\t} else if (action === ContactMergeAction.Cancel) {\n\t\t\t\t\t\tclear(mergable)\n\t\t\t\t\t\tcanceled = true\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.then(() => {\n\t\t\t\t\tif (!canceled && mergable.length > 0) {\n\t\t\t\t\t\treturn this._showMergeDialogs(mergable)\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn canceled\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t} else {\n\t\t\treturn Promise.resolve(canceled)\n\t\t}\n\t}\n\n\t/**\n\t * removes the given contact from the given mergable arrays first entry (first or second element)\n\t */\n\t_removeFromMergableContacts(mergable: Contact[][], contact: Contact) {\n\t\tif (mergable[0][0] === contact) {\n\t\t\tmergable[0].splice(0, 1) // remove contact1\n\t\t} else if (mergable[0][1] === contact) {\n\t\t\tmergable[0].splice(1, 1) // remove contact2\n\t\t}\n\n\t\t// remove the first entry if there is only one contact left in the first entry\n\t\tif (mergable[0].length <= 1) {\n\t\t\tmergable.splice(0, 1)\n\t\t}\n\t}\n\n\tonNewUrl(args: Record<string, any>) {\n\t\tif (this.inContactListView()) {\n\t\t\tthis.contactListViewModel.showListAndEntry(args.listId, args.Id).then(m.redraw)\n\t\t} else {\n\t\t\tthis.contactViewModel.init(args.listId).then(() => this.contactViewModel.selectContact(args.contactId))\n\t\t}\n\t\t// focus the details column if asked explicitly, e.g. to show a specific contact\n\t\tif (args.focusItem) {\n\t\t\tthis.viewSlider.focus(this.detailsColumn)\n\t\t}\n\t}\n\n\tprivate deleteSelectedContacts(): Promise<void> {\n\t\treturn deleteContacts(this.getSelectedContacts(), () => this.contactViewModel.listModel.selectNone())\n\t}\n\n\tgetViewSlider(): ViewSlider | null {\n\t\treturn this.viewSlider\n\t}\n\n\thandleBackButton(): boolean {\n\t\t// only handle back button if viewing contact\n\t\tif (this.viewSlider.focusedColumn === this.detailsColumn) {\n\t\t\tthis.viewSlider.focus(this.listColumn)\n\t\t\treturn true\n\t\t} else if (\n\t\t\tthis.showingListView() &&\n\t\t\t(this.contactViewModel.listModel.state.inMultiselect ||\n\t\t\t\t(this.contactListViewModel.listModel && this.contactListViewModel.listModel?.state.inMultiselect))\n\t\t) {\n\t\t\t// Just try to empty the list of selected items the user is on\n\t\t\t// multiselect mode\n\t\t\tthis.contactViewModel.listModel.selectNone()\n\t\t\tthis.contactListViewModel.listModel?.selectNone()\n\n\t\t\treturn true\n\t\t}\n\n\t\treturn false\n\t}\n\n\tprivate renderListToolbar() {\n\t\tif (this.inContactListView()) {\n\t\t\tconst selectedList = this.contactListViewModel.getSelectedContactListInfo()\n\t\t\treturn m(\n\t\t\t\tDesktopListToolbar,\n\t\t\t\tm(SelectAllCheckbox, selectionAttrsForList(this.contactListViewModel.listModel)),\n\t\t\t\tm(\".flex-grow\"),\n\t\t\t\tthis.canEditSelectedContactList()\n\t\t\t\t\t? m(IconButton, {\n\t\t\t\t\t\t\ttitle: \"addEntries_action\",\n\t\t\t\t\t\t\ticon: Icons.Add,\n\t\t\t\t\t\t\tclick: () => {\n\t\t\t\t\t\t\t\tthis.addAddressesToContactList()\n\t\t\t\t\t\t\t},\n\t\t\t\t\t  })\n\t\t\t\t\t: null,\n\t\t\t)\n\t\t} else {\n\t\t\treturn m(DesktopListToolbar, m(SelectAllCheckbox, selectionAttrsForList(this.contactViewModel.listModel)), this.renderSortByButton())\n\t\t}\n\t}\n\n\tprivate addAddressesToContactList() {\n\t\tconst groupRoot = this.contactListViewModel.getSelectedContactListInfo()?.groupRoot\n\t\tif (!groupRoot) return\n\t\tshowContactListEditor(\n\t\t\tgroupRoot,\n\t\t\t\"addEntries_action\",\n\t\t\t(_, addresses) => {\n\t\t\t\tthis.contactListViewModel.addRecipientstoContactList(addresses, assertNotNull(groupRoot))\n\t\t\t},\n\t\t\tthis.contactListViewModel.listModel?.getUnfilteredAsArray().map((entry) => entry.emailAddress),\n\t\t)\n\t}\n\n\tprivate renderSortByButton() {\n\t\treturn m(IconButton, {\n\t\t\ttitle: \"sortBy_label\",\n\t\t\ticon: Icons.ListOrdered,\n\t\t\tclick: (e: MouseEvent, dom: HTMLElement) => {\n\t\t\t\tcreateDropdown({\n\t\t\t\t\tlazyButtons: () => [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: \"firstName_placeholder\",\n\t\t\t\t\t\t\tclick: () => {\n\t\t\t\t\t\t\t\tthis.contactViewModel.setSortByFirstName(true)\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: \"lastName_placeholder\",\n\t\t\t\t\t\t\tclick: () => {\n\t\t\t\t\t\t\t\tthis.contactViewModel.setSortByFirstName(false)\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t})(e, dom)\n\t\t\t},\n\t\t})\n\t}\n\n\tprivate async addContactList() {\n\t\tif (await this.contactListViewModel.canCreateContactList()) {\n\t\t\tawait showContactListEditor(null, \"createContactList_action\", (name, recipients) => {\n\t\t\t\tthis.contactListViewModel.addContactList(name, recipients)\n\t\t\t})\n\t\t} else {\n\t\t\tif (locator.logins.getUserController().isGlobalAdmin()) {\n\t\t\t\tconst { getAvailablePlansWithContactList } = await import(\"../../../common/subscription/SubscriptionUtils.js\")\n\t\t\t\tconst plans = await getAvailablePlansWithContactList()\n\t\t\t\tawait showPlanUpgradeRequiredDialog(plans)\n\t\t\t} else {\n\t\t\t\tDialog.message(\"contactAdmin_msg\")\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport function writeMail(to: PartialRecipient, subject: string = \"\"): Promise<Dialog> {\n\treturn locator.mailboxModel.getUserMailboxDetails().then((mailboxDetails) => {\n\t\treturn newMailEditorFromTemplate(\n\t\t\tmailboxDetails,\n\t\t\t{\n\t\t\t\tto: [to],\n\t\t\t},\n\t\t\tsubject,\n\t\t\tappendEmailSignature(\"\", locator.logins.getUserController().props),\n\t\t).then((editor) => editor.show())\n\t})\n}\n\nexport function deleteContacts(contactList: Contact[], onConfirm: () => void = noOp): Promise<void> {\n\treturn Dialog.confirm(\"deleteContacts_msg\").then((confirmed) => {\n\t\tif (confirmed) {\n\t\t\tonConfirm()\n\t\t\tfor (const contact of contactList) {\n\t\t\t\tlocator.entityClient.erase(contact).catch(ofClass(NotFoundError, noOp)).catch(ofClass(LockedError, noOp))\n\t\t\t}\n\t\t}\n\t})\n}\n\nexport function confirmMerge(keptContact: Contact, goodbyeContact: Contact): Promise<void> {\n\tif (!keptContact.presharedPassword || !goodbyeContact.presharedPassword || keptContact.presharedPassword === goodbyeContact.presharedPassword) {\n\t\treturn Dialog.confirm(\"mergeAllSelectedContacts_msg\").then((confirmed) => {\n\t\t\tif (confirmed) {\n\t\t\t\tmergeContacts(keptContact, goodbyeContact)\n\t\t\t\treturn showProgressDialog(\n\t\t\t\t\t\"pleaseWait_msg\",\n\t\t\t\t\tlocator.entityClient.update(keptContact).then(() => locator.entityClient.erase(goodbyeContact)),\n\t\t\t\t).catch(ofClass(NotFoundError, noOp))\n\t\t\t}\n\t\t})\n\t} else {\n\t\treturn Dialog.message(\"presharedPasswordsUnequal_msg\")\n\t}\n}\n\nexport async function importContacts() {\n\tconst importer = await mailLocator.contactImporter()\n\tawait importer.importContactsFromDeviceSafely()\n}\n"]}