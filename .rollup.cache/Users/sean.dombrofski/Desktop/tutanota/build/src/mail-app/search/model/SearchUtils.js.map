{"version":3,"file":"SearchUtils.js","sourceRoot":"","sources":["../../../../../src/mail-app/search/model/SearchUtils.ts"],"names":[],"mappings":"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","sourcesContent":["import m from \"mithril\"\nimport {\n\tassertNotNull,\n\tbase64ToBase64Url,\n\tbase64UrlToBase64,\n\tdecodeBase64,\n\tfilterInt,\n\tgetDayShifted,\n\tgetEndOfDay,\n\tgetStartOfDay,\n\tincrementMonth,\n\tisSameTypeRef,\n\tstringToBase64,\n\tTypeRef,\n} from \"@tutao/tutanota-utils\"\nimport { RouteSetFn, throttleRoute } from \"../../../common/misc/RouteChange\"\nimport { SearchRestriction } from \"../../../common/api/worker/search/SearchTypes\"\nimport { assertMainOrNode } from \"../../../common/api/common/Env\"\nimport { TranslationKey } from \"../../../common/misc/LanguageViewModel\"\nimport { CalendarEvent, CalendarEventTypeRef, Contact, ContactTypeRef, Mail, MailTypeRef } from \"../../../common/api/entities/tutanota/TypeRefs\"\nimport { typeModels } from \"../../../common/api/entities/tutanota/TypeModels.js\"\nimport { locator } from \"../../../common/api/main/CommonLocator.js\"\nimport {\n\tgetElementId,\n\tLEGACY_BCC_RECIPIENTS_ID,\n\tLEGACY_BODY_ID,\n\tLEGACY_CC_RECIPIENTS_ID,\n\tLEGACY_TO_RECIPIENTS_ID,\n} from \"../../../common/api/common/utils/EntityUtils.js\"\n\nassertMainOrNode()\n\nconst FIXED_FREE_SEARCH_DAYS = 28\n\nexport const enum SearchCategoryTypes {\n\tmail = \"mail\",\n\tcontact = \"contact\",\n\tcalendar = \"calendar\",\n}\n\nconst SEARCH_CATEGORIES = [\n\t{\n\t\tname: SearchCategoryTypes.mail,\n\t\ttypeRef: MailTypeRef,\n\t},\n\t{\n\t\tname: SearchCategoryTypes.contact,\n\t\ttypeRef: ContactTypeRef,\n\t},\n\t{\n\t\tname: SearchCategoryTypes.calendar,\n\t\ttypeRef: CalendarEventTypeRef,\n\t},\n] as const\n\n/** get the TypeRef that corresponds to the selected category (as taken from the URL: <host>/search/<category>?<query> */\nexport function getSearchType(category: string): TypeRef<CalendarEvent> | TypeRef<Mail> | TypeRef<Contact> {\n\treturn assertNotNull(SEARCH_CATEGORIES.find((c) => c.name === category)).typeRef\n}\n\ninterface SearchMailField {\n\treadonly textId: TranslationKey\n\treadonly field: string | null\n\treadonly attributeIds: number[] | null\n}\n\nexport const SEARCH_MAIL_FIELDS: ReadonlyArray<SearchMailField> = [\n\t{\n\t\ttextId: \"all_label\",\n\t\tfield: null,\n\t\tattributeIds: null,\n\t},\n\t{\n\t\ttextId: \"subject_label\",\n\t\tfield: \"subject\",\n\t\tattributeIds: [typeModels.Mail.values[\"subject\"].id as number],\n\t},\n\t{\n\t\ttextId: \"mailBody_label\",\n\t\tfield: \"body\",\n\t\tattributeIds: [LEGACY_BODY_ID /** id of the legacy typeModels.Mail.associations[\"body\"] */],\n\t},\n\t{\n\t\ttextId: \"from_label\",\n\t\tfield: \"from\",\n\t\tattributeIds: [typeModels.Mail.associations[\"sender\"].id as number],\n\t},\n\t{\n\t\ttextId: \"to_label\",\n\t\tfield: \"to\",\n\t\tattributeIds: [\n\t\t\tLEGACY_TO_RECIPIENTS_ID /** id of the legacy Mail.toRecipients */,\n\t\t\tLEGACY_CC_RECIPIENTS_ID /** id of the legacy Mail.ccRecipients */,\n\t\t\tLEGACY_BCC_RECIPIENTS_ID /** id of the legacy Mail.bccRecipients */,\n\t\t],\n\t},\n\t{\n\t\ttextId: \"attachmentName_label\",\n\t\tfield: \"attachment\",\n\t\tattributeIds: [typeModels.Mail.associations[\"attachments\"].id as number],\n\t},\n]\n\nconst routeSetThrottled: RouteSetFn = throttleRoute()\n\nexport function setSearchUrl(url: string) {\n\tif (url !== m.route.get()) {\n\t\trouteSetThrottled(url, {})\n\t}\n}\n\nexport function searchCategoryForRestriction(restriction: SearchRestriction): SearchCategoryTypes {\n\treturn assertNotNull(SEARCH_CATEGORIES.find((c) => isSameTypeRef(c.typeRef, restriction.type))).name\n}\n\n// Gets the resulting URL if the output of `getSearchParameters()` was routed to\nexport function getSearchUrl(query: string | null, restriction: SearchRestriction, selectionKey: string | null = null): string {\n\tconst { path, params } = getSearchParameters(query, restriction, selectionKey)\n\treturn m.buildPathname(path, params as m.Params)\n}\n\nexport function getSearchParameters(\n\tquery: string | null,\n\trestriction: SearchRestriction,\n\tselectionKey: string | null,\n): {\n\tpath: string\n\tparams: Record<string, string | number | Array<string>>\n} {\n\tconst category = searchCategoryForRestriction(restriction)\n\tconst params: Record<string, string | number | Array<string>> = {\n\t\tquery: query ?? \"\",\n\t\tcategory,\n\t}\n\t// a bit annoying but avoids putting unnecessary things into the url (if we would put undefined into it)\n\tif (restriction.start) {\n\t\tparams.start = restriction.start\n\t}\n\tif (restriction.end) {\n\t\tparams.end = restriction.end\n\t}\n\tif (restriction.folderIds.length > 0) {\n\t\tparams.folder = restriction.folderIds\n\t}\n\tif (restriction.field) {\n\t\tparams.field = restriction.field\n\t}\n\tif (restriction.eventSeries != null) {\n\t\tparams.eventSeries = String(restriction.eventSeries)\n\t}\n\n\treturn {\n\t\tpath: \"/search/:category\" + (selectionKey ? \"/\" + selectionKey : \"\"),\n\t\tparams: params,\n\t}\n}\n\nexport function getFreeSearchStartDate(): Date {\n\treturn getStartOfDay(getDayShifted(new Date(), -FIXED_FREE_SEARCH_DAYS))\n}\n\n/**\n * Adjusts the restriction according to the account type if necessary\n */\nexport function createRestriction(\n\tsearchCategory: SearchCategoryTypes,\n\tstart: number | null,\n\tend: number | null,\n\tfield: string | null,\n\tfolderIds: Array<string>,\n\teventSeries: boolean | null,\n): SearchRestriction {\n\tif (locator.logins.getUserController().isFreeAccount() && searchCategory === SearchCategoryTypes.mail) {\n\t\tstart = null\n\t\tend = getFreeSearchStartDate().getTime()\n\t\tfield = null\n\t\tfolderIds = []\n\t\teventSeries = null\n\t}\n\n\tlet r: SearchRestriction = {\n\t\ttype: getSearchType(searchCategory),\n\t\tstart: start,\n\t\tend: end,\n\t\tfield: null,\n\t\tattributeIds: null,\n\t\tfolderIds,\n\t\teventSeries,\n\t}\n\n\tif (!field) {\n\t\treturn r\n\t}\n\n\tif (searchCategory === SearchCategoryTypes.mail) {\n\t\tlet fieldData = SEARCH_MAIL_FIELDS.find((f) => f.field === field)\n\n\t\tif (fieldData) {\n\t\t\tr.field = field\n\t\t\tr.attributeIds = fieldData.attributeIds\n\t\t}\n\t} else if (searchCategory === SearchCategoryTypes.contact) {\n\t\t// nothing to do, the calendar restriction was completely set up already.\n\t} else if (searchCategory === SearchCategoryTypes.calendar) {\n\t\tif (field === \"recipient\") {\n\t\t\tr.field = field\n\t\t\tr.attributeIds = [\n\t\t\t\ttypeModels.Contact.values[\"firstName\"].id,\n\t\t\t\ttypeModels.Contact.values[\"lastName\"].id,\n\t\t\t\ttypeModels.Contact.associations[\"mailAddresses\"].id,\n\t\t\t]\n\t\t} else if (field === \"mailAddress\") {\n\t\t\tr.field = field\n\t\t\tr.attributeIds = [typeModels.Contact.associations[\"mailAddresses\"].id]\n\t\t}\n\t}\n\n\treturn r\n}\n\n/**\n * Adjusts the restriction according to the account type if necessary\n */\nexport function getRestriction(route: string): SearchRestriction {\n\tlet category: SearchCategoryTypes\n\tlet start: number | null = null\n\tlet end: number | null = null\n\tlet field: string | null = null\n\tlet folderIds: Array<string> = []\n\tlet eventSeries: boolean | null = null\n\n\tif (route.startsWith(\"/mail\") || route.startsWith(\"/search/mail\")) {\n\t\tcategory = SearchCategoryTypes.mail\n\n\t\tif (route.startsWith(\"/search/mail\")) {\n\t\t\ttry {\n\t\t\t\t// mithril will parse boolean but not numbers\n\t\t\t\tconst { params } = m.parsePathname(route)\n\t\t\t\tif (typeof params[\"start\"] === \"string\") {\n\t\t\t\t\tstart = filterInt(params[\"start\"])\n\t\t\t\t}\n\n\t\t\t\tif (typeof params[\"end\"] === \"string\") {\n\t\t\t\t\tend = filterInt(params[\"end\"])\n\t\t\t\t}\n\n\t\t\t\tif (typeof params[\"field\"] === \"string\") {\n\t\t\t\t\tconst fieldString = params[\"field\"]\n\t\t\t\t\tfield = SEARCH_MAIL_FIELDS.find((f) => f.field === fieldString)?.field ?? null\n\t\t\t\t}\n\n\t\t\t\tif (Array.isArray(params[\"folder\"])) {\n\t\t\t\t\tfolderIds = params[\"folder\"]\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log(\"invalid query: \" + route, e)\n\t\t\t}\n\t\t}\n\t} else if (route.startsWith(\"/contact\") || route.startsWith(\"/search/contact\")) {\n\t\tcategory = SearchCategoryTypes.contact\n\t} else if (route.startsWith(\"/calendar\") || route.startsWith(\"/search/calendar\")) {\n\t\tconst { params } = m.parsePathname(route)\n\n\t\ttry {\n\t\t\tif (typeof params[\"eventSeries\"] === \"boolean\") {\n\t\t\t\teventSeries = params[\"eventSeries\"]\n\t\t\t}\n\n\t\t\tif (typeof params[\"start\"] === \"string\") {\n\t\t\t\tstart = filterInt(params[\"start\"])\n\t\t\t}\n\n\t\t\tif (typeof params[\"end\"] === \"string\") {\n\t\t\t\tend = filterInt(params[\"end\"])\n\t\t\t}\n\n\t\t\tconst folder = params[\"folder\"]\n\t\t\tif (Array.isArray(folder)) {\n\t\t\t\tfolderIds = folder\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.log(\"invalid query: \" + route, e)\n\t\t}\n\n\t\tcategory = SearchCategoryTypes.calendar\n\t\tif (start == null || locator.logins.getUserController().isFreeAccount()) {\n\t\t\tconst now = new Date()\n\t\t\tnow.setDate(1)\n\t\t\tstart = getStartOfDay(now).getTime()\n\t\t}\n\n\t\tif (end == null || locator.logins.getUserController().isFreeAccount()) {\n\t\t\tconst endDate = incrementMonth(new Date(start), 3)\n\t\t\tendDate.setDate(0)\n\t\t\tend = getEndOfDay(endDate).getTime()\n\t\t}\n\t} else {\n\t\tthrow new Error(\"invalid type \" + route)\n\t}\n\n\treturn createRestriction(category, start, end, field, folderIds, eventSeries)\n}\n\nexport function decodeCalendarSearchKey(searchKey: string): { id: Id; start: number } {\n\treturn JSON.parse(decodeBase64(\"utf-8\", base64UrlToBase64(searchKey))) as { id: Id; start: number }\n}\n\nexport function encodeCalendarSearchKey(event: CalendarEvent): string {\n\tconst eventStartTime = event.startTime.getTime()\n\treturn base64ToBase64Url(stringToBase64(JSON.stringify({ start: eventStartTime, id: getElementId(event) })))\n}\n"]}