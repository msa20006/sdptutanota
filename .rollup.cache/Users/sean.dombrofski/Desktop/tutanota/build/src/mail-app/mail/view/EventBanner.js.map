{"version":3,"file":"EventBanner.js","sourceRoot":"","sources":["../../../../../src/mail-app/mail/view/EventBanner.ts"],"names":[],"mappings":"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","sourcesContent":["import m, { Children, Component, Vnode } from \"mithril\"\nimport { CalendarAttendeeStatus, CalendarMethod } from \"../../../common/api/common/TutanotaConstants\"\nimport { lang } from \"../../../common/misc/LanguageViewModel\"\nimport type { CalendarEvent, Mail } from \"../../../common/api/entities/tutanota/TypeRefs.js\"\nimport { Dialog } from \"../../../common/gui/base/Dialog\"\nimport { showProgressDialog } from \"../../../common/gui/dialogs/ProgressDialog\"\nimport { findAttendeeInAddresses } from \"../../../common/api/common/utils/CommonCalendarUtils.js\"\nimport { BannerType, InfoBanner, InfoBannerAttrs } from \"../../../common/gui/base/InfoBanner.js\"\nimport { Icons } from \"../../../common/gui/base/icons/Icons.js\"\nimport { isNotNull, LazyLoaded } from \"@tutao/tutanota-utils\"\nimport { ParsedIcalFileContent, ReplyResult } from \"../../../calendar-app/calendar/view/CalendarInvites.js\"\nimport { locator } from \"../../../common/api/main/CommonLocator.js\"\nimport { mailLocator } from \"../../mailLocator.js\"\nimport { isRepliedTo } from \"./MailViewerUtils.js\"\n\nexport type EventBannerAttrs = {\n\tcontents: ParsedIcalFileContent\n\tmail: Mail\n\trecipient: string\n}\n\n/**\n * displayed above a mail that contains a calendar invite.\n * Its main function is to make it possible to inspect the event with the CalendarEventPopup, to quick respond\n * your attendance with Accept/Decline/Tentative while adding the event to your personal calendar\n */\nexport class EventBanner implements Component<EventBannerAttrs> {\n\t/** ReplyButtons are used from mail-view and calendar-view.\n\t * they can't import each other and only have gui-base as a\n\t * common ancestor, where these don't belong. */\n\tprivate readonly ReplyButtons = new LazyLoaded(async () => (await import(\"../../../calendar-app/calendar/gui/eventpopup/EventPreviewView.js\")).ReplyButtons)\n\n\tview({ attrs }: Vnode<EventBannerAttrs>): Children {\n\t\tconst { contents, mail } = attrs\n\t\tif (contents == null || contents.events.length === 0) return null\n\n\t\tconst messages = contents.events\n\t\t\t.map((event: CalendarEvent): { event: CalendarEvent; message: Children } | None => {\n\t\t\t\tconst message = this.getMessage(event, attrs.mail, attrs.recipient, contents.method)\n\t\t\t\treturn message == null ? null : { event, message }\n\t\t\t})\n\t\t\t// thunderbird does not add attendees to rescheduled instances when they were added during an \"all event\"\n\t\t\t// edit operation, but _will_ send all the events to the participants in a single file. we do not show the\n\t\t\t// banner for events that do not mention us.\n\t\t\t.filter(isNotNull)\n\n\t\treturn messages.map(({ event, message }) =>\n\t\t\tm(InfoBanner, {\n\t\t\t\tmessage: () => message,\n\t\t\t\ttype: BannerType.Info,\n\t\t\t\ticon: Icons.People,\n\t\t\t\tbuttons: [\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: \"viewEvent_action\",\n\t\t\t\t\t\tclick: (e, dom) =>\n\t\t\t\t\t\t\timport(\"../../../calendar-app/calendar/view/CalendarInvites.js\").then(({ showEventDetails }) =>\n\t\t\t\t\t\t\t\tshowEventDetails(event, dom.getBoundingClientRect(), mail),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t} satisfies InfoBannerAttrs),\n\t\t)\n\t}\n\n\tprivate getMessage(event: CalendarEvent, mail: Mail, recipient: string, method: CalendarMethod): Children {\n\t\tconst ownAttendee = findAttendeeInAddresses(event.attendees, [recipient])\n\t\tif (method === CalendarMethod.REQUEST && ownAttendee != null) {\n\t\t\t// some mails contain more than one event that we want to be able to respond to\n\t\t\t// separately.\n\t\t\tif (isRepliedTo(mail) && ownAttendee.status !== CalendarAttendeeStatus.NEEDS_ACTION) {\n\t\t\t\treturn m(\".align-self-start.start.small\", lang.get(\"alreadyReplied_msg\"))\n\t\t\t} else if (this.ReplyButtons.isLoaded()) {\n\t\t\t\treturn m(this.ReplyButtons.getLoaded(), {\n\t\t\t\t\townAttendee,\n\t\t\t\t\tsetParticipation: async (status: CalendarAttendeeStatus) => sendResponse(event, recipient, status, mail),\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\tthis.ReplyButtons.reload().then(m.redraw)\n\t\t\t\treturn null\n\t\t\t}\n\t\t} else if (method === CalendarMethod.REPLY) {\n\t\t\treturn m(\".pt.align-self-start.start.small\", lang.get(\"eventNotificationUpdated_msg\"))\n\t\t} else {\n\t\t\treturn null\n\t\t}\n\t}\n}\n\n/** show a progress dialog while sending a response to the event's organizer and update the ui. will always send a reply, even if the status did not change. */\nexport function sendResponse(event: CalendarEvent, recipient: string, status: CalendarAttendeeStatus, previousMail: Mail) {\n\tshowProgressDialog(\n\t\t\"pleaseWait_msg\",\n\t\timport(\"../../../calendar-app/calendar/view/CalendarInvites.js\").then(async ({ getLatestEvent }) => {\n\t\t\tconst latestEvent = await getLatestEvent(event)\n\t\t\tconst ownAttendee = findAttendeeInAddresses(latestEvent.attendees, [recipient])\n\t\t\tconst calendarInviteHandler = await mailLocator.calendarInviteHandler()\n\n\t\t\tif (ownAttendee == null) {\n\t\t\t\tDialog.message(\"attendeeNotFound_msg\")\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tconst mailboxDetails = await mailLocator.mailModel.getMailboxDetailsForMail(previousMail)\n\t\t\tif (mailboxDetails == null) return\n\n\t\t\tconst replyResult = await calendarInviteHandler.replyToEventInvitation(latestEvent, ownAttendee, status, previousMail, mailboxDetails)\n\t\t\tif (replyResult === ReplyResult.ReplySent) {\n\t\t\t\townAttendee.status = status\n\t\t\t}\n\t\t\tm.redraw()\n\t\t}),\n\t)\n}\n"]}