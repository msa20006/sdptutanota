{"version":3,"file":"NotificationSettingsViewer.js","sourceRoot":"","sources":["../../../../src/mail-app/settings/NotificationSettingsViewer.ts"],"names":[],"mappings":"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","sourcesContent":["import m, { Children } from \"mithril\"\nimport { EntityUpdateData, isUpdateForTypeRef } from \"../../common/api/common/utils/EntityUpdateUtils.js\"\nimport { ExtendedNotificationMode } from \"../../common/native/common/generatedipc/ExtendedNotificationMode.js\"\nimport Stream from \"mithril/stream\"\nimport stream from \"mithril/stream\"\nimport { PushIdentifier, PushIdentifierTypeRef, User } from \"../../common/api/entities/sys/TypeRefs.js\"\nimport { locator } from \"../../common/api/main/CommonLocator.js\"\nimport { lang } from \"../../common/misc/LanguageViewModel.js\"\nimport { IconButton } from \"../../common/gui/base/IconButton.js\"\nimport { Icons } from \"../../common/gui/base/icons/Icons.js\"\nimport { ButtonSize } from \"../../common/gui/base/ButtonSize.js\"\nimport { isApp, isBrowser, isDesktop } from \"../../common/api/common/Env.js\"\nimport { noOp, ofClass } from \"@tutao/tutanota-utils\"\nimport { PushServiceType } from \"../../common/api/common/TutanotaConstants.js\"\nimport { mailLocator } from \"../mailLocator.js\"\nimport { UpdatableSettingsViewer } from \"../../common/settings/Interfaces.js\"\nimport { NotificationContentSelector } from \"./NotificationContentSelector.js\"\nimport { NotificationTargetsList, NotificationTargetsListAttrs } from \"../../common/settings/NotificationTargetsList.js\"\nimport { AppType } from \"../../common/misc/ClientConstants.js\"\nimport { NotFoundError } from \"../../common/api/common/error/RestError.js\"\nimport { IdentifierRow } from \"../../common/settings/IdentifierRow.js\"\nimport { DropDownSelector, type DropDownSelectorAttrs } from \"../../common/gui/base/DropDownSelector.js\"\nimport { PermissionType } from \"../../common/native/common/generatedipc/PermissionType.js\"\n\nexport class NotificationSettingsViewer implements UpdatableSettingsViewer {\n\tprivate currentIdentifier: string | null = null\n\tprivate extendedNotificationMode: ExtendedNotificationMode | null = null\n\tprivate readonly expanded: Stream<boolean>\n\tprivate readonly user: User\n\tprivate identifiers: PushIdentifier[]\n\tprivate hasNotificationPermission: boolean = true\n\tprivate receiveCalendarNotifications: boolean = true\n\n\tconstructor() {\n\t\tthis.expanded = stream<boolean>(false)\n\t\tthis.identifiers = []\n\t\tthis.user = locator.logins.getUserController().user\n\n\t\tthis.loadPushIdentifiers()\n\n\t\tif (isApp() || isDesktop()) {\n\t\t\tconst promises: Promise<any>[] = [locator.pushService.getExtendedNotificationMode()]\n\n\t\t\tif (isApp()) {\n\t\t\t\tpromises.push(\n\t\t\t\t\tlocator.systemPermissionHandler.hasPermission(PermissionType.Notification),\n\t\t\t\t\tlocator.pushService.getReceiveCalendarNotificationConfig(),\n\t\t\t\t)\n\t\t\t}\n\t\t\tPromise.all(promises).then(([extendedNotificationMode, hasPermission, canReceiveCalendarNotifications]) => {\n\t\t\t\tthis.extendedNotificationMode = extendedNotificationMode\n\t\t\t\tif (isApp()) {\n\t\t\t\t\tif (this.hasNotificationPermission !== hasPermission) this.hasNotificationPermission = hasPermission\n\t\t\t\t\tif (this.receiveCalendarNotifications !== canReceiveCalendarNotifications)\n\t\t\t\t\t\tthis.receiveCalendarNotifications = canReceiveCalendarNotifications\n\t\t\t\t}\n\t\t\t\tm.redraw()\n\t\t\t})\n\t\t}\n\t}\n\n\tprivate togglePushIdentifier(identifier: PushIdentifier) {\n\t\tidentifier.disabled = !identifier.disabled\n\t\tlocator.entityClient.update(identifier).then(() => m.redraw)\n\n\t\tif (!isBrowser() && identifier.identifier === this.currentIdentifier) {\n\t\t\tif (identifier.disabled) {\n\t\t\t\tlocator.pushService.invalidateAlarmsForUser(this.user._id)\n\t\t\t} else {\n\t\t\t\tlocator.pushService.reRegister()\n\t\t\t}\n\t\t}\n\t}\n\n\tview(): Children {\n\t\tconst rowAdd = m(\".full-width.flex-space-between.items-center.mb-s\", [\n\t\t\tlang.get(\"emailPushNotification_action\"),\n\t\t\tm(IconButton, {\n\t\t\t\ttitle: \"emailPushNotification_action\",\n\t\t\t\tclick: () => this.showAddEmailNotificationDialog(),\n\t\t\t\ticon: Icons.Add,\n\t\t\t\tsize: ButtonSize.Compact,\n\t\t\t}),\n\t\t])\n\n\t\tconst rows = this.identifiers\n\t\t\t.map((identifier) => {\n\t\t\t\tconst isCurrentDevice = (isApp() || isDesktop()) && identifier.identifier === this.currentIdentifier\n\n\t\t\t\treturn m(IdentifierRow, {\n\t\t\t\t\tname: this.identifierDisplayName(isCurrentDevice, identifier.pushServiceType, identifier.displayName),\n\t\t\t\t\tdisabled: identifier.disabled,\n\t\t\t\t\tidentifier: identifier.identifier,\n\t\t\t\t\tcurrent: isCurrentDevice,\n\t\t\t\t\tremoveClicked: () => {\n\t\t\t\t\t\tlocator.entityClient.erase(identifier).catch(ofClass(NotFoundError, noOp))\n\t\t\t\t\t},\n\t\t\t\t\tformatIdentifier: identifier.pushServiceType !== PushServiceType.EMAIL,\n\t\t\t\t\tdisableClicked: () => this.togglePushIdentifier(identifier),\n\t\t\t\t})\n\t\t\t})\n\t\t\t.sort((l, r) => +r.attrs.current - +l.attrs.current)\n\n\t\treturn m(\".fill-absolute.scroll.plr-l.pb-xl\", [\n\t\t\tm(\".flex.col\", [\n\t\t\t\tm(\".flex-space-between.items-center.mt-l.mb-s\", [m(\".h4\", lang.get(\"notificationSettings_action\"))]),\n\t\t\t\tthis.extendedNotificationMode\n\t\t\t\t\t? m(NotificationContentSelector, {\n\t\t\t\t\t\t\textendedNotificationMode: this.extendedNotificationMode,\n\t\t\t\t\t\t\tonChange: (value: ExtendedNotificationMode) => {\n\t\t\t\t\t\t\t\tlocator.pushService.setExtendedNotificationMode(value)\n\t\t\t\t\t\t\t\tthis.extendedNotificationMode = value\n\t\t\t\t\t\t\t\t// We can assume \"true\" because onChange is only triggered if permission was granted\n\t\t\t\t\t\t\t\tthis.hasNotificationPermission = true\n\t\t\t\t\t\t\t},\n\t\t\t\t\t  })\n\t\t\t\t\t: null,\n\t\t\t\tisApp() ? this.renderCalendarNotificationsDropdown() : null,\n\t\t\t\tm(NotificationTargetsList, { rows, rowAdd, onExpandedChange: this.expanded } satisfies NotificationTargetsListAttrs),\n\t\t\t]),\n\t\t])\n\t}\n\n\tprivate renderCalendarNotificationsDropdown(): Children {\n\t\treturn m(DropDownSelector, {\n\t\t\tlabel: \"receiveCalendarNotifications_label\",\n\t\t\titems: [\n\t\t\t\t{\n\t\t\t\t\tname: lang.get(\"activated_label\"),\n\t\t\t\t\tvalue: true,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: lang.get(\"deactivated_label\"),\n\t\t\t\t\tvalue: false,\n\t\t\t\t},\n\t\t\t],\n\t\t\tselectedValue: this.receiveCalendarNotifications,\n\t\t\tselectionChangedHandler: async (value) => {\n\t\t\t\tif (this.receiveCalendarNotifications !== value) {\n\t\t\t\t\tlocator.pushService.setReceiveCalendarNotificationConfig(value)\n\t\t\t\t\tthis.receiveCalendarNotifications = value\n\t\t\t\t\tif (value) {\n\t\t\t\t\t\tawait locator.pushService.reRegister()\n\t\t\t\t\t} else {\n\t\t\t\t\t\tawait locator.pushService.invalidateAlarmsForUser(this.user._id)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tdisabled: !this.hasNotificationPermission,\n\t\t\tselectedValueDisplay: !this.hasNotificationPermission ? lang.get(\"deactivated_label\") : undefined,\n\t\t} satisfies DropDownSelectorAttrs<boolean>)\n\t}\n\n\tprivate async showAddEmailNotificationDialog() {\n\t\tconst dialog = await mailLocator.addNotificationEmailDialog()\n\t\tdialog.show()\n\t}\n\n\tprivate identifierDisplayName(current: boolean, type: NumberString, displayName: string): string {\n\t\tif (current) {\n\t\t\treturn lang.get(\"pushIdentifierCurrentDevice_label\")\n\t\t} else if (displayName) {\n\t\t\treturn displayName\n\t\t} else {\n\t\t\treturn [\"Android FCM\", \"iOS\", lang.get(\"adminEmailSettings_action\"), \"Android Tutanota\"][Number(type)]\n\t\t}\n\t}\n\n\tprivate async loadPushIdentifiers() {\n\t\tthis.currentIdentifier = this.getCurrentIdentifier()\n\t\tconst list = this.user.pushIdentifierList\n\n\t\tif (list) {\n\t\t\tthis.identifiers = (await locator.entityClient.loadAll(PushIdentifierTypeRef, list.list)).filter(\n\t\t\t\t(identifier) => identifier.app === AppType.Mail || identifier.app === AppType.Integrated,\n\t\t\t) // Filter out calendar targets\n\n\t\t\tm.redraw()\n\t\t}\n\t}\n\n\tprivate getCurrentIdentifier(): string | null {\n\t\tif (isApp() || isDesktop()) {\n\t\t\tconst identifier = mailLocator.pushService.getLoadedPushIdentifier()?.identifier\n\t\t\treturn identifier ? identifier : null\n\t\t}\n\n\t\treturn null\n\t}\n\n\tasync entityEventsReceived(updates: readonly EntityUpdateData[]): Promise<void> {\n\t\tfor (let update of updates) {\n\t\t\tif (isUpdateForTypeRef(PushIdentifierTypeRef, update)) {\n\t\t\t\tawait this.loadPushIdentifiers()\n\t\t\t}\n\t\t}\n\t}\n}\n"]}