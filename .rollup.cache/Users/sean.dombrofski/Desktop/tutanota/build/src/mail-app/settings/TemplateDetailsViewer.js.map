{"version":3,"file":"TemplateDetailsViewer.js","sourceRoot":"","sources":["../../../../src/mail-app/settings/TemplateDetailsViewer.ts"],"names":[],"mappings":"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","sourcesContent":["import m, { Children } from \"mithril\"\nimport type { lazy } from \"@tutao/tutanota-utils\"\nimport { assertNotNull } from \"@tutao/tutanota-utils\"\nimport { TextField } from \"../../common/gui/base/TextField.js\"\nimport { Icons } from \"../../common/gui/base/icons/Icons\"\nimport { getLanguageCode } from \"./TemplateEditorModel\"\nimport { showTemplateEditor } from \"./TemplateEditor\"\nimport { Dialog } from \"../../common/gui/base/Dialog\"\nimport { lang, languageByCode, TranslationKey } from \"../../common/misc/LanguageViewModel\"\nimport type { EmailTemplate } from \"../../common/api/entities/tutanota/TypeRefs.js\"\nimport { TemplateGroupRootTypeRef } from \"../../common/api/entities/tutanota/TypeRefs.js\"\nimport { locator } from \"../../common/api/main/CommonLocator\"\nimport { EntityClient } from \"../../common/api/common/EntityClient\"\nimport { TEMPLATE_SHORTCUT_PREFIX } from \"../templates/model/TemplatePopupModel\"\nimport { ActionBar } from \"../../common/gui/base/ActionBar.js\"\nimport { htmlSanitizer } from \"../../common/misc/HtmlSanitizer.js\"\nimport { EntityUpdateData } from \"../../common/api/common/utils/EntityUpdateUtils.js\"\nimport { UpdatableSettingsDetailsViewer } from \"../../common/settings/Interfaces.js\"\n\nexport class TemplateDetailsViewer implements UpdatableSettingsDetailsViewer {\n\t// we're not memoizing the translated language name since this is not a proper mithril component and may stick around after a language\n\t// switch.\n\tprivate readonly sanitizedContents: Array<{ text: string; languageCodeTextId: TranslationKey }>\n\n\tconstructor(private readonly template: EmailTemplate, private readonly entityClient: EntityClient, readonly isReadOnly: lazy<boolean>) {\n\t\tthis.sanitizedContents = template.contents.map((emailTemplateContent) => ({\n\t\t\ttext: htmlSanitizer.sanitizeHTML(emailTemplateContent.text, { blockExternalContent: false, allowRelativeLinks: true }).html,\n\t\t\tlanguageCodeTextId: languageByCode[getLanguageCode(emailTemplateContent)].textId,\n\t\t}))\n\t}\n\n\treadonly renderView: UpdatableSettingsDetailsViewer[\"renderView\"] = () => {\n\t\treturn m(\"#user-viewer.fill-absolute.scroll.plr-l.pb-floating\", [this.renderTitleLine(), this.renderContent()])\n\t}\n\n\tprivate renderTitleLine(): Children {\n\t\treturn m(\".flex.mt-l.center-vertically\", [\n\t\t\tm(\".h4.text-ellipsis\", this.template.title),\n\t\t\t!this.isReadOnly()\n\t\t\t\t? m(ActionBar, {\n\t\t\t\t\t\tbuttons: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttitle: \"edit_action\",\n\t\t\t\t\t\t\t\ticon: Icons.Edit,\n\t\t\t\t\t\t\t\tclick: () => this.editTemplate(),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttitle: \"remove_action\",\n\t\t\t\t\t\t\t\ticon: Icons.Trash,\n\t\t\t\t\t\t\t\tclick: () => this.deleteTemplate(),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t  })\n\t\t\t\t: null,\n\t\t])\n\t}\n\n\tprivate renderContent(): Children {\n\t\treturn m(\"\", [\n\t\t\tm(TextField, {\n\t\t\t\tlabel: \"shortcut_label\",\n\t\t\t\tvalue: TEMPLATE_SHORTCUT_PREFIX + assertNotNull(this.template.tag, \"template without tag!\"),\n\t\t\t\tisReadOnly: true,\n\t\t\t}),\n\t\t\tthis.sanitizedContents.map(({ text, languageCodeTextId }) => {\n\t\t\t\treturn m(\".flex.flex-column\", [m(\".h4.mt-l\", lang.get(languageCodeTextId)), m(\".editor-border.text-break\", m.trust(text))])\n\t\t\t}),\n\t\t])\n\t}\n\n\tprivate async deleteTemplate(): Promise<void> {\n\t\tif (!(await Dialog.confirm(\"deleteTemplate_msg\"))) return\n\t\tawait this.entityClient.erase(this.template)\n\t}\n\n\tprivate async editTemplate() {\n\t\tconst { template } = this\n\t\tconst groupRoot = await locator.entityClient.load(TemplateGroupRootTypeRef, assertNotNull(template._ownerGroup, \"template without ownerGroup!\"))\n\t\tshowTemplateEditor(template, groupRoot)\n\t}\n\n\tentityEventsReceived(updates: ReadonlyArray<EntityUpdateData>): Promise<void> {\n\t\treturn Promise.resolve()\n\t}\n}\n"]}