{"version":3,"file":"DnsRecordTable.js","sourceRoot":"","sources":["../../../../../src/mail-app/settings/emaildomain/DnsRecordTable.ts"],"names":[],"mappings":"AAEA,OAAO,CAAe,MAAM,SAAS,CAAA;AACrC,OAAO,EAAe,KAAK,EAAE,MAAM,mCAAmC,CAAA;AAQtE,MAAM,CAAC,MAAM,cAAc,GAA+C,MAAM,CAAC,MAAM,CAAC;IACvF,4CAAkC,mCAAwB;IAC1D,iDAAuC,qCAAyB;IAChE,oDAA0C,yCAA2B;IACrE,mDAAyC,qCAAyB;IAClE,uDAA6C,yCAA2B;IACxE,oDAA0C,qCAAyB;CACnE,CAAC,CAAA;AAEF,MAAM,UAAU,oBAAoB,CAAC,OAAoB;IACxD,OAAO,CAAC,CAAC,KAAK,EAAE;QACf,aAAa,EAAE,CAAC,YAAY,EAAE,2BAA2B,CAAC;QAC1D,YAAY,EAAE,kGAAwC;QACtD,sBAAsB,EAAE,KAAK;QAC7B,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;YAC1B,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,cAAc,CAAC,CAAC,CAAC,IAAqB,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC;SAC5H,CAAC,CAAC;KACH,CAAC,CAAA;AACH,CAAC","sourcesContent":["import { DnsRecordType } from \"../../../common/api/common/TutanotaConstants.js\"\nimport { DnsRecord } from \"../../../common/api/entities/sys/TypeRefs.js\"\nimport m, { Children } from \"mithril\"\nimport { ColumnWidth, Table } from \"../../../common/gui/base/Table.js\"\n\nconst enum ActualDnsRecordType {\n\tMX = \"MX\",\n\tTXT = \"TXT\",\n\tCNAME = \"CNAME\",\n}\n\nexport const DnsRecordTable: Record<DnsRecordType, ActualDnsRecordType> = Object.freeze({\n\t[DnsRecordType.DNS_RECORD_TYPE_MX]: ActualDnsRecordType.MX,\n\t[DnsRecordType.DNS_RECORD_TYPE_TXT_SPF]: ActualDnsRecordType.TXT,\n\t[DnsRecordType.DNS_RECORD_TYPE_CNAME_DKIM]: ActualDnsRecordType.CNAME,\n\t[DnsRecordType.DNS_RECORD_TYPE_TXT_DMARC]: ActualDnsRecordType.TXT,\n\t[DnsRecordType.DNS_RECORD_TYPE_CNAME_MTA_STS]: ActualDnsRecordType.CNAME,\n\t[DnsRecordType.DNS_RECORD_TYPE_TXT_VERIFY]: ActualDnsRecordType.TXT,\n})\n\nexport function createDnsRecordTable(records: DnsRecord[]): Children {\n\treturn m(Table, {\n\t\tcolumnHeading: [\"type_label\", \"dnsRecordHostOrName_label\"],\n\t\tcolumnWidths: [ColumnWidth.Small, ColumnWidth.Largest],\n\t\tshowActionButtonColumn: false,\n\t\tlines: records.map((r) => ({\n\t\t\tcells: () => [{ main: DnsRecordTable[r.type as DnsRecordType] }, { main: r.subdomain ? r.subdomain : \"@\", info: [r.value] }],\n\t\t})),\n\t})\n}\n"]}