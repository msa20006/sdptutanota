{"version":3,"file":"TemplateEditorModel.js","sourceRoot":"","sources":["../../../../src/mail-app/settings/TemplateEditorModel.ts"],"names":[],"mappings":"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","sourcesContent":["import type { Language, LanguageCode, Translation, TranslationKey } from \"../../common/misc/LanguageViewModel\"\nimport { lang, languageByCode, languages } from \"../../common/misc/LanguageViewModel\"\nimport type { EmailTemplateContent } from \"../../common/api/entities/tutanota/TypeRefs.js\"\nimport type { EmailTemplate } from \"../../common/api/entities/tutanota/TypeRefs.js\"\nimport { createEmailTemplateContent } from \"../../common/api/entities/tutanota/TypeRefs.js\"\nimport { clone, downcast } from \"@tutao/tutanota-utils\"\nimport type { TemplateGroupRoot } from \"../../common/api/entities/tutanota/TypeRefs.js\"\nimport { createEmailTemplate, EmailTemplateTypeRef } from \"../../common/api/entities/tutanota/TypeRefs.js\"\nimport stream from \"mithril/stream\"\nimport { difference, getFirstOrThrow, remove } from \"@tutao/tutanota-utils\"\nimport { getElementId, isSameId } from \"../../common/api/common/utils/EntityUtils\"\nimport type { EntityClient } from \"../../common/api/common/EntityClient\"\nimport { UserError } from \"../../common/api/main/UserError\"\nimport Stream from \"mithril/stream\"\n\nexport class TemplateEditorModel {\n\ttemplate: EmailTemplate\n\ttitle: Stream<string>\n\ttag: Stream<string>\n\tselectedContent: Stream<EmailTemplateContent>\n\t_templateGroupRoot: TemplateGroupRoot\n\t_entityClient: EntityClient\n\t_contentProvider: (() => string) | null\n\n\tconstructor(template: EmailTemplate | null, templateGroupRoot: TemplateGroupRoot, entityClient: EntityClient) {\n\t\tthis.template = template ? clone(template) : createEmailTemplate({ tag: \"\", title: \"\", contents: [] })\n\t\tthis.title = stream(\"\")\n\t\tthis.tag = stream(\"\")\n\t\tconst contents = this.template.contents\n\t\tthis.selectedContent = stream(contents.length > 0 ? getFirstOrThrow(contents) : this.createContent(lang.code))\n\t\tthis._templateGroupRoot = templateGroupRoot\n\t\tthis._entityClient = entityClient\n\t\tthis._contentProvider = null\n\t}\n\n\tisUpdate(): boolean {\n\t\treturn this.template._id != null\n\t}\n\n\tsetContentProvider(provider: () => string) {\n\t\tthis._contentProvider = provider\n\t}\n\n\tcreateContent(languageCode: LanguageCode): EmailTemplateContent {\n\t\tconst emailTemplateContent = createEmailTemplateContent({\n\t\t\tlanguageCode: languageCode,\n\t\t\ttext: \"\",\n\t\t})\n\t\tthis.template.contents.push(emailTemplateContent)\n\t\treturn emailTemplateContent\n\t}\n\n\tupdateContent(): void {\n\t\tconst selectedContent = this.selectedContent()\n\n\t\tif (selectedContent && this._contentProvider) {\n\t\t\tselectedContent.text = this._contentProvider()\n\t\t}\n\t}\n\n\tremoveContent(): void {\n\t\tconst content = this.selectedContent()\n\n\t\tif (content) {\n\t\t\tremove(this.template.contents, content)\n\t\t}\n\t}\n\n\t/**\n\t * Returns all languages that are available for creating new template content. Returns them in alphabetic order sorted by name.\n\t * @returns {Array<{name: string, value: LanguageCode}>}\n\t */\n\tgetAdditionalLanguages(): Array<Language> {\n\t\treturn difference(languages, this.getAddedLanguages(), (lang1, lang2) => lang1.code === lang2.code)\n\t}\n\n\tgetAddedLanguages(): Array<Language> {\n\t\treturn this.template.contents.map((content) => languageByCode[getLanguageCode(content)])\n\t}\n\n\ttagAlreadyExists(): Promise<boolean> {\n\t\tif (this.template._id) {\n\t\t\t// the current edited template should not be included in find()\n\t\t\treturn this._entityClient.loadAll(EmailTemplateTypeRef, this._templateGroupRoot.templates).then((allTemplates) => {\n\t\t\t\tconst filteredTemplates = allTemplates.filter((template) => !isSameId(getElementId(this.template), getElementId(template)))\n\t\t\t\treturn filteredTemplates.some((template) => template.tag.toLowerCase() === this.template.tag.toLowerCase())\n\t\t\t})\n\t\t} else {\n\t\t\treturn this._entityClient.loadAll(EmailTemplateTypeRef, this._templateGroupRoot.templates).then((allTemplates) => {\n\t\t\t\treturn allTemplates.some((template) => template.tag.toLowerCase() === this.template.tag.toLowerCase())\n\t\t\t})\n\t\t}\n\t}\n\n\tsave(): Promise<any> {\n\t\tif (!this.title()) {\n\t\t\treturn Promise.reject(new UserError(\"emptyTitle_msg\"))\n\t\t}\n\n\t\tif (!this.tag()) {\n\t\t\treturn Promise.reject(new UserError(\"emptyShortcut_msg\"))\n\t\t}\n\n\t\tthis.updateContent()\n\t\tthis.template.title = this.title().trim()\n\t\tthis.template.tag = this.tag().trim()\n\t\treturn this.tagAlreadyExists().then(async (exists) => {\n\t\t\tif (exists) {\n\t\t\t\treturn Promise.reject(new UserError(\"templateShortcutExists_msg\"))\n\t\t\t} else if (this.template._id) {\n\t\t\t\treturn this._entityClient.update(this.template)\n\t\t\t} else {\n\t\t\t\tthis.template._ownerGroup = this._templateGroupRoot._id\n\t\t\t\treturn this._entityClient.setup(this._templateGroupRoot.templates, this.template)\n\t\t\t}\n\t\t})\n\t}\n}\n\nexport function getLanguageCode(content: EmailTemplateContent): LanguageCode {\n\treturn downcast(content.languageCode)\n}\n\nexport function getLanguageName(content: EmailTemplateContent): TranslationKey {\n\treturn languageByCode[getLanguageCode(content)].textId\n}\n"]}