{"version":3,"file":"AddDomainWizard.js","sourceRoot":"","sources":["../../../../../src/mail-app/settings/emaildomain/AddDomainWizard.ts"],"names":[],"mappings":"AAAA,OAAO,MAAM,MAAM,gBAAgB,CAAA;AAGnC,OAAO,EAAE,eAAe,EAAE,MAAM,8CAA8C,CAAA;AAG9E,OAAO,EAAE,qBAAqB,EAAE,0BAA0B,EAAE,MAAM,yBAAyB,CAAA;AAC3F,OAAO,EAAE,eAAe,EAAE,MAAM,oBAAoB,CAAA;AACpD,OAAO,EAAE,mBAAmB,EAAE,wBAAwB,EAAE,MAAM,uBAAuB,CAAA;AACrF,OAAO,EAAE,oBAAoB,EAAE,yBAAyB,EAAE,MAAM,wBAAwB,CAAA;AACxF,OAAO,EAAE,eAAe,EAAE,oBAAoB,EAAE,MAAM,mBAAmB,CAAA;AACzE,OAAO,EAAE,kBAAkB,EAAE,iBAAiB,EAAE,MAAM,0CAA0C,CAAA;AAChG,OAAO,EAAE,gBAAgB,EAAE,MAAM,gCAAgC,CAAA;AAIjE,gBAAgB,EAAE,CAAA;AASlB,uDAAuD;AACvD,MAAM,UAAU,mBAAmB,CAAC,MAAc,EAAE,YAA0B,EAAE,qBAA4C;IAC3H,IAAI,wBAAwB,GAAY,KAAK,CAAA;IAE7C,MAAM,UAAU,GAAkB;QACjC,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC;QACtB,YAAY,EAAE,YAAY;QAC1B,sCAAsC;QACtC,uDAAuD;QACvD,0BAA0B,EAAE,eAAe,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,iDAAuC,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC;QACxH,kBAAkB,EAAE;YACnB,KAAK,EAAE,qBAAqB;YAC5B,QAAQ,EAAE,wBAAwB;YAClC,UAAU,EAAE,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC,wBAAwB,GAAG,WAAW,CAAC;SACrE;QACD,YAAY,EAAE,IAAI,eAAe,CAAC,MAAM,CAAC;KACzC,CAAA;IAED,MAAM,WAAW,GAAG;QACnB,iBAAiB,CAAC,eAAe,EAAE,IAAI,oBAAoB,CAAC,UAAU,CAAC,CAAC;QACxE,iBAAiB,CAAC,mBAAmB,EAAE,IAAI,wBAAwB,CAAC,UAAU,CAAC,CAAC;QAChF,iBAAiB,CAAC,qBAAqB,EAAE,IAAI,0BAA0B,CAAC,UAAU,CAAC,CAAC;QACpF,iBAAiB,CAAC,oBAAoB,EAAE,IAAI,yBAAyB,CAAC,UAAU,CAAC,CAAC;KAClF,CAAA;IACD,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;QAC9B,MAAM,aAAa,GAAG,kBAAkB,CACvC,UAAU,EACV,WAAW,EACX,GAAG,EAAE;YACJ,qBAAqB,CAAC,OAAO,EAAE,CAAA;YAC/B,OAAO,EAAE,CAAA;YACT,OAAO,OAAO,CAAC,OAAO,EAAE,CAAA;QACzB,CAAC,yCAED,CAAA;QACD,MAAM,MAAM,GAAG,aAAa,CAAC,MAAM,CAAA;QACnC,MAAM,WAAW,GAAG,aAAa,CAAC,KAAK,CAAA;QACvC,MAAM,CAAC,IAAI,EAAE,CAAA;QAEb,sHAAsH;QACtH,IAAI,MAAM,CAAC,MAAM,EAAE,CAAC;YACnB,WAAW,CAAC,yBAAyB,EAAE,CAAA;YACvC,WAAW,CAAC,yBAAyB,EAAE,CAAA;YAEvC,IAAI,WAAW,CAAC,WAAW,EAAE,CAAC;gBAC7B,oEAAoE;gBACpE,WAAW,CAAC,WAAW,CAAC,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;oBAC9D,IAAI,KAAK;wBAAE,WAAW,CAAC,yBAAyB,EAAE,CAAA;gBACnD,CAAC,CAAC,CAAA;YACH,CAAC;QACF,CAAC;IACF,CAAC,CAAC,CAAA;AACH,CAAC","sourcesContent":["import stream from \"mithril/stream\"\nimport Stream from \"mithril/stream\"\nimport type { CustomerInfo, DnsRecord } from \"../../../common/api/entities/sys/TypeRefs.js\"\nimport { createDnsRecord } from \"../../../common/api/entities/sys/TypeRefs.js\"\nimport { DnsRecordType } from \"../../../common/api/common/TutanotaConstants\"\nimport type { MailAddressTableAttrs } from \"../../../common/settings/mailaddress/MailAddressTable.js\"\nimport { AddEmailAddressesPage, AddEmailAddressesPageAttrs } from \"./AddEmailAddressesPage\"\nimport { DomainDnsStatus } from \"../DomainDnsStatus\"\nimport { VerifyOwnershipPage, VerifyOwnershipPageAttrs } from \"./VerifyOwnershipPage\"\nimport { VerifyDnsRecordsPage, VerifyDnsRecordsPageAttrs } from \"./VerifyDnsRecordsPage\"\nimport { EnterDomainPage, EnterDomainPageAttrs } from \"./EnterDomainPage\"\nimport { createWizardDialog, wizardPageWrapper } from \"../../../common/gui/base/WizardDialog.js\"\nimport { assertMainOrNode } from \"../../../common/api/common/Env\"\nimport { MailAddressTableModel } from \"../../../common/settings/mailaddress/MailAddressTableModel.js\"\nimport { DialogType } from \"../../../common/gui/base/Dialog.js\"\n\nassertMainOrNode()\nexport type AddDomainData = {\n\tdomain: Stream<string>\n\tcustomerInfo: CustomerInfo\n\texpectedVerificationRecord: DnsRecord\n\teditAliasFormAttrs: MailAddressTableAttrs\n\tdomainStatus: DomainDnsStatus\n}\n\n/** Shows a wizard for adding a custom email domain. */\nexport function showAddDomainWizard(domain: string, customerInfo: CustomerInfo, mailAddressTableModel: MailAddressTableModel): Promise<void> {\n\tlet mailAddressTableExpanded: boolean = false\n\n\tconst domainData: AddDomainData = {\n\t\tdomain: stream(domain),\n\t\tcustomerInfo: customerInfo,\n\t\t// will be filled oncreate by the page\n\t\t// not actually spf, but the type TXT only matters here\n\t\texpectedVerificationRecord: createDnsRecord({ subdomain: null, type: DnsRecordType.DNS_RECORD_TYPE_TXT_SPF, value: \"\" }),\n\t\teditAliasFormAttrs: {\n\t\t\tmodel: mailAddressTableModel,\n\t\t\texpanded: mailAddressTableExpanded,\n\t\t\tonExpanded: (newExpanded) => (mailAddressTableExpanded = newExpanded),\n\t\t},\n\t\tdomainStatus: new DomainDnsStatus(domain),\n\t}\n\n\tconst wizardPages = [\n\t\twizardPageWrapper(EnterDomainPage, new EnterDomainPageAttrs(domainData)),\n\t\twizardPageWrapper(VerifyOwnershipPage, new VerifyOwnershipPageAttrs(domainData)),\n\t\twizardPageWrapper(AddEmailAddressesPage, new AddEmailAddressesPageAttrs(domainData)),\n\t\twizardPageWrapper(VerifyDnsRecordsPage, new VerifyDnsRecordsPageAttrs(domainData)),\n\t]\n\treturn new Promise((resolve) => {\n\t\tconst wizardBuilder = createWizardDialog(\n\t\t\tdomainData,\n\t\t\twizardPages,\n\t\t\t() => {\n\t\t\t\tmailAddressTableModel.dispose()\n\t\t\t\tresolve()\n\t\t\t\treturn Promise.resolve()\n\t\t\t},\n\t\t\tDialogType.EditLarge,\n\t\t)\n\t\tconst wizard = wizardBuilder.dialog\n\t\tconst wizardAttrs = wizardBuilder.attrs\n\t\twizard.show()\n\n\t\t// we can skip the next two pages because we assume that the domain is already assigned if it was passed to the wizard\n\t\tif (domain.length) {\n\t\t\twizardAttrs.goToNextPageOrCloseWizard()\n\t\t\twizardAttrs.goToNextPageOrCloseWizard()\n\n\t\t\tif (wizardAttrs.currentPage) {\n\t\t\t\t// skip add email address page if an email address has been assigned\n\t\t\t\twizardAttrs.currentPage.attrs.nextAction(false).then((ready) => {\n\t\t\t\t\tif (ready) wizardAttrs.goToNextPageOrCloseWizard()\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t})\n}\n\nexport type ValidatedDnSRecord = {\n\trecord: DnsRecord\n\thelpInfo: string[]\n}\n"]}