{"version":3,"file":"MailViewer.js","sourceRoot":"","sources":["../../../../../src/mail-app/mail/view/MailViewer.ts"],"names":[],"mappings":"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","sourcesContent":["import { px, size } from \"../../../common/gui/size\"\nimport m, { Children, Component, Vnode } from \"mithril\"\nimport stream from \"mithril/stream\"\nimport { windowFacade, windowSizeListener } from \"../../../common/misc/WindowFacade\"\nimport { FeatureType, InboxRuleType, Keys, MailSetKind, SpamRuleFieldType, SpamRuleType } from \"../../../common/api/common/TutanotaConstants\"\nimport { File as TutanotaFile, Mail } from \"../../../common/api/entities/tutanota/TypeRefs.js\"\nimport { lang } from \"../../../common/misc/LanguageViewModel\"\nimport { assertMainOrNode } from \"../../../common/api/common/Env\"\nimport { assertNonNull, assertNotNull, defer, DeferredObject, noOp, ofClass } from \"@tutao/tutanota-utils\"\nimport { IconMessageBox } from \"../../../common/gui/base/ColumnEmptyMessageBox\"\nimport type { Shortcut } from \"../../../common/misc/KeyManager\"\nimport { keyManager } from \"../../../common/misc/KeyManager\"\nimport { Icon, progressIcon } from \"../../../common/gui/base/Icon\"\nimport { Icons } from \"../../../common/gui/base/icons/Icons\"\nimport { theme } from \"../../../common/gui/theme\"\nimport { client } from \"../../../common/misc/ClientDetector\"\nimport { styles } from \"../../../common/gui/styles\"\nimport { DropdownButtonAttrs, showDropdownAtPosition } from \"../../../common/gui/base/Dropdown.js\"\nimport { isTutanotaTeamMail, replaceCidsWithInlineImages } from \"./MailGuiUtils\"\nimport { getCoordsOfMouseOrTouchEvent } from \"../../../common/gui/base/GuiUtils\"\nimport { copyToClipboard } from \"../../../common/misc/ClipboardUtils\"\nimport { ContentBlockingStatus, MailViewerViewModel } from \"./MailViewerViewModel\"\nimport { createEmailSenderListElement } from \"../../../common/api/entities/sys/TypeRefs.js\"\nimport { UserError } from \"../../../common/api/main/UserError\"\nimport { showUserError } from \"../../../common/misc/ErrorHandlerImpl\"\nimport { isNewMailActionAvailable } from \"../../../common/gui/nav/NavFunctions\"\nimport { CancelledError } from \"../../../common/api/common/error/CancelledError\"\nimport { MailViewerHeader } from \"./MailViewerHeader.js\"\nimport { editDraft, showHeaderDialog, showSourceDialog } from \"./MailViewerUtils.js\"\nimport { ToggleButton } from \"../../../common/gui/base/buttons/ToggleButton.js\"\nimport { locator } from \"../../../common/api/main/CommonLocator.js\"\nimport { PinchZoom } from \"../../../common/gui/PinchZoom.js\"\nimport { responsiveCardHMargin, responsiveCardHPadding } from \"../../../common/gui/cards.js\"\nimport { Dialog } from \"../../../common/gui/base/Dialog.js\"\nimport { createNewContact } from \"../../../common/mailFunctionality/SharedMailUtils.js\"\nimport { getExistingRuleForType } from \"../model/MailUtils.js\"\n\nassertMainOrNode()\n\ntype MailAddressAndName = {\n\tname: string\n\taddress: string\n}\n\nexport type MailViewerAttrs = {\n\tviewModel: MailViewerViewModel\n\tisPrimary: boolean\n\t/**\n\t * Mail body might contain blockquotes that we want to collapse in some cases (e.g. the thread is visible in conversation anyway) or expand in other\n\t * cases (e.g. if it's a single/the first email in the conversation).\n\t *\n\t */\n\tdefaultQuoteBehavior: \"collapse\" | \"expand\"\n}\n\n/**\n * The MailViewer displays a mail. The mail body is loaded asynchronously.\n *\n * The viewer has a longer lifecycle than viewModel so we need to be careful about the state.\n */\nexport class MailViewer implements Component<MailViewerAttrs> {\n\t/** it is set after we measured mail body element */\n\tprivate bodyLineHeight: number | null = null\n\n\t/**\n\t * Delay the display of the progress spinner in main body view for a short time to suppress it when we are switching between cached emails\n\t * and we are just sanitizing\n\t */\n\tprivate delayProgressSpinner = true\n\n\tprivate readonly resizeListener: windowSizeListener\n\tprivate resizeObserverViewport: ResizeObserver | null = null // needed to detect orientation change to recreate pinchzoom at the right time\n\tprivate resizeObserverZoomable: ResizeObserver | null = null // needed to recreate pinchzoom e.g. when loading images\n\n\tprivate viewModel!: MailViewerViewModel\n\tprivate pinchZoomable: PinchZoom | null = null\n\tprivate readonly shortcuts: Array<Shortcut>\n\n\tprivate scrollDom: HTMLElement | null = null\n\n\tprivate domBodyDeferred: DeferredObject<HTMLElement> = defer()\n\tprivate domBody: HTMLElement | null = null\n\n\tprivate shadowDomRoot: ShadowRoot | null = null\n\tprivate shadowDomMailContent: HTMLElement | null = null\n\tprivate currentlyRenderedMailBody: DocumentFragment | null = null\n\tprivate lastContentBlockingStatus: ContentBlockingStatus | null = null\n\n\tprivate loadAllListener = stream()\n\t/** for block quotes in mail bodies, whether to display quote before user interaction\n\t * is \"none\" until we render once */\n\tprivate currentQuoteBehavior: \"none\" | \"collapse\" | \"expand\" = \"none\"\n\t/** for block quotes in mail bodies, whether to display placeholder or original quote */\n\tprivate quoteState: \"noquotes\" | \"unset\" | \"collapsed\" | \"expanded\" = \"unset\"\n\n\t/** most recent resize animation frame request ID */\n\tprivate resizeRaf: number | undefined\n\n\tconstructor(vnode: Vnode<MailViewerAttrs>) {\n\t\tthis.setViewModel(vnode.attrs.viewModel, vnode.attrs.isPrimary)\n\n\t\tthis.resizeListener = () => this.domBodyDeferred.promise.then((dom) => this.updateLineHeight(dom))\n\n\t\tthis.shortcuts = this.setupShortcuts(vnode.attrs)\n\t}\n\n\toncreate({ attrs }: Vnode<MailViewerAttrs>) {\n\t\tif (attrs.isPrimary) {\n\t\t\tkeyManager.registerShortcuts(this.shortcuts)\n\t\t}\n\t\twindowFacade.addResizeListener(this.resizeListener)\n\t}\n\n\tonremove({ attrs }: Vnode<MailViewerAttrs>) {\n\t\twindowFacade.removeResizeListener(this.resizeListener)\n\t\tif (this.resizeObserverZoomable) {\n\t\t\tthis.resizeObserverZoomable.disconnect()\n\t\t}\n\t\tif (this.resizeObserverViewport) {\n\t\t\tthis.resizeObserverViewport.disconnect()\n\t\t}\n\t\tthis.pinchZoomable?.remove() // remove the listeners\n\t\tthis.clearDomBody()\n\t\tif (attrs.isPrimary) {\n\t\t\tkeyManager.unregisterShortcuts(this.shortcuts)\n\t\t}\n\t}\n\n\tprivate setViewModel(viewModel: MailViewerViewModel, isPrimary: boolean) {\n\t\t// Figuring out whether we have a new email assigned.\n\t\tconst oldViewModel = this.viewModel\n\t\tthis.viewModel = viewModel\n\t\tif (this.viewModel !== oldViewModel) {\n\t\t\tthis.loadAllListener.end(true)\n\t\t\tthis.loadAllListener = this.viewModel.loadCompleteNotification.map(async () => {\n\t\t\t\t// streams are pretty much synchronous, so we could be in the middle of a redraw here and mithril does not just schedule another redraw, it\n\t\t\t\t// will error out so before calling m.redraw.sync() we want to make sure that we are not inside a redraw by just scheduling a microtask with\n\t\t\t\t// this simple await.\n\t\t\t\tawait Promise.resolve()\n\t\t\t\t// Wait for mail body to be redrawn before replacing images\n\t\t\t\tm.redraw.sync()\n\t\t\t\tawait this.replaceInlineImages()\n\t\t\t\tm.redraw()\n\t\t\t})\n\n\t\t\tthis.lastContentBlockingStatus = null\n\t\t\tthis.delayProgressSpinner = true\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.delayProgressSpinner = false\n\t\t\t\tm.redraw()\n\t\t\t}, 50)\n\t\t}\n\t}\n\n\tview(vnode: Vnode<MailViewerAttrs>): Children {\n\t\tthis.handleContentBlockingOnRender()\n\n\t\treturn [\n\t\t\tm(\".mail-viewer.overflow-x-hidden\", [\n\t\t\t\tthis.renderMailHeader(vnode.attrs),\n\t\t\t\tthis.renderMailSubject(vnode.attrs),\n\t\t\t\tm(\n\t\t\t\t\t\".flex-grow.scroll-x.pt.pb.border-radius-big\" + (this.viewModel.isContrastFixNeeded() ? \".bg-white.content-black\" : \" \"),\n\t\t\t\t\t{\n\t\t\t\t\t\tclass: responsiveCardHPadding(),\n\t\t\t\t\t\toncreate: (vnode) => {\n\t\t\t\t\t\t\tthis.scrollDom = vnode.dom as HTMLElement\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tthis.renderMailBodySection(vnode.attrs),\n\t\t\t\t),\n\t\t\t\tthis.renderQuoteExpanderButton(),\n\t\t\t]),\n\t\t]\n\t}\n\n\tprivate renderMailSubject(attrs: MailViewerAttrs) {\n\t\treturn m(\n\t\t\t\"h4.font-weight-600.mt.mb.text-break.selectable.\" + responsiveCardHMargin(),\n\t\t\t{\n\t\t\t\t\"data-testid\": `h:${lang.getTestId(\"subject_label\")}`,\n\t\t\t},\n\t\t\tattrs.viewModel.getSubject(),\n\t\t)\n\t}\n\n\t/**\n\t * important: must be called after rendering the mail body part so that {@link quoteState} is set correctly.\n\t * The logic here relies on the fact that lifecycle methods will be called after body section lifecycle methods.\n\t */\n\tprivate renderQuoteExpanderButton() {\n\t\tconst buttonHeight = 24\n\t\treturn m(\n\t\t\t\".abs.flex.justify-center.full-width\",\n\t\t\t{\n\t\t\t\tstyle: {\n\t\t\t\t\t// +1 for the border\n\t\t\t\t\tbottom: px(-(buttonHeight / 2 + 1)),\n\t\t\t\t\tdisplay: \"hidden\",\n\t\t\t\t},\n\t\t\t\toncreate: ({ dom }) => {\n\t\t\t\t\t;(dom as HTMLElement).style.display = this.quoteState === \"noquotes\" ? \"none\" : \"\"\n\t\t\t\t},\n\t\t\t\tonupdate: ({ dom }) => {\n\t\t\t\t\t;(dom as HTMLElement).style.display = this.quoteState === \"noquotes\" ? \"none\" : \"\"\n\t\t\t\t},\n\t\t\t},\n\t\t\tm(\n\t\t\t\t// needs flex for correct height\n\t\t\t\t\".flex\",\n\t\t\t\t{\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tborderRadius: \"25%\",\n\t\t\t\t\t\tborder: `1px solid ${theme.list_border}`,\n\t\t\t\t\t\tbackgroundColor: theme.content_bg,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tm(ToggleButton, {\n\t\t\t\t\ticon: Icons.More,\n\t\t\t\t\ttitle: \"showText_action\",\n\t\t\t\t\ttoggled: this.shouldDisplayCollapsedQuotes(),\n\t\t\t\t\tonToggled: () => {\n\t\t\t\t\t\tthis.quoteState = this.shouldDisplayCollapsedQuotes() ? \"collapsed\" : \"expanded\"\n\t\t\t\t\t\tif (this.shadowDomRoot) this.updateCollapsedQuotes(this.shadowDomRoot, this.shouldDisplayCollapsedQuotes())\n\t\t\t\t\t},\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\theight: \"24px\",\n\t\t\t\t\t\twidth: px(size.button_height_compact),\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t),\n\t\t)\n\t}\n\n\tprivate handleContentBlockingOnRender() {\n\t\tif (this.lastContentBlockingStatus != null && this.viewModel.getContentBlockingStatus() != this.lastContentBlockingStatus) {\n\t\t\tPromise.resolve().then(async () => {\n\t\t\t\t// Wait for new mail body to be rendered before replacing images. Probably not necessary anymore as we already schedule it after the render\n\t\t\t\t// but better be safe.\n\t\t\t\tm.redraw.sync()\n\t\t\t\tawait this.replaceInlineImages()\n\t\t\t})\n\t\t}\n\t\tthis.lastContentBlockingStatus = this.viewModel.getContentBlockingStatus()\n\t}\n\n\tprivate renderMailHeader(attrs: MailViewerAttrs) {\n\t\treturn m(MailViewerHeader, {\n\t\t\tviewModel: this.viewModel,\n\t\t\tcreateMailAddressContextButtons: this.createMailAddressContextButtons.bind(this),\n\t\t\tisPrimary: attrs.isPrimary,\n\t\t\timportFile: (file: TutanotaFile) => this.handleAttachmentImport(file),\n\t\t})\n\t}\n\n\tonbeforeupdate(vnode: Vnode<MailViewerAttrs>): boolean | void {\n\t\t// Setting viewModel here to have viewModel that we will use for render already and be able to make a decision\n\t\t// about skipping rendering\n\t\tthis.setViewModel(vnode.attrs.viewModel, vnode.attrs.isPrimary)\n\t\t// We skip rendering progress indicator when switching between emails.\n\t\t// However if we already loaded the mail then we can just render it.\n\t\tconst shouldSkipRender = this.viewModel.isLoading() && this.delayProgressSpinner\n\t\treturn !shouldSkipRender\n\t}\n\n\tprivate renderMailBodySection(attrs: MailViewerAttrs): Children {\n\t\tif (this.viewModel.didErrorsOccur()) {\n\t\t\treturn m(IconMessageBox, {\n\t\t\t\tmessage: \"corrupted_msg\",\n\t\t\t\ticon: Icons.Warning,\n\t\t\t\tcolor: theme.content_message_bg,\n\t\t\t})\n\t\t}\n\n\t\tconst sanitizedMailBody = this.viewModel.getSanitizedMailBody()\n\n\t\t// Do not render progress spinner or mail body while we are animating.\n\t\tif (this.viewModel.shouldDelayRendering()) {\n\t\t\treturn null\n\t\t} else if (sanitizedMailBody != null) {\n\t\t\treturn this.renderMailBody(sanitizedMailBody, attrs)\n\t\t} else if (this.viewModel.isLoading()) {\n\t\t\treturn this.renderLoadingIcon()\n\t\t} else {\n\t\t\t// The body failed to load, just show blank body because there is a banner\n\t\t\treturn null\n\t\t}\n\t}\n\n\tprivate renderMailBody(sanitizedMailBody: DocumentFragment, attrs: MailViewerAttrs): Children {\n\t\treturn m(\"#mail-body\", {\n\t\t\t// key to avoid mithril reusing the dom element when it should switch the rendering the loading spinner\n\t\t\tkey: \"mailBody\",\n\t\t\toncreate: (vnode) => {\n\t\t\t\tconst dom = vnode.dom as HTMLElement\n\t\t\t\tthis.setDomBody(dom)\n\t\t\t\tthis.updateLineHeight(dom)\n\t\t\t\tthis.renderShadowMailBody(sanitizedMailBody, attrs, vnode.dom as HTMLElement)\n\t\t\t\tif (client.isMobileDevice()) {\n\t\t\t\t\tthis.resizeObserverViewport?.disconnect()\n\t\t\t\t\tthis.resizeObserverViewport = new ResizeObserver((entries) => {\n\t\t\t\t\t\tif (this.pinchZoomable) {\n\t\t\t\t\t\t\t// recreate if the orientation of the device changes -> size of the viewport / mail-body changes\n\t\t\t\t\t\t\tthis.createPinchZoom(this.pinchZoomable.getZoomable(), vnode.dom as HTMLElement)\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\tthis.resizeObserverViewport.observe(vnode.dom as HTMLElement)\n\t\t\t\t}\n\t\t\t},\n\t\t\tonupdate: (vnode) => {\n\t\t\t\tconst dom = vnode.dom as HTMLElement\n\t\t\t\tthis.setDomBody(dom)\n\n\t\t\t\t// Only measure and update line height once.\n\t\t\t\t// BUT we need to do in from onupdate too if we swap mailViewer but mithril does not realize\n\t\t\t\t// that it's a different vnode so oncreate might not be called.\n\t\t\t\tif (!this.bodyLineHeight) {\n\t\t\t\t\tthis.updateLineHeight(vnode.dom as HTMLElement)\n\t\t\t\t}\n\n\t\t\t\tif (this.currentlyRenderedMailBody !== sanitizedMailBody) this.renderShadowMailBody(sanitizedMailBody, attrs, vnode.dom as HTMLElement)\n\t\t\t\t// If the quote behavior changes (e.g. after loading is finished) we should update the quotes.\n\t\t\t\t// If we already rendered it correctly it will already be set in renderShadowMailBody() so we will avoid doing it twice.\n\t\t\t\tif (this.currentQuoteBehavior !== attrs.defaultQuoteBehavior) {\n\t\t\t\t\tthis.updateCollapsedQuotes(assertNotNull(this.shadowDomRoot), attrs.defaultQuoteBehavior === \"expand\")\n\t\t\t\t}\n\t\t\t\tthis.currentQuoteBehavior = attrs.defaultQuoteBehavior\n\n\t\t\t\tif (client.isMobileDevice() && !this.pinchZoomable && this.shadowDomMailContent) {\n\t\t\t\t\tthis.createPinchZoom(this.shadowDomMailContent, vnode.dom as HTMLElement)\n\t\t\t\t}\n\t\t\t},\n\t\t\tonbeforeremove: () => {\n\t\t\t\t// Clear dom body in case there will be a new one, we want promise to be up-to-date\n\t\t\t\tthis.clearDomBody()\n\t\t\t},\n\t\t\tonsubmit: (event: Event) => {\n\t\t\t\t// use the default confirm dialog here because the submit can not be done async\n\t\t\t\tif (!confirm(lang.get(\"reallySubmitContent_msg\"))) {\n\t\t\t\t\tevent.preventDefault()\n\t\t\t\t}\n\t\t\t},\n\t\t\tstyle: {\n\t\t\t\t\"line-height\": this.bodyLineHeight ? this.bodyLineHeight.toString() : size.line_height,\n\t\t\t\t\"transform-origin\": \"top left\",\n\t\t\t},\n\t\t})\n\t}\n\n\tprivate createPinchZoom(zoomable: HTMLElement, viewport: HTMLElement) {\n\t\t// the PinchZoom class does not allow a changing zoomable rect size (mail body content). When we show previously unloaded images the size\n\t\t// of the mail body changes. So we have to create a new PinchZoom object\n\t\tthis.pinchZoomable?.remove()\n\n\t\tthis.pinchZoomable = new PinchZoom(zoomable, viewport, true, (e, target) => {\n\t\t\tthis.handleAnchorClick(e, target, true)\n\t\t})\n\t}\n\n\tprivate updateCollapsedQuotes(dom: ParentNode, showQuote: boolean) {\n\t\tconst quotes: NodeListOf<HTMLElement> = dom.querySelectorAll(\"[tuta-collapsed-quote]\")\n\t\tfor (const quoteWrap of Array.from(quotes)) {\n\t\t\tconst quote = quoteWrap.children[0] as HTMLElement\n\t\t\tquote.style.display = showQuote ? \"\" : \"none\"\n\t\t\tconst quoteIndicator = quoteWrap.children[1] as HTMLElement\n\t\t\tquoteIndicator.style.display = showQuote ? \"none\" : \"\"\n\t\t}\n\n\t\tif (this.pinchZoomable) {\n\t\t\tthis.createPinchZoom(this.pinchZoomable.getZoomable(), this.pinchZoomable.getViewport())\n\t\t}\n\t}\n\n\tprivate shouldDisplayCollapsedQuotes(): boolean {\n\t\t// if the user didn't do anything yet take the behavior passed from the outside, otherwise whatever user has selected\n\t\treturn this.quoteState === \"unset\" ? this.currentQuoteBehavior === \"expand\" : this.quoteState === \"expanded\"\n\t}\n\n\t/**\n\t * manually wrap and style a mail body to display correctly inside a shadow root\n\t * @param sanitizedMailBody the mail body to display\n\t * @param attrs\n\t * @param parent the parent element that contains the shadowMailBody\n\t * @private\n\t */\n\tprivate renderShadowMailBody(sanitizedMailBody: DocumentFragment, attrs: MailViewerAttrs, parent: HTMLElement) {\n\t\tthis.currentQuoteBehavior = attrs.defaultQuoteBehavior\n\t\tassertNonNull(this.shadowDomRoot, \"shadow dom root is null!\")\n\t\twhile (this.shadowDomRoot.firstChild) {\n\t\t\tthis.shadowDomRoot.firstChild.remove()\n\t\t}\n\t\tconst wrapNode = document.createElement(\"div\")\n\t\twrapNode.className = \"drag selectable touch-callout break-word-links\" + (client.isMobileDevice() ? \" break-pre\" : \"\")\n\t\twrapNode.setAttribute(\"data-testid\", \"mailBody_label\")\n\t\twrapNode.style.lineHeight = String(this.bodyLineHeight ? this.bodyLineHeight.toString() : size.line_height)\n\t\twrapNode.style.transformOrigin = \"0px 0px\"\n\n\t\t// Remove \"align\" property from the top-level content as it causes overflow.\n\t\t// Note: this is not CSS align, this is a deprecated align attribute.\n\t\t// see https://github.com/tutao/tutanota/issues/8271\n\t\tconst contentRoot = sanitizedMailBody.cloneNode(true) as HTMLElement\n\t\tfor (const child of Array.from(contentRoot.children)) {\n\t\t\tchild.removeAttribute(\"align\")\n\t\t}\n\n\t\twrapNode.appendChild(contentRoot)\n\n\t\tthis.shadowDomMailContent = wrapNode\n\n\t\t// query all top level block quotes\n\t\tconst quoteElements = Array.from(wrapNode.querySelectorAll(\"blockquote:not(blockquote blockquote)\")) as HTMLElement[]\n\t\tif (quoteElements.length === 0) {\n\t\t\tthis.quoteState = \"noquotes\"\n\t\t}\n\t\tfor (const quote of quoteElements) {\n\t\t\tthis.createCollapsedBlockQuote(quote, this.shouldDisplayCollapsedQuotes())\n\t\t}\n\n\t\tthis.shadowDomRoot.appendChild(styles.getStyleSheetElement(\"main\"))\n\t\tthis.shadowDomRoot.appendChild(wrapNode)\n\n\t\tif (client.isMobileDevice()) {\n\t\t\tthis.pinchZoomable = null\n\t\t\tthis.resizeObserverZoomable?.disconnect()\n\t\t\tthis.resizeObserverZoomable = new ResizeObserver((entries) => {\n\t\t\t\tif (this.resizeRaf) {\n\t\t\t\t\t// did we already schedule a reset for pinch to zoom in the frame\n\t\t\t\t\tcancelAnimationFrame(this.resizeRaf)\n\t\t\t\t}\n\t\t\t\tthis.resizeRaf = requestAnimationFrame(() => {\n\t\t\t\t\tthis.createPinchZoom(wrapNode, parent) // recreate for example if images are loaded slowly\n\t\t\t\t})\n\t\t\t})\n\t\t\tthis.resizeObserverZoomable.observe(wrapNode)\n\t\t} else {\n\t\t\twrapNode.addEventListener(\"click\", (event) => {\n\t\t\t\tthis.handleAnchorClick(event, event.target, false)\n\t\t\t})\n\t\t}\n\t\tthis.currentlyRenderedMailBody = sanitizedMailBody\n\t}\n\n\tprivate createCollapsedBlockQuote(quote: HTMLElement, expanded: boolean) {\n\t\tconst quoteWrap = document.createElement(\"div\")\n\t\t// used to query quotes later\n\t\tquoteWrap.setAttribute(\"tuta-collapsed-quote\", \"true\")\n\n\t\tquote.replaceWith(quoteWrap)\n\t\tquote.style.display = expanded ? \"\" : \"none\"\n\n\t\tconst quoteIndicator = document.createElement(\"div\")\n\t\tquoteIndicator.classList.add(\"flex\")\n\t\tquoteIndicator.style.borderLeft = `2px solid ${theme.content_border}`\n\t\tquoteIndicator.style.display = expanded ? \"none\" : \"\"\n\n\t\tm.render(\n\t\t\tquoteIndicator,\n\t\t\tm(Icon, {\n\t\t\t\ticon: Icons.More,\n\t\t\t\tclass: \"icon-xl mlr\",\n\t\t\t\tcontainer: \"div\",\n\t\t\t\tstyle: {\n\t\t\t\t\tfill: theme.navigation_menu_icon,\n\t\t\t\t},\n\t\t\t}),\n\t\t)\n\n\t\tquoteWrap.appendChild(quote)\n\t\tquoteWrap.appendChild(quoteIndicator)\n\t}\n\n\tprivate clearDomBody() {\n\t\tthis.domBodyDeferred = defer()\n\t\tthis.domBody = null\n\t\tthis.shadowDomRoot = null\n\t}\n\n\tprivate setDomBody(dom: HTMLElement) {\n\t\tif (dom !== this.domBody || this.shadowDomRoot == null) {\n\t\t\t// If the dom element hasn't been created anew in onupdate\n\t\t\t// then trying to create a new shadow root on the same node will cause an error\n\t\t\tthis.shadowDomRoot = dom.attachShadow({ mode: \"open\" })\n\n\t\t\t// Allow forms inside of mail bodies to be filled out without resulting in keystrokes being interpreted as shortcuts\n\t\t\tthis.shadowDomRoot.getRootNode().addEventListener(\"keydown\", (event: Event) => {\n\t\t\t\tconst { target } = event\n\t\t\t\tif (this.eventTargetWithKeyboardInput(target)) {\n\t\t\t\t\tevent.stopPropagation()\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tthis.domBodyDeferred.resolve(dom)\n\t\tthis.domBody = dom\n\t}\n\n\tprivate renderLoadingIcon(): Children {\n\t\treturn m(\n\t\t\t\".progress-panel.flex-v-center.items-center\",\n\t\t\t{\n\t\t\t\tkey: \"loadingIcon\",\n\t\t\t\tstyle: {\n\t\t\t\t\theight: \"200px\",\n\t\t\t\t},\n\t\t\t},\n\t\t\t[progressIcon(), m(\"small\", lang.get(\"loading_msg\"))],\n\t\t)\n\t}\n\n\tasync replaceInlineImages() {\n\t\tconst loadedInlineImages = await this.viewModel.getLoadedInlineImages()\n\t\tconst domBody = await this.domBodyDeferred.promise\n\t\treplaceCidsWithInlineImages(domBody, loadedInlineImages, (cid, event) => {\n\t\t\tconst inlineAttachment = this.viewModel.getAttachments().find((attachment) => attachment.cid === cid)\n\t\t\tif (inlineAttachment && (!client.isMobileDevice() || !this.pinchZoomable || !this.pinchZoomable.isDraggingOrZooming())) {\n\t\t\t\tconst coords = getCoordsOfMouseOrTouchEvent(event)\n\t\t\t\tshowDropdownAtPosition(\n\t\t\t\t\t[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: \"download_action\",\n\t\t\t\t\t\t\tclick: () => this.viewModel.downloadAndOpenAttachment(inlineAttachment, false),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: \"open_action\",\n\t\t\t\t\t\t\tclick: () => this.viewModel.downloadAndOpenAttachment(inlineAttachment, true),\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t\tcoords.x,\n\t\t\t\t\tcoords.y,\n\t\t\t\t)\n\t\t\t}\n\t\t})\n\t}\n\n\tprivate setupShortcuts(attrs: MailViewerAttrs): Array<Shortcut> {\n\t\tconst userController = locator.logins.getUserController()\n\t\tconst shortcuts: Shortcut[] = [\n\t\t\t{\n\t\t\t\tkey: Keys.E,\n\t\t\t\tenabled: () => this.viewModel.isDraftMail(),\n\t\t\t\texec: () => {\n\t\t\t\t\teditDraft(this.viewModel)\n\t\t\t\t},\n\t\t\t\thelp: \"editMail_action\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: Keys.H,\n\t\t\t\tenabled: () => !this.viewModel.isDraftMail(),\n\t\t\t\texec: () => {\n\t\t\t\t\tshowHeaderDialog(this.viewModel.getHeaders())\n\t\t\t\t},\n\t\t\t\thelp: \"showHeaders_action\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: Keys.I,\n\t\t\t\tenabled: () => !this.viewModel.isDraftMail(),\n\t\t\t\texec: () => {\n\t\t\t\t\tshowSourceDialog(this.viewModel.getMailBody())\n\t\t\t\t},\n\t\t\t\thelp: \"showSource_action\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: Keys.R,\n\t\t\t\texec: () => {\n\t\t\t\t\tthis.viewModel.reply(false)\n\t\t\t\t},\n\t\t\t\tenabled: () => !this.viewModel.isDraftMail(),\n\t\t\t\thelp: \"reply_action\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: Keys.R,\n\t\t\t\tshift: true,\n\t\t\t\texec: () => {\n\t\t\t\t\tthis.viewModel.reply(true)\n\t\t\t\t},\n\t\t\t\tenabled: () => !this.viewModel.isDraftMail(),\n\t\t\t\thelp: \"replyAll_action\",\n\t\t\t},\n\t\t]\n\n\t\tif (userController.isInternalUser()) {\n\t\t\tshortcuts.push({\n\t\t\t\tkey: Keys.F,\n\t\t\t\tshift: true,\n\t\t\t\tenabled: () => !this.viewModel.isDraftMail(),\n\t\t\t\texec: () => {\n\t\t\t\t\tthis.viewModel.forward().catch(ofClass(UserError, showUserError))\n\t\t\t\t},\n\t\t\t\thelp: \"forward_action\",\n\t\t\t})\n\t\t}\n\n\t\treturn shortcuts\n\t}\n\n\tprivate updateLineHeight(dom: HTMLElement) {\n\t\tconst width = dom.offsetWidth\n\n\t\tif (width > 900) {\n\t\t\tthis.bodyLineHeight = size.line_height_l\n\t\t} else if (width > 600) {\n\t\t\tthis.bodyLineHeight = size.line_height_m\n\t\t} else {\n\t\t\tthis.bodyLineHeight = size.line_height\n\t\t}\n\n\t\tdom.style.lineHeight = String(this.bodyLineHeight)\n\t}\n\n\tprivate async createMailAddressContextButtons(args: {\n\t\tmailAddress: MailAddressAndName\n\t\tdefaultInboxRuleField: InboxRuleType | null\n\t\tcreateContact?: boolean\n\t}): Promise<Array<DropdownButtonAttrs>> {\n\t\tconst { mailAddress, defaultInboxRuleField, createContact = true } = args\n\n\t\tconst buttons = [] as Array<DropdownButtonAttrs>\n\n\t\tbuttons.push({\n\t\t\tlabel: \"copy_action\",\n\t\t\tclick: () => copyToClipboard(mailAddress.address),\n\t\t})\n\n\t\tif (locator.logins.getUserController().isInternalUser()) {\n\t\t\t//searching for contacts will never resolve if the user has not logged in online\n\t\t\tif (createContact && !locator.logins.isEnabled(FeatureType.DisableContacts) && locator.logins.isFullyLoggedIn()) {\n\t\t\t\tconst contact = await this.viewModel.contactModel.searchForContact(mailAddress.address)\n\t\t\t\tif (contact) {\n\t\t\t\t\tbuttons.push({\n\t\t\t\t\t\tlabel: \"showContact_action\",\n\t\t\t\t\t\tclick: () => {\n\t\t\t\t\t\t\tconst [listId, contactId] = assertNotNull(contact)._id\n\t\t\t\t\t\t\tm.route.set(\"/contact/:listId/:contactId\", { listId, contactId, focusItem: true })\n\t\t\t\t\t\t},\n\t\t\t\t\t})\n\t\t\t\t} else {\n\t\t\t\t\tbuttons.push({\n\t\t\t\t\t\tlabel: \"createContact_action\",\n\t\t\t\t\t\tclick: () => {\n\t\t\t\t\t\t\tthis.viewModel.contactModel.getContactListId().then((contactListId) => {\n\t\t\t\t\t\t\t\timport(\"../../contacts/ContactEditor\").then(({ ContactEditor }) => {\n\t\t\t\t\t\t\t\t\tconst contact = createNewContact(locator.logins.getUserController().user, mailAddress.address, mailAddress.name)\n\t\t\t\t\t\t\t\t\tnew ContactEditor(this.viewModel.entityClient, contact, assertNotNull(contactListId)).show()\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t},\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (defaultInboxRuleField && !locator.logins.isEnabled(FeatureType.InternalCommunication)) {\n\t\t\t\tconst rule = getExistingRuleForType(locator.logins.getUserController().props, mailAddress.address.trim().toLowerCase(), defaultInboxRuleField)\n\t\t\t\tbuttons.push({\n\t\t\t\t\tlabel: rule ? \"editInboxRule_action\" : \"addInboxRule_action\",\n\t\t\t\t\tclick: async () => {\n\t\t\t\t\t\tconst mailboxDetails = await this.viewModel.mailModel.getMailboxDetailsForMail(this.viewModel.mail)\n\t\t\t\t\t\tif (mailboxDetails == null) {\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst { show, createInboxRuleTemplate } = await import(\"../../settings/AddInboxRuleDialog\")\n\t\t\t\t\t\tconst newRule = rule ?? createInboxRuleTemplate(defaultInboxRuleField, mailAddress.address.trim().toLowerCase())\n\n\t\t\t\t\t\tshow(mailboxDetails, newRule)\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tif (this.viewModel.canCreateSpamRule()) {\n\t\t\t\tbuttons.push({\n\t\t\t\t\tlabel: \"addSpamRule_action\",\n\t\t\t\t\tclick: () => this.addSpamRule(defaultInboxRuleField, mailAddress.address),\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\n\t\treturn buttons\n\t}\n\n\tprivate addSpamRule(defaultInboxRuleField: InboxRuleType | null, address: string) {\n\t\tconst folder = this.viewModel.mailModel.getMailFolderForMail(this.viewModel.mail)\n\n\t\tconst spamRuleType = folder && folder.folderType === MailSetKind.SPAM ? SpamRuleType.WHITELIST : SpamRuleType.BLACKLIST\n\n\t\tlet spamRuleField: SpamRuleFieldType\n\t\tswitch (defaultInboxRuleField) {\n\t\t\tcase InboxRuleType.RECIPIENT_TO_EQUALS:\n\t\t\t\tspamRuleField = SpamRuleFieldType.TO\n\t\t\t\tbreak\n\n\t\t\tcase InboxRuleType.RECIPIENT_CC_EQUALS:\n\t\t\t\tspamRuleField = SpamRuleFieldType.CC\n\t\t\t\tbreak\n\n\t\t\tcase InboxRuleType.RECIPIENT_BCC_EQUALS:\n\t\t\t\tspamRuleField = SpamRuleFieldType.BCC\n\t\t\t\tbreak\n\n\t\t\tdefault:\n\t\t\t\tspamRuleField = SpamRuleFieldType.FROM\n\t\t\t\tbreak\n\t\t}\n\n\t\timport(\"../../settings/AddSpamRuleDialog\").then(async ({ showAddSpamRuleDialog }) => {\n\t\t\tconst value = address.trim().toLowerCase()\n\t\t\tshowAddSpamRuleDialog(\n\t\t\t\tcreateEmailSenderListElement({\n\t\t\t\t\tvalue,\n\t\t\t\t\ttype: spamRuleType,\n\t\t\t\t\tfield: spamRuleField,\n\t\t\t\t\thashedValue: await locator.worker.getWorkerInterface().cryptoFacade.sha256(value),\n\t\t\t\t}),\n\t\t\t)\n\t\t})\n\t}\n\n\tprivate handleAnchorClick(event: Event, eventTarget: EventTarget | null, shouldDispatchSyntheticClick: boolean): void {\n\t\tconst href = (eventTarget as Element | null)?.closest(\"a\")?.getAttribute(\"href\") ?? null\n\t\tif (href) {\n\t\t\tif (href.startsWith(\"mailto:\")) {\n\t\t\t\tevent.preventDefault()\n\n\t\t\t\tif (isNewMailActionAvailable()) {\n\t\t\t\t\t// disable new mails for external users.\n\t\t\t\t\timport(\"../editor/MailEditor\").then(({ newMailtoUrlMailEditor }) => {\n\t\t\t\t\t\tnewMailtoUrlMailEditor(href, !locator.logins.getUserController().props.defaultUnconfidential)\n\t\t\t\t\t\t\t.then((editor) => editor.show())\n\t\t\t\t\t\t\t.catch(ofClass(CancelledError, noOp))\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t} else if (isSettingsLink(href, this.viewModel.mail)) {\n\t\t\t\t// Navigate to the settings menu if they are linked within an email.\n\t\t\t\tconst newRoute = href.substring(href.indexOf(\"/settings/\"))\n\t\t\t\tm.route.set(newRoute)\n\t\t\t\tevent.preventDefault()\n\t\t\t} else if (shouldDispatchSyntheticClick) {\n\t\t\t\tconst syntheticTag = document.createElement(\"a\")\n\t\t\t\tsyntheticTag.setAttribute(\"href\", href)\n\t\t\t\tsyntheticTag.setAttribute(\"target\", \"_blank\")\n\t\t\t\tsyntheticTag.setAttribute(\"rel\", \"noopener noreferrer\")\n\t\t\t\tconst newClickEvent = new MouseEvent(\"click\")\n\t\t\t\tsyntheticTag.dispatchEvent(newClickEvent)\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * returns true if the passed in target is an HTMLElement that can receive some sort of keyboard input\n\t */\n\tprivate eventTargetWithKeyboardInput(target: EventTarget | null): boolean {\n\t\tif (target && target instanceof HTMLElement) {\n\t\t\treturn target.matches(\n\t\t\t\t'input[type=\"text\"], input[type=\"date\"], input[type=\"datetime-local\"], input[type=\"email\"], input[type=\"month\"], input[type=\"number\"],' +\n\t\t\t\t\t'input[type=\"password\"], input[type=\"search\"], input[type=\"tel\"], input[type=\"time\"], input[type=\"url\"], input[type=\"week\"], input[type=\"datetime\"], textarea',\n\t\t\t)\n\t\t}\n\t\treturn false\n\t}\n\n\tprivate async handleAttachmentImport(file: TutanotaFile) {\n\t\ttry {\n\t\t\tawait this.viewModel.importAttachment(file)\n\t\t} catch (e) {\n\t\t\tconsole.log(e)\n\t\t\tif (e instanceof UserError) {\n\t\t\t\treturn await Dialog.message(lang.makeTranslation(\"error_msg\", e.message))\n\t\t\t}\n\n\t\t\tawait Dialog.message(\"unknownError_msg\")\n\t\t}\n\t}\n}\n\nexport type CreateMailViewerOptions = {\n\tmail: Mail\n\tshowFolder: boolean\n\tdelayBodyRenderingUntil?: Promise<void>\n}\n\n/**\n * support and invoice mails can contain links to the settings page.\n * we don't want normal mails to be able to link places in the app, though.\n * */\nfunction isSettingsLink(href: string, mail: Mail): boolean {\n\treturn (href.startsWith(\"/settings/\") ?? false) && isTutanotaTeamMail(mail)\n}\n"]}