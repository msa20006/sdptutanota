{"version":3,"file":"TemplatePopupModel.js","sourceRoot":"","sources":["../../../../../src/mail-app/templates/model/TemplatePopupModel.ts"],"names":[],"mappings":"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","sourcesContent":["import type { LanguageCode } from \"../../../common/misc/LanguageViewModel\"\nimport { lang } from \"../../../common/misc/LanguageViewModel\"\nimport type { EmailTemplateContent } from \"../../../common/api/entities/tutanota/TypeRefs.js\"\nimport { EmailTemplate, EmailTemplateTypeRef, TemplateGroupRootTypeRef } from \"../../../common/api/entities/tutanota/TypeRefs.js\"\nimport { OperationType } from \"../../../common/api/common/TutanotaConstants\"\nimport stream from \"mithril/stream\"\nimport Stream from \"mithril/stream\"\nimport type { EntityClient } from \"../../../common/api/common/EntityClient\"\nimport type { LoginController } from \"../../../common/api/main/LoginController\"\nimport { getElementId, getEtId, isSameId } from \"../../../common/api/common/utils/EntityUtils\"\nimport type { GroupMembership } from \"../../../common/api/entities/sys/TypeRefs.js\"\nimport { GroupInfoTypeRef, GroupTypeRef } from \"../../../common/api/entities/sys/TypeRefs.js\"\nimport { LazyLoaded, promiseMap, SortedArray } from \"@tutao/tutanota-utils\"\nimport type { TemplateGroupInstance } from \"./TemplateGroupModel.js\"\nimport { search } from \"../../../common/api/common/utils/PlainTextSearch.js\"\nimport { EntityEventsListener, EventController } from \"../../../common/api/main/EventController.js\"\nimport { EntityUpdateData, isUpdateForTypeRef } from \"../../../common/api/common/utils/EntityUpdateUtils.js\"\n\n/**\n *   Model that holds main logic for the Template Feature.\n *   Handles things like returning the selected Template, selecting Templates, indexes, scrolling.\n */\nexport const TEMPLATE_SHORTCUT_PREFIX = \"#\"\nexport type NavAction = \"previous\" | \"next\"\nexport const SELECT_NEXT_TEMPLATE = \"next\"\nexport const SELECT_PREV_TEMPLATE = \"previous\"\n\n// sort first by name then by tag\nfunction compareTemplatesForSort(template1: EmailTemplate, template2: EmailTemplate) {\n\tconst titleComparison = template1.title.localeCompare(template2.title)\n\treturn titleComparison === 0 ? template1.tag.localeCompare(template2.tag) : titleComparison\n}\n\nexport class TemplatePopupModel {\n\t_allTemplates: SortedArray<EmailTemplate>\n\treadonly searchResults: Stream<ReadonlyArray<EmailTemplate>>\n\treadonly selectedTemplate: Stream<EmailTemplate | null>\n\tinitialized: LazyLoaded<TemplatePopupModel>\n\treadonly _eventController: EventController\n\treadonly _entityEventReceived: EntityEventsListener\n\treadonly _logins: LoginController\n\treadonly _entityClient: EntityClient\n\t_groupInstances: Array<TemplateGroupInstance>\n\t_selectedContentLanguage: LanguageCode\n\t_searchFilter: TemplateSearchFilter\n\n\tconstructor(eventController: EventController, logins: LoginController, entityClient: EntityClient) {\n\t\tthis._eventController = eventController\n\t\tthis._logins = logins\n\t\tthis._entityClient = entityClient\n\t\tthis._allTemplates = SortedArray.empty(compareTemplatesForSort)\n\t\tthis.searchResults = stream<ReadonlyArray<EmailTemplate>>([])\n\t\tthis.selectedTemplate = stream<EmailTemplate | null>(null)\n\t\tthis._selectedContentLanguage = lang.code\n\t\tthis._searchFilter = new TemplateSearchFilter()\n\t\tthis._groupInstances = []\n\n\t\tthis._entityEventReceived = (updates, eventOwnerGroupId) => {\n\t\t\treturn this._entityUpdate(updates, eventOwnerGroupId)\n\t\t}\n\n\t\tthis.initialized = new LazyLoaded(() => {\n\t\t\tconst templateMemberships = this._logins.getUserController().getTemplateMemberships()\n\n\t\t\treturn loadTemplateGroupInstances(templateMemberships, this._entityClient)\n\t\t\t\t.then((templateGroupInstances) =>\n\t\t\t\t\tloadTemplates(templateGroupInstances, this._entityClient).then((templates) => {\n\t\t\t\t\t\tthis._allTemplates.insertAll(templates)\n\n\t\t\t\t\t\tthis._groupInstances = templateGroupInstances\n\t\t\t\t\t}),\n\t\t\t\t)\n\t\t\t\t.then(() => {\n\t\t\t\t\tthis.searchResults(this._searchFilter.filter(\"\", this._allTemplates.array))\n\t\t\t\t\tthis.setSelectedTemplate(this.searchResults()[0])\n\t\t\t\t\treturn this\n\t\t\t\t})\n\t\t})\n\n\t\tthis._eventController.addEntityListener(this._entityEventReceived)\n\t}\n\n\tinit(): Promise<TemplatePopupModel> {\n\t\treturn this.initialized.getAsync()\n\t}\n\n\tisLoaded(): boolean {\n\t\treturn this.initialized.isLoaded()\n\t}\n\n\tdispose() {\n\t\tthis._eventController.removeEntityListener(this._entityEventReceived)\n\t}\n\n\tisSelectedTemplate(template: EmailTemplate): boolean {\n\t\treturn this.selectedTemplate() === template\n\t}\n\n\tgetAllTemplates(): ReadonlyArray<EmailTemplate> {\n\t\treturn this._allTemplates.array\n\t}\n\n\tgetSelectedTemplate(): EmailTemplate | null {\n\t\treturn this.selectedTemplate()\n\t}\n\n\tgetSelectedContent(): EmailTemplateContent | null {\n\t\tconst selectedTemplate = this.selectedTemplate()\n\t\treturn (\n\t\t\tselectedTemplate &&\n\t\t\t(selectedTemplate.contents.find((contents) => contents.languageCode === this._selectedContentLanguage) ||\n\t\t\t\tselectedTemplate.contents.find((contents) => contents.languageCode === lang.code) ||\n\t\t\t\tselectedTemplate.contents[0])\n\t\t)\n\t}\n\n\tgetSelectedTemplateIndex(): number {\n\t\tconst selectedTemplate = this.selectedTemplate()\n\t\tif (selectedTemplate == null) {\n\t\t\treturn -1\n\t\t}\n\t\treturn this.searchResults().indexOf(selectedTemplate)\n\t}\n\n\tsetSelectedTemplate(template: EmailTemplate | null) {\n\t\tthis.selectedTemplate(template)\n\t}\n\n\tsetSelectedContentLanguage(langCode: LanguageCode) {\n\t\tthis._selectedContentLanguage = langCode\n\t}\n\n\tsearch(query: string): void {\n\t\tthis.searchResults(this._searchFilter.filter(query, this._allTemplates.array))\n\t\tthis.setSelectedTemplate(this.searchResults()[0])\n\t}\n\n\t_rerunSearch(): void {\n\t\tthis.searchResults(this._searchFilter.rerunQuery(this._allTemplates.array))\n\t\tthis.setSelectedTemplate(this.searchResults()[0])\n\t}\n\n\t/**\n\t * Increments or decrements the selection, unless it would go past the beginning or end of the search results\n\t * @param action\n\t * @returns true if the selection changed\n\t */\n\tselectNextTemplate(action: NavAction): boolean {\n\t\tconst selectedIndex = this.getSelectedTemplateIndex()\n\t\tconst nextIndex = selectedIndex + (action === SELECT_NEXT_TEMPLATE ? 1 : -1)\n\n\t\tif (nextIndex >= 0 && nextIndex < this.searchResults().length) {\n\t\t\tconst nextSelectedTemplate = this.searchResults()[nextIndex]\n\t\t\tthis.setSelectedTemplate(nextSelectedTemplate)\n\t\t\treturn true\n\t\t}\n\n\t\treturn false\n\t}\n\n\tfindTemplateWithTag(selectedText: string): EmailTemplate | null {\n\t\tconst tag = selectedText.substring(TEMPLATE_SHORTCUT_PREFIX.length) // remove TEMPLATE_SHORTCUT_PREFIX from selected text\n\n\t\treturn this._allTemplates.array.find((template) => template.tag === tag) ?? null\n\t}\n\n\t_entityUpdate(updates: ReadonlyArray<EntityUpdateData>, eventOwnerGroupId: Id): Promise<any> {\n\t\treturn promiseMap(updates, (update) => {\n\t\t\tif (isUpdateForTypeRef(EmailTemplateTypeRef, update)) {\n\t\t\t\tif (update.operation === OperationType.CREATE) {\n\t\t\t\t\treturn this._entityClient.load(EmailTemplateTypeRef, [update.instanceListId, update.instanceId]).then((template) => {\n\t\t\t\t\t\tthis._allTemplates.insert(template)\n\n\t\t\t\t\t\tthis._rerunSearch()\n\n\t\t\t\t\t\tthis.setSelectedTemplate(template)\n\t\t\t\t\t})\n\t\t\t\t} else if (update.operation === OperationType.UPDATE) {\n\t\t\t\t\treturn this._entityClient.load(EmailTemplateTypeRef, [update.instanceListId, update.instanceId]).then((template) => {\n\t\t\t\t\t\tthis._allTemplates.removeFirst((t) => isSameId(getElementId(t), update.instanceId))\n\n\t\t\t\t\t\tthis._allTemplates.insert(template)\n\n\t\t\t\t\t\tthis._rerunSearch()\n\n\t\t\t\t\t\tthis.setSelectedTemplate(template)\n\t\t\t\t\t})\n\t\t\t\t} else if (update.operation === OperationType.DELETE) {\n\t\t\t\t\t// Try select the next or the previous template\n\t\t\t\t\t// if neither option is possible, it means we are deleting the last template, so clear the selection\n\t\t\t\t\tif (!this.selectNextTemplate(\"next\") && !this.selectNextTemplate(\"previous\")) {\n\t\t\t\t\t\tthis.setSelectedTemplate(null)\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._allTemplates.removeFirst((t) => isSameId(getElementId(t), update.instanceId))\n\n\t\t\t\t\tthis._rerunSearch()\n\t\t\t\t}\n\t\t\t} else if (this._logins.getUserController().isUpdateForLoggedInUserInstance(update, eventOwnerGroupId)) {\n\t\t\t\t// template group memberships may have changed\n\t\t\t\tif (this._groupInstances.length !== this._logins.getUserController().getTemplateMemberships().length) {\n\t\t\t\t\tthis.initialized.reset()\n\t\t\t\t\treturn this.initialized.getAsync().then(() => this._rerunSearch())\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\n\tgetTemplateGroupInstances(): Array<TemplateGroupInstance> {\n\t\treturn this._groupInstances\n\t}\n\n\tgetSelectedTemplateGroupInstance(): TemplateGroupInstance | null {\n\t\tconst selected = this.getSelectedTemplate()\n\t\tif (selected == null) {\n\t\t\treturn null\n\t\t} else {\n\t\t\treturn this._groupInstances.find((instance) => isSameId(getEtId(instance.group), selected._ownerGroup)) ?? null\n\t\t}\n\t}\n}\n\nexport function loadTemplateGroupInstances(memberships: Array<GroupMembership>, entityClient: EntityClient): Promise<Array<TemplateGroupInstance>> {\n\treturn promiseMap(memberships, (membership) => loadTemplateGroupInstance(membership, entityClient))\n}\n\nexport function loadTemplateGroupInstance(groupMembership: GroupMembership, entityClient: EntityClient): Promise<TemplateGroupInstance> {\n\treturn entityClient.load(GroupInfoTypeRef, groupMembership.groupInfo).then((groupInfo) =>\n\t\tentityClient.load(TemplateGroupRootTypeRef, groupInfo.group).then((groupRoot) =>\n\t\t\tentityClient.load(GroupTypeRef, groupInfo.group).then((group) => {\n\t\t\t\treturn {\n\t\t\t\t\tgroupInfo,\n\t\t\t\t\tgroup,\n\t\t\t\t\tgroupRoot,\n\t\t\t\t\tgroupMembership,\n\t\t\t\t}\n\t\t\t}),\n\t\t),\n\t)\n}\n\nfunction loadTemplates(templateGroups: Array<TemplateGroupInstance>, entityClient: EntityClient): Promise<Array<EmailTemplate>> {\n\treturn promiseMap(templateGroups, (group) => entityClient.loadAll(EmailTemplateTypeRef, group.groupRoot.templates)).then((groupedTemplates) =>\n\t\tgroupedTemplates.flat(),\n\t)\n}\n\nexport function searchInTemplates(input: string, allTemplates: ReadonlyArray<EmailTemplate>): ReadonlyArray<EmailTemplate> {\n\tif (input.startsWith(TEMPLATE_SHORTCUT_PREFIX)) {\n\t\t// search in tag only\n\t\tconst newQueryString = input.substring(TEMPLATE_SHORTCUT_PREFIX.length)\n\t\treturn search(newQueryString, allTemplates, [\"tag\"], false)\n\t} else {\n\t\treturn search(input, allTemplates, [\"tag\", \"title\", \"contents.text\"], false)\n\t}\n}\n\nclass TemplateSearchFilter {\n\tlastInput: ReadonlyArray<EmailTemplate>\n\tlastQuery: string\n\tlastResults: ReadonlyArray<EmailTemplate>\n\n\tconstructor() {\n\t\tthis.lastInput = []\n\t\tthis.lastQuery = \"\"\n\t\tthis.lastResults = []\n\t}\n\n\tfilter(query: string, input: ReadonlyArray<EmailTemplate>): ReadonlyArray<EmailTemplate> {\n\t\treturn this._doFilter(query, input)\n\t}\n\n\trerunQuery(input: ReadonlyArray<EmailTemplate>): ReadonlyArray<EmailTemplate> {\n\t\treturn this._doFilter(this.lastQuery, input)\n\t}\n\n\t_doFilter(query: string, input: ReadonlyArray<EmailTemplate>): ReadonlyArray<EmailTemplate> {\n\t\tthis.lastInput = input.slice()\n\t\tthis.lastQuery = query\n\t\tthis.lastResults = query === \"\" ? this.lastInput : searchInTemplates(query, input)\n\t\treturn this.lastResults\n\t}\n}\n"]}