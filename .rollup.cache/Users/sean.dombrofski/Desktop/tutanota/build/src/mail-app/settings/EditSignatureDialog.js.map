{"version":3,"file":"EditSignatureDialog.js","sourceRoot":"","sources":["../../../../src/mail-app/settings/EditSignatureDialog.ts"],"names":[],"mappings":"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","sourcesContent":["import m from \"mithril\"\nimport { Dialog, DialogType } from \"../../common/gui/base/Dialog\"\nimport { lang, MaybeTranslation } from \"../../common/misc/LanguageViewModel\"\nimport { EmailSignatureType, FeatureType } from \"../../common/api/common/TutanotaConstants\"\nimport { HtmlEditor } from \"../../common/gui/editor/HtmlEditor\"\nimport type { TutanotaProperties } from \"../../common/api/entities/tutanota/TypeRefs.js\"\nimport { PayloadTooLargeError } from \"../../common/api/common/error/RestError\"\nimport { showProgressDialog } from \"../../common/gui/dialogs/ProgressDialog\"\nimport { downcast, neverNull, ofClass } from \"@tutao/tutanota-utils\"\nimport { locator } from \"../../common/api/main/CommonLocator\"\nimport { assertMainOrNode } from \"../../common/api/common/Env\"\nimport { DropDownSelector } from \"../../common/gui/base/DropDownSelector.js\"\nimport { insertInlineImageB64ClickHandler } from \"../../common/mailFunctionality/SharedMailUtils.js\"\n\nassertMainOrNode()\n// signatures can become large, for example if they include a base64 embedded image. we ask for confirmation in such cases\nconst RECOMMENDED_SIGNATURE_SIZE_LIMIT = 15 * 1024\n\nexport function show(props: TutanotaProperties) {\n\timport(\"../mail/signature/Signature\").then(({ getDefaultSignature }) => {\n\t\tconst defaultSignature = getDefaultSignature()\n\t\tlet currentCustomSignature = locator.logins.getUserController().props.customEmailSignature\n\n\t\tif (currentCustomSignature === \"\" && !locator.logins.isEnabled(FeatureType.DisableDefaultSignature)) {\n\t\t\tcurrentCustomSignature = defaultSignature\n\t\t}\n\n\t\tlet selectedType = locator.logins.getUserController().props.emailSignatureType as EmailSignatureType\n\t\tconst editor = new HtmlEditor(\"preview_label\")\n\t\t\t.showBorders()\n\t\t\t.setMinHeight(200)\n\t\t\t.setValue(getSignature(selectedType, defaultSignature, currentCustomSignature))\n\t\t\t.enableToolbar()\n\t\t\t.setToolbarOptions({\n\t\t\t\timageButtonClickHandler: insertInlineImageB64ClickHandler,\n\t\t\t})\n\t\t\t.setEnabled(selectedType === EmailSignatureType.EMAIL_SIGNATURE_TYPE_CUSTOM)\n\n\t\tconst signatureTypes = getSignatureTypes(props)\n\n\t\tconst form = {\n\t\t\tview: () => {\n\t\t\t\treturn [\n\t\t\t\t\tm(DropDownSelector, {\n\t\t\t\t\t\tlabel: \"userEmailSignature_label\",\n\t\t\t\t\t\titems: signatureTypes,\n\t\t\t\t\t\tselectedValue: selectedType,\n\t\t\t\t\t\tselectionChangedHandler: (type: EmailSignatureType) => {\n\t\t\t\t\t\t\tif (selectedType === EmailSignatureType.EMAIL_SIGNATURE_TYPE_CUSTOM) {\n\t\t\t\t\t\t\t\tcurrentCustomSignature = editor.getValue()\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tselectedType = type\n\t\t\t\t\t\t\teditor.setValue(getSignature(type, defaultSignature, currentCustomSignature))\n\t\t\t\t\t\t\teditor.setEnabled(type === EmailSignatureType.EMAIL_SIGNATURE_TYPE_CUSTOM)\n\t\t\t\t\t\t},\n\t\t\t\t\t}),\n\t\t\t\t\tm(editor),\n\t\t\t\t]\n\t\t\t},\n\t\t}\n\n\t\tlet editSignatureOkAction = (dialog: Dialog) => {\n\t\t\tconst props = locator.logins.getUserController().props\n\t\t\tconst newType = selectedType\n\t\t\tconst newCustomValue = editor.getValue()\n\t\t\tconst oldType = props.emailSignatureType\n\t\t\tconst oldCustomValue = props.customEmailSignature\n\n\t\t\tconst updateSignature = () => {\n\t\t\t\tprops.emailSignatureType = newType\n\n\t\t\t\tif (newType === EmailSignatureType.EMAIL_SIGNATURE_TYPE_CUSTOM) {\n\t\t\t\t\tprops.customEmailSignature = newCustomValue\n\t\t\t\t}\n\n\t\t\t\tconst updatePromise = locator.entityClient.update(props)\n\t\t\t\treturn showProgressDialog(\"pleaseWait_msg\", updatePromise)\n\t\t\t\t\t.then(() => dialog.close())\n\t\t\t\t\t.catch(\n\t\t\t\t\t\tofClass(PayloadTooLargeError, () => {\n\t\t\t\t\t\t\tprops.emailSignatureType = oldType\n\t\t\t\t\t\t\tprops.customEmailSignature = oldCustomValue\n\t\t\t\t\t\t\treturn Dialog.message(\"requestTooLarge_msg\")\n\t\t\t\t\t\t}),\n\t\t\t\t\t)\n\t\t\t}\n\n\t\t\tif (newType === oldType && (newType !== EmailSignatureType.EMAIL_SIGNATURE_TYPE_CUSTOM || newCustomValue === oldCustomValue)) {\n\t\t\t\treturn dialog.close()\n\t\t\t} else {\n\t\t\t\tif (newType === EmailSignatureType.EMAIL_SIGNATURE_TYPE_CUSTOM && newCustomValue.length > RECOMMENDED_SIGNATURE_SIZE_LIMIT) {\n\t\t\t\t\tconst signatureSizeKb = Math.floor(newCustomValue.length / 1024)\n\t\t\t\t\tconst confirmLargeSignatureAttrs = {\n\t\t\t\t\t\ttitle: downcast(\"userEmailSignature_label\"),\n\t\t\t\t\t\tchild: {\n\t\t\t\t\t\t\tview: () =>\n\t\t\t\t\t\t\t\tm(\n\t\t\t\t\t\t\t\t\t\"p\",\n\t\t\t\t\t\t\t\t\tlang.get(\"largeSignature_msg\", {\n\t\t\t\t\t\t\t\t\t\t\"{1}\": signatureSizeKb,\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tokAction: (dialog: Dialog) => {\n\t\t\t\t\t\t\tdialog.close()\n\t\t\t\t\t\t\tupdateSignature()\n\t\t\t\t\t\t},\n\t\t\t\t\t\tallowOkWithReturn: true,\n\t\t\t\t\t}\n\t\t\t\t\tDialog.showActionDialog(confirmLargeSignatureAttrs)\n\t\t\t\t} else {\n\t\t\t\t\tupdateSignature()\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tDialog.showActionDialog({\n\t\t\ttitle: \"userEmailSignature_label\",\n\t\t\tchild: form,\n\t\t\ttype: DialogType.EditLarge,\n\t\t\tokAction: editSignatureOkAction,\n\t\t})\n\t})\n}\n\nexport function getSignatureTypes(props: TutanotaProperties): {\n\tname: string\n\tvalue: string\n}[] {\n\tlet signatureTypes = [\n\t\t{\n\t\t\tname: lang.get(\"emailSignatureTypeCustom_msg\"),\n\t\t\tvalue: EmailSignatureType.EMAIL_SIGNATURE_TYPE_CUSTOM,\n\t\t},\n\t\t{\n\t\t\tname: lang.get(\"comboBoxSelectionNone_msg\"),\n\t\t\tvalue: EmailSignatureType.EMAIL_SIGNATURE_TYPE_NONE,\n\t\t},\n\t]\n\n\tif (!locator.logins.isEnabled(FeatureType.DisableDefaultSignature) || props.emailSignatureType === EmailSignatureType.EMAIL_SIGNATURE_TYPE_DEFAULT) {\n\t\tsignatureTypes.splice(0, 0, {\n\t\t\tname: lang.get(\"emailSignatureTypeDefault_msg\"),\n\t\t\tvalue: EmailSignatureType.EMAIL_SIGNATURE_TYPE_DEFAULT,\n\t\t})\n\t}\n\n\treturn signatureTypes\n}\n\nfunction getSignature(type: string, defaultSignature: string, currentCustomSignature: string): string {\n\tif (type === EmailSignatureType.EMAIL_SIGNATURE_TYPE_DEFAULT) {\n\t\treturn defaultSignature\n\t} else if (type === EmailSignatureType.EMAIL_SIGNATURE_TYPE_CUSTOM) {\n\t\treturn currentCustomSignature\n\t} else {\n\t\treturn \"\"\n\t}\n}\n\nexport function getSignatureType(props: TutanotaProperties): {\n\tname: string\n\tvalue: string\n} {\n\treturn neverNull(getSignatureTypes(props).find((t) => t.value === props.emailSignatureType))\n}\n"]}