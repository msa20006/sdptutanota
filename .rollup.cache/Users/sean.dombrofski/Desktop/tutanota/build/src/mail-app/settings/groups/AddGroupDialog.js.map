{"version":3,"file":"AddGroupDialog.js","sourceRoot":"","sources":["../../../../../src/mail-app/settings/groups/AddGroupDialog.ts"],"names":[],"mappings":"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","sourcesContent":["import m, { Children, Component, Vnode } from \"mithril\"\nimport { BookingItemFeatureType, FeatureType, GroupType } from \"../../../common/api/common/TutanotaConstants.js\"\nimport { Dialog } from \"../../../common/gui/base/Dialog.js\"\nimport type { ValidationResult } from \"../../../common/settings/SelectMailAddressForm.js\"\nimport { SelectMailAddressForm } from \"../../../common/settings/SelectMailAddressForm.js\"\nimport { getGroupTypeDisplayName } from \"../../../common/settings/groups/GroupDetailsView.js\"\nimport { showProgressDialog } from \"../../../common/gui/dialogs/ProgressDialog.js\"\nimport { InfoLink, lang, TranslationKey } from \"../../../common/misc/LanguageViewModel.js\"\nimport { showBuyDialog } from \"../../../common/subscription/BuyDialog.js\"\nimport { PreconditionFailedError } from \"../../../common/api/common/error/RestError.js\"\nimport { showPlanUpgradeRequiredDialog } from \"../../../common/misc/SubscriptionDialogs.js\"\nimport { TemplateGroupPreconditionFailedReason } from \"../../../common/sharing/GroupUtils.js\"\nimport { DropDownSelector } from \"../../../common/gui/base/DropDownSelector.js\"\nimport { TextField } from \"../../../common/gui/base/TextField.js\"\nimport { getFirstOrThrow, ofClass } from \"@tutao/tutanota-utils\"\nimport type { GroupManagementFacade } from \"../../../common/api/worker/facades/lazy/GroupManagementFacade.js\"\nimport { locator } from \"../../../common/api/main/CommonLocator.js\"\nimport { assertMainOrNode } from \"../../../common/api/common/Env.js\"\nimport { EmailDomainData, getAvailableDomains } from \"../../../common/settings/mailaddress/MailAddressesUtils.js\"\nimport { getAvailablePlansWithTemplates, toFeatureType } from \"../../../common/subscription/SubscriptionUtils.js\"\nimport { MoreInfoLink } from \"../../../common/misc/news/MoreInfoLink.js\"\n\nassertMainOrNode()\n\nexport type AddGroupDialogAttrs = {\n\tgroupType: GroupType\n\tselectedDomain: EmailDomainData\n\tavailableDomains: Array<EmailDomainData>\n\tavailableGroupTypes: Array<GroupType>\n\tname: string\n\tonGroupNameChanged: (name: string) => unknown\n\tonGroupTypeChanged: (type: GroupType) => unknown\n\tonEmailChanged: (emailAddress: string, validationResult: ValidationResult) => unknown\n\tonBusyStateChanged: (busy: boolean) => unknown\n\tonDomainChanged: (domain: EmailDomainData) => unknown\n}\n\nexport class AddGroupDialog implements Component<AddGroupDialogAttrs> {\n\tview(vnode: Vnode<AddGroupDialogAttrs>): Children {\n\t\tconst { availableGroupTypes, groupType, availableDomains, onEmailChanged, onBusyStateChanged, selectedDomain, onDomainChanged } = vnode.attrs\n\t\treturn [\n\t\t\tavailableGroupTypes.length > 1\n\t\t\t\t? m(DropDownSelector, {\n\t\t\t\t\t\tlabel: \"groupType_label\",\n\t\t\t\t\t\titems: availableGroupTypes.map((t) => {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tname: getGroupTypeDisplayName(t),\n\t\t\t\t\t\t\t\tvalue: t,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tselectedValue: groupType,\n\t\t\t\t\t\tselectionChangedHandler: vnode.attrs.onGroupTypeChanged,\n\t\t\t\t  })\n\t\t\t\t: null,\n\t\t\tm(TextField, {\n\t\t\t\tlabel: \"name_label\",\n\t\t\t\tvalue: vnode.attrs.name,\n\t\t\t\toninput: vnode.attrs.onGroupNameChanged,\n\t\t\t}),\n\t\t\tgroupType === GroupType.Mail\n\t\t\t\t? m(\"\", [\n\t\t\t\t\t\tm(SelectMailAddressForm, {\n\t\t\t\t\t\t\tselectedDomain,\n\t\t\t\t\t\t\tavailableDomains,\n\t\t\t\t\t\t\tonValidationResult: onEmailChanged,\n\t\t\t\t\t\t\tonBusyStateChanged,\n\t\t\t\t\t\t\tonDomainChanged,\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tm(\".mt-m\", \"\"),\n\t\t\t\t\t\tm(MoreInfoLink, { link: InfoLink.SharedMailboxes, isSmall: true }),\n\t\t\t\t  ])\n\t\t\t\t: m(\"\"),\n\t\t]\n\t}\n}\n\nexport class AddGroupDialogViewModel {\n\tgroupName: string\n\tmailAddress: string\n\tgroupTypes: Array<GroupType>\n\terrorMessageId: TranslationKey | null\n\tavailableDomains: Array<EmailDomainData>\n\tselectedDomain: EmailDomainData\n\tgroupType: GroupType\n\tisVerifactionBusy: boolean\n\t_groupManagementFacade: GroupManagementFacade\n\n\tconstructor(availableDomains: Array<EmailDomainData>, groupManagementFacade: GroupManagementFacade) {\n\t\tthis.availableDomains = availableDomains\n\t\tthis._groupManagementFacade = groupManagementFacade\n\t\tthis.groupTypes = this.getAvailableGroupTypes()\n\t\tthis.groupType = getFirstOrThrow(this.groupTypes)\n\t\tthis.groupName = \"\"\n\t\tthis.mailAddress = \"\"\n\t\tthis.errorMessageId = \"mailAddressNeutral_msg\"\n\t\tthis.isVerifactionBusy = false\n\n\t\tthis.selectedDomain = getFirstOrThrow(availableDomains)\n\t}\n\n\tcreateMailGroup(): Promise<void> {\n\t\treturn this._groupManagementFacade.createMailGroup(this.groupName, this.mailAddress)\n\t}\n\n\tvalidateAddGroupInput(): TranslationKey | null {\n\t\tif (this.groupType === GroupType.Mail) {\n\t\t\treturn this.errorMessageId\n\t\t} else if (this.groupType === GroupType.Template || (this.groupType === GroupType.MailingList && this.groupName.trim() === \"\")) {\n\t\t\treturn \"enterName_msg\"\n\t\t} else {\n\t\t\treturn null\n\t\t}\n\t}\n\n\tgetAvailableGroupTypes(): GroupType[] {\n\t\tif (locator.logins.isEnabled(FeatureType.WhitelabelChild)) {\n\t\t\treturn []\n\t\t} else {\n\t\t\treturn [GroupType.Mail]\n\t\t}\n\t}\n\n\tonEmailChanged(email: string, validationResult: ValidationResult) {\n\t\tthis.errorMessageId = validationResult.errorId\n\n\t\tif (validationResult.isValid) {\n\t\t\tthis.mailAddress = email\n\t\t}\n\t}\n}\n\nexport function show(): void {\n\tgetAvailableDomains(locator.logins).then((availableDomains) => {\n\t\tconst viewModel = new AddGroupDialogViewModel(availableDomains, locator.groupManagementFacade)\n\t\tif (viewModel.getAvailableGroupTypes().length === 0) return Dialog.message(\"selectionNotAvailable_msg\")\n\n\t\tlet addGroupOkAction = async (dialog: Dialog) => {\n\t\t\tif (viewModel.isVerifactionBusy) return\n\t\t\tconst errorId = viewModel.validateAddGroupInput()\n\n\t\t\tif (errorId) {\n\t\t\t\tDialog.message(errorId)\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tconst userController = locator.logins.getUserController()\n\t\t\tconst planType = await userController.getPlanType()\n\t\t\tconst useLegacyBookingItem = await userController.useLegacyBookingItem()\n\n\t\t\tif (viewModel.groupType === GroupType.Mail) {\n\t\t\t\tshowProgressDialog(\n\t\t\t\t\t\"pleaseWait_msg\",\n\t\t\t\t\tshowBuyDialog({\n\t\t\t\t\t\tfeatureType: useLegacyBookingItem ? toFeatureType(planType) : BookingItemFeatureType.SharedMailGroup,\n\t\t\t\t\t\tbookingText: \"sharedMailbox_label\",\n\t\t\t\t\t\tcount: 1,\n\t\t\t\t\t\tfreeAmount: 0,\n\t\t\t\t\t\treactivate: false,\n\t\t\t\t\t}).then((accepted) => {\n\t\t\t\t\t\tif (accepted) {\n\t\t\t\t\t\t\tdialog.close()\n\t\t\t\t\t\t\treturn viewModel.createMailGroup()\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t)\n\t\t\t} else if (viewModel.groupType === GroupType.Template) {\n\t\t\t\taddTemplateGroup(viewModel.groupName).then((success) => {\n\t\t\t\t\tif (success) {\n\t\t\t\t\t\tdialog.close()\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\n\t\tDialog.showActionDialog({\n\t\t\ttitle: viewModel.groupType == GroupType.Mail ? \"createSharedMailbox_label\" : \"addGroup_label\",\n\t\t\tchild: () =>\n\t\t\t\tm(AddGroupDialog, {\n\t\t\t\t\tselectedDomain: viewModel.selectedDomain,\n\t\t\t\t\tgroupType: viewModel.groupType,\n\t\t\t\t\tavailableDomains: availableDomains,\n\t\t\t\t\tavailableGroupTypes: viewModel.groupTypes,\n\t\t\t\t\tname: viewModel.groupName,\n\t\t\t\t\tonGroupNameChanged: (newName) => (viewModel.groupName = newName),\n\t\t\t\t\tonGroupTypeChanged: (newType) => (viewModel.groupType = newType),\n\t\t\t\t\tonEmailChanged: (mailAddress, validationResult) => viewModel.onEmailChanged(mailAddress, validationResult),\n\t\t\t\t\tonBusyStateChanged: (isBusy) => (viewModel.isVerifactionBusy = isBusy),\n\t\t\t\t\tonDomainChanged: (domain) => (viewModel.selectedDomain = domain),\n\t\t\t\t}),\n\t\t\tokAction: addGroupOkAction,\n\t\t})\n\t})\n}\n\n/**\n * @returns {Promise<boolean>} true if group was added, false otherwise\n */\nfunction addTemplateGroup(name: string): Promise<boolean> {\n\treturn showProgressDialog(\n\t\t\"pleaseWait_msg\",\n\t\tlocator.groupManagementFacade\n\t\t\t.createTemplateGroup(name)\n\t\t\t.then(() => true)\n\t\t\t.catch(\n\t\t\t\tofClass(PreconditionFailedError, async (e) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\te.data === TemplateGroupPreconditionFailedReason.BUSINESS_FEATURE_REQUIRED ||\n\t\t\t\t\t\te.data === TemplateGroupPreconditionFailedReason.UNLIMITED_REQUIRED\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst plans = await getAvailablePlansWithTemplates()\n\t\t\t\t\t\tshowPlanUpgradeRequiredDialog(plans)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tDialog.message(lang.makeTranslation(\"confirm_msg\", e.message))\n\t\t\t\t\t}\n\n\t\t\t\t\treturn false\n\t\t\t\t}),\n\t\t\t),\n\t)\n}\n"]}