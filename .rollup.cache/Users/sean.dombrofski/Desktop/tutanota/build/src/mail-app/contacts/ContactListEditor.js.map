{"version":3,"file":"ContactListEditor.js","sourceRoot":"","sources":["../../../../src/mail-app/contacts/ContactListEditor.ts"],"names":[],"mappings":"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","sourcesContent":["import { ContactListGroupRoot } from \"../../common/api/entities/tutanota/TypeRefs.js\"\nimport { locator } from \"../../common/api/main/CommonLocator.js\"\nimport { DialogHeaderBarAttrs } from \"../../common/gui/base/DialogHeaderBar.js\"\nimport { ButtonType } from \"../../common/gui/base/Button.js\"\nimport { Dialog } from \"../../common/gui/base/Dialog.js\"\nimport m, { Children, Component, Vnode } from \"mithril\"\nimport { TextField } from \"../../common/gui/base/TextField.js\"\nimport { px, size } from \"../../common/gui/size.js\"\nimport { IconButton } from \"../../common/gui/base/IconButton.js\"\nimport { Icons } from \"../../common/gui/base/icons/Icons.js\"\nimport { MailRecipientsTextField } from \"../../common/gui/MailRecipientsTextField.js\"\nimport { RecipientsSearchModel } from \"../../common/misc/RecipientsSearchModel.js\"\nimport { lazy, noOp } from \"@tutao/tutanota-utils\"\nimport { lang, TranslationKey } from \"../../common/misc/LanguageViewModel.js\"\nimport { isSameId } from \"../../common/api/common/utils/EntityUtils.js\"\nimport { Keys } from \"../../common/api/common/TutanotaConstants.js\"\nimport { isMailAddress } from \"../../common/misc/FormatValidator.js\"\nimport { cleanMailAddress } from \"../../common/api/common/utils/CommonCalendarUtils.js\"\n\nexport async function showContactListEditor(\n\tcontactListGroupRoot: ContactListGroupRoot | null,\n\theaderText: TranslationKey,\n\tsave: (name: string, addresses: Array<string>) => void,\n\taddressesOnList?: Array<string>,\n): Promise<void> {\n\tlet showNameInput = true\n\tconst recipientsSearch = await locator.recipientsSearchModel()\n\n\tif (contactListGroupRoot) {\n\t\tshowNameInput = false\n\t\trecipientsSearch.setFilter((item) => {\n\t\t\t// Exclude the list that we are editing to not show up in suggestions.\n\t\t\t// It is valid to include other lists to copy them into the current one.\n\t\t\treturn !(item.type === \"contactlist\" && isSameId(item.value.groupRoot._id, contactListGroupRoot._id))\n\t\t})\n\t}\n\n\tconst editorModel = new ContactListEditorModel(addressesOnList ?? [])\n\n\tconst dialogCloseAction = () => {\n\t\tdialog.close()\n\t}\n\n\tlet headerBarAttrs: DialogHeaderBarAttrs = {\n\t\tleft: [\n\t\t\t{\n\t\t\t\tlabel: \"cancel_action\",\n\t\t\t\tclick: dialogCloseAction,\n\t\t\t\ttype: ButtonType.Secondary,\n\t\t\t},\n\t\t],\n\t\tright: [\n\t\t\t{\n\t\t\t\tlabel: \"save_action\",\n\t\t\t\tclick: () => {\n\t\t\t\t\tsave(editorModel.name, editorModel.newAddresses)\n\t\t\t\t\tdialog.close()\n\t\t\t\t},\n\t\t\t\ttype: ButtonType.Primary,\n\t\t\t},\n\t\t],\n\t\tmiddle: headerText,\n\t}\n\n\tconst dialog = Dialog.editDialog(headerBarAttrs, ContactListEditor, {\n\t\tmodel: editorModel,\n\t\tcontactSearch: recipientsSearch,\n\t\tshowNameInput,\n\t}).addShortcut({\n\t\tkey: Keys.ESC,\n\t\texec: () => dialog.close(),\n\t\thelp: \"close_alt\",\n\t})\n\tdialog.show()\n}\n\nexport async function showContactListNameEditor(name: string, save: (name: string) => void): Promise<void> {\n\tlet nameInput = name\n\tlet form = () => [\n\t\tm(TextField, {\n\t\t\tlabel: \"name_label\",\n\t\t\tvalue: nameInput,\n\t\t\toninput: (newInput) => {\n\t\t\t\tnameInput = newInput\n\t\t\t},\n\t\t}),\n\t]\n\tconst okAction = async (dialog: Dialog) => {\n\t\tdialog.close()\n\t\tsave(nameInput)\n\t}\n\n\tDialog.showActionDialog({\n\t\ttitle: \"editContactList_action\",\n\t\tchild: form,\n\t\tallowOkWithReturn: true,\n\t\tokAction: okAction,\n\t})\n}\n\nexport class ContactListEditorModel {\n\tname: string\n\tnewAddresses: Array<string>\n\tcurrentAddresses: Array<string>\n\n\tconstructor(addresses: Array<string>) {\n\t\tthis.name = \"\"\n\t\tthis.newAddresses = []\n\t\tthis.currentAddresses = addresses\n\t}\n\n\taddRecipient(address: string) {\n\t\tthis.newAddresses = [address, ...this.newAddresses]\n\t}\n\n\tremoveRecipient(address: string) {\n\t\tthis.newAddresses = this.newAddresses.filter((a) => address !== a)\n\t}\n}\n\ntype ContactListEditorAttrs = {\n\tmodel: ContactListEditorModel\n\tcontactSearch: RecipientsSearchModel\n\tshowNameInput?: boolean\n}\n\nclass ContactListEditor implements Component<ContactListEditorAttrs> {\n\tprivate model: ContactListEditorModel\n\tprivate search: RecipientsSearchModel\n\tprivate newAddress: string = \"\"\n\tprivate showNameInput: boolean = true\n\n\tconstructor(vnode: Vnode<ContactListEditorAttrs>) {\n\t\tthis.model = vnode.attrs.model\n\t\tthis.search = vnode.attrs.contactSearch\n\t\tthis.showNameInput = vnode.attrs.showNameInput ?? true\n\t}\n\n\tview(): Children {\n\t\tlet helpLabel: lazy<string> | null = null\n\n\t\tif (this.newAddress.trim().length > 0 && !isMailAddress(this.newAddress.trim(), false)) {\n\t\t\thelpLabel = () => lang.get(\"invalidInputFormat_msg\")\n\t\t} else if (\n\t\t\tthis.model.currentAddresses.includes(cleanMailAddress(this.newAddress)) ||\n\t\t\tthis.model.newAddresses.includes(cleanMailAddress(this.newAddress))\n\t\t) {\n\t\t\thelpLabel = () => lang.get(\"addressAlreadyExistsOnList_msg\")\n\t\t}\n\n\t\treturn m(\"\", [\n\t\t\tthis.showNameInput\n\t\t\t\t? m(TextField, {\n\t\t\t\t\t\tlabel: \"name_label\",\n\t\t\t\t\t\tclass: \"big-input pt flex-grow\",\n\t\t\t\t\t\tvalue: this.model.name,\n\t\t\t\t\t\toninput: (name) => (this.model.name = name),\n\t\t\t\t  })\n\t\t\t\t: null,\n\t\t\tm(MailRecipientsTextField, {\n\t\t\t\tlabel: \"addEntries_action\",\n\t\t\t\ttext: this.newAddress,\n\t\t\t\tonTextChanged: (v) => (this.newAddress = v),\n\t\t\t\t// we don't show bubbles, we just want the search dropdown\n\t\t\t\trecipients: [],\n\t\t\t\tdisabled: false,\n\t\t\t\tonRecipientAdded: (address) => {\n\t\t\t\t\tif (!this.model.newAddresses.includes(address) && !this.model.currentAddresses.includes(address)) {\n\t\t\t\t\t\tthis.model.addRecipient(address)\n\t\t\t\t\t}\n\t\t\t\t\tm.redraw()\n\t\t\t\t},\n\t\t\t\t// do nothing because we don't have any bubbles here\n\t\t\t\tonRecipientRemoved: noOp,\n\t\t\t\tsearch: this.search,\n\t\t\t\thelpLabel,\n\t\t\t}),\n\t\t\tthis.model.newAddresses.map((address) => this.renderAddress(address)),\n\t\t])\n\t}\n\n\trenderAddress(address: string) {\n\t\treturn m(\n\t\t\t\".flex\",\n\t\t\t{\n\t\t\t\tstyle: {\n\t\t\t\t\theight: px(size.button_height),\n\t\t\t\t\tborderBottom: \"1px transparent\",\n\t\t\t\t\tmarginTop: px(size.vpad),\n\t\t\t\t},\n\t\t\t},\n\t\t\t[\n\t\t\t\tm(\".flex.col.flex-grow.overflow-hidden.flex-no-grow-shrink-auto\", [address]),\n\t\t\t\tm(\".flex-grow\"),\n\t\t\t\tm(IconButton, {\n\t\t\t\t\ttitle: \"remove_action\",\n\t\t\t\t\ticon: Icons.Cancel,\n\t\t\t\t\tclick: () => this.model.removeRecipient(address),\n\t\t\t\t}),\n\t\t\t],\n\t\t)\n\t}\n}\n"]}