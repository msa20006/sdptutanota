{"version":3,"file":"ImportNativeContactBooksDialog.js","sourceRoot":"","sources":["../../../../../src/mail-app/contacts/view/ImportNativeContactBooksDialog.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAc,MAAM,oCAAoC,CAAA;AAEvE,OAAO,CAAe,MAAM,SAAS,CAAA;AACrC,OAAO,EAAE,QAAQ,EAAE,MAAM,sCAAsC,CAAA;AAC/D,OAAO,EAAE,KAAK,EAAE,MAAM,uBAAuB,CAAA;AAC7C,OAAO,EAAE,IAAI,EAAE,MAAM,2CAA2C,CAAA;AAEhE;;GAEG;AACH,MAAM,OAAO,8BAA8B;IAGb;IAFZ,oBAAoB,CAAa;IAElD,YAA6B,YAAwC;QAAxC,iBAAY,GAAZ,YAAY,CAA4B;QACpE,IAAI,CAAC,oBAAoB,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAA;IAC9E,CAAC;IAED,IAAI;QACH,MAAM,QAAQ,GAAG,KAAK,EAAwB,CAAA;QAC9C,MAAM,MAAM,GAAG,MAAM,CAAC,gBAAgB,CAAC;YACtC,KAAK,EAAE,sBAAsB;YAC7B,IAAI,0CAAuB;YAC3B,WAAW,EAAE,IAAI;YACjB,KAAK,EAAE,GAAG,EAAE;gBACX,OAAO,CAAC,CACP,SAAS,EACT,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CACrD,CAAA;YACF,CAAC;YACD,QAAQ,EAAE,GAAG,EAAE;gBACd,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;gBAC5F,MAAM,CAAC,KAAK,EAAE,CAAA;YACf,CAAC;YACD,YAAY,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC;SAC1C,CAAC,CAAA;QACF,OAAO,QAAQ,CAAC,OAAO,CAAA;IACxB,CAAC;IAEO,SAAS,CAAC,IAAiB;QAClC,MAAM,OAAO,GAAG,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;QACtD,OAAO,CAAC,CACP,oBAAoB,EACpB,CAAC,CAAC,QAAQ,EAAE;YACX,OAAO;YACP,KAAK,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,GAAG,CAAC,mCAAmC,CAAC;YACvE,SAAS,EAAE,GAAG,EAAE;gBACf,IAAI,OAAO,EAAE,CAAC;oBACb,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;gBAC1C,CAAC;qBAAM,CAAC;oBACP,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;gBACvC,CAAC;YACF,CAAC;SACD,CAAC,CACF,CAAA;IACF,CAAC;CACD","sourcesContent":["import { Dialog, DialogType } from \"../../../common/gui/base/Dialog.js\"\nimport { ContactBook } from \"../../../common/native/common/generatedipc/ContactBook.js\"\nimport m, { Children } from \"mithril\"\nimport { Checkbox } from \"../../../common/gui/base/Checkbox.js\"\nimport { defer } from \"@tutao/tutanota-utils\"\nimport { lang } from \"../../../common/misc/LanguageViewModel.js\"\n\n/**\n * Displays a list of contact books to import contacts from.\n */\nexport class ImportNativeContactBooksDialog {\n\tprivate readonly selectedContactBooks: Set<string>\n\n\tconstructor(private readonly contactBooks: ReadonlyArray<ContactBook>) {\n\t\tthis.selectedContactBooks = new Set(this.contactBooks.map((book) => book.id))\n\t}\n\n\tshow(): Promise<ContactBook[] | null> {\n\t\tconst deferred = defer<ContactBook[] | null>()\n\t\tconst dialog = Dialog.showActionDialog({\n\t\t\ttitle: \"importContacts_label\",\n\t\t\ttype: DialogType.EditMedium,\n\t\t\tallowCancel: true,\n\t\t\tchild: () => {\n\t\t\t\treturn m(\n\t\t\t\t\t\".scroll\",\n\t\t\t\t\tthis.contactBooks.map((book) => this.renderRow(book)),\n\t\t\t\t)\n\t\t\t},\n\t\t\tokAction: () => {\n\t\t\t\tdeferred.resolve(this.contactBooks.filter((book) => this.selectedContactBooks.has(book.id)))\n\t\t\t\tdialog.close()\n\t\t\t},\n\t\t\tcancelAction: () => deferred.resolve(null),\n\t\t})\n\t\treturn deferred.promise\n\t}\n\n\tprivate renderRow(book: ContactBook): Children {\n\t\tconst checked = this.selectedContactBooks.has(book.id)\n\t\treturn m(\n\t\t\t\".flex.items-center\",\n\t\t\tm(Checkbox, {\n\t\t\t\tchecked,\n\t\t\t\tlabel: () => book.name ?? lang.get(\"pushIdentifierCurrentDevice_label\"),\n\t\t\t\tonChecked: () => {\n\t\t\t\t\tif (checked) {\n\t\t\t\t\t\tthis.selectedContactBooks.delete(book.id)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.selectedContactBooks.add(book.id)\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t}),\n\t\t)\n\t}\n}\n"]}