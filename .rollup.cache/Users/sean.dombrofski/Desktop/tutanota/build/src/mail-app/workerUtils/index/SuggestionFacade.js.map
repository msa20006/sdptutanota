{"version":3,"file":"SuggestionFacade.js","sourceRoot":"","sources":["../../../../../src/mail-app/workerUtils/index/SuggestionFacade.ts"],"names":[],"mappings":"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","sourcesContent":["import type { Db } from \"../../../common/api/worker/search/SearchTypes.js\"\nimport { stringToUtf8Uint8Array, TypeRef, utf8Uint8ArrayToString } from \"@tutao/tutanota-utils\"\nimport { aesDecrypt, aes256EncryptSearchIndexEntry, unauthenticatedAesDecrypt } from \"@tutao/tutanota-crypto\"\nimport { SearchTermSuggestionsOS } from \"../../../common/api/worker/search/IndexTables.js\"\n\nexport type SuggestionsType = Record<string, string[]>\n\nexport class SuggestionFacade<T> {\n\t_db: Db\n\ttype: TypeRef<T>\n\t_suggestions: SuggestionsType\n\n\tconstructor(type: TypeRef<T>, db: Db) {\n\t\tthis.type = type\n\t\tthis._db = db\n\t\tthis._suggestions = {}\n\t}\n\n\tload(): Promise<void> {\n\t\treturn this._db.initialized.then(() => {\n\t\t\treturn this._db.dbFacade.createTransaction(true, [SearchTermSuggestionsOS]).then((t) => {\n\t\t\t\treturn t.get(SearchTermSuggestionsOS, this.type.type.toLowerCase()).then((encSuggestions) => {\n\t\t\t\t\tif (encSuggestions) {\n\t\t\t\t\t\tthis._suggestions = JSON.parse(utf8Uint8ArrayToString(unauthenticatedAesDecrypt(this._db.key, encSuggestions, true)))\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._suggestions = {}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t})\n\t\t})\n\t}\n\n\taddSuggestions(words: string[]): void {\n\t\tfor (const word of words) {\n\t\t\tif (word.length > 0) {\n\t\t\t\tlet key = word.charAt(0)\n\n\t\t\t\tif (this._suggestions[key]) {\n\t\t\t\t\tlet existingValues = this._suggestions[key]\n\n\t\t\t\t\tif (existingValues.indexOf(word) === -1) {\n\t\t\t\t\t\tlet insertIndex = existingValues.findIndex((v) => word < v)\n\n\t\t\t\t\t\tif (insertIndex === -1) {\n\t\t\t\t\t\t\texistingValues.push(word)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\texistingValues.splice(insertIndex, 0, word)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis._suggestions[key] = [word]\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tgetSuggestions(word: string): string[] {\n\t\tif (word.length > 0) {\n\t\t\tlet key = word.charAt(0)\n\t\t\tlet result = this._suggestions[key]\n\t\t\treturn result ? result.filter((r) => r.startsWith(word)) : []\n\t\t} else {\n\t\t\treturn []\n\t\t}\n\t}\n\n\tstore(): Promise<void> {\n\t\treturn this._db.initialized.then(() => {\n\t\t\treturn this._db.dbFacade.createTransaction(false, [SearchTermSuggestionsOS]).then((t) => {\n\t\t\t\tlet encSuggestions = aes256EncryptSearchIndexEntry(this._db.key, stringToUtf8Uint8Array(JSON.stringify(this._suggestions)))\n\t\t\t\tt.put(SearchTermSuggestionsOS, this.type.type.toLowerCase(), encSuggestions)\n\t\t\t\treturn t.wait()\n\t\t\t})\n\t\t})\n\t}\n}\n"]}