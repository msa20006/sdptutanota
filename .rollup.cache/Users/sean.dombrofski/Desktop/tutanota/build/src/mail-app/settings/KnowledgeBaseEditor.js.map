{"version":3,"file":"KnowledgeBaseEditor.js","sourceRoot":"","sources":["../../../../src/mail-app/settings/KnowledgeBaseEditor.ts"],"names":[],"mappings":"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","sourcesContent":["import m, { Children, Component, Vnode } from \"mithril\"\nimport type { EmailTemplate, KnowledgeBaseEntry, TemplateGroupRoot } from \"../../common/api/entities/tutanota/TypeRefs.js\"\nimport { ButtonColor, ButtonType } from \"../../common/gui/base/Button.js\"\nimport { KnowledgeBaseEditorModel } from \"./KnowledgeBaseEditorModel\"\nimport { noOp, ofClass } from \"@tutao/tutanota-utils\"\nimport { TextField } from \"../../common/gui/base/TextField.js\"\nimport { Dialog } from \"../../common/gui/base/Dialog\"\nimport type { DialogHeaderBarAttrs } from \"../../common/gui/base/DialogHeaderBar\"\nimport { lang } from \"../../common/misc/LanguageViewModel\"\nimport { locator } from \"../../common/api/main/CommonLocator\"\nimport type { DropdownChildAttrs } from \"../../common/gui/base/Dropdown.js\"\nimport { createAsyncDropdown } from \"../../common/gui/base/Dropdown.js\"\nimport { showUserError } from \"../../common/misc/ErrorHandlerImpl\"\nimport { elementIdPart, getLetId, listIdPart } from \"../../common/api/common/utils/EntityUtils\"\nimport { HtmlEditor } from \"../../common/gui/editor/HtmlEditor\"\nimport { UserError } from \"../../common/api/main/UserError\"\nimport { TEMPLATE_SHORTCUT_PREFIX } from \"../templates/model/TemplatePopupModel\"\nimport { IconButtonAttrs } from \"../../common/gui/base/IconButton.js\"\nimport { Icons } from \"../../common/gui/base/icons/Icons.js\"\nimport { ButtonSize } from \"../../common/gui/base/ButtonSize.js\"\n\n/**\n *  Editor to edit / add a knowledgeBase entry\n *  Returned promise resolves when the dialog closes\n */\nexport function showKnowledgeBaseEditor(entry: KnowledgeBaseEntry | null, templateGroupRoot: TemplateGroupRoot): void {\n\tconst { entityClient } = locator\n\tconst editorModel = new KnowledgeBaseEditorModel(entry, templateGroupRoot, entityClient)\n\n\tconst closeDialog = () => {\n\t\tdialog.close()\n\t}\n\n\tconst saveAction = () => {\n\t\teditorModel.save().then(closeDialog).catch(ofClass(UserError, showUserError))\n\t}\n\n\tconst headerBarAttrs: DialogHeaderBarAttrs = {\n\t\tleft: [\n\t\t\t{\n\t\t\t\tlabel: \"cancel_action\",\n\t\t\t\tclick: closeDialog,\n\t\t\t\ttype: ButtonType.Secondary,\n\t\t\t},\n\t\t],\n\t\tright: [\n\t\t\t{\n\t\t\t\tlabel: \"save_action\",\n\t\t\t\tclick: saveAction,\n\t\t\t\ttype: ButtonType.Primary,\n\t\t\t},\n\t\t],\n\t\tmiddle: editorModel.entry._id ? \"editEntry_label\" : \"createEntry_action\",\n\t}\n\tconst dialog = Dialog.editDialog(headerBarAttrs, KnowledgeBaseEditor, editorModel)\n\tdialog.show()\n}\n\nclass KnowledgeBaseEditor implements Component<KnowledgeBaseEditorModel> {\n\tentryContentEditor: HtmlEditor\n\tlinkedTemplateButtonAttrs: IconButtonAttrs\n\n\tconstructor(vnode: Vnode<KnowledgeBaseEditorModel>) {\n\t\tconst model = vnode.attrs\n\t\tthis.linkedTemplateButtonAttrs = {\n\t\t\ttitle: \"linkTemplate_label\",\n\t\t\ticon: Icons.Add,\n\t\t\tcolors: ButtonColor.Elevated,\n\t\t\tclick: (e, dom) => {\n\t\t\t\te.stopPropagation()\n\t\t\t\tcreateAsyncDropdown({\n\t\t\t\t\tlazyButtons: () => this._createDropdownChildAttrs(model),\n\t\t\t\t})(e, dom)\n\t\t\t},\n\t\t\tsize: ButtonSize.Compact,\n\t\t}\n\t\tthis.entryContentEditor = new HtmlEditor(\"content_label\")\n\t\t\t.showBorders()\n\t\t\t.setMinHeight(500)\n\t\t\t.enableToolbar()\n\t\t\t.setToolbarOptions({\n\t\t\t\tcustomButtonAttrs: [this.linkedTemplateButtonAttrs],\n\t\t\t})\n\t\tmodel.setDescriptionProvider(() => {\n\t\t\treturn this.entryContentEditor.getValue()\n\t\t})\n\n\t\tif (model.isUpdate()) {\n\t\t\tthis.entryContentEditor.setValue(model.entry.description)\n\t\t}\n\t}\n\n\t_createDropdownChildAttrs(model: KnowledgeBaseEditorModel): Promise<Array<DropdownChildAttrs>> {\n\t\treturn model.availableTemplates.getAsync().then((templates) => {\n\t\t\tif (templates.length > 0) {\n\t\t\t\treturn templates.map((template) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tlabel: lang.makeTranslation(\"tag\", template.tag),\n\t\t\t\t\t\tclick: () => this.entryContentEditor.editor.insertHTML(createTemplateLink(template)),\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\treturn [\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: \"noEntries_msg\",\n\t\t\t\t\t\tclick: noOp,\n\t\t\t\t\t},\n\t\t\t\t]\n\t\t\t}\n\t\t})\n\t}\n\n\tview(vnode: Vnode<KnowledgeBaseEditorModel>): Children {\n\t\tconst model = vnode.attrs\n\t\treturn m(\"\", [\n\t\t\tm(TextField, {\n\t\t\t\tlabel: \"title_placeholder\",\n\t\t\t\tvalue: model.title(),\n\t\t\t\toninput: model.title,\n\t\t\t}),\n\t\t\tm(TextField, {\n\t\t\t\tlabel: \"keywords_label\",\n\t\t\t\tvalue: model.keywords(),\n\t\t\t\toninput: model.keywords,\n\t\t\t}),\n\t\t\tm(this.entryContentEditor),\n\t\t])\n\t}\n}\n\nfunction createTemplateLink(template: EmailTemplate): string {\n\tconst listId = listIdPart(getLetId(template))\n\tconst elementId = elementIdPart(getLetId(template))\n\treturn `<a href=\"tutatemplate:${listId}/${elementId}\">${TEMPLATE_SHORTCUT_PREFIX + template.tag}</a>`\n}\n"]}