{"version":3,"file":"MailFoldersView.js","sourceRoot":"","sources":["../../../../../src/mail-app/mail/view/MailFoldersView.ts"],"names":[],"mappings":"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","sourcesContent":["import m, { Child, Children, Component, Vnode } from \"mithril\"\nimport { MailboxDetail } from \"../../../common/mailFunctionality/MailboxModel.js\"\nimport { locator } from \"../../../common/api/main/CommonLocator.js\"\nimport { SidebarSection } from \"../../../common/gui/SidebarSection.js\"\nimport { IconButton, IconButtonAttrs } from \"../../../common/gui/base/IconButton.js\"\nimport { FolderSubtree, FolderSystem } from \"../../../common/api/common/mail/FolderSystem.js\"\nimport { elementIdPart, getElementId } from \"../../../common/api/common/utils/EntityUtils.js\"\nimport { isSelectedPrefix, NavButtonAttrs, NavButtonColor } from \"../../../common/gui/base/NavButton.js\"\nimport { MAIL_PREFIX } from \"../../../common/misc/RouteChange.js\"\nimport { MailFolderRow } from \"./MailFolderRow.js\"\nimport { last, noOp, Thunk } from \"@tutao/tutanota-utils\"\nimport { MailFolder } from \"../../../common/api/entities/tutanota/TypeRefs.js\"\nimport { attachDropdown, DropdownButtonAttrs } from \"../../../common/gui/base/Dropdown.js\"\nimport { Icons } from \"../../../common/gui/base/icons/Icons.js\"\nimport { ButtonColor } from \"../../../common/gui/base/Button.js\"\nimport { ButtonSize } from \"../../../common/gui/base/ButtonSize.js\"\nimport { MailSetKind } from \"../../../common/api/common/TutanotaConstants.js\"\nimport { px, size } from \"../../../common/gui/size.js\"\nimport { RowButton } from \"../../../common/gui/base/buttons/RowButton.js\"\nimport { MailModel } from \"../model/MailModel.js\"\nimport { getFolderName, MAX_FOLDER_INDENT_LEVEL } from \"../model/MailUtils.js\"\nimport { getFolderIcon } from \"./MailGuiUtils.js\"\nimport { isSpamOrTrashFolder } from \"../model/MailChecks.js\"\nimport { DropData } from \"../../../common/gui/base/GuiUtils\"\nimport { lang } from \"../../../common/misc/LanguageViewModel.js\"\n\nexport interface MailFolderViewAttrs {\n\tmailModel: MailModel\n\tmailboxDetail: MailboxDetail\n\tmailFolderElementIdToSelectedMailId: ReadonlyMap<Id, Id>\n\tonFolderClick: (folder: MailFolder) => unknown\n\tonFolderDrop: (dropData: DropData, folder: MailFolder) => unknown\n\texpandedFolders: ReadonlySet<Id>\n\tonFolderExpanded: (folder: MailFolder, state: boolean) => unknown\n\tonShowFolderAddEditDialog: (mailGroupId: Id, folder: MailFolder | null, parentFolder: MailFolder | null) => unknown\n\tonDeleteCustomMailFolder: (folder: MailFolder) => unknown\n\tinEditMode: boolean\n\tonEditMailbox: () => unknown\n}\n\ntype Counters = Record<string, number>\n\n/** Displays a tree of all folders. */\nexport class MailFoldersView implements Component<MailFolderViewAttrs> {\n\t// Contains the id of the visible row\n\tprivate visibleRow: string | null = null\n\n\tview({ attrs }: Vnode<MailFolderViewAttrs>): Children {\n\t\tconst { mailboxDetail, mailModel } = attrs\n\t\tconst groupCounters = mailModel.mailboxCounters()[mailboxDetail.mailGroup._id] || {}\n\t\tconst folders = mailModel.getFolderSystemByGroupId(mailboxDetail.mailGroup._id)\n\t\t// Important: this array is keyed so each item must have a key and `null` cannot be in the array\n\t\t// So instead we push or not push into array\n\t\tconst customSystems = folders?.customSubtrees ?? []\n\t\tconst systemSystems = folders?.systemSubtrees.filter((f) => f.folder.folderType !== MailSetKind.Imported) ?? []\n\t\tconst children: Children = []\n\t\tconst selectedFolder = folders\n\t\t\t?.getIndentedList()\n\t\t\t.map((f) => f.folder)\n\t\t\t.find((f) => isSelectedPrefix(MAIL_PREFIX + \"/\" + getElementId(f)))\n\t\tconst path = folders && selectedFolder ? folders.getPathToFolder(selectedFolder._id) : []\n\t\tconst isInternalUser = locator.logins.isInternalUserLoggedIn()\n\t\tconst systemChildren = folders && this.renderFolderTree(systemSystems, groupCounters, folders, attrs, path, isInternalUser)\n\t\tif (systemChildren) {\n\t\t\tchildren.push(...systemChildren.children)\n\t\t}\n\t\tif (isInternalUser) {\n\t\t\tconst customChildren = folders ? this.renderFolderTree(customSystems, groupCounters, folders, attrs, path, isInternalUser).children : []\n\t\t\tchildren.push(\n\t\t\t\tm(\n\t\t\t\t\tSidebarSection,\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"yourFolders_action\",\n\t\t\t\t\t\tbutton: attrs.inEditMode ? this.renderCreateFolderAddButton(null, attrs) : this.renderEditFoldersButton(attrs),\n\t\t\t\t\t\tkey: \"yourFolders\", // we need to set a key because folder rows also have a key.\n\t\t\t\t\t},\n\t\t\t\t\tcustomChildren,\n\t\t\t\t),\n\t\t\t)\n\t\t\tchildren.push(this.renderAddFolderButtonRow(attrs))\n\t\t}\n\t\treturn children\n\t}\n\n\tprivate renderFolderTree(\n\t\tsubSystems: readonly FolderSubtree[],\n\t\tgroupCounters: Counters,\n\t\tfolders: FolderSystem,\n\t\tattrs: MailFolderViewAttrs,\n\t\tpath: MailFolder[],\n\t\tisInternalUser: boolean,\n\t\tindentationLevel: number = 0,\n\t): { children: Children[]; numRows: number } {\n\t\t// we need to keep track of how many rows we've drawn so far for this subtree so that we can draw hierarchy lines correctly\n\t\tconst result: { children: Children[]; numRows: number } = { children: [], numRows: 0 }\n\t\tfor (let system of subSystems) {\n\t\t\tconst id = getElementId(system.folder)\n\t\t\tconst folderName = getFolderName(system.folder)\n\t\t\tconst button: NavButtonAttrs = {\n\t\t\t\tlabel: lang.makeTranslation(`folder:${folderName}`, folderName),\n\t\t\t\thref: () => {\n\t\t\t\t\tif (attrs.inEditMode) {\n\t\t\t\t\t\treturn m.route.get()\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst folderElementId = getElementId(system.folder)\n\t\t\t\t\t\tconst mailId = attrs.mailFolderElementIdToSelectedMailId.get(folderElementId)\n\t\t\t\t\t\tif (mailId) {\n\t\t\t\t\t\t\treturn `${MAIL_PREFIX}/${folderElementId}/${mailId}`\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn `${MAIL_PREFIX}/${folderElementId}`\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tisSelectedPrefix: attrs.inEditMode ? false : MAIL_PREFIX + \"/\" + getElementId(system.folder),\n\t\t\t\tcolors: NavButtonColor.Nav,\n\t\t\t\tclick: () => attrs.onFolderClick(system.folder),\n\t\t\t\tdropHandler: (dropData) => attrs.onFolderDrop(dropData, system.folder),\n\t\t\t\tdisableHoverBackground: true,\n\t\t\t\tdisabled: attrs.inEditMode,\n\t\t\t}\n\t\t\tconst currentExpansionState = attrs.inEditMode ? true : attrs.expandedFolders.has(getElementId(system.folder)) ?? false //default is false\n\t\t\tconst hasChildren = system.children.length > 0\n\t\t\tconst counterId = getElementId(system.folder)\n\t\t\tconst summedCount = !currentExpansionState && hasChildren ? this.getTotalFolderCounter(groupCounters, system) : groupCounters[counterId]\n\t\t\tconst childResult =\n\t\t\t\thasChildren && currentExpansionState\n\t\t\t\t\t? this.renderFolderTree(system.children, groupCounters, folders, attrs, path, isInternalUser, indentationLevel + 1)\n\t\t\t\t\t: { children: null, numRows: 0 }\n\t\t\tconst isTrashOrSpam = system.folder.folderType === MailSetKind.TRASH || system.folder.folderType === MailSetKind.SPAM\n\t\t\tconst isRightButtonVisible = this.visibleRow === id\n\t\t\tconst rightButton =\n\t\t\t\tisInternalUser && !isTrashOrSpam && (isRightButtonVisible || attrs.inEditMode)\n\t\t\t\t\t? this.createFolderMoreButton(system.folder, folders, attrs, () => {\n\t\t\t\t\t\t\tthis.visibleRow = null\n\t\t\t\t\t  })\n\t\t\t\t\t: null\n\t\t\tconst render = m.fragment(\n\t\t\t\t{\n\t\t\t\t\tkey: id,\n\t\t\t\t},\n\t\t\t\t[\n\t\t\t\t\tm(MailFolderRow, {\n\t\t\t\t\t\tcount: attrs.inEditMode ? 0 : summedCount,\n\t\t\t\t\t\tbutton,\n\t\t\t\t\t\tfolder: system.folder,\n\t\t\t\t\t\trightButton,\n\t\t\t\t\t\texpanded: hasChildren ? currentExpansionState : null,\n\t\t\t\t\t\tindentationLevel: Math.min(indentationLevel, MAX_FOLDER_INDENT_LEVEL),\n\t\t\t\t\t\tonExpanderClick: hasChildren ? () => attrs.onFolderExpanded(system.folder, currentExpansionState) : noOp,\n\t\t\t\t\t\thasChildren,\n\t\t\t\t\t\tonSelectedPath: path.includes(system.folder),\n\t\t\t\t\t\tnumberOfPreviousRows: result.numRows,\n\t\t\t\t\t\tisLastSibling: last(subSystems) === system,\n\t\t\t\t\t\teditMode: attrs.inEditMode,\n\t\t\t\t\t\tonHover: () => {\n\t\t\t\t\t\t\tthis.visibleRow = id\n\t\t\t\t\t\t},\n\t\t\t\t\t}),\n\t\t\t\t\tchildResult.children,\n\t\t\t\t],\n\t\t\t)\n\t\t\tresult.numRows += childResult.numRows + 1\n\t\t\tresult.children.push(render)\n\t\t}\n\t\treturn result\n\t}\n\n\tprivate renderAddFolderButtonRow(attrs: MailFolderViewAttrs): Child {\n\t\t// This button needs to fill the whole row, but is not a navigation button (so IconButton or NavButton weren't appropriate)\n\t\treturn m(RowButton, {\n\t\t\tlabel: \"addFolder_action\",\n\t\t\tkey: \"addFolder\",\n\t\t\ticon: Icons.Add,\n\t\t\tclass: \"folder-row mlr-button border-radius-small\",\n\t\t\tstyle: {\n\t\t\t\twidth: `calc(100% - ${px(size.hpad_button * 2)})`,\n\t\t\t},\n\t\t\tonclick: () => {\n\t\t\t\tattrs.onShowFolderAddEditDialog(attrs.mailboxDetail.mailGroup._id, null, null)\n\t\t\t},\n\t\t})\n\t}\n\n\tprivate getTotalFolderCounter(counters: Counters, system: FolderSubtree): number {\n\t\tconst counterId = getElementId(system.folder)\n\t\treturn (counters[counterId] ?? 0) + system.children.reduce((acc, child) => acc + this.getTotalFolderCounter(counters, child), 0)\n\t}\n\n\tprivate createFolderMoreButton(folder: MailFolder, folders: FolderSystem, attrs: MailFolderViewAttrs, onClose: Thunk): IconButtonAttrs {\n\t\treturn attachDropdown({\n\t\t\tmainButtonAttrs: {\n\t\t\t\ttitle: \"more_label\",\n\t\t\t\ticon: Icons.More,\n\t\t\t\tcolors: ButtonColor.Nav,\n\t\t\t\tsize: ButtonSize.Compact,\n\t\t\t},\n\t\t\tchildAttrs: () => {\n\t\t\t\treturn folder.folderType === MailSetKind.CUSTOM\n\t\t\t\t\t? // cannot add new folder to custom folder in spam or trash folder\n\t\t\t\t\t  isSpamOrTrashFolder(folders, folder)\n\t\t\t\t\t\t? [this.editButtonAttrs(attrs, folders, folder), this.deleteButtonAttrs(attrs, folder)]\n\t\t\t\t\t\t: [this.editButtonAttrs(attrs, folders, folder), this.addButtonAttrs(attrs, folder), this.deleteButtonAttrs(attrs, folder)]\n\t\t\t\t\t: [this.addButtonAttrs(attrs, folder)]\n\t\t\t},\n\t\t\tonClose,\n\t\t})\n\t}\n\n\tprivate deleteButtonAttrs(attrs: MailFolderViewAttrs, folder: MailFolder): DropdownButtonAttrs {\n\t\treturn {\n\t\t\tlabel: \"delete_action\",\n\t\t\ticon: Icons.Trash,\n\t\t\tclick: () => {\n\t\t\t\tattrs.onDeleteCustomMailFolder(folder)\n\t\t\t},\n\t\t}\n\t}\n\n\tprivate addButtonAttrs(attrs: MailFolderViewAttrs, folder: MailFolder): DropdownButtonAttrs {\n\t\treturn {\n\t\t\tlabel: \"addFolder_action\",\n\t\t\ticon: Icons.Add,\n\t\t\tclick: () => {\n\t\t\t\tattrs.onShowFolderAddEditDialog(attrs.mailboxDetail.mailGroup._id, null, folder)\n\t\t\t},\n\t\t}\n\t}\n\n\tprivate editButtonAttrs(attrs: MailFolderViewAttrs, folders: FolderSystem, folder: MailFolder): DropdownButtonAttrs {\n\t\treturn {\n\t\t\tlabel: \"edit_action\",\n\t\t\ticon: Icons.Edit,\n\t\t\tclick: () => {\n\t\t\t\tattrs.onShowFolderAddEditDialog(\n\t\t\t\t\tattrs.mailboxDetail.mailGroup._id,\n\t\t\t\t\tfolder,\n\t\t\t\t\tfolder.parentFolder ? folders.getFolderById(elementIdPart(folder.parentFolder)) : null,\n\t\t\t\t)\n\t\t\t},\n\t\t}\n\t}\n\n\tprivate renderCreateFolderAddButton(parentFolder: MailFolder | null, attrs: MailFolderViewAttrs): Child {\n\t\treturn m(IconButton, {\n\t\t\ttitle: \"addFolder_action\",\n\t\t\tclick: () => {\n\t\t\t\treturn attrs.onShowFolderAddEditDialog(attrs.mailboxDetail.mailGroup._id, null, parentFolder)\n\t\t\t},\n\t\t\ticon: Icons.Add,\n\t\t\tsize: ButtonSize.Compact,\n\t\t})\n\t}\n\n\tprivate renderEditFoldersButton(attrs: MailFolderViewAttrs): Child {\n\t\treturn m(IconButton, {\n\t\t\ttitle: \"edit_action\",\n\t\t\tclick: () => attrs.onEditMailbox(),\n\t\t\ticon: Icons.Edit,\n\t\t\tsize: ButtonSize.Compact,\n\t\t})\n\t}\n}\n"]}