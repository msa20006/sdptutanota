{"version":3,"file":"OfflineStorageSettings.js","sourceRoot":"","sources":["../../../../src/mail-app/settings/OfflineStorageSettings.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,uCAAuC,EAAE,MAAM,8CAA8C,CAAA;AACtG,OAAO,EAAE,yBAAyB,EAAE,MAAM,gCAAgC,CAAA;AAC1E,OAAO,EAAE,MAAM,EAAE,MAAM,uBAAuB,CAAA;AAI9C;;;;GAIG;AACH,MAAM,OAAO,2BAA2B;IASV;IAAiD;IARtE,cAAc,GAAG,KAAK,CAAA;IACtB,SAAS,GAAmB,IAAI,CAAA;IAExC,gDAAgD;IACxC,SAAS,GAAG,uCAAuC,CAAA;IAE3D,wFAAwF;IACxF,wEAAwE;IACxE,YAA6B,cAA8B,EAAmB,YAA0B;QAA3E,mBAAc,GAAd,cAAc,CAAgB;QAAmB,iBAAY,GAAZ,YAAY,CAAc;IAAG,CAAC;IAE5G,SAAS;QACR,OAAO,IAAI,CAAC,cAAc,IAAI,yBAAyB,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,SAAS,CAAA;IAC9E,CAAC;IAEO,eAAe;QACtB,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE,kCAAkC,CAAC,CAAA;IAC7D,CAAC;IAED;;;;OAIG;IACH,YAAY;QACX,IAAI,CAAC,eAAe,EAAE,CAAA;QACtB,IAAI,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,IAAI,IAAI,CAAC,SAAS,KAAK,uCAAuC,EAAE,CAAC;YACvG,IAAI,CAAC,YAAY,CAAC,uCAAuC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,2CAA2C,EAAE,CAAC,CAAC,CAAC,CAAA;YACpI,IAAI,CAAC,SAAS,GAAG,uCAAuC,CAAA;YACxD,OAAO,uCAAuC,CAAA;QAC/C,CAAC;QACD,OAAO,IAAI,CAAC,SAAS,CAAA;IACtB,CAAC;IAED,KAAK,CAAC,YAAY,CAAC,IAAY;QAC9B,IAAI,CAAC,eAAe,EAAE,CAAA;QACtB,MAAM,IAAI,CAAC,YAAY,CAAC,uBAAuB,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,IAAI,CAAC,CAAA;QACjF,IAAI,CAAC,SAAS,GAAG,IAAI,CAAA;IACtB,CAAC;IAED,KAAK,CAAC,IAAI;QACT,IAAI,CAAC,SAAS,GAAG,yBAAyB,EAAE,CAAA;QAE5C,IAAI,IAAI,CAAC,SAAS,EAAE,CAAC;YACpB,MAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,uBAAuB,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAA;YACpF,IAAI,MAAM,IAAI,IAAI,EAAE,CAAC;gBACpB,IAAI,CAAC,SAAS,GAAG,MAAM,CAAA;YACxB,CAAC;QACF,CAAC;QAED,IAAI,CAAC,cAAc,GAAG,IAAI,CAAA;IAC3B,CAAC;CACD","sourcesContent":["import { OFFLINE_STORAGE_DEFAULT_TIME_RANGE_DAYS } from \"../../common/api/common/TutanotaConstants.js\"\nimport { isOfflineStorageAvailable } from \"../../common/api/common/Env.js\"\nimport { assert } from \"@tutao/tutanota-utils\"\nimport { UserController } from \"../../common/api/main/UserController\"\nimport { DeviceConfig } from \"../../common/misc/DeviceConfig\"\n\n/**\n * A model for handling offline storage configuration\n * Accessing setters and getters will throw if you are not in a context where an offline database is available\n * Some logic is duplicated from OfflineStorage\n */\nexport class OfflineStorageSettingsModel {\n\tprivate _isInitialized = false\n\tprivate isEnabled: boolean | null = null\n\n\t// the default value will never actually be used\n\tprivate timeRange = OFFLINE_STORAGE_DEFAULT_TIME_RANGE_DAYS\n\n\t// Native interfaces are lazy to allow us to unconditionally construct the SettingsModel\n\t// If we are not in a native context, then they should never be accessed\n\tconstructor(private readonly userController: UserController, private readonly deviceConfig: DeviceConfig) {}\n\n\tavailable(): boolean {\n\t\treturn this._isInitialized && isOfflineStorageAvailable() && !!this.isEnabled\n\t}\n\n\tprivate assertAvailable() {\n\t\tassert(this.available(), \"Not initialized or not available\")\n\t}\n\n\t/**\n\t * get stored time range, will error out if offlineStorage isn't available.\n\t * if the user account is free, always returns the default time range and\n\t * resets the stored value if it's different from the default.\n\t */\n\tgetTimeRange(): number {\n\t\tthis.assertAvailable()\n\t\tif (this.userController.isFreeAccount() && this.timeRange !== OFFLINE_STORAGE_DEFAULT_TIME_RANGE_DAYS) {\n\t\t\tthis.setTimeRange(OFFLINE_STORAGE_DEFAULT_TIME_RANGE_DAYS).catch((e) => console.log(\"error while resetting storage time range:\", e))\n\t\t\tthis.timeRange = OFFLINE_STORAGE_DEFAULT_TIME_RANGE_DAYS\n\t\t\treturn OFFLINE_STORAGE_DEFAULT_TIME_RANGE_DAYS\n\t\t}\n\t\treturn this.timeRange\n\t}\n\n\tasync setTimeRange(days: number): Promise<void> {\n\t\tthis.assertAvailable()\n\t\tawait this.deviceConfig.setOfflineTimeRangeDays(this.userController.userId, days)\n\t\tthis.timeRange = days\n\t}\n\n\tasync init(): Promise<void> {\n\t\tthis.isEnabled = isOfflineStorageAvailable()\n\n\t\tif (this.isEnabled) {\n\t\t\tconst stored = this.deviceConfig.getOfflineTimeRangeDays(this.userController.userId)\n\t\t\tif (stored != null) {\n\t\t\t\tthis.timeRange = stored\n\t\t\t}\n\t\t}\n\n\t\tthis._isInitialized = true\n\t}\n}\n"]}