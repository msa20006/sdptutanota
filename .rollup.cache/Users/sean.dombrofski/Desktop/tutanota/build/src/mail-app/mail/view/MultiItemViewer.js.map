{"version":3,"file":"MultiItemViewer.js","sourceRoot":"","sources":["../../../../../src/mail-app/mail/view/MultiItemViewer.ts"],"names":[],"mappings":"AAAA,OAAO,CAAuB,MAAM,SAAS,CAAA;AAC7C,OAAO,EAAE,gBAAgB,EAAE,MAAM,gCAAgC,CAAA;AACjE,OAAO,qBAAqB,MAAM,gDAAgD,CAAA;AAClF,OAAO,EAAE,IAAI,EAAiC,MAAM,wCAAwC,CAAA;AAE5F,OAAO,EAAE,KAAK,EAAE,MAAM,2BAA2B,CAAA;AAEjD,OAAO,EAAE,MAAM,EAAc,MAAM,oCAAoC,CAAA;AACvE,OAAO,EAAE,YAAY,EAAE,MAAM,kCAAkC,CAAA;AAE/D,gBAAgB,EAAE,CAAA;AAWlB,MAAM,OAAO,eAAe;IAC3B,IAAI,CAAC,EAAE,KAAK,EAAkC;QAC7C,MAAM,EAAE,gBAAgB,EAAE,GAAG,KAAK,CAAA;QAClC,OAAO;YACN,CAAC,CACA,yBAAyB,EACzB,CAAC,CACA,gCAAgC,EAChC,CAAC,CAAC,qBAAqB,EAAE;gBACxB,OAAO,EAAE,KAAK,CAAC,mBAAmB,CAAC,gBAAgB,CAAC;gBACpD,IAAI,6BAAgB;gBACpB,KAAK,EAAE,KAAK,CAAC,kBAAkB;gBAC/B,eAAe,EAAE,KAAK,CAAC,aAAa;gBACpC,aAAa,EAAE,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC;aACpD,CAAC,CACF,CACD;SACD,CAAA;IACF,CAAC;IAEO,yBAAyB,CAAC,EAAE,UAAU,EAAE,WAAW,EAAE,gBAAgB,EAAE,UAAU,EAAE,OAAO,EAA2B;QAC5H,OAAO,UAAU,KAAK,SAAS;YAC9B,CAAC,CAAC,CAAC,CAAC,oBAAoB,EAAE;gBACxB,CAAC,CAAC,MAAM,EAAE;oBACT,KAAK,EAAE,eAAe;oBACtB,IAAI,wCAAsB;oBAC1B,KAAK,EAAE,GAAG,EAAE;wBACX,WAAW,EAAE,CAAA;oBACd,CAAC;iBACD,CAAC;gBACF,CAAC,CAAC,+BAA+B,EAAE,YAAY,EAAE,CAAC;aACjD,CAAC;YACJ,CAAC,CAAC,gBAAgB,CAAC,MAAM,KAAK,CAAC;gBAC/B,CAAC,CAAC,IAAI;gBACN,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE;oBACX,CAAC,CAAC,MAAM,EAAE;wBACT,KAAK,EAAE,eAAe;wBACtB,IAAI,wCAAsB;wBAC1B,KAAK,EAAE,GAAG,EAAE;4BACX,UAAU,EAAE,CAAA;wBACb,CAAC;qBACD,CAAC;oBACF,UAAU,KAAK,UAAU;wBACxB,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE;4BACV,KAAK,EAAE,gBAAgB;4BACvB,IAAI,wCAAsB;4BAC1B,KAAK,EAAE,GAAG,EAAE;gCACX,OAAO,EAAE,CAAA;4BACV,CAAC;yBACA,CAAC;wBACJ,CAAC,CAAC,IAAI;iBACN,CAAC,CAAA;IACN,CAAC;CACD;AAED,MAAM,UAAU,uBAAuB,CAAC,gBAAqC;IAC5E,IAAI,kBAAkB,GAAG,gBAAgB,CAAC,MAAM,CAAA;IAEhD,IAAI,kBAAkB,KAAK,CAAC,EAAE,CAAC;QAC9B,OAAO,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,CAAA;IACzC,CAAC;SAAM,IAAI,kBAAkB,KAAK,CAAC,EAAE,CAAC;QACrC,OAAO,IAAI,CAAC,cAAc,CAAC,qBAAqB,CAAC,CAAA;IAClD,CAAC;SAAM,CAAC;QACP,OAAO,IAAI,CAAC,cAAc,CAAC,wBAAwB,EAAE;YACpD,KAAK,EAAE,kBAAkB;SACzB,CAAC,CAAA;IACH,CAAC;AACF,CAAC","sourcesContent":["import m, { Component, Vnode } from \"mithril\"\nimport { assertMainOrNode } from \"../../../common/api/common/Env\"\nimport ColumnEmptyMessageBox from \"../../../common/gui/base/ColumnEmptyMessageBox\"\nimport { lang, Translation, MaybeTranslation } from \"../../../common/misc/LanguageViewModel\"\nimport { BootIcons } from \"../../../common/gui/base/icons/BootIcons\"\nimport { theme } from \"../../../common/gui/theme\"\nimport type { Mail } from \"../../../common/api/entities/tutanota/TypeRefs.js\"\nimport { Button, ButtonType } from \"../../../common/gui/base/Button.js\"\nimport { progressIcon } from \"../../../common/gui/base/Icon.js\"\n\nassertMainOrNode()\n\nexport type MultiItemViewerAttrs<T> = {\n\tselectedEntities: Array<T>\n\tselectNone: () => unknown\n\tloadingAll: \"can_load\" | \"loading\" | \"loaded\"\n\tloadAll: () => unknown\n\tstopLoadAll: () => unknown\n\tgetSelectionMessage: (entities: ReadonlyArray<T>) => MaybeTranslation\n}\n\nexport class MultiItemViewer<T> implements Component<MultiItemViewerAttrs<T>> {\n\tview({ attrs }: Vnode<MultiItemViewerAttrs<T>>) {\n\t\tconst { selectedEntities } = attrs\n\t\treturn [\n\t\t\tm(\n\t\t\t\t\".flex.col.fill-absolute\",\n\t\t\t\tm(\n\t\t\t\t\t\".flex-grow.rel.overflow-hidden\",\n\t\t\t\t\tm(ColumnEmptyMessageBox, {\n\t\t\t\t\t\tmessage: attrs.getSelectionMessage(selectedEntities),\n\t\t\t\t\t\ticon: BootIcons.Mail,\n\t\t\t\t\t\tcolor: theme.content_message_bg,\n\t\t\t\t\t\tbackgroundColor: theme.navigation_bg,\n\t\t\t\t\t\tbottomContent: this.renderEmptyMessageButtons(attrs),\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t),\n\t\t]\n\t}\n\n\tprivate renderEmptyMessageButtons({ loadingAll, stopLoadAll, selectedEntities, selectNone, loadAll }: MultiItemViewerAttrs<T>) {\n\t\treturn loadingAll === \"loading\"\n\t\t\t? m(\".flex.items-center\", [\n\t\t\t\t\tm(Button, {\n\t\t\t\t\t\tlabel: \"cancel_action\",\n\t\t\t\t\t\ttype: ButtonType.Secondary,\n\t\t\t\t\t\tclick: () => {\n\t\t\t\t\t\t\tstopLoadAll()\n\t\t\t\t\t\t},\n\t\t\t\t\t}),\n\t\t\t\t\tm(\".flex.items-center.plr-button\", progressIcon()),\n\t\t\t  ])\n\t\t\t: selectedEntities.length === 0\n\t\t\t? null\n\t\t\t: m(\".flex\", [\n\t\t\t\t\tm(Button, {\n\t\t\t\t\t\tlabel: \"cancel_action\",\n\t\t\t\t\t\ttype: ButtonType.Secondary,\n\t\t\t\t\t\tclick: () => {\n\t\t\t\t\t\t\tselectNone()\n\t\t\t\t\t\t},\n\t\t\t\t\t}),\n\t\t\t\t\tloadingAll === \"can_load\"\n\t\t\t\t\t\t? m(Button, {\n\t\t\t\t\t\t\t\tlabel: \"loadAll_action\",\n\t\t\t\t\t\t\t\ttype: ButtonType.Secondary,\n\t\t\t\t\t\t\t\tclick: () => {\n\t\t\t\t\t\t\t\t\tloadAll()\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t  })\n\t\t\t\t\t\t: null,\n\t\t\t  ])\n\t}\n}\n\nexport function getMailSelectionMessage(selectedEntities: ReadonlyArray<Mail>): Translation {\n\tlet nbrOfSelectedMails = selectedEntities.length\n\n\tif (nbrOfSelectedMails === 0) {\n\t\treturn lang.getTranslation(\"noMail_msg\")\n\t} else if (nbrOfSelectedMails === 1) {\n\t\treturn lang.getTranslation(\"oneMailSelected_msg\")\n\t} else {\n\t\treturn lang.getTranslation(\"nbrOfMailsSelected_msg\", {\n\t\t\t\"{1}\": nbrOfSelectedMails,\n\t\t})\n\t}\n}\n"]}