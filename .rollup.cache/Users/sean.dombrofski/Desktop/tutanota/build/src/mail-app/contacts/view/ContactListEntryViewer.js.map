{"version":3,"file":"ContactListEntryViewer.js","sourceRoot":"","sources":["../../../../../src/mail-app/contacts/view/ContactListEntryViewer.ts"],"names":[],"mappings":"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","sourcesContent":["import m, { Children, Component, Vnode } from \"mithril\"\nimport { Contact, ContactListEntry, createContact, createContactMailAddress } from \"../../../common/api/entities/tutanota/TypeRefs.js\"\nimport { theme } from \"../../../common/gui/theme.js\"\nimport { Button, ButtonType } from \"../../../common/gui/base/Button.js\"\nimport { responsiveCardHMargin } from \"../../../common/gui/cards.js\"\nimport { ContactCardViewer } from \"./ContactCardViewer.js\"\nimport { ContactAddressType } from \"../../../common/api/common/TutanotaConstants.js\"\nimport { PartialRecipient } from \"../../../common/api/common/recipients/Recipient.js\"\nimport { lang, Translation } from \"../../../common/misc/LanguageViewModel.js\"\n\nexport interface ContactListEntryViewerAttrs {\n\tentry: ContactListEntry\n\tcontacts: Contact[]\n\tcontactEdit: (contact: Contact) => unknown\n\tcontactDelete: (contacts: Contact[]) => unknown\n\tcontactCreate: (contact: Contact) => unknown\n\tonWriteMail: (to: PartialRecipient) => unknown\n\tselectNone: () => unknown\n}\n\nexport class ContactListEntryViewer implements Component<ContactListEntryViewerAttrs> {\n\tview({ attrs }: Vnode<ContactListEntryViewerAttrs>): Children {\n\t\treturn m(\".flex.flex-column\", [\n\t\t\tm(\n\t\t\t\t\".border-radius-big.rel\",\n\t\t\t\t{\n\t\t\t\t\tclass: responsiveCardHMargin(),\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tbackgroundColor: theme.content_bg,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tm(\".plr-l.pt.pb.mlr-safe-inset\", m(\".h2.selectable.text-break\", attrs.entry.emailAddress)),\n\t\t\t),\n\t\t\tm(\".mt-l\"),\n\t\t\tattrs.contacts.length >= 1\n\t\t\t\t? attrs.contacts.map((contact) =>\n\t\t\t\t\t\tm(ContactCardViewer, {\n\t\t\t\t\t\t\tcontact,\n\t\t\t\t\t\t\tonWriteMail: attrs.onWriteMail,\n\t\t\t\t\t\t\teditAction: attrs.contactEdit,\n\t\t\t\t\t\t\tdeleteAction: attrs.contactDelete,\n\t\t\t\t\t\t}),\n\t\t\t\t  )\n\t\t\t\t: m(\n\t\t\t\t\t\t\".border-radius-big.rel\",\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tclass: responsiveCardHMargin(),\n\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\tbackgroundColor: theme.content_bg,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tm(\n\t\t\t\t\t\t\t\".plr-l.pt.pb.mlr-safe-inset\",\n\t\t\t\t\t\t\tlang.get(\"noContactFound_msg\"),\n\t\t\t\t\t\t\tm(Button, {\n\t\t\t\t\t\t\t\tlabel: \"createContact_action\",\n\t\t\t\t\t\t\t\tclick: () => {\n\t\t\t\t\t\t\t\t\tlet newContact = createContact({\n\t\t\t\t\t\t\t\t\t\tmailAddresses: [\n\t\t\t\t\t\t\t\t\t\t\tcreateContactMailAddress({\n\t\t\t\t\t\t\t\t\t\t\t\ttype: ContactAddressType.WORK,\n\t\t\t\t\t\t\t\t\t\t\t\tcustomTypeName: \"\",\n\t\t\t\t\t\t\t\t\t\t\t\taddress: attrs.entry.emailAddress,\n\t\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\toldBirthdayAggregate: null,\n\t\t\t\t\t\t\t\t\t\taddresses: [],\n\t\t\t\t\t\t\t\t\t\tbirthdayIso: null,\n\t\t\t\t\t\t\t\t\t\tcomment: \"\",\n\t\t\t\t\t\t\t\t\t\tcompany: \"\",\n\t\t\t\t\t\t\t\t\t\tfirstName: \"\",\n\t\t\t\t\t\t\t\t\t\tlastName: \"\",\n\t\t\t\t\t\t\t\t\t\tnickname: null,\n\t\t\t\t\t\t\t\t\t\toldBirthdayDate: null,\n\t\t\t\t\t\t\t\t\t\tphoneNumbers: [],\n\t\t\t\t\t\t\t\t\t\tphoto: null,\n\t\t\t\t\t\t\t\t\t\trole: \"\",\n\t\t\t\t\t\t\t\t\t\tpresharedPassword: null,\n\t\t\t\t\t\t\t\t\t\tsocialIds: [],\n\t\t\t\t\t\t\t\t\t\ttitle: null,\n\t\t\t\t\t\t\t\t\t\tdepartment: null,\n\t\t\t\t\t\t\t\t\t\tmiddleName: null,\n\t\t\t\t\t\t\t\t\t\tnameSuffix: null,\n\t\t\t\t\t\t\t\t\t\tphoneticFirst: null,\n\t\t\t\t\t\t\t\t\t\tphoneticLast: null,\n\t\t\t\t\t\t\t\t\t\tphoneticMiddle: null,\n\t\t\t\t\t\t\t\t\t\tcustomDate: [],\n\t\t\t\t\t\t\t\t\t\tmessengerHandles: [],\n\t\t\t\t\t\t\t\t\t\tpronouns: [],\n\t\t\t\t\t\t\t\t\t\trelationships: [],\n\t\t\t\t\t\t\t\t\t\twebsites: [],\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\tattrs.contactCreate(newContact)\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\ttype: ButtonType.Primary,\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t),\n\t\t\t\t  ),\n\t\t])\n\t}\n}\n\nexport function getContactListEntriesSelectionMessage(selectedEntities: ContactListEntry[] | undefined): Translation {\n\tif (selectedEntities && selectedEntities.length > 0) {\n\t\treturn lang.getTranslation(\"nbrOfEntriesSelected_msg\", { \"{nbr}\": selectedEntities.length })\n\t} else {\n\t\treturn lang.getTranslation(\"noSelection_msg\")\n\t}\n}\n"]}