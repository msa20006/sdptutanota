{"version":3,"file":"ExternalLoginView.js","sourceRoot":"","sources":["../../../../../src/mail-app/mail/view/ExternalLoginView.ts"],"names":[],"mappings":"AAAA,OAAO,CAAsB,MAAM,SAAS,CAAA;AAC5C,OAAO,EAAE,kBAAkB,EAAE,MAAM,+CAA+C,CAAA;AAClF,OAAO,EAAE,aAAa,EAAE,kBAAkB,EAAE,iBAAiB,EAAE,IAAI,EAAE,MAAM,uBAAuB,CAAA;AAElG,OAAO,EAAE,IAAI,EAAE,MAAM,2CAA2C,CAAA;AAChE,OAAO,EAAE,UAAU,EAAY,MAAM,oCAAoC,CAAA;AACzE,OAAO,EAAE,MAAM,EAAE,MAAM,wCAAwC,CAAA;AAC/D,OAAO,EAAE,kBAAkB,EAAE,MAAM,+CAA+C,CAAA;AAClF,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,MAAM,iDAAiD,CAAA;AAC1F,OAAO,EAAE,YAAY,EAAE,MAAM,kCAAkC,CAAA;AAE/D,OAAO,EAAE,QAAQ,EAAE,MAAM,sCAAsC,CAAA;AAC/D,OAAO,EAAE,UAAU,EAAE,MAAM,wCAAwC,CAAA;AACnE,OAAO,EAAE,gBAAgB,EAAE,MAAM,iDAAiD,CAAA;AAClF,OAAO,EAAE,oBAAoB,EAAE,wBAAwB,EAAE,MAAM,oCAAoC,CAAA;AAEnG,OAAO,EAAE,gBAAgB,EAAE,MAAM,mCAAmC,CAAA;AACpE,OAAO,EAAE,wBAAwB,EAAE,MAAM,iDAAiD,CAAA;AAI1F,OAAO,EAAE,gBAAgB,EAAE,MAAM,yCAAyC,CAAA;AAC1E,OAAO,EAAE,OAAO,EAAE,MAAM,2CAA2C,CAAA;AACnE,OAAO,EAAE,iBAAiB,EAAE,MAAM,0CAA0C,CAAA;AAC5E,OAAO,EAAE,WAAW,EAAE,MAAM,iDAAiD,CAAA;AAE7E,OAAO,EAAE,aAAa,EAAE,MAAM,iDAAiD,CAAA;AAC/E,OAAO,EAAE,eAAe,EAAE,MAAM,6CAA6C,CAAA;AAE7E,gBAAgB,EAAE,CAAA;AAIlB,MAAM,OAAO,sBAAsB;IAaL;IAZ7B,QAAQ,GAAW,EAAE,CAAA;IACrB,cAAc,GAAY,KAAK,CAAA;IAC/B,QAAQ,GAAqB,iBAAiB,CAAA;IAC9C,cAAc,GAA4B,IAAI,CAAA;IAC9C,mBAAmB,GAAG,KAAK,CAAA;IAC3B,mBAAmB,GAAG,KAAK,CAAA;IAEnB,QAAQ,GAAmB,IAAI,CAAA;IACvC,IAAI,OAAO;QACV,OAAO,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;IACpC,CAAC;IAED,YAA6B,mBAAwC;QAAxC,wBAAmB,GAAnB,mBAAmB,CAAqB;IAAG,CAAC;IAEzE,SAAS;QACR,IAAI,IAAI,CAAC,QAAQ,KAAK,EAAE,EAAE,CAAC;YAC1B,IAAI,CAAC,QAAQ,GAAG,iBAAiB,CAAA;QAClC,CAAC;aAAM,CAAC;YACP,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAA;YAC3B,IAAI,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,EAAE,CAAC,EAAE,IAAI,CAAC,CAAA;QACnF,CAAC;IACF,CAAC;IAEO,KAAK,CAAC,WAAW;QACxB,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAA;QAC9B,MAAM,gBAAgB,GAAG,MAAM,CAAC,OAAO,GAAG,GAAG,GAAG,MAAM,CAAC,MAAM,CAAA;QAC7D,MAAM,iBAAiB,GAAG,IAAI,CAAC,cAAc,CAAA;QAE7C,MAAM,WAAW,GAAG,iBAAiB,CAAC,CAAC,gCAAwB,CAAC,0BAAkB,CAAA;QAClF,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,OAAO,CAAA;QAC9C,MAAM,cAAc,GAAG,MAAM,OAAO,CAAC,MAAM,CAAC,qBAAqB,CAAC,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,gBAAgB,EAAE,WAAW,CAAC,CAAA;QAEjI,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAA;QAElB,MAAM,iBAAiB,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAAC,+BAA+B,CAAC,MAAM,CAAC,CAAA;QAEhG,6DAA6D;QAC7D,IAAI,iBAAiB,EAAE,CAAC;YACvB,MAAM,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,wBAAwB,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC,CAAA;QACrF,CAAC;QAED,IAAI,iBAAiB,EAAE,CAAC;YACvB,wDAAwD;YACxD,MAAM,OAAO,CAAC,MAAM,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,CAAA;YAExD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACxB,MAAM,IAAI,CAAC,mBAAmB,CAAC,cAAc,CAAC,MAAM,CAAC,CAAA;YACtD,CAAC;QACF,CAAC;IACF,CAAC;IAED,KAAK,CAAC,SAAS,CAAC,WAAmC;QAClD,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAA;QAC/B,MAAM,kBAAkB,CACvB,WAAW,EACX,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,EAAE,GAAG,EAAE;YAC7D,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAA;YAChC,CAAC,CAAC,MAAM,EAAE,CAAA;QACX,CAAC,CAAC,CACF,CAAA;IACF,CAAC;IAEO,KAAK,CAAC,aAAa,CAAC,WAAmC;QAC9D,MAAM,MAAM,GAAG,MAAM,OAAO,CAAC,MAAM,CAAC,aAAa,CAAC,WAAW,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,IAAI,CAAC,CAAA;QAChI,IAAI,MAAM,CAAC,IAAI,KAAK,OAAO,EAAE,CAAC;YAC7B,QAAQ,MAAM,CAAC,MAAM,EAAE,CAAC;gBACvB;oBACC,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAA;YAClC,CAAC;QACF,CAAC;IACF,CAAC;IAED,KAAK,CAAC,0BAA0B;QAC/B,IAAI,CAAC;YACJ,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAAC,+BAA+B,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAA;YACvG,IAAI,WAAW,EAAE,CAAC;gBACjB,MAAM,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAA;YAClC,CAAC;QACF,CAAC;gBAAS,CAAC;YACV,gFAAgF;YAChF,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAA;YAChC,CAAC,CAAC,MAAM,EAAE,CAAA;QACX,CAAC;IACF,CAAC;IAEO,KAAK,CAAC,kBAAkB,CAAC,YAA2B,EAAE,WAAuB;QACpF,IAAI,CAAC;YACJ,MAAM,YAAY,CAAA;YAClB,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAA;YACpC,IAAI,CAAC,QAAQ,GAAG,iBAAiB,CAAA;QAClC,CAAC;QAAC,OAAO,CAAC,EAAE,CAAC;YACZ,MAAM,SAAS,GAAG,oBAAoB,CAAC,CAAC,EAAE,IAAI,CAAC,CAAA;YAE/C,IAAI,CAAC,YAAY,kBAAkB,EAAE,CAAC;gBACrC,IAAI,CAAC,cAAc,GAAG,SAAS,CAAA;YAChC,CAAC;iBAAM,CAAC;gBACP,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAA;YAC1B,CAAC;YAED,CAAC,CAAC,MAAM,EAAE,CAAA;YAEV,wBAAwB,CAAC,CAAC,EAAE,WAAW,CAAC,CAAA;QACzC,CAAC;IACF,CAAC;IAED,KAAK,CAAC,SAAS,CAAC,IAAyB;QACxC,IAAI,CAAC;YACJ,MAAM,wBAAwB,GAAG,kBAAkB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAA,CAAC,8DAA8D;YAE9I,MAAM,YAAY,GAAG,CAAC,CAAA;YACtB,MAAM,UAAU,GAAG,YAAY,GAAG,gBAAgB,CAAC,MAAM,CAAA;YACzD,+DAA+D;YAC/D,MAAM,iBAAiB,GAAG,EAAE,CAAA;YAC5B,MAAM,SAAS,GAAG,UAAU,GAAG,iBAAiB,CAAA;YAEhD,6IAA6I;YAC7I,IAAI,OAAO,GAAG,OAAO,CAAC,MAAM,CAAA;YAC5B,IAAI,wBAAwB,CAAC,MAAM,GAAG,SAAS,EAAE,CAAC;gBACjD,OAAO,GAAG,SAAS,CAAC,wBAAwB,CAAC,SAAS,CAAC,SAAS,EAAE,SAAS,GAAG,CAAC,CAAC,CAAC,CAAA;YAClF,CAAC;YAED,IAAI,CAAC,QAAQ,GAAG;gBACf,MAAM,EAAE,wBAAwB,CAAC,SAAS,CAAC,YAAY,EAAE,UAAU,CAAC;gBACpE,IAAI,EAAE,kBAAkB,CAAC,iBAAiB,CAAC,wBAAwB,CAAC,SAAS,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC,CAAC;gBACtG,OAAO,EAAE,OAAO;aAChB,CAAA;YAED,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAAC,+BAA+B,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAA;YAEvG,IAAI,WAAW,IAAI,IAAI,CAAC,WAAW,KAAK,IAAI,EAAE,CAAC;gBAC9C,MAAM,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAA;YAClC,CAAC;iBAAM,CAAC;gBACP,IAAI,CAAC,mBAAmB,GAAG,WAAW,IAAI,IAAI,CAAA;gBAC9C,CAAC,CAAC,MAAM,EAAE,CAAA;YACX,CAAC;QACF,CAAC;QAAC,OAAO,CAAC,EAAE,CAAC;YACZ,IAAI,CAAC,cAAc,GAAG,iBAAiB,CAAA;YACvC,CAAC,CAAC,MAAM,EAAE,CAAA;QACX,CAAC;IACF,CAAC;IAED,OAAO;QACN,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAA;IACnB,CAAC;CACD;AAMD,kHAAkH;AAClH,MAAM,OAAO,iBAAkB,SAAQ,gBAAgB;IACrC,SAAS,CAAwB;IACjC,SAAS,GAAoB;QAC7C;YACC,GAAG,EAAE,IAAI,CAAC,MAAM;YAChB,IAAI,EAAE,GAAG,EAAE;gBACV,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,CAAA;YAC3B,CAAC;YACD,IAAI,EAAE,aAAa;SACnB;KACD,CAAA;IAED,YAAY,KAAoC;QAC/C,KAAK,EAAE,CAAA;QACP,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,KAAK,CAAC,gBAAgB,EAAE,CAAA;IAChD,CAAC;IAED,QAAQ;QACP,UAAU,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA;IAC7C,CAAC;IAED,QAAQ;QACP,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,EAAE,CAAA;QAC5B,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAA;QACxB,UAAU,CAAC,mBAAmB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA;IAC/C,CAAC;IAED,IAAI,CAAC,EAAE,KAAK,EAAiC;QAC5C,OAAO,CAAC,CAAC,4BAA4B,EAAE;YACtC,CAAC,CAAC,iBAAiB,CAAC;YACpB,CAAC,CAAC,yCAAyC,EAAE,CAAC,CAAC,yDAAyD,EAAE,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;SAChI,CAAC,CAAA;IACH,CAAC;IAEO,aAAa;QACpB,IAAI,IAAI,CAAC,SAAS,CAAC,mBAAmB,EAAE,CAAC;YACxC,OAAO,CAAC,CAAC,UAAU,EAAE,YAAY,EAAE,CAAC,CAAA;QACrC,CAAC;aAAM,IAAI,IAAI,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC;YAC1C,OAAO,CAAC,CAAC,UAAU,EAAE,CAAC,CAAC,UAAU,EAAE,EAAE,EAAE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,CAAC,CAAA;QAChG,CAAC;aAAM,CAAC;YACP,OAAO;gBACN,CAAC,CAAC,kDAAkD,EAAE;oBACrD,IAAI,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC,CAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE;oBACrF,CAAC,CAAC,qCAAqC,EAAE,CAAC,CAAC,OAAO,EAAE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,CAAC;iBAC1G,CAAC;gBACF,CAAC,CAAC,YAAY,CAAC;gBACf,eAAe,EAAE;aACjB,CAAA;QACF,CAAC;IACF,CAAC;IAED,qBAAqB;QACpB,OAAO,CAAC,CACP,OAAO,EACP,CAAC,CAAC,WAAW,EAAE;YACd,KAAK,EAAE,iBAAiB;YACxB,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,0BAA0B,EAAE;SAC1D,CAAC,CACF,CAAA;IACF,CAAC;IAED,UAAU;QACT,OAAO;YACN,CAAC,CAAC,aAAa,EAAE;gBAChB,SAAS,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,4BAA4B,CAAC;gBACvD,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ;gBAC9B,cAAc,uDAA8B;gBAC5C,OAAO,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,KAAK,CAAC;aACrD,CAAC;YACF,CAAC,CAAC,QAAQ,EAAE;gBACX,KAAK,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,sBAAsB,CAAC;gBAC7C,SAAS,EAAE,yBAAyB;gBACpC,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,cAAc;gBACtC,SAAS,EAAE,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,cAAc,GAAG,OAAO,CAAC;aACjE,CAAC;YACF,CAAC,CACA,KAAK,EACL,CAAC,CAAC,WAAW,EAAE;gBACd,KAAK,EAAE,iBAAiB;gBACxB,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE;aACzC,CAAC,CACF;SACD,CAAA;IACF,CAAC;IAED,QAAQ,CAAC,IAAyB;QACjC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,CAAA;IAC/B,CAAC;CACD","sourcesContent":["import m, { Children, Vnode } from \"mithril\"\nimport { AccessExpiredError } from \"../../../common/api/common/error/RestError.js\"\nimport { assertNotNull, base64ToUint8Array, base64UrlToBase64, noOp } from \"@tutao/tutanota-utils\"\nimport type { MaybeTranslation } from \"../../../common/misc/LanguageViewModel.js\"\nimport { lang } from \"../../../common/misc/LanguageViewModel.js\"\nimport { keyManager, Shortcut } from \"../../../common/misc/KeyManager.js\"\nimport { client } from \"../../../common/misc/ClientDetector.js\"\nimport { showProgressDialog } from \"../../../common/gui/dialogs/ProgressDialog.js\"\nimport { asKdfType, KdfType, Keys } from \"../../../common/api/common/TutanotaConstants.js\"\nimport { progressIcon } from \"../../../common/gui/base/Icon.js\"\nimport { Autocomplete } from \"../../../common/gui/base/TextField.js\"\nimport { Checkbox } from \"../../../common/gui/base/Checkbox.js\"\nimport { MessageBox } from \"../../../common/gui/base/MessageBox.js\"\nimport { GENERATED_MIN_ID } from \"../../../common/api/common/utils/EntityUtils.js\"\nimport { getLoginErrorMessage, handleExpectedLoginError } from \"../../../common/misc/LoginUtils.js\"\nimport type { CredentialsProvider } from \"../../../common/misc/credentials/CredentialsProvider.js\"\nimport { assertMainOrNode } from \"../../../common/api/common/Env.js\"\nimport { credentialsToUnencrypted } from \"../../../common/misc/credentials/Credentials.js\"\nimport { SessionType } from \"../../../common/api/common/SessionType.js\"\nimport { ResumeSessionErrorReason } from \"../../../common/api/worker/facades/LoginFacade.js\"\nimport { TopLevelAttrs, TopLevelView } from \"../../../TopLevelView.js\"\nimport { BaseTopLevelView } from \"../../../common/gui/BaseTopLevelView.js\"\nimport { locator } from \"../../../common/api/main/CommonLocator.js\"\nimport { LoginScreenHeader } from \"../../../common/gui/LoginScreenHeader.js\"\nimport { LoginButton } from \"../../../common/gui/base/buttons/LoginButton.js\"\nimport { UnencryptedCredentials } from \"../../../common/native/common/generatedipc/UnencryptedCredentials.js\"\nimport { PasswordField } from \"../../../common/misc/passwords/PasswordField.js\"\nimport { renderInfoLinks } from \"../../../common/gui/RenderLoginInfoLinks.js\"\n\nassertMainOrNode()\n\ntype UrlData = { userId: Id; salt: Uint8Array; kdfType: KdfType }\n\nexport class ExternalLoginViewModel {\n\tpassword: string = \"\"\n\tdoSavePassword: boolean = false\n\thelpText: MaybeTranslation = \"emptyString_msg\"\n\terrorMessageId: MaybeTranslation | null = null\n\tautologinInProgress = false\n\tshowAutoLoginButton = false\n\n\tprivate _urlData: UrlData | null = null\n\tget urlData(): UrlData {\n\t\treturn assertNotNull(this._urlData)\n\t}\n\n\tconstructor(private readonly credentialsProvider: CredentialsProvider) {}\n\n\tformLogin() {\n\t\tif (this.password === \"\") {\n\t\t\tthis.helpText = \"loginFailed_msg\"\n\t\t} else {\n\t\t\tthis.helpText = \"login_msg\"\n\t\t\tthis.handleLoginPromise(showProgressDialog(\"login_msg\", this.doFormLogin()), noOp)\n\t\t}\n\t}\n\n\tprivate async doFormLogin() {\n\t\tconst password = this.password\n\t\tconst clientIdentifier = client.browser + \" \" + client.device\n\t\tconst persistentSession = this.doSavePassword\n\n\t\tconst sessionType = persistentSession ? SessionType.Persistent : SessionType.Login\n\t\tconst { userId, salt, kdfType } = this.urlData\n\t\tconst newCredentials = await locator.logins.createExternalSession(userId, password, salt, kdfType, clientIdentifier, sessionType)\n\n\t\tthis.password = \"\"\n\n\t\tconst storedCredentials = await this.credentialsProvider.getDecryptedCredentialsByUserId(userId)\n\n\t\t// For external users userId is used instead of email address\n\t\tif (persistentSession) {\n\t\t\tawait this.credentialsProvider.store(credentialsToUnencrypted(newCredentials, null))\n\t\t}\n\n\t\tif (storedCredentials) {\n\t\t\t// delete persistent session if a new session is created\n\t\t\tawait locator.logins.deleteOldSession(storedCredentials)\n\n\t\t\tif (!persistentSession) {\n\t\t\t\tawait this.credentialsProvider.deleteByUserId(userId)\n\t\t\t}\n\t\t}\n\t}\n\n\tasync autologin(credentials: UnencryptedCredentials) {\n\t\tthis.autologinInProgress = true\n\t\tawait showProgressDialog(\n\t\t\t\"login_msg\",\n\t\t\tthis.handleLoginPromise(this.resumeSession(credentials), () => {\n\t\t\t\tthis.autologinInProgress = false\n\t\t\t\tm.redraw()\n\t\t\t}),\n\t\t)\n\t}\n\n\tprivate async resumeSession(credentials: UnencryptedCredentials): Promise<void> {\n\t\tconst result = await locator.logins.resumeSession(credentials, { salt: this.urlData.salt, kdfType: this.urlData.kdfType }, null)\n\t\tif (result.type === \"error\") {\n\t\t\tswitch (result.reason) {\n\t\t\t\tcase ResumeSessionErrorReason.OfflineNotAvailableForFree:\n\t\t\t\t\tthrow new Error(\"Cannot happen\")\n\t\t\t}\n\t\t}\n\t}\n\n\tasync loginWithStoredCredentials() {\n\t\ttry {\n\t\t\tconst credentials = await this.credentialsProvider.getDecryptedCredentialsByUserId(this.urlData.userId)\n\t\t\tif (credentials) {\n\t\t\t\tawait this.autologin(credentials)\n\t\t\t}\n\t\t} finally {\n\t\t\t// in case there is an error or there are no credentials we should show the form\n\t\t\tthis.showAutoLoginButton = false\n\t\t\tm.redraw()\n\t\t}\n\t}\n\n\tprivate async handleLoginPromise(loginPromise: Promise<void>, errorAction: () => void) {\n\t\ttry {\n\t\t\tawait loginPromise\n\t\t\tm.route.set(`/mail${location.hash}`)\n\t\t\tthis.helpText = \"emptyString_msg\"\n\t\t} catch (e) {\n\t\t\tconst messageId = getLoginErrorMessage(e, true)\n\n\t\t\tif (e instanceof AccessExpiredError) {\n\t\t\t\tthis.errorMessageId = messageId\n\t\t\t} else {\n\t\t\t\tthis.helpText = messageId\n\t\t\t}\n\n\t\t\tm.redraw()\n\n\t\t\thandleExpectedLoginError(e, errorAction)\n\t\t}\n\t}\n\n\tasync updateUrl(args: Record<string, any>): Promise<void> {\n\t\ttry {\n\t\t\tconst encodedExternalLoginData = decodeURIComponent(location.hash).substring(6) // cutoff #mail/ from #mail/KduzrgF----0S3BTO2gypfDMketWB_PbqQ\n\n\t\t\tconst userIdOffset = 0\n\t\t\tconst saltOffset = userIdOffset + GENERATED_MIN_ID.length\n\t\t\t// 16 bytes Base64 encoded is ceil(16 * 4/3) bytes, or 22 bytes\n\t\t\tconst encodedSaltLength = 22\n\t\t\tconst kdfOffset = saltOffset + encodedSaltLength\n\n\t\t\t// check if the KDF type is in the URL (encodedExternalLoginData.length > kdfOffset); if not, we assume bcrypt to ensure old links stay valid\n\t\t\tlet kdfType = KdfType.Bcrypt\n\t\t\tif (encodedExternalLoginData.length > kdfOffset) {\n\t\t\t\tkdfType = asKdfType(encodedExternalLoginData.substring(kdfOffset, kdfOffset + 1))\n\t\t\t}\n\n\t\t\tthis._urlData = {\n\t\t\t\tuserId: encodedExternalLoginData.substring(userIdOffset, saltOffset),\n\t\t\t\tsalt: base64ToUint8Array(base64UrlToBase64(encodedExternalLoginData.substring(saltOffset, kdfOffset))),\n\t\t\t\tkdfType: kdfType,\n\t\t\t}\n\n\t\t\tconst credentials = await this.credentialsProvider.getDecryptedCredentialsByUserId(this.urlData.userId)\n\n\t\t\tif (credentials && args.noAutoLogin !== true) {\n\t\t\t\tawait this.autologin(credentials)\n\t\t\t} else {\n\t\t\t\tthis.showAutoLoginButton = credentials != null\n\t\t\t\tm.redraw()\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tthis.errorMessageId = \"invalidLink_msg\"\n\t\t\tm.redraw()\n\t\t}\n\t}\n\n\tdispose() {\n\t\tthis.password = \"\"\n\t}\n}\n\nexport interface ExternalLoginViewAttrs extends TopLevelAttrs {\n\tviewModelFactory: () => ExternalLoginViewModel\n}\n\n/** Login view for external mailboxes: recipients from other mail servers when the email is password-protected. */\nexport class ExternalLoginView extends BaseTopLevelView implements TopLevelView<ExternalLoginViewAttrs> {\n\tprivate readonly viewModel: ExternalLoginViewModel\n\tprivate readonly shortcuts: Array<Shortcut> = [\n\t\t{\n\t\t\tkey: Keys.RETURN,\n\t\t\texec: () => {\n\t\t\t\tthis.viewModel.formLogin()\n\t\t\t},\n\t\t\thelp: \"login_label\",\n\t\t},\n\t]\n\n\tconstructor(vnode: Vnode<ExternalLoginViewAttrs>) {\n\t\tsuper()\n\t\tthis.viewModel = vnode.attrs.viewModelFactory()\n\t}\n\n\toncreate() {\n\t\tkeyManager.registerShortcuts(this.shortcuts)\n\t}\n\n\tonremove() {\n\t\tthis.viewModel.password = \"\"\n\t\tthis.viewModel.dispose()\n\t\tkeyManager.unregisterShortcuts(this.shortcuts)\n\t}\n\n\tview({ attrs }: Vnode<ExternalLoginViewAttrs>): Children {\n\t\treturn m(\".main-view.flex.col.nav-bg\", [\n\t\t\tm(LoginScreenHeader),\n\t\t\tm(\".flex-grow.flex.col.items-center.scroll\", m(\".flex-grow-shrink-auto.flex.col.max-width-m.pt.pb.plr-l\", this.renderContent())),\n\t\t])\n\t}\n\n\tprivate renderContent(): Children {\n\t\tif (this.viewModel.autologinInProgress) {\n\t\t\treturn m(\"p.center\", progressIcon())\n\t\t} else if (this.viewModel.errorMessageId) {\n\t\t\treturn m(\"p.center\", m(MessageBox, {}, lang.getTranslationText(this.viewModel.errorMessageId)))\n\t\t} else {\n\t\t\treturn [\n\t\t\t\tm(\".flex.col.content-bg.border-radius-big.plr-2l.mt\", [\n\t\t\t\t\tthis.viewModel.showAutoLoginButton ? this.renderAutoLoginButton() : this.renderForm(),\n\t\t\t\t\tm(\"p.center.statusTextColor.mt-xs.mb-s\", m(\"small\", lang.getTranslationText(this.viewModel.helpText), [])),\n\t\t\t\t]),\n\t\t\t\tm(\".flex-grow\"),\n\t\t\t\trenderInfoLinks(),\n\t\t\t]\n\t\t}\n\t}\n\n\trenderAutoLoginButton(): Children {\n\t\treturn m(\n\t\t\t\".pt-l\",\n\t\t\tm(LoginButton, {\n\t\t\t\tlabel: \"showMail_action\",\n\t\t\t\tonclick: () => this.viewModel.loginWithStoredCredentials(),\n\t\t\t}),\n\t\t)\n\t}\n\n\trenderForm(): Children {\n\t\treturn [\n\t\t\tm(PasswordField, {\n\t\t\t\thelpLabel: () => lang.get(\"enterPresharedPassword_msg\"),\n\t\t\t\tvalue: this.viewModel.password,\n\t\t\t\tautocompleteAs: Autocomplete.currentPassword,\n\t\t\t\toninput: (input) => (this.viewModel.password = input),\n\t\t\t}),\n\t\t\tm(Checkbox, {\n\t\t\t\tlabel: () => lang.get(\"storePassword_action\"),\n\t\t\t\thelpLabel: \"onlyPrivateComputer_msg\",\n\t\t\t\tchecked: this.viewModel.doSavePassword,\n\t\t\t\tonChecked: (checked) => (this.viewModel.doSavePassword = checked),\n\t\t\t}),\n\t\t\tm(\n\t\t\t\t\".pt\",\n\t\t\t\tm(LoginButton, {\n\t\t\t\t\tlabel: \"showMail_action\",\n\t\t\t\t\tonclick: () => this.viewModel.formLogin(),\n\t\t\t\t}),\n\t\t\t),\n\t\t]\n\t}\n\n\tonNewUrl(args: Record<string, any>) {\n\t\tthis.viewModel.updateUrl(args)\n\t}\n}\n"]}