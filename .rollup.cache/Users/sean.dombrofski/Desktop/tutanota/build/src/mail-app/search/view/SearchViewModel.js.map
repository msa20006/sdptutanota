{"version":3,"file":"SearchViewModel.js","sourceRoot":"","sources":["../../../../../src/mail-app/search/view/SearchViewModel.ts"],"names":[],"mappings":"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","sourcesContent":["import { ListElementListModel } from \"../../../common/misc/ListElementListModel.js\"\nimport { SearchResultListEntry } from \"./SearchListView.js\"\nimport { SearchRestriction, SearchResult } from \"../../../common/api/worker/search/SearchTypes.js\"\nimport { EntityEventsListener, EventController } from \"../../../common/api/main/EventController.js\"\nimport { CalendarEvent, CalendarEventTypeRef, Contact, ContactTypeRef, Mail, MailFolder, MailTypeRef } from \"../../../common/api/entities/tutanota/TypeRefs.js\"\nimport { ListElementEntity, SomeEntity } from \"../../../common/api/common/EntityTypes.js\"\nimport {\n\tCLIENT_ONLY_CALENDARS,\n\tFULL_INDEXED_TIMESTAMP,\n\tMailSetKind,\n\tNOTHING_INDEXED_TIMESTAMP,\n\tOperationType,\n} from \"../../../common/api/common/TutanotaConstants.js\"\nimport {\n\tassertIsEntity,\n\tassertIsEntity2,\n\telementIdPart,\n\tGENERATED_MAX_ID,\n\tgetElementId,\n\tisSameId,\n\tListElement,\n\tlistIdPart,\n\tsortCompareByReverseId,\n} from \"../../../common/api/common/utils/EntityUtils.js\"\nimport { ListLoadingState, ListState } from \"../../../common/gui/base/List.js\"\nimport {\n\tassertNotNull,\n\tdeepEqual,\n\tdefer,\n\tdowncast,\n\tgetEndOfDay,\n\tgetStartOfDay,\n\tincrementMonth,\n\tisSameDayOfDate,\n\tisSameTypeRef,\n\tLazyLoaded,\n\tneverNull,\n\tofClass,\n\tstringToBase64,\n\tTypeRef,\n} from \"@tutao/tutanota-utils\"\nimport { areResultsForTheSameQuery, hasMoreResults, isSameSearchRestriction, SearchModel } from \"../model/SearchModel.js\"\nimport { NotFoundError } from \"../../../common/api/common/error/RestError.js\"\nimport { compareContacts } from \"../../contacts/view/ContactGuiUtils.js\"\nimport { ConversationViewModel, ConversationViewModelFactory } from \"../../mail/view/ConversationViewModel.js\"\nimport {\n\tcreateRestriction,\n\tdecodeCalendarSearchKey,\n\tencodeCalendarSearchKey,\n\tgetRestriction,\n\tgetSearchUrl,\n\tsearchCategoryForRestriction,\n\tSearchCategoryTypes,\n} from \"../model/SearchUtils.js\"\nimport Stream from \"mithril/stream\"\nimport { MailboxDetail, MailboxModel } from \"../../../common/mailFunctionality/MailboxModel.js\"\nimport { SearchFacade } from \"../../workerUtils/index/SearchFacade.js\"\nimport { LoginController } from \"../../../common/api/main/LoginController.js\"\nimport { Indexer } from \"../../workerUtils/index/Indexer.js\"\nimport { EntityClient, loadMultipleFromLists } from \"../../../common/api/common/EntityClient.js\"\nimport { SearchRouter } from \"../../../common/search/view/SearchRouter.js\"\nimport { MailOpenedListener } from \"../../mail/view/MailViewModel.js\"\nimport { containsEventOfType, EntityUpdateData, getEventOfType, isUpdateForTypeRef } from \"../../../common/api/common/utils/EntityUpdateUtils.js\"\nimport { CalendarInfo } from \"../../../calendar-app/calendar/model/CalendarModel.js\"\nimport { locator } from \"../../../common/api/main/CommonLocator.js\"\nimport m from \"mithril\"\nimport { CalendarFacade } from \"../../../common/api/worker/facades/lazy/CalendarFacade.js\"\nimport { ProgrammingError } from \"../../../common/api/common/error/ProgrammingError.js\"\nimport { ProgressTracker } from \"../../../common/api/main/ProgressTracker.js\"\nimport { ClientOnlyCalendarsInfo, ListAutoSelectBehavior } from \"../../../common/misc/DeviceConfig.js\"\nimport {\n\tgenerateCalendarInstancesInRange,\n\tgetStartOfTheWeekOffsetForUser,\n\tretrieveClientOnlyEventsForUser,\n} from \"../../../common/calendar/date/CalendarUtils.js\"\nimport { mailLocator } from \"../../mailLocator.js\"\nimport { getMailFilterForType, MailFilterType } from \"../../mail/view/MailViewerUtils.js\"\nimport { CalendarEventsRepository } from \"../../../common/calendar/date/CalendarEventsRepository.js\"\nimport { getClientOnlyCalendars } from \"../../../calendar-app/calendar/gui/CalendarGuiUtils.js\"\nimport { YEAR_IN_MILLIS } from \"@tutao/tutanota-utils/dist/DateUtils.js\"\nimport { ListFilter } from \"../../../common/misc/ListModel\"\n\nconst SEARCH_PAGE_SIZE = 100\n\nexport type SearchableTypes = Mail | Contact | CalendarEvent\n\nexport enum PaidFunctionResult {\n\tSuccess,\n\tPaidSubscriptionNeeded,\n}\n\nexport class SearchViewModel {\n\tprivate _listModel: ListElementListModel<SearchResultListEntry>\n\tget listModel(): ListElementListModel<SearchResultListEntry> {\n\t\treturn this._listModel\n\t}\n\n\tprivate _includeRepeatingEvents: boolean = true\n\tget includeRepeatingEvents(): boolean {\n\t\treturn this._includeRepeatingEvents\n\t}\n\n\tget warning(): \"long\" | \"startafterend\" | null {\n\t\tif (this.startDate && this.startDate.getTime() > this.endDate.getTime()) {\n\t\t\treturn \"startafterend\"\n\t\t} else if (this.startDate && this.endDate.getTime() - this.startDate.getTime() > YEAR_IN_MILLIS) {\n\t\t\treturn \"long\"\n\t\t} else {\n\t\t\treturn null\n\t\t}\n\t}\n\n\t/**\n\t * the type ref that determines which search filters and details\n\t * viewers this view should show.\n\t * taken from the current results' restriction or, if result is nonexistent,\n\t * the URL.\n\t *\n\t * result might be nonexistent if there is no query or we're not done searching\n\t * yet.\n\t */\n\tget searchedType(): TypeRef<Mail> | TypeRef<Contact> | TypeRef<CalendarEvent> {\n\t\treturn (this.searchResult?.restriction ?? this.router.getRestriction()).type\n\t}\n\n\tprivate _conversationViewModel: ConversationViewModel | null = null\n\tget conversationViewModel(): ConversationViewModel | null {\n\t\treturn this._conversationViewModel\n\t}\n\n\tprivate _startDate: Date | null = null // null = current mail index date. this allows us to start the search (and the url) without end date set\n\tget startDate(): Date | null {\n\t\treturn this._startDate ?? this.getCurrentMailIndexDate()\n\t}\n\n\tprivate _endDate: Date | null = null // null = today (mail), end of 2 months in the future (calendar)\n\tget endDate(): Date {\n\t\tif (this._endDate) {\n\t\t\treturn this._endDate\n\t\t} else {\n\t\t\tif (this.getCategory() === SearchCategoryTypes.calendar) {\n\t\t\t\tlet returnDate = incrementMonth(new Date(), 3)\n\t\t\t\treturnDate.setDate(0)\n\t\t\t\treturn returnDate\n\t\t\t} else {\n\t\t\t\treturn new Date()\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _selectedMailFolder: Array<Id> = []\n\tget selectedMailFolder(): Array<Id> {\n\t\treturn this._selectedMailFolder\n\t}\n\n\t// isn't an IdTuple because it is two list ids\n\tprivate _selectedCalendar: readonly [Id, Id] | string | null = null\n\tget selectedCalendar(): readonly [Id, Id] | string | null {\n\t\treturn this._selectedCalendar\n\t}\n\n\tprivate _mailboxes: MailboxDetail[] = []\n\tget mailboxes(): MailboxDetail[] {\n\t\treturn this._mailboxes\n\t}\n\n\tprivate _selectedMailField: string | null = null\n\tget selectedMailField(): string | null {\n\t\treturn this._selectedMailField\n\t}\n\n\t// Contains load more results even when searchModel doesn't.\n\t// Load more should probably be moved to the model to update it's result stream.\n\tprivate searchResult: SearchResult | null = null\n\tprivate mailFilterType: MailFilterType | null = null\n\tprivate latestMailRestriction: SearchRestriction | null = null\n\tprivate latestCalendarRestriction: SearchRestriction | null = null\n\tprivate mailboxSubscription: Stream<void> | null = null\n\tprivate resultSubscription: Stream<void> | null = null\n\tprivate listStateSubscription: Stream<unknown> | null = null\n\tloadingAllForSearchResult: SearchResult | null = null\n\tprivate readonly lazyCalendarInfos: LazyLoaded<ReadonlyMap<string, CalendarInfo>> = new LazyLoaded(async () => {\n\t\tconst calendarModel = await locator.calendarModel()\n\t\tconst calendarInfos = await calendarModel.getCalendarInfos()\n\t\tm.redraw()\n\t\treturn calendarInfos\n\t})\n\n\tprivate readonly userHasNewPaidPlan: LazyLoaded<boolean> = new LazyLoaded<boolean>(async () => {\n\t\treturn await this.logins.getUserController().isNewPaidPlan()\n\t})\n\n\tcurrentQuery: string = \"\"\n\n\tprivate extendIndexConfirmationCallback: (() => Promise<boolean>) | null = null\n\n\tconstructor(\n\t\treadonly router: SearchRouter,\n\t\tprivate readonly search: SearchModel,\n\t\tprivate readonly searchFacade: SearchFacade,\n\t\tprivate readonly mailboxModel: MailboxModel,\n\t\tprivate readonly logins: LoginController,\n\t\tprivate readonly indexerFacade: Indexer,\n\t\tprivate readonly entityClient: EntityClient,\n\t\tprivate readonly eventController: EventController,\n\t\tprivate readonly mailOpenedListener: MailOpenedListener | null,\n\t\tprivate readonly calendarFacade: CalendarFacade,\n\t\tprivate readonly progressTracker: ProgressTracker,\n\t\tprivate readonly conversationViewModelFactory: ConversationViewModelFactory | null,\n\t\tprivate readonly eventsRepository: CalendarEventsRepository,\n\t\tprivate readonly updateUi: () => unknown,\n\t\tprivate readonly selectionBehavior: ListAutoSelectBehavior,\n\t\tprivate readonly localCalendars: Map<Id, ClientOnlyCalendarsInfo>,\n\t) {\n\t\tthis.currentQuery = this.search.result()?.query ?? \"\"\n\t\tthis._listModel = this.createList()\n\t}\n\n\tgetLazyCalendarInfos() {\n\t\treturn this.lazyCalendarInfos\n\t}\n\n\tgetUserHasNewPaidPlan() {\n\t\treturn this.userHasNewPaidPlan\n\t}\n\n\tinit(extendIndexConfirmationCallback: SearchViewModel[\"extendIndexConfirmationCallback\"]) {\n\t\tif (this.extendIndexConfirmationCallback) {\n\t\t\treturn\n\t\t}\n\t\tthis.extendIndexConfirmationCallback = extendIndexConfirmationCallback\n\t\tthis.resultSubscription = this.search.result.map((result) => {\n\t\t\tif (!result || !isSameTypeRef(result.restriction.type, MailTypeRef)) {\n\t\t\t\tthis.mailFilterType = null\n\t\t\t}\n\n\t\t\tif (this.searchResult == null || result == null || !areResultsForTheSameQuery(result, this.searchResult)) {\n\t\t\t\tthis._listModel.cancelLoadAll()\n\n\t\t\t\tthis.searchResult = result\n\n\t\t\t\tthis._listModel = this.createList()\n\t\t\t\tthis.setMailFilter(this.mailFilterType)\n\t\t\t\tthis.applyMailFilterIfNeeded()\n\t\t\t\tthis._listModel.loadInitial()\n\t\t\t\tthis.listStateSubscription?.end(true)\n\t\t\t\tthis.listStateSubscription = this._listModel.stateStream.map((state) => this.onListStateChange(state))\n\t\t\t}\n\t\t})\n\n\t\tthis.mailboxSubscription = this.mailboxModel.mailboxDetails.map((mailboxes) => {\n\t\t\tthis.onMailboxesChanged(mailboxes)\n\t\t})\n\t\tthis.eventController.addEntityListener(this.entityEventsListener)\n\t}\n\n\tgetRestriction(): SearchRestriction {\n\t\treturn this.router.getRestriction()\n\t}\n\n\tprivate readonly entityEventsListener: EntityEventsListener = async (updates) => {\n\t\tfor (const update of updates) {\n\t\t\tconst mergedUpdate = this.mergeOperationsIfNeeded(update, updates)\n\n\t\t\tif (mergedUpdate == null) continue\n\n\t\t\tawait this.entityEventReceived(mergedUpdate)\n\t\t}\n\t}\n\n\tprivate mergeOperationsIfNeeded(update: EntityUpdateData, updates: readonly EntityUpdateData[]): EntityUpdateData | null {\n\t\t// We are trying to keep the mails that are moved and would match the search criteria displayed.\n\t\t// This is a bit hacky as we reimplement part of the filtering by list.\n\t\t// Ideally search result would update by itself and we would only need to reconcile the changes.\n\t\tif (!isUpdateForTypeRef(MailTypeRef, update) || this.searchResult == null) {\n\t\t\treturn update\n\t\t}\n\t\tif (update.operation === OperationType.CREATE && containsEventOfType(updates, OperationType.DELETE, update.instanceId)) {\n\t\t\t// This is a move operation, is destination list included in the restrictions?\n\t\t\tif (this.listIdMatchesRestriction(update.instanceListId, this.searchResult.restriction)) {\n\t\t\t\t// If it's included, we want to keep showing the item but we will simulate the UPDATE\n\t\t\t\treturn { ...update, operation: OperationType.UPDATE }\n\t\t\t} else {\n\t\t\t\t// If it's not going to be included we might as well skip the create operation\n\t\t\t\treturn null\n\t\t\t}\n\t\t} else if (update.operation === OperationType.DELETE && containsEventOfType(updates, OperationType.CREATE, update.instanceId)) {\n\t\t\t// This is a move operation and we are in the delete part of it.\n\t\t\t// Grab the other part to check the move destination.\n\t\t\tconst createOperation = assertNotNull(getEventOfType(updates, OperationType.CREATE, update.instanceId))\n\t\t\t// Is destination included in the search?\n\t\t\tif (this.listIdMatchesRestriction(createOperation.instanceListId, this.searchResult.restriction)) {\n\t\t\t\t// If so, skip the delete.\n\t\t\t\treturn null\n\t\t\t} else {\n\t\t\t\t// Otherwise delete\n\t\t\t\treturn update\n\t\t\t}\n\t\t} else {\n\t\t\treturn update\n\t\t}\n\t}\n\n\tprivate listIdMatchesRestriction(listId: string, restriction: SearchRestriction): boolean {\n\t\treturn restriction.folderIds.length === 0 || restriction.folderIds.includes(listId)\n\t}\n\n\tonNewUrl(args: Record<string, any>, requestedPath: string) {\n\t\tlet restriction\n\t\ttry {\n\t\t\trestriction = getRestriction(requestedPath)\n\t\t} catch (e) {\n\t\t\t// if restriction is broken replace it with non-broken version\n\t\t\tthis.router.routeTo(args.query, createRestriction(SearchCategoryTypes.mail, null, null, null, [], null))\n\t\t\treturn\n\t\t}\n\n\t\tthis.currentQuery = args.query\n\t\tconst lastQuery = this.search.lastQueryString()\n\t\tconst maxResults = isSameTypeRef(MailTypeRef, restriction.type) ? SEARCH_PAGE_SIZE : null\n\t\tconst listModel = this._listModel\n\t\t// using hasOwnProperty to distinguish case when url is like '/search/mail/query='\n\t\tif (Object.hasOwn(args, \"query\") && this.search.isNewSearch(args.query, restriction)) {\n\t\t\tthis.searchResult = null\n\t\t\tlistModel.updateLoadingStatus(ListLoadingState.Loading)\n\t\t\tthis.search\n\t\t\t\t.search(\n\t\t\t\t\t{\n\t\t\t\t\t\tquery: args.query,\n\t\t\t\t\t\trestriction,\n\t\t\t\t\t\tminSuggestionCount: 0,\n\t\t\t\t\t\tmaxResults,\n\t\t\t\t\t},\n\t\t\t\t\tthis.progressTracker,\n\t\t\t\t)\n\t\t\t\t.then(() => listModel.updateLoadingStatus(ListLoadingState.Done))\n\t\t\t\t.catch(() => listModel.updateLoadingStatus(ListLoadingState.ConnectionLost))\n\t\t} else if (lastQuery && this.search.isNewSearch(lastQuery, restriction)) {\n\t\t\tthis.searchResult = null\n\n\t\t\t// If query is not set for some reason (e.g. switching search type), use the last query value\n\t\t\tlistModel.selectNone()\n\t\t\tlistModel.updateLoadingStatus(ListLoadingState.Loading)\n\t\t\tthis.search\n\t\t\t\t.search(\n\t\t\t\t\t{\n\t\t\t\t\t\tquery: lastQuery,\n\t\t\t\t\t\trestriction,\n\t\t\t\t\t\tminSuggestionCount: 0,\n\t\t\t\t\t\tmaxResults,\n\t\t\t\t\t},\n\t\t\t\t\tthis.progressTracker,\n\t\t\t\t)\n\t\t\t\t.then(() => listModel.updateLoadingStatus(ListLoadingState.Done))\n\t\t\t\t.catch(() => listModel.updateLoadingStatus(ListLoadingState.ConnectionLost))\n\t\t} else if (!Object.hasOwn(args, \"query\") && !lastQuery) {\n\t\t\t// no query at all yet\n\t\t\tlistModel.updateLoadingStatus(ListLoadingState.Done)\n\t\t}\n\n\t\tif (isSameTypeRef(restriction.type, ContactTypeRef)) {\n\t\t\tthis.loadAndSelectIfNeeded(args.id)\n\t\t} else {\n\t\t\tif (isSameTypeRef(restriction.type, MailTypeRef)) {\n\t\t\t\tthis._selectedMailField = restriction.field\n\t\t\t\tthis._startDate = restriction.end ? new Date(restriction.end) : null\n\t\t\t\tthis._endDate = restriction.start ? new Date(restriction.start) : null\n\t\t\t\tthis._selectedMailFolder = restriction.folderIds\n\t\t\t\tthis.loadAndSelectIfNeeded(args.id)\n\t\t\t\tthis.latestMailRestriction = restriction\n\t\t\t} else if (isSameTypeRef(restriction.type, CalendarEventTypeRef)) {\n\t\t\t\tthis._startDate = restriction.start ? new Date(restriction.start) : null\n\t\t\t\tthis._endDate = restriction.end ? new Date(restriction.end) : null\n\t\t\t\tthis._includeRepeatingEvents = restriction.eventSeries ?? true\n\t\t\t\tthis.lazyCalendarInfos.load()\n\t\t\t\tthis.userHasNewPaidPlan.load()\n\t\t\t\tthis.latestCalendarRestriction = restriction\n\n\t\t\t\t// Check if user is trying to search in a client only calendar while using a free account\n\t\t\t\tconst selectedCalendar = this.extractCalendarListIds(restriction.folderIds)\n\t\t\t\tif (!selectedCalendar || Array.isArray(selectedCalendar)) {\n\t\t\t\t\tthis._selectedCalendar = selectedCalendar\n\t\t\t\t} else if (CLIENT_ONLY_CALENDARS.has(selectedCalendar.toString())) {\n\t\t\t\t\tthis.getUserHasNewPaidPlan()\n\t\t\t\t\t\t.getAsync()\n\t\t\t\t\t\t.then((isNewPaidPlan) => {\n\t\t\t\t\t\t\tif (!isNewPaidPlan) {\n\t\t\t\t\t\t\t\treturn (this._selectedCalendar = null)\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis._selectedCalendar = selectedCalendar\n\t\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tif (args.id != null) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst { start, id } = decodeCalendarSearchKey(args.id)\n\t\t\t\t\t\tthis.loadAndSelectIfNeeded(id, ({ entry }: SearchResultListEntry) => {\n\t\t\t\t\t\t\tentry = entry as CalendarEvent\n\t\t\t\t\t\t\treturn id === getElementId(entry) && start === entry.startTime.getTime()\n\t\t\t\t\t\t})\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\tconsole.log(\"Invalid ID, selecting none\")\n\t\t\t\t\t\tthis.listModel.selectNone()\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate extractCalendarListIds(listIds: string[]): readonly [string, string] | string | null {\n\t\tif (listIds.length < 1) return null\n\t\telse if (listIds.length === 1) return listIds[0]\n\n\t\treturn [listIds[0], listIds[1]]\n\t}\n\n\tprivate loadAndSelectIfNeeded(id: string | null, finder?: (a: ListElement) => boolean) {\n\t\t// nothing to select\n\t\tif (id == null) {\n\t\t\treturn\n\t\t}\n\n\t\tif (!this._listModel.isItemSelected(id)) {\n\t\t\tif (!this._listModel.isItemSelected(id)) {\n\t\t\t\tthis.handleLoadAndSelection(id, finder)\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate handleLoadAndSelection(id: string, finder: ((a: ListElement) => boolean) | undefined) {\n\t\tif (this._listModel.isLoadedCompletely()) {\n\t\t\treturn this.selectItem(id, finder)\n\t\t}\n\n\t\tconst listStateStream = Stream.combine((a) => a(), [this._listModel.stateStream])\n\t\tlistStateStream.map((state) => {\n\t\t\tif (state.loadingStatus === ListLoadingState.Done) {\n\t\t\t\tthis.selectItem(id, finder)\n\t\t\t\tlistStateStream.end(true)\n\t\t\t}\n\t\t})\n\t}\n\n\tprivate selectItem(id: string, finder: ((a: ListElement) => boolean) | undefined) {\n\t\tconst listModel = this._listModel\n\t\tthis._listModel.loadAndSelect(id, () => !deepEqual(this._listModel, listModel), finder)\n\t}\n\n\tasync loadAll() {\n\t\tif (this.loadingAllForSearchResult != null) return\n\t\tthis.loadingAllForSearchResult = this.searchResult ?? null\n\t\tthis._listModel.selectAll()\n\t\ttry {\n\t\t\twhile (\n\t\t\t\tthis.searchResult?.restriction &&\n\t\t\t\tthis.loadingAllForSearchResult &&\n\t\t\t\tisSameSearchRestriction(this.searchResult?.restriction, this.loadingAllForSearchResult.restriction) &&\n\t\t\t\t!this._listModel.isLoadedCompletely()\n\t\t\t) {\n\t\t\t\tawait this._listModel.loadMore()\n\t\t\t\tif (\n\t\t\t\t\tthis.searchResult.restriction &&\n\t\t\t\t\tthis.loadingAllForSearchResult.restriction &&\n\t\t\t\t\tisSameSearchRestriction(this.searchResult.restriction, this.loadingAllForSearchResult.restriction)\n\t\t\t\t) {\n\t\t\t\t\tthis._listModel.selectAll()\n\t\t\t\t}\n\t\t\t}\n\t\t} finally {\n\t\t\tthis.loadingAllForSearchResult = null\n\t\t}\n\t}\n\n\tstopLoadAll() {\n\t\tthis._listModel.cancelLoadAll()\n\t}\n\n\tselectMailField(field: string | null): PaidFunctionResult {\n\t\tif (this.logins.getUserController().isFreeAccount() && field != null) {\n\t\t\treturn PaidFunctionResult.PaidSubscriptionNeeded\n\t\t} else {\n\t\t\tthis._selectedMailField = field\n\t\t\tthis.searchAgain()\n\t\t\treturn PaidFunctionResult.Success\n\t\t}\n\t}\n\n\tcanSelectTimePeriod(): boolean {\n\t\treturn !this.logins.getUserController().isFreeAccount()\n\t}\n\n\tgetStartOfTheWeekOffset(): number {\n\t\treturn getStartOfTheWeekOffsetForUser(this.logins.getUserController().userSettingsGroupRoot)\n\t}\n\n\tasync selectStartDate(startDate: Date | null): Promise<PaidFunctionResult> {\n\t\tif (isSameDayOfDate(this.startDate, startDate)) {\n\t\t\treturn PaidFunctionResult.Success\n\t\t}\n\n\t\tif (!this.canSelectTimePeriod()) {\n\t\t\treturn PaidFunctionResult.PaidSubscriptionNeeded\n\t\t}\n\n\t\t// If start date is outside the indexed range, suggest to extend the index and only if confirmed change the selected date.\n\t\t// Otherwise, keep the date as it was.\n\t\tif (\n\t\t\tstartDate &&\n\t\t\tthis.getCategory() === SearchCategoryTypes.mail &&\n\t\t\tstartDate.getTime() < this.search.indexState().currentMailIndexTimestamp &&\n\t\t\tstartDate\n\t\t) {\n\t\t\tconst confirmed = (await this.extendIndexConfirmationCallback?.()) ?? true\n\t\t\tif (confirmed) {\n\t\t\t\tthis._startDate = startDate\n\t\t\t\tthis.indexerFacade.extendMailIndex(startDate.getTime()).then(() => {\n\t\t\t\t\tthis.updateSearchUrl()\n\t\t\t\t\tthis.updateUi()\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\t// In this case it is not a success of payment, but we don't need to prompt for upgrade\n\t\t\t\treturn PaidFunctionResult.Success\n\t\t\t}\n\t\t} else {\n\t\t\tthis._startDate = startDate\n\t\t}\n\n\t\tthis.searchAgain()\n\n\t\treturn PaidFunctionResult.Success\n\t}\n\n\tselectEndDate(endDate: Date): PaidFunctionResult {\n\t\tif (isSameDayOfDate(this.endDate, endDate)) {\n\t\t\treturn PaidFunctionResult.Success\n\t\t}\n\n\t\tif (!this.canSelectTimePeriod()) {\n\t\t\treturn PaidFunctionResult.PaidSubscriptionNeeded\n\t\t}\n\n\t\tthis._endDate = endDate\n\n\t\tthis.searchAgain()\n\n\t\treturn PaidFunctionResult.Success\n\t}\n\n\tselectCalendar(calendarInfo: CalendarInfo | string | null) {\n\t\tif (typeof calendarInfo === \"string\" || calendarInfo == null) {\n\t\t\tthis._selectedCalendar = calendarInfo\n\t\t} else {\n\t\t\tthis._selectedCalendar = [calendarInfo.groupRoot.longEvents, calendarInfo.groupRoot.shortEvents]\n\t\t}\n\t\tthis.searchAgain()\n\t}\n\n\tselectMailFolder(folder: Array<string>): PaidFunctionResult {\n\t\tif (this.logins.getUserController().isFreeAccount() && folder != null) {\n\t\t\treturn PaidFunctionResult.PaidSubscriptionNeeded\n\t\t} else {\n\t\t\tthis._selectedMailFolder = folder\n\t\t\tthis.searchAgain()\n\t\t\treturn PaidFunctionResult.Success\n\t\t}\n\t}\n\n\tselectIncludeRepeatingEvents(include: boolean) {\n\t\tthis._includeRepeatingEvents = include\n\t\tthis.searchAgain()\n\t}\n\n\t/**\n\t * @returns null if the complete mailbox is indexed\n\t */\n\tgetCurrentMailIndexDate(): Date | null {\n\t\tlet timestamp = this.search.indexState().currentMailIndexTimestamp\n\n\t\tif (timestamp === FULL_INDEXED_TIMESTAMP) {\n\t\t\treturn null\n\t\t} else if (timestamp === NOTHING_INDEXED_TIMESTAMP) {\n\t\t\treturn getEndOfDay(new Date())\n\t\t} else {\n\t\t\treturn new Date(timestamp)\n\t\t}\n\t}\n\n\tprivate searchAgain() {\n\t\tthis.updateSearchUrl()\n\t\tthis.updateUi()\n\t}\n\n\tgetUrlFromSearchCategory(category: SearchCategoryTypes): string {\n\t\tif (this.currentQuery) {\n\t\t\tlet latestRestriction: SearchRestriction | null = null\n\t\t\tswitch (category) {\n\t\t\t\tcase SearchCategoryTypes.mail:\n\t\t\t\t\tlatestRestriction = this.latestMailRestriction\n\t\t\t\t\tbreak\n\t\t\t\tcase SearchCategoryTypes.calendar:\n\t\t\t\t\tlatestRestriction = this.latestCalendarRestriction\n\t\t\t\t\tbreak\n\t\t\t\tcase SearchCategoryTypes.contact:\n\t\t\t\t\t// contacts do not have restrictions at this time\n\t\t\t\t\tbreak\n\t\t\t}\n\n\t\t\tif (latestRestriction) {\n\t\t\t\treturn getSearchUrl(this.currentQuery, latestRestriction)\n\t\t\t} else {\n\t\t\t\treturn getSearchUrl(this.currentQuery, createRestriction(category, null, null, null, [], null))\n\t\t\t}\n\t\t} else {\n\t\t\treturn getSearchUrl(\"\", createRestriction(category, null, null, null, [], null))\n\t\t}\n\t}\n\n\tget mailFilter(): MailFilterType | null {\n\t\treturn this.mailFilterType\n\t}\n\n\tsetMailFilter(filter: MailFilterType | null) {\n\t\tthis.mailFilterType = filter\n\t\tthis.applyMailFilterIfNeeded()\n\t}\n\n\tprivate applyMailFilterIfNeeded() {\n\t\tif (isSameTypeRef(this.searchedType, MailTypeRef)) {\n\t\t\tconst filterFunction = getMailFilterForType(this.mailFilterType)\n\t\t\tconst liftedFilter: ListFilter<SearchResultListEntry> | null = filterFunction ? (entry) => filterFunction(entry.entry as Mail) : null\n\t\t\tthis._listModel?.setFilter(liftedFilter)\n\t\t}\n\t}\n\n\tprivate updateSearchUrl() {\n\t\tconst selectedElement = this._listModel.state.selectedItems.size === 1 ? this._listModel.getSelectedAsArray().at(0) : null\n\n\t\tif (isSameTypeRef(this.searchedType, MailTypeRef)) {\n\t\t\tthis.routeMail(\n\t\t\t\t(selectedElement?.entry as Mail) ?? null,\n\t\t\t\tcreateRestriction(\n\t\t\t\t\tthis.getCategory(),\n\t\t\t\t\tthis._endDate ? getEndOfDay(this._endDate).getTime() : null,\n\t\t\t\t\tthis._startDate ? getStartOfDay(this._startDate).getTime() : null,\n\t\t\t\t\tthis._selectedMailField,\n\t\t\t\t\tthis._selectedMailFolder,\n\t\t\t\t\tnull,\n\t\t\t\t),\n\t\t\t)\n\t\t} else if (isSameTypeRef(this.searchedType, CalendarEventTypeRef)) {\n\t\t\tthis.routeCalendar(\n\t\t\t\t(selectedElement?.entry as CalendarEvent) ?? null,\n\t\t\t\tcreateRestriction(\n\t\t\t\t\tthis.getCategory(),\n\t\t\t\t\tthis._startDate ? getStartOfDay(this._startDate).getTime() : null,\n\t\t\t\t\tthis._endDate ? getEndOfDay(this._endDate).getTime() : null,\n\t\t\t\t\tnull,\n\t\t\t\t\tthis.getFolderIds(),\n\t\t\t\t\tthis._includeRepeatingEvents,\n\t\t\t\t),\n\t\t\t)\n\t\t} else if (isSameTypeRef(this.searchedType, ContactTypeRef)) {\n\t\t\tthis.routeContact((selectedElement?.entry as Contact) ?? null, createRestriction(this.getCategory(), null, null, null, [], null))\n\t\t}\n\t}\n\n\tprivate getFolderIds() {\n\t\tif (typeof this.selectedCalendar === \"string\") {\n\t\t\treturn [this.selectedCalendar]\n\t\t} else if (this.selectedCalendar != null) {\n\t\t\treturn [...this.selectedCalendar]\n\t\t}\n\n\t\treturn []\n\t}\n\n\tprivate routeCalendar(element: CalendarEvent | null, restriction: SearchRestriction) {\n\t\tconst selectionKey = this.generateSelectionKey(element)\n\t\tthis.router.routeTo(this.currentQuery, restriction, selectionKey)\n\t}\n\n\tprivate routeMail(element: Mail | null, restriction: SearchRestriction) {\n\t\tthis.router.routeTo(this.currentQuery, restriction, this.generateSelectionKey(element))\n\t}\n\n\tprivate routeContact(element: Contact | null, restriction: SearchRestriction) {\n\t\tthis.router.routeTo(this.currentQuery, restriction, this.generateSelectionKey(element))\n\t}\n\n\tprivate generateSelectionKey(element: SearchableTypes | null): string | null {\n\t\tif (element == null) return null\n\t\tif (assertIsEntity(element, CalendarEventTypeRef)) {\n\t\t\treturn encodeCalendarSearchKey(element)\n\t\t} else {\n\t\t\treturn getElementId(element)\n\t\t}\n\t}\n\n\tprivate getCategory(): SearchCategoryTypes {\n\t\tconst restriction = this.router.getRestriction()\n\t\treturn searchCategoryForRestriction(restriction)\n\t}\n\n\tprivate async onMailboxesChanged(mailboxes: MailboxDetail[]) {\n\t\tthis._mailboxes = mailboxes\n\n\t\t// if selected folder no longer exist select another one\n\t\tconst selectedMailFolder = this._selectedMailFolder\n\n\t\tif (selectedMailFolder[0]) {\n\t\t\tconst mailFolder = await mailLocator.mailModel.getMailSetById(selectedMailFolder[0])\n\t\t\tif (!mailFolder) {\n\t\t\t\tconst folderSystem = assertNotNull(mailLocator.mailModel.getFolderSystemByGroupId(mailboxes[0].mailGroup._id))\n\t\t\t\tthis._selectedMailFolder = [getElementId(assertNotNull(folderSystem.getSystemFolderByType(MailSetKind.INBOX)))]\n\t\t\t\tthis.updateUi()\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate isPossibleABirthdayContactUpdate(update: EntityUpdateData): boolean {\n\t\tif (isUpdateForTypeRef(ContactTypeRef, update) && isSameTypeRef(this.searchedType, CalendarEventTypeRef)) {\n\t\t\tconst { instanceListId, instanceId } = update\n\t\t\tconst encodedContactId = stringToBase64(`${instanceListId}/${instanceId}`)\n\n\t\t\treturn this.listModel.stateStream().items.some((searchEntry) => searchEntry._id[1].endsWith(encodedContactId))\n\t\t}\n\n\t\treturn false\n\t}\n\n\tprivate isSelectedEventAnUpdatedBirthday(update: EntityUpdateData): boolean {\n\t\tif (isUpdateForTypeRef(ContactTypeRef, update) && isSameTypeRef(this.searchedType, CalendarEventTypeRef)) {\n\t\t\tconst { instanceListId, instanceId } = update\n\t\t\tconst encodedContactId = stringToBase64(`${instanceListId}/${instanceId}`)\n\n\t\t\tconst selectedItem = this.listModel.getSelectedAsArray().at(0)\n\t\t\tif (!selectedItem) {\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\treturn selectedItem._id[1].endsWith(encodedContactId)\n\t\t}\n\n\t\treturn false\n\t}\n\n\tprivate async entityEventReceived(update: EntityUpdateData): Promise<void> {\n\t\tconst lastType = this.searchedType\n\t\tconst isPossibleABirthdayContactUpdate = this.isPossibleABirthdayContactUpdate(update)\n\n\t\tif (!isUpdateForTypeRef(lastType, update) && !isPossibleABirthdayContactUpdate) {\n\t\t\treturn\n\t\t}\n\n\t\tconst { instanceListId, instanceId, operation } = update\n\t\tconst id = [neverNull(instanceListId), instanceId] as const\n\t\tconst typeRef = new TypeRef<SomeEntity>(update.application, update.type)\n\n\t\tif (!this.isInSearchResult(typeRef, id) && !isPossibleABirthdayContactUpdate) {\n\t\t\treturn\n\t\t}\n\n\t\tif (isUpdateForTypeRef(MailTypeRef, update) && operation === OperationType.UPDATE) {\n\t\t\tif (this.searchResult && this.searchResult.results) {\n\t\t\t\tconst index = this.searchResult?.results.findIndex(\n\t\t\t\t\t(email) => update.instanceId === elementIdPart(email) && update.instanceListId !== listIdPart(email),\n\t\t\t\t)\n\t\t\t\tif (index >= 0) {\n\t\t\t\t\tconst restrictionLength = this.searchResult.restriction.folderIds.length\n\t\t\t\t\tif ((restrictionLength > 0 && this.searchResult.restriction.folderIds.includes(update.instanceListId)) || restrictionLength === 0) {\n\t\t\t\t\t\t// We need to update the listId of the updated item, since it was moved to another folder.\n\t\t\t\t\t\tconst newIdTuple: IdTuple = [update.instanceListId, update.instanceId]\n\t\t\t\t\t\tthis.searchResult.results[index] = newIdTuple\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if ((isUpdateForTypeRef(CalendarEventTypeRef, update) && isSameTypeRef(lastType, CalendarEventTypeRef)) || isPossibleABirthdayContactUpdate) {\n\t\t\t// due to the way calendar event changes are sort of non-local, we throw away the whole list and re-render it if\n\t\t\t// the contents are edited. we do the calculation on a new list and then swap the old list out once the new one is\n\t\t\t// ready\n\t\t\tconst selectedItem = this._listModel.getSelectedAsArray().at(0)\n\t\t\tconst listModel = this.createList()\n\t\t\tthis.setMailFilter(this.mailFilterType)\n\t\t\tthis.applyMailFilterIfNeeded()\n\n\t\t\tif (isPossibleABirthdayContactUpdate && (await this.eventsRepository.canLoadBirthdaysCalendar())) {\n\t\t\t\tawait this.eventsRepository.loadContactsBirthdays(true)\n\t\t\t}\n\n\t\t\tawait listModel.loadInitial()\n\t\t\tif (selectedItem != null) {\n\t\t\t\tif (isPossibleABirthdayContactUpdate && this.isSelectedEventAnUpdatedBirthday(update)) {\n\t\t\t\t\t// We must invalidate the selected item to refresh the contact preview\n\t\t\t\t\tthis.listModel.selectNone()\n\t\t\t\t}\n\t\t\t\tawait listModel.loadAndSelect(elementIdPart(selectedItem._id), () => false)\n\t\t\t}\n\t\t\tthis._listModel = listModel\n\t\t\tthis.listStateSubscription?.end(true)\n\t\t\tthis.listStateSubscription = this._listModel.stateStream.map((state) => this.onListStateChange(state))\n\t\t\tthis.updateSearchUrl()\n\t\t\tthis.updateUi()\n\t\t\treturn\n\t\t}\n\n\t\tthis._listModel.getUnfilteredAsArray()\n\t\tawait this._listModel.entityEventReceived(instanceListId, instanceId, operation)\n\t\t// run the mail or contact update after the update on the list is finished to avoid parallel loading\n\t\tif (operation === OperationType.UPDATE && this._listModel?.isItemSelected(elementIdPart(id))) {\n\t\t\ttry {\n\t\t\t\tawait this.entityClient.load(typeRef, id)\n\t\t\t\tthis.updateUi()\n\t\t\t} catch (e) {\n\t\t\t\t// ignore. might happen if a mail was just sent\n\t\t\t}\n\t\t}\n\t}\n\n\tgetSelectedMails(): Mail[] {\n\t\treturn this._listModel\n\t\t\t.getSelectedAsArray()\n\t\t\t.map((e) => e.entry)\n\t\t\t.filter(assertIsEntity2(MailTypeRef))\n\t}\n\n\tgetSelectedContacts(): Contact[] {\n\t\treturn this._listModel\n\t\t\t.getSelectedAsArray()\n\t\t\t.map((e) => e.entry)\n\t\t\t.filter(assertIsEntity2(ContactTypeRef))\n\t}\n\n\tgetSelectedEvents(): CalendarEvent[] {\n\t\treturn this._listModel\n\t\t\t.getSelectedAsArray()\n\t\t\t.map((e) => e.entry)\n\t\t\t.filter(assertIsEntity2(CalendarEventTypeRef))\n\t}\n\n\tprivate onListStateChange(newState: ListState<SearchResultListEntry>) {\n\t\tif (isSameTypeRef(this.searchedType, MailTypeRef)) {\n\t\t\tif (!newState.inMultiselect && newState.selectedItems.size === 1) {\n\t\t\t\tconst mail = this.getSelectedMails()[0]\n\n\t\t\t\t// Sometimes a stale state is passed through, resulting in no mail\n\t\t\t\tif (mail) {\n\t\t\t\t\tif (!this._conversationViewModel) {\n\t\t\t\t\t\tthis.updateDisplayedConversation(mail)\n\t\t\t\t\t} else if (this._conversationViewModel) {\n\t\t\t\t\t\tconst isSameElementId = isSameId(elementIdPart(this._conversationViewModel?.primaryMail._id), elementIdPart(mail._id))\n\t\t\t\t\t\tconst isSameListId = isSameId(listIdPart(this._conversationViewModel?.primaryMail._id), listIdPart(mail._id))\n\t\t\t\t\t\tif (!isSameElementId || !isSameListId) {\n\t\t\t\t\t\t\tthis.updateSearchUrl()\n\t\t\t\t\t\t\tthis.updateDisplayedConversation(mail)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis._conversationViewModel = null\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._conversationViewModel = null\n\t\t\t}\n\t\t} else {\n\t\t\tthis._conversationViewModel = null\n\t\t}\n\t\tthis.updateUi()\n\t}\n\n\tprivate updateDisplayedConversation(mail: Mail): void {\n\t\tif (this.conversationViewModelFactory && this.mailOpenedListener) {\n\t\t\tthis._conversationViewModel = this.conversationViewModelFactory({ mail, showFolder: true })\n\t\t\t// Notify the admin client about the mail being selected\n\t\t\tthis.mailOpenedListener.onEmailOpened(mail)\n\t\t}\n\t}\n\n\tprivate createList(): ListElementListModel<SearchResultListEntry> {\n\t\t// since we recreate the list every time we set a new result object,\n\t\t// we bind the value of result for the lifetime of this list model\n\t\t// at this point\n\t\t// note in case of refactor: the fact that the list updates the URL every time it changes\n\t\t// its state is a major source of complexity and makes everything very order-dependent\n\t\treturn new ListElementListModel<SearchResultListEntry>({\n\t\t\tfetch: async (lastFetchedEntity: SearchResultListEntry, count: number) => {\n\t\t\t\tconst startId = lastFetchedEntity == null ? GENERATED_MAX_ID : getElementId(lastFetchedEntity)\n\n\t\t\t\tconst lastResult = this.searchResult\n\t\t\t\tif (lastResult !== this.searchResult) {\n\t\t\t\t\tconsole.warn(\"got a fetch request for outdated results object, ignoring\")\n\t\t\t\t\t// this._searchResults was reassigned, we'll create a new ListElementListModel soon\n\t\t\t\t\treturn { items: [], complete: true }\n\t\t\t\t}\n\t\t\t\tawait awaitSearchInitialized(this.search)\n\n\t\t\t\tif (!lastResult || (lastResult.results.length === 0 && !hasMoreResults(lastResult))) {\n\t\t\t\t\treturn { items: [], complete: true }\n\t\t\t\t}\n\n\t\t\t\tconst { items, newSearchResult } = await this.loadSearchResults(lastResult, startId, count)\n\t\t\t\tconst entries = items.map((instance) => new SearchResultListEntry(instance))\n\t\t\t\tconst complete = !hasMoreResults(newSearchResult)\n\n\t\t\t\treturn { items: entries, complete }\n\t\t\t},\n\t\t\tloadSingle: async (_listId: Id, elementId: Id) => {\n\t\t\t\tconst lastResult = this.searchResult\n\t\t\t\tif (!lastResult) {\n\t\t\t\t\treturn null\n\t\t\t\t}\n\t\t\t\tconst id = lastResult.results.find((resultId) => elementIdPart(resultId) === elementId)\n\t\t\t\tif (id) {\n\t\t\t\t\treturn this.entityClient\n\t\t\t\t\t\t.load(lastResult.restriction.type, id)\n\t\t\t\t\t\t.then((entity) => new SearchResultListEntry(entity))\n\t\t\t\t\t\t.catch(\n\t\t\t\t\t\t\tofClass(NotFoundError, (_) => {\n\t\t\t\t\t\t\t\treturn null\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\treturn null\n\t\t\t\t}\n\t\t\t},\n\t\t\tsortCompare: (o1: SearchResultListEntry, o2: SearchResultListEntry) => {\n\t\t\t\tif (isSameTypeRef(o1.entry._type, ContactTypeRef)) {\n\t\t\t\t\treturn compareContacts(o1.entry as any, o2.entry as any)\n\t\t\t\t} else if (isSameTypeRef(o1.entry._type, CalendarEventTypeRef)) {\n\t\t\t\t\treturn downcast(o1.entry).startTime.getTime() - downcast(o2.entry).startTime.getTime()\n\t\t\t\t} else {\n\t\t\t\t\treturn sortCompareByReverseId(o1.entry, o2.entry)\n\t\t\t\t}\n\t\t\t},\n\t\t\tautoSelectBehavior: () => (isSameTypeRef(this.searchedType, MailTypeRef) ? this.selectionBehavior : ListAutoSelectBehavior.OLDER),\n\t\t})\n\t}\n\n\tprivate isInSearchResult(typeRef: TypeRef<unknown>, id: IdTuple): boolean {\n\t\tconst result = this.searchResult\n\n\t\tif (result && isSameTypeRef(typeRef, result.restriction.type)) {\n\t\t\t// The list id must be null/empty, otherwise the user is filtering by list, and it shouldn't be ignored\n\n\t\t\tconst ignoreList = isSameTypeRef(typeRef, MailTypeRef) && result.restriction.folderIds.length === 0\n\n\t\t\treturn result.results.some((r) => this.compareItemId(r, id, ignoreList))\n\t\t}\n\n\t\treturn false\n\t}\n\n\tprivate compareItemId(id1: IdTuple, id2: IdTuple, ignoreList: boolean) {\n\t\treturn ignoreList ? isSameId(elementIdPart(id1), elementIdPart(id2)) : isSameId(id1, id2)\n\t}\n\n\tprivate async loadSearchResults<T extends SearchableTypes>(\n\t\tcurrentResult: SearchResult,\n\t\tstartId: Id,\n\t\tcount: number,\n\t): Promise<{ items: T[]; newSearchResult: SearchResult }> {\n\t\tconst updatedResult = hasMoreResults(currentResult) ? await this.searchFacade.getMoreSearchResults(currentResult, count) : currentResult\n\n\t\t// we need to override global reference for other functions\n\t\tthis.searchResult = updatedResult\n\n\t\tlet items\n\t\tif (isSameTypeRef(currentResult.restriction.type, MailTypeRef)) {\n\t\t\tlet startIndex = 0\n\n\t\t\tif (startId !== GENERATED_MAX_ID) {\n\t\t\t\t// this relies on the results being sorted from newest to oldest ID\n\t\t\t\tstartIndex = updatedResult.results.findIndex((id) => id[1] <= startId)\n\t\t\t\tif (elementIdPart(updatedResult.results[startIndex]) === startId) {\n\t\t\t\t\t// the start element is already loaded, so we exclude it from the next load\n\t\t\t\t\tstartIndex++\n\t\t\t\t} else if (startIndex === -1) {\n\t\t\t\t\t// there is nothing in our result that's not loaded yet, so we\n\t\t\t\t\t// have nothing to do\n\t\t\t\t\tstartIndex = Math.max(updatedResult.results.length - 1, 0)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Ignore count when slicing here because we would have to modify SearchResult too\n\t\t\tconst toLoad = updatedResult.results.slice(startIndex)\n\t\t\titems = await this.loadAndFilterInstances(currentResult.restriction.type, toLoad, updatedResult, startIndex)\n\t\t} else if (isSameTypeRef(currentResult.restriction.type, ContactTypeRef)) {\n\t\t\ttry {\n\t\t\t\t// load all contacts to sort them by name afterwards\n\t\t\t\titems = await this.loadAndFilterInstances(currentResult.restriction.type, updatedResult.results, updatedResult, 0)\n\t\t\t} finally {\n\t\t\t\tthis.updateUi()\n\t\t\t}\n\t\t} else if (isSameTypeRef(currentResult.restriction.type, CalendarEventTypeRef)) {\n\t\t\ttry {\n\t\t\t\tconst { start, end } = currentResult.restriction\n\t\t\t\tif (start == null || end == null) {\n\t\t\t\t\tthrow new ProgrammingError(\"invalid search time range for calendar\")\n\t\t\t\t}\n\t\t\t\titems = [\n\t\t\t\t\t...(await this.calendarFacade.reifyCalendarSearchResult(start, end, updatedResult.results)),\n\t\t\t\t\t...(await this.getClientOnlyEventsSeries(start, end, updatedResult.results)),\n\t\t\t\t]\n\t\t\t} finally {\n\t\t\t\tthis.updateUi()\n\t\t\t}\n\t\t} else {\n\t\t\t// this type is not shown in the search view, e.g. group info\n\t\t\titems = []\n\t\t}\n\n\t\treturn { items: items, newSearchResult: updatedResult }\n\t}\n\n\tprivate async getClientOnlyEventsSeries(start: number, end: number, events: IdTuple[]) {\n\t\tconst eventList = await retrieveClientOnlyEventsForUser(this.logins, events, this.eventsRepository.getBirthdayEvents())\n\t\treturn generateCalendarInstancesInRange(eventList, { start, end })\n\t}\n\n\t/**\n\t * take a list of IDs and load them by list, filtering out the ones that could not be loaded.\n\t * updates the passed currentResult.result list to not include the failed IDs anymore\n\t */\n\tprivate async loadAndFilterInstances<T extends ListElementEntity>(\n\t\ttype: TypeRef<T>,\n\t\ttoLoad: IdTuple[],\n\t\tcurrentResult: SearchResult,\n\t\tstartIndex: number,\n\t): Promise<T[]> {\n\t\tconst instances = await loadMultipleFromLists(type, this.entityClient, toLoad)\n\t\t// Filter not found instances from the current result as well so we don’t loop trying to load them\n\t\tif (instances.length < toLoad.length) {\n\t\t\tconst resultLength = currentResult.results.length\n\t\t\tconsole.log(`Could not load some results: ${instances.length} out of ${toLoad.length}`)\n\n\t\t\t// loop backwards to remove correct elements by index\n\t\t\tfor (let i = toLoad.length - 1; i >= 0; i--) {\n\t\t\t\tconst toLoadId = toLoad[i]\n\n\t\t\t\tif (!instances.some((instance) => isSameId(instance._id, toLoadId))) {\n\t\t\t\t\tcurrentResult.results.splice(startIndex + i, 1)\n\n\t\t\t\t\tif (instances.length === toLoad.length) {\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconsole.log(`Fixed results, before ${resultLength}, after: ${currentResult.results.length}`)\n\t\t}\n\n\t\treturn instances\n\t}\n\n\tsendStopLoadingSignal() {\n\t\tthis.search.sendCancelSignal()\n\t}\n\n\tgetLocalCalendars() {\n\t\treturn getClientOnlyCalendars(this.logins.getUserController().userId, this.localCalendars)\n\t}\n\n\tdispose() {\n\t\tthis.stopLoadAll()\n\t\tthis.extendIndexConfirmationCallback = null\n\t\tthis.resultSubscription?.end(true)\n\t\tthis.resultSubscription = null\n\t\tthis.mailboxSubscription?.end(true)\n\t\tthis.mailboxSubscription = null\n\t\tthis.listStateSubscription?.end(true)\n\t\tthis.listStateSubscription = null\n\t\tthis.search.sendCancelSignal()\n\t\tthis.eventController.removeEntityListener(this.entityEventsListener)\n\t}\n\n\tgetLabelsForMail(mail: Mail): MailFolder[] {\n\t\treturn mailLocator.mailModel.getLabelsForMail(mail)\n\t}\n}\n\nfunction awaitSearchInitialized(searchModel: SearchModel): Promise<unknown> {\n\tconst deferred = defer<unknown>()\n\tconst dep = searchModel.indexState.map((state) => {\n\t\tif (!state.initializing) {\n\t\t\tPromise.resolve().then(() => {\n\t\t\t\tdep.end(true)\n\t\t\t\tdeferred.resolve(undefined)\n\t\t\t})\n\t\t}\n\t})\n\treturn deferred.promise\n}\n"]}