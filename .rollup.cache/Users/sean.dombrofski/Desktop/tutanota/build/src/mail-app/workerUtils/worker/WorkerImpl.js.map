{"version":3,"file":"WorkerImpl.js","sourceRoot":"","sources":["../../../../../src/mail-app/workerUtils/worker/WorkerImpl.ts"],"names":[],"mappings":"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","sourcesContent":["import type { Commands } from \"../../../common/api/common/threading/MessageDispatcher.js\"\nimport { errorToObj, MessageDispatcher, Request } from \"../../../common/api/common/threading/MessageDispatcher.js\"\nimport { BookingFacade } from \"../../../common/api/worker/facades/lazy/BookingFacade.js\"\nimport { NotAuthenticatedError } from \"../../../common/api/common/error/RestError.js\"\nimport { ProgrammingError } from \"../../../common/api/common/error/ProgrammingError.js\"\nimport { initLocator, locator, resetLocator } from \"./WorkerLocator.js\"\nimport { assertWorkerOrNode, isMainOrNode } from \"../../../common/api/common/Env.js\"\nimport type { BrowserData } from \"../../../common/misc/ClientConstants.js\"\nimport { CryptoFacade } from \"../../../common/api/worker/crypto/CryptoFacade.js\"\nimport type { GiftCardFacade } from \"../../../common/api/worker/facades/lazy/GiftCardFacade.js\"\nimport type { LoginFacade } from \"../../../common/api/worker/facades/LoginFacade.js\"\nimport type { CustomerFacade } from \"../../../common/api/worker/facades/lazy/CustomerFacade.js\"\nimport type { GroupManagementFacade } from \"../../../common/api/worker/facades/lazy/GroupManagementFacade.js\"\nimport { ConfigurationDatabase } from \"../../../common/api/worker/facades/lazy/ConfigurationDatabase.js\"\nimport { CalendarFacade } from \"../../../common/api/worker/facades/lazy/CalendarFacade.js\"\nimport { MailFacade } from \"../../../common/api/worker/facades/lazy/MailFacade.js\"\nimport { ShareFacade } from \"../../../common/api/worker/facades/lazy/ShareFacade.js\"\nimport { CounterFacade } from \"../../../common/api/worker/facades/lazy/CounterFacade.js\"\nimport type { Indexer } from \"../index/Indexer.js\"\nimport { SearchFacade } from \"../index/SearchFacade.js\"\nimport { MailAddressFacade } from \"../../../common/api/worker/facades/lazy/MailAddressFacade.js\"\nimport { UserManagementFacade } from \"../../../common/api/worker/facades/lazy/UserManagementFacade.js\"\nimport { DelayedImpls, exposeLocalDelayed, exposeRemote } from \"../../../common/api/common/WorkerProxy.js\"\nimport { random } from \"@tutao/tutanota-crypto\"\nimport type { NativeInterface } from \"../../../common/native/common/NativeInterface.js\"\nimport type { EntityRestInterface } from \"../../../common/api/worker/rest/EntityRestClient.js\"\nimport { RestClient } from \"../../../common/api/worker/rest/RestClient.js\"\nimport { IServiceExecutor } from \"../../../common/api/common/ServiceRequest.js\"\nimport { BlobFacade } from \"../../../common/api/worker/facades/lazy/BlobFacade.js\"\nimport { ExposedCacheStorage } from \"../../../common/api/worker/rest/DefaultEntityRestCache.js\"\nimport { BlobAccessTokenFacade } from \"../../../common/api/worker/facades/BlobAccessTokenFacade.js\"\nimport { EntropyFacade } from \"../../../common/api/worker/facades/EntropyFacade.js\"\nimport { WorkerFacade } from \"../../../common/api/worker/facades/WorkerFacade.js\"\nimport { SqlCipherFacade } from \"../../../common/native/common/generatedipc/SqlCipherFacade.js\"\nimport { WebWorkerTransport } from \"../../../common/api/common/threading/Transport.js\"\nimport { ContactFacade } from \"../../../common/api/worker/facades/lazy/ContactFacade.js\"\nimport { RecoverCodeFacade } from \"../../../common/api/worker/facades/lazy/RecoverCodeFacade.js\"\nimport { CacheManagementFacade } from \"../../../common/api/worker/facades/lazy/CacheManagementFacade.js\"\nimport { ExposedEventBus, MainInterface, WorkerRandomizer } from \"../../../common/api/worker/workerInterfaces.js\"\nimport { CryptoError } from \"@tutao/tutanota-crypto/error.js\"\nimport { CryptoWrapper } from \"../../../common/api/worker/crypto/CryptoWrapper.js\"\nimport { AsymmetricCryptoFacade } from \"../../../common/api/worker/crypto/AsymmetricCryptoFacade.js\"\nimport { PublicKeyProvider } from \"../../../common/api/worker/facades/PublicKeyProvider.js\"\nimport { MailExportFacade } from \"../../../common/api/worker/facades/lazy/MailExportFacade\"\nimport { BulkMailLoader } from \"../index/BulkMailLoader.js\"\n\nassertWorkerOrNode()\n\n/** Interface of the facades exposed by the worker, basically interface for the worker itself */\nexport interface WorkerInterface {\n\treadonly loginFacade: LoginFacade\n\treadonly customerFacade: CustomerFacade\n\treadonly giftCardFacade: GiftCardFacade\n\treadonly groupManagementFacade: GroupManagementFacade\n\treadonly configFacade: ConfigurationDatabase\n\treadonly calendarFacade: CalendarFacade\n\treadonly mailFacade: MailFacade\n\treadonly shareFacade: ShareFacade\n\treadonly cacheManagementFacade: CacheManagementFacade\n\treadonly counterFacade: CounterFacade\n\treadonly indexerFacade: Indexer\n\treadonly searchFacade: SearchFacade\n\treadonly bookingFacade: BookingFacade\n\treadonly mailAddressFacade: MailAddressFacade\n\treadonly blobAccessTokenFacade: BlobAccessTokenFacade\n\treadonly blobFacade: BlobFacade\n\treadonly userManagementFacade: UserManagementFacade\n\treadonly recoverCodeFacade: RecoverCodeFacade\n\treadonly restInterface: EntityRestInterface\n\treadonly serviceExecutor: IServiceExecutor\n\treadonly cryptoWrapper: CryptoWrapper\n\treadonly publicKeyProvider: PublicKeyProvider\n\treadonly asymmetricCryptoFacade: AsymmetricCryptoFacade\n\treadonly cryptoFacade: CryptoFacade\n\treadonly cacheStorage: ExposedCacheStorage\n\treadonly sqlCipherFacade: SqlCipherFacade\n\treadonly random: WorkerRandomizer\n\treadonly eventBus: ExposedEventBus\n\treadonly entropyFacade: EntropyFacade\n\treadonly workerFacade: WorkerFacade\n\treadonly contactFacade: ContactFacade\n\treadonly mailExportFacade: MailExportFacade\n\treadonly bulkMailLoader: BulkMailLoader\n}\n\ntype WorkerRequest = Request<WorkerRequestType>\n\nexport class WorkerImpl implements NativeInterface {\n\tprivate readonly _scope: DedicatedWorkerGlobalScope\n\tprivate readonly _dispatcher: MessageDispatcher<MainRequestType, WorkerRequestType>\n\n\tconstructor(self: DedicatedWorkerGlobalScope) {\n\t\tthis._scope = self\n\t\tthis._dispatcher = new MessageDispatcher(new WebWorkerTransport(this._scope), this.queueCommands(this.exposedInterface), \"worker-main\")\n\t}\n\n\tasync init(browserData: BrowserData): Promise<void> {\n\t\t// import(\"tuta-sdk\").then(async (module) => {\n\t\t// \t// await module.default(\"wasm/tutasdk.wasm\")\n\t\t// \tconst entityClient = new module.EntityClient()\n\t\t// \tconst typeRef = new module.TypeRef(\"tutanota\", \"Mail\")\n\t\t// \tconsole.log(\"result from rust: \", awai t entityClient.load_element(typeRef, \"myId\"))\n\t\t// \ttypeRef.free()\n\t\t// \tentityClient.free()\n\t\t// })\n\n\t\tawait initLocator(this, browserData)\n\t\tconst workerScope = this._scope\n\n\t\t// only register oncaught error handler if we are in the *real* worker scope\n\t\t// Otherwise uncaught error handler might end up in an infinite loop for test cases.\n\t\tif (workerScope && !isMainOrNode()) {\n\t\t\tworkerScope.addEventListener(\"unhandledrejection\", (event: PromiseRejectionEvent) => {\n\t\t\t\tthis.sendError(event.reason)\n\t\t\t})\n\n\t\t\t// @ts-ignore\n\t\t\tworkerScope.onerror = (e: string | Event, source, lineno, colno, error) => {\n\t\t\t\tconsole.error(\"workerImpl.onerror\", e, source, lineno, colno, error)\n\n\t\t\t\tif (error instanceof Error) {\n\t\t\t\t\tthis.sendError(error)\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tconst err = new Error(e)\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\terr.lineNumber = lineno\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\terr.columnNumber = colno\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\terr.fileName = source\n\t\t\t\t\tthis.sendError(err)\n\t\t\t\t}\n\n\t\t\t\treturn true\n\t\t\t}\n\t\t}\n\t}\n\n\tget exposedInterface(): DelayedImpls<WorkerInterface> {\n\t\treturn {\n\t\t\tasync loginFacade() {\n\t\t\t\treturn locator.login\n\t\t\t},\n\n\t\t\tasync customerFacade() {\n\t\t\t\treturn locator.customer()\n\t\t\t},\n\n\t\t\tasync giftCardFacade() {\n\t\t\t\treturn locator.giftCards()\n\t\t\t},\n\n\t\t\tasync groupManagementFacade() {\n\t\t\t\treturn locator.groupManagement()\n\t\t\t},\n\n\t\t\tasync configFacade() {\n\t\t\t\treturn locator.configFacade()\n\t\t\t},\n\n\t\t\tasync calendarFacade() {\n\t\t\t\treturn locator.calendar()\n\t\t\t},\n\n\t\t\tasync mailFacade() {\n\t\t\t\treturn locator.mail()\n\t\t\t},\n\n\t\t\tasync shareFacade() {\n\t\t\t\treturn locator.share()\n\t\t\t},\n\n\t\t\tasync cacheManagementFacade() {\n\t\t\t\treturn locator.cacheManagement()\n\t\t\t},\n\n\t\t\tasync counterFacade() {\n\t\t\t\treturn locator.counters()\n\t\t\t},\n\n\t\t\tasync indexerFacade() {\n\t\t\t\treturn locator.indexer()\n\t\t\t},\n\n\t\t\tasync searchFacade() {\n\t\t\t\treturn locator.search()\n\t\t\t},\n\n\t\t\tasync bookingFacade() {\n\t\t\t\treturn locator.booking()\n\t\t\t},\n\n\t\t\tasync mailAddressFacade() {\n\t\t\t\treturn locator.mailAddress()\n\t\t\t},\n\n\t\t\tasync blobAccessTokenFacade() {\n\t\t\t\treturn locator.blobAccessToken\n\t\t\t},\n\n\t\t\tasync blobFacade() {\n\t\t\t\treturn locator.blob()\n\t\t\t},\n\n\t\t\tasync userManagementFacade() {\n\t\t\t\treturn locator.userManagement()\n\t\t\t},\n\n\t\t\tasync recoverCodeFacade() {\n\t\t\t\treturn locator.recoverCode()\n\t\t\t},\n\n\t\t\tasync restInterface() {\n\t\t\t\treturn locator.cache\n\t\t\t},\n\n\t\t\tasync serviceExecutor() {\n\t\t\t\treturn locator.serviceExecutor\n\t\t\t},\n\n\t\t\tasync cryptoWrapper() {\n\t\t\t\treturn locator.cryptoWrapper\n\t\t\t},\n\n\t\t\tasync publicKeyProvider() {\n\t\t\t\treturn locator.publicKeyProvider\n\t\t\t},\n\n\t\t\tasync asymmetricCryptoFacade() {\n\t\t\t\treturn locator.asymmetricCrypto\n\t\t\t},\n\n\t\t\tasync cryptoFacade() {\n\t\t\t\treturn locator.crypto\n\t\t\t},\n\n\t\t\tasync cacheStorage() {\n\t\t\t\treturn locator.cacheStorage\n\t\t\t},\n\n\t\t\tasync sqlCipherFacade() {\n\t\t\t\treturn locator.sqlCipherFacade\n\t\t\t},\n\n\t\t\tasync random() {\n\t\t\t\treturn {\n\t\t\t\t\tasync generateRandomNumber(nbrOfBytes: number) {\n\t\t\t\t\t\treturn random.generateRandomNumber(nbrOfBytes)\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tasync eventBus() {\n\t\t\t\treturn locator.eventBusClient\n\t\t\t},\n\n\t\t\tasync entropyFacade() {\n\t\t\t\treturn locator.entropyFacade\n\t\t\t},\n\n\t\t\tasync workerFacade() {\n\t\t\t\treturn locator.workerFacade\n\t\t\t},\n\n\t\t\tasync contactFacade() {\n\t\t\t\treturn locator.contactFacade()\n\t\t\t},\n\t\t\tasync bulkMailLoader() {\n\t\t\t\treturn locator.bulkMailLoader()\n\t\t\t},\n\t\t\tasync mailExportFacade() {\n\t\t\t\treturn locator.mailExportFacade()\n\t\t\t},\n\t\t}\n\t}\n\n\tqueueCommands(exposedWorker: DelayedImpls<WorkerInterface>): Commands<WorkerRequestType> {\n\t\treturn {\n\t\t\tsetup: async (message) => {\n\t\t\t\tconsole.error(\"WorkerImpl: setup was called after bootstrap! message: \", message)\n\t\t\t},\n\t\t\ttestEcho: (message) =>\n\t\t\t\tPromise.resolve({\n\t\t\t\t\tmsg: \">>> \" + message.args[0].msg,\n\t\t\t\t}),\n\t\t\ttestError: (message) => {\n\t\t\t\tconst errorTypes = {\n\t\t\t\t\tProgrammingError,\n\t\t\t\t\tCryptoError,\n\t\t\t\t\tNotAuthenticatedError,\n\t\t\t\t}\n\t\t\t\t// @ts-ignore\n\t\t\t\tlet ErrorType = errorTypes[message.args[0].errorType]\n\t\t\t\treturn Promise.reject(new ErrorType(`wtf: ${message.args[0].errorType}`))\n\t\t\t},\n\t\t\treset: (message: WorkerRequest) => {\n\t\t\t\treturn resetLocator()\n\t\t\t},\n\t\t\trestRequest: (message: WorkerRequest) => {\n\t\t\t\t// This horror is to add auth headers to the admin client\n\t\t\t\tconst args = message.args as Parameters<RestClient[\"request\"]>\n\t\t\t\tlet [path, method, options] = args\n\t\t\t\toptions = options ?? {}\n\t\t\t\toptions.headers = { ...locator.user.createAuthHeaders(), ...options.headers }\n\t\t\t\treturn locator.restClient.request(path, method, options)\n\t\t\t},\n\n\t\t\tfacade: exposeLocalDelayed<DelayedImpls<WorkerInterface>, WorkerRequestType>(exposedWorker),\n\t\t}\n\t}\n\n\tinvokeNative(requestType: string, args: ReadonlyArray<unknown>): Promise<any> {\n\t\treturn this._dispatcher.postRequest(new Request(\"execNative\", [requestType, args]))\n\t}\n\n\tgetMainInterface(): MainInterface {\n\t\treturn exposeRemote<MainInterface>((request) => this._dispatcher.postRequest(request))\n\t}\n\n\tsendError(e: Error): Promise<void> {\n\t\treturn this._dispatcher.postRequest(new Request(\"error\", [errorToObj(e)]))\n\t}\n}\n"]}