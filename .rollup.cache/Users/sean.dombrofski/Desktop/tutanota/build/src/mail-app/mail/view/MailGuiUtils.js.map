{"version":3,"file":"MailGuiUtils.js","sourceRoot":"","sources":["../../../../../src/mail-app/mail/view/MailGuiUtils.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,UAAU,EAA0C,MAAM,mDAAmD,CAAA;AACtH,OAAO,EAAE,WAAW,EAAE,uBAAuB,EAAE,MAAM,4CAA4C,CAAA;AACjG,OAAO,EAAE,MAAM,EAAE,MAAM,iCAAiC,CAAA;AACxD,OAAO,EAAE,OAAO,EAAE,MAAM,wCAAwC,CAAA;AAGhE,OAAO,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,gCAAgC,CAAA;AACjE,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,SAAS,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,uBAAuB,CAAA;AAC5F,OAAO,EACN,oBAAoB,EACpB,iBAAiB,EAEjB,WAAW,EAEX,yBAAyB,GACzB,MAAM,8CAA8C,CAAA;AACrD,OAAO,EAAE,wBAAwB,EAAE,MAAM,oBAAoB,CAAA;AAE7D,OAAO,EAAE,IAAI,EAA+B,MAAM,wCAAwC,CAAA;AAE1F,OAAO,EAAE,yBAAyB,EAAE,QAAQ,EAA+B,MAAM,sCAAsC,CAAA;AACvH,OAAO,EAAE,KAAK,EAAE,MAAM,mCAAmC,CAAA;AAEzD,OAAO,EAAE,IAAI,EAAE,MAAM,6BAA6B,CAAA;AAClD,OAAO,EAAE,SAAS,EAAE,MAAM,kCAAkC,CAAA;AAG5D,OAAO,EAAE,yCAAyC,EAAE,MAAM,sDAAsD,CAAA;AAChH,OAAO,EAAE,WAAW,EAAE,MAAM,sBAAsB,CAAA;AAClD,OAAO,EAAE,wBAAwB,EAAc,aAAa,EAAE,gCAAgC,EAAE,0BAA0B,EAAE,MAAM,uBAAuB,CAAA;AACzJ,OAAO,EAAE,SAAS,EAAE,MAAM,6CAA6C,CAAA;AACvE,OAAO,EAAE,gBAAgB,EAAE,MAAM,sDAAsD,CAAA;AACvF,OAAO,EAAE,qBAAqB,EAAE,mBAAmB,EAAE,MAAM,wBAAwB,CAAA;AAGnF,MAAM,CAAC,KAAK,UAAU,4BAA4B,CAAC,KAA0B;IAC5E,IAAI,UAAU,GAAW,EAAE,CAAA;IAC3B,IAAI,SAAS,GAAW,EAAE,CAAA;IAC1B,KAAK,IAAI,IAAI,IAAI,KAAK,EAAE,CAAC;QACxB,MAAM,MAAM,GAAG,WAAW,CAAC,SAAS,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAA;QAC/D,MAAM,OAAO,GAAG,MAAM,WAAW,CAAC,SAAS,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAA;QAC1E,IAAI,OAAO,IAAI,IAAI,EAAE,CAAC;YACrB,SAAQ;QACT,CAAC;QACD,MAAM,aAAa,GAAG,MAAM,IAAI,mBAAmB,CAAC,OAAO,EAAE,MAAM,CAAC,CAAA;QACpE,IAAI,aAAa,EAAE,CAAC;YACnB,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;QACtB,CAAC;aAAM,CAAC;YACP,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;QACrB,CAAC;IACF,CAAC;IAED,IAAI,kBAAkB,GAA0B,IAAI,CAAA;IAEpD,IAAI,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;QAC3B,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YAC1B,kBAAkB,GAAG,iCAAiC,CAAA;QACvD,CAAC;aAAM,CAAC;YACP,kBAAkB,GAAG,yBAAyB,CAAA;QAC/C,CAAC;IACF,CAAC;IAED,IAAI,kBAAkB,IAAI,IAAI,EAAE,CAAC;QAChC,OAAO,MAAM,CAAC,OAAO,CAAC,kBAAkB,EAAE,WAAW,CAAC,CAAA;IACvD,CAAC;SAAM,CAAC;QACP,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAA;IAC7B,CAAC;AACF,CAAC;AAED;;GAEG;AACH,MAAM,UAAU,oBAAoB,CAAC,SAAoB,EAAE,KAA0B,EAAE,SAAqB;IAC3G,OAAO,4BAA4B,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,SAAS,EAAE,EAAE;QAC7D,IAAI,SAAS,EAAE,CAAC;YACf,SAAS,EAAE,CAAA;YACX,OAAO,SAAS;iBACd,WAAW,CAAC,KAAK,CAAC;iBAClB,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC;iBAChB,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE;gBACZ,2CAA2C;gBAC3C,IAAI,CAAC,YAAY,uBAAuB,IAAI,CAAC,YAAY,WAAW,EAAE,CAAC;oBACtE,OAAO,MAAM,CAAC,OAAO,CAAC,0BAA0B,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,CAAA;gBACpE,CAAC;qBAAM,CAAC;oBACP,MAAM,CAAC,CAAA;gBACR,CAAC;YACF,CAAC,CAAC,CAAA;QACJ,CAAC;aAAM,CAAC;YACP,OAAO,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAA;QAC9B,CAAC;IACF,CAAC,CAAC,CAAA;AACH,CAAC;AAUD;;;GAGG;AACH,MAAM,CAAC,KAAK,UAAU,SAAS,CAAC,EAAE,YAAY,EAAE,SAAS,EAAE,KAAK,EAAE,gBAAgB,EAAE,YAAY,GAAG,IAAI,EAAmB;IACzH,MAAM,OAAO,GAAG,MAAM,SAAS,CAAC,8BAA8B,CAAC,gBAAgB,CAAC,CAAA;IAChF,IAAI,OAAO,IAAI,IAAI,IAAI,OAAO,CAAC,OAAO,CAAC,OAAO,IAAI,IAAI,EAAE,CAAC;QACxD,OAAO,KAAK,CAAA;IACb,CAAC;IACD,MAAM,MAAM,GAAG,MAAM,SAAS,CAAC,sBAAsB,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAA;IAClF,OAAO,SAAS;SACd,SAAS,CAAC,KAAK,EAAE,gBAAgB,CAAC;SAClC,IAAI,CAAC,KAAK,IAAI,EAAE;QAChB,IAAI,qBAAqB,CAAC,MAAM,EAAE,gBAAgB,EAAE,WAAW,CAAC,IAAI,CAAC,IAAI,YAAY,EAAE,CAAC;YACvF,MAAM,eAAe,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE;gBAC1C,6BAA6B;gBAC7B,MAAM,cAAc,GAAG,UAAU,CAAC,IAAI,CAAC,CAAA;gBACvC,cAAc,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAA;gBAC7B,OAAO,cAAc,CAAA;YACtB,CAAC,CAAC,CAAA;YACF,MAAM,cAAc,GAAG,MAAM,YAAY,CAAC,6BAA6B,CAAC,aAAa,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC,CAAA;YACpH,MAAM,wBAAwB,gCAAsB,YAAY,EAAE,SAAS,EAAE,cAAc,EAAE,eAAe,CAAC,CAAA;QAC9G,CAAC;QAED,OAAO,IAAI,CAAA;IACZ,CAAC,CAAC;SACD,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE;QACZ,2CAA2C;QAC3C,IAAI,CAAC,YAAY,WAAW,IAAI,CAAC,YAAY,uBAAuB,EAAE,CAAC;YACtE,OAAO,MAAM,CAAC,OAAO,CAAC,0BAA0B,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,CAAA;QACpE,CAAC;aAAM,CAAC;YACP,MAAM,CAAC,CAAA;QACR,CAAC;IACF,CAAC,CAAC,CAAA;AACJ,CAAC;AAED,MAAM,UAAU,YAAY,CAAC,KAAa;IACzC,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;QACtB,2DAA2D;QAC3D,OAAO,WAAW,CAAC,SAAS,CAAC,wBAAwB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,OAAqB,EAAE,EAAE;YAC9F,IAAI,OAAO,EAAE,CAAC;gBACb,SAAS,CAAC;oBACT,YAAY,EAAE,OAAO,CAAC,YAAY;oBAClC,SAAS,EAAE,WAAW,CAAC,SAAS;oBAChC,KAAK,EAAE,KAAK;oBACZ,gBAAgB,EAAE,wBAAwB,CAAC,OAAO,EAAE,WAAW,CAAC,OAAO,CAAC;iBACxE,CAAC,CAAA;YACH,CAAC;QACF,CAAC,CAAC,CAAA;IACH,CAAC;SAAM,CAAC;QACP,OAAO,OAAO,CAAC,OAAO,EAAE,CAAA;IACzB,CAAC;AACF,CAAC;AAED,MAAM,UAAU,WAAW,CAAC,KAAa;IACxC,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;QACtB,2DAA2D;QAC3D,OAAO,WAAW,CAAC,SAAS,CAAC,wBAAwB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,OAAqB,EAAE,EAAE;YAC9F,IAAI,OAAO,EAAE,CAAC;gBACb,SAAS,CAAC;oBACT,YAAY,EAAE,OAAO,CAAC,YAAY;oBAClC,SAAS,EAAE,WAAW,CAAC,SAAS;oBAChC,KAAK,EAAE,KAAK;oBACZ,gBAAgB,EAAE,wBAAwB,CAAC,OAAO,EAAE,WAAW,CAAC,KAAK,CAAC;iBACtE,CAAC,CAAA;YACH,CAAC;QACF,CAAC,CAAC,CAAA;IACH,CAAC;SAAM,CAAC;QACP,OAAO,OAAO,CAAC,OAAO,EAAE,CAAA;IACzB,CAAC;AACF,CAAC;AAED,MAAM,UAAU,mBAAmB,CAAC,UAAuB;IAC1D,QAAQ,UAAU,EAAE,CAAC;QACpB,KAAK,WAAW,CAAC,MAAM;YACtB,mCAAmB;QAEpB,KAAK,WAAW,CAAC,KAAK;YACrB,iCAAkB;QAEnB,KAAK,WAAW,CAAC,IAAI;YACpB,+BAAiB;QAElB,KAAK,WAAW,CAAC,KAAK;YACrB,uCAAqB;QAEtB,KAAK,WAAW,CAAC,OAAO;YACvB,qCAAoB;QAErB,KAAK,WAAW,CAAC,IAAI;YACpB,+BAAiB;QAElB,KAAK,WAAW,CAAC,KAAK;YACrB,iCAAkB;QAEnB;YACC,mCAAmB;IACrB,CAAC;AACF,CAAC;AAED,MAAM,UAAU,aAAa,CAAC,MAAkB;IAC/C,OAAO,mBAAmB,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC,CAAA;AACtD,CAAC;AAED,MAAM,UAAU,iBAAiB,CAAC,IAAU;IAC3C,IAAI,MAAM,GAAG,WAAW,CAAC,SAAS,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAA;IAE7D,IAAI,MAAM,EAAE,CAAC;QACZ,OAAO,aAAa,CAAC,MAAM,CAAC,CAAA;IAC7B,CAAC;SAAM,CAAC;QACP,mCAAmB;IACpB,CAAC;AACF,CAAC;AAED,MAAM,UAAU,2BAA2B,CAC1C,GAAgB,EAChB,YAA0B,EAC1B,SAAqF;IAErF,uHAAuH;IACvH,MAAM,aAAa,GAAuB,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC,CAAA;IACtF,IAAI,GAAG,CAAC,UAAU,EAAE,CAAC;QACpB,MAAM,mBAAmB,GAAuB,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC,CAAA;QACvG,aAAa,CAAC,IAAI,CAAC,GAAG,mBAAmB,CAAC,CAAA;IAC3C,CAAC;IACD,MAAM,eAAe,GAAkB,EAAE,CAAA;IACzC,KAAK,MAAM,YAAY,IAAI,aAAa,EAAE,CAAC;QAC1C,MAAM,GAAG,GAAG,YAAY,CAAC,YAAY,CAAC,KAAK,CAAC,CAAA;QAE5C,IAAI,GAAG,EAAE,CAAC;YACT,MAAM,WAAW,GAAG,YAAY,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;YAEzC,IAAI,WAAW,EAAE,CAAC;gBACjB,eAAe,CAAC,IAAI,CAAC,YAAY,CAAC,CAAA;gBAClC,YAAY,CAAC,YAAY,CAAC,KAAK,EAAE,WAAW,CAAC,SAAS,CAAC,CAAA;gBACvD,YAAY,CAAC,SAAS,CAAC,MAAM,CAAC,sBAAsB,CAAC,CAAA;gBAErD,IAAI,KAAK,EAAE,EAAE,CAAC;oBACb,iCAAiC;oBACjC,IAAI,SAA2B,CAAA;oBAC/B,IAAI,WAMQ,CAAA;oBACZ,YAAY,CAAC,gBAAgB,CAAC,YAAY,EAAE,CAAC,CAAa,EAAE,EAAE;wBAC7D,MAAM,KAAK,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAA;wBAC1B,IAAI,CAAC,KAAK;4BAAE,OAAM;wBAClB,WAAW,GAAG;4BACb,CAAC,EAAE,KAAK,CAAC,OAAO;4BAChB,CAAC,EAAE,KAAK,CAAC,OAAO;yBAChB,CAAA;wBACD,IAAI,SAAS;4BAAE,YAAY,CAAC,SAAS,CAAC,CAAA;wBACtC,SAAS,GAAG,UAAU,CAAC,GAAG,EAAE;4BAC3B,SAAS,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,EAAE,YAAY,CAAC,CAAA;wBAC5C,CAAC,EAAE,GAAG,CAAC,CAAA;oBACR,CAAC,CAAC,CAAA;oBACF,YAAY,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC,CAAa,EAAE,EAAE;wBAC5D,MAAM,KAAK,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAA;wBAC1B,IAAI,CAAC,KAAK,IAAI,CAAC,WAAW,IAAI,CAAC,SAAS;4BAAE,OAAM;wBAEhD,IACC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,GAAG,WAAW,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,cAAc;4BAClE,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,GAAG,WAAW,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,cAAc,EACjE,CAAC;4BACF,YAAY,CAAC,SAAS,CAAC,CAAA;4BACvB,SAAS,GAAG,IAAI,CAAA;wBACjB,CAAC;oBACF,CAAC,CAAC,CAAA;oBACF,YAAY,CAAC,gBAAgB,CAAC,UAAU,EAAE,GAAG,EAAE;wBAC9C,IAAI,SAAS,EAAE,CAAC;4BACf,YAAY,CAAC,SAAS,CAAC,CAAA;4BACvB,SAAS,GAAG,IAAI,CAAA;wBACjB,CAAC;oBACF,CAAC,CAAC,CAAA;gBACH,CAAC;gBAED,IAAI,SAAS,EAAE,EAAE,CAAC;oBACjB,0CAA0C;oBAC1C,YAAY,CAAC,gBAAgB,CAAC,aAAa,EAAE,CAAC,CAAa,EAAE,EAAE;wBAC9D,SAAS,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,EAAE,YAAY,CAAC,CAAA;wBAC3C,CAAC,CAAC,cAAc,EAAE,CAAA;oBACnB,CAAC,CAAC,CAAA;gBACH,CAAC;YACF,CAAC;QACF,CAAC;IACF,CAAC;IACD,OAAO,eAAe,CAAA;AACvB,CAAC;AAED,MAAM,UAAU,2BAA2B,CAAC,GAAgB;IAC3D,MAAM,QAAQ,GAAG,GAAG,CAAC,SAAS,CAAC,IAAI,CAAgB,CAAA;IACnD,MAAM,YAAY,GAAuB,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC,CAAA;IAC1F,KAAK,MAAM,WAAW,IAAI,YAAY,EAAE,CAAC;QACxC,MAAM,GAAG,GAAG,WAAW,CAAC,YAAY,CAAC,KAAK,CAAC,CAAA;QAC3C,WAAW,CAAC,YAAY,CAAC,KAAK,EAAE,MAAM,GAAG,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC,CAAA;QACrD,WAAW,CAAC,eAAe,CAAC,KAAK,CAAC,CAAA;IACnC,CAAC;IACD,OAAO,QAAQ,CAAA;AAChB,CAAC;AAED,MAAM,UAAU,iBAAiB,CAAC,IAAc;IAC/C,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAA;IACnD,IAAI,CAAC,GAAG,GAAG,GAAG,CAAA;IACd,OAAO,0BAA0B,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;AAC7C,CAAC;AAED,SAAS,0BAA0B,CAAC,IAAc,EAAE,GAAW;IAC9D,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;QAClC,IAAI,EAAE,IAAI,CAAC,QAAQ;KACnB,CAAC,CAAA;IACF,MAAM,SAAS,GAAG,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAA;IAC3C,OAAO;QACN,GAAG;QACH,SAAS;QACT,IAAI;KACJ,CAAA;AACF,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,gBAAgB,CAAC,cAA8B,EAAE,WAAgC,EAAE,cAA6B;IACrI,MAAM,WAAW,GAAG,wBAAwB,CAAC,WAAW,EAAE,cAAc,CAAC,CAAA;IACzE,MAAM,YAAY,GAAG,IAAI,GAAG,EAAE,CAAA;IAC9B,OAAO,UAAU,CAAC,WAAW,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE;QAC7C,IAAI,QAAQ,GAAG,MAAM,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,CAAA;QACvD,MAAM,EAAE,aAAa,EAAE,GAAG,MAAM,MAAM,CAAC,oCAAoC,CAAC,CAAA;QAC5E,QAAQ,GAAG,aAAa,CAAC,wBAAwB,CAAC,QAAQ,CAAC,CAAA;QAC3D,MAAM,oBAAoB,GAAG,0BAA0B,CAAC,QAAQ,EAAE,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAA;QACtF,YAAY,CAAC,GAAG,CAAC,oBAAoB,CAAC,GAAG,EAAE,oBAAoB,CAAC,CAAA;IACjE,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,YAAY,CAAC,CAAA;AAC5B,CAAC;AAED,MAAM,UAAU,wBAAwB,CAAC,WAAgC,EAAE,cAA6B;IACvG,OAAO,WAAW,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,GAAG,KAAK,IAAI,CAAC,CAAC,CAAA;AACtF,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,qBAAqB,CAC1C,YAA0B,EAC1B,KAAgB,EAChB,MAAe,EACf,KAAsB,EACtB,IAA+E;IAE/E,MAAM,OAAO,GAAG,MAAM,0BAA0B,CAAC,KAAK,EAAE,KAAK,CAAC,CAAA;IAC9D,MAAM,sBAAsB,CAC3B,MAAM,EACN,OAAO,EACP,CAAC,CAAC,EAAE,EAAE,CACL,SAAS,CAAC;QACT,YAAY;QACZ,SAAS,EAAE,KAAK;QAChB,KAAK,EAAE,KAAK;QACZ,gBAAgB,EAAE,CAAC,CAAC,MAAM;KAC1B,CAAC,EACH,IAAI,CACJ,CAAA;AACF,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,sBAAsB,CAC3C,MAAe,EACf,OAA8B,EAC9B,OAA4C,EAC5C,IAA+E;IAE/E,MAAM,EAAE,KAAK,GAAG,GAAG,EAAE,cAAc,GAAG,KAAK,EAAE,UAAU,GAAG,IAAI,EAAE,GAAG,IAAI,IAAI,EAAE,CAAA;IAE7E,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC;QAAE,OAAM;IAChC,MAAM,aAAa,GAAG,OAAO,CAAC,GAAG,CAChC,CAAC,CAAC,EAAE,EAAE,CACL,CAAC;QACA,2EAA2E;QAC3E,KAAK,EAAE,IAAI,CAAC,eAAe,CAC1B,mBAAmB,aAAa,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,EAC5C,IAAI,CAAC,GAAG,CAAC,mBAAmB,EAAE;YAC7B,cAAc,EAAE,aAAa,CAAC,CAAC,CAAC,MAAM,CAAC;YACvC,SAAS,EAAE,CAAC,CAAC,KAAK;SAClB,CAAC,CACF;QACD,IAAI,EAAE,IAAI,CAAC,eAAe,CAAC,aAAa,EAAE,gCAAgC,CAAC,CAAC,CAAC,CAAC;QAC9E,KAAK,EAAE,GAAG,EAAE;YACX,UAAU,EAAE,CAAA;YACZ,OAAO,CAAC,CAAC,CAAC,CAAA;QACX,CAAC;QACD,IAAI,EAAE,aAAa,CAAC,CAAC,CAAC,MAAM,CAAC;KACA,CAAC,CAChC,CAAA;IAED,MAAM,QAAQ,GAAG,IAAI,QAAQ,CAAC,GAAG,EAAE,CAAC,aAAa,EAAE,KAAK,CAAC,CAAA;IACzD,QAAQ,CAAC,SAAS,CAAC,IAAI,yBAAyB,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAA;IACvG,KAAK,CAAC,aAAa,CAAC,QAAQ,EAAE,cAAc,CAAC,CAAA;AAC9C,CAAC;AAED,MAAM,UAAU,oBAAoB,CAAC,qBAA4C;IAChF,IAAI,CAAC,qBAAqB,CAAC,UAAU,EAAE,EAAE,CAAC;QACzC,OAAO,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,CAAA;IAC1C,CAAC;IACD,MAAM,cAAc,GAAG,qBAAqB,CAAC,iBAAiB,EAAE,CAAC,MAAM,CAAA;IACvE,IAAI,cAAc,KAAK,CAAC,EAAE,CAAC;QAC1B,OAAO,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAA;IAC7C,CAAC;SAAM,CAAC;QACP,OAAO,IAAI,CAAC,cAAc,CAAC,mBAAmB,EAAE,EAAE,UAAU,EAAE,cAAc,EAAE,CAAC,CAAA;IAChF,CAAC;AACF,CAAC;AAED,MAAM,UAAU,iBAAiB;IAChC,4FAA4F;IAC5F,OAAO,IAAI,yBAAyB,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;AAC7E,CAAC;AAED;;;GAGG;AACH,MAAM,UAAU,qBAAqB,CAAC,OAAe;IACpD,OAAO,QAAQ,CAAC,OAAO,EAAE,WAAW,CAAC,IAAI,OAAO,KAAK,sBAAsB,CAAA;AAC5E,CAAC;AAED;;GAEG;AACH,MAAM,UAAU,kBAAkB,CAAC,IAAU;IAC5C,MAAM,EAAE,YAAY,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAA;IAC5C,OAAO,CACN,YAAY;QACZ,KAAK,iCAAuB;QAC5B,yCAAyC,CAAC,IAAI,CAAC;QAC/C,CAAC,MAAM,CAAC,OAAO,KAAK,yBAAyB,IAAI,qBAAqB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CACvF,CAAA;AACF,CAAC;AAED;;;GAGG;AACH,MAAM,UAAU,mBAAmB,CAAC,IAAU;IAC7C,IAAI,CAAC,IAAI,CAAC,YAAY;QAAE,MAAM,IAAI,gBAAgB,CAAC,0BAA0B,CAAC,CAAA;IAC9E,IACC,IAAI,CAAC,oBAAoB,IAAI,oBAAoB,CAAC,kCAAkC;QACpF,IAAI,CAAC,oBAAoB,IAAI,oBAAoB,CAAC,+BAA+B;QACjF,IAAI,CAAC,oBAAoB,IAAI,oBAAoB,CAAC,gBAAgB,EACjE,CAAC;QACF,mCAAmB;IACpB,CAAC;SAAM,CAAC;QACP,+BAAiB;IAClB,CAAC;AACF,CAAC;AAED;;;GAGG;AACH,MAAM,UAAU,uBAAuB,CAAC,IAAU;IACjD,MAAM,gBAAgB,GAAG,mBAAmB,CAAC,IAAI,CAAC,CAAA;IAClD,OAAO,gBAAgB,gCAAiB,CAAC,CAAC,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,CAAC,SAAS,CAAC,YAAY,CAAA;AAC7F,CAAC;AAED,MAAM,UAAU,uBAAuB,CAAC,SAAqB;IAC5D,OAAO,CACN,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAE,CAAiB,CAAC,KAAK,CAAC,CAAC,IAAI,CACvF,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,KAAK,KAAK,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,eAAe,IAAI,CAAC,CAAC,eAAe,KAAK,SAAS,CAAC,CACnG,IAAI,SAAS,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC,MAAM,GAAG,CAAC,CACzD,CAAA;AACF,CAAC","sourcesContent":["import type { MailboxModel } from \"../../../common/mailFunctionality/MailboxModel.js\"\nimport { createMail, File as TutanotaFile, Mail, MailFolder } from \"../../../common/api/entities/tutanota/TypeRefs.js\"\nimport { LockedError, PreconditionFailedError } from \"../../../common/api/common/error/RestError\"\nimport { Dialog } from \"../../../common/gui/base/Dialog\"\nimport { locator } from \"../../../common/api/main/CommonLocator\"\nimport { AllIcons } from \"../../../common/gui/base/Icon\"\nimport { Icons } from \"../../../common/gui/base/icons/Icons\"\nimport { isApp, isDesktop } from \"../../../common/api/common/Env\"\nimport { assertNotNull, endsWith, neverNull, noOp, promiseMap } from \"@tutao/tutanota-utils\"\nimport {\n\tEncryptionAuthStatus,\n\tgetMailFolderType,\n\tMailReportType,\n\tMailSetKind,\n\tMailState,\n\tSYSTEM_GROUP_MAIL_ADDRESS,\n} from \"../../../common/api/common/TutanotaConstants\"\nimport { reportMailsAutomatically } from \"./MailReportDialog\"\nimport { DataFile } from \"../../../common/api/common/DataFile\"\nimport { lang, Translation, TranslationKey } from \"../../../common/misc/LanguageViewModel\"\nimport { FileController } from \"../../../common/file/FileController\"\nimport { DomRectReadOnlyPolyfilled, Dropdown, DropdownChildAttrs, PosRect } from \"../../../common/gui/base/Dropdown.js\"\nimport { modal } from \"../../../common/gui/base/Modal.js\"\nimport { ConversationViewModel } from \"./ConversationViewModel.js\"\nimport { size } from \"../../../common/gui/size.js\"\nimport { PinchZoom } from \"../../../common/gui/PinchZoom.js\"\nimport { InlineImageReference, InlineImages } from \"../../../common/mailFunctionality/inlineImagesUtils.js\"\nimport { MailModel } from \"../model/MailModel.js\"\nimport { hasValidEncryptionAuthForTeamOrSystemMail } from \"../../../common/mailFunctionality/SharedMailUtils.js\"\nimport { mailLocator } from \"../../mailLocator.js\"\nimport { assertSystemFolderOfType, FolderInfo, getFolderName, getIndentedFolderNameForDropdown, getMoveTargetFolderSystems } from \"../model/MailUtils.js\"\nimport { FontIcons } from \"../../../common/gui/base/icons/FontIcons.js\"\nimport { ProgrammingError } from \"../../../common/api/common/error/ProgrammingError.js\"\nimport { isOfTypeOrSubfolderOf, isSpamOrTrashFolder } from \"../model/MailChecks.js\"\nimport type { FolderSystem, IndentedFolder } from \"../../../common/api/common/mail/FolderSystem.js\"\n\nexport async function showDeleteConfirmationDialog(mails: ReadonlyArray<Mail>): Promise<boolean> {\n\tlet trashMails: Mail[] = []\n\tlet moveMails: Mail[] = []\n\tfor (let mail of mails) {\n\t\tconst folder = mailLocator.mailModel.getMailFolderForMail(mail)\n\t\tconst folders = await mailLocator.mailModel.getMailboxFoldersForMail(mail)\n\t\tif (folders == null) {\n\t\t\tcontinue\n\t\t}\n\t\tconst isFinalDelete = folder && isSpamOrTrashFolder(folders, folder)\n\t\tif (isFinalDelete) {\n\t\t\ttrashMails.push(mail)\n\t\t} else {\n\t\t\tmoveMails.push(mail)\n\t\t}\n\t}\n\n\tlet confirmationTextId: TranslationKey | null = null\n\n\tif (trashMails.length > 0) {\n\t\tif (moveMails.length > 0) {\n\t\t\tconfirmationTextId = \"finallyDeleteSelectedEmails_msg\"\n\t\t} else {\n\t\t\tconfirmationTextId = \"finallyDeleteEmails_msg\"\n\t\t}\n\t}\n\n\tif (confirmationTextId != null) {\n\t\treturn Dialog.confirm(confirmationTextId, \"ok_action\")\n\t} else {\n\t\treturn Promise.resolve(true)\n\t}\n}\n\n/**\n * @return whether emails were deleted\n */\nexport function promptAndDeleteMails(mailModel: MailModel, mails: ReadonlyArray<Mail>, onConfirm: () => void): Promise<boolean> {\n\treturn showDeleteConfirmationDialog(mails).then((confirmed) => {\n\t\tif (confirmed) {\n\t\t\tonConfirm()\n\t\t\treturn mailModel\n\t\t\t\t.deleteMails(mails)\n\t\t\t\t.then(() => true)\n\t\t\t\t.catch((e) => {\n\t\t\t\t\t//LockedError should no longer be thrown!?!\n\t\t\t\t\tif (e instanceof PreconditionFailedError || e instanceof LockedError) {\n\t\t\t\t\t\treturn Dialog.message(\"operationStillActive_msg\").then(() => false)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow e\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t} else {\n\t\t\treturn Promise.resolve(false)\n\t\t}\n\t})\n}\n\ninterface MoveMailsParams {\n\tmailboxModel: MailboxModel\n\tmailModel: MailModel\n\tmails: ReadonlyArray<Mail>\n\ttargetMailFolder: MailFolder\n\tisReportable?: boolean\n}\n\n/**\n * Moves the mails and reports them as spam if the user or settings allow it.\n * @return whether mails were actually moved\n */\nexport async function moveMails({ mailboxModel, mailModel, mails, targetMailFolder, isReportable = true }: MoveMailsParams): Promise<boolean> {\n\tconst details = await mailModel.getMailboxDetailsForMailFolder(targetMailFolder)\n\tif (details == null || details.mailbox.folders == null) {\n\t\treturn false\n\t}\n\tconst system = await mailModel.getMailboxFoldersForId(details.mailbox.folders._id)\n\treturn mailModel\n\t\t.moveMails(mails, targetMailFolder)\n\t\t.then(async () => {\n\t\t\tif (isOfTypeOrSubfolderOf(system, targetMailFolder, MailSetKind.SPAM) && isReportable) {\n\t\t\t\tconst reportableMails = mails.map((mail) => {\n\t\t\t\t\t// mails have just been moved\n\t\t\t\t\tconst reportableMail = createMail(mail)\n\t\t\t\t\treportableMail._id = mail._id\n\t\t\t\t\treturn reportableMail\n\t\t\t\t})\n\t\t\t\tconst mailboxDetails = await mailboxModel.getMailboxDetailsForMailGroup(assertNotNull(targetMailFolder._ownerGroup))\n\t\t\t\tawait reportMailsAutomatically(MailReportType.SPAM, mailboxModel, mailModel, mailboxDetails, reportableMails)\n\t\t\t}\n\n\t\t\treturn true\n\t\t})\n\t\t.catch((e) => {\n\t\t\t//LockedError should no longer be thrown!?!\n\t\t\tif (e instanceof LockedError || e instanceof PreconditionFailedError) {\n\t\t\t\treturn Dialog.message(\"operationStillActive_msg\").then(() => false)\n\t\t\t} else {\n\t\t\t\tthrow e\n\t\t\t}\n\t\t})\n}\n\nexport function archiveMails(mails: Mail[]): Promise<void> {\n\tif (mails.length > 0) {\n\t\t// assume all mails in the array belong to the same Mailbox\n\t\treturn mailLocator.mailModel.getMailboxFoldersForMail(mails[0]).then((folders: FolderSystem) => {\n\t\t\tif (folders) {\n\t\t\t\tmoveMails({\n\t\t\t\t\tmailboxModel: locator.mailboxModel,\n\t\t\t\t\tmailModel: mailLocator.mailModel,\n\t\t\t\t\tmails: mails,\n\t\t\t\t\ttargetMailFolder: assertSystemFolderOfType(folders, MailSetKind.ARCHIVE),\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t} else {\n\t\treturn Promise.resolve()\n\t}\n}\n\nexport function moveToInbox(mails: Mail[]): Promise<any> {\n\tif (mails.length > 0) {\n\t\t// assume all mails in the array belong to the same Mailbox\n\t\treturn mailLocator.mailModel.getMailboxFoldersForMail(mails[0]).then((folders: FolderSystem) => {\n\t\t\tif (folders) {\n\t\t\t\tmoveMails({\n\t\t\t\t\tmailboxModel: locator.mailboxModel,\n\t\t\t\t\tmailModel: mailLocator.mailModel,\n\t\t\t\t\tmails: mails,\n\t\t\t\t\ttargetMailFolder: assertSystemFolderOfType(folders, MailSetKind.INBOX),\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t} else {\n\t\treturn Promise.resolve()\n\t}\n}\n\nexport function getFolderIconByType(folderType: MailSetKind): AllIcons {\n\tswitch (folderType) {\n\t\tcase MailSetKind.CUSTOM:\n\t\t\treturn Icons.Folder\n\n\t\tcase MailSetKind.INBOX:\n\t\t\treturn Icons.Inbox\n\n\t\tcase MailSetKind.SENT:\n\t\t\treturn Icons.Send\n\n\t\tcase MailSetKind.TRASH:\n\t\t\treturn Icons.TrashBin\n\n\t\tcase MailSetKind.ARCHIVE:\n\t\t\treturn Icons.Archive\n\n\t\tcase MailSetKind.SPAM:\n\t\t\treturn Icons.Spam\n\n\t\tcase MailSetKind.DRAFT:\n\t\t\treturn Icons.Draft\n\n\t\tdefault:\n\t\t\treturn Icons.Folder\n\t}\n}\n\nexport function getFolderIcon(folder: MailFolder): AllIcons {\n\treturn getFolderIconByType(getMailFolderType(folder))\n}\n\nexport function getMailFolderIcon(mail: Mail): AllIcons {\n\tlet folder = mailLocator.mailModel.getMailFolderForMail(mail)\n\n\tif (folder) {\n\t\treturn getFolderIcon(folder)\n\t} else {\n\t\treturn Icons.Folder\n\t}\n}\n\nexport function replaceCidsWithInlineImages(\n\tdom: HTMLElement,\n\tinlineImages: InlineImages,\n\tonContext: (cid: string, arg1: MouseEvent | TouchEvent, arg2: HTMLElement) => unknown,\n): Array<HTMLElement> {\n\t// all image tags which have cid attribute. The cid attribute has been set by the sanitizer for adding a default image.\n\tconst imageElements: Array<HTMLElement> = Array.from(dom.querySelectorAll(\"img[cid]\"))\n\tif (dom.shadowRoot) {\n\t\tconst shadowImageElements: Array<HTMLElement> = Array.from(dom.shadowRoot.querySelectorAll(\"img[cid]\"))\n\t\timageElements.push(...shadowImageElements)\n\t}\n\tconst elementsWithCid: HTMLElement[] = []\n\tfor (const imageElement of imageElements) {\n\t\tconst cid = imageElement.getAttribute(\"cid\")\n\n\t\tif (cid) {\n\t\t\tconst inlineImage = inlineImages.get(cid)\n\n\t\t\tif (inlineImage) {\n\t\t\t\telementsWithCid.push(imageElement)\n\t\t\t\timageElement.setAttribute(\"src\", inlineImage.objectUrl)\n\t\t\t\timageElement.classList.remove(\"tutanota-placeholder\")\n\n\t\t\t\tif (isApp()) {\n\t\t\t\t\t// Add long press action for apps\n\t\t\t\t\tlet timeoutId: TimeoutID | null\n\t\t\t\t\tlet startCoords:\n\t\t\t\t\t\t| {\n\t\t\t\t\t\t\t\tx: number\n\t\t\t\t\t\t\t\ty: number\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t| null\n\t\t\t\t\t\t| undefined\n\t\t\t\t\timageElement.addEventListener(\"touchstart\", (e: TouchEvent) => {\n\t\t\t\t\t\tconst touch = e.touches[0]\n\t\t\t\t\t\tif (!touch) return\n\t\t\t\t\t\tstartCoords = {\n\t\t\t\t\t\t\tx: touch.clientX,\n\t\t\t\t\t\t\ty: touch.clientY,\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (timeoutId) clearTimeout(timeoutId)\n\t\t\t\t\t\ttimeoutId = setTimeout(() => {\n\t\t\t\t\t\t\tonContext(inlineImage.cid, e, imageElement)\n\t\t\t\t\t\t}, 800)\n\t\t\t\t\t})\n\t\t\t\t\timageElement.addEventListener(\"touchmove\", (e: TouchEvent) => {\n\t\t\t\t\t\tconst touch = e.touches[0]\n\t\t\t\t\t\tif (!touch || !startCoords || !timeoutId) return\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tMath.abs(touch.clientX - startCoords.x) > PinchZoom.DRAG_THRESHOLD ||\n\t\t\t\t\t\t\tMath.abs(touch.clientY - startCoords.y) > PinchZoom.DRAG_THRESHOLD\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tclearTimeout(timeoutId)\n\t\t\t\t\t\t\ttimeoutId = null\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\timageElement.addEventListener(\"touchend\", () => {\n\t\t\t\t\t\tif (timeoutId) {\n\t\t\t\t\t\t\tclearTimeout(timeoutId)\n\t\t\t\t\t\t\ttimeoutId = null\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tif (isDesktop()) {\n\t\t\t\t\t// add right click action for desktop apps\n\t\t\t\t\timageElement.addEventListener(\"contextmenu\", (e: MouseEvent) => {\n\t\t\t\t\t\tonContext(inlineImage.cid, e, imageElement)\n\t\t\t\t\t\te.preventDefault()\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn elementsWithCid\n}\n\nexport function replaceInlineImagesWithCids(dom: HTMLElement): HTMLElement {\n\tconst domClone = dom.cloneNode(true) as HTMLElement\n\tconst inlineImages: Array<HTMLElement> = Array.from(domClone.querySelectorAll(\"img[cid]\"))\n\tfor (const inlineImage of inlineImages) {\n\t\tconst cid = inlineImage.getAttribute(\"cid\")\n\t\tinlineImage.setAttribute(\"src\", \"cid:\" + (cid || \"\"))\n\t\tinlineImage.removeAttribute(\"cid\")\n\t}\n\treturn domClone\n}\n\nexport function createInlineImage(file: DataFile): InlineImageReference {\n\tconst cid = Math.random().toString(30).substring(2)\n\tfile.cid = cid\n\treturn createInlineImageReference(file, cid)\n}\n\nfunction createInlineImageReference(file: DataFile, cid: string): InlineImageReference {\n\tconst blob = new Blob([file.data], {\n\t\ttype: file.mimeType,\n\t})\n\tconst objectUrl = URL.createObjectURL(blob)\n\treturn {\n\t\tcid,\n\t\tobjectUrl,\n\t\tblob,\n\t}\n}\n\nexport async function loadInlineImages(fileController: FileController, attachments: Array<TutanotaFile>, referencedCids: Array<string>): Promise<InlineImages> {\n\tconst filesToLoad = getReferencedAttachments(attachments, referencedCids)\n\tconst inlineImages = new Map()\n\treturn promiseMap(filesToLoad, async (file) => {\n\t\tlet dataFile = await fileController.getAsDataFile(file)\n\t\tconst { htmlSanitizer } = await import(\"../../../common/misc/HtmlSanitizer\")\n\t\tdataFile = htmlSanitizer.sanitizeInlineAttachment(dataFile)\n\t\tconst inlineImageReference = createInlineImageReference(dataFile, neverNull(file.cid))\n\t\tinlineImages.set(inlineImageReference.cid, inlineImageReference)\n\t}).then(() => inlineImages)\n}\n\nexport function getReferencedAttachments(attachments: Array<TutanotaFile>, referencedCids: Array<string>): Array<TutanotaFile> {\n\treturn attachments.filter((file) => referencedCids.find((rcid) => file.cid === rcid))\n}\n\nexport async function showMoveMailsDropdown(\n\tmailboxModel: MailboxModel,\n\tmodel: MailModel,\n\torigin: PosRect,\n\tmails: readonly Mail[],\n\topts?: { width?: number; withBackground?: boolean; onSelected?: () => unknown },\n): Promise<void> {\n\tconst folders = await getMoveTargetFolderSystems(model, mails)\n\tawait showMailFolderDropdown(\n\t\torigin,\n\t\tfolders,\n\t\t(f) =>\n\t\t\tmoveMails({\n\t\t\t\tmailboxModel,\n\t\t\t\tmailModel: model,\n\t\t\t\tmails: mails,\n\t\t\t\ttargetMailFolder: f.folder,\n\t\t\t}),\n\t\topts,\n\t)\n}\n\nexport async function showMailFolderDropdown(\n\torigin: PosRect,\n\tfolders: readonly FolderInfo[],\n\tonClick: (folder: IndentedFolder) => unknown,\n\topts?: { width?: number; withBackground?: boolean; onSelected?: () => unknown },\n): Promise<void> {\n\tconst { width = 300, withBackground = false, onSelected = noOp } = opts ?? {}\n\n\tif (folders.length === 0) return\n\tconst folderButtons = folders.map(\n\t\t(f) =>\n\t\t\t({\n\t\t\t\t// We need to pass in the raw folder name to avoid including it in searches\n\t\t\t\tlabel: lang.makeTranslation(\n\t\t\t\t\t`dropdown-folder:${getFolderName(f.folder)}`,\n\t\t\t\t\tlang.get(\"folderDepth_label\", {\n\t\t\t\t\t\t\"{folderName}\": getFolderName(f.folder),\n\t\t\t\t\t\t\"{depth}\": f.level,\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t\ttext: lang.makeTranslation(\"folder_name\", getIndentedFolderNameForDropdown(f)),\n\t\t\t\tclick: () => {\n\t\t\t\t\tonSelected()\n\t\t\t\t\tonClick(f)\n\t\t\t\t},\n\t\t\t\ticon: getFolderIcon(f.folder),\n\t\t\t} satisfies DropdownChildAttrs),\n\t)\n\n\tconst dropdown = new Dropdown(() => folderButtons, width)\n\tdropdown.setOrigin(new DomRectReadOnlyPolyfilled(origin.left, origin.top, origin.width, origin.height))\n\tmodal.displayUnique(dropdown, withBackground)\n}\n\nexport function getConversationTitle(conversationViewModel: ConversationViewModel): Translation {\n\tif (!conversationViewModel.isFinished()) {\n\t\treturn lang.getTranslation(\"loading_msg\")\n\t}\n\tconst numberOfEmails = conversationViewModel.conversationItems().length\n\tif (numberOfEmails === 1) {\n\t\treturn lang.getTranslation(\"oneEmail_label\")\n\t} else {\n\t\treturn lang.getTranslation(\"nbrOrEmails_label\", { \"{number}\": numberOfEmails })\n\t}\n}\n\nexport function getMoveMailBounds(): PosRect {\n\t// just putting the move mail dropdown in the left side of the viewport with a bit of margin\n\treturn new DomRectReadOnlyPolyfilled(size.hpad_large, size.vpad_large, 0, 0)\n}\n\n/**\n * NOTE: DOES NOT VERIFY IF THE MESSAGE IS AUTHENTIC - DO NOT USE THIS OUTSIDE OF THIS FILE OR FOR TESTING\n * @VisibleForTesting\n */\nexport function isTutanotaTeamAddress(address: string): boolean {\n\treturn endsWith(address, \"@tutao.de\") || address === \"no-reply@tutanota.de\"\n}\n\n/**\n * Is this a tutao team member email or a system notification\n */\nexport function isTutanotaTeamMail(mail: Mail): boolean {\n\tconst { confidential, sender, state } = mail\n\treturn (\n\t\tconfidential &&\n\t\tstate === MailState.RECEIVED &&\n\t\thasValidEncryptionAuthForTeamOrSystemMail(mail) &&\n\t\t(sender.address === SYSTEM_GROUP_MAIL_ADDRESS || isTutanotaTeamAddress(sender.address))\n\t)\n}\n\n/**\n * Returns the confidential icon for the given mail which indicates either RSA or PQ encryption.\n * The caller must ensure that the mail is in a confidential state.\n */\nexport function getConfidentialIcon(mail: Mail): Icons {\n\tif (!mail.confidential) throw new ProgrammingError(\"mail is not confidential\")\n\tif (\n\t\tmail.encryptionAuthStatus == EncryptionAuthStatus.TUTACRYPT_AUTHENTICATION_SUCCEEDED ||\n\t\tmail.encryptionAuthStatus == EncryptionAuthStatus.TUTACRYPT_AUTHENTICATION_FAILED ||\n\t\tmail.encryptionAuthStatus == EncryptionAuthStatus.TUTACRYPT_SENDER\n\t) {\n\t\treturn Icons.PQLock\n\t} else {\n\t\treturn Icons.Lock\n\t}\n}\n\n/**\n * Returns the confidential font icon for the given mail which indicates either RSA or PQ encryption.\n * The caller must ensure that the mail is in a confidential state.\n */\nexport function getConfidentialFontIcon(mail: Mail): string {\n\tconst confidentialIcon = getConfidentialIcon(mail)\n\treturn confidentialIcon === Icons.PQLock ? FontIcons.PQConfidential : FontIcons.Confidential\n}\n\nexport function isMailContrastFixNeeded(editorDom: ParentNode): boolean {\n\treturn (\n\t\tArray.from(editorDom.querySelectorAll(\"*[style]\"), (e) => (e as HTMLElement).style).some(\n\t\t\t(s) => (s.color && s.color !== \"inherit\") || (s.backgroundColor && s.backgroundColor !== \"inherit\"),\n\t\t) || editorDom.querySelectorAll(\"font[color]\").length > 0\n\t)\n}\n"]}