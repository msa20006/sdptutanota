{"version":3,"file":"TemplateListView.js","sourceRoot":"","sources":["../../../../src/mail-app/settings/TemplateListView.ts"],"names":[],"mappings":"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","sourcesContent":["import m, { Children } from \"mithril\"\n\nimport { showTemplateEditor } from \"./TemplateEditor\"\nimport type { EmailTemplate } from \"../../common/api/entities/tutanota/TypeRefs.js\"\nimport { EmailTemplateTypeRef } from \"../../common/api/entities/tutanota/TypeRefs.js\"\nimport { EntityClient } from \"../../common/api/common/EntityClient\"\nimport { isSameId } from \"../../common/api/common/utils/EntityUtils\"\nimport { searchInTemplates, TEMPLATE_SHORTCUT_PREFIX } from \"../templates/model/TemplatePopupModel\"\nimport { hasCapabilityOnGroup } from \"../../common/sharing/GroupUtils\"\nimport { ShareCapability } from \"../../common/api/common/TutanotaConstants\"\nimport type { TemplateGroupInstance } from \"../templates/model/TemplateGroupModel\"\nimport type { LoginController } from \"../../common/api/main/LoginController\"\nimport { ListColumnWrapper } from \"../../common/gui/ListColumnWrapper\"\nimport { memoized, noOp } from \"@tutao/tutanota-utils\"\nimport { assertMainOrNode } from \"../../common/api/common/Env\"\nimport { SelectableRowContainer, SelectableRowSelectedSetter } from \"../../common/gui/SelectableRowContainer.js\"\nimport { ListElementListModel } from \"../../common/misc/ListElementListModel.js\"\nimport Stream from \"mithril/stream\"\nimport ColumnEmptyMessageBox from \"../../common/gui/base/ColumnEmptyMessageBox.js\"\nimport { theme } from \"../../common/gui/theme.js\"\nimport { Icons } from \"../../common/gui/base/icons/Icons.js\"\nimport { List, ListAttrs, MultiselectMode, RenderConfig } from \"../../common/gui/base/List.js\"\nimport { size } from \"../../common/gui/size.js\"\nimport { TemplateDetailsViewer } from \"./TemplateDetailsViewer.js\"\nimport { listSelectionKeyboardShortcuts, onlySingleSelection, VirtualRow } from \"../../common/gui/base/ListUtils.js\"\nimport { IconButton } from \"../../common/gui/base/IconButton.js\"\nimport { BaseSearchBar, BaseSearchBarAttrs } from \"../../common/gui/base/BaseSearchBar.js\"\nimport { lang } from \"../../common/misc/LanguageViewModel.js\"\nimport { keyManager } from \"../../common/misc/KeyManager.js\"\nimport { EntityUpdateData, isUpdateForTypeRef } from \"../../common/api/common/utils/EntityUpdateUtils.js\"\nimport { ListAutoSelectBehavior } from \"../../common/misc/DeviceConfig.js\"\nimport { UpdatableSettingsViewer } from \"../../common/settings/Interfaces.js\"\n\nassertMainOrNode()\n\n/**\n *  List that is rendered within the template Settings\n */\nexport class TemplateListView implements UpdatableSettingsViewer {\n\tprivate searchQuery: string = \"\"\n\tprivate resultItemIds: ReadonlyArray<IdTuple> = []\n\n\tprivate listModel: ListElementListModel<EmailTemplate>\n\tprivate listStateSubscription: Stream<unknown> | null = null\n\tprivate readonly renderConfig: RenderConfig<EmailTemplate, TemplateRow> = {\n\t\titemHeight: size.list_row_height,\n\t\tmultiselectionAllowed: MultiselectMode.Disabled,\n\t\tswipe: null,\n\t\tcreateElement: (dom) => {\n\t\t\tconst templateRow = new TemplateRow()\n\t\t\tm.render(dom, templateRow.render())\n\t\t\treturn templateRow\n\t\t},\n\t}\n\tprivate readonly shortcuts = listSelectionKeyboardShortcuts(MultiselectMode.Disabled, () => this.listModel)\n\n\tconstructor(\n\t\tprivate readonly groupInstance: TemplateGroupInstance,\n\t\tprivate readonly entityClient: EntityClient,\n\t\tprivate readonly logins: LoginController,\n\t\tprivate readonly updateDetailsViewer: (viewer: TemplateDetailsViewer | null) => unknown,\n\t\tprivate readonly focusDetailsViewer: () => unknown,\n\t) {\n\t\tthis.listModel = this.makeListModel()\n\n\t\tthis.listModel.loadInitial()\n\n\t\t// hacks for old components\n\t\tthis.view = this.view.bind(this)\n\t\tthis.oncreate = this.oncreate.bind(this)\n\t\tthis.onremove = this.onremove.bind(this)\n\t}\n\n\toncreate() {\n\t\tkeyManager.registerShortcuts(this.shortcuts)\n\t}\n\n\tonremove() {\n\t\tkeyManager.unregisterShortcuts(this.shortcuts)\n\t}\n\n\tprivate makeListModel() {\n\t\tconst listModel = new ListElementListModel<EmailTemplate>({\n\t\t\tsortCompare: (a: EmailTemplate, b: EmailTemplate) => {\n\t\t\t\tconst titleA = a.title.toUpperCase()\n\t\t\t\tconst titleB = b.title.toUpperCase()\n\t\t\t\treturn titleA < titleB ? -1 : titleA > titleB ? 1 : 0\n\t\t\t},\n\t\t\tfetch: async (_lastFetchedEntity, _count) => {\n\t\t\t\t// load all entries at once to apply custom sort order\n\t\t\t\tconst allEntries = await this.entityClient.loadAll(EmailTemplateTypeRef, this.templateListId())\n\t\t\t\treturn { items: allEntries, complete: true }\n\t\t\t},\n\t\t\tloadSingle: (_listId: Id, elementId: Id) => {\n\t\t\t\treturn this.entityClient.load<EmailTemplate>(EmailTemplateTypeRef, [this.templateListId(), elementId])\n\t\t\t},\n\t\t\tautoSelectBehavior: () => ListAutoSelectBehavior.OLDER,\n\t\t})\n\n\t\tlistModel.setFilter((item: EmailTemplate) => this.queryFilter(item))\n\n\t\tthis.listStateSubscription?.end(true)\n\t\tthis.listStateSubscription = listModel.stateStream.map((state) => {\n\t\t\tthis.onSelectionChanged(onlySingleSelection(state))\n\t\t\tm.redraw()\n\t\t})\n\n\t\treturn listModel\n\t}\n\n\tview(): Children {\n\t\treturn m(\n\t\t\tListColumnWrapper,\n\t\t\t{\n\t\t\t\theaderContent: m(\n\t\t\t\t\t\".flex.flex-space-between.center-vertically.plr-l\",\n\t\t\t\t\tm(BaseSearchBar, {\n\t\t\t\t\t\ttext: this.searchQuery,\n\t\t\t\t\t\tonInput: (text) => this.updateQuery(text),\n\t\t\t\t\t\tbusy: false,\n\t\t\t\t\t\tonKeyDown: (e) => e.stopPropagation(),\n\t\t\t\t\t\tonClear: () => {\n\t\t\t\t\t\t\tthis.searchQuery = \"\"\n\t\t\t\t\t\t\tthis.resultItemIds = []\n\t\t\t\t\t\t\tthis.listModel.reapplyFilter()\n\t\t\t\t\t\t},\n\t\t\t\t\t\tplaceholder: lang.get(\"searchTemplates_placeholder\"),\n\t\t\t\t\t} satisfies BaseSearchBarAttrs),\n\t\t\t\t\tthis.userCanEdit()\n\t\t\t\t\t\t? m(\n\t\t\t\t\t\t\t\t\".mr-negative-s\",\n\t\t\t\t\t\t\t\tm(IconButton, {\n\t\t\t\t\t\t\t\t\ttitle: \"addTemplate_label\",\n\t\t\t\t\t\t\t\t\ticon: Icons.Add,\n\t\t\t\t\t\t\t\t\tclick: () => {\n\t\t\t\t\t\t\t\t\t\tshowTemplateEditor(null, this.groupInstance.groupRoot)\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t  )\n\t\t\t\t\t\t: null,\n\t\t\t\t),\n\t\t\t},\n\t\t\tthis.listModel.isEmptyAndDone()\n\t\t\t\t? m(ColumnEmptyMessageBox, {\n\t\t\t\t\t\tcolor: theme.list_message_bg,\n\t\t\t\t\t\ticon: Icons.ListAlt,\n\t\t\t\t\t\tmessage: \"noEntries_msg\",\n\t\t\t\t  })\n\t\t\t\t: m(List, {\n\t\t\t\t\t\trenderConfig: this.renderConfig,\n\t\t\t\t\t\tstate: this.listModel.state,\n\t\t\t\t\t\tonLoadMore: () => this.listModel.loadMore(),\n\t\t\t\t\t\tonRetryLoading: () => this.listModel.retryLoading(),\n\t\t\t\t\t\tonStopLoading: () => this.listModel.stopLoading(),\n\t\t\t\t\t\tonSingleSelection: (item: EmailTemplate) => {\n\t\t\t\t\t\t\tthis.listModel.onSingleSelection(item)\n\t\t\t\t\t\t\tthis.focusDetailsViewer()\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonSingleTogglingMultiselection: noOp,\n\t\t\t\t\t\tonRangeSelectionTowards: noOp,\n\t\t\t\t  } satisfies ListAttrs<EmailTemplate, TemplateRow>),\n\t\t)\n\t}\n\n\tasync entityEventsReceived(updates: ReadonlyArray<EntityUpdateData>): Promise<void> {\n\t\tfor (const update of updates) {\n\t\t\tconst { instanceListId, instanceId, operation } = update\n\t\t\tif (isUpdateForTypeRef(EmailTemplateTypeRef, update) && isSameId(this.templateListId(), instanceListId)) {\n\t\t\t\tawait this.listModel.entityEventReceived(instanceListId, instanceId, operation)\n\t\t\t}\n\t\t}\n\t\t// we need to make another search in case items have changed\n\t\tthis.updateQuery(this.searchQuery)\n\t\tm.redraw()\n\t}\n\n\tprivate readonly onSelectionChanged = memoized((item: EmailTemplate | null) => {\n\t\tconst detailsViewer = item == null ? null : new TemplateDetailsViewer(item, this.entityClient, () => !this.userCanEdit())\n\t\tthis.updateDetailsViewer(detailsViewer)\n\t})\n\n\tprivate queryFilter(item: EmailTemplate) {\n\t\treturn this.searchQuery === \"\" ? true : this.resultItemIds.includes(item._id)\n\t}\n\n\tprivate updateQuery(query: string) {\n\t\tthis.searchQuery = query\n\t\tthis.resultItemIds = searchInTemplates(this.searchQuery, this.listModel.getUnfilteredAsArray()).map((item) => item._id)\n\t\tthis.listModel.reapplyFilter()\n\t}\n\n\tuserCanEdit(): boolean {\n\t\treturn hasCapabilityOnGroup(this.logins.getUserController().user, this.groupInstance.group, ShareCapability.Write)\n\t}\n\n\ttemplateListId(): Id {\n\t\treturn this.groupInstance.groupRoot.templates\n\t}\n}\n\nexport class TemplateRow implements VirtualRow<EmailTemplate> {\n\ttop: number = 0\n\tdomElement: HTMLElement | null = null // set from List\n\n\tentity: EmailTemplate | null = null\n\tprivate selectionUpdater!: SelectableRowSelectedSetter\n\tprivate titleDom!: HTMLElement\n\tprivate idDom!: HTMLElement\n\n\tconstructor() {}\n\n\tupdate(template: EmailTemplate, selected: boolean): void {\n\t\tthis.entity = template\n\n\t\tthis.selectionUpdater(selected, false)\n\n\t\tthis.titleDom.textContent = template.title\n\t\tthis.idDom.textContent = TEMPLATE_SHORTCUT_PREFIX + template.tag\n\t}\n\n\trender(): Children {\n\t\treturn m(\n\t\t\tSelectableRowContainer,\n\t\t\t{\n\t\t\t\tonSelectedChangeRef: (updater) => (this.selectionUpdater = updater),\n\t\t\t},\n\t\t\tm(\".flex.col\", [\n\t\t\t\tm(\"\", [\n\t\t\t\t\tm(\".text-ellipsis.badge-line-height\", {\n\t\t\t\t\t\toncreate: (vnode) => (this.titleDom = vnode.dom as HTMLElement),\n\t\t\t\t\t}),\n\t\t\t\t]),\n\t\t\t\tm(\".smaller.mt-xxs\", {\n\t\t\t\t\toncreate: (vnode) => (this.idDom = vnode.dom as HTMLElement),\n\t\t\t\t}),\n\t\t\t]),\n\t\t)\n\t}\n}\n"]}