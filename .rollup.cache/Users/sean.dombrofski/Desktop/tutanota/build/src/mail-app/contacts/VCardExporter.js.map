{"version":3,"file":"VCardExporter.js","sourceRoot":"","sources":["../../../../src/mail-app/contacts/VCardExporter.ts"],"names":[],"mappings":"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","sourcesContent":["import { convertToDataFile } from \"../../common/api/common/DataFile\"\nimport type { Contact, ContactAddress, ContactMailAddress, ContactPhoneNumber, ContactSocialId } from \"../../common/api/entities/tutanota/TypeRefs.js\"\nimport { createFile } from \"../../common/api/entities/tutanota/TypeRefs.js\"\nimport { stringToUtf8Uint8Array } from \"@tutao/tutanota-utils\"\nimport { ContactAddressType, ContactPhoneNumberType } from \"../../common/api/common/TutanotaConstants\"\nimport { assertMainOrNode } from \"../../common/api/common/Env\"\nimport { locator } from \"../../common/api/main/CommonLocator\"\nimport { getSocialUrl, getWebsiteUrl } from \"../../common/contactsFunctionality/ContactUtils.js\"\n\nassertMainOrNode()\n\nexport function exportContacts(contacts: Contact[]): Promise<void> {\n\tlet vCardFile = contactsToVCard(contacts)\n\tlet data = stringToUtf8Uint8Array(vCardFile)\n\tlet tmpFile = createFile({\n\t\tname: \"vCard3.0.vcf\",\n\t\tmimeType: \"vCard/rfc2426\",\n\t\tsize: String(data.byteLength),\n\t\tblobs: [],\n\t\tcid: null,\n\t\tparent: null,\n\t\tsubFiles: null,\n\t})\n\treturn locator.fileController.saveDataFile(convertToDataFile(tmpFile, data))\n}\n\n/**\n * Converts an array of contacts to a vCard 3.0 compatible string.\n *\n * @param contacts\n * @returns vCard 3.0 compatible string which is the vCard of each all contacts concatanted.\n */\nexport function contactsToVCard(contacts: Contact[]): string {\n\tlet vCardFile = \"\"\n\tfor (const contact of contacts) {\n\t\tvCardFile += _contactToVCard(contact)\n\t}\n\treturn vCardFile\n}\n\n/**\n * Export for testing\n */\nexport function _contactToVCard(contact: Contact): string {\n\tlet contactToVCardString = \"BEGIN:VCARD\\nVERSION:3.0\\n\" //must be invcluded in vCard3.0\n\n\t//FN tag must be included in vCard3.0\n\tlet fnString = \"FN:\"\n\tfnString += contact.title ? _getVCardEscaped(contact.title) + \" \" : \"\"\n\tfnString += contact.firstName ? _getVCardEscaped(contact.firstName) + \" \" : \"\"\n\tfnString += contact.middleName ? _getVCardEscaped(contact.middleName) + \" \" : \"\"\n\tfnString += contact.lastName ? _getVCardEscaped(contact.lastName) : \"\"\n\tfnString += contact.nameSuffix ? \", \" + _getVCardEscaped(contact.nameSuffix) : \"\"\n\tcontactToVCardString += _getFoldedString(fnString.trim()) + \"\\n\"\n\t//N tag must be included in vCard3.0\n\tlet nString = \"N:\"\n\tnString += contact.lastName ? _getVCardEscaped(contact.lastName) + \";\" : \";\"\n\tnString += contact.firstName ? _getVCardEscaped(contact.firstName) + \";\" : \";\"\n\tnString += contact.middleName ? _getVCardEscaped(contact.middleName) + \";\" : \";\"\n\tnString += contact.title ? _getVCardEscaped(contact.title) + \";\" : \";\"\n\tnString += contact.nameSuffix ? _getVCardEscaped(contact.nameSuffix) + \"\" : \"\"\n\tcontactToVCardString += _getFoldedString(nString) + \"\\n\"\n\tcontactToVCardString += contact.nickname ? _getFoldedString(\"NICKNAME:\" + _getVCardEscaped(contact.nickname)) + \"\\n\" : \"\"\n\n\t//adds oldBirthday converted into a string if present else if available new birthday format is added to contactToVCardString\n\tif (contact.birthdayIso) {\n\t\tconst bday = contact.birthdayIso\n\t\t// we use 1111 as marker if no year has been defined as vcard 3.0 does not support dates without year\n\t\t// vcard 4.0 supports iso date without year\n\t\tconst bdayExported = bday.startsWith(\"--\") ? bday.replace(\"--\", \"1111-\") : bday\n\t\tcontactToVCardString += \"BDAY:\" + bdayExported + \"\\n\"\n\t}\n\n\tcontactToVCardString += _vCardFormatArrayToString(_addressesToVCardAddresses(contact.addresses), \"ADR\")\n\tcontactToVCardString += _vCardFormatArrayToString(_addressesToVCardAddresses(contact.mailAddresses), \"EMAIL\")\n\tcontactToVCardString += _vCardFormatArrayToString(_phoneNumbersToVCardPhoneNumbers(contact.phoneNumbers), \"TEL\")\n\tcontactToVCardString += _vCardFormatArrayToString(_socialIdsToVCardSocialUrls(contact.socialIds), \"URL\")\n\tcontactToVCardString += contact.role != \"\" ? _getFoldedString(\"TITLE:\" + _getVCardEscaped(contact.role)) + \"\\n\" : \"\"\n\n\tcontact.websites.map((website) => {\n\t\tcontactToVCardString += _getFoldedString(\"URL:\" + getWebsiteUrl(website.url) + \"\\n\")\n\t})\n\n\tconst company = contact.company ? _getFoldedString(\"ORG:\" + _getVCardEscaped(contact.company)) : \"\"\n\tif (contact.department) {\n\t\tcontactToVCardString += company + \";\" + _getVCardEscaped(contact.department) + \"\\n\"\n\t} else {\n\t\tcontactToVCardString += contact.company ? _getFoldedString(\"ORG:\" + _getVCardEscaped(contact.company)) + \"\\n\" : \"\"\n\t}\n\n\tcontactToVCardString += contact.comment ? _getFoldedString(\"NOTE:\" + _getVCardEscaped(contact.comment)) + \"\\n\" : \"\"\n\tcontactToVCardString += \"END:VCARD\\n\\n\" //must be included in vCard3.0\n\n\treturn contactToVCardString\n}\n\n/**\n * export for testing\n * Works for mail addresses the same as for addresses\n * Returns all mail-addresses/addresses and their types in an object array\n */\nexport function _addressesToVCardAddresses(addresses: ContactMailAddress[] | ContactAddress[]): {\n\tKIND: string\n\tCONTENT: string\n}[] {\n\treturn addresses.map((ad) => {\n\t\tlet kind = \"\"\n\n\t\tswitch (ad.type) {\n\t\t\tcase ContactAddressType.PRIVATE:\n\t\t\t\tkind = \"home\"\n\t\t\t\tbreak\n\n\t\t\tcase ContactAddressType.WORK:\n\t\t\t\tkind = \"work\"\n\t\t\t\tbreak\n\n\t\t\tdefault:\n\t\t}\n\n\t\treturn {\n\t\t\tKIND: kind,\n\t\t\tCONTENT: ad.address,\n\t\t}\n\t})\n}\n\n/**\n * export for testing\n * Returns all phone numbers and their types in an object array\n */\nexport function _phoneNumbersToVCardPhoneNumbers(numbers: ContactPhoneNumber[]): {\n\tKIND: string\n\tCONTENT: string\n}[] {\n\treturn numbers.map((num) => {\n\t\tlet kind = \"\"\n\n\t\tswitch (num.type) {\n\t\t\tcase ContactPhoneNumberType.PRIVATE:\n\t\t\t\tkind = \"home\"\n\t\t\t\tbreak\n\n\t\t\tcase ContactPhoneNumberType.WORK:\n\t\t\t\tkind = \"work\"\n\t\t\t\tbreak\n\n\t\t\tcase ContactPhoneNumberType.MOBILE:\n\t\t\t\tkind = \"cell\"\n\t\t\t\tbreak\n\n\t\t\tcase ContactPhoneNumberType.FAX:\n\t\t\t\tkind = \"fax\"\n\t\t\t\tbreak\n\n\t\t\tdefault:\n\t\t}\n\n\t\treturn {\n\t\t\tKIND: kind,\n\t\t\tCONTENT: num.number,\n\t\t}\n\t})\n}\n\n/**\n *  export for testing\n *  Returns all socialIds as a vCard Url in an object array\n *  Type is not defined here. URL tag has no fitting type implementation\n */\nexport function _socialIdsToVCardSocialUrls(socialIds: ContactSocialId[]): {\n\tKIND: string\n\tCONTENT: string\n}[] {\n\treturn socialIds.map((sId) => {\n\t\t//IN VCARD 3.0 is no type for URLS\n\t\treturn {\n\t\t\tKIND: \"\",\n\t\t\tCONTENT: getSocialUrl(sId),\n\t\t}\n\t})\n}\n\n/**\n * export for testing\n * Returns a multiple line string from the before created object arrays of addresses, mail addresses and socialIds\n */\nexport function _vCardFormatArrayToString(\n\ttypeAndContentArray: {\n\t\tKIND: string\n\t\tCONTENT: string\n\t}[],\n\ttagContent: string,\n): string {\n\treturn typeAndContentArray.reduce((result, elem) => {\n\t\tif (elem.KIND) {\n\t\t\treturn result + _getFoldedString(tagContent + \";TYPE=\" + elem.KIND + \":\" + _getVCardEscaped(elem.CONTENT)) + \"\\n\"\n\t\t} else {\n\t\t\treturn result + _getFoldedString(tagContent + \":\" + _getVCardEscaped(elem.CONTENT)) + \"\\n\"\n\t\t}\n\t}, \"\")\n}\n\n/**\n * Adds line breaks and padding in a CONTENT line to adhere to the vCard\n * specifications.\n *\n * @param text The text to fold.\n * @returns The same text but folded every 75 characters.\n * @see https://datatracker.ietf.org/doc/html/rfc6350#section-3.2\n */\nfunction _getFoldedString(text: string): string {\n\tlet separateLinesArray: string[] = []\n\n\twhile (text.length > 75) {\n\t\tseparateLinesArray.push(text.substring(0, 75))\n\t\ttext = text.substring(75, text.length)\n\t}\n\n\tseparateLinesArray.push(text)\n\ttext = separateLinesArray.join(\"\\n \")\n\treturn text\n}\n\nfunction _getVCardEscaped(content: string): string {\n\tcontent = content.replace(/\\n/g, \"\\\\n\")\n\tcontent = content.replace(/;/g, \"\\\\;\")\n\tcontent = content.replace(/,/g, \"\\\\,\")\n\treturn content\n}\n"]}