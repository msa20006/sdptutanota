{"version":3,"file":"Exporter.js","sourceRoot":"","sources":["../../../../../src/mail-app/mail/export/Exporter.ts"],"names":[],"mappings":"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","sourcesContent":["import { noOp, promiseMap, sortableTimestamp } from \"@tutao/tutanota-utils\"\nimport { DataFile } from \"../../../common/api/common/DataFile\"\nimport { downloadMailBundle } from \"./Bundler\"\nimport { isDesktop } from \"../../../common/api/common/Env\"\nimport type { Mail } from \"../../../common/api/entities/tutanota/TypeRefs.js\"\nimport type { EntityClient } from \"../../../common/api/common/EntityClient\"\nimport { locator } from \"../../../common/api/main/CommonLocator\"\nimport { FileController, zipDataFiles } from \"../../../common/file/FileController\"\nimport { MailFacade } from \"../../../common/api/worker/facades/lazy/MailFacade.js\"\nimport { OperationId } from \"../../../common/api/main/OperationProgressTracker.js\"\nimport { CancelledError } from \"../../../common/api/common/error/CancelledError.js\"\nimport { CryptoFacade } from \"../../../common/api/worker/crypto/CryptoFacade.js\"\nimport { MailBundle, MailExportMode } from \"../../../common/mailFunctionality/SharedMailUtils.js\"\nimport { generateExportFileName, mailToEmlFile } from \"./emlUtils.js\"\nimport { elementIdPart } from \"../../../common/api/common/utils/EntityUtils\"\n\nexport async function generateMailFile(bundle: MailBundle, fileName: string, mode: MailExportMode): Promise<DataFile> {\n\treturn mode === \"eml\" ? mailToEmlFile(bundle, fileName) : locator.fileApp.mailToMsg(bundle, fileName)\n}\n\nexport async function getMailExportMode(): Promise<MailExportMode> {\n\tif (isDesktop()) {\n\t\tconst ConfigKeys = await import(\"../../../common/desktop/config/ConfigKeys\")\n\t\tconst mailExportMode = (await locator.desktopSettingsFacade\n\t\t\t.getStringConfigValue(ConfigKeys.DesktopConfigKey.mailExportMode)\n\t\t\t.catch(noOp)) as MailExportMode\n\t\treturn mailExportMode ?? \"eml\"\n\t} else {\n\t\treturn \"eml\"\n\t}\n}\n\n/**\n * export mails. a single one will be exported as is, multiple will be put into a zip file\n * a save dialog will then be shown\n * @returns {Promise<Mail[]>} resolved with failed mails or empty after the fileController\n * was instructed to open the new zip File containing the exported files\n */\nexport async function exportMails(\n\tmails: Array<Mail>,\n\tmailFacade: MailFacade,\n\tentityClient: EntityClient,\n\tfileController: FileController,\n\tcryptoFacade: CryptoFacade,\n\toperationId?: OperationId,\n\tsignal?: AbortSignal,\n): Promise<{ failed: Mail[] }> {\n\tlet cancelled = false\n\n\tconst onAbort = () => {\n\t\tcancelled = true\n\t}\n\n\ttry {\n\t\t// Considering that the effort for generating the bundle is higher\n\t\t// than generating the files, we need to consider it twice, so the\n\t\t// total effort would be (mailsToBundle * 2) + filesToGenerate\n\t\tconst totalMails = mails.length * 3\n\t\tlet doneMails = 0\n\t\tconst errorMails: Mail[] = []\n\n\t\tsignal?.addEventListener(\"abort\", onAbort)\n\t\tconst updateProgress =\n\t\t\toperationId !== undefined ? () => locator.operationProgressTracker.onProgress(operationId, (++doneMails / totalMails) * 100) : noOp\n\n\t\t//The only way to skip a Promise is throwing an error.\n\t\t//this throws just a CancelledError to be handled by the try/catch statement.\n\n\t\t//This function must be called in each iteration across all promises since\n\t\t//throwing it inside the onAbort function doesn't interrupt the pending promises.\n\t\tconst checkAbortSignal = () => {\n\t\t\tif (cancelled) throw new CancelledError(\"export cancelled\")\n\t\t}\n\n\t\tconst downloadPromise = promiseMap(mails, async (mail) => {\n\t\t\tcheckAbortSignal()\n\t\t\ttry {\n\t\t\t\tconst { htmlSanitizer } = await import(\"../../../common/misc/HtmlSanitizer\")\n\t\t\t\treturn await downloadMailBundle(mail, mailFacade, entityClient, fileController, htmlSanitizer, cryptoFacade)\n\t\t\t} catch (e) {\n\t\t\t\terrorMails.push(mail)\n\t\t\t} finally {\n\t\t\t\tupdateProgress()\n\t\t\t\tupdateProgress()\n\t\t\t}\n\t\t})\n\n\t\tconst [mode, bundles] = await Promise.all([getMailExportMode(), downloadPromise])\n\t\tconst dataFiles: DataFile[] = []\n\t\tfor (const bundle of bundles) {\n\t\t\tif (!bundle) continue\n\n\t\t\tcheckAbortSignal()\n\t\t\tconst mailFile = await generateMailFile(\n\t\t\t\tbundle,\n\t\t\t\tgenerateExportFileName(elementIdPart(bundle.mailId), bundle.subject, new Date(bundle.receivedOn), mode),\n\t\t\t\tmode,\n\t\t\t)\n\t\t\tdataFiles.push(mailFile)\n\t\t\tupdateProgress()\n\t\t}\n\n\t\tconst zipName = `${sortableTimestamp()}-${mode}-mail-export.zip`\n\t\tconst outputFile = await (dataFiles.length === 1 ? dataFiles[0] : zipDataFiles(dataFiles, zipName))\n\t\tawait fileController.saveDataFile(outputFile)\n\n\t\treturn {\n\t\t\tfailed: errorMails,\n\t\t}\n\t} catch (e) {\n\t\tif (e.name !== \"CancelledError\") throw e\n\t} finally {\n\t\tsignal?.removeEventListener(\"abort\", onAbort)\n\t}\n\n\treturn { failed: [] }\n}\n"]}