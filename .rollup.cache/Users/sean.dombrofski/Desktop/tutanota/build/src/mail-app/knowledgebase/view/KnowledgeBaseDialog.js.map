{"version":3,"file":"KnowledgeBaseDialog.js","sourceRoot":"","sources":["../../../../../src/mail-app/knowledgebase/view/KnowledgeBaseDialog.ts"],"names":[],"mappings":"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","sourcesContent":["import { KnowledgeBaseModel } from \"../model/KnowledgeBaseModel.js\"\nimport { Editor } from \"../../../common/gui/editor/Editor.js\"\nimport type { KnowledgebaseDialogContentAttrs } from \"./KnowledgeBaseDialogContent.js\"\nimport { KnowledgeBaseDialogContent } from \"./KnowledgeBaseDialogContent.js\"\nimport { showTemplatePopupInEditor } from \"../../templates/view/TemplatePopup.js\"\nimport type { ButtonAttrs } from \"../../../common/gui/base/Button.js\"\nimport { ButtonType } from \"../../../common/gui/base/Button.js\"\nimport type { DialogHeaderBarAttrs } from \"../../../common/gui/base/DialogHeaderBar.js\"\nimport { lang } from \"../../../common/misc/LanguageViewModel.js\"\nimport type { KnowledgeBaseEntry, TemplateGroupRoot } from \"../../../common/api/entities/tutanota/TypeRefs.js\"\nimport type { lazy } from \"@tutao/tutanota-utils\"\nimport { createDropdown } from \"../../../common/gui/base/Dropdown.js\"\nimport stream from \"mithril/stream\"\nimport Stream from \"mithril/stream\"\nimport type { DialogInjectionRightAttrs } from \"../../../common/gui/base/DialogInjectionRight.js\"\nimport { TemplatePopupModel } from \"../../templates/model/TemplatePopupModel.js\"\n\nimport { getSharedGroupName } from \"../../../common/sharing/GroupUtils.js\"\n\nexport function createKnowledgeBaseDialogInjection(\n\tknowledgeBase: KnowledgeBaseModel,\n\ttemplateModel: TemplatePopupModel,\n\teditor: Editor,\n): DialogInjectionRightAttrs<KnowledgebaseDialogContentAttrs> {\n\tconst knowledgebaseAttrs: KnowledgebaseDialogContentAttrs = {\n\t\tonTemplateSelect: (template) => {\n\t\t\tshowTemplatePopupInEditor(templateModel, editor, template, \"\")\n\t\t},\n\t\tmodel: knowledgeBase,\n\t}\n\tconst isDialogVisible = stream(false)\n\treturn {\n\t\tvisible: isDialogVisible,\n\t\theaderAttrs: _createHeaderAttrs(knowledgebaseAttrs, isDialogVisible),\n\t\tcomponentAttrs: knowledgebaseAttrs,\n\t\tcomponent: KnowledgeBaseDialogContent,\n\t}\n}\n\nfunction _createHeaderAttrs(attrs: KnowledgebaseDialogContentAttrs, isDialogVisible: Stream<boolean>): lazy<DialogHeaderBarAttrs> {\n\treturn () => {\n\t\tconst selectedEntry = attrs.model.selectedEntry()\n\t\treturn selectedEntry ? createEntryViewHeader(selectedEntry, attrs.model) : createListViewHeader(attrs.model, isDialogVisible)\n\t}\n}\n\nfunction createEntryViewHeader(entry: KnowledgeBaseEntry, model: KnowledgeBaseModel): DialogHeaderBarAttrs {\n\treturn {\n\t\tleft: [\n\t\t\t{\n\t\t\t\tlabel: \"back_action\",\n\t\t\t\tclick: () => model.selectedEntry(null),\n\t\t\t\ttype: ButtonType.Secondary,\n\t\t\t},\n\t\t],\n\t\tmiddle: \"knowledgebase_label\",\n\t}\n}\n\nfunction createListViewHeader(model: KnowledgeBaseModel, isDialogVisible: Stream<boolean>): DialogHeaderBarAttrs {\n\treturn {\n\t\tleft: () => [\n\t\t\t{\n\t\t\t\tlabel: \"close_alt\",\n\t\t\t\tclick: () => isDialogVisible(false),\n\t\t\t\ttype: ButtonType.Primary,\n\t\t\t},\n\t\t],\n\t\tmiddle: \"knowledgebase_label\",\n\t\tright: [createAddButtonAttrs(model)],\n\t}\n}\n\nfunction createAddButtonAttrs(model: KnowledgeBaseModel): ButtonAttrs {\n\tconst templateGroupInstances = model.getTemplateGroupInstances()\n\n\tif (templateGroupInstances.length === 1) {\n\t\treturn {\n\t\t\tlabel: \"add_action\",\n\t\t\tclick: () => {\n\t\t\t\tshowKnowledgeBaseEditor(null, templateGroupInstances[0].groupRoot)\n\t\t\t},\n\t\t\ttype: ButtonType.Primary,\n\t\t}\n\t} else {\n\t\treturn {\n\t\t\tlabel: \"add_action\",\n\t\t\ttype: ButtonType.Primary,\n\t\t\tclick: createDropdown({\n\t\t\t\tlazyButtons: () =>\n\t\t\t\t\ttemplateGroupInstances.map((groupInstances) => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tlabel: lang.makeTranslation(\"group_name\", getSharedGroupName(groupInstances.groupInfo, model.userController, true)),\n\t\t\t\t\t\t\tclick: () => {\n\t\t\t\t\t\t\t\tshowKnowledgeBaseEditor(null, groupInstances.groupRoot)\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t}),\n\t\t}\n\t}\n}\n\nfunction showKnowledgeBaseEditor(entryToEdit: KnowledgeBaseEntry | null, groupRoot: TemplateGroupRoot) {\n\timport(\"../../settings/KnowledgeBaseEditor.js\").then((editor) => {\n\t\teditor.showKnowledgeBaseEditor(entryToEdit, groupRoot)\n\t})\n}\n"]}