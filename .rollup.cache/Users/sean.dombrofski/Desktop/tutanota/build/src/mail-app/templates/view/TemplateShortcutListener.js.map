{"version":3,"file":"TemplateShortcutListener.js","sourceRoot":"","sources":["../../../../../src/mail-app/templates/view/TemplateShortcutListener.ts"],"names":[],"mappings":"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","sourcesContent":["import { Editor } from \"../../../common/gui/editor/Editor\"\nimport { isKeyPressed } from \"../../../common/misc/KeyManager\"\nimport { downcast, getFirstOrThrow } from \"@tutao/tutanota-utils\"\nimport { Keys } from \"../../../common/api/common/TutanotaConstants\"\nimport { TEMPLATE_SHORTCUT_PREFIX, TemplatePopupModel } from \"../model/TemplatePopupModel.js\"\nimport { lang, languageByCode, LanguageViewModel } from \"../../../common/misc/LanguageViewModel\"\nimport { Dropdown } from \"../../../common/gui/base/Dropdown.js\"\nimport { modal } from \"../../../common/gui/base/Modal\"\nimport { showTemplatePopupInEditor } from \"./TemplatePopup.js\"\n\nexport function registerTemplateShortcutListener(editor: Editor, templateModel: TemplatePopupModel): TemplateShortcutListener {\n\tconst listener = new TemplateShortcutListener(editor, templateModel, lang)\n\teditor.addEventListener(\"keydown\", (event: KeyboardEvent) => listener.handleKeyDown(event))\n\teditor.addEventListener(\"cursor\", (event: CustomEvent<{ range: Range | null }>) => listener.handleCursorChange(event))\n\treturn listener\n}\n\nclass TemplateShortcutListener {\n\t_currentCursorPosition: Range | null\n\t_editor: Editor\n\t_templateModel: TemplatePopupModel\n\t_lang: LanguageViewModel\n\n\tconstructor(editor: Editor, templateModel: TemplatePopupModel, lang: LanguageViewModel) {\n\t\tthis._editor = editor\n\t\tthis._currentCursorPosition = null\n\t\tthis._templateModel = templateModel\n\t\tthis._lang = lang\n\t}\n\n\t// add this event listener to handle quick selection of templates inside the editor\n\thandleKeyDown(event: KeyboardEvent) {\n\t\tif (isKeyPressed(event.key, Keys.TAB) && this._currentCursorPosition) {\n\t\t\tconst cursorEndPos = this._currentCursorPosition\n\t\t\tconst text = cursorEndPos.startContainer.nodeType === Node.TEXT_NODE ? cursorEndPos.startContainer.textContent ?? \"\" : \"\"\n\t\t\tconst templateShortcutStartIndex = text.lastIndexOf(TEMPLATE_SHORTCUT_PREFIX)\n\t\t\tconst lastWhiteSpaceIndex = text.search(/\\s\\S*$/)\n\n\t\t\tif (\n\t\t\t\ttemplateShortcutStartIndex !== -1 &&\n\t\t\t\ttemplateShortcutStartIndex < cursorEndPos.startOffset &&\n\t\t\t\ttemplateShortcutStartIndex > lastWhiteSpaceIndex\n\t\t\t) {\n\t\t\t\t// stopPropagation & preventDefault to prevent tabbing to \"close\" button or tabbing into background\n\t\t\t\tevent.stopPropagation()\n\t\t\t\tevent.preventDefault()\n\t\t\t\tconst range = document.createRange()\n\t\t\t\trange.setStart(cursorEndPos.startContainer, templateShortcutStartIndex)\n\t\t\t\trange.setEnd(cursorEndPos.startContainer, cursorEndPos.startOffset)\n\n\t\t\t\tthis._editor.setSelection(range)\n\n\t\t\t\t// find and insert template\n\t\t\t\tconst selectedText = this._editor.getSelectedText()\n\n\t\t\t\tconst template = this._templateModel.findTemplateWithTag(selectedText)\n\n\t\t\t\tif (template) {\n\t\t\t\t\tif (template.contents.length > 1) {\n\t\t\t\t\t\t// multiple languages\n\t\t\t\t\t\t// show dropdown to select language\n\t\t\t\t\t\tlet buttons = template.contents.map((content) => {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tlabel: languageByCode[downcast(content.languageCode)].textId,\n\t\t\t\t\t\t\t\tclick: () => {\n\t\t\t\t\t\t\t\t\tthis._editor.insertHTML(content.text)\n\n\t\t\t\t\t\t\t\t\tthis._editor.focus()\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\tconst dropdown = new Dropdown(() => buttons, 200)\n\t\t\t\t\t\tdropdown.setOrigin(this._editor.getCursorPosition())\n\t\t\t\t\t\tmodal.displayUnique(dropdown, false)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._editor.insertHTML(getFirstOrThrow(template.contents).text)\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tshowTemplatePopupInEditor(this._templateModel, this._editor, null, selectedText)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\thandleCursorChange(event: CustomEvent<{ range: Range | null }>) {\n\t\tthis._currentCursorPosition = event.detail.range\n\t}\n}\n"]}