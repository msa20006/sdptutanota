{"version":3,"file":"SelectMailAddressForm.js","sourceRoot":"","sources":["../../../../src/common/settings/SelectMailAddressForm.ts"],"names":[],"mappings":"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","sourcesContent":["import m, { Children, Component, Vnode } from \"mithril\"\nimport type { TranslationKey } from \"../misc/LanguageViewModel.js\"\nimport { lang } from \"../misc/LanguageViewModel.js\"\nimport { isMailAddress } from \"../misc/FormatValidator.js\"\nimport { AccessDeactivatedError } from \"../api/common/error/RestError.js\"\nimport { formatMailAddressFromParts } from \"../misc/Formatter.js\"\nimport { Icon } from \"../gui/base/Icon.js\"\nimport { locator } from \"../api/main/CommonLocator.js\"\nimport { assertMainOrNode } from \"../api/common/Env.js\"\nimport { px, size } from \"../gui/size.js\"\nimport { Autocapitalize, Autocomplete, inputLineHeight, TextField } from \"../gui/base/TextField.js\"\nimport { attachDropdown, DropdownButtonAttrs } from \"../gui/base/Dropdown.js\"\nimport { IconButton, IconButtonAttrs } from \"../gui/base/IconButton.js\"\nimport { ButtonSize } from \"../gui/base/ButtonSize.js\"\nimport { EmailDomainData } from \"./mailaddress/MailAddressesUtils.js\"\nimport { BootIcons } from \"../gui/base/icons/BootIcons.js\"\nimport { isTutaMailAddress } from \"../mailFunctionality/SharedMailUtils.js\"\n\nassertMainOrNode()\n\nconst VALID_MESSAGE_ID = \"mailAddressAvailable_msg\"\n\nexport interface SelectMailAddressFormAttrs {\n\tselectedDomain: EmailDomainData\n\tavailableDomains: readonly EmailDomainData[]\n\tonValidationResult: (emailAddress: string, validationResult: ValidationResult) => unknown\n\tonBusyStateChanged: (isBusy: boolean) => unknown\n\tinjectionsRightButtonAttrs?: IconButtonAttrs | null\n\tonDomainChanged: (domain: EmailDomainData) => unknown\n\tmailAddressNAError?: TranslationKey\n}\n\nexport interface ValidationResult {\n\tisValid: boolean\n\terrorId: TranslationKey | null\n}\n\nexport class SelectMailAddressForm implements Component<SelectMailAddressFormAttrs> {\n\tprivate username: string\n\tprivate messageId: TranslationKey | null\n\tprivate checkAddressTimeout: TimeoutID | null\n\tprivate isVerificationBusy: boolean\n\tprivate lastAttrs: SelectMailAddressFormAttrs\n\n\tconstructor({ attrs }: Vnode<SelectMailAddressFormAttrs>) {\n\t\tthis.lastAttrs = attrs\n\t\tthis.isVerificationBusy = false\n\t\tthis.checkAddressTimeout = null\n\t\tthis.username = \"\"\n\t\tthis.messageId = \"mailAddressNeutral_msg\"\n\t}\n\n\tonupdate(vnode: Vnode<SelectMailAddressFormAttrs>) {\n\t\tif (this.lastAttrs.selectedDomain.domain !== vnode.attrs.selectedDomain.domain) {\n\t\t\tthis.verifyMailAddress(vnode.attrs)\n\t\t}\n\t\tthis.lastAttrs = vnode.attrs\n\t}\n\n\tview({ attrs }: Vnode<SelectMailAddressFormAttrs>): Children {\n\t\t// this is a semi-good hack to reset the username after the user pressed \"ok\"\n\t\t// this behavior is not necessarily expected, e.g. if the user enters an invalid email address and presses \"ok\" we might not want to clear the\n\t\t// username field. we would need to find a way to clear the field from the outside to solve this.\n\t\tif (attrs.injectionsRightButtonAttrs?.click) {\n\t\t\tconst originalCallback = attrs.injectionsRightButtonAttrs.click\n\n\t\t\tattrs.injectionsRightButtonAttrs.click = (event, dom) => {\n\t\t\t\toriginalCallback(event, dom)\n\t\t\t\tthis.username = \"\"\n\t\t\t\tthis.messageId = \"mailAddressNeutral_msg\"\n\t\t\t}\n\t\t}\n\n\t\treturn m(TextField, {\n\t\t\tlabel: \"mailAddress_label\",\n\t\t\tvalue: this.username,\n\t\t\talignRight: true,\n\t\t\tautocompleteAs: Autocomplete.newPassword,\n\t\t\tautocapitalize: Autocapitalize.none,\n\t\t\thelpLabel: () => this.addressHelpLabel(),\n\t\t\tfontSize: px(size.font_size_smaller),\n\t\t\toninput: (value) => {\n\t\t\t\tthis.username = value\n\t\t\t\tthis.verifyMailAddress(attrs)\n\t\t\t},\n\t\t\tinjectionsRight: () => [\n\t\t\t\tm(\n\t\t\t\t\t\".flex.items-end.align-self-end\",\n\t\t\t\t\t{\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\"padding-bottom\": \"1px\",\n\t\t\t\t\t\t\tflex: \"1 1 auto\",\n\t\t\t\t\t\t\tfontSize: px(size.font_size_smaller),\n\t\t\t\t\t\t\tlineHeight: px(inputLineHeight),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t`@${attrs.selectedDomain.domain}`,\n\t\t\t\t),\n\t\t\t\tattrs.availableDomains.length > 1\n\t\t\t\t\t? m(\n\t\t\t\t\t\t\tIconButton,\n\t\t\t\t\t\t\tattachDropdown({\n\t\t\t\t\t\t\t\tmainButtonAttrs: {\n\t\t\t\t\t\t\t\t\ttitle: \"domain_label\",\n\t\t\t\t\t\t\t\t\ticon: BootIcons.Expand,\n\t\t\t\t\t\t\t\t\tsize: ButtonSize.Compact,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tchildAttrs: () => attrs.availableDomains.map((domain) => this.createDropdownItemAttrs(domain, attrs)),\n\t\t\t\t\t\t\t\tshowDropdown: () => true,\n\t\t\t\t\t\t\t\twidth: 250,\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t  )\n\t\t\t\t\t: attrs.injectionsRightButtonAttrs\n\t\t\t\t\t? m(IconButton, attrs.injectionsRightButtonAttrs)\n\t\t\t\t\t: null,\n\t\t\t],\n\t\t})\n\t}\n\n\tprivate getCleanMailAddress(attrs: SelectMailAddressFormAttrs) {\n\t\treturn formatMailAddressFromParts(this.username, attrs.selectedDomain.domain)\n\t}\n\n\tprivate addressHelpLabel(): Children {\n\t\treturn this.isVerificationBusy\n\t\t\t? m(\".flex.items-center.mt-s\", [this.progressIcon(), lang.get(\"mailAddressBusy_msg\")])\n\t\t\t: m(\".mt-s\", lang.get(this.messageId ?? VALID_MESSAGE_ID))\n\t}\n\n\tprivate progressIcon(): Children {\n\t\treturn m(Icon, {\n\t\t\ticon: BootIcons.Progress,\n\t\t\tclass: \"icon-progress mr-s\",\n\t\t})\n\t}\n\n\tprivate createDropdownItemAttrs(domainData: EmailDomainData, attrs: SelectMailAddressFormAttrs): DropdownButtonAttrs {\n\t\treturn {\n\t\t\tlabel: lang.makeTranslation(\"domain\", domainData.domain),\n\t\t\tclick: () => {\n\t\t\t\tattrs.onDomainChanged(domainData)\n\t\t\t},\n\t\t\ticon: domainData.isPaid ? BootIcons.Premium : undefined,\n\t\t}\n\t}\n\n\tprivate onBusyStateChanged(isBusy: boolean, onBusyStateChanged: (arg0: boolean) => unknown): void {\n\t\tthis.isVerificationBusy = isBusy\n\t\tonBusyStateChanged(isBusy)\n\t\tm.redraw()\n\t}\n\n\tprivate onValidationFinished(\n\t\temail: string,\n\t\tvalidationResult: ValidationResult,\n\t\tonValidationResult: SelectMailAddressFormAttrs[\"onValidationResult\"],\n\t): void {\n\t\tthis.messageId = validationResult.errorId\n\t\tonValidationResult(email, validationResult)\n\t}\n\n\tprivate verifyMailAddress(attrs: SelectMailAddressFormAttrs) {\n\t\tconst { onValidationResult, onBusyStateChanged } = attrs\n\t\tif (this.checkAddressTimeout) clearTimeout(this.checkAddressTimeout)\n\n\t\tconst cleanMailAddress = this.getCleanMailAddress(attrs)\n\t\tconst cleanUsername = this.username.trim().toLowerCase()\n\n\t\tif (cleanUsername === \"\") {\n\t\t\tthis.onValidationFinished(\n\t\t\t\tcleanMailAddress,\n\t\t\t\t{\n\t\t\t\t\tisValid: false,\n\t\t\t\t\terrorId: \"mailAddressNeutral_msg\",\n\t\t\t\t},\n\t\t\t\tonValidationResult,\n\t\t\t)\n\t\t\tthis.onBusyStateChanged(false, onBusyStateChanged)\n\n\t\t\treturn\n\t\t} else if (!isMailAddress(cleanMailAddress, true) || (isTutaMailAddress(cleanMailAddress) && cleanUsername.length < 3)) {\n\t\t\tthis.onValidationFinished(\n\t\t\t\tcleanMailAddress,\n\t\t\t\t{\n\t\t\t\t\tisValid: false,\n\t\t\t\t\terrorId: \"mailAddressInvalid_msg\",\n\t\t\t\t},\n\t\t\t\tonValidationResult,\n\t\t\t)\n\t\t\tthis.onBusyStateChanged(false, onBusyStateChanged)\n\n\t\t\treturn\n\t\t}\n\n\t\tthis.onBusyStateChanged(true, onBusyStateChanged)\n\n\t\tthis.checkAddressTimeout = setTimeout(async () => {\n\t\t\tif (this.getCleanMailAddress(attrs) !== cleanMailAddress) return\n\n\t\t\tlet result: ValidationResult\n\t\t\ttry {\n\t\t\t\tconst available = await locator.mailAddressFacade.isMailAddressAvailable(cleanMailAddress)\n\t\t\t\tresult = available\n\t\t\t\t\t? { isValid: true, errorId: null }\n\t\t\t\t\t: {\n\t\t\t\t\t\t\tisValid: false,\n\t\t\t\t\t\t\terrorId: attrs.mailAddressNAError ?? \"mailAddressNA_msg\",\n\t\t\t\t\t  }\n\t\t\t} catch (e) {\n\t\t\t\tif (e instanceof AccessDeactivatedError) {\n\t\t\t\t\tresult = { isValid: false, errorId: \"mailAddressDelay_msg\" }\n\t\t\t\t} else {\n\t\t\t\t\tthrow e\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tif (this.getCleanMailAddress(attrs) === cleanMailAddress) {\n\t\t\t\t\tthis.onBusyStateChanged(false, onBusyStateChanged)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.getCleanMailAddress(attrs) === cleanMailAddress) {\n\t\t\t\tthis.onValidationFinished(cleanMailAddress, result, onValidationResult)\n\t\t\t}\n\t\t}, 500)\n\t}\n}\n"]}