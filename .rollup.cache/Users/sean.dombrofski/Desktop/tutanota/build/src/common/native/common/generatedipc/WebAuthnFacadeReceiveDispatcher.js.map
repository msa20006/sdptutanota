{"version":3,"file":"WebAuthnFacadeReceiveDispatcher.js","sourceRoot":"","sources":["../../../../../../src/common/native/common/generatedipc/WebAuthnFacadeReceiveDispatcher.ts"],"names":[],"mappings":"AAAA,iCAAiC;AAMjC,MAAM,OAAO,+BAA+B;IACd;IAA7B,YAA6B,MAAsB;QAAtB,WAAM,GAAN,MAAM,CAAgB;IAAG,CAAC;IACvD,KAAK,CAAC,QAAQ,CAAC,MAAc,EAAE,GAAe;QAC7C,QAAQ,MAAM,EAAE,CAAC;YAChB,KAAK,UAAU,CAAC,CAAC,CAAC;gBACjB,MAAM,SAAS,GAAkC,GAAG,CAAC,CAAC,CAAC,CAAA;gBACvD,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAA;YACvC,CAAC;YACD,KAAK,MAAM,CAAC,CAAC,CAAC;gBACb,MAAM,SAAS,GAA0B,GAAG,CAAC,CAAC,CAAC,CAAA;gBAC/C,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA;YACnC,CAAC;YACD,KAAK,uBAAuB,CAAC,CAAC,CAAC;gBAC9B,OAAO,IAAI,CAAC,MAAM,CAAC,qBAAqB,EAAE,CAAA;YAC3C,CAAC;YACD,KAAK,aAAa,CAAC,CAAC,CAAC;gBACpB,OAAO,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,CAAA;YACjC,CAAC;YACD,KAAK,4BAA4B,CAAC,CAAC,CAAC;gBACnC,MAAM,IAAI,GAAW,GAAG,CAAC,CAAC,CAAC,CAAA;gBAC3B,OAAO,IAAI,CAAC,MAAM,CAAC,0BAA0B,CAAC,IAAI,CAAC,CAAA;YACpD,CAAC;YACD,KAAK,gCAAgC,CAAC,CAAC,CAAC;gBACvC,MAAM,KAAK,GAAW,GAAG,CAAC,CAAC,CAAC,CAAA;gBAC5B,OAAO,IAAI,CAAC,MAAM,CAAC,8BAA8B,CAAC,KAAK,CAAC,CAAA;YACzD,CAAC;QACF,CAAC;IACF,CAAC;CACD","sourcesContent":["/* generated file, don't edit. */\n\nimport { WebAuthnRegistrationChallenge } from \"./WebAuthnRegistrationChallenge.js\"\nimport { WebAuthnSignChallenge } from \"./WebAuthnSignChallenge.js\"\nimport { WebAuthnFacade } from \"./WebAuthnFacade.js\"\n\nexport class WebAuthnFacadeReceiveDispatcher {\n\tconstructor(private readonly facade: WebAuthnFacade) {}\n\tasync dispatch(method: string, arg: Array<any>): Promise<any> {\n\t\tswitch (method) {\n\t\t\tcase \"register\": {\n\t\t\t\tconst challenge: WebAuthnRegistrationChallenge = arg[0]\n\t\t\t\treturn this.facade.register(challenge)\n\t\t\t}\n\t\t\tcase \"sign\": {\n\t\t\t\tconst challenge: WebAuthnSignChallenge = arg[0]\n\t\t\t\treturn this.facade.sign(challenge)\n\t\t\t}\n\t\t\tcase \"abortCurrentOperation\": {\n\t\t\t\treturn this.facade.abortCurrentOperation()\n\t\t\t}\n\t\t\tcase \"isSupported\": {\n\t\t\t\treturn this.facade.isSupported()\n\t\t\t}\n\t\t\tcase \"canAttemptChallengeForRpId\": {\n\t\t\t\tconst rpId: string = arg[0]\n\t\t\t\treturn this.facade.canAttemptChallengeForRpId(rpId)\n\t\t\t}\n\t\t\tcase \"canAttemptChallengeForU2FAppId\": {\n\t\t\t\tconst appId: string = arg[0]\n\t\t\t\treturn this.facade.canAttemptChallengeForU2FAppId(appId)\n\t\t\t}\n\t\t}\n\t}\n}\n"]}