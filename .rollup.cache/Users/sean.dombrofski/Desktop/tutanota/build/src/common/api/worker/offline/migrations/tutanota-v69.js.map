{"version":3,"file":"tutanota-v69.js","sourceRoot":"","sources":["../../../../../../../src/common/api/worker/offline/migrations/tutanota-v69.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,kBAAkB,EAAE,QAAQ,EAAE,kBAAkB,EAAE,sBAAsB,EAAa,WAAW,EAAE,eAAe,EAAE,MAAM,0BAA0B,CAAA;AAG5J,OAAO,EACN,oBAAoB,EACpB,0BAA0B,EAC1B,wBAAwB,EACxB,uBAAuB,EACvB,2BAA2B,EAC3B,kBAAkB,EAClB,cAAc,EACd,oBAAoB,EACpB,iBAAiB,EACjB,WAAW,EACX,yBAAyB,EACzB,wBAAwB,EACxB,cAAc,EACd,sBAAsB,EACtB,uBAAuB,EACvB,iBAAiB,EACjB,WAAW,EACX,wBAAwB,EACxB,yBAAyB,EACzB,4BAA4B,GAC5B,MAAM,wCAAwC,CAAA;AAC/C,OAAO,EAAE,qBAAqB,EAAE,MAAM,sCAAsC,CAAA;AAE5E,MAAM,CAAC,MAAM,UAAU,GAAqB;IAC3C,GAAG,EAAE,UAAU;IACf,OAAO,EAAE,EAAE;IACX,KAAK,CAAC,OAAO,CAAC,OAAuB;QACpC,MAAM,qBAAqB,GAAkC;YAC5D,iBAAiB;YACjB,cAAc;YACd,kBAAkB;YAClB,yBAAyB;YACzB,wBAAwB;YACxB,4BAA4B;YAC5B,2BAA2B;YAC3B,wBAAwB;YACxB,wBAAwB;SACxB,CAAA;QAED,MAAM,yBAAyB,GAAsC;YACpE,WAAW;YACX,cAAc;YACd,WAAW;YACX,iBAAiB;YACjB,oBAAoB;YACpB,0BAA0B;YAC1B,oBAAoB;YACpB,uBAAuB;YACvB,sBAAsB;YACtB,uBAAuB;YACvB,yBAAyB;SACzB,CAAA;QAED,KAAK,MAAM,IAAI,IAAI,qBAAqB,EAAE,CAAC;YAC1C,MAAM,kBAAkB,CAAC,IAAI,EAAE,OAAO,EAAE,CAAC,kBAAkB,EAAE,CAAC,CAAC,CAAA;QAChE,CAAC;QACD,KAAK,MAAM,IAAI,IAAI,yBAAyB,EAAE,CAAC;YAC9C,MAAM,sBAAsB,CAAC,IAAI,EAAE,OAAO,EAAE,CAAC,kBAAkB,EAAE,CAAC,CAAC,CAAA;QACpE,CAAC;QAED,MAAM,sBAAsB,CAAC,WAAW,EAAE,OAAO,EAAE,CAAC,sBAAsB,EAAE,CAAC,CAAC,CAAA;QAC9E,MAAM,kBAAkB,CAAC,yBAAyB,EAAE,OAAO,EAAE,CAAC,eAAe,CAAC,iBAAiB,EAAE,gBAAgB,CAAC,EAAE,QAAQ,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC,CAAC,CAAA;QACtJ,MAAM,kBAAkB,CAAC,cAAc,EAAE,OAAO,EAAE,CAAC,WAAW,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAA;IACzF,CAAC;CACD,CAAA;AAED,SAAS,sBAAsB;IAC9B,OAAO,UAAU,MAAM;QACtB,MAAM,SAAS,GAAG,MAAM,CAAC,WAAW,CAAC,CAAA;QACrC,IAAI,SAAS,IAAI,IAAI,EAAE,CAAC;YACvB,SAAS,CAAC,qBAAqB,CAAC,GAAG,GAAG,CAAA;YACtC,SAAS,CAAC,kBAAkB,CAAC,GAAG,SAAS,CAAC,iBAAiB,CAAC,KAAK,qBAAqB,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAA;YAC9G,KAAK,MAAM,kBAAkB,IAAI,SAAS,CAAC,sBAAsB,CAAC,EAAE,CAAC;gBACpE,kBAAkB,CAAC,eAAe,CAAC,GAAG,GAAG,CAAA;YAC1C,CAAC;QACF,CAAC;QACD,OAAO,MAAM,CAAA;IACd,CAAC,CAAA;AACF,CAAC","sourcesContent":["import { OfflineMigration } from \"../OfflineStorageMigrator.js\"\nimport { OfflineStorage } from \"../OfflineStorage.js\"\nimport { addOwnerKeyVersion, addValue, migrateAllElements, migrateAllListElements, Migration, removeValue, renameAttribute } from \"../StandardMigrations.js\"\nimport { ElementEntity, ListElementEntity, SomeEntity } from \"../../../common/EntityTypes.js\"\nimport { TypeRef } from \"@tutao/tutanota-utils\"\nimport {\n\tCalendarEventTypeRef,\n\tCalendarEventUpdateTypeRef,\n\tCalendarGroupRootTypeRef,\n\tContactListEntryTypeRef,\n\tContactListGroupRootTypeRef,\n\tContactListTypeRef,\n\tContactTypeRef,\n\tEmailTemplateTypeRef,\n\tFileSystemTypeRef,\n\tFileTypeRef,\n\tKnowledgeBaseEntryTypeRef,\n\tMailboxPropertiesTypeRef,\n\tMailBoxTypeRef,\n\tMailDetailsBlobTypeRef,\n\tMailDetailsDraftTypeRef,\n\tMailFolderTypeRef,\n\tMailTypeRef,\n\tTemplateGroupRootTypeRef,\n\tTutanotaPropertiesTypeRef,\n\tUserSettingsGroupRootTypeRef,\n} from \"../../../entities/tutanota/TypeRefs.js\"\nimport { CryptoProtocolVersion } from \"../../../common/TutanotaConstants.js\"\n\nexport const tutanota69: OfflineMigration = {\n\tapp: \"tutanota\",\n\tversion: 69,\n\tasync migrate(storage: OfflineStorage) {\n\t\tconst encryptedElementTypes: Array<TypeRef<ElementEntity>> = [\n\t\t\tFileSystemTypeRef,\n\t\t\tMailBoxTypeRef,\n\t\t\tContactListTypeRef,\n\t\t\tTutanotaPropertiesTypeRef,\n\t\t\tCalendarGroupRootTypeRef,\n\t\t\tUserSettingsGroupRootTypeRef,\n\t\t\tContactListGroupRootTypeRef,\n\t\t\tMailboxPropertiesTypeRef,\n\t\t\tTemplateGroupRootTypeRef,\n\t\t]\n\n\t\tconst encryptedListElementTypes: Array<TypeRef<ListElementEntity>> = [\n\t\t\tFileTypeRef,\n\t\t\tContactTypeRef,\n\t\t\tMailTypeRef,\n\t\t\tMailFolderTypeRef,\n\t\t\tCalendarEventTypeRef,\n\t\t\tCalendarEventUpdateTypeRef,\n\t\t\tEmailTemplateTypeRef,\n\t\t\tMailDetailsDraftTypeRef,\n\t\t\tMailDetailsBlobTypeRef,\n\t\t\tContactListEntryTypeRef,\n\t\t\tKnowledgeBaseEntryTypeRef,\n\t\t]\n\n\t\tfor (const type of encryptedElementTypes) {\n\t\t\tawait migrateAllElements(type, storage, [addOwnerKeyVersion()])\n\t\t}\n\t\tfor (const type of encryptedListElementTypes) {\n\t\t\tawait migrateAllListElements(type, storage, [addOwnerKeyVersion()])\n\t\t}\n\n\t\tawait migrateAllListElements(MailTypeRef, storage, [addVersionsToBucketKey()])\n\t\tawait migrateAllElements(TutanotaPropertiesTypeRef, storage, [renameAttribute(\"groupEncEntropy\", \"userEncEntropy\"), addValue(\"userKeyVersion\", null)])\n\t\tawait migrateAllElements(MailBoxTypeRef, storage, [removeValue(\"symEncShareBucketKey\")])\n\t},\n}\n\nfunction addVersionsToBucketKey(): Migration {\n\treturn function (entity) {\n\t\tconst bucketKey = entity[\"bucketKey\"]\n\t\tif (bucketKey != null) {\n\t\t\tbucketKey[\"recipientKeyVersion\"] = \"0\"\n\t\t\tbucketKey[\"senderKeyVersion\"] = bucketKey[\"protocolVersion\"] === CryptoProtocolVersion.TUTA_CRYPT ? \"0\" : null\n\t\t\tfor (const instanceSessionKey of bucketKey[\"bucketEncSessionKeys\"]) {\n\t\t\t\tinstanceSessionKey[\"symKeyVersion\"] = \"0\"\n\t\t\t}\n\t\t}\n\t\treturn entity\n\t}\n}\n"]}