{"version":3,"file":"GroupDetailsView.js","sourceRoot":"","sources":["../../../../../src/common/settings/groups/GroupDetailsView.ts"],"names":[],"mappings":"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","sourcesContent":["import m, { ChildArray, Children } from \"mithril\"\nimport { Dialog } from \"../../gui/base/Dialog.js\"\nimport { formatDateWithMonth, formatStorageSize } from \"../../misc/Formatter.js\"\nimport { lang } from \"../../misc/LanguageViewModel.js\"\nimport { getFirstOrThrow, neverNull } from \"@tutao/tutanota-utils\"\nimport { GroupType } from \"../../api/common/TutanotaConstants.js\"\nimport type { TableAttrs } from \"../../gui/base/Table.js\"\nimport { ColumnWidth, Table, TableLineAttrs } from \"../../gui/base/Table.js\"\nimport { Icons } from \"../../gui/base/icons/Icons.js\"\nimport { showProgressDialog } from \"../../gui/dialogs/ProgressDialog.js\"\nimport { TextField } from \"../../gui/base/TextField.js\"\nimport type { DropDownSelectorAttrs } from \"../../gui/base/DropDownSelector.js\"\nimport { DropDownSelector } from \"../../gui/base/DropDownSelector.js\"\nimport { assertMainOrNode } from \"../../api/common/Env.js\"\nimport { IconButton, IconButtonAttrs } from \"../../gui/base/IconButton.js\"\nimport { ButtonSize } from \"../../gui/base/ButtonSize.js\"\nimport { GroupDetailsModel } from \"../../../mail-app/settings/groups/GroupDetailsModel.js\"\nimport { showBuyDialog } from \"../../subscription/BuyDialog.js\"\nimport { EntityUpdateData } from \"../../api/common/utils/EntityUpdateUtils.js\"\nimport { UpdatableSettingsDetailsViewer } from \"../Interfaces.js\"\n\nassertMainOrNode()\n\nexport class GroupDetailsView implements UpdatableSettingsDetailsViewer {\n\tconstructor(private readonly model: GroupDetailsModel) {}\n\n\t/**\n\t * render the header that tells us what type of group we have here\n\t * @private\n\t */\n\tprivate renderHeader(): Children {\n\t\treturn m(\".h4.mt-l\", getGroupTypeDisplayName(this.model.getGroupType()))\n\t}\n\n\trenderView(): Children {\n\t\treturn m(\"#user-viewer.fill-absolute.scroll.plr-l\", [this.renderHeader(), this.renderCommonInfo(), this.renderMailGroupInfo()])\n\t}\n\n\t/**\n\t * render the fields that are common to all group types\n\t * @private\n\t */\n\tprivate renderCommonInfo(): ChildArray {\n\t\treturn [this.renderCreatedTextField(), this.renderNameField(), this.renderStatusSelector(), this.renderMembersTable()]\n\t}\n\n\tprivate renderCreatedTextField(): Children {\n\t\treturn m(TextField, { label: \"created_label\", value: formatDateWithMonth(this.model.getCreationDate()), isReadOnly: true })\n\t}\n\n\t/**\n\t * render the information that only shared mailboxes have\n\t * @private\n\t */\n\tprivate renderMailGroupInfo(): ChildArray {\n\t\treturn [\n\t\t\tthis.renderUsedStorage(),\n\t\t\tm(TextField, {\n\t\t\t\tlabel: \"mailAddress_label\",\n\t\t\t\tvalue: this.model.getGroupMailAddress(),\n\t\t\t\tisReadOnly: true,\n\t\t\t}),\n\t\t\tm(TextField, {\n\t\t\t\tlabel: \"mailName_label\",\n\t\t\t\tvalue: this.model.getGroupSenderName(),\n\t\t\t\tisReadOnly: true,\n\t\t\t\tinjectionsRight: () =>\n\t\t\t\t\tm(IconButton, {\n\t\t\t\t\t\ticon: Icons.Edit,\n\t\t\t\t\t\ttitle: \"setSenderName_action\",\n\t\t\t\t\t\tclick: () => {\n\t\t\t\t\t\t\tthis.showChangeSenderNameDialog()\n\t\t\t\t\t\t},\n\t\t\t\t\t}),\n\t\t\t}),\n\t\t]\n\t}\n\n\tprivate renderStatusSelector(): Children {\n\t\tconst attrs: DropDownSelectorAttrs<boolean> = {\n\t\t\tlabel: \"state_label\",\n\t\t\titems: [\n\t\t\t\t{\n\t\t\t\t\tname: lang.get(\"activated_label\"),\n\t\t\t\t\tvalue: false,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: lang.get(\"deactivated_label\"),\n\t\t\t\t\tvalue: true,\n\t\t\t\t},\n\t\t\t],\n\t\t\tselectedValue: !this.model.isGroupActive(),\n\t\t\tselectionChangedHandler: (deactivate) => this.onActivationStatusChanged(deactivate),\n\t\t}\n\t\treturn m(DropDownSelector, attrs)\n\t}\n\n\tprivate async onActivationStatusChanged(deactivate: boolean): Promise<void> {\n\t\tconst buyParams = await showProgressDialog(\"pleaseWait_msg\", this.model.validateGroupActivationStatus(deactivate))\n\t\tif (!buyParams) return\n\t\tconst confirmed = await showBuyDialog(buyParams)\n\t\tif (!confirmed) return\n\t\tawait showProgressDialog(\"pleaseWait_msg\", this.model.executeGroupBuy(deactivate))\n\t}\n\n\tprivate renderNameField(): Children {\n\t\treturn m(TextField, {\n\t\t\tlabel: \"name_label\",\n\t\t\tvalue: this.model.getGroupName(),\n\t\t\tisReadOnly: true,\n\t\t\tinjectionsRight: () =>\n\t\t\t\tm(IconButton, {\n\t\t\t\t\ttitle: \"edit_action\",\n\t\t\t\t\tclick: () => this.showChangeNameDialog(),\n\t\t\t\t\ticon: Icons.Edit,\n\t\t\t\t\tsize: ButtonSize.Compact,\n\t\t\t\t}),\n\t\t})\n\t}\n\n\tprivate showChangeNameDialog(): void {\n\t\tDialog.showProcessTextInputDialog(\n\t\t\t{\n\t\t\t\ttitle: \"edit_action\",\n\t\t\t\tlabel: \"name_label\",\n\t\t\t\tdefaultValue: this.model.getGroupName(),\n\t\t\t\tinputValidator: (newName) => this.model.validateGroupName(newName),\n\t\t\t},\n\t\t\t(newName) => this.model.changeGroupName(newName),\n\t\t)\n\t}\n\n\tprivate showChangeSenderNameDialog(): void {\n\t\tDialog.showProcessTextInputDialog(\n\t\t\t{\n\t\t\t\ttitle: \"edit_action\",\n\t\t\t\tlabel: \"name_label\",\n\t\t\t\tdefaultValue: this.model.getGroupSenderName(),\n\t\t\t},\n\t\t\t(newName) => this.model.changeGroupSenderName(newName),\n\t\t)\n\t}\n\n\tprivate renderUsedStorage(): Children {\n\t\tconst usedStorage = this.model.getUsedStorage()\n\t\tconst formattedStorage = usedStorage ? formatStorageSize(usedStorage) : lang.get(\"loading_msg\")\n\n\t\treturn m(TextField, {\n\t\t\tlabel: \"storageCapacityUsed_label\",\n\t\t\tvalue: formattedStorage,\n\t\t\tisReadOnly: true,\n\t\t})\n\t}\n\n\tprivate async showAddMemberDialog(): Promise<void> {\n\t\tconst possibleMembers = await this.model.getPossibleMembers()\n\t\tif (possibleMembers.length === 0) {\n\t\t\treturn Dialog.message(\"noValidMembersToAdd_msg\")\n\t\t}\n\t\tlet currentSelection = getFirstOrThrow(possibleMembers).value\n\n\t\tconst addUserToGroupOkAction = (dialog: Dialog) => {\n\t\t\t// noinspection JSIgnoredPromiseFromCall\n\t\t\tshowProgressDialog(\"pleaseWait_msg\", this.model.addUserToGroup(currentSelection))\n\t\t\tdialog.close()\n\t\t}\n\n\t\tDialog.showActionDialog({\n\t\t\ttitle: \"addUserToGroup_label\",\n\t\t\tchild: {\n\t\t\t\tview: () =>\n\t\t\t\t\tm(DropDownSelector, {\n\t\t\t\t\t\tlabel: \"account_label\",\n\t\t\t\t\t\titems: possibleMembers,\n\t\t\t\t\t\tselectedValue: currentSelection,\n\t\t\t\t\t\tselectionChangedHandler: (newSelected: Id) => (currentSelection = newSelected),\n\t\t\t\t\t\tdropdownWidth: 250,\n\t\t\t\t\t}),\n\t\t\t},\n\t\t\tallowOkWithReturn: true,\n\t\t\tokAction: addUserToGroupOkAction,\n\t\t})\n\t}\n\n\tasync entityEventsReceived(updates: ReadonlyArray<EntityUpdateData>): Promise<void> {\n\t\treturn this.model.entityEventsReceived(updates)\n\t}\n\n\tprivate renderMembersTable(): Children {\n\t\tif (!this.model.isGroupActive()) return null\n\n\t\tconst addUserButtonAttrs: IconButtonAttrs = {\n\t\t\ttitle: \"addUserToGroup_label\",\n\t\t\tclick: () => this.showAddMemberDialog(),\n\t\t\ticon: Icons.Add,\n\t\t\tsize: ButtonSize.Compact,\n\t\t} as const\n\n\t\tconst lines: TableLineAttrs[] = this.model.getMembersInfo().map((userGroupInfo) => {\n\t\t\tconst removeButtonAttrs: IconButtonAttrs = {\n\t\t\t\ttitle: \"remove_action\",\n\t\t\t\tclick: () => showProgressDialog(\"pleaseWait_msg\", this.model.removeGroupMember(userGroupInfo)),\n\t\t\t\ticon: Icons.Cancel,\n\t\t\t\tsize: ButtonSize.Compact,\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tcells: [userGroupInfo.name, neverNull(userGroupInfo.mailAddress)],\n\t\t\t\tactionButtonAttrs: removeButtonAttrs,\n\t\t\t}\n\t\t})\n\n\t\tconst membersTableAttrs: TableAttrs = {\n\t\t\tcolumnHeading: [\"name_label\", \"mailAddress_label\"],\n\t\t\tcolumnWidths: [ColumnWidth.Largest, ColumnWidth.Largest],\n\t\t\tshowActionButtonColumn: true,\n\t\t\taddButtonAttrs: addUserButtonAttrs,\n\t\t\tlines,\n\t\t}\n\n\t\treturn [m(\".h5.mt-l.mb-s\", lang.get(\"groupMembers_label\")), m(Table, membersTableAttrs)]\n\t}\n}\n\nexport function getGroupTypeDisplayName(groupType: NumberString | null): string {\n\tif (groupType == null) {\n\t\treturn \"\"\n\t} else if (groupType === GroupType.Mail) {\n\t\treturn lang.get(\"sharedMailbox_label\")\n\t} else if (groupType === GroupType.User) {\n\t\treturn lang.get(\"userColumn_label\")\n\t} else if (groupType === GroupType.Template) {\n\t\treturn lang.get(\"templateGroup_label\")\n\t} else {\n\t\treturn groupType // just for testing\n\t}\n}\n"]}