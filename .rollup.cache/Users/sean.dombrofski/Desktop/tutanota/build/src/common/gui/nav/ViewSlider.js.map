{"version":3,"file":"ViewSlider.js","sourceRoot":"","sources":["../../../../../src/common/gui/nav/ViewSlider.ts"],"names":[],"mappings":"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","sourcesContent":["import m, { Children, Component } from \"mithril\"\nimport { ColumnType, ViewColumn } from \"../base/ViewColumn.js\"\nimport type { windowSizeListener } from \"../../misc/WindowFacade.js\"\nimport { windowFacade } from \"../../misc/WindowFacade.js\"\nimport { size } from \"../size.js\"\nimport { alpha, AlphaEnum, animations, transform, TransformEnum } from \"../animation/Animations.js\"\nimport { ease } from \"../animation/Easing.js\"\nimport { theme } from \"../theme.js\"\nimport { assertNotNull } from \"@tutao/tutanota-utils\"\nimport { styles } from \"../styles.js\"\nimport { AriaLandmarks } from \"../AriaUtils.js\"\nimport { LayerType } from \"../../../RootView.js\"\nimport { assertMainOrNode } from \"../../api/common/Env.js\"\nimport { client } from \"../../misc/ClientDetector.js\"\n\nassertMainOrNode()\nexport type GestureInfo = {\n\tx: number\n\ty: number\n\ttime: number\n\tidentifier: number\n}\nexport const gestureInfoFromTouch = (touch: Touch): GestureInfo => ({\n\tx: touch.pageX,\n\ty: touch.pageY,\n\ttime: performance.now(),\n\tidentifier: touch.identifier,\n})\n\ninterface ViewSliderAttrs {\n\theader: Children\n\tbottomNav?: Children\n}\n\n/**\n * Represents a view with multiple view columns. Depending on the screen width and the view columns configurations,\n * the actual widths and positions of the view columns is calculated. This allows a consistent layout for any browser\n * resolution on any type of device.\n */\nexport class ViewSlider implements Component<ViewSliderAttrs> {\n\tprivate readonly mainColumn: ViewColumn\n\tfocusedColumn: ViewColumn\n\tprivate visibleBackgroundColumns: ViewColumn[]\n\tprivate domSlidingPart!: HTMLElement\n\tview: Component<ViewSliderAttrs>[\"view\"]\n\tprivate busy: Promise<unknown>\n\tprivate isModalBackgroundVisible: boolean\n\tprivate readonly resizeListener: windowSizeListener = () => this.updateVisibleBackgroundColumns()\n\tprivate readonly handleHistoryEvent = () => {\n\t\tconst prev = this.getPreviousColumn()\n\t\tif (prev != null && prev.columnType !== ColumnType.Foreground) {\n\t\t\tthis.focusPreviousColumn()\n\t\t\treturn false\n\t\t} else if (this.isForegroundColumnFocused()) {\n\t\t\tthis.focusNextColumn()\n\t\t\treturn false\n\t\t}\n\t\treturn true\n\t}\n\n\t/** Creates the event listeners as soon as this component is loaded (invoked by mithril)*/\n\toncreate: () => void = () => {\n\t\tthis.updateVisibleBackgroundColumns()\n\n\t\twindowFacade.addResizeListener(this.resizeListener)\n\t\twindowFacade.addHistoryEventListener(this.handleHistoryEvent)\n\t}\n\n\t/** Removes the registered event listeners as soon as this component is unloaded (invoked by mithril)*/\n\tonremove: () => void = () => {\n\t\twindowFacade.removeResizeListener(this.resizeListener)\n\t\twindowFacade.removeHistoryEventListener(this.handleHistoryEvent)\n\t}\n\tprivate getSideColDom: () => HTMLElement | null = () => this.viewColumns[0].domColumn\n\n\tconstructor(private readonly viewColumns: ViewColumn[], private readonly enableDrawer: boolean = true) {\n\t\t// the first background column is the main column\n\t\tthis.mainColumn = assertNotNull(\n\t\t\tviewColumns.find((column) => column.columnType === ColumnType.Background),\n\t\t\t\"there was no backgroung column passed to viewslider\",\n\t\t)\n\n\t\tthis.focusedColumn = this.mainColumn\n\t\tthis.visibleBackgroundColumns = []\n\n\t\tthis.updateVisibleBackgroundColumns()\n\n\t\tthis.busy = Promise.resolve()\n\t\tthis.isModalBackgroundVisible = false\n\t\tfor (const column of this.viewColumns) {\n\t\t\tcolumn.ariaRole = this.getColumnRole(column)\n\t\t}\n\n\t\tthis.view = ({ attrs }): Children => {\n\t\t\tconst mainSliderColumns = this.getColumnsForMainSlider()\n\n\t\t\tconst allBackgroundColumnsAreVisible = this.visibleBackgroundColumns.length === mainSliderColumns.length\n\t\t\treturn m(\n\t\t\t\t\".fill-absolute.flex.col\",\n\t\t\t\t{\n\t\t\t\t\toncreate: (vnode) => {\n\t\t\t\t\t\tif (this.enableDrawer) this.attachTouchHandler(vnode.dom as HTMLElement)\n\t\t\t\t\t},\n\t\t\t\t\tonremove: () => {\n\t\t\t\t\t\tif (this.viewColumns[0].columnType === ColumnType.Foreground && this.viewColumns[0].isInForeground) {\n\t\t\t\t\t\t\tthis.viewColumns[0].isInForeground = false\n\t\t\t\t\t\t\tthis.isModalBackgroundVisible = false\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t[\n\t\t\t\t\tstyles.isUsingBottomNavigation() ? null : attrs.header,\n\t\t\t\t\tm(\n\t\t\t\t\t\t\".view-columns.flex-grow.rel\",\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\toncreate: (vnode) => {\n\t\t\t\t\t\t\t\tthis.domSlidingPart = vnode.dom as HTMLElement\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\twidth: this.getWidth() + \"px\",\n\t\t\t\t\t\t\t\ttransform: \"translateX(\" + this.getOffset(this.visibleBackgroundColumns[0]) + \"px)\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmainSliderColumns.map((column, index) =>\n\t\t\t\t\t\t\tm(column, {\n\t\t\t\t\t\t\t\t// Only apply right border if 1. all background columns are visible. 2. It's not the last column.\n\t\t\t\t\t\t\t\t// Perhaps the condition should be \"there's another visible column after this one\" but it works like this too\n\t\t\t\t\t\t\t\trightBorder: allBackgroundColumnsAreVisible && index !== mainSliderColumns.length - 1,\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t\t\tstyles.isUsingBottomNavigation() && !client.isCalendarApp() ? attrs.bottomNav : null,\n\t\t\t\t\tthis.getColumnsForOverlay().map((c) => m(c, {})),\n\t\t\t\t\tthis.enableDrawer ? this.createModalBackground() : null,\n\t\t\t\t],\n\t\t\t)\n\t\t}\n\t}\n\n\tprivate getColumnRole(column: ViewColumn): AriaLandmarks | null {\n\t\t// role  for foreground column is handled inside FolderColumnView\n\t\tif (column.columnType === ColumnType.Foreground) {\n\t\t\treturn null\n\t\t}\n\n\t\treturn this.mainColumn === column ? AriaLandmarks.Main : AriaLandmarks.Region\n\t}\n\n\tgetMainColumn(): ViewColumn {\n\t\treturn this.mainColumn\n\t}\n\n\tprivate getColumnsForMainSlider(): Array<ViewColumn> {\n\t\treturn this.viewColumns.filter((c) => c.columnType === ColumnType.Background || c.isVisible)\n\t}\n\n\tprivate getColumnsForOverlay(): Array<ViewColumn> {\n\t\treturn this.viewColumns.filter((c) => c.columnType === ColumnType.Foreground && !c.isVisible)\n\t}\n\n\tprivate createModalBackground(): Children {\n\t\tif (this.isModalBackgroundVisible) {\n\t\t\treturn [\n\t\t\t\tm(\".fill-absolute.will-change-alpha\", {\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tzIndex: LayerType.ForegroundMenu,\n\t\t\t\t\t},\n\t\t\t\t\toncreate: (vnode) => {\n\t\t\t\t\t\tthis.busy.then(() => animations.add(vnode.dom as HTMLElement, alpha(AlphaEnum.BackgroundColor, theme.modal_bg, 0, 0.5)))\n\t\t\t\t\t},\n\t\t\t\t\tonbeforeremove: (vnode) => {\n\t\t\t\t\t\treturn this.busy.then(() => animations.add(vnode.dom as HTMLElement, alpha(AlphaEnum.BackgroundColor, theme.modal_bg, 0.5, 0)))\n\t\t\t\t\t},\n\t\t\t\t\tonclick: () => {\n\t\t\t\t\t\tthis.focus(this.visibleBackgroundColumns[0])\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t]\n\t\t} else {\n\t\t\treturn []\n\t\t}\n\t}\n\n\tprivate updateVisibleBackgroundColumns() {\n\t\tthis.focusedColumn = this.focusedColumn || this.mainColumn\n\t\tlet visibleColumns: ViewColumn[] = [this.focusedColumn.columnType === ColumnType.Background ? this.focusedColumn : this.mainColumn]\n\t\tlet remainingSpace = window.innerWidth - visibleColumns[0].minWidth\n\t\tlet nextVisibleColumn = this.getNextVisibleColumn(visibleColumns, this.viewColumns)\n\n\t\twhile (nextVisibleColumn && remainingSpace >= nextVisibleColumn.minWidth) {\n\t\t\tvisibleColumns.push(nextVisibleColumn)\n\t\t\tremainingSpace -= nextVisibleColumn.minWidth\n\t\t\tnextVisibleColumn = this.getNextVisibleColumn(visibleColumns, this.viewColumns)\n\t\t}\n\n\t\t// visible columns must be sort by the initial column order\n\t\tvisibleColumns.sort((a, b) => this.viewColumns.indexOf(a) - this.viewColumns.indexOf(b))\n\n\t\tthis.distributeRemainingSpace(visibleColumns, remainingSpace)\n\n\t\tthis.setWidthForHiddenColumns(visibleColumns)\n\n\t\tfor (const column of this.viewColumns) {\n\t\t\tcolumn.isVisible = visibleColumns.includes(column)\n\t\t}\n\t\tthis.updateOffsets()\n\t\tthis.visibleBackgroundColumns = visibleColumns\n\n\t\tif (this.allColumnsVisible()) {\n\t\t\tthis.focusedColumn.isInForeground = false\n\t\t\tthis.isModalBackgroundVisible = false\n\n\t\t\tif (this.viewColumns[0].domColumn) {\n\t\t\t\tthis.viewColumns[0].domColumn.style.transform = \"\"\n\t\t\t}\n\t\t}\n\n\t\twindow.requestAnimationFrame(() => m.redraw())\n\t}\n\n\tgetVisibleBackgroundColumns(): ViewColumn[] {\n\t\treturn this.visibleBackgroundColumns.slice()\n\t}\n\n\tisUsingOverlayColumns(): boolean {\n\t\treturn this.viewColumns.every((c) => c.columnType !== ColumnType.Foreground || c.isVisible)\n\t}\n\n\t/**\n\t * Returns the next column which should become visible\n\t * @param visibleColumns All columns that will definitely be visible\n\t * @param allColumns All columns*\n\t */\n\tgetNextVisibleColumn(visibleColumns: ViewColumn[], allColumns: ViewColumn[]): ViewColumn | null {\n\t\t// First: try to find a background column which is not visible\n\t\tlet nextColumn = allColumns.find((column) => {\n\t\t\treturn column.columnType === ColumnType.Background && visibleColumns.indexOf(column) < 0\n\t\t})\n\n\t\tif (!nextColumn) {\n\t\t\t// Second: if no more background columns are available add the foreground column to the visible columns\n\t\t\tnextColumn = allColumns.find((column) => {\n\t\t\t\treturn column.columnType === ColumnType.Foreground && visibleColumns.indexOf(column) < 0\n\t\t\t})\n\t\t}\n\n\t\treturn nextColumn ?? null\n\t}\n\n\tgetBackgroundColumns(): ViewColumn[] {\n\t\treturn this.viewColumns.filter((c) => c.columnType === ColumnType.Background)\n\t}\n\n\t/**\n\t * distributes the remaining space to all visible columns\n\t * @param visibleColumns\n\t * @param remainingSpace\n\t */\n\tprivate distributeRemainingSpace(visibleColumns: ViewColumn[], remainingSpace: number) {\n\t\tlet spacePerColumn = remainingSpace / visibleColumns.length\n\t\tfor (const [index, visibleColumn] of visibleColumns.entries()) {\n\t\t\tif (visibleColumns.length - 1 === index) {\n\t\t\t\t// ignore max width for the last visible column\n\t\t\t\tvisibleColumn.width = visibleColumn.minWidth + remainingSpace\n\t\t\t} else {\n\t\t\t\tlet spaceForThisColumn = Math.min(spacePerColumn, visibleColumn.maxWidth - visibleColumn.minWidth)\n\t\t\t\tremainingSpace -= spaceForThisColumn\n\t\t\t\tvisibleColumn.width = visibleColumn.minWidth + spaceForThisColumn\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate setWidthForHiddenColumns(visibleColumns: ViewColumn[]) {\n\t\t// if all columns are visible there is no need to set the width\n\t\tif (this.viewColumns.length === visibleColumns.length) {\n\t\t\treturn\n\t\t}\n\n\t\t// if only one column is visible set the same width for all columns ignoring max width\n\t\tif (visibleColumns.length === 1) {\n\t\t\tfor (const column of this.viewColumns) {\n\t\t\t\tcolumn.width = visibleColumns[0].width\n\t\t\t}\n\t\t}\n\n\t\t// Reduce the width of the foreground button to keep always a small part of the background button visible.\n\t\tlet foreGroundColumn = this.viewColumns.find((column) => column.columnType === ColumnType.Foreground)\n\n\t\tif (foreGroundColumn) {\n\t\t\tlet remainingSpace = window.innerWidth - foreGroundColumn.minWidth - size.hpad_large\n\t\t\tlet additionalSpaceForColumn = Math.min(remainingSpace, foreGroundColumn.maxWidth - foreGroundColumn.minWidth)\n\t\t\tforeGroundColumn.width = foreGroundColumn.minWidth + additionalSpaceForColumn\n\t\t}\n\t}\n\n\tasync focus(viewColumn: ViewColumn): Promise<unknown> {\n\t\ttry {\n\t\t\tawait this.busy\n\t\t\tif (this.focusedColumn === viewColumn) return\n\t\t\t// hide the foreground column if the column is in foreground\n\t\t\tif (this.focusedColumn.isInForeground) {\n\t\t\t\tthis.busy = this.slideForegroundColumn(this.focusedColumn, false)\n\t\t\t\tawait this.busy\n\t\t\t}\n\n\t\t\tthis.focusedColumn = viewColumn\n\t\t\tif (\n\t\t\t\tviewColumn.columnType === ColumnType.Background &&\n\t\t\t\tthis.visibleBackgroundColumns.length === 1 &&\n\t\t\t\tthis.visibleBackgroundColumns.indexOf(viewColumn) < 0\n\t\t\t) {\n\t\t\t\tconst currentOffset = this.domSlidingPart.getBoundingClientRect().left\n\t\t\t\tthis.busy = this.slideBackgroundColumns(viewColumn, currentOffset, this.getOffset(viewColumn))\n\t\t\t} else if (viewColumn.columnType === ColumnType.Foreground && this.visibleBackgroundColumns.indexOf(viewColumn) < 0) {\n\t\t\t\tthis.busy = this.slideForegroundColumn(viewColumn, true)\n\t\t\t}\n\n\t\t\tawait this.busy\n\t\t} finally {\n\t\t\t// for updating header bar after animation\n\t\t\tm.redraw()\n\t\t\tviewColumn.focus()\n\t\t}\n\t}\n\n\twaitForAnimation(): Promise<unknown> {\n\t\treturn this.busy\n\t}\n\n\t/**\n\t * Executes a slide animation for the background buttons.\n\t */\n\tprivate slideBackgroundColumns(nextVisibleViewColumn: ViewColumn, oldOffset: number, newOffset: number): Promise<unknown> {\n\t\treturn animations\n\t\t\t.add(this.domSlidingPart, transform(TransformEnum.TranslateX, oldOffset, newOffset), {\n\t\t\t\teasing: ease.inOut,\n\t\t\t})\n\t\t\t.finally(() => {\n\t\t\t\t// replace the visible column\n\t\t\t\tconst [removed] = this.visibleBackgroundColumns.splice(0, 1, nextVisibleViewColumn)\n\n\t\t\t\tremoved.isVisible = false\n\t\t\t\tnextVisibleViewColumn.isVisible = true\n\t\t\t})\n\t}\n\n\t/**\n\t * Executes a slide animation for the foreground button.\n\t */\n\tprivate slideForegroundColumn(foregroundColumn: ViewColumn, toForeground: boolean): Promise<unknown> {\n\t\tif (!foregroundColumn.domColumn) return Promise.resolve()\n\n\t\t// Remove the `visibility: hidden` from the target column before starting the animation, so it is visible during the animation\n\t\tforegroundColumn.domColumn.style.visibility = \"visible\"\n\n\t\tconst colRect = foregroundColumn.domColumn.getBoundingClientRect()\n\n\t\tconst oldOffset = colRect.left\n\t\tlet newOffset = foregroundColumn.getOffsetForeground(toForeground)\n\t\tthis.isModalBackgroundVisible = toForeground\n\t\treturn animations\n\t\t\t.add(assertNotNull(foregroundColumn.domColumn, \"foreground column has no domcolumn\"), transform(TransformEnum.TranslateX, oldOffset, newOffset), {\n\t\t\t\teasing: ease.in,\n\t\t\t})\n\t\t\t.finally(() => {\n\t\t\t\tforegroundColumn.isInForeground = toForeground\n\t\t\t})\n\t}\n\n\tupdateOffsets() {\n\t\tlet offset = 0\n\n\t\tfor (let column of this.viewColumns) {\n\t\t\tif (column.columnType === ColumnType.Background || column.isVisible) {\n\t\t\t\tcolumn.offset = offset\n\t\t\t\toffset += column.width\n\t\t\t}\n\t\t}\n\t}\n\n\tgetWidth(): number {\n\t\tlet lastColumn = this.viewColumns[this.viewColumns.length - 1]\n\t\treturn lastColumn.offset + lastColumn.width\n\t}\n\n\tgetOffset(column: ViewColumn): number {\n\t\treturn 0 - column.offset\n\t}\n\n\tisFocusPreviousPossible(): boolean {\n\t\treturn this.getPreviousColumn() != null\n\t}\n\n\tfocusPreviousColumn(): Promise<unknown> {\n\t\tif (this.isFocusPreviousPossible()) {\n\t\t\twindow.getSelection()?.empty() // try to deselect text\n\t\t\treturn this.focus(assertNotNull(this.getPreviousColumn(), \"previous column was null!\"))\n\t\t} else {\n\t\t\treturn Promise.resolve()\n\t\t}\n\t}\n\n\tfocusNextColumn() {\n\t\tconst indexOfCurrent = this.viewColumns.indexOf(this.focusedColumn)\n\n\t\tif (indexOfCurrent + 1 < this.viewColumns.length) {\n\t\t\tthis.focus(this.viewColumns[indexOfCurrent + 1])\n\t\t}\n\t}\n\n\tgetPreviousColumn(): ViewColumn | null {\n\t\tif (this.viewColumns.indexOf(this.visibleBackgroundColumns[0]) > 0 && !this.focusedColumn.isInForeground) {\n\t\t\tlet visibleColumnIndex = this.viewColumns.indexOf(this.visibleBackgroundColumns[0])\n\t\t\treturn this.viewColumns[visibleColumnIndex - 1]\n\t\t}\n\n\t\treturn null\n\t}\n\n\tisFirstBackgroundColumnFocused(): boolean {\n\t\treturn this.viewColumns.filter((column) => column.columnType === ColumnType.Background).indexOf(this.focusedColumn) === 0\n\t}\n\n\tisForegroundColumnFocused(): boolean {\n\t\treturn this.focusedColumn && this.focusedColumn.columnType === ColumnType.Foreground\n\t}\n\n\tallColumnsVisible(): boolean {\n\t\treturn this.visibleBackgroundColumns.length === this.viewColumns.length\n\t}\n\n\tattachTouchHandler(element: HTMLElement) {\n\t\tlet lastGestureInfo: GestureInfo | null\n\t\tlet oldGestureInfo: GestureInfo | null\n\t\tlet initialGestureInfo: GestureInfo | null\n\t\tconst VERTICAL = 1\n\t\tconst HORIZONTAL = 2\n\t\tlet directionLock: 0 | 1 | 2 = 0\n\n\t\tconst gestureEnd = (event: any) => {\n\t\t\tconst safeLastGestureInfo = lastGestureInfo\n\t\t\tconst safeOldGestureInfo = oldGestureInfo\n\n\t\t\tif (safeLastGestureInfo && safeOldGestureInfo && !this.allColumnsVisible()) {\n\t\t\t\tconst touch = event.changedTouches[0]\n\t\t\t\tconst mainCol = this.mainColumn.domColumn\n\n\t\t\t\tconst sideCol = this.getSideColDom()\n\n\t\t\t\tif (!mainCol || !sideCol) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tconst mainColRect = mainCol.getBoundingClientRect()\n\t\t\t\tconst velocity = (safeLastGestureInfo.x - safeOldGestureInfo.x) / (safeLastGestureInfo.time - safeOldGestureInfo.time)\n\n\t\t\t\tconst show = () => {\n\t\t\t\t\tthis.focusedColumn = this.viewColumns[0]\n\t\t\t\t\tthis.busy = this.slideForegroundColumn(this.viewColumns[0], true)\n\t\t\t\t\tthis.isModalBackgroundVisible = true\n\t\t\t\t}\n\n\t\t\t\tconst hide = () => {\n\t\t\t\t\tthis.focusedColumn = this.viewColumns[1]\n\t\t\t\t\tthis.busy = this.slideForegroundColumn(this.viewColumns[0], false)\n\t\t\t\t\tthis.isModalBackgroundVisible = false\n\t\t\t\t}\n\n\t\t\t\t// Gesture for the side column\n\t\t\t\tif (this.getBackgroundColumns()[0].isVisible || this.focusedColumn.isInForeground) {\n\t\t\t\t\t// Gesture was with enough velocity to show the menu\n\t\t\t\t\tif (velocity > 0.8) {\n\t\t\t\t\t\tshow() // Gesture was with enough velocity to hide the menu and we're not scrolling vertically\n\t\t\t\t\t} else if (velocity < -0.8 && directionLock !== VERTICAL) {\n\t\t\t\t\t\thide()\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Finger was released without much velocity so if it's further than some distance from edge, open menu. Otherwise, close it.\n\t\t\t\t\t\tif (touch.pageX > mainColRect.left + 100) {\n\t\t\t\t\t\t\tshow()\n\t\t\t\t\t\t} else if (directionLock !== VERTICAL) {\n\t\t\t\t\t\t\thide()\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// Gesture for sliding other columns\n\t\t\t\t\tif ((safeLastGestureInfo.x > window.innerWidth / 3 || velocity > 0.8) && directionLock !== VERTICAL) {\n\t\t\t\t\t\tthis.focusPreviousColumn()\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst colRect = this.domSlidingPart.getBoundingClientRect()\n\n\t\t\t\t\t\t// Re-focus the column to reset offset changed by the gesture\n\t\t\t\t\t\tthis.busy = this.slideBackgroundColumns(this.focusedColumn, colRect.left, -this.focusedColumn.offset)\n\t\t\t\t\t\tthis.focus(this.focusedColumn)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.busy.then(() => m.redraw())\n\t\t\t}\n\n\t\t\t// If this is the first touch and not another one\n\t\t\tif (safeLastGestureInfo && safeLastGestureInfo.identifier === event.changedTouches[0].identifier) {\n\t\t\t\tlastGestureInfo = null\n\t\t\t\toldGestureInfo = null\n\t\t\t\tinitialGestureInfo = null\n\t\t\t\tdirectionLock = 0\n\t\t\t}\n\t\t}\n\n\t\tconst listeners = {\n\t\t\ttouchstart: (event: any) => {\n\t\t\t\tif (lastGestureInfo) {\n\t\t\t\t\t// Already detecting a gesture, ignore second one\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tconst mainCol = this.mainColumn.domColumn\n\n\t\t\t\tconst sideCol = this.getSideColDom()\n\n\t\t\t\tif (!mainCol || !sideCol || this.allColumnsVisible()) {\n\t\t\t\t\tlastGestureInfo = null\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tif (event.touches.length === 1 && (this.viewColumns[0].isInForeground || event.touches[0].pageX < 40)) {\n\t\t\t\t\t// Only stop propogation while the menu is not yet fully visible\n\t\t\t\t\tif (!this.viewColumns[0].isInForeground) {\n\t\t\t\t\t\tevent.stopPropagation()\n\t\t\t\t\t}\n\n\t\t\t\t\tlastGestureInfo = initialGestureInfo = gestureInfoFromTouch(event.touches[0])\n\t\t\t\t}\n\t\t\t},\n\t\t\ttouchmove: (event: any) => {\n\t\t\t\tconst sideCol = this.getSideColDom()\n\n\t\t\t\tif (!sideCol || !this.mainColumn || this.allColumnsVisible()) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tconst gestureInfo = lastGestureInfo\n\t\t\t\tconst safeInitialGestureInfo = initialGestureInfo\n\n\t\t\t\tif (gestureInfo && safeInitialGestureInfo && event.touches.length === 1) {\n\t\t\t\t\tconst touch = event.touches[0]\n\t\t\t\t\tconst newTouchPos = touch.pageX\n\t\t\t\t\tconst sideColRect = sideCol.getBoundingClientRect()\n\t\t\t\t\toldGestureInfo = lastGestureInfo\n\t\t\t\t\tconst safeLastInfo = (lastGestureInfo = gestureInfoFromTouch(touch))\n\n\t\t\t\t\t// If we have horizonal lock or we don't have vertical lock but would like to acquire horizontal one, the lock horizontally\n\t\t\t\t\tif (directionLock === HORIZONTAL || (directionLock !== VERTICAL && Math.abs(safeLastInfo.x - safeInitialGestureInfo.x) > 30)) {\n\t\t\t\t\t\tdirectionLock = HORIZONTAL\n\n\t\t\t\t\t\t// Gesture for side column\n\t\t\t\t\t\tif (this.getBackgroundColumns()[0].isVisible || this.focusedColumn.isInForeground) {\n\t\t\t\t\t\t\tconst newTranslate = Math.min(sideColRect.left - (gestureInfo.x - newTouchPos), 0)\n\t\t\t\t\t\t\tsideCol.style.transform = `translateX(${newTranslate}px)`\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Gesture for background column\n\t\t\t\t\t\t\tconst slidingDomRect = this.domSlidingPart.getBoundingClientRect()\n\n\t\t\t\t\t\t\t// Do not allow to move column to the left\n\t\t\t\t\t\t\tconst newTranslate = Math.max(slidingDomRect.left - (gestureInfo.x - newTouchPos), -this.focusedColumn.offset)\n\t\t\t\t\t\t\tthis.domSlidingPart.style.transform = `translateX(${newTranslate}px)`\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Scroll events are not cancellable and browsees complain a lot\n\t\t\t\t\t\tif (event.cancelable !== false) event.preventDefault() // If we don't have a vertical lock but we would like to acquire one, get it\n\t\t\t\t\t} else if (directionLock !== VERTICAL && Math.abs(safeLastInfo.y - safeInitialGestureInfo.y) > 30) {\n\t\t\t\t\t\tdirectionLock = VERTICAL\n\t\t\t\t\t}\n\n\t\t\t\t\tevent.stopPropagation()\n\t\t\t\t}\n\t\t\t},\n\t\t\ttouchend: gestureEnd,\n\t\t\ttouchcancel: gestureEnd,\n\t\t}\n\n\t\tfor (let [name, listener] of Object.entries(listeners)) {\n\t\t\telement.addEventListener(name, listener, true)\n\t\t}\n\t}\n}\n"]}