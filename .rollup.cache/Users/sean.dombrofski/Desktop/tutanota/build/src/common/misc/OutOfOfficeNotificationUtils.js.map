{"version":3,"file":"OutOfOfficeNotificationUtils.js","sourceRoot":"","sources":["../../../../src/common/misc/OutOfOfficeNotificationUtils.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,8BAA8B,EAAE,MAAM,sCAAsC,CAAA;AACrF,OAAO,EAAE,UAAU,EAAE,MAAM,aAAa,CAAA;AACxC,OAAO,EAAE,IAAI,EAAE,MAAM,qBAAqB,CAAA;AAC1C,OAAO,EAAE,OAAO,EAAE,MAAM,2BAA2B,CAAA;AACnD,OAAO,EAAE,uBAAuB,EAAE,MAAM,sCAAsC,CAAA;AAC9E,OAAO,EAAE,aAAa,EAAE,MAAM,uBAAuB,CAAA;AAErD;;GAEG;AACH,MAAM,UAAU,6BAA6B,CAAC,YAAqC,EAAE,WAAiB;IACrG,IAAI,YAAY,CAAC,OAAO,EAAE,CAAC;QAC1B,IAAI,YAAY,CAAC,SAAS,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;YACrD,OAAO,WAAW,IAAI,YAAY,CAAC,SAAS,CAAA;QAC7C,CAAC;aAAM,IAAI,YAAY,CAAC,SAAS,IAAI,YAAY,CAAC,OAAO,EAAE,CAAC;YAC3D,OAAO,WAAW,IAAI,YAAY,CAAC,SAAS,IAAI,WAAW,GAAG,YAAY,CAAC,OAAO,CAAA;QACnF,CAAC;aAAM,CAAC;YACP,iCAAiC;YACjC,OAAO,IAAI,CAAA;QACZ,CAAC;IACF,CAAC;SAAM,CAAC;QACP,OAAO,KAAK,CAAA;IACb,CAAC;AACF,CAAC;AAED,MAAM,UAAU,mBAAmB,CAAC,YAA4C;IAC/E,IAAI,YAAY,IAAI,YAAY,CAAC,OAAO,EAAE,CAAC;QAC1C,IAAI,SAAS,GAAG,EAAE,CAAA;QAElB,IAAI,YAAY,CAAC,SAAS,EAAE,CAAC;YAC5B,SAAS,IAAI,IAAI,GAAG,UAAU,CAAC,YAAY,CAAC,SAAS,CAAC,CAAA;YAEtD,IAAI,YAAY,CAAC,OAAO,EAAE,CAAC;gBAC1B,yHAAyH;gBACzH,MAAM,cAAc,GAAG,aAAa,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAA;gBAC9D,SAAS,IAAI,KAAK,GAAG,UAAU,CAAC,cAAc,CAAC,CAAA;YAChD,CAAC;YAED,SAAS,IAAI,GAAG,CAAA;QACjB,CAAC;QAED,OAAO,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAC,GAAG,SAAS,CAAA;IAC/C,CAAC;SAAM,CAAC;QACP,OAAO,IAAI,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAA;IACrC,CAAC;AACF,CAAC;AAED;;;;GAIG;AACH,MAAM,UAAU,2BAA2B,CAAC,0BAAmC;IAC9E,IAAI,0BAA0B,EAAE,CAAC;QAChC,OAAO,IAAI,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAA;IAC3C,CAAC;SAAM,CAAC;QACP,OAAO,IAAI,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAA;IAC3C,CAAC;AACF,CAAC;AAED;;;GAGG;AACH,MAAM,UAAU,2BAA2B;IAC1C,MAAM,cAAc,GAAG,OAAO,CAAC,MAAM,CAAC,iBAAiB,EAAE,CAAC,0BAA0B,EAAE,CAAA;IACtF,OAAO,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,uBAAuB,EAAE,cAAc,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,SAAS,EAAE,EAAE;QAClG,IAAI,SAAS,CAAC,uBAAuB,EAAE,CAAC;YACvC,OAAO,OAAO,CAAC,YAAY,CAAC,IAAI,CAA0B,8BAA8B,EAAE,SAAS,CAAC,uBAAuB,CAAC,CAAA;QAC7H,CAAC;aAAM,CAAC;YACP,OAAO,IAAI,CAAA;QACZ,CAAC;IACF,CAAC,CAAC,CAAA;AACH,CAAC","sourcesContent":["import type { OutOfOfficeNotification } from \"../api/entities/tutanota/TypeRefs.js\"\nimport { OutOfOfficeNotificationTypeRef } from \"../api/entities/tutanota/TypeRefs.js\"\nimport { formatDate } from \"./Formatter\"\nimport { lang } from \"./LanguageViewModel\"\nimport { locator } from \"../api/main/CommonLocator\"\nimport { MailboxGroupRootTypeRef } from \"../api/entities/tutanota/TypeRefs.js\"\nimport { getDayShifted } from \"@tutao/tutanota-utils\"\n\n/**\n * Returns true if notifications are currently sent.\n */\nexport function isNotificationCurrentlyActive(notification: OutOfOfficeNotification, currentDate: Date): boolean {\n\tif (notification.enabled) {\n\t\tif (notification.startDate && !notification.endDate) {\n\t\t\treturn currentDate >= notification.startDate\n\t\t} else if (notification.startDate && notification.endDate) {\n\t\t\treturn currentDate >= notification.startDate && currentDate < notification.endDate\n\t\t} else {\n\t\t\t// no dates specified but enabled\n\t\t\treturn true\n\t\t}\n\t} else {\n\t\treturn false\n\t}\n}\n\nexport function formatActivateState(notification: OutOfOfficeNotification | null): string {\n\tif (notification && notification.enabled) {\n\t\tlet timeRange = \"\"\n\n\t\tif (notification.startDate) {\n\t\t\ttimeRange += \" (\" + formatDate(notification.startDate)\n\n\t\t\tif (notification.endDate) {\n\t\t\t\t// end dates are stored as the beginning of the following date. We subtract one day to show the correct date to the user.\n\t\t\t\tconst shiftedEndDate = getDayShifted(notification.endDate, -1)\n\t\t\t\ttimeRange += \" - \" + formatDate(shiftedEndDate)\n\t\t\t}\n\n\t\t\ttimeRange += \")\"\n\t\t}\n\n\t\treturn lang.get(\"activated_label\") + timeRange\n\t} else {\n\t\treturn lang.get(\"deactivated_label\")\n\t}\n}\n\n/**\n *\n * @param organizationMessageEnabled true if a special messagesfor senders from the same organization is setup\n * @returns {string} the label for default notifications (depends on whether only default notifications or both default and same organization notifications are enabled)\n */\nexport function getDefaultNotificationLabel(organizationMessageEnabled: boolean): string {\n\tif (organizationMessageEnabled) {\n\t\treturn lang.get(\"outOfOfficeExternal_msg\")\n\t} else {\n\t\treturn lang.get(\"outOfOfficeEveryone_msg\")\n\t}\n}\n\n/**\n * Loads the out of office notification from the server and shifts the end date (from the first second of the following day to the first second of the last day)\n * which is needed to display the correct end date.\n */\nexport function loadOutOfOfficeNotification(): Promise<OutOfOfficeNotification | null> {\n\tconst mailMembership = locator.logins.getUserController().getUserMailGroupMembership()\n\treturn locator.entityClient.load(MailboxGroupRootTypeRef, mailMembership.group).then((grouproot) => {\n\t\tif (grouproot.outOfOfficeNotification) {\n\t\t\treturn locator.entityClient.load<OutOfOfficeNotification>(OutOfOfficeNotificationTypeRef, grouproot.outOfOfficeNotification)\n\t\t} else {\n\t\t\treturn null\n\t\t}\n\t})\n}\n"]}