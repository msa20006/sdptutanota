{"version":3,"file":"UpgradeSubscriptionPage.js","sourceRoot":"","sources":["../../../../src/common/subscription/UpgradeSubscriptionPage.ts"],"names":[],"mappings":"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","sourcesContent":["import m, { Children, Vnode, VnodeDOM } from \"mithril\"\nimport stream from \"mithril/stream\"\nimport { lang, type TranslationKey } from \"../misc/LanguageViewModel\"\nimport type { SubscriptionParameters, UpgradeSubscriptionData } from \"./UpgradeSubscriptionWizard\"\nimport { SubscriptionActionButtons, SubscriptionSelector } from \"./SubscriptionSelector\"\nimport { Button, ButtonType } from \"../gui/base/Button.js\"\nimport { UpgradeType } from \"./SubscriptionUtils\"\nimport { Dialog, DialogType } from \"../gui/base/Dialog\"\nimport type { WizardPageAttrs, WizardPageN } from \"../gui/base/WizardDialog.js\"\nimport { emitWizardEvent, WizardEventType } from \"../gui/base/WizardDialog.js\"\nimport { DefaultAnimationTime } from \"../gui/animation/Animations\"\nimport { Const, Keys, PlanType, SubscriptionType } from \"../api/common/TutanotaConstants\"\nimport { Checkbox } from \"../gui/base/Checkbox.js\"\nimport { locator } from \"../api/main/CommonLocator\"\nimport { UsageTest } from \"@tutao/tutanota-usagetests\"\nimport { UpgradePriceType } from \"./FeatureListProvider\"\nimport { asPaymentInterval, PaymentInterval } from \"./PriceUtils.js\"\nimport { lazy } from \"@tutao/tutanota-utils\"\nimport { LoginButtonAttrs } from \"../gui/base/buttons/LoginButton.js\"\nimport { stringToSubscriptionType } from \"../misc/LoginUtils.js\"\nimport { isReferenceDateWithinCyberMondayCampaign } from \"../misc/CyberMondayUtils.js\"\n\n/** Subscription type passed from the website */\nexport const PlanTypeParameter = Object.freeze({\n\tFREE: \"free\",\n\tREVOLUTIONARY: \"revolutionary\",\n\tLEGEND: \"legend\",\n\tESSENTIAL: \"essential\",\n\tADVANCED: \"advanced\",\n\tUNLIMITED: \"unlimited\",\n})\n\nexport class UpgradeSubscriptionPage implements WizardPageN<UpgradeSubscriptionData> {\n\tprivate _dom: HTMLElement | null = null\n\tprivate __signupFreeTest?: UsageTest\n\tprivate __signupPaidTest?: UsageTest\n\tprivate upgradeType: UpgradeType | null = null\n\n\toncreate(vnode: VnodeDOM<WizardPageAttrs<UpgradeSubscriptionData>>): void {\n\t\tthis._dom = vnode.dom as HTMLElement\n\t\tconst subscriptionParameters = vnode.attrs.data.subscriptionParameters\n\t\tthis.upgradeType = vnode.attrs.data.upgradeType\n\n\t\tthis.__signupFreeTest = locator.usageTestController.getTest(\"signup.free\")\n\t\tthis.__signupFreeTest.active = false\n\n\t\tthis.__signupPaidTest = locator.usageTestController.getTest(\"signup.paid\")\n\t\tthis.__signupPaidTest.active = false\n\n\t\tif (subscriptionParameters) {\n\t\t\tconst paymentInterval: PaymentInterval = subscriptionParameters.interval\n\t\t\t\t? asPaymentInterval(subscriptionParameters.interval)\n\t\t\t\t: PaymentInterval.Yearly\n\t\t\t// We automatically route to the next page; when we want to go back from the second page, we do not want to keep calling nextPage\n\t\t\tvnode.attrs.data.subscriptionParameters = null\n\t\t\tvnode.attrs.data.options.paymentInterval = stream(paymentInterval)\n\t\t\tthis.goToNextPageWithPreselectedSubscription(subscriptionParameters, vnode.attrs.data)\n\t\t}\n\t}\n\n\tview(vnode: Vnode<WizardPageAttrs<UpgradeSubscriptionData>>): Children {\n\t\tconst data = vnode.attrs.data\n\t\tlet availablePlans = vnode.attrs.data.acceptedPlans\n\t\t// newAccountData is filled in when signing up and then going back in the signup process\n\t\t// If the user has selected a tuta.com address we want to prevent them from selecting a free plan at this point\n\t\tif (!!data.newAccountData && data.newAccountData.mailAddress.includes(\"tuta.com\") && availablePlans.includes(PlanType.Free)) {\n\t\t\tavailablePlans = availablePlans.filter((plan) => plan != PlanType.Free)\n\t\t}\n\n\t\tconst isYearly = data.options.paymentInterval() === PaymentInterval.Yearly\n\t\tconst isCyberMonday = isReferenceDateWithinCyberMondayCampaign(Const.CURRENT_DATE ?? new Date())\n\t\tconst shouldApplyCyberMonday = isYearly && isCyberMonday\n\n\t\tconst subscriptionActionButtons: SubscriptionActionButtons = {\n\t\t\t[PlanType.Free]: () => {\n\t\t\t\treturn {\n\t\t\t\t\tlabel: \"pricing.select_action\",\n\t\t\t\t\tonclick: () => this.selectFree(data),\n\t\t\t\t} as LoginButtonAttrs\n\t\t\t},\n\t\t\t[PlanType.Revolutionary]: this.createUpgradeButton(data, PlanType.Revolutionary),\n\t\t\t[PlanType.Legend]: () => ({\n\t\t\t\tlabel: shouldApplyCyberMonday ? \"pricing.cyber_monday_select_action\" : \"pricing.select_action\",\n\t\t\t\tclass: shouldApplyCyberMonday ? \"accent-bg-cyber-monday\" : undefined,\n\t\t\t\tonclick: () => this.setNonFreeDataAndGoToNextPage(data, PlanType.Legend),\n\t\t\t}),\n\t\t\t[PlanType.Essential]: this.createUpgradeButton(data, PlanType.Essential),\n\t\t\t[PlanType.Advanced]: this.createUpgradeButton(data, PlanType.Advanced),\n\t\t\t[PlanType.Unlimited]: this.createUpgradeButton(data, PlanType.Unlimited),\n\t\t}\n\t\treturn m(\".pt\", [\n\t\t\tm(SubscriptionSelector, {\n\t\t\t\toptions: data.options,\n\t\t\t\tpriceInfoTextId: data.priceInfoTextId,\n\t\t\t\tboxWidth: 230,\n\t\t\t\tboxHeight: 270,\n\t\t\t\tacceptedPlans: availablePlans,\n\t\t\t\tallowSwitchingPaymentInterval: data.upgradeType !== UpgradeType.Switch,\n\t\t\t\tcurrentPlanType: data.currentPlan,\n\t\t\t\tactionButtons: subscriptionActionButtons,\n\t\t\t\tfeatureListProvider: vnode.attrs.data.featureListProvider,\n\t\t\t\tpriceAndConfigProvider: vnode.attrs.data.planPrices,\n\t\t\t\tmultipleUsersAllowed: vnode.attrs.data.multipleUsersAllowed,\n\t\t\t\tmsg: data.msg,\n\t\t\t}),\n\t\t])\n\t}\n\n\tselectFree(data: UpgradeSubscriptionData) {\n\t\t// Confirmation of free subscription selection (click on subscription selector)\n\t\tif (this.__signupPaidTest) {\n\t\t\tthis.__signupPaidTest.active = false\n\t\t}\n\n\t\tif (this.__signupFreeTest && this.upgradeType == UpgradeType.Signup) {\n\t\t\tthis.__signupFreeTest.active = true\n\t\t\tthis.__signupFreeTest.getStage(0).complete()\n\t\t}\n\t\tconfirmFreeSubscription().then((confirmed) => {\n\t\t\tif (confirmed) {\n\t\t\t\t// Confirmation of free/business dialog (click on ok)\n\t\t\t\tthis.__signupFreeTest?.getStage(1).complete()\n\t\t\t\tdata.type = PlanType.Free\n\t\t\t\tdata.price = null\n\t\t\t\tdata.nextYearPrice = null\n\t\t\t\tthis.showNextPage()\n\t\t\t}\n\t\t})\n\t}\n\n\tshowNextPage(): void {\n\t\tif (this._dom) {\n\t\t\temitWizardEvent(this._dom, WizardEventType.SHOW_NEXT_PAGE)\n\t\t}\n\t}\n\n\tgoToNextPageWithPreselectedSubscription(subscriptionParameters: SubscriptionParameters, data: UpgradeSubscriptionData): void {\n\t\tlet subscriptionType: SubscriptionType | null\n\t\ttry {\n\t\t\tsubscriptionType = subscriptionParameters.type == null ? null : stringToSubscriptionType(subscriptionParameters.type)\n\t\t} catch (e) {\n\t\t\tsubscriptionType = null\n\t\t}\n\n\t\tif (subscriptionType === SubscriptionType.Personal || subscriptionType === SubscriptionType.PaidPersonal) {\n\t\t\t// we have to individually change the data so that when returning we show the chose subscription type (private/business) | false = private, true = business\n\t\t\tdata.options.businessUse(false)\n\n\t\t\tswitch (subscriptionParameters.subscription) {\n\t\t\t\tcase PlanTypeParameter.FREE:\n\t\t\t\t\tthis.selectFree(data)\n\t\t\t\t\tbreak\n\n\t\t\t\tcase PlanTypeParameter.REVOLUTIONARY:\n\t\t\t\t\tthis.setNonFreeDataAndGoToNextPage(data, PlanType.Revolutionary)\n\t\t\t\t\tbreak\n\n\t\t\t\tcase PlanTypeParameter.LEGEND:\n\t\t\t\t\tthis.setNonFreeDataAndGoToNextPage(data, PlanType.Legend)\n\t\t\t\t\tbreak\n\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.log(\"Unknown subscription passed: \", subscriptionParameters)\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t} else if (subscriptionType === SubscriptionType.Business) {\n\t\t\tdata.options.businessUse(true)\n\n\t\t\tswitch (subscriptionParameters.subscription) {\n\t\t\t\tcase PlanTypeParameter.ESSENTIAL:\n\t\t\t\t\tthis.setNonFreeDataAndGoToNextPage(data, PlanType.Essential)\n\t\t\t\t\tbreak\n\n\t\t\t\tcase PlanTypeParameter.ADVANCED:\n\t\t\t\t\tthis.setNonFreeDataAndGoToNextPage(data, PlanType.Advanced)\n\t\t\t\t\tbreak\n\n\t\t\t\tcase PlanTypeParameter.UNLIMITED:\n\t\t\t\t\tthis.setNonFreeDataAndGoToNextPage(data, PlanType.Unlimited)\n\t\t\t\t\tbreak\n\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.log(\"Unknown subscription passed: \", subscriptionParameters)\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t} else {\n\t\t\tconsole.log(\"Unknown subscription type passed: \", subscriptionParameters)\n\t\t}\n\t}\n\n\tsetNonFreeDataAndGoToNextPage(data: UpgradeSubscriptionData, planType: PlanType): void {\n\t\t// Confirmation of paid subscription selection (click on subscription selector)\n\t\tif (this.__signupFreeTest) {\n\t\t\tthis.__signupFreeTest.active = false\n\t\t}\n\n\t\tif (this.__signupPaidTest && this.upgradeType == UpgradeType.Signup) {\n\t\t\tthis.__signupPaidTest.active = true\n\t\t\tthis.__signupPaidTest.getStage(0).complete()\n\t\t}\n\t\tdata.type = planType\n\t\tconst { planPrices, options } = data\n\t\ttry {\n\t\t\t// `data.price.rawPrice` is used for the amount parameter in the Braintree credit card verification call, so we do not include currency locale outside iOS.\n\t\t\tdata.price = planPrices.getSubscriptionPriceWithCurrency(options.paymentInterval(), data.type, UpgradePriceType.PlanActualPrice)\n\t\t\tconst nextYear = planPrices.getSubscriptionPriceWithCurrency(options.paymentInterval(), data.type, UpgradePriceType.PlanNextYearsPrice)\n\t\t\tdata.nextYearPrice = data.price.rawPrice !== nextYear.rawPrice ? nextYear : null\n\t\t} catch (e) {\n\t\t\tconsole.error(e)\n\t\t\tDialog.message(\"appStoreNotAvailable_msg\")\n\t\t\treturn\n\t\t}\n\t\tthis.showNextPage()\n\t}\n\n\tcreateUpgradeButton(data: UpgradeSubscriptionData, planType: PlanType): lazy<LoginButtonAttrs> {\n\t\treturn () => ({\n\t\t\tlabel: \"pricing.select_action\",\n\t\t\tonclick: () => this.setNonFreeDataAndGoToNextPage(data, planType),\n\t\t})\n\t}\n}\n\nfunction confirmFreeSubscription(): Promise<boolean> {\n\treturn new Promise((resolve) => {\n\t\tlet oneAccountValue = stream(false)\n\t\tlet privateUseValue = stream(false)\n\t\tlet dialog: Dialog\n\n\t\tconst closeAction = (confirmed: boolean) => {\n\t\t\tdialog.close()\n\t\t\tsetTimeout(() => resolve(confirmed), DefaultAnimationTime)\n\t\t}\n\t\tconst isFormValid = () => oneAccountValue() && privateUseValue()\n\t\tdialog = new Dialog(DialogType.Alert, {\n\t\t\tview: () => [\n\t\t\t\t// m(\".h2.pb\", lang.get(\"confirmFreeAccount_label\")),\n\t\t\t\tm(\"#dialog-message.dialog-contentButtonsBottom.text-break.text-prewrap.selectable\", lang.getTranslationText(\"freeAccountInfo_msg\")),\n\t\t\t\tm(\".dialog-contentButtonsBottom\", [\n\t\t\t\t\tm(Checkbox, {\n\t\t\t\t\t\tlabel: () => lang.get(\"confirmNoOtherFreeAccount_msg\"),\n\t\t\t\t\t\tchecked: oneAccountValue(),\n\t\t\t\t\t\tonChecked: oneAccountValue,\n\t\t\t\t\t}),\n\t\t\t\t\tm(Checkbox, {\n\t\t\t\t\t\tlabel: () => lang.get(\"confirmPrivateUse_msg\"),\n\t\t\t\t\t\tchecked: privateUseValue(),\n\t\t\t\t\t\tonChecked: privateUseValue,\n\t\t\t\t\t}),\n\t\t\t\t]),\n\t\t\t\tm(\".flex-center.dialog-buttons\", [\n\t\t\t\t\tm(Button, {\n\t\t\t\t\t\tlabel: \"cancel_action\",\n\t\t\t\t\t\tclick: () => closeAction(false),\n\t\t\t\t\t\ttype: ButtonType.Secondary,\n\t\t\t\t\t}),\n\t\t\t\t\tm(Button, {\n\t\t\t\t\t\tlabel: \"ok_action\",\n\t\t\t\t\t\tclick: () => {\n\t\t\t\t\t\t\tif (isFormValid()) closeAction(true)\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttype: ButtonType.Primary,\n\t\t\t\t\t}),\n\t\t\t\t]),\n\t\t\t],\n\t\t})\n\t\t\t.setCloseHandler(() => closeAction(false))\n\t\t\t.addShortcut({\n\t\t\t\tkey: Keys.ESC,\n\t\t\t\tshift: false,\n\t\t\t\texec: () => closeAction(false),\n\t\t\t\thelp: \"cancel_action\",\n\t\t\t})\n\t\t\t.addShortcut({\n\t\t\t\tkey: Keys.RETURN,\n\t\t\t\tshift: false,\n\t\t\t\texec: () => {\n\t\t\t\t\tif (isFormValid()) closeAction(true)\n\t\t\t\t},\n\t\t\t\thelp: \"ok_action\",\n\t\t\t})\n\t\t\t.show()\n\t})\n}\n\nexport class UpgradeSubscriptionPageAttrs implements WizardPageAttrs<UpgradeSubscriptionData> {\n\tdata: UpgradeSubscriptionData\n\n\tconstructor(upgradeData: UpgradeSubscriptionData) {\n\t\tthis.data = upgradeData\n\t}\n\n\theaderTitle(): TranslationKey {\n\t\treturn \"subscription_label\"\n\t}\n\n\tnextAction(showErrorDialog: boolean): Promise<boolean> {\n\t\t// next action not available for this page\n\t\treturn Promise.resolve(true)\n\t}\n\n\tisSkipAvailable(): boolean {\n\t\treturn false\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn true\n\t}\n}\n"]}