{"version":3,"file":"AccountMaintenanceSettings.js","sourceRoot":"","sources":["../../../../src/common/settings/AccountMaintenanceSettings.ts"],"names":[],"mappings":"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","sourcesContent":["import m, { Component, Vnode } from \"mithril\"\nimport { lang } from \"../misc/LanguageViewModel.js\"\nimport { DropDownSelector } from \"../gui/base/DropDownSelector.js\"\nimport {\n\tAuditLogEntry,\n\tAuditLogEntryTypeRef,\n\tcreateSurveyData,\n\tCustomer,\n\tCustomerInfo,\n\tCustomerPropertiesTypeRef,\n\tCustomerServerProperties,\n\tCustomerTypeRef,\n\tGroupInfo,\n\tGroupInfoTypeRef,\n} from \"../api/entities/sys/TypeRefs.js\"\nimport { ExpandableTable } from \"./ExpandableTable.js\"\nimport { showProgressDialog } from \"../gui/dialogs/ProgressDialog.js\"\nimport { SettingsExpander } from \"./SettingsExpander.js\"\nimport { LoginButton } from \"../gui/base/buttons/LoginButton.js\"\nimport { showLeavingUserSurveyWizard } from \"../subscription/LeavingUserSurveyWizard.js\"\nimport { SURVEY_VERSION_NUMBER } from \"../subscription/LeavingUserSurveyConstants.js\"\nimport { showDeleteAccountDialog } from \"../subscription/DeleteAccountDialog.js\"\nimport stream from \"mithril/stream\"\nimport Stream from \"mithril/stream\"\nimport { ColumnWidth, TableAttrs, TableLineAttrs } from \"../gui/base/Table.js\"\nimport { LazyLoaded, neverNull, noOp, ofClass, promiseMap } from \"@tutao/tutanota-utils\"\nimport { BootIcons } from \"../gui/base/icons/BootIcons.js\"\nimport { ButtonSize } from \"../gui/base/ButtonSize.js\"\nimport { GENERATED_MAX_ID } from \"../api/common/utils/EntityUtils.js\"\nimport { formatDateTime, formatDateTimeFromYesterdayOn } from \"../misc/Formatter.js\"\nimport { Icons } from \"../gui/base/icons/Icons.js\"\nimport { NotAuthorizedError } from \"../api/common/error/RestError.js\"\nimport { Dialog } from \"../gui/base/Dialog.js\"\nimport { EntityUpdateData, isUpdateForTypeRef } from \"../api/common/utils/EntityUpdateUtils.js\"\nimport { locator } from \"../api/main/CommonLocator.js\"\n\nexport type AccountMaintenanceUpdateNotifier = (updates: ReadonlyArray<EntityUpdateData>) => void\n\nexport interface AccountMaintenanceSettingsAttrs {\n\tcustomerServerProperties: stream<Readonly<CustomerServerProperties>>\n\tsetOnUpdateHandler: (fn: AccountMaintenanceUpdateNotifier) => void\n}\n\nexport class AccountMaintenanceSettings implements Component<AccountMaintenanceSettingsAttrs> {\n\tprivate requirePasswordUpdateAfterReset = false\n\tprivate saveIpAddress = false\n\tprivate readonly usageDataExpanded = stream(false)\n\tprivate readonly deleteAccountExpanded = stream(false)\n\tprivate auditLogLines: ReadonlyArray<TableLineAttrs> = []\n\tprivate auditLogLoaded = false\n\n\tprivate customer: Customer | null = null\n\tprivate readonly customerInfo = new LazyLoaded<CustomerInfo>(() => locator.logins.getUserController().loadCustomerInfo())\n\tprivate readonly customerProperties = new LazyLoaded(() =>\n\t\tlocator.entityClient\n\t\t\t.load(CustomerTypeRef, neverNull(locator.logins.getUserController().user.customer))\n\t\t\t.then((customer) => locator.entityClient.load(CustomerPropertiesTypeRef, neverNull(customer.properties))),\n\t)\n\n\tconstructor(vnode: Vnode<AccountMaintenanceSettingsAttrs>) {\n\t\tvnode.attrs.customerServerProperties.map((props) => {\n\t\t\tthis.requirePasswordUpdateAfterReset = props.requirePasswordUpdateAfterReset\n\t\t\tthis.saveIpAddress = props.saveEncryptedIpAddressInSession\n\t\t})\n\n\t\tthis.customerProperties.getAsync().then(m.redraw)\n\t\tvnode.attrs.setOnUpdateHandler((updates: EntityUpdateData[]) => this.handleEventUpdates(updates))\n\t\tthis.view = this.view.bind(this)\n\t\tthis.updateAuditLog()\n\t}\n\n\tview({ attrs }: Vnode<AccountMaintenanceSettingsAttrs>) {\n\t\tconst auditLogTableAttrs: TableAttrs = {\n\t\t\tcolumnHeading: [\"action_label\", \"modified_label\", \"time_label\"],\n\t\t\tcolumnWidths: [ColumnWidth.Largest, ColumnWidth.Largest, ColumnWidth.Small],\n\t\t\tshowActionButtonColumn: true,\n\t\t\tlines: this.auditLogLines,\n\t\t\taddButtonAttrs: {\n\t\t\t\ttitle: \"refresh_action\",\n\t\t\t\tclick: () => showProgressDialog(\"loading_msg\", this.updateAuditLog()).then(() => m.redraw()),\n\t\t\t\ticon: BootIcons.Progress,\n\t\t\t\tsize: ButtonSize.Compact,\n\t\t\t},\n\t\t}\n\n\t\treturn [\n\t\t\tm(\".mt-l\", [\n\t\t\t\tm(\".h4\", lang.get(\"security_title\")),\n\t\t\t\tm(DropDownSelector, {\n\t\t\t\t\tlabel: \"saveEncryptedIpAddress_title\",\n\t\t\t\t\thelpLabel: () => lang.get(\"saveEncryptedIpAddress_label\"),\n\t\t\t\t\tselectedValue: this.saveIpAddress,\n\t\t\t\t\tselectionChangedHandler: (value) => {\n\t\t\t\t\t\tconst newProps = Object.assign({}, attrs.customerServerProperties(), {\n\t\t\t\t\t\t\tsaveEncryptedIpAddressInSession: value,\n\t\t\t\t\t\t})\n\t\t\t\t\t\tlocator.entityClient.update(newProps)\n\t\t\t\t\t},\n\t\t\t\t\titems: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: lang.get(\"yes_label\"),\n\t\t\t\t\t\t\tvalue: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: lang.get(\"no_label\"),\n\t\t\t\t\t\t\tvalue: false,\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t\tdropdownWidth: 250,\n\t\t\t\t}),\n\t\t\t\tlocator.logins.getUserController().isGlobalAdmin()\n\t\t\t\t\t? m(\"\", [\n\t\t\t\t\t\t\tlocator.logins.getUserController().isPaidAccount()\n\t\t\t\t\t\t\t\t? m(DropDownSelector, {\n\t\t\t\t\t\t\t\t\t\tlabel: \"enforcePasswordUpdate_title\",\n\t\t\t\t\t\t\t\t\t\thelpLabel: () => lang.get(\"enforcePasswordUpdate_msg\"),\n\t\t\t\t\t\t\t\t\t\tselectedValue: this.requirePasswordUpdateAfterReset,\n\t\t\t\t\t\t\t\t\t\tselectionChangedHandler: (value) => {\n\t\t\t\t\t\t\t\t\t\t\tconst newProps: CustomerServerProperties = Object.assign({}, attrs.customerServerProperties(), {\n\t\t\t\t\t\t\t\t\t\t\t\trequirePasswordUpdateAfterReset: value,\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\tlocator.entityClient.update(newProps)\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tname: lang.get(\"yes_label\"),\n\t\t\t\t\t\t\t\t\t\t\t\tvalue: true,\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tname: lang.get(\"no_label\"),\n\t\t\t\t\t\t\t\t\t\t\t\tvalue: false,\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tdropdownWidth: 250,\n\t\t\t\t\t\t\t\t  })\n\t\t\t\t\t\t\t\t: null,\n\t\t\t\t\t\t\tthis.customer\n\t\t\t\t\t\t\t\t? m(\n\t\t\t\t\t\t\t\t\t\t\".mt-l\",\n\t\t\t\t\t\t\t\t\t\tm(ExpandableTable, {\n\t\t\t\t\t\t\t\t\t\t\ttitle: \"auditLog_title\",\n\t\t\t\t\t\t\t\t\t\t\ttable: auditLogTableAttrs,\n\t\t\t\t\t\t\t\t\t\t\tinfoMsg: \"auditLogInfo_msg\",\n\t\t\t\t\t\t\t\t\t\t\tonExpand: () => {\n\t\t\t\t\t\t\t\t\t\t\t\t// if the user did not load this when the view was created (i.e. due to a lost connection), attempt to reload it\n\t\t\t\t\t\t\t\t\t\t\t\tif (!this.auditLogLoaded) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tshowProgressDialog(\"loading_msg\", this.updateAuditLog()).then(() => m.redraw())\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t\t: null,\n\t\t\t\t\t  ])\n\t\t\t\t\t: null,\n\t\t\t]),\n\t\t\tlocator.logins.getUserController().isPaidAccount()\n\t\t\t\t? m(\n\t\t\t\t\t\tSettingsExpander,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttitle: \"usageData_label\",\n\t\t\t\t\t\t\texpanded: this.usageDataExpanded,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tthis.customerProperties.isLoaded()\n\t\t\t\t\t\t\t? m(DropDownSelector, {\n\t\t\t\t\t\t\t\t\tlabel: \"customerUsageDataOptOut_label\",\n\t\t\t\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tname: lang.get(\"customerUsageDataGloballyDeactivated_label\"),\n\t\t\t\t\t\t\t\t\t\t\tvalue: true,\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tname: lang.get(\"customerUsageDataGloballyPossible_label\"),\n\t\t\t\t\t\t\t\t\t\t\tvalue: false,\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tselectedValue: this.customerProperties.getSync()!.usageDataOptedOut,\n\t\t\t\t\t\t\t\t\tselectionChangedHandler: (v) => {\n\t\t\t\t\t\t\t\t\t\tif (this.customerProperties.isLoaded()) {\n\t\t\t\t\t\t\t\t\t\t\tconst customerProps = this.customerProperties.getSync()!\n\t\t\t\t\t\t\t\t\t\t\tcustomerProps.usageDataOptedOut = v as boolean\n\t\t\t\t\t\t\t\t\t\t\tlocator.entityClient.update(customerProps)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tdropdownWidth: 250,\n\t\t\t\t\t\t\t  })\n\t\t\t\t\t\t\t: null,\n\t\t\t\t  )\n\t\t\t\t: null,\n\t\t\tm(\n\t\t\t\t\".mb-l\",\n\t\t\t\tm(\n\t\t\t\t\tSettingsExpander,\n\t\t\t\t\t{\n\t\t\t\t\t\ttitle: \"adminDeleteAccount_action\",\n\t\t\t\t\t\tbuttonText: \"adminDeleteAccount_action\",\n\t\t\t\t\t\texpanded: this.deleteAccountExpanded,\n\t\t\t\t\t},\n\t\t\t\t\tm(\n\t\t\t\t\t\t\".flex-center\",\n\t\t\t\t\t\tm(\n\t\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\t\twidth: \"200px\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tm(LoginButton, {\n\t\t\t\t\t\t\t\tlabel: \"adminDeleteAccount_action\",\n\t\t\t\t\t\t\t\tonclick: () => {\n\t\t\t\t\t\t\t\t\tconst isPremium = locator.logins.getUserController().isPaidAccount()\n\t\t\t\t\t\t\t\t\tshowLeavingUserSurveyWizard(isPremium, false).then((reason) => {\n\t\t\t\t\t\t\t\t\t\tif (reason.submitted && reason.category && reason.reason) {\n\t\t\t\t\t\t\t\t\t\t\tconst surveyData = createSurveyData({\n\t\t\t\t\t\t\t\t\t\t\t\tcategory: reason.category,\n\t\t\t\t\t\t\t\t\t\t\t\tdetails: reason.details,\n\t\t\t\t\t\t\t\t\t\t\t\treason: reason.reason,\n\t\t\t\t\t\t\t\t\t\t\t\tversion: SURVEY_VERSION_NUMBER,\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\tshowDeleteAccountDialog(surveyData)\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tshowDeleteAccountDialog()\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t),\n\t\t]\n\t}\n\n\tprivate updateAuditLog(): Promise<void> {\n\t\treturn locator.logins\n\t\t\t.getUserController()\n\t\t\t.loadCustomer()\n\t\t\t.then((customer) => {\n\t\t\t\tthis.customer = customer\n\n\t\t\t\treturn locator.entityClient\n\t\t\t\t\t.loadRange(AuditLogEntryTypeRef, neverNull(customer.auditLog).items, GENERATED_MAX_ID, 200, true)\n\t\t\t\t\t.then((auditLog) => {\n\t\t\t\t\t\tthis.auditLogLoaded = true // indicate that we do not need to reload the list again when we expand\n\t\t\t\t\t\tthis.auditLogLines = auditLog.map((auditLogEntry) => {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tcells: [auditLogEntry.action, auditLogEntry.modifiedEntity, formatDateTimeFromYesterdayOn(auditLogEntry.date)],\n\t\t\t\t\t\t\t\tactionButtonAttrs: {\n\t\t\t\t\t\t\t\t\ttitle: \"showMore_action\",\n\t\t\t\t\t\t\t\t\ticon: Icons.More,\n\t\t\t\t\t\t\t\t\tclick: () => this.showAuditLogDetails(auditLogEntry, customer),\n\t\t\t\t\t\t\t\t\tsize: ButtonSize.Compact,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\t\t.finally(m.redraw)\n\t\t\t})\n\t}\n\n\tprivate showAuditLogDetails(entry: AuditLogEntry, customer: Customer) {\n\t\tlet modifiedGroupInfo: Stream<GroupInfo> = stream()\n\t\tlet groupInfo = stream<GroupInfo>()\n\t\tlet groupInfoLoadingPromises: Promise<unknown>[] = []\n\n\t\tif (entry.modifiedGroupInfo) {\n\t\t\tgroupInfoLoadingPromises.push(\n\t\t\t\tlocator.entityClient\n\t\t\t\t\t.load(GroupInfoTypeRef, entry.modifiedGroupInfo)\n\t\t\t\t\t.then((gi) => {\n\t\t\t\t\t\tmodifiedGroupInfo(gi)\n\t\t\t\t\t})\n\t\t\t\t\t.catch(\n\t\t\t\t\t\tofClass(NotAuthorizedError, () => {\n\t\t\t\t\t\t\t// If the admin is removed from the free group, he does not have the permission to access the groupinfo of that group anymore\n\t\t\t\t\t\t}),\n\t\t\t\t\t),\n\t\t\t)\n\t\t}\n\n\t\tif (entry.groupInfo) {\n\t\t\tgroupInfoLoadingPromises.push(\n\t\t\t\tlocator.entityClient\n\t\t\t\t\t.load(GroupInfoTypeRef, entry.groupInfo)\n\t\t\t\t\t.then((gi) => {\n\t\t\t\t\t\tgroupInfo(gi)\n\t\t\t\t\t})\n\t\t\t\t\t.catch(\n\t\t\t\t\t\tofClass(NotAuthorizedError, () => {\n\t\t\t\t\t\t\t// If the admin is removed from the free group, he does not have the permission to access the groupinfo of that group anymore\n\t\t\t\t\t\t}),\n\t\t\t\t\t),\n\t\t\t)\n\t\t}\n\n\t\tPromise.all(groupInfoLoadingPromises).then(() => {\n\t\t\tconst groupInfoValue = groupInfo()\n\t\t\tlet dialog = Dialog.showActionDialog({\n\t\t\t\ttitle: \"auditLog_title\",\n\t\t\t\tchild: {\n\t\t\t\t\tview: () =>\n\t\t\t\t\t\tm(\"table.pt\", [\n\t\t\t\t\t\t\tm(\"tr\", [m(\"td\", lang.get(\"action_label\")), m(\"td.pl\", entry.action)]),\n\t\t\t\t\t\t\tm(\"tr\", [m(\"td\", lang.get(\"actor_label\")), m(\"td.pl\", entry.actorMailAddress)]),\n\t\t\t\t\t\t\tm(\"tr\", [m(\"td\", lang.get(\"IpAddress_label\")), m(\"td.pl\", entry.actorIpAddress ? entry.actorIpAddress : \"\")]),\n\t\t\t\t\t\t\tm(\"tr\", [\n\t\t\t\t\t\t\t\tm(\"td\", lang.get(\"modified_label\")),\n\t\t\t\t\t\t\t\tm(\n\t\t\t\t\t\t\t\t\t\"td.pl\",\n\t\t\t\t\t\t\t\t\tmodifiedGroupInfo() && this.getGroupInfoDisplayText(modifiedGroupInfo())\n\t\t\t\t\t\t\t\t\t\t? this.getGroupInfoDisplayText(modifiedGroupInfo())\n\t\t\t\t\t\t\t\t\t\t: entry.modifiedEntity,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\tgroupInfoValue\n\t\t\t\t\t\t\t\t? m(\"tr\", [\n\t\t\t\t\t\t\t\t\t\tm(\"td\", lang.get(\"group_label\")),\n\t\t\t\t\t\t\t\t\t\tm(\n\t\t\t\t\t\t\t\t\t\t\t\"td.pl\",\n\t\t\t\t\t\t\t\t\t\t\tcustomer.adminGroup === groupInfoValue.group\n\t\t\t\t\t\t\t\t\t\t\t\t? lang.get(\"globalAdmin_label\")\n\t\t\t\t\t\t\t\t\t\t\t\t: this.getGroupInfoDisplayText(groupInfoValue),\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t  ])\n\t\t\t\t\t\t\t\t: null,\n\t\t\t\t\t\t\tm(\"tr\", [m(\"td\", lang.get(\"time_label\")), m(\"td.pl\", formatDateTime(entry.date))]),\n\t\t\t\t\t\t]),\n\t\t\t\t},\n\t\t\t\tallowOkWithReturn: true,\n\t\t\t\tokAction: () => dialog.close(),\n\t\t\t\tallowCancel: false,\n\t\t\t})\n\t\t})\n\t}\n\n\tprivate getGroupInfoDisplayText(groupInfo: GroupInfo): string {\n\t\tif (groupInfo.name && groupInfo.mailAddress) {\n\t\t\treturn groupInfo.name + \" <\" + groupInfo.mailAddress + \">\"\n\t\t} else if (groupInfo.mailAddress) {\n\t\t\treturn groupInfo.mailAddress\n\t\t} else {\n\t\t\treturn groupInfo.name\n\t\t}\n\t}\n\n\thandleEventUpdates(updates: ReadonlyArray<EntityUpdateData>): Promise<void> {\n\t\treturn promiseMap(updates, (update) => {\n\t\t\tif (isUpdateForTypeRef(AuditLogEntryTypeRef, update)) {\n\t\t\t\treturn this.updateAuditLog()\n\t\t\t} else if (isUpdateForTypeRef(CustomerPropertiesTypeRef, update)) {\n\t\t\t\tthis.customerProperties.reset()\n\t\t\t\tthis.customerProperties.getAsync().then(m.redraw)\n\t\t\t}\n\t\t}).then(noOp)\n\t}\n}\n"]}