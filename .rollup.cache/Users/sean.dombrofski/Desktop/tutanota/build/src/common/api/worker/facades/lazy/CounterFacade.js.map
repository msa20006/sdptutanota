{"version":3,"file":"CounterFacade.js","sourceRoot":"","sources":["../../../../../../../src/common/api/worker/facades/lazy/CounterFacade.ts"],"names":[],"mappings":"AAAA,OAAO,EAAgB,qBAAqB,EAAE,MAAM,uCAAuC,CAAA;AAC3F,OAAO,EAAE,kBAAkB,EAAE,MAAM,wBAAwB,CAAA;AAE3D,OAAO,EAAE,cAAc,EAAE,MAAM,uCAAuC,CAAA;AAGtE,kBAAkB,EAAE,CAAA;AAEpB,MAAM,OAAO,aAAa;IACI;IAA7B,YAA6B,eAAiC;QAAjC,oBAAe,GAAf,eAAe,CAAkB;IAAG,CAAC;IAElE,KAAK,CAAC,gBAAgB,CAAC,WAAwB,EAAE,OAAe,EAAE,UAAc;QAC/E,MAAM,WAAW,GAAG,qBAAqB,CAAC;YACzC,WAAW;YACX,OAAO;YACP,UAAU;SACV,CAAC,CAAA;QACF,MAAM,aAAa,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,cAAc,EAAE,WAAW,CAAC,CAAA;QACjF,OAAO,MAAM,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAA;IACpD,CAAC;IAED,KAAK,CAAC,4BAA4B,CAAC,WAAwB,EAAE,UAAc;QAC1E,MAAM,WAAW,GAAG,qBAAqB,CAAC;YACzC,WAAW;YACX,OAAO,EAAE,UAAU;YACnB,UAAU,EAAE,IAAI;SAChB,CAAC,CAAA;QACF,MAAM,aAAa,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,cAAc,EAAE,WAAW,CAAC,CAAA;QACjF,OAAO,aAAa,CAAC,aAAa,CAAA;IACnC,CAAC;CACD","sourcesContent":["import { CounterValue, createReadCounterData } from \"../../../entities/monitor/TypeRefs.js\"\nimport { assertWorkerOrNode } from \"../../../common/Env.js\"\nimport { IServiceExecutor } from \"../../../common/ServiceRequest.js\"\nimport { CounterService } from \"../../../entities/monitor/Services.js\"\nimport { CounterType } from \"../../../common/TutanotaConstants.js\"\n\nassertWorkerOrNode()\n\nexport class CounterFacade {\n\tconstructor(private readonly serviceExecutor: IServiceExecutor) {}\n\n\tasync readCounterValue(counterType: CounterType, rowName: string, columnName: Id): Promise<number> {\n\t\tconst counterData = createReadCounterData({\n\t\t\tcounterType,\n\t\t\trowName,\n\t\t\tcolumnName,\n\t\t})\n\t\tconst counterReturn = await this.serviceExecutor.get(CounterService, counterData)\n\t\treturn Number(counterReturn.counterValues[0].value)\n\t}\n\n\tasync readAllCustomerCounterValues(counterType: CounterType, customerId: Id): Promise<CounterValue[]> {\n\t\tconst counterData = createReadCounterData({\n\t\t\tcounterType,\n\t\t\trowName: customerId,\n\t\t\tcolumnName: null,\n\t\t})\n\t\tconst counterReturn = await this.serviceExecutor.get(CounterService, counterData)\n\t\treturn counterReturn.counterValues\n\t}\n}\n"]}