{"version":3,"file":"NativeMailImportFacadeReceiveDispatcher.js","sourceRoot":"","sources":["../../../../../../src/common/native/common/generatedipc/NativeMailImportFacadeReceiveDispatcher.ts"],"names":[],"mappings":"AAAA,iCAAiC;AAKjC,MAAM,OAAO,uCAAuC;IACtB;IAA7B,YAA6B,MAA8B;QAA9B,WAAM,GAAN,MAAM,CAAwB;IAAG,CAAC;IAC/D,KAAK,CAAC,QAAQ,CAAC,MAAc,EAAE,GAAe;QAC7C,QAAQ,MAAM,EAAE,CAAC;YAChB,KAAK,oBAAoB,CAAC,CAAC,CAAC;gBAC3B,MAAM,SAAS,GAAW,GAAG,CAAC,CAAC,CAAC,CAAA;gBAChC,MAAM,gBAAgB,GAAW,GAAG,CAAC,CAAC,CAAC,CAAA;gBACvC,MAAM,0BAA0B,GAA2B,GAAG,CAAC,CAAC,CAAC,CAAA;gBACjE,MAAM,MAAM,GAAW,GAAG,CAAC,CAAC,CAAC,CAAA;gBAC7B,OAAO,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,SAAS,EAAE,gBAAgB,EAAE,0BAA0B,EAAE,MAAM,CAAC,CAAA;YACvG,CAAC;YACD,KAAK,kBAAkB,CAAC,CAAC,CAAC;gBACzB,MAAM,SAAS,GAAW,GAAG,CAAC,CAAC,CAAC,CAAA;gBAChC,MAAM,gBAAgB,GAAW,GAAG,CAAC,CAAC,CAAC,CAAA;gBACvC,MAAM,aAAa,GAA0B,GAAG,CAAC,CAAC,CAAC,CAAA;gBACnD,MAAM,SAAS,GAA0B,GAAG,CAAC,CAAC,CAAC,CAAA;gBAC/C,MAAM,0BAA0B,GAA2B,GAAG,CAAC,CAAC,CAAC,CAAA;gBACjE,MAAM,MAAM,GAAW,GAAG,CAAC,CAAC,CAAC,CAAA;gBAC7B,OAAO,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,gBAAgB,EAAE,aAAa,EAAE,SAAS,EAAE,0BAA0B,EAAE,MAAM,CAAC,CAAA;YAC/H,CAAC;YACD,KAAK,mBAAmB,CAAC,CAAC,CAAC;gBAC1B,MAAM,SAAS,GAAW,GAAG,CAAC,CAAC,CAAC,CAAA;gBAChC,MAAM,oBAAoB,GAAW,GAAG,CAAC,CAAC,CAAC,CAAA;gBAC3C,OAAO,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,SAAS,EAAE,oBAAoB,CAAC,CAAA;YACtE,CAAC;YACD,KAAK,mBAAmB,CAAC,CAAC,CAAC;gBAC1B,MAAM,SAAS,GAAW,GAAG,CAAC,CAAC,CAAC,CAAA;gBAChC,OAAO,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAA;YAChD,CAAC;QACF,CAAC;IACF,CAAC;CACD","sourcesContent":["/* generated file, don't edit. */\n\nimport { UnencryptedCredentials } from \"./UnencryptedCredentials.js\"\nimport { NativeMailImportFacade } from \"./NativeMailImportFacade.js\"\n\nexport class NativeMailImportFacadeReceiveDispatcher {\n\tconstructor(private readonly facade: NativeMailImportFacade) {}\n\tasync dispatch(method: string, arg: Array<any>): Promise<any> {\n\t\tswitch (method) {\n\t\t\tcase \"getResumableImport\": {\n\t\t\t\tconst mailboxId: string = arg[0]\n\t\t\t\tconst targetOwnerGroup: string = arg[1]\n\t\t\t\tconst unencryptedTutaCredentials: UnencryptedCredentials = arg[2]\n\t\t\t\tconst apiUrl: string = arg[3]\n\t\t\t\treturn this.facade.getResumableImport(mailboxId, targetOwnerGroup, unencryptedTutaCredentials, apiUrl)\n\t\t\t}\n\t\t\tcase \"prepareNewImport\": {\n\t\t\t\tconst mailboxId: string = arg[0]\n\t\t\t\tconst targetOwnerGroup: string = arg[1]\n\t\t\t\tconst targetMailSet: ReadonlyArray<string> = arg[2]\n\t\t\t\tconst filePaths: ReadonlyArray<string> = arg[3]\n\t\t\t\tconst unencryptedTutaCredentials: UnencryptedCredentials = arg[4]\n\t\t\t\tconst apiUrl: string = arg[5]\n\t\t\t\treturn this.facade.prepareNewImport(mailboxId, targetOwnerGroup, targetMailSet, filePaths, unencryptedTutaCredentials, apiUrl)\n\t\t\t}\n\t\t\tcase \"setProgressAction\": {\n\t\t\t\tconst mailboxId: string = arg[0]\n\t\t\t\tconst importProgressAction: number = arg[1]\n\t\t\t\treturn this.facade.setProgressAction(mailboxId, importProgressAction)\n\t\t\t}\n\t\t\tcase \"setAsyncErrorHook\": {\n\t\t\t\tconst mailboxId: string = arg[0]\n\t\t\t\treturn this.facade.setAsyncErrorHook(mailboxId)\n\t\t\t}\n\t\t}\n\t}\n}\n"]}