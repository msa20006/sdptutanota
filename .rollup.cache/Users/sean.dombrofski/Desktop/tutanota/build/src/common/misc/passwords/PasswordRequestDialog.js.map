{"version":3,"file":"PasswordRequestDialog.js","sourceRoot":"","sources":["../../../../../src/common/misc/passwords/PasswordRequestDialog.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Requests a password from the user. Stays open until the caller sets the error message to \"\".\n * @param props.action will be executed as an attempt to apply new password. Error message is the return value.\n */\nimport { PasswordField, PasswordFieldAttrs } from \"./PasswordField.js\"\nimport { TranslationKey, MaybeTranslation } from \"../LanguageViewModel.js\"\nimport { Dialog, INPUT } from \"../../gui/base/Dialog.js\"\nimport m from \"mithril\"\nimport { Autocomplete } from \"../../gui/base/TextField.js\"\nimport { isKeyPressed, KeyPress } from \"../KeyManager.js\"\nimport { Keys } from \"../../api/common/TutanotaConstants.js\"\nimport { Icon } from \"../../gui/base/Icon.js\"\nimport { BootIcons } from \"../../gui/base/icons/BootIcons.js\"\n\nexport function showRequestPasswordDialog(props: {\n\ttitle?: MaybeTranslation\n\tmessageText?: string\n\taction: (pw: string) => Promise<string>\n\tcancel: {\n\t\ttextId: TranslationKey\n\t\taction: () => void\n\t} | null\n}): Dialog {\n\tconst title = props.title ? props.title : \"password_label\"\n\tlet value = \"\"\n\tlet state: { type: \"progress\" } | { type: \"idle\"; message: string } = { type: \"idle\", message: \"\" }\n\n\tconst doAction = async () => {\n\t\tstate = { type: \"progress\" }\n\t\tm.redraw()\n\t\tconst errorMessage = await props.action(value)\n\t\tstate = { type: \"idle\", message: errorMessage }\n\t\tm.redraw()\n\t}\n\n\tconst child = {\n\t\tview: () => {\n\t\t\tconst savedState = state\n\t\t\treturn savedState.type == \"idle\"\n\t\t\t\t? m(\"\", [\n\t\t\t\t\t\tprops.messageText ? m(\".pt\", props.messageText) : null,\n\t\t\t\t\t\tm(PasswordField, {\n\t\t\t\t\t\t\tlabel: title,\n\t\t\t\t\t\t\thelpLabel: () => savedState.message,\n\t\t\t\t\t\t\tvalue: value,\n\t\t\t\t\t\t\toninput: (newValue) => (value = newValue),\n\t\t\t\t\t\t\tautocompleteAs: Autocomplete.off,\n\t\t\t\t\t\t\tkeyHandler: (key: KeyPress) => {\n\t\t\t\t\t\t\t\tif (isKeyPressed(key.key, Keys.RETURN)) {\n\t\t\t\t\t\t\t\t\tdoAction()\n\t\t\t\t\t\t\t\t\treturn false\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\treturn true\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t} satisfies PasswordFieldAttrs),\n\t\t\t\t  ])\n\t\t\t\t: m(Icon, {\n\t\t\t\t\t\ticon: BootIcons.Progress,\n\t\t\t\t\t\tclass: \"icon-xl icon-progress block mt mb\",\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\tmarginLeft: \"auto\",\n\t\t\t\t\t\t\tmarginRight: \"auto\",\n\t\t\t\t\t\t},\n\t\t\t\t  })\n\t\t},\n\t}\n\tconst dialog = Dialog.showActionDialog({\n\t\ttitle,\n\t\tchild: child,\n\t\tallowOkWithReturn: true,\n\t\tokAction: () => doAction(),\n\t\tcancelActionTextId: props.cancel?.textId,\n\t\tallowCancel: props.cancel != null,\n\t\tcancelAction: () => {\n\t\t\tprops?.cancel?.action?.()\n\t\t\tdialog.close()\n\t\t},\n\t})\n\n\t// the password form contains some dummy inputs that would be focused by\n\t// the default focusOnLoad\n\tdialog.setFocusOnLoadFunction((dom: HTMLElement) => {\n\t\tconst inputs = Array.from(dom.querySelectorAll(INPUT)) as Array<HTMLElement>\n\t\tinputs[inputs.length - 1].focus()\n\t})\n\treturn dialog\n}\n"]}