{"version":3,"file":"ErrorHandlerImpl.js","sourceRoot":"","sources":["../../../../src/common/misc/ErrorHandlerImpl.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n\tAccessBlockedError,\n\tAccessDeactivatedError,\n\tAccessExpiredError,\n\tConnectionError,\n\tInsufficientStorageError,\n\tInvalidSoftwareVersionError,\n\tNotAuthenticatedError,\n\tRequestTimeoutError,\n\tServiceUnavailableError,\n\tSessionExpiredError,\n} from \"../api/common/error/RestError\"\nimport { Dialog } from \"../gui/base/Dialog\"\nimport { lang } from \"./LanguageViewModel\"\nimport { assertMainOrNode, isDesktop, isOfflineStorageAvailable } from \"../api/common/Env\"\nimport { assertNotNull, noOp } from \"@tutao/tutanota-utils\"\nimport { OutOfSyncError } from \"../api/common/error/OutOfSyncError\"\nimport { showProgressDialog } from \"../gui/dialogs/ProgressDialog\"\nimport { IndexingNotSupportedError } from \"../api/common/error/IndexingNotSupportedError\"\nimport { windowFacade } from \"./WindowFacade\"\nimport { locator } from \"../api/main/CommonLocator\"\nimport { QuotaExceededError } from \"../api/common/error/QuotaExceededError\"\nimport { UserError } from \"../api/main/UserError\"\nimport { showMoreStorageNeededOrderDialog } from \"./SubscriptionDialogs\"\nimport { showSnackBar } from \"../gui/base/SnackBar\"\nimport { Credentials, credentialsToUnencrypted } from \"./credentials/Credentials\"\nimport { showErrorDialogNotLoggedIn, showErrorNotification } from \"./ErrorReporter\"\nimport { CancelledError } from \"../api/common/error/CancelledError\"\n\nimport { SessionType } from \"../api/common/SessionType.js\"\nimport { OfflineDbClosedError } from \"../api/common/error/OfflineDbClosedError.js\"\nimport { UserTypeRef } from \"../api/entities/sys/TypeRefs.js\"\nimport { isOfflineError } from \"../api/common/utils/ErrorUtils.js\"\nimport { showRequestPasswordDialog } from \"./passwords/PasswordRequestDialog.js\"\n\nassertMainOrNode()\n\nlet unknownErrorDialogActive = false\nlet notConnectedDialogActive = false\nlet invalidSoftwareVersionActive = false\nlet loginDialogActive = false\nlet isLoggingOut = false\nlet serviceUnavailableDialogActive = false\nlet requestTimeoutDialogActive = false\nlet shownQuotaError = false\nlet showingImportError = false\nconst ignoredMessages = [\"webkitExitFullScreen\", \"googletag\", \"avast_submit\"]\n\nexport async function handleUncaughtErrorImpl(e: Error) {\n\tconst { logins, interWindowEventSender, worker, search } = locator\n\n\tif (isLoggingOut) {\n\t\t// ignore all errors while logging out\n\t\treturn\n\t}\n\n\tif (e instanceof UserError) {\n\t\treturn showUserError(e)\n\t}\n\n\tif (isOfflineError(e)) {\n\t\tshowOfflineMessage()\n\t} else if (e instanceof InvalidSoftwareVersionError) {\n\t\tif (!invalidSoftwareVersionActive) {\n\t\t\tinvalidSoftwareVersionActive = true\n\t\t\tDialog.message(\"outdatedClient_msg\").then(() => (invalidSoftwareVersionActive = false))\n\t\t}\n\t} else if (\n\t\te instanceof NotAuthenticatedError ||\n\t\te instanceof AccessBlockedError ||\n\t\te instanceof AccessDeactivatedError ||\n\t\te instanceof AccessExpiredError\n\t) {\n\t\t// If the session is closed (e.g. password is changed) we log user out forcefully so we reload the page\n\t\tif (logins.isUserLoggedIn()) {\n\t\t\tlogoutIfNoPasswordPrompt()\n\t\t}\n\t} else if (e instanceof SessionExpiredError) {\n\t\treloginForExpiredSession()\n\t} else if (e instanceof OutOfSyncError) {\n\t\tconst isOffline = isOfflineStorageAvailable() && logins.isUserLoggedIn() && logins.getUserController().sessionType === SessionType.Persistent\n\n\t\tawait Dialog.message(\"outOfSync_label\", lang.get(isOffline ? \"dataExpiredOfflineDb_msg\" : \"dataExpired_msg\"))\n\n\t\tconst { userId } = logins.getUserController()\n\t\tif (isDesktop()) {\n\t\t\tawait interWindowEventSender?.localUserDataInvalidated(userId)\n\t\t\tawait worker.getWorkerInterface().sqlCipherFacade.deleteDb(userId)\n\t\t}\n\t\tawait logins.logout(false)\n\t\tawait windowFacade.reload({ noAutoLogin: true })\n\t} else if (e instanceof InsufficientStorageError) {\n\t\tif (logins.getUserController().isGlobalAdmin()) {\n\t\t\tshowMoreStorageNeededOrderDialog(\"insufficientStorageAdmin_msg\")\n\t\t} else {\n\t\t\tconst errorMessage = lang.makeTranslation(\n\t\t\t\t\"insufficientStorageUser_msg\",\n\t\t\t\tlang.get(\"insufficientStorageUser_msg\") + \" \" + lang.get(\"contactAdmin_msg\"),\n\t\t\t)\n\t\t\tDialog.message(errorMessage)\n\t\t}\n\t} else if (e instanceof ServiceUnavailableError) {\n\t\tif (!serviceUnavailableDialogActive) {\n\t\t\tserviceUnavailableDialogActive = true\n\t\t\tDialog.message(\"serviceUnavailable_msg\").then(() => {\n\t\t\t\tserviceUnavailableDialogActive = false\n\t\t\t})\n\t\t}\n\t} else if (e instanceof RequestTimeoutError) {\n\t\tif (!requestTimeoutDialogActive) {\n\t\t\trequestTimeoutDialogActive = true\n\t\t\tDialog.message(\"requestTimeout_msg\").then(() => {\n\t\t\t\trequestTimeoutDialogActive = false\n\t\t\t})\n\t\t}\n\t} else if (e instanceof IndexingNotSupportedError) {\n\t\tconsole.log(\"Indexing not supported\", e)\n\t\tif (\"indexingSupported\" in search) {\n\t\t\t// search can be in two flavours: \"SearchModel\" and \"CalendarSearchModel. Only \"SearchModel\" has indexing\n\t\t\tsearch.indexingSupported = false\n\t\t}\n\t} else if (e instanceof QuotaExceededError) {\n\t\tif (!shownQuotaError) {\n\t\t\tshownQuotaError = true\n\t\t\tDialog.message(\"storageQuotaExceeded_msg\")\n\t\t}\n\t} else if (e instanceof OfflineDbClosedError) {\n\t\tif (!loginDialogActive) {\n\t\t\tthrow e\n\t\t}\n\t} else if (ignoredError(e)) {\n\t\t// ignore, this is not our code\n\t} else {\n\t\tif (!unknownErrorDialogActive) {\n\t\t\tunknownErrorDialogActive = true\n\n\t\t\t// only logged in users can report errors because we send mail for that.\n\t\t\tif (logins.isUserLoggedIn()) {\n\t\t\t\tconst { ignored } = await showErrorNotification(e)\n\t\t\t\tunknownErrorDialogActive = false\n\t\t\t\tif (ignored) {\n\t\t\t\t\tignoredMessages.push(e.message)\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconsole.log(\"Unknown error\", e)\n\t\t\t\tshowErrorDialogNotLoggedIn(e).then(() => (unknownErrorDialogActive = false))\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction showOfflineMessage() {\n\tif (!notConnectedDialogActive) {\n\t\tnotConnectedDialogActive = true\n\t\tshowSnackBar({\n\t\t\tmessage: \"serverNotReachable_msg\",\n\t\t\tbutton: {\n\t\t\t\tlabel: \"ok_action\",\n\t\t\t\tclick: () => {},\n\t\t\t},\n\t\t\tonClose: () => {\n\t\t\t\tnotConnectedDialogActive = false\n\t\t\t},\n\t\t})\n\t}\n}\n\nfunction logoutIfNoPasswordPrompt() {\n\tif (!loginDialogActive) {\n\t\twindowFacade.reload({})\n\t}\n}\n\nexport async function reloginForExpiredSession() {\n\tif (loginDialogActive) {\n\t\treturn\n\t}\n\tconst { logins, loginFacade, secondFactorHandler, credentialsProvider, cacheStorage } = locator\n\t// Make sure that partial login part is complete before we will try to make a new session.\n\t// Otherwise we run into a race condition where login failure arrives before we initialize userController.\n\tawait logins.waitForPartialLogin()\n\tconsole.log(\"RELOGIN\", logins.isUserLoggedIn())\n\tconst oldSessionType = logins.getUserController().sessionType\n\tconst userId = logins.getUserController().user._id\n\tconst mailAddress = assertNotNull(logins.getUserController().userGroupInfo.mailAddress, \"could not get mailAddress from userGroupInfo\")\n\t// Fetch old credentials to preserve database key if it's there\n\tconst oldCredentials = await credentialsProvider.getDecryptedCredentialsByUserId(userId)\n\t// we're deleting the outdated user here because before resetSession() the cache is still open and can be modified.\n\tawait cacheStorage?.deleteIfExists(UserTypeRef, null, userId)\n\tconst sessionReset = loginFacade.resetSession()\n\tloginDialogActive = true\n\n\tconst dialog = showRequestPasswordDialog({\n\t\taction: async (pw) => {\n\t\t\tawait sessionReset\n\t\t\tlet credentials: Credentials\n\t\t\tlet databaseKey: Uint8Array | null\n\t\t\ttry {\n\t\t\t\tconst newSessionData = await logins.createSession(mailAddress, pw, oldSessionType, oldCredentials?.databaseKey)\n\t\t\t\tcredentials = newSessionData.credentials\n\t\t\t\tdatabaseKey = newSessionData.databaseKey\n\t\t\t} catch (e) {\n\t\t\t\tif (\n\t\t\t\t\te instanceof CancelledError ||\n\t\t\t\t\te instanceof AccessBlockedError ||\n\t\t\t\t\te instanceof NotAuthenticatedError ||\n\t\t\t\t\te instanceof AccessDeactivatedError ||\n\t\t\t\t\te instanceof ConnectionError\n\t\t\t\t) {\n\t\t\t\t\tconst { getLoginErrorMessage } = await import(\"../misc/LoginUtils.js\")\n\t\t\t\t\treturn lang.getTranslationText(getLoginErrorMessage(e, false))\n\t\t\t\t} else {\n\t\t\t\t\tthrow e\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\t// Once login succeeds we need to manually close the dialog\n\t\t\t\tsecondFactorHandler.closeWaitingForSecondFactorDialog()\n\t\t\t}\n\t\t\tawait credentialsProvider.deleteByUserId(userId, { deleteOfflineDb: false })\n\t\t\tif (oldSessionType === SessionType.Persistent) {\n\t\t\t\tawait credentialsProvider.store(credentialsToUnencrypted(credentials, databaseKey))\n\t\t\t}\n\t\t\tloginDialogActive = false\n\t\t\tdialog.close()\n\t\t\treturn \"\"\n\t\t},\n\t\tcancel: {\n\t\t\ttextId: \"logout_label\",\n\t\t\taction() {\n\t\t\t\twindowFacade.reload({})\n\t\t\t},\n\t\t},\n\t})\n}\n\nfunction ignoredError(e: Error): boolean {\n\treturn e.message != null && ignoredMessages.some((s) => e.message.includes(s))\n}\n\n/**\n * Trying to handle errors during logout can cause unhandled error loops, so we just want to ignore them\n */\nexport function disableErrorHandlingDuringLogout() {\n\tisLoggingOut = true\n\tshowProgressDialog(\"loggingOut_msg\", new Promise(noOp))\n}\n\nfunction handleImportError() {\n\tif (showingImportError) {\n\t\treturn\n\t}\n\n\tshowingImportError = true\n\tconst message =\n\t\t\"There was an error while loading part of the app. It might be that you are offline, running an outdated version, or your browser is blocking the request.\"\n\tDialog.choice(lang.makeTranslation(\"error_msg\", message), [\n\t\t{\n\t\t\ttext: \"close_alt\",\n\t\t\tvalue: false,\n\t\t},\n\t\t{\n\t\t\ttext: \"reloadPage_action\",\n\t\t\tvalue: true,\n\t\t},\n\t]).then((reload) => {\n\t\tshowingImportError = false\n\n\t\tif (reload) {\n\t\t\twindowFacade.reload({})\n\t\t}\n\t})\n}\n\nif (typeof window !== \"undefined\") {\n\t// @ts-ignore\n\twindow.tutao.testError = () => handleUncaughtErrorImpl(new Error(\"test error!\"))\n}\n\nexport function showUserError(error: UserError): Promise<void> {\n\treturn Dialog.message(lang.makeTranslation(\"error_msg\", error.message))\n}\n"]}