{"version":3,"file":"SegmentControl.js","sourceRoot":"","sources":["../../../../../src/common/gui/base/SegmentControl.ts"],"names":[],"mappings":"AAAA,OAAO,CAAiC,MAAM,SAAS,CAAA;AACvD,OAAO,EAAE,EAAE,EAAE,MAAM,SAAS,CAAA;AAe5B,MAAM,OAAO,cAAc;IAC1B,IAAI,CAAC,KAAoC;QACxC,MAAM,EAAE,sBAAsB,EAAE,aAAa,EAAE,KAAK,EAAE,YAAY,EAAE,GAAG,KAAK,CAAC,KAAK,CAAA;QAElF,OAAO;YACN,CAAC,CACA,wDAAwD,EACxD;gBACC,IAAI,EAAE,SAAS;gBACf,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,KAAK;aACxB,EACD,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAClB,CAAC,CACA,0FAA0F;gBACzF,CAAC,IAAI,CAAC,KAAK,KAAK,aAAa;oBAC5B,CAAC,CAAC,gCAAgC,sBAAsB,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,qBAC7E,sBAAsB,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,EAC3C,EAAE;oBACJ,CAAC,CAAC,wBAAwB,CAAC,EAC7B;gBACC,KAAK,EAAE;oBACN,IAAI,EAAE,MAAM,GAAG,CAAC,OAAO,YAAY,KAAK,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;iBACjF;gBACD,KAAK,EAAE,IAAI,CAAC,IAAI;gBAChB,IAAI,EAAE,KAAK;gBACX,eAAe,EAAE,MAAM,CAAC,IAAI,CAAC,KAAK,KAAK,aAAa,CAAC;gBACrD,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,KAAK,CAAC,KAAK,CAAC;aAClD,EACD,IAAI,CAAC,IAAI,CACT,CACD,CACD;SACD,CAAA;IACF,CAAC;IAED,WAAW,CAAC,IAA2B,EAAE,KAA6B;QACrE,IAAI,IAAI,CAAC,KAAK,KAAK,KAAK,CAAC,aAAa,EAAE,CAAC;YACxC,KAAK,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;QAClC,CAAC;IACF,CAAC;CACD","sourcesContent":["import m, { Children, Component, Vnode } from \"mithril\"\nimport { px } from \"../size\"\n\nexport type SegmentControlItem<T> = {\n\tname: string\n\tvalue: T\n}\nexport type SegmentControlAttrs<T> = {\n\tselectedValue: T\n\tonValueSelected: (_: T) => unknown\n\titems: SegmentControlItem<T>[]\n\titemMaxWidth?: number\n\tshouldApplyCyberMonday?: boolean\n\tclass?: string\n}\n\nexport class SegmentControl<T> implements Component<SegmentControlAttrs<T>> {\n\tview(vnode: Vnode<SegmentControlAttrs<T>>): Children {\n\t\tconst { shouldApplyCyberMonday, selectedValue, items, itemMaxWidth } = vnode.attrs\n\n\t\treturn [\n\t\t\tm(\n\t\t\t\t\".segmentControl.flex.center-horizontally.button-height\",\n\t\t\t\t{\n\t\t\t\t\trole: \"tablist\",\n\t\t\t\t\tclass: vnode.attrs.class,\n\t\t\t\t},\n\t\t\t\titems.map((item) =>\n\t\t\t\t\tm(\n\t\t\t\t\t\t\"button.segmentControlItem.flex.center-horizontally.center-vertically.text-ellipsis.small\" +\n\t\t\t\t\t\t\t(item.value === selectedValue\n\t\t\t\t\t\t\t\t? `.segmentControl-border-active${shouldApplyCyberMonday ? \"-cyber-monday\" : \"\"}.content-accent-fg${\n\t\t\t\t\t\t\t\t\t\tshouldApplyCyberMonday ? \"-cyber-monday\" : \"\"\n\t\t\t\t\t\t\t\t  }`\n\t\t\t\t\t\t\t\t: \".segmentControl-border\"),\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\tflex: \"0 1 \" + (typeof itemMaxWidth !== \"undefined\" ? px(itemMaxWidth) : px(120)),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\ttitle: item.name,\n\t\t\t\t\t\t\trole: \"tab\",\n\t\t\t\t\t\t\t\"aria-selected\": String(item.value === selectedValue),\n\t\t\t\t\t\t\tonclick: () => this._onSelected(item, vnode.attrs),\n\t\t\t\t\t\t},\n\t\t\t\t\t\titem.name,\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t),\n\t\t]\n\t}\n\n\t_onSelected(item: SegmentControlItem<T>, attrs: SegmentControlAttrs<T>) {\n\t\tif (item.value !== attrs.selectedValue) {\n\t\t\tattrs.onValueSelected(item.value)\n\t\t}\n\t}\n}\n"]}