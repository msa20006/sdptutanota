{"version":3,"file":"FileController.js","sourceRoot":"","sources":["../../../../src/common/file/FileController.ts"],"names":[],"mappings":"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","sourcesContent":["import { Dialog } from \"../gui/base/Dialog.js\"\nimport { convertToDataFile, createDataFile, DataFile } from \"../api/common/DataFile\"\nimport { assertMainOrNode, isApp } from \"../api/common/Env\"\nimport { assertNotNull, neverNull, promiseMap } from \"@tutao/tutanota-utils\"\nimport { lang, TranslationKey } from \"../misc/LanguageViewModel.js\"\nimport { BrowserType } from \"../misc/ClientConstants.js\"\nimport { client } from \"../misc/ClientDetector.js\"\nimport { File as TutanotaFile } from \"../api/entities/tutanota/TypeRefs.js\"\nimport { deduplicateFilenames, FileReference, sanitizeFilename } from \"../api/common/utils/FileUtils\"\n\nimport { BlobFacade } from \"../api/worker/facades/lazy/BlobFacade.js\"\nimport { ArchiveDataType } from \"../api/common/TutanotaConstants.js\"\nimport stream from \"mithril/stream\"\nimport Stream from \"mithril/stream\"\nimport { showProgressDialog } from \"../gui/dialogs/ProgressDialog.js\"\nimport { CancelledError } from \"../api/common/error/CancelledError.js\"\nimport { ConnectionError } from \"../api/common/error/RestError.js\"\nimport { CryptoError } from \"@tutao/tutanota-crypto/error.js\"\nimport { isOfflineError } from \"../api/common/utils/ErrorUtils.js\"\nimport { locator } from \"../api/main/CommonLocator.js\"\nimport { PermissionError } from \"../api/common/error/PermissionError.js\"\nimport { FileNotFoundError } from \"../api/common/error/FileNotFoundError.js\"\nimport { createReferencingInstance } from \"../api/common/utils/BlobUtils.js\"\n\nassertMainOrNode()\nexport const CALENDAR_MIME_TYPE = \"text/calendar\"\n\n// We want to handle both types of vCards\nexport enum VCARD_MIME_TYPES {\n\tX_VCARD = \"text/x-vcard\",\n\tVCARD = \"text/vcard\",\n}\n\nexport enum MAIL_MIME_TYPES {\n\tEML = \"message/rfc822\",\n\tMBOX = \"application/mbox\",\n}\n\nconst enum DownloadPostProcessing {\n\tOpen,\n\tWrite,\n}\n\nexport type ProgressObserver = (somePromise: Promise<void>, progress?: Stream<number>) => Promise<void>\n\n/**\n * coordinates single and multiple downloads on different platforms\n */\nexport abstract class FileController {\n\tprotected constructor(protected readonly blobFacade: BlobFacade, protected readonly observeProgress: ProgressObserver) {}\n\n\tprivate async doDownload(tutanotaFiles: TutanotaFile[], action: DownloadPostProcessing, progress?: stream<number>): Promise<void> {\n\t\tconst downloadedFiles: Array<FileReference | DataFile> = []\n\t\ttry {\n\t\t\tlet isOffline = false\n\t\t\tfor (const file of tutanotaFiles) {\n\t\t\t\ttry {\n\t\t\t\t\tconst downloadedFile = await this.downloadAndDecrypt(file)\n\t\t\t\t\tdownloadedFiles.push(downloadedFile)\n\t\t\t\t\tif (progress != null) {\n\t\t\t\t\t\tprogress(((tutanotaFiles.indexOf(file) + 1) / tutanotaFiles.length) * 100)\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tawait handleDownloadErrors(e, (msg) => {\n\t\t\t\t\t\tif (msg === \"couldNotAttachFile_msg\") {\n\t\t\t\t\t\t\tisOffline = true\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tDialog.message(lang.makeTranslation(\"error_msg\", lang.get(msg) + \" \" + file.name))\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\tif (isOffline) break // don't try to download more files, but the previous ones (if any) will still be downloaded\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (downloadedFiles.length > 0) {\n\t\t\t\tif (action === DownloadPostProcessing.Open) {\n\t\t\t\t\tthis.openDownloadedFiles(downloadedFiles)\n\t\t\t\t} else {\n\t\t\t\t\tawait this.writeDownloadedFiles(downloadedFiles)\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (isOffline) {\n\t\t\t\tthrow new ConnectionError(\"currently offline\")\n\t\t\t}\n\t\t} finally {\n\t\t\t// we don't necessarily know when the user is done with the temporary file that was opened\n\t\t\t// because we don't have a handle to the opening application/process.\n\t\t\tif (action !== DownloadPostProcessing.Open) await this.cleanUp(downloadedFiles)\n\t\t}\n\t}\n\n\t/**\n\t * get the referenced TutanotaFile as a DataFile without writing anything to disk\n\t */\n\tasync getAsDataFile(file: TutanotaFile): Promise<DataFile> {\n\t\t// using the browser's built-in download since we don't want to write anything to disk here\n\t\treturn downloadAndDecryptDataFile(file, this.blobFacade)\n\t}\n\n\t/**\n\t * Save a DataFile locally\n\t */\n\tabstract saveDataFile(file: DataFile): Promise<void>\n\n\t/**\n\t * Download a file from the server to the filesystem\n\t */\n\tasync download(file: TutanotaFile) {\n\t\tawait this.observeProgress(this.doDownload([file], DownloadPostProcessing.Write))\n\t}\n\n\t/**\n\t * Download all provided files\n\t *\n\t * Temporary files are deleted afterwards in apps.\n\t */\n\tasync downloadAll(files: Array<TutanotaFile>): Promise<void> {\n\t\tconst progress = stream(0)\n\t\tawait this.observeProgress(this.doDownload(files, DownloadPostProcessing.Write, progress), progress)\n\t}\n\n\t/**\n\t * Open a file in the host system\n\t * Temporary files are deleted afterwards in apps.\n\t */\n\tasync open(file: TutanotaFile) {\n\t\tawait this.observeProgress(this.doDownload([file], DownloadPostProcessing.Open))\n\t}\n\n\tprotected abstract writeDownloadedFiles(downloadedFiles: Array<FileReference | DataFile>): Promise<void>\n\n\tprotected abstract openDownloadedFiles(downloadedFiles: Array<FileReference | DataFile>): Promise<void>\n\n\tprotected abstract cleanUp(downloadedFiles: Array<FileReference | DataFile>): Promise<void>\n\n\t/**\n\t * Get a file from the server and decrypt it\n\t */\n\tprotected abstract downloadAndDecrypt(file: TutanotaFile): Promise<FileReference | DataFile>\n}\n\nexport function handleDownloadErrors<R>(e: Error, errorAction: (msg: TranslationKey) => R): R {\n\tif (isOfflineError(e)) {\n\t\treturn errorAction(\"couldNotAttachFile_msg\")\n\t} else if (e instanceof CryptoError) {\n\t\treturn errorAction(\"corrupted_msg\")\n\t} else {\n\t\tthrow e\n\t}\n}\n\nexport function readLocalFiles(nativeFiles: Array<File>): Promise<Array<DataFile>> {\n\treturn promiseMap(\n\t\tnativeFiles,\n\t\t(nativeFile) => {\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tlet reader = new FileReader()\n\n\t\t\t\treader.onloadend = function (evt: ProgressEvent) {\n\t\t\t\t\tconst target: any = evt.target\n\n\t\t\t\t\tif (target.readyState === reader.DONE && target.result) {\n\t\t\t\t\t\t// DONE == 2\n\t\t\t\t\t\tresolve(convertToDataFile(nativeFile, new Uint8Array(target.result)))\n\t\t\t\t\t} else {\n\t\t\t\t\t\treject(new Error(\"could not load file\"))\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treader.readAsArrayBuffer(nativeFile)\n\t\t\t})\n\t\t},\n\t\t{\n\t\t\tconcurrency: 5,\n\t\t},\n\t)\n}\n\n/**\n * @param allowMultiple allow selecting multiple files\n * @param allowedExtensions Array of extensions strings without \".\"\n */\nexport function showFileChooser(allowMultiple: boolean, allowedExtensions?: Array<string>): Promise<Array<DataFile>> {\n\t// each time when called create a new file chooser to make sure that the same file can be selected twice directly after another\n\t// remove the last file input\n\tconst fileInput = document.getElementById(\"hiddenFileChooser\")\n\tconst body = neverNull(document.body)\n\n\tif (fileInput) {\n\t\t// remove the old one because it may contain a file already\n\t\tbody.removeChild(fileInput)\n\t}\n\n\tconst newFileInput = document.createElement(\"input\")\n\tnewFileInput.setAttribute(\"type\", \"file\")\n\n\tif (allowMultiple) {\n\t\tnewFileInput.setAttribute(\"multiple\", \"multiple\")\n\t}\n\n\tnewFileInput.setAttribute(\"id\", \"hiddenFileChooser\")\n\n\tif (allowedExtensions) {\n\t\tnewFileInput.setAttribute(\"accept\", allowedExtensions.map((e) => \".\" + e).join(\",\"))\n\t}\n\n\tnewFileInput.style.display = \"none\"\n\tconst promise: Promise<Array<DataFile>> = new Promise((resolve) => {\n\t\tnewFileInput.addEventListener(\"change\", (e: Event) => {\n\t\t\treadLocalFiles((e.target as any).files)\n\t\t\t\t.then(resolve)\n\t\t\t\t.catch(async (e) => {\n\t\t\t\t\tconsole.log(e)\n\t\t\t\t\tawait Dialog.message(\"couldNotAttachFile_msg\")\n\t\t\t\t\tresolve([])\n\t\t\t\t})\n\t\t})\n\t\tnewFileInput.addEventListener(\"cancel\", () => resolve([]))\n\t})\n\t// the file input must be put into the dom, otherwise it does not work in IE\n\tbody.appendChild(newFileInput)\n\tnewFileInput.click()\n\treturn promise\n}\n\n/**\n * takes a list of DataFiles and creates one DataFile from them that represents a zip\n * containing the the other files\n *\n * currently waits on all DataFiles being available before starting to add them to the zip.\n * It may be even faster to create the zip asap and adding the datafiles as they resolve.\n *\n * duplicate file names lead to the second file added overwriting the first one.\n *\n * @param dataFiles Promise resolving to an array of DataFiles\n * @param name the name of the new zip file\n */\nexport async function zipDataFiles(dataFiles: Array<DataFile>, name: string): Promise<DataFile> {\n\tconst jsZip = await import(\"jszip\")\n\tconst zip = jsZip.default()\n\tconst deduplicatedMap = deduplicateFilenames(dataFiles.map((df) => sanitizeFilename(df.name)))\n\tfor (let file of dataFiles) {\n\t\tconst filename = assertNotNull(deduplicatedMap[file.name].shift())\n\t\tzip.file(sanitizeFilename(filename), file.data, { binary: true })\n\t}\n\tconst zipData = await zip.generateAsync({ type: \"uint8array\" })\n\treturn createDataFile(name, \"application/zip\", zipData)\n}\n\nexport async function openDataFileInBrowser(dataFile: DataFile): Promise<void> {\n\ttry {\n\t\tconst URL = window.URL ?? window.webkitURL\n\n\t\t// Workaround for new behaviour in firefox 98 where PDF attachments open in the same tab by default\n\t\t// Users can always change their settings to \"always ask\" or somesuch, but it's very not nice for this to happen at all\n\t\t// because the app gets clobbered, logging users out as well as losing their non-persistent sessions\n\t\t// There is a bug report: https://bugzilla.mozilla.org/show_bug.cgi?id=1756980\n\t\t// It is unclear whether this will be fixed on the firefox side as it seems that they consider it to be expected behaviour\n\t\t// Maybe it will gain enough traction that it will be reverted\n\t\t// It's unclear to me why target=_blank is being ignored. If there is a way to ensure that it always opens a new tab,\n\t\t// Then we should do that instead of this, because it's preferable to keep the mime type.\n\t\tconst needsPdfWorkaround = dataFile.mimeType === \"application/pdf\" && client.browser === BrowserType.FIREFOX && client.browserVersion >= 98\n\n\t\tconst mimeType = needsPdfWorkaround ? \"application/octet-stream\" : dataFile.mimeType\n\n\t\tconst blob = new Blob([dataFile.data], { type: mimeType })\n\t\tconst url = URL.createObjectURL(blob)\n\t\tconst a = document.createElement(\"a\")\n\n\t\tif (typeof a.download !== \"undefined\") {\n\t\t\ta.href = url\n\t\t\ta.download = dataFile.name\n\t\t\ta.style.display = \"none\"\n\t\t\ta.target = \"_blank\"\n\t\t\tdocument.body.appendChild(a)\n\t\t\ta.click()\n\t\t\tdocument.body.removeChild(a)\n\t\t\t// Do not revoke object URL right away so that the browser has a chance to open it\n\t\t\tsetTimeout(() => {\n\t\t\t\twindow.URL.revokeObjectURL(url)\n\t\t\t}, 2000)\n\t\t} else {\n\t\t\tif (client.isIos() && client.browser === BrowserType.CHROME && typeof FileReader === \"function\") {\n\t\t\t\tconst reader = new FileReader()\n\t\t\t\tconst downloadPromise = new Promise((resolve) => {\n\t\t\t\t\treader.onloadend = async function () {\n\t\t\t\t\t\tconst url = reader.result as any\n\t\t\t\t\t\tresolve(await Dialog.legacyDownload(dataFile.name, url))\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\treader.readAsDataURL(blob)\n\t\t\t\tawait downloadPromise\n\t\t\t} else {\n\t\t\t\t// if the download attribute is not supported try to open the link in a new tab.\n\t\t\t\tawait Dialog.legacyDownload(dataFile.name, url)\n\t\t\t}\n\t\t}\n\t} catch (e) {\n\t\tconsole.log(e)\n\t\treturn Dialog.message(\"canNotOpenFileOnDevice_msg\")\n\t}\n}\n\nexport async function downloadAndDecryptDataFile(file: TutanotaFile, blobFacade: BlobFacade): Promise<DataFile> {\n\tconst bytes = await blobFacade.downloadAndDecrypt(ArchiveDataType.Attachments, createReferencingInstance(file))\n\treturn convertToDataFile(file, bytes)\n}\n\nexport async function guiDownload(downloadPromise: Promise<void>, progress?: stream<number>): Promise<void> {\n\ttry {\n\t\tawait showProgressDialog(\"pleaseWait_msg\", downloadPromise, progress)\n\t} catch (e) {\n\t\t// handle the user cancelling the dialog\n\t\tif (e instanceof CancelledError) {\n\t\t\treturn\n\t\t}\n\t\tconsole.log(\"downloadAndOpen error\", e.message)\n\t\tawait handleDownloadErrors(e, Dialog.message)\n\t}\n}\n\nexport async function showNativeFilePicker(fileTypes?: Array<string>, isFileOnly: boolean = false): Promise<ReadonlyArray<DataFile>> {\n\tif (isApp()) {\n\t\tconst rect = { width: 0, height: 0, left: 0, top: 0 } as DOMRect\n\t\ttry {\n\t\t\tconst fileApp = locator.fileApp\n\t\t\tconst fileList = await fileApp.openFileChooser(rect, fileTypes, isFileOnly)\n\t\t\tconst readFiles: DataFile[] = []\n\t\t\tfor (const file of fileList) {\n\t\t\t\tconst data = await fileApp.readDataFile(file.location)\n\n\t\t\t\tif (!data) continue\n\n\t\t\t\treadFiles.push(data)\n\t\t\t}\n\n\t\t\treturn Promise.resolve(readFiles)\n\t\t} catch (err) {\n\t\t\tif (err instanceof PermissionError) {\n\t\t\t\tDialog.message(\"fileAccessDeniedMobile_msg\")\n\t\t\t} else if (err instanceof FileNotFoundError) {\n\t\t\t\tDialog.message(\"couldNotAttachFile_msg\")\n\t\t\t}\n\n\t\t\tconsole.log(\"Failed read files\", err)\n\t\t}\n\t}\n\n\treturn Promise.resolve([])\n}\n"]}