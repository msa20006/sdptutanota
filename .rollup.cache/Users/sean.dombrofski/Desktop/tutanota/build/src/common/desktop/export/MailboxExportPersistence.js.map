{"version":3,"file":"MailboxExportPersistence.js","sourceRoot":"","sources":["../../../../../src/common/desktop/export/MailboxExportPersistence.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,gBAAgB,EAAE,MAAM,yBAAyB,CAAA;AAuB1D,MAAM,OAAO,wBAAwB;IACP;IAA7B,YAA6B,IAAmB;QAAnB,SAAI,GAAJ,IAAI,CAAe;IAAG,CAAC;IAEpD,KAAK,CAAC,eAAe,CAAC,MAAU;QAC/B,OAAO,CAAC,MAAM,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC,CAAA;IACrC,CAAC;IAED,KAAK,CAAC,eAAe,CAAC,KAAyB;QAC9C,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,MAAM,EAAE,CAAA;QAC/B,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,KAAK,CAAA;QACzB,MAAM,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,GAAG,CAAC,CAAA;IACjE,CAAC;IAED,KAAK,CAAC,iBAAiB,CAAC,MAAU;QACjC,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,MAAM,EAAE,CAAA;QAC/B,OAAO,GAAG,CAAC,MAAM,CAAC,CAAA;QAClB,MAAM,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,GAAG,CAAC,CAAA;IACjE,CAAC;IAEO,KAAK,CAAC,MAAM;QACnB,OAAO,MAAM,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,CAAA;IACnE,CAAC;CACD","sourcesContent":["import { DesktopConfig } from \"../config/DesktopConfig.js\"\nimport { DesktopConfigKey } from \"../config/ConfigKeys.js\"\n\nexport type MailboxExportState =\n\t| {\n\t\t\ttype: \"running\"\n\t\t\tuserId: Id\n\t\t\tmailboxId: Id\n\t\t\texportDirectoryPath: string\n\t\t\tmailBagId: Id\n\t\t\tmailId: Id\n\t\t\texportedMails: number\n\t  }\n\t| {\n\t\t\ttype: \"finished\"\n\t\t\tuserId: Id\n\t\t\tmailboxId: Id\n\t\t\texportDirectoryPath: string\n\t  }\n\t| {\n\t\t\ttype: \"locked\"\n\t\t\tuserId: Id\n\t  }\n\nexport class MailboxExportPersistence {\n\tconstructor(private readonly conf: DesktopConfig) {}\n\n\tasync getStateForUser(userId: Id): Promise<MailboxExportState | null> {\n\t\treturn (await this.getMap())[userId]\n\t}\n\n\tasync setStateForUser(state: MailboxExportState) {\n\t\tconst map = await this.getMap()\n\t\tmap[state.userId] = state\n\t\tawait this.conf.setVar(DesktopConfigKey.mailboxExportState, map)\n\t}\n\n\tasync clearStateForUser(userId: Id) {\n\t\tconst map = await this.getMap()\n\t\tdelete map[userId]\n\t\tawait this.conf.setVar(DesktopConfigKey.mailboxExportState, map)\n\t}\n\n\tprivate async getMap(): Promise<Record<Id, MailboxExportState>> {\n\t\treturn await this.conf.getVar(DesktopConfigKey.mailboxExportState)\n\t}\n}\n"]}