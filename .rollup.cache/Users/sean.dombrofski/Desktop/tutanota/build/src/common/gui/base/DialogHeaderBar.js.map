{"version":3,"file":"DialogHeaderBar.js","sourceRoot":"","sources":["../../../../../src/common/gui/base/DialogHeaderBar.ts"],"names":[],"mappings":"AAAA,OAAO,CAAiC,MAAM,SAAS,CAAA;AAEvD,OAAO,EAAE,MAAM,EAAE,MAAM,aAAa,CAAA;AAEpC,OAAO,EAAE,gBAAgB,EAAE,MAAM,uBAAuB,CAAA;AACxD,OAAO,EAAE,IAAI,EAAoB,MAAM,iCAAiC,CAAA;AAYxE;;GAEG;AACH,MAAM,OAAO,eAAe;IAC3B,IAAI,CAAC,KAAkC;QACtC,MAAM,CAAC,GAAG,MAAM,CAAC,MAAM,CACtB,EAAE,EACF;YACC,IAAI,EAAE,EAAE;YACR,KAAK,EAAE,EAAE;SACT,EACD,KAAK,CAAC,KAAK,CACX,CAAA;QACD,IAAI,WAAW,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,6BAA6B,CAAC,CAAC,CAAC,4BAA4B,CAAA;QACzF,OAAO,CAAC,CACP,mEAAmE,EACnE;YACC,QAAQ,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE;gBACrB,IAAI,CAAC,CAAC,MAAM;oBAAE,CAAC,CAAC,MAAM,CAAC,GAAkB,CAAC,CAAA;YAC3C,CAAC;YACD,QAAQ,EAAE,GAAG,EAAE;gBACd,IAAI,CAAC,CAAC,MAAM;oBAAE,CAAC,CAAC,MAAM,EAAE,CAAA;YACzB,CAAC;YACD,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,KAAK;SACxB,EACD;YACC,CAAC,CACA,WAAW,GAAG,gBAAgB,EAC9B,gBAAgB,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CACjD,EAAE,oGAAoG;YACvG,CAAC,CAAC,MAAM;gBACP,CAAC,CAAC,CAAC,CACD,oFAAoF,EACpF;oBACC,aAAa,EAAE,UAAU,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE;iBACnD,EACD,CAAC,CAAC,CAAC,gBAAgB,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CACvD;gBACH,CAAC,CAAC,IAAI;YACP,CAAC,CACA,WAAW,GAAG,iCAAiC,EAC/C,gBAAgB,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAClD;SACD,CACD,CAAA;IACF,CAAC;CACD","sourcesContent":["import m, { Children, Component, Vnode } from \"mithril\"\nimport type { ButtonAttrs } from \"./Button.js\"\nimport { Button } from \"./Button.js\"\nimport type { lazy, MaybeLazy } from \"@tutao/tutanota-utils\"\nimport { resolveMaybeLazy } from \"@tutao/tutanota-utils\"\nimport { lang, MaybeTranslation } from \"../../misc/LanguageViewModel.js\"\n\nexport type DialogHeaderBarAttrs = {\n\tleft?: MaybeLazy<Array<ButtonAttrs>>\n\tright?: MaybeLazy<Array<ButtonAttrs>>\n\tmiddle?: MaybeTranslation\n\tcreate?: (dom: HTMLElement) => void\n\tremove?: () => void\n\tnoHeader?: boolean\n\tclass?: string\n}\n\n/**\n * An action bar is a bar that contains buttons (either on the left or on the right).\n */\nexport class DialogHeaderBar implements Component<DialogHeaderBarAttrs> {\n\tview(vnode: Vnode<DialogHeaderBarAttrs>): Children {\n\t\tconst a = Object.assign(\n\t\t\t{},\n\t\t\t{\n\t\t\t\tleft: [],\n\t\t\t\tright: [],\n\t\t\t},\n\t\t\tvnode.attrs,\n\t\t)\n\t\tlet columnClass = a.middle ? \".flex-third.overflow-hidden\" : \".flex-half.overflow-hidden\"\n\t\treturn m(\n\t\t\t\".dialog-header.plr-l.flex-space-between.dialog-header-line-height\",\n\t\t\t{\n\t\t\t\toncreate: ({ dom }) => {\n\t\t\t\t\tif (a.create) a.create(dom as HTMLElement)\n\t\t\t\t},\n\t\t\t\tonremove: () => {\n\t\t\t\t\tif (a.remove) a.remove()\n\t\t\t\t},\n\t\t\t\tclass: vnode.attrs.class,\n\t\t\t},\n\t\t\t[\n\t\t\t\tm(\n\t\t\t\t\tcolumnClass + \".ml-negative-s\",\n\t\t\t\t\tresolveMaybeLazy(a.left).map((a) => m(Button, a)),\n\t\t\t\t), // ellipsis is not working if the text is directly in the flex element, so create a child div for it\n\t\t\t\ta.middle\n\t\t\t\t\t? m(\n\t\t\t\t\t\t\t\"#dialog-title.flex-third-middle.overflow-hidden.flex.justify-center.items-center.b\",\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"data-testid\": `dialog:${lang.getTestId(a.middle)}`,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t[m(\".text-ellipsis\", lang.getTranslationText(a.middle))],\n\t\t\t\t\t  )\n\t\t\t\t\t: null,\n\t\t\t\tm(\n\t\t\t\t\tcolumnClass + \".mr-negative-s.flex.justify-end\",\n\t\t\t\t\tresolveMaybeLazy(a.right).map((a) => m(Button, a)),\n\t\t\t\t),\n\t\t\t],\n\t\t)\n\t}\n}\n"]}