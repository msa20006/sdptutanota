{"version":3,"file":"SearchDropDown.js","sourceRoot":"","sources":["../../../../src/common/gui/SearchDropDown.ts"],"names":[],"mappings":"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","sourcesContent":["import m, { Children, ClassComponent, Vnode } from \"mithril\"\nimport { scrollListDom } from \"./base/GuiUtils.js\"\nimport { px, size } from \"./size.js\"\nimport { windowFacade } from \"../misc/WindowFacade.js\"\n\nconst EntryHeight = 60\n\nexport interface SearchDropDownAttrs<T extends Suggestion> {\n\tsuggestions: ReadonlyArray<T>\n\tselectedSuggestionIndex: number\n\tonSuggestionSelected: (idx: number) => void\n\n\t/** max amount of suggestions that can be visible without scrolling */\n\tmaxHeight: number | null\n}\n\nexport interface Suggestion {\n\tfirstRow: Children\n\tsecondRow: string\n\tdisplay?: boolean\n}\n\nexport class SearchDropDown<T extends Suggestion> implements ClassComponent<SearchDropDownAttrs<T>> {\n\tprivate domSuggestions!: HTMLElement\n\tprivate keyboardHeight: number = 0\n\n\toncreate() {\n\t\twindowFacade.addKeyboardSizeListener((newSize) => {\n\t\t\t// *-------------------*  -\n\t\t\t// |                   |  |\n\t\t\t// |   -------------   |  - <- top\n\t\t\t// |   |           |   |\n\t\t\t// |   |-----------|   |\n\t\t\t// |-------------------|  - <- keyboardHeight\n\t\t\t// | q w e r t z u i o |  |\n\t\t\t// | a s d f g h j k l |  -\n\t\t\t//\n\t\t\t// On iOS screen is not resized when keyboard is opened. Instead we send a signal to WebView with keyboard height.\n\t\t\tthis.keyboardHeight = newSize\n\t\t})\n\t}\n\n\tview({ attrs }: Vnode<SearchDropDownAttrs<T>>): Children {\n\t\tif (attrs.selectedSuggestionIndex !== attrs.selectedSuggestionIndex && this.domSuggestions) {\n\t\t\trequestAnimationFrame(() => {\n\t\t\t\tscrollListDom(this.domSuggestions, EntryHeight, attrs.selectedSuggestionIndex)\n\t\t\t})\n\t\t}\n\n\t\t// We need to calculate how much space can be actually used for the dropdown. We cannot just add margin like we do with dialog\n\t\t// because the suggestions dropdown is absolutely positioned.\n\t\tlet dropdownHeight = EntryHeight * Math.min(attrs.maxHeight ?? Number.MAX_VALUE, attrs.suggestions.length)\n\t\tif (this.domSuggestions) {\n\t\t\tconst top = this.domSuggestions.getBoundingClientRect().top\n\t\t\tconst availableHeight = window.innerHeight - top - this.keyboardHeight - size.vpad\n\t\t\tdropdownHeight = Math.min(availableHeight, dropdownHeight)\n\t\t}\n\n\t\treturn m(\n\t\t\t`.abs.z4.full-width.elevated-bg.scroll.text-ellipsis${attrs.suggestions.length ? \".dropdown-shadow\" : \"\"}`,\n\t\t\t{\n\t\t\t\toncreate: (vnode) => (this.domSuggestions = vnode.dom as HTMLElement),\n\t\t\t\tstyle: {\n\t\t\t\t\ttransition: \"height 0.2s\",\n\t\t\t\t\theight: px(dropdownHeight),\n\t\t\t\t},\n\t\t\t},\n\t\t\tattrs.suggestions.map((suggestion, idx) => this.renderSuggestion(attrs, suggestion, idx)),\n\t\t)\n\t}\n\n\tprivate renderSuggestion(attrs: SearchDropDownAttrs<T>, { firstRow, secondRow, display }: T, idx: number): Children {\n\t\tconst selected = idx === attrs.selectedSuggestionIndex\n\n\t\tif (display !== undefined && !display) {\n\t\t\treturn null\n\t\t}\n\n\t\treturn m(\n\t\t\t\".pt-s.pb-s.click.content-hover\",\n\t\t\t{\n\t\t\t\tclass: selected ? \"content-accent-fg row-selected icon-accent\" : \"\",\n\t\t\t\tonmousedown: () => attrs.onSuggestionSelected(idx),\n\t\t\t\tstyle: {\n\t\t\t\t\t\"padding-left\": selected ? px(size.hpad_large - 3) : px(size.hpad_large),\n\t\t\t\t\t\"border-left\": selected ? \"3px solid\" : null,\n\t\t\t\t\theight: px(EntryHeight),\n\t\t\t\t},\n\t\t\t},\n\t\t\t[m(\".small.full-width.text-ellipsis\", firstRow), m(\".name.full-width.text-ellipsis\", secondRow)],\n\t\t)\n\t}\n}\n"]}