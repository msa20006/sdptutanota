{"version":3,"file":"FileFacadeSendDispatcher.js","sourceRoot":"","sources":["../../../../../../src/common/native/common/generatedipc/FileFacadeSendDispatcher.ts"],"names":[],"mappings":"AAAA,iCAAiC;AAOjC,MAAM,OAAO,wBAAwB;IACP;IAA7B,YAA6B,SAA0B;QAA1B,cAAS,GAAT,SAAS,CAAiB;IAAG,CAAC;IAC3D,KAAK,CAAC,IAAI,CAAC,GAAG,IAAoC;QACjD,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC,YAAY,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,CAAC,CAAA;IAC3E,CAAC;IACD,KAAK,CAAC,eAAe,CAAC,GAAG,IAA+C;QACvE,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC,YAAY,EAAE,iBAAiB,EAAE,GAAG,IAAI,CAAC,CAAC,CAAA;IACtF,CAAC;IACD,KAAK,CAAC,iBAAiB,CAAC,GAAG,IAAiD;QAC3E,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC,YAAY,EAAE,mBAAmB,EAAE,GAAG,IAAI,CAAC,CAAC,CAAA;IACxF,CAAC;IACD,KAAK,CAAC,UAAU,CAAC,GAAG,IAA0C;QAC7D,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC,YAAY,EAAE,YAAY,EAAE,GAAG,IAAI,CAAC,CAAC,CAAA;IACjF,CAAC;IACD,KAAK,CAAC,OAAO,CAAC,GAAG,IAAuC;QACvD,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC,YAAY,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC,CAAC,CAAA;IAC9E,CAAC;IACD,KAAK,CAAC,WAAW,CAAC,GAAG,IAA2C;QAC/D,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC,YAAY,EAAE,aAAa,EAAE,GAAG,IAAI,CAAC,CAAC,CAAA;IAClF,CAAC;IACD,KAAK,CAAC,OAAO,CAAC,GAAG,IAAuC;QACvD,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC,YAAY,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC,CAAC,CAAA;IAC9E,CAAC;IACD,KAAK,CAAC,0BAA0B,CAAC,GAAG,IAA0D;QAC7F,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC,YAAY,EAAE,4BAA4B,EAAE,GAAG,IAAI,CAAC,CAAC,CAAA;IACjG,CAAC;IACD,KAAK,CAAC,MAAM,CAAC,GAAG,IAAsC;QACrD,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC,YAAY,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC,CAAC,CAAA;IAC7E,CAAC;IACD,KAAK,CAAC,QAAQ,CAAC,GAAG,IAAwC;QACzD,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC,YAAY,EAAE,UAAU,EAAE,GAAG,IAAI,CAAC,CAAC,CAAA;IAC/E,CAAC;IACD,KAAK,CAAC,QAAQ,CAAC,GAAG,IAAwC;QACzD,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC,YAAY,EAAE,UAAU,EAAE,GAAG,IAAI,CAAC,CAAC,CAAA;IAC/E,CAAC;IACD,KAAK,CAAC,aAAa,CAAC,GAAG,IAA6C;QACnE,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC,YAAY,EAAE,eAAe,EAAE,GAAG,IAAI,CAAC,CAAC,CAAA;IACpF,CAAC;IACD,KAAK,CAAC,SAAS,CAAC,GAAG,IAAyC;QAC3D,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC,YAAY,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC,CAAC,CAAA;IAChF,CAAC;IACD,KAAK,CAAC,SAAS,CAAC,GAAG,IAAyC;QAC3D,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC,YAAY,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC,CAAC,CAAA;IAChF,CAAC;IACD,KAAK,CAAC,aAAa,CAAC,GAAG,IAA6C;QACnE,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC,YAAY,EAAE,eAAe,EAAE,GAAG,IAAI,CAAC,CAAC,CAAA;IACpF,CAAC;IACD,KAAK,CAAC,YAAY,CAAC,GAAG,IAA4C;QACjE,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC,YAAY,EAAE,cAAc,EAAE,GAAG,IAAI,CAAC,CAAC,CAAA;IACnF,CAAC;CACD","sourcesContent":["/* generated file, don't edit. */\n\nimport { FileFacade } from \"./FileFacade.js\"\n\ninterface NativeInterface {\n\tinvokeNative(requestType: string, args: unknown[]): Promise<any>\n}\nexport class FileFacadeSendDispatcher implements FileFacade {\n\tconstructor(private readonly transport: NativeInterface) {}\n\tasync open(...args: Parameters<FileFacade[\"open\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"FileFacade\", \"open\", ...args])\n\t}\n\tasync openFileChooser(...args: Parameters<FileFacade[\"openFileChooser\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"FileFacade\", \"openFileChooser\", ...args])\n\t}\n\tasync openFolderChooser(...args: Parameters<FileFacade[\"openFolderChooser\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"FileFacade\", \"openFolderChooser\", ...args])\n\t}\n\tasync deleteFile(...args: Parameters<FileFacade[\"deleteFile\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"FileFacade\", \"deleteFile\", ...args])\n\t}\n\tasync getName(...args: Parameters<FileFacade[\"getName\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"FileFacade\", \"getName\", ...args])\n\t}\n\tasync getMimeType(...args: Parameters<FileFacade[\"getMimeType\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"FileFacade\", \"getMimeType\", ...args])\n\t}\n\tasync getSize(...args: Parameters<FileFacade[\"getSize\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"FileFacade\", \"getSize\", ...args])\n\t}\n\tasync putFileIntoDownloadsFolder(...args: Parameters<FileFacade[\"putFileIntoDownloadsFolder\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"FileFacade\", \"putFileIntoDownloadsFolder\", ...args])\n\t}\n\tasync upload(...args: Parameters<FileFacade[\"upload\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"FileFacade\", \"upload\", ...args])\n\t}\n\tasync download(...args: Parameters<FileFacade[\"download\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"FileFacade\", \"download\", ...args])\n\t}\n\tasync hashFile(...args: Parameters<FileFacade[\"hashFile\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"FileFacade\", \"hashFile\", ...args])\n\t}\n\tasync clearFileData(...args: Parameters<FileFacade[\"clearFileData\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"FileFacade\", \"clearFileData\", ...args])\n\t}\n\tasync joinFiles(...args: Parameters<FileFacade[\"joinFiles\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"FileFacade\", \"joinFiles\", ...args])\n\t}\n\tasync splitFile(...args: Parameters<FileFacade[\"splitFile\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"FileFacade\", \"splitFile\", ...args])\n\t}\n\tasync writeDataFile(...args: Parameters<FileFacade[\"writeDataFile\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"FileFacade\", \"writeDataFile\", ...args])\n\t}\n\tasync readDataFile(...args: Parameters<FileFacade[\"readDataFile\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"FileFacade\", \"readDataFile\", ...args])\n\t}\n}\n"]}