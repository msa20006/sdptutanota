{"version":3,"file":"RadioSelector.js","sourceRoot":"","sources":["../../../../../src/common/gui/base/RadioSelector.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,IAAI,EAAE,MAAM,8BAA8B,CAAA;AACnD,OAAO,CAAiC,MAAM,SAAS,CAAA;AACvD,OAAO,EAAE,KAAK,EAAE,MAAM,UAAU,CAAA;AAehC;;GAEG;AACH,MAAM,OAAO,aAAa;IACzB,IAAI,CAAC,EAAE,KAAK,EAAgC;QAC3C,OAAO,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,EAAE,MAAM,EAAE,KAAK,CAAC,cAAc,EAAE,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,gBAAgB,CAAC,CAAC,CAAA;IACvI,CAAC;IAEO,YAAY,CACnB,SAA2B,EAC3B,MAA8B,EAC9B,cAAiB,EACjB,WAA+B,EAC/B,gBAAsC;QAEtC,MAAM,IAAI,GAAG,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAA;QAC/C,MAAM,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAA;QACxC,MAAM,UAAU,GAAG,MAAM,CAAC,KAAK,KAAK,cAAc,CAAA;QAElD,+DAA+D;QAC/D,MAAM,QAAQ,GAAG,IAAI,GAAG,WAAW,CAAA;QAEnC,MAAM,WAAW,GAAG,WAAW,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,WAAW,CAAC,CAAC,CAAC,EAAE,CAAA;QAEhE,+FAA+F;QAC/F,OAAO,CAAC,CACP,6DAA6D,EAC7D;YACC,0EAA0E;YAC1E,KAAK,EAAE,oCAAoC,GAAG,WAAW;YACzD,KAAK,EAAE;gBACN,WAAW,EAAE,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,KAAK,CAAC,cAAc;gBACrE,WAAW,EAAE,KAAK;gBAClB,MAAM,EAAE,aAAa;aACrB;YACD,OAAO,EAAE,GAAG,EAAE;gBACb,gBAAgB,CAAC,MAAM,CAAC,KAAK,CAAC,CAAA;YAC/B,CAAC;SACD,EACD;YACC,CAAC,CAAC,uDAAuD,EAAE;gBAC1D;;mBAEG;gBACH,IAAI,EAAE,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC;gBACxC,KAAK,EAAE,WAAW;gBAClB,EAAE,EAAE,QAAQ;gBACZ,8CAA8C;gBAC9C,OAAO,EAAE,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI;aACjC,CAAC;YACF,CAAC,CAAC,0BAA0B,EAAE,EAAE,GAAG,EAAE,QAAQ,EAAE,EAAE,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;SACtF,CACD,CAAA;IACF,CAAC;CACD","sourcesContent":["import type { MaybeTranslation } from \"../../misc/LanguageViewModel\"\nimport { lang } from \"../../misc/LanguageViewModel\"\nimport m, { Children, Component, Vnode } from \"mithril\"\nimport { theme } from \"../theme\"\n\nexport type RadioSelectorOption<T> = {\n\treadonly name: MaybeTranslation\n\treadonly value: T\n}\nexport type RadioSelectorAttrs<T> = {\n\t// The unique name of the radio button group. The browser uses it to group the radio buttons together.\n\tname: MaybeTranslation\n\toptions: ReadonlyArray<RadioSelectorOption<T>>\n\tclass?: string\n\tselectedOption: T\n\tonOptionSelected: (arg0: T) => unknown\n}\n\n/**\n * Component which shows selection for a single choice.\n */\nexport class RadioSelector<T> implements Component<RadioSelectorAttrs<T>> {\n\tview({ attrs }: Vnode<RadioSelectorAttrs<T>>): Children {\n\t\treturn attrs.options.map((option) => this.renderOption(attrs.name, option, attrs.selectedOption, attrs.class, attrs.onOptionSelected))\n\t}\n\n\tprivate renderOption(\n\t\tgroupName: MaybeTranslation,\n\t\toption: RadioSelectorOption<T>,\n\t\tselectedOption: T,\n\t\toptionClass: string | undefined,\n\t\tonOptionSelected: (arg0: T) => unknown,\n\t): Children {\n\t\tconst name = lang.getTranslationText(groupName)\n\t\tconst valueString = String(option.value)\n\t\tconst isSelected = option.value === selectedOption\n\n\t\t// IDs used to link the label and description for accessibility\n\t\tconst optionId = name + valueString\n\n\t\tconst attrClasses = optionClass != null ? \" \" + optionClass : \"\"\n\n\t\t// The wrapper is needed because <input> is self-closing and will not take the label as a child\n\t\treturn m(\n\t\t\t\".state-bg.border.border-radius.flex.items-center.mb.pl-l.pr\",\n\t\t\t{\n\t\t\t\t// Make the option the same size as a button if a description is not given\n\t\t\t\tclass: \"button-min-width button-min-height\" + attrClasses,\n\t\t\t\tstyle: {\n\t\t\t\t\tborderColor: isSelected ? theme.content_accent : theme.content_border,\n\t\t\t\t\tborderWidth: \"2px\",\n\t\t\t\t\theight: \"fit-content\",\n\t\t\t\t},\n\t\t\t\tonclick: () => {\n\t\t\t\t\tonOptionSelected(option.value)\n\t\t\t\t},\n\t\t\t},\n\t\t\t[\n\t\t\t\tm(\"input[type=radio].m-0.mr-button.content-accent-accent\", {\n\t\t\t\t\t/* The `name` attribute defines the group the radio button belongs to. Not the name/label of the radio button itself.\n\t\t\t\t\t * See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/radio#defining_a_radio_group\n\t\t\t\t\t */\n\t\t\t\t\tname: lang.getTranslationText(groupName),\n\t\t\t\t\tvalue: valueString,\n\t\t\t\t\tid: optionId,\n\t\t\t\t\t// Handle changes in value from the attributes\n\t\t\t\t\tchecked: isSelected ? true : null,\n\t\t\t\t}),\n\t\t\t\tm(\"label.b.left.pt-xs.pb-xs\", { for: optionId }, lang.getTranslationText(option.name)),\n\t\t\t],\n\t\t)\n\t}\n}\n"]}