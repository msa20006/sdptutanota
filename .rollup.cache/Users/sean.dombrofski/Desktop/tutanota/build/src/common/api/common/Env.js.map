{"version":3,"file":"Env.js","sourceRoot":"","sources":["../../../../../src/common/api/common/Env.ts"],"names":[],"mappings":"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","sourcesContent":["//@bundleInto:common-min\n\nimport { ProgrammingError } from \"./error/ProgrammingError.js\"\n\n// keep in sync with LaunchHtml.js meta tag title\nexport const LOGIN_TITLE = \"Mail. Done. Right. Tuta Mail Login & Sign up for an Ad-free Mailbox\"\nexport const Mode: Record<EnvMode, EnvMode> = Object.freeze({\n\tBrowser: \"Browser\",\n\tApp: \"App\",\n\tTest: \"Test\",\n\tPlayground: \"Playground\",\n\tDesktop: \"Desktop\",\n\tAdmin: \"Admin\",\n})\n\nexport function getWebsocketBaseUrl(domainConfig: DomainConfig): string {\n\treturn (\n\t\tdomainConfig.apiUrl\n\t\t\t// replaces http: with ws: and https: with wss:\n\t\t\t.replace(/^http/, \"ws\")\n\t)\n}\n\n/** Returns the origin which should be used for API requests. */\nexport function getApiBaseUrl(domainConfig: DomainConfig): string {\n\tif (isIOSApp()) {\n\t\t// http:// -> api:// and https:// -> apis://\n\t\treturn domainConfig.apiUrl.replace(/^http/, \"api\")\n\t} else {\n\t\treturn domainConfig.apiUrl\n\t}\n}\n\nexport function isIOSApp(): boolean {\n\tif (isApp() && env.platformId == null) {\n\t\tthrow new ProgrammingError(\"PlatformId is not set!\")\n\t}\n\treturn env.mode === Mode.App && env.platformId === \"ios\"\n}\n\n/**\n * Return true if an Apple device; used for checking if CTRL or CMD/Meta should be used as the primary modifier\n */\nexport function isAppleDevice(): boolean {\n\treturn env.platformId === \"darwin\" || isIOSApp()\n}\n\nexport function isAndroidApp(): boolean {\n\tif (isApp() && env.platformId == null) {\n\t\tthrow new ProgrammingError(\"PlatformId is not set!\")\n\t}\n\n\treturn env.mode === Mode.App && env.platformId === \"android\"\n}\n\nexport function isApp(): boolean {\n\treturn env.mode === Mode.App\n}\n\nexport function isDesktop(): boolean {\n\treturn env.mode === Mode.Desktop\n}\n\nexport function isBrowser(): boolean {\n\treturn env.mode === Mode.Browser\n}\n\nexport function ifDesktop<T>(obj: T | null): T | null {\n\treturn isDesktop() ? obj : null\n}\n\nlet worker = typeof WorkerGlobalScope !== \"undefined\" && self instanceof WorkerGlobalScope\nlet node = typeof process === \"object\" && typeof process.versions === \"object\" && typeof process.versions.node !== \"undefined\"\n\nexport function isMain(): boolean {\n\treturn !worker && !node\n}\n\nexport function isWebClient() {\n\treturn env.mode === Mode.Browser\n}\n\nexport function isAdminClient(): boolean {\n\treturn env.mode === Mode.Admin\n}\n\nexport function isElectronClient(): boolean {\n\treturn isDesktop() || isAdminClient()\n}\n\nexport function isMainOrNode(): boolean {\n\treturn !worker || node || env.mode === Mode.Test\n}\n\nexport function isWorkerOrNode(): boolean {\n\treturn worker || node || env.mode === Mode.Test\n}\n\nexport function isWorker(): boolean {\n\treturn worker\n}\n\nexport function isTest(): boolean {\n\treturn env.mode === Mode.Test\n}\n\nexport function isDesktopMainThread(): boolean {\n\treturn node && typeof env !== \"undefined\" && (env.mode === Mode.Desktop || env.mode === Mode.Admin)\n}\n\nlet boot = !isDesktopMainThread() && !isWorker()\n\n/**\n * A hackaround. Set by bundler.\n * Rolldown doesn't inline const enums at the moment, so we can't assert the loading order.\n * If not set defaults to true\n */\nconst assertionsEnabled = typeof LOAD_ASSERTIONS === \"undefined\" || LOAD_ASSERTIONS\n\nexport function assertMainOrNode() {\n\tif (!assertionsEnabled) return\n\n\tif (!isMainOrNode()) {\n\t\tthrow new Error(\"this code must not run in the worker thread\")\n\t}\n\n\tif (boot) {\n\t\tthrow new Error(\"this main code must not be loaded at boot time\")\n\t}\n}\n\nexport function assertMainOrNodeBoot() {\n\tif (!assertionsEnabled) return\n\n\tif (!isMainOrNode()) {\n\t\tthrow new Error(\"this code must not run in the worker thread\")\n\t}\n}\n\nexport function assertWorkerOrNode() {\n\tif (!assertionsEnabled) return\n\n\tif (!isWorkerOrNode()) {\n\t\tthrow new Error(\"this code must not run in the gui thread\")\n\t}\n}\n\nexport function bootFinished() {\n\tboot = false\n}\n\n/**\n * Whether or not we will be using an offline cache (doesn't take into account if credentials are stored)\n */\nexport function isOfflineStorageAvailable(): boolean {\n\treturn !isBrowser()\n}\n"]}