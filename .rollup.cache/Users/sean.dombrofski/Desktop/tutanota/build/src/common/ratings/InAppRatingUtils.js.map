{"version":3,"file":"InAppRatingUtils.js","sourceRoot":"","sources":["../../../../src/common/ratings/InAppRatingUtils.ts"],"names":[],"mappings":"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","sourcesContent":["import { DeviceConfig } from \"../misc/DeviceConfig.js\"\nimport { DateTime } from \"luxon\"\nimport { locator } from \"../api/main/CommonLocator.js\"\n\nexport function createEvent(deviceConfig: DeviceConfig): void {\n\tconst retentionPeriod: number = 30\n\tlet events = deviceConfig.getEvents().filter((event) => isWithinLastNDays(new Date(), event, retentionPeriod))\n\tevents.push(new Date())\n\tdeviceConfig.writeEvents(events)\n}\n\nexport function isWithinLastNDays(now: Date, date: Date, days: number) {\n\treturn DateTime.fromJSDate(now).diff(DateTime.fromJSDate(date), \"days\").days < days\n}\n\nexport enum RatingCheckResult {\n\tRATING_ALLOWED,\n\tUNSUPPORTED_PLATFORM,\n\tLAST_RATING_TOO_YOUNG,\n\tAPP_INSTALLATION_TOO_YOUNG,\n\tACCOUNT_TOO_YOUNG,\n\tRATING_DISMISSED,\n}\n\n/**\n * Determines if we are allowed to ask the user for their rating.\n * It is possible that the user delayed his choice or if we already asked them within the past year.\n *\n * 1. The app must be running on an iOS device.\n * 2. The app installation date and customer creation date must both be at least 7 days in the past.\n * 3. The dialog must not have been shown within the last year (When the dialog is dismissed with the cancel button it is not considered being shown).\n * 4. The retry prompt timer (if set) must have expired.\n */\nexport async function getRatingAllowed(now: Date, deviceConfig: DeviceConfig, isIOSApp: boolean): Promise<RatingCheckResult> {\n\tif (!isIOSApp) {\n\t\treturn RatingCheckResult.UNSUPPORTED_PLATFORM\n\t}\n\n\tconst lastRatingPromptedDate: Date | null = deviceConfig.getLastRatingPromptedDate()\n\n\tif (lastRatingPromptedDate != null && DateTime.fromJSDate(now).diff(DateTime.fromJSDate(lastRatingPromptedDate), \"years\").years < 1) {\n\t\treturn RatingCheckResult.LAST_RATING_TOO_YOUNG\n\t}\n\n\tconst appInstallationDate = await locator.systemFacade.getInstallationDate().then((rawDate) => new Date(Number(rawDate)))\n\tif (isWithinLastNDays(now, appInstallationDate, 7)) {\n\t\treturn RatingCheckResult.APP_INSTALLATION_TOO_YOUNG\n\t}\n\n\tconst customerCreationDate = (await locator.logins.getUserController().loadCustomerInfo()).creationTime\n\tif (isWithinLastNDays(now, customerCreationDate, 7)) {\n\t\treturn RatingCheckResult.ACCOUNT_TOO_YOUNG\n\t}\n\n\tconst retryRatingPromptAfter = deviceConfig.getRetryRatingPromptAfter()\n\tif (retryRatingPromptAfter != null && now.getTime() < retryRatingPromptAfter.getTime()) {\n\t\treturn RatingCheckResult.RATING_DISMISSED\n\t}\n\n\treturn RatingCheckResult.RATING_ALLOWED\n}\n\n/**\n * Determines if the user is experiencing a \"happy moment\".\n *\n * At least one of the following activity-based conditions must be satisfied:\n *    - The user has created at least 3 events/emails, and no previous prompt was shown.\n *    - The user has performed at least 10 activities (events/emails) in the last 28 days.\n *\n * @returns {boolean} A promise that resolves to `true` if the user is in a \"happy moment\".\n */\nexport function isEventHappyMoment(now: Date, deviceConfig: DeviceConfig): boolean {\n\t//region Trigger 1: Check for minimum 3 events/emails created\n\tconst lastRatingPromptedDate: Date | null = deviceConfig.getLastRatingPromptedDate()\n\n\tconst events: Date[] = deviceConfig.getEvents()\n\tif (events.length >= 3 && lastRatingPromptedDate == null) {\n\t\treturn true\n\t}\n\t//endregion\n\n\t//region Trigger 2: Check for at least 10 activities in the last 28 days\n\tconst twentyEightDaysAgo = DateTime.fromJSDate(now).minus({ days: 28 }).toMillis()\n\tconst recentActivityCount = events.filter((event) => new Date(event).getTime() >= twentyEightDaysAgo).length\n\n\tif (recentActivityCount >= 10) {\n\t\treturn true\n\t}\n\t//endregion\n\treturn false\n}\n"]}