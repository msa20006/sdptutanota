{"version":3,"file":"PurchaseGiftCardDialog.js","sourceRoot":"","sources":["../../../../../src/common/subscription/giftcards/PurchaseGiftCardDialog.ts"],"names":[],"mappings":"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","sourcesContent":["import m, { Children, Component, Vnode } from \"mithril\"\nimport { Dialog } from \"../../gui/base/Dialog\"\nimport type { GiftCard, GiftCardOption } from \"../../api/entities/sys/TypeRefs.js\"\nimport { GiftCardTypeRef } from \"../../api/entities/sys/TypeRefs.js\"\nimport { showProgressDialog } from \"../../gui/dialogs/ProgressDialog\"\nimport { locator } from \"../../api/main/CommonLocator\"\nimport { BOX_MARGIN, BuyOptionBox } from \"../BuyOptionBox\"\nimport { ButtonType } from \"../../gui/base/Button.js\"\nimport { getPreconditionFailedPaymentMsg } from \"../SubscriptionUtils\"\nimport { renderAcceptGiftCardTermsCheckbox, showGiftCardToShare } from \"./GiftCardUtils\"\nimport type { DialogHeaderBarAttrs } from \"../../gui/base/DialogHeaderBar\"\nimport { showUserError } from \"../../misc/ErrorHandlerImpl\"\nimport { UserError } from \"../../api/main/UserError\"\nimport { Keys, PaymentMethodType, PlanType } from \"../../api/common/TutanotaConstants\"\nimport { lang, Translation } from \"../../misc/LanguageViewModel\"\nimport { BadGatewayError, PreconditionFailedError } from \"../../api/common/error/RestError\"\nimport { GiftCardMessageEditorField } from \"./GiftCardMessageEditorField\"\nimport { client } from \"../../misc/ClientDetector\"\nimport { count, filterInt, noOp, ofClass } from \"@tutao/tutanota-utils\"\nimport { isIOSApp } from \"../../api/common/Env\"\nimport { formatPrice, PaymentInterval, PriceAndConfigProvider } from \"../PriceUtils\"\nimport { GiftCardService } from \"../../api/entities/sys/Services\"\nimport { UpgradePriceType } from \"../FeatureListProvider\"\nimport { TranslationKeyType } from \"../../misc/TranslationKey.js\"\nimport { px } from \"../../gui/size\"\nimport { Icon, IconSize } from \"../../gui/base/Icon\"\nimport { Icons } from \"../../gui/base/icons/Icons\"\nimport { LoginButton } from \"../../gui/base/buttons/LoginButton.js\"\n\nclass PurchaseGiftCardModel {\n\tmessage = lang.get(\"defaultGiftCardMessage_msg\")\n\tconfirmed = false\n\n\tconstructor(\n\t\tprivate readonly config: {\n\t\t\tpurchaseLimit: number\n\t\t\tpurchasePeriodMonths: number\n\t\t\tavailablePackages: Array<GiftCardOption>\n\t\t\tselectedPackage: number\n\t\t\trevolutionaryPrice: number\n\t\t},\n\t) {}\n\n\tget availablePackages(): ReadonlyArray<GiftCardOption> {\n\t\treturn this.config.availablePackages\n\t}\n\n\tget purchaseLimit(): number {\n\t\treturn this.config.purchaseLimit\n\t}\n\n\tget purchasePeriodMonths(): number {\n\t\treturn this.config.purchasePeriodMonths\n\t}\n\n\tget selectedPackage(): number {\n\t\treturn this.config.selectedPackage\n\t}\n\n\tset selectedPackage(selection: number) {\n\t\tthis.config.selectedPackage = selection\n\t}\n\n\tget revolutionaryPrice(): number {\n\t\treturn this.config.revolutionaryPrice\n\t}\n\n\tasync purchaseGiftCard(): Promise<GiftCard> {\n\t\tif (!this.confirmed) {\n\t\t\tthrow new UserError(\"termsAcceptedNeutral_msg\")\n\t\t}\n\n\t\treturn locator.giftCardFacade\n\t\t\t.generateGiftCard(this.message, this.availablePackages[this.selectedPackage].value)\n\t\t\t.then((createdGiftCardId) => locator.entityClient.load(GiftCardTypeRef, createdGiftCardId))\n\t\t\t.catch((e) => this.handlePurchaseError(e))\n\t}\n\n\tprivate handlePurchaseError(e: Error): never {\n\t\tif (e instanceof PreconditionFailedError) {\n\t\t\tconst message = e.data\n\n\t\t\tswitch (message) {\n\t\t\t\tcase \"giftcard.limitreached\":\n\t\t\t\t\tthrow new UserError(\n\t\t\t\t\t\tlang.getTranslation(\"tooManyGiftCards_msg\", {\n\t\t\t\t\t\t\t\"{amount}\": `${this.purchaseLimit}`,\n\t\t\t\t\t\t\t\"{period}\": `${this.purchasePeriodMonths} months`,\n\t\t\t\t\t\t}),\n\t\t\t\t\t)\n\n\t\t\t\tcase \"giftcard.noaccountinginfo\":\n\t\t\t\t\tthrow new UserError(\"providePaymentDetails_msg\")\n\n\t\t\t\tcase \"giftcard.invalidpaymentmethod\":\n\t\t\t\t\tthrow new UserError(\"invalidGiftCardPaymentMethod_msg\")\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new UserError(getPreconditionFailedPaymentMsg(e.data))\n\t\t\t}\n\t\t} else if (e instanceof BadGatewayError) {\n\t\t\tthrow new UserError(\"paymentProviderNotAvailableError_msg\")\n\t\t} else {\n\t\t\tthrow e\n\t\t}\n\t}\n}\n\ninterface GiftCardPurchaseViewAttrs {\n\tmodel: PurchaseGiftCardModel\n\tonGiftCardPurchased: (giftCard: GiftCard) => void\n}\n\nclass GiftCardPurchaseView implements Component<GiftCardPurchaseViewAttrs> {\n\tview(vnode: Vnode<GiftCardPurchaseViewAttrs>): Children {\n\t\tconst { model, onGiftCardPurchased } = vnode.attrs\n\t\treturn [\n\t\t\tm(\n\t\t\t\t\".flex.center-horizontally.wrap.pt-ml\",\n\t\t\t\t{\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\"column-gap\": px(BOX_MARGIN),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tmodel.availablePackages.map((option, index) => {\n\t\t\t\t\tconst value = parseFloat(option.value)\n\n\t\t\t\t\treturn m(BuyOptionBox, {\n\t\t\t\t\t\theading: m(\n\t\t\t\t\t\t\t\".flex-center\",\n\t\t\t\t\t\t\tArray(Math.pow(2, index)).fill(\n\t\t\t\t\t\t\t\tm(Icon, {\n\t\t\t\t\t\t\t\t\ticon: Icons.Gift,\n\t\t\t\t\t\t\t\t\tsize: IconSize.Medium,\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t),\n\t\t\t\t\t\tactionButton: () =>\n\t\t\t\t\t\t\tm(LoginButton, {\n\t\t\t\t\t\t\t\tlabel: \"pricing.select_action\",\n\t\t\t\t\t\t\t\tonclick: () => {\n\t\t\t\t\t\t\t\t\tmodel.selectedPackage = index\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\tprice: formatPrice(value, true),\n\t\t\t\t\t\thelpLabel: this.getGiftCardHelpText(model.revolutionaryPrice, value),\n\t\t\t\t\t\twidth: 230,\n\t\t\t\t\t\theight: 250,\n\t\t\t\t\t\tselectedPaymentInterval: null,\n\t\t\t\t\t\taccountPaymentInterval: null,\n\t\t\t\t\t\thighlighted: model.selectedPackage === index,\n\t\t\t\t\t\tmobile: false,\n\t\t\t\t\t\tbonusMonths: 0,\n\t\t\t\t\t})\n\t\t\t\t}),\n\t\t\t),\n\t\t\tm(\".flex-column.flex-center.center-h.width-min-content\", [\n\t\t\t\tm(GiftCardMessageEditorField, {\n\t\t\t\t\tmessage: model.message,\n\t\t\t\t\tonMessageChanged: (message) => (model.message = message),\n\t\t\t\t}),\n\t\t\t\trenderAcceptGiftCardTermsCheckbox(model.confirmed, (checked) => (model.confirmed = checked), \"pt-l\"),\n\t\t\t\tm(LoginButton, {\n\t\t\t\t\tlabel: \"buy_action\",\n\t\t\t\t\tclass: \"mt-l mb-l\",\n\t\t\t\t\tonclick: () => this.onBuyButtonPressed(model, onGiftCardPurchased).catch(ofClass(UserError, showUserError)),\n\t\t\t\t}),\n\t\t\t]),\n\t\t]\n\t}\n\n\tasync onBuyButtonPressed(model: PurchaseGiftCardModel, onPurchaseSuccess: (giftCard: GiftCard) => void) {\n\t\tconst giftCard = await showProgressDialog(\"loading_msg\", model.purchaseGiftCard())\n\t\tonPurchaseSuccess(giftCard)\n\t}\n\n\tprivate getGiftCardHelpText(upgradePrice: number, giftCardValue: number): Translation {\n\t\tlet helpTextId: TranslationKeyType\n\t\tif (giftCardValue < upgradePrice) {\n\t\t\thelpTextId = \"giftCardOptionTextC_msg\"\n\t\t} else if (giftCardValue == upgradePrice) {\n\t\t\thelpTextId = \"giftCardOptionTextD_msg\"\n\t\t} else {\n\t\t\thelpTextId = \"giftCardOptionTextE_msg\"\n\t\t}\n\t\treturn lang.getTranslation(helpTextId, {\n\t\t\t\"{remainingCredit}\": formatPrice(giftCardValue - upgradePrice, true),\n\t\t\t\"{fullCredit}\": formatPrice(giftCardValue, true),\n\t\t})\n\t}\n}\n\n/**\n * Create a dialog to buy a giftcard or show error if the user cannot do so\n * @returns {Promise<unknown>|Promise<void>|Promise<Promise<void>>}\n */\n\nexport async function showPurchaseGiftCardDialog() {\n\tif (isIOSApp()) {\n\t\treturn Dialog.message(\"notAvailableInApp_msg\")\n\t}\n\n\tconst model = await showProgressDialog(\"loading_msg\", loadGiftCardModel()).catch(\n\t\tofClass(UserError, (e) => {\n\t\t\tshowUserError(e)\n\t\t\treturn null\n\t\t}),\n\t)\n\n\tif (model == null) {\n\t\treturn\n\t}\n\n\tlet dialog: Dialog\n\n\tconst header: DialogHeaderBarAttrs = {\n\t\tleft: [\n\t\t\t{\n\t\t\t\tlabel: \"close_alt\",\n\t\t\t\ttype: ButtonType.Secondary,\n\t\t\t\tclick: () => dialog.close(),\n\t\t\t},\n\t\t],\n\t\tmiddle: \"buyGiftCard_label\",\n\t}\n\n\tconst content = {\n\t\tview: () =>\n\t\t\tm(GiftCardPurchaseView, {\n\t\t\t\tmodel,\n\t\t\t\tonGiftCardPurchased: (giftCard) => {\n\t\t\t\t\tdialog.close()\n\t\t\t\t\tshowGiftCardToShare(giftCard)\n\t\t\t\t},\n\t\t\t}),\n\t}\n\n\tdialog = Dialog.largeDialog(header, content).addShortcut({\n\t\tkey: Keys.ESC,\n\t\texec: () => dialog.close(),\n\t\thelp: \"close_alt\",\n\t})\n\n\tif (client.isMobileDevice()) {\n\t\t// Prevent focusing text field automatically on mobile. It opens keyboard and you don't see all details.\n\t\tdialog.setFocusOnLoadFunction(noOp)\n\t}\n\n\tdialog.show()\n}\n\nasync function loadGiftCardModel(): Promise<PurchaseGiftCardModel> {\n\tconst accountingInfo = await locator.logins.getUserController().loadAccountingInfo()\n\n\t// Only allow purchase with supported payment methods\n\tif (!accountingInfo || accountingInfo.paymentMethod === PaymentMethodType.Invoice || accountingInfo.paymentMethod === PaymentMethodType.AccountBalance) {\n\t\tthrow new UserError(\"invalidGiftCardPaymentMethod_msg\")\n\t}\n\n\tconst [giftCardInfo, customerInfo] = await Promise.all([\n\t\tlocator.serviceExecutor.get(GiftCardService, null),\n\t\tlocator.logins.getUserController().loadCustomerInfo(),\n\t])\n\n\t// User can't buy too many gift cards so we have to load their giftcards in order to check how many they ordered\n\tconst existingGiftCards = customerInfo.giftCards ? await locator.entityClient.loadAll(GiftCardTypeRef, customerInfo.giftCards.items) : []\n\n\tconst sixMonthsAgo = new Date()\n\tsixMonthsAgo.setMonth(sixMonthsAgo.getMonth() - parseInt(giftCardInfo.period))\n\tconst numPurchasedGiftCards = count(existingGiftCards, (giftCard) => giftCard.orderDate > sixMonthsAgo)\n\n\tif (numPurchasedGiftCards >= parseInt(giftCardInfo.maxPerPeriod)) {\n\t\tthrow new UserError(\n\t\t\tlang.getTranslation(\"tooManyGiftCards_msg\", {\n\t\t\t\t\"{amount}\": giftCardInfo.maxPerPeriod,\n\t\t\t\t\"{period}\": `${giftCardInfo.period} months`,\n\t\t\t}),\n\t\t)\n\t}\n\n\tconst priceDataProvider = await PriceAndConfigProvider.getInitializedInstance(null, locator.serviceExecutor, null)\n\treturn new PurchaseGiftCardModel({\n\t\tpurchaseLimit: filterInt(giftCardInfo.maxPerPeriod),\n\t\tpurchasePeriodMonths: filterInt(giftCardInfo.period),\n\t\tavailablePackages: giftCardInfo.options,\n\t\tselectedPackage: Math.floor(giftCardInfo.options.length / 2),\n\t\trevolutionaryPrice: priceDataProvider.getSubscriptionPrice(PaymentInterval.Yearly, PlanType.Revolutionary, UpgradePriceType.PlanActualPrice),\n\t})\n}\n"]}