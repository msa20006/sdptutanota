{"version":3,"file":"SubscriptionSelector.js","sourceRoot":"","sources":["../../../../src/common/subscription/SubscriptionSelector.ts"],"names":[],"mappings":"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","sourcesContent":["import m, { Children, Component, Vnode } from \"mithril\"\nimport type { MaybeTranslation, TranslationKey } from \"../misc/LanguageViewModel\"\nimport { lang } from \"../misc/LanguageViewModel\"\nimport type { BuyOptionBoxAttr, BuyOptionDetailsAttr } from \"./BuyOptionBox\"\nimport { BOX_MARGIN, BuyOptionBox, BuyOptionDetails, getActiveSubscriptionActionButtonReplacement } from \"./BuyOptionBox\"\nimport type { SegmentControlItem } from \"../gui/base/SegmentControl\"\nimport { SegmentControl } from \"../gui/base/SegmentControl\"\nimport { formatMonthlyPrice, PaymentInterval, PriceAndConfigProvider, PriceType } from \"./PriceUtils\"\nimport {\n\tFeatureCategory,\n\tFeatureListItem,\n\tFeatureListProvider,\n\tgetDisplayNameOfPlanType,\n\tReplacementKey,\n\tSelectedSubscriptionOptions,\n\tUpgradePriceType,\n} from \"./FeatureListProvider\"\nimport { ProgrammingError } from \"../api/common/error/ProgrammingError\"\nimport { Button, ButtonType } from \"../gui/base/Button.js\"\nimport { downcast, lazy, NBSP } from \"@tutao/tutanota-utils\"\nimport {\n\tAvailablePlanType,\n\tConst,\n\tCustomDomainType,\n\tCustomDomainTypeCountName,\n\tHighlightedPlans,\n\tLegacyPlans,\n\tNewBusinessPlans,\n\tNewPersonalPlans,\n\tPlanType,\n\tPlanTypeToName,\n} from \"../api/common/TutanotaConstants.js\"\nimport { px } from \"../gui/size.js\"\nimport { LoginButton, LoginButtonAttrs } from \"../gui/base/buttons/LoginButton.js\"\nimport { isIOSApp } from \"../api/common/Env\"\nimport { isReferenceDateWithinCyberMondayCampaign } from \"../misc/CyberMondayUtils.js\"\nimport { theme } from \"../gui/theme.js\"\n\nconst BusinessUseItems: SegmentControlItem<boolean>[] = [\n\t{\n\t\tname: lang.get(\"pricing.privateUse_label\"),\n\t\tvalue: false,\n\t},\n\t{\n\t\tname: lang.get(\"pricing.businessUse_label\"),\n\t\tvalue: true,\n\t},\n]\n\nexport type SubscriptionActionButtons = Record<AvailablePlanType, lazy<LoginButtonAttrs>>\n\nexport type SubscriptionSelectorAttr = {\n\toptions: SelectedSubscriptionOptions\n\tpriceInfoTextId: TranslationKey | null\n\tactionButtons: SubscriptionActionButtons\n\tboxWidth: number\n\tboxHeight: number\n\tcurrentPlanType: PlanType | null\n\tallowSwitchingPaymentInterval: boolean\n\tfeatureListProvider: FeatureListProvider\n\tpriceAndConfigProvider: PriceAndConfigProvider\n\tacceptedPlans: AvailablePlanType[]\n\tmultipleUsersAllowed: boolean\n\tmsg: MaybeTranslation | null\n}\n\nexport function getActionButtonBySubscription(actionButtons: SubscriptionActionButtons, subscription: AvailablePlanType): lazy<Children> {\n\tconst ret = actionButtons[subscription]\n\tif (ret == null) {\n\t\tthrow new ProgrammingError(\"Plan is not valid\")\n\t}\n\treturn () => m(LoginButton, ret())\n}\n\ntype ExpanderTargets = AvailablePlanType | \"All\"\n\nexport class SubscriptionSelector implements Component<SubscriptionSelectorAttr> {\n\tprivate containerDOM: Element | null = null\n\tprivate featuresExpanded: { [K in ExpanderTargets]: boolean } = {\n\t\t[PlanType.Free]: false,\n\t\t[PlanType.Revolutionary]: false,\n\t\t[PlanType.Legend]: false,\n\t\t[PlanType.Essential]: false,\n\t\t[PlanType.Advanced]: false,\n\t\t[PlanType.Unlimited]: false,\n\t\tAll: false,\n\t}\n\n\toninit(vnode: Vnode<SubscriptionSelectorAttr>): any {\n\t\tconst acceptedPlans = vnode.attrs.acceptedPlans\n\t\tconst onlyBusinessPlansAccepted = acceptedPlans.every((plan) => NewBusinessPlans.includes(plan))\n\n\t\tif (onlyBusinessPlansAccepted) {\n\t\t\t// if only business plans are accepted, we show them first even if the current plan is a personal plan\n\t\t\tvnode.attrs.options.businessUse(true)\n\t\t}\n\t}\n\n\tprivate renderHeadline(\n\t\tmsg: MaybeTranslation | null,\n\t\tcurrentPlanType: PlanType | null,\n\t\tpriceInfoTextId: TranslationKey | null,\n\t\tisBusiness: boolean,\n\t\tisCyberMonday: boolean,\n\t): Children {\n\t\tconst wrapInDiv = (text: string, style?: Record<string, any>) => {\n\t\t\treturn m(\".b.center\", { style }, text)\n\t\t}\n\n\t\tif (msg) {\n\t\t\treturn wrapInDiv(lang.getTranslationText(msg))\n\t\t} else if (currentPlanType != null && LegacyPlans.includes(currentPlanType)) {\n\t\t\treturn wrapInDiv(lang.get(\"currentPlanDiscontinued_msg\"))\n\t\t}\n\n\t\tif (priceInfoTextId && lang.exists(priceInfoTextId)) {\n\t\t\treturn wrapInDiv(lang.get(priceInfoTextId))\n\t\t}\n\n\t\tif (isCyberMonday && !isBusiness) {\n\t\t\treturn wrapInDiv(lang.get(\"pricing.cyber_monday_msg\"), { width: \"230px\", margin: \"1em auto 0 auto\" })\n\t\t}\n\t}\n\n\tview(vnode: Vnode<SubscriptionSelectorAttr>): Children {\n\t\t// Add BuyOptionBox margin twice to the boxWidth received\n\t\tconst { acceptedPlans, priceInfoTextId, msg, featureListProvider, currentPlanType, options, boxWidth } = vnode.attrs\n\n\t\tconst columnWidth = boxWidth + BOX_MARGIN * 2\n\t\tconst inMobileView: boolean = (this.containerDOM && this.containerDOM.clientWidth < columnWidth * 2) == true\n\t\tconst featureExpander = this.renderFeatureExpanders(inMobileView, featureListProvider) // renders all feature expanders, both for every single subscription option but also for the whole list\n\t\tlet additionalInfo: Children\n\n\t\tlet plans: AvailablePlanType[]\n\t\tconst currentPlan = currentPlanType\n\t\tconst signup = currentPlan == null\n\n\t\tconst onlyBusinessPlansAccepted = acceptedPlans.every((plan) => NewBusinessPlans.includes(plan))\n\t\tconst onlyPersonalPlansAccepted = acceptedPlans.every((plan) => NewPersonalPlans.includes(plan))\n\t\t// Show the business segmentControl for signup, if both personal & business plans are allowed\n\t\tconst showBusinessSelector = !onlyBusinessPlansAccepted && !onlyPersonalPlansAccepted && !isIOSApp()\n\n\t\tconst isCyberMonday = isReferenceDateWithinCyberMondayCampaign(Const.CURRENT_DATE ?? new Date())\n\n\t\tlet subscriptionPeriodInfoMsg = !signup && currentPlan !== PlanType.Free ? lang.get(\"switchSubscriptionInfo_msg\") + \" \" : \"\"\n\t\tif (options.businessUse()) {\n\t\t\tplans = [PlanType.Essential, PlanType.Advanced, PlanType.Unlimited]\n\t\t\tsubscriptionPeriodInfoMsg += lang.get(\"pricing.subscriptionPeriodInfoBusiness_msg\")\n\t\t} else {\n\t\t\tif (inMobileView) {\n\t\t\t\tif (isCyberMonday) {\n\t\t\t\t\tplans = [PlanType.Legend, PlanType.Revolutionary, PlanType.Free]\n\t\t\t\t} else {\n\t\t\t\t\tplans = [PlanType.Revolutionary, PlanType.Legend, PlanType.Free]\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (isCyberMonday) {\n\t\t\t\t\tplans = [PlanType.Free, PlanType.Legend, PlanType.Revolutionary]\n\t\t\t\t} else {\n\t\t\t\t\tplans = [PlanType.Free, PlanType.Revolutionary, PlanType.Legend]\n\t\t\t\t}\n\t\t\t}\n\t\t\tsubscriptionPeriodInfoMsg += lang.get(\"pricing.subscriptionPeriodInfoPrivate_msg\")\n\t\t}\n\n\t\tconst shouldShowFirstYearDiscountNotice = !isIOSApp() && isCyberMonday && !options.businessUse() && options.paymentInterval() === PaymentInterval.Yearly\n\n\t\tadditionalInfo = m(\".flex.flex-column.items-center\", [\n\t\t\tfeatureExpander.All, // global feature expander\n\t\t\tm(\".smaller.mb.center\", subscriptionPeriodInfoMsg),\n\t\t\tshouldShowFirstYearDiscountNotice && m(\".smaller.mb.center\", `* ${lang.get(\"pricing.legendAsterisk_msg\")}`),\n\t\t])\n\n\t\tconst buyBoxesViewPlacement = plans\n\t\t\t.filter((plan) => acceptedPlans.includes(plan) || currentPlanType === plan)\n\t\t\t.map((personalPlan, i) => {\n\t\t\t\t// only show category title for the leftmost item\n\t\t\t\treturn [\n\t\t\t\t\tthis.renderBuyOptionBox(vnode.attrs, inMobileView, personalPlan, isCyberMonday),\n\t\t\t\t\tthis.renderBuyOptionDetails(vnode.attrs, i === 0, personalPlan, featureExpander, isCyberMonday),\n\t\t\t\t]\n\t\t\t})\n\n\t\treturn m(\"\", { lang: lang.code }, [\n\t\t\tshowBusinessSelector\n\t\t\t\t? m(SegmentControl, {\n\t\t\t\t\t\tselectedValue: options.businessUse(),\n\t\t\t\t\t\tonValueSelected: options.businessUse,\n\t\t\t\t\t\titems: BusinessUseItems,\n\t\t\t\t  })\n\t\t\t\t: null,\n\t\t\tthis.renderHeadline(msg, currentPlanType, priceInfoTextId, options.businessUse(), isCyberMonday),\n\t\t\tm(\n\t\t\t\t\".flex.center-horizontally.wrap\",\n\t\t\t\t{\n\t\t\t\t\t\"data-testid\": \"dialog:select-subscription\",\n\t\t\t\t\toncreate: (vnode) => {\n\t\t\t\t\t\tthis.containerDOM = vnode.dom as HTMLElement\n\t\t\t\t\t\tm.redraw()\n\t\t\t\t\t},\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\"column-gap\": px(BOX_MARGIN),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tm(\".plans-grid\", buyBoxesViewPlacement.flat()),\n\t\t\t\tadditionalInfo,\n\t\t\t),\n\t\t])\n\t}\n\n\tprivate renderBuyOptionBox(attrs: SubscriptionSelectorAttr, inMobileView: boolean, planType: AvailablePlanType, isCyberMonday: boolean): Children {\n\t\treturn m(\n\t\t\t\"\",\n\t\t\t{\n\t\t\t\tstyle: {\n\t\t\t\t\twidth: attrs.boxWidth ? px(attrs.boxWidth) : px(230),\n\t\t\t\t},\n\t\t\t},\n\t\t\tm(BuyOptionBox, this.createBuyOptionBoxAttr(attrs, planType, inMobileView, isCyberMonday)),\n\t\t)\n\t}\n\n\tprivate renderBuyOptionDetails(\n\t\tattrs: SubscriptionSelectorAttr,\n\t\trenderCategoryTitle: boolean,\n\t\tplanType: AvailablePlanType,\n\t\tfeatureExpander: Record<ExpanderTargets, Children>,\n\t\tisCyberMonday: boolean, // change to isDiscountForAnyPlanAvailable when removing the cyber monday implementation\n\t): Children {\n\t\treturn m(\n\t\t\t\"\",\n\t\t\t{\n\t\t\t\tstyle: { width: attrs.boxWidth ? px(attrs.boxWidth) : px(230) },\n\t\t\t},\n\t\t\tm(BuyOptionDetails, this.createBuyOptionBoxDetailsAttr(attrs, planType, renderCategoryTitle, isCyberMonday)),\n\t\t\tfeatureExpander[planType],\n\t\t)\n\t}\n\n\tprivate createBuyOptionBoxAttr(\n\t\tselectorAttrs: SubscriptionSelectorAttr,\n\t\ttargetSubscription: AvailablePlanType,\n\t\tmobile: boolean,\n\t\tisCyberMonday: boolean,\n\t): BuyOptionBoxAttr {\n\t\tconst { priceAndConfigProvider } = selectorAttrs\n\n\t\t// we highlight the center box if this is a signup or the current subscription type is Free\n\t\tconst interval = selectorAttrs.options.paymentInterval()\n\t\tconst upgradingToPaidAccount = !selectorAttrs.currentPlanType || selectorAttrs.currentPlanType === PlanType.Free\n\t\tconst isHighlighted = (() => {\n\t\t\tif (isCyberMonday) {\n\t\t\t\treturn targetSubscription === PlanType.Legend\n\t\t\t}\n\n\t\t\treturn upgradingToPaidAccount && HighlightedPlans.includes(targetSubscription)\n\t\t})()\n\t\tconst multiuser = NewBusinessPlans.includes(targetSubscription) || LegacyPlans.includes(targetSubscription) || selectorAttrs.multipleUsersAllowed\n\n\t\tconst subscriptionPrice = priceAndConfigProvider.getSubscriptionPrice(interval, targetSubscription, UpgradePriceType.PlanActualPrice)\n\n\t\tlet priceStr: string\n\t\tlet referencePriceStr: string | undefined = undefined\n\t\tlet priceType: PriceType\n\t\tif (isIOSApp()) {\n\t\t\tconst prices = priceAndConfigProvider.getMobilePrices().get(PlanTypeToName[targetSubscription].toLowerCase())\n\t\t\tif (prices != null) {\n\t\t\t\tif (isCyberMonday && targetSubscription === PlanType.Legend && interval == PaymentInterval.Yearly) {\n\t\t\t\t\tconst revolutionaryPrice = priceAndConfigProvider.getMobilePrices().get(PlanTypeToName[PlanType.Revolutionary].toLowerCase())\n\t\t\t\t\tpriceStr = revolutionaryPrice?.displayYearlyPerMonth ?? NBSP\n\t\t\t\t\t// if there is a discount for this plan we show the original price as reference\n\t\t\t\t\treferencePriceStr = prices?.displayYearlyPerMonth\n\t\t\t\t\tpriceType = PriceType.YearlyPerMonth\n\t\t\t\t} else {\n\t\t\t\t\tswitch (interval) {\n\t\t\t\t\t\tcase PaymentInterval.Monthly:\n\t\t\t\t\t\t\tpriceStr = prices.displayMonthlyPerMonth\n\t\t\t\t\t\t\tpriceType = PriceType.MonthlyPerMonth\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\tcase PaymentInterval.Yearly:\n\t\t\t\t\t\t\tpriceStr = prices.displayYearlyPerYear\n\t\t\t\t\t\t\tpriceType = PriceType.YearlyPerYear\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// when can this happen?\n\t\t\t\tpriceType = PriceType.MonthlyPerMonth\n\t\t\t\tpriceStr = NBSP\n\t\t\t\treferencePriceStr = NBSP\n\t\t\t}\n\t\t} else {\n\t\t\tpriceType = interval == PaymentInterval.Monthly ? PriceType.MonthlyPerMonth : PriceType.YearlyPerMonth\n\t\t\tconst referencePrice = priceAndConfigProvider.getSubscriptionPrice(interval, targetSubscription, UpgradePriceType.PlanReferencePrice)\n\t\t\tpriceStr = formatMonthlyPrice(subscriptionPrice, interval)\n\t\t\tif (referencePrice > subscriptionPrice) {\n\t\t\t\t// if there is a discount for this plan we show the original price as reference\n\t\t\t\treferencePriceStr = formatMonthlyPrice(referencePrice, interval)\n\t\t\t} else if (interval == PaymentInterval.Yearly && subscriptionPrice !== 0 && !isCyberMonday) {\n\t\t\t\t// if there is no discount for any plan then we show the monthly price as reference\n\t\t\t\tconst monthlyReferencePrice = priceAndConfigProvider.getSubscriptionPrice(\n\t\t\t\t\tPaymentInterval.Monthly,\n\t\t\t\t\ttargetSubscription,\n\t\t\t\t\tUpgradePriceType.PlanActualPrice,\n\t\t\t\t)\n\t\t\t\treferencePriceStr = formatMonthlyPrice(monthlyReferencePrice, PaymentInterval.Monthly)\n\t\t\t}\n\t\t}\n\n\t\t// If we are on the cyber monday campaign, we want to let the user know the discount is just for the first year.\n\t\tconst asteriskOrEmptyString = !isIOSApp() && isCyberMonday && targetSubscription === PlanType.Legend && interval === PaymentInterval.Yearly ? \"*\" : \"\"\n\n\t\treturn {\n\t\t\theading: getDisplayNameOfPlanType(targetSubscription),\n\t\t\tactionButton:\n\t\t\t\tselectorAttrs.currentPlanType === targetSubscription\n\t\t\t\t\t? getActiveSubscriptionActionButtonReplacement()\n\t\t\t\t\t: getActionButtonBySubscription(selectorAttrs.actionButtons, targetSubscription),\n\t\t\tprice: priceStr,\n\t\t\treferencePrice: referencePriceStr,\n\t\t\tpriceHint: lang.makeTranslation(\"price_hint\", `${getPriceHint(subscriptionPrice, priceType, multiuser)}${asteriskOrEmptyString}`),\n\t\t\thelpLabel: getHelpLabel(targetSubscription, selectorAttrs.options.businessUse()),\n\t\t\twidth: selectorAttrs.boxWidth,\n\t\t\theight: selectorAttrs.boxHeight,\n\t\t\tselectedPaymentInterval:\n\t\t\t\tselectorAttrs.allowSwitchingPaymentInterval && targetSubscription !== PlanType.Free ? selectorAttrs.options.paymentInterval : null,\n\t\t\taccountPaymentInterval: interval,\n\t\t\thighlighted: isHighlighted,\n\t\t\tmobile,\n\t\t\tbonusMonths:\n\t\t\t\ttargetSubscription !== PlanType.Free && interval === PaymentInterval.Yearly\n\t\t\t\t\t? Number(selectorAttrs.priceAndConfigProvider.getRawPricingData().bonusMonthsForYearlyPlan)\n\t\t\t\t\t: 0,\n\t\t\ttargetSubscription,\n\t\t}\n\t}\n\n\tprivate createBuyOptionBoxDetailsAttr(\n\t\tselectorAttrs: SubscriptionSelectorAttr,\n\t\ttargetSubscription: AvailablePlanType,\n\t\trenderCategoryTitle: boolean,\n\t\tisCyberMonday: boolean,\n\t): BuyOptionDetailsAttr {\n\t\tconst { featureListProvider } = selectorAttrs\n\t\tconst subscriptionFeatures = featureListProvider.getFeatureList(targetSubscription)\n\t\tconst categoriesToShow = subscriptionFeatures.categories\n\t\t\t.map((fc) => {\n\t\t\t\treturn localizeFeatureCategory(fc, targetSubscription, selectorAttrs)\n\t\t\t})\n\t\t\t.filter((fc): fc is BuyOptionDetailsAttr[\"categories\"][0] => fc != null)\n\n\t\tconst isLegend = targetSubscription === PlanType.Legend\n\t\tconst isYearly = selectorAttrs.options.paymentInterval() === PaymentInterval.Yearly\n\n\t\treturn {\n\t\t\tcategories: categoriesToShow,\n\t\t\tfeaturesExpanded: this.featuresExpanded[targetSubscription] || this.featuresExpanded.All,\n\t\t\trenderCategoryTitle,\n\t\t\ticonStyle: isCyberMonday && isYearly && isLegend ? { fill: theme.content_accent_cyber_monday } : undefined,\n\t\t}\n\t}\n\n\t/**\n\t * Renders the feature expanders depending on whether currently displaying the feature list in single-column layout or in multi-column layout.\n\t * If a specific expander is not needed and thus should not be renderer, null | undefined is returned\n\t */\n\tprivate renderFeatureExpanders(inMobileView: boolean | null, featureListProvider: FeatureListProvider): Record<ExpanderTargets, Children> {\n\t\tif (!featureListProvider.featureLoadingDone()) {\n\t\t\t// the feature list is not available\n\t\t\treturn {\n\t\t\t\t[PlanType.Free]: null,\n\t\t\t\t[PlanType.Revolutionary]: null,\n\t\t\t\t[PlanType.Legend]: null,\n\t\t\t\t[PlanType.Essential]: null,\n\t\t\t\t[PlanType.Advanced]: null,\n\t\t\t\t[PlanType.Unlimited]: null,\n\t\t\t\tAll: null,\n\t\t\t}\n\t\t}\n\t\tif (inMobileView) {\n\t\t\t// In single-column layout every subscription type has its own feature expander.\n\t\t\tif (this.featuresExpanded.All) {\n\t\t\t\tfor (const k in this.featuresExpanded) {\n\t\t\t\t\tthis.featuresExpanded[k as ExpanderTargets] = true\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t[PlanType.Free]: this.renderExpander(PlanType.Free),\n\t\t\t\t[PlanType.Revolutionary]: this.renderExpander(PlanType.Revolutionary),\n\t\t\t\t[PlanType.Legend]: this.renderExpander(PlanType.Legend),\n\t\t\t\t[PlanType.Advanced]: this.renderExpander(PlanType.Advanced),\n\t\t\t\t[PlanType.Essential]: this.renderExpander(PlanType.Essential),\n\t\t\t\t[PlanType.Unlimited]: this.renderExpander(PlanType.Unlimited),\n\t\t\t\tAll: null,\n\t\t\t}\n\t\t} else {\n\t\t\tfor (const k in this.featuresExpanded) {\n\t\t\t\tthis.featuresExpanded[k as ExpanderTargets] = this.featuresExpanded.All // in multi-column layout the specific feature expanders should follow the global one\n\t\t\t}\n\t\t\treturn Object.assign({} as Record<ExpanderTargets, Children>, { All: this.renderExpander(\"All\") })\n\t\t}\n\t}\n\n\t/**\n\t * Renders a single feature expander.\n\t * @param subType The current expander that should be rendered\n\t * @private\n\t */\n\tprivate renderExpander(subType: ExpanderTargets): Children {\n\t\treturn this.featuresExpanded[subType]\n\t\t\t? null\n\t\t\t: m(Button, {\n\t\t\t\t\tlabel: \"pricing.showAllFeatures\",\n\t\t\t\t\ttype: ButtonType.Secondary,\n\t\t\t\t\tclick: (event) => {\n\t\t\t\t\t\tthis.featuresExpanded[subType] = !this.featuresExpanded[subType]\n\t\t\t\t\t\tevent.stopPropagation()\n\t\t\t\t\t},\n\t\t\t  })\n\t}\n}\n\nfunction localizeFeatureListItem(\n\titem: FeatureListItem,\n\ttargetSubscription: PlanType,\n\tattrs: SubscriptionSelectorAttr,\n): BuyOptionDetailsAttr[\"categories\"][0][\"features\"][0] | null {\n\tconst text = tryGetTranslation(item.text, getReplacement(item.replacements, targetSubscription, attrs))\n\tif (text == null) {\n\t\treturn null\n\t}\n\tif (!item.toolTip) {\n\t\treturn { text, key: item.text, antiFeature: item.antiFeature, omit: item.omit, heart: !!item.heart }\n\t} else {\n\t\tconst toolTipText = tryGetTranslation(item.toolTip)\n\t\tif (toolTipText === null) {\n\t\t\treturn null\n\t\t}\n\t\tconst toolTip = item.toolTip.endsWith(\"_markdown\") ? m.trust(toolTipText) : toolTipText\n\t\treturn { text, toolTip, key: item.text, antiFeature: item.antiFeature, omit: item.omit, heart: !!item.heart }\n\t}\n}\n\nfunction localizeFeatureCategory(\n\tcategory: FeatureCategory,\n\ttargetSubscription: PlanType,\n\tattrs: SubscriptionSelectorAttr,\n): BuyOptionDetailsAttr[\"categories\"][0] | null {\n\tconst title = tryGetTranslation(category.title)\n\tconst features = downcast<{ text: string; toolTip?: m.Child; key: string; antiFeature?: boolean | undefined; omit: boolean; heart: boolean }[]>(\n\t\tcategory.features.map((f) => localizeFeatureListItem(f, targetSubscription, attrs)).filter((it) => it != null),\n\t)\n\treturn { title, key: category.title, features, featureCount: category.featureCount }\n}\n\nfunction tryGetTranslation(key: TranslationKey, replacements?: Record<string, string | number>): string | null {\n\ttry {\n\t\treturn lang.get(key, replacements)\n\t} catch (e) {\n\t\tconsole.log(\"could not translate feature text for key\", key, \"hiding feature item\")\n\t\treturn null\n\t}\n}\n\n/**\n * get a string to insert into a translation with a slot.\n * if no key is found, undefined is returned and nothing is replaced.\n */\nexport function getReplacement(\n\tkey: ReplacementKey | undefined,\n\tsubscription: PlanType,\n\tattrs: SubscriptionSelectorAttr,\n): Record<string, string | number> | undefined {\n\tconst { priceAndConfigProvider } = attrs\n\tswitch (key) {\n\t\tcase \"customDomains\": {\n\t\t\tconst customDomainType = downcast<CustomDomainType>(priceAndConfigProvider.getPlanPricesForPlan(subscription).planConfiguration.customDomainType)\n\t\t\treturn { \"{amount}\": CustomDomainTypeCountName[customDomainType] }\n\t\t}\n\t\tcase \"mailAddressAliases\":\n\t\t\treturn { \"{amount}\": priceAndConfigProvider.getPlanPricesForPlan(subscription).planConfiguration.nbrOfAliases }\n\t\tcase \"storage\":\n\t\t\treturn { \"{amount}\": priceAndConfigProvider.getPlanPricesForPlan(subscription).planConfiguration.storageGb }\n\t\tcase \"label\": {\n\t\t\treturn { \"{amount}\": priceAndConfigProvider.getPlanPricesForPlan(subscription).planConfiguration.maxLabels }\n\t\t}\n\t}\n}\n\nfunction getHelpLabel(planType: PlanType, businessUse: boolean): TranslationKey {\n\tif (planType === PlanType.Free) return \"pricing.upgradeLater_msg\"\n\treturn businessUse ? \"pricing.excludesTaxes_msg\" : \"pricing.includesTaxes_msg\"\n}\n\nfunction getPriceHint(subscriptionPrice: number, priceType: PriceType, multiuser: boolean): string {\n\tif (subscriptionPrice > 0) {\n\t\tswitch (priceType) {\n\t\t\tcase PriceType.YearlyPerYear:\n\t\t\t\t// we do not support multiuser here\n\t\t\t\treturn lang.get(\"pricing.perYear_label\")\n\t\t\tcase PriceType.YearlyPerMonth:\n\t\t\t\tif (multiuser) {\n\t\t\t\t\treturn lang.get(\"pricing.perUserMonthPaidYearly_label\")\n\t\t\t\t} else {\n\t\t\t\t\treturn lang.get(\"pricing.perMonthPaidYearly_label\")\n\t\t\t\t}\n\t\t\tcase PriceType.MonthlyPerMonth:\n\t\t\t\tif (multiuser) {\n\t\t\t\t\treturn lang.get(\"pricing.perUserMonth_label\")\n\t\t\t\t} else {\n\t\t\t\t\treturn lang.get(\"pricing.perMonth_label\")\n\t\t\t\t}\n\t\t}\n\t}\n\treturn \"\"\n}\n"]}