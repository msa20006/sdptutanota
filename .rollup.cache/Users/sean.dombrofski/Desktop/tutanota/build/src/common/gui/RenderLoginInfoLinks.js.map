{"version":3,"file":"RenderLoginInfoLinks.js","sourceRoot":"","sources":["../../../../src/common/gui/RenderLoginInfoLinks.ts"],"names":[],"mappings":"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","sourcesContent":["import m, { Children } from \"mithril\"\nimport { isApp, isDesktop } from \"../api/common/Env.js\"\nimport { ExternalLink } from \"./base/ExternalLink.js\"\nimport { InfoLink, lang } from \"../misc/LanguageViewModel.js\"\nimport { createDropdown } from \"./base/Dropdown.js\"\nimport { mapNullable } from \"@tutao/tutanota-utils\"\nimport { getWhitelabelCustomizations } from \"../misc/WhitelabelCustomizations.js\"\nimport { Dialog } from \"./base/Dialog.js\"\nimport { ButtonType } from \"./base/Button.js\"\nimport { copyToClipboard } from \"../misc/ClipboardUtils.js\"\nimport { locator } from \"../api/main/CommonLocator.js\"\nimport { clientInfoString } from \"../misc/ErrorReporter.js\"\n\nexport function renderInfoLinks(): Children {\n\tconst privacyPolicyLink = getPrivacyStatementLink()\n\tconst imprintLink = getImprintLink()\n\treturn m(\n\t\t\".flex.col.mt-l\",\n\t\tm(\n\t\t\t\".flex.wrap.justify-center\",\n\t\t\t!isApp() && privacyPolicyLink\n\t\t\t\t? m(ExternalLink, {\n\t\t\t\t\t\thref: privacyPolicyLink,\n\t\t\t\t\t\ttext: lang.get(\"privacyLink_label\"),\n\t\t\t\t\t\tclass: \"plr\",\n\t\t\t\t\t\tisCompanySite: true,\n\t\t\t\t\t\tspecialType: \"privacy-policy\",\n\t\t\t\t  })\n\t\t\t\t: null,\n\t\t\t!isApp() && imprintLink\n\t\t\t\t? m(ExternalLink, {\n\t\t\t\t\t\thref: imprintLink,\n\t\t\t\t\t\ttext: lang.get(\"imprint_label\"),\n\t\t\t\t\t\tclass: \"plr\",\n\t\t\t\t\t\tisCompanySite: true,\n\t\t\t\t\t\tspecialType: \"license\",\n\t\t\t\t  })\n\t\t\t\t: null,\n\t\t),\n\t\tm(\n\t\t\t\".mt.mb.center.small.full-width\",\n\t\t\t{\n\t\t\t\tonclick: (e: MouseEvent) => showVersionDropdown(e),\n\t\t\t},\n\t\t\t`v${env.versionNumber}`,\n\t\t),\n\t)\n}\n\nfunction getImprintLink(): string | null {\n\treturn mapNullable(getWhitelabelCustomizations(window), (c) => c.imprintUrl) || InfoLink.About\n}\n\nfunction getPrivacyStatementLink(): string | null {\n\treturn mapNullable(getWhitelabelCustomizations(window), (c) => c.privacyStatementUrl) || InfoLink.Privacy\n}\n\n/**\n * Show a simple dialog with client info and all the logs inside of it.\n */\nfunction showVersionDropdown(e: MouseEvent) {\n\t// A semi-hidden option to get the logs before logging in, in a text form\n\tcreateDropdown({\n\t\tlazyButtons: () => [\n\t\t\t{\n\t\t\t\tlabel: \"getLogs_action\",\n\t\t\t\tclick: () => showLogsDialog(),\n\t\t\t},\n\t\t],\n\t})(e, e.target as HTMLElement)\n}\n\nasync function showLogsDialog() {\n\tconst logContent = await prepareLogContent()\n\n\tconst dialog: Dialog = Dialog.editDialog(\n\t\t{\n\t\t\tmiddle: lang.makeTranslation(\"logs\", \"Logs\"),\n\t\t\tright: () => [\n\t\t\t\t{\n\t\t\t\t\ttype: ButtonType.Secondary,\n\t\t\t\t\tlabel: \"copy_action\",\n\t\t\t\t\tclick: () => copyToClipboard(logContent),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: ButtonType.Primary,\n\t\t\t\t\tlabel: \"ok_action\",\n\t\t\t\t\tclick: () => dialog.close(),\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t\tclass {\n\t\t\tview() {\n\t\t\t\treturn m(\".fill-absolute.selectable.scroll.white-space-pre.plr.pt.pb\", logContent)\n\t\t\t}\n\t\t},\n\t\t{},\n\t)\n\tdialog.show()\n}\n\nasync function prepareLogContent() {\n\tconst entries: string[] = []\n\tif (window.logger) {\n\t\tentries.push(`== MAIN LOG ==\n${window.logger.getEntries().join(\"\\n\")}\n`)\n\t}\n\tconst workerLog = await locator.workerFacade.getLog()\n\tif (workerLog.length > 0) {\n\t\tentries.push(`== WORKER LOG ==\n${workerLog.join(\"\\n\")}\n`)\n\t}\n\n\tif (isDesktop() || isApp()) {\n\t\tentries.push(`== NATIVE LOG ==\n${await locator.commonSystemFacade.getLog()}\n`)\n\t}\n\tlet { message, type, client } = clientInfoString(new Date(), false)\n\treturn `v${env.versionNumber} - ${client}\n${message}\n\n${entries.join(\"\\n\")}`\n}\n"]}