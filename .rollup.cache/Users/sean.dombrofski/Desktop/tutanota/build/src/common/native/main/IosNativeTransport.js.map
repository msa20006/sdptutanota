{"version":3,"file":"IosNativeTransport.js","sourceRoot":"","sources":["../../../../../src/common/native/main/IosNativeTransport.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,mBAAmB,EAAE,mBAAmB,EAAmC,MAAM,iCAAiC,CAAA;AAC3H,OAAO,EAAU,kBAAkB,EAAE,sBAAsB,EAAE,MAAM,uBAAuB,CAAA;AAC1F,OAAO,EAAE,gBAAgB,EAAE,MAAM,yBAAyB,CAAA;AAE1D,gBAAgB,EAAE,CAAA;AAElB;;;;GAIG;AAEH,MAAM,OAAO,kBAAkB;IAGD;IAFrB,cAAc,GAA4B,IAAI,CAAA;IAEtD,YAA6B,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;QAC1C,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAA;IACnC,CAAC;IAED,WAAW,CAAC,OAAsB;QACjC,MAAM,OAAO,GAAG,mBAAmB,CAAC,OAAO,CAAC,CAAA;QAC5C,qDAAqD;QACrD,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,eAAe,CAAC,SAAS,CAAC,WAAW,CAAC,OAAO,CAAC,CAAA;IAClE,CAAC;IAED,iBAAiB,CAAC,OAAyB;QAC1C,IAAI,CAAC,cAAc,GAAG,OAAO,CAAA;IAC9B,CAAC;IAED,qBAAqB,CAAC,KAAa;QAClC,MAAM,OAAO,GAAG,IAAI,CAAC,cAAc,CAAA;QAEnC,IAAI,OAAO,EAAE,CAAC;YACb,MAAM,GAAG,GAAG,sBAAsB,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAA;YAC7D,MAAM,MAAM,GAAG,mBAAmB,CAAC,GAAG,CAAC,CAAA;YACvC,OAAO,CAAC,MAAM,CAAC,CAAA;QAChB,CAAC;aAAM,CAAC;YACP,OAAO,CAAC,IAAI,CAAC,4CAA4C,CAAC,CAAA;QAC3D,CAAC;IACF,CAAC;CACD","sourcesContent":["import { Transport } from \"../../api/common/threading/Transport.js\"\nimport { decodeNativeMessage, encodeNativeMessage, JsMessageHandler, NativeMessage } from \"../common/NativeLineProtocol.js\"\nimport { Base64, base64ToUint8Array, utf8Uint8ArrayToString } from \"@tutao/tutanota-utils\"\nimport { assertMainOrNode } from \"../../api/common/Env.js\"\n\nassertMainOrNode()\n\n/**\n * Transport for communication between ios native and webview\n * Messages are passed from native via as eval()-type call which invokes sendMessageFromApp, see WebViewBridge.swift\n * window.tutao.nativeApp is injected during webview initialization\n */\n\nexport class IosNativeTransport implements Transport<NativeRequestType, JsRequestType> {\n\tprivate messageHandler: JsMessageHandler | null = null\n\n\tconstructor(private readonly window: Window) {\n\t\tthis.window.tutao.nativeApp = this\n\t}\n\n\tpostMessage(message: NativeMessage) {\n\t\tconst encoded = encodeNativeMessage(message)\n\t\t// @ts-ignore this is set in the WebViewBrigde on Ios\n\t\tthis.window.webkit.messageHandlers.nativeApp.postMessage(encoded)\n\t}\n\n\tsetMessageHandler(handler: JsMessageHandler): void {\n\t\tthis.messageHandler = handler\n\t}\n\n\treceiveMessageFromApp(msg64: Base64): void {\n\t\tconst handler = this.messageHandler\n\n\t\tif (handler) {\n\t\t\tconst msg = utf8Uint8ArrayToString(base64ToUint8Array(msg64))\n\t\t\tconst parsed = decodeNativeMessage(msg)\n\t\t\thandler(parsed)\n\t\t} else {\n\t\t\tconsole.warn(\"Request from native but no handler is set!\")\n\t\t}\n\t}\n}\n"]}