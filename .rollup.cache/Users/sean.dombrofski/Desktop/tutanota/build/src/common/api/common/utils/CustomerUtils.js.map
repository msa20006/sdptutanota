{"version":3,"file":"CustomerUtils.js","sourceRoot":"","sources":["../../../../../../src/common/api/common/utils/CustomerUtils.ts"],"names":[],"mappings":"AAGA,MAAM,UAAU,uBAAuB,CAAC,YAA0B,EAAE,UAAmB;IACtF,OAAO,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,gBAAgB,IAAI,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,KAAK,UAAU,CAAC,CAAC,IAAI,IAAI,CAAA;AAC5I,CAAC;AAED,MAAM,UAAU,oBAAoB,CAAC,YAA0B;IAC9D,OAAO,YAAY,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,gBAAgB,IAAI,IAAI,CAAC,CAAA;AAC5E,CAAC;AAED,MAAM,UAAU,iCAAiC,CAAC,QAAkB,EAAE,OAAoB;IACzF,OAAO,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,aAAa,EAAE,EAAE,CAAC,aAAa,CAAC,OAAO,KAAK,OAAO,CAAC,CAAA;AAC1F,CAAC","sourcesContent":["import { Customer, CustomerInfo, DomainInfo } from \"../../entities/sys/TypeRefs.js\"\nimport { FeatureType } from \"../TutanotaConstants.js\"\n\nexport function getWhitelabelDomainInfo(customerInfo: CustomerInfo, domainName?: string): DomainInfo | null {\n\treturn customerInfo.domainInfos.find((info) => info.whitelabelConfig != null && (domainName == null || info.domain === domainName)) ?? null\n}\n\nexport function getCustomMailDomains(customerInfo: CustomerInfo): Array<DomainInfo> {\n\treturn customerInfo.domainInfos.filter((di) => di.whitelabelConfig == null)\n}\n\nexport function isCustomizationEnabledForCustomer(customer: Customer, feature: FeatureType): boolean {\n\treturn customer.customizations.some((customization) => customization.feature === feature)\n}\n"]}