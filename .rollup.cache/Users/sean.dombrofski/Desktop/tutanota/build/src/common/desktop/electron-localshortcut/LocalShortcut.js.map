{"version":3,"file":"LocalShortcut.js","sourceRoot":"","sources":["../../../../../src/common/desktop/electron-localshortcut/LocalShortcut.ts"],"names":[],"mappings":"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","sourcesContent":["// @ts-nocheck\nimport { app, BrowserWindow } from \"electron\"\nimport isAccelerator from \"./IsAccelerator\"\nimport equals from \"./KeyboardEventsAreEqual\"\nimport { toKeyEvent } from \"./KeyboardeventFromElectronAccelerator\"\n\nconst DEBUG = false\nconst debug: (..._: any[]) => void = DEBUG ? console.log.bind(console) : () => {}\n\nexport class LocalShortcutManager {\n\tenableAll(win: BrowserWindow): void {\n\t\tenableAll(win)\n\t}\n\n\tdisableAll(win: BrowserWindow): void {\n\t\tdisableAll(win)\n\t}\n\n\tregister(win: BrowserWindow, accelerator: Accelerator, callback: () => boolean | void): void {\n\t\tregister(win, accelerator, callback)\n\t}\n\n\tunregisterAll(win: BrowserWindow): void {\n\t\tunregisterAll(win)\n\t}\n}\n\n// A placeholder to register shortcuts\n// on any window of the app.\nexport const ANY_WINDOW: symbol = Symbol(\"any-window\")\n\ntype Shortcut = {\n\teventStamp: unknown\n\tcallback: () => void\n\tenabled: boolean\n}\n\n// I give up on typing this, this is a mess\n\ntype ShortcutsList = any //Array<Shortcut> & {removeListener?: () => void}\nconst windowsWithShortcuts: WeakMap<any, any> = new WeakMap()\n\nconst title = (win: BrowserWindow | typeof ANY_WINDOW | null) => {\n\tif (win instanceof BrowserWindow) {\n\t\ttry {\n\t\t\treturn win.getTitle()\n\t\t} catch (error) {\n\t\t\treturn \"A destroyed window\"\n\t\t}\n\t}\n\n\treturn \"An falsy value\"\n}\n\nfunction _checkAccelerator(accelerator: string) {\n\tif (!isAccelerator(accelerator)) {\n\t\tconst w: any = {}\n\t\tError.captureStackTrace(w)\n\t\tconst stack = w.stack ? w.stack.split(\"\\n\").slice(4).join(\"\\n\") : w.message\n\t\tconst msg = `\nWARNING: ${JSON.stringify(accelerator)} is not a valid accelerator.\n${stack}\n`\n\t\tconsole.error(msg)\n\t}\n}\n\n/**\n * Disable all of the shortcuts registered on the BrowserWindow instance.\n * Registered shortcuts no more works on the `window` instance, but the module\n * keep a reference on them. You can reactivate them later by calling `enableAll`\n * method on the same window instance.\n * @param  {BrowserWindow} win BrowserWindow instance\n */\nexport function disableAll(win: BrowserWindow) {\n\tdebug(`Disabling all shortcuts on window ${title(win)}`)\n\tconst wc = win.webContents\n\tconst shortcutsOfWindow = windowsWithShortcuts.get(wc)\n\tif (!shortcutsOfWindow) return\n\n\tfor (const shortcut of shortcutsOfWindow) {\n\t\tshortcut.enabled = false\n\t}\n}\n\n/**\n * Enable all of the shortcuts registered on the BrowserWindow instance that\n * you had previously disabled calling `disableAll` method.\n * @param  {BrowserWindow} win BrowserWindow instance\n */\nexport function enableAll(win: BrowserWindow) {\n\tdebug(`Enabling all shortcuts on window ${title(win)}`)\n\tconst wc = win.webContents\n\tconst shortcutsOfWindow = windowsWithShortcuts.get(wc)\n\tif (!shortcutsOfWindow) return\n\n\tfor (const shortcut of shortcutsOfWindow) {\n\t\tshortcut.enabled = true\n\t}\n}\n\n/**\n * Unregisters all of the shortcuts registered on any focused BrowserWindow\n * instance. This method does not unregister any shortcut you registered on\n * a particular window instance.\n * @param  {BrowserWindow} win BrowserWindow instance\n */\nexport function unregisterAll(win: BrowserWindow) {\n\tdebug(`Unregistering all shortcuts on window ${title(win)}`)\n\tconst wc = win.webContents\n\tconst shortcutsOfWindow = windowsWithShortcuts.get(wc)\n\tif (shortcutsOfWindow && shortcutsOfWindow.removeListener) {\n\t\t// Remove listener from window\n\t\tshortcutsOfWindow.removeListener()\n\t\twindowsWithShortcuts.delete(wc)\n\t}\n}\n\nfunction _normalizeEvent(input: Input) {\n\tconst normalizedEvent: { code: string; key: string; ctrlKey?: boolean } = {\n\t\tcode: input.code,\n\t\tkey: input.key,\n\t}\n\n\tfor (let prop of [\"alt\", \"shift\", \"meta\"]) {\n\t\tif (typeof input[prop] !== \"undefined\") {\n\t\t\tnormalizedEvent[`${prop}Key`] = input[prop]\n\t\t}\n\t}\n\n\tif (typeof input.control !== \"undefined\") {\n\t\tnormalizedEvent.ctrlKey = input.control\n\t}\n\n\treturn normalizedEvent\n}\n\nfunction _findShortcut(event, shortcutsOfWindow) {\n\tlet i = 0\n\tfor (const shortcut of shortcutsOfWindow) {\n\t\tif (equals(shortcut.eventStamp, event)) {\n\t\t\treturn i\n\t\t}\n\n\t\ti++\n\t}\n\n\treturn -1\n}\n\ninterface Input {\n\t/**\n\t * Either `keyUp` or `keyDown`.\n\t */\n\ttype: string\n\t/**\n\t * Equivalent to KeyboardEvent.key.\n\t */\n\tkey: string\n\t/**\n\t * Equivalent to KeyboardEvent.code.\n\t */\n\tcode: string\n\t/**\n\t * Equivalent to KeyboardEvent.repeat.\n\t */\n\tisAutoRepeat: boolean\n\t/**\n\t * Equivalent to KeyboardEvent.isComposing.\n\t */\n\tisComposing: boolean\n\t/**\n\t * Equivalent to KeyboardEvent.shiftKey.\n\t */\n\tshift: boolean\n\t/**\n\t * Equivalent to KeyboardEvent.controlKey.\n\t */\n\tcontrol: boolean\n\t/**\n\t * Equivalent to KeyboardEvent.altKey.\n\t */\n\talt: boolean\n\t/**\n\t * Equivalent to KeyboardEvent.metaKey.\n\t */\n\tmeta: boolean\n}\n\nconst _onBeforeInput =\n\t(shortcutsOfWindow) =>\n\t(e, input: Input): void => {\n\t\tif (input.type === \"keyUp\") {\n\t\t\treturn\n\t\t}\n\n\t\tconst event = _normalizeEvent(input)\n\n\t\tdebug(`before-input-event: ${String(input)} is translated to: ${String(event)}`)\n\t\tfor (const { eventStamp, callback } of shortcutsOfWindow) {\n\t\t\tif (equals(eventStamp, event)) {\n\t\t\t\tdebug(`eventStamp: ${String(eventStamp)} match`)\n\t\t\t\tcallback()\n\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tdebug(`eventStamp: ${String(eventStamp)} no match`)\n\t\t}\n\t}\n\ntype Accelerator = string | Array<string>\n\n/**\n * Registers the shortcut `accelerator`on the BrowserWindow instance.\n * @param  {BrowserWindow} win - BrowserWindow instance to register.\n * This argument could be omitted, in this case the function register\n * the shortcut on all app windows.\n * @param  {String|Array<String>} accelerator - the shortcut to register\n * @param  {Function} callback    This function is called when the shortcut is pressed\n * and the window is focused and not minimized.\n */\nexport function register(win: BrowserWindow, accelerator: Accelerator, callback: () => boolean | void) {\n\tlet wc = win.webContents\n\n\tif (Array.isArray(accelerator)) {\n\t\tfor (const acceleratorValue of accelerator) {\n\t\t\tif (typeof acceleratorValue === \"string\") {\n\t\t\t\tregister(win, acceleratorValue, callback)\n\t\t\t}\n\t\t}\n\t\treturn\n\t}\n\tconst acceleratorString: string = accelerator\n\n\tdebug(`Registering callback for ${acceleratorString} on window ${title(win)}`)\n\t_checkAccelerator(acceleratorString)\n\n\tdebug(`${acceleratorString} seems to be a valid shortcut sequence`)\n\n\tlet shortcutsOfWindow: ShortcutsList = windowsWithShortcuts.get(wc)\n\tif (shortcutsOfWindow == null) {\n\t\tdebug(\"This is the first shortcut of the window\")\n\t\tshortcutsOfWindow = []\n\t\twindowsWithShortcuts.set(wc, shortcutsOfWindow)\n\n\t\tif ((wc as any) === ANY_WINDOW) {\n\t\t\tconst keyHandler = _onBeforeInput(shortcutsOfWindow)\n\t\t\tconst enableAppShortcuts = (e, win) => {\n\t\t\t\tconst wc = win.webContents\n\t\t\t\twc.on(\"before-input-event\", keyHandler)\n\t\t\t\twc.once(\"closed\", () => {\n\t\t\t\t\twc.removeListener(\"before-input-event\", keyHandler)\n\t\t\t\t})\n\t\t\t}\n\n\t\t\t// Enable shortcut on current windows\n\t\t\tconst windows = BrowserWindow.getAllWindows()\n\n\t\t\tfor (const win of windows) {\n\t\t\t\tenableAppShortcuts(null, win)\n\t\t\t}\n\n\t\t\t// Enable shortcut on future windows\n\t\t\tapp.on(\"browser-window-created\", enableAppShortcuts)\n\n\t\t\tshortcutsOfWindow.removeListener = () => {\n\t\t\t\tconst windows = BrowserWindow.getAllWindows()\n\t\t\t\tfor (const win of windows) {\n\t\t\t\t\twin.webContents.removeListener(\"before-input-event\", keyHandler)\n\t\t\t\t}\n\t\t\t\tapp.removeListener(\"browser-window-created\", enableAppShortcuts)\n\t\t\t}\n\t\t} else {\n\t\t\tconst keyHandler = _onBeforeInput(shortcutsOfWindow)\n\t\t\twc.on(\"before-input-event\", keyHandler)\n\n\t\t\t// Save a reference to allow remove of listener from elsewhere\n\t\t\tshortcutsOfWindow.removeListener = () => {\n\t\t\t\twc.removeListener(\"before-input-event\", keyHandler)\n\t\t\t}\n\t\t\t// @ts-ignore\n\t\t\twc.once(\"closed\", shortcutsOfWindow.removeListener)\n\t\t}\n\t}\n\n\tdebug(\"Adding shortcut to window set.\")\n\n\tconst eventStamp = toKeyEvent(accelerator)\n\n\tshortcutsOfWindow.push({\n\t\teventStamp,\n\t\tcallback,\n\t\tenabled: true,\n\t})\n\n\tdebug(\"Shortcut registered.\")\n}\n\n/**\n * Unregisters the shortcut of `accelerator` registered on the BrowserWindow instance.\n * @param  {BrowserWindow} win - BrowserWindow instance to unregister.\n * This argument could be omitted, in this case the function unregister the shortcut\n * on all app windows. If you registered the shortcut on a particular window instance, it will do nothing.\n * @param  {String|Array<String>} accelerator - the shortcut to unregister\n */\nexport function unregister(win: BrowserWindow | typeof ANY_WINDOW, accelerator: Accelerator) {\n\tif (win instanceof BrowserWindow && win.isDestroyed()) {\n\t\treturn\n\t}\n\tlet wc = win instanceof BrowserWindow ? win.webContents : ANY_WINDOW\n\n\tif (Array.isArray(accelerator)) {\n\t\tfor (const nestedAccelerator of accelerator) {\n\t\t\tif (typeof nestedAccelerator === \"string\") {\n\t\t\t\tunregister(win, nestedAccelerator)\n\t\t\t}\n\t\t}\n\t\treturn\n\t}\n\n\tdebug(`Unregistering callback for ${accelerator} on window ${title(win)}`)\n\n\t_checkAccelerator(accelerator)\n\n\tdebug(`${accelerator} seems a valid shortcut sequence.`)\n\n\tif (!windowsWithShortcuts.has(wc)) {\n\t\tdebug(\"Early return because window has never had shortcuts registered.\")\n\t\treturn\n\t}\n\n\tconst shortcutsOfWindow: any = windowsWithShortcuts.get(wc)\n\n\tconst eventStamp = toKeyEvent(accelerator)\n\tconst shortcutIdx = _findShortcut(eventStamp, shortcutsOfWindow)\n\tif (shortcutIdx === -1) {\n\t\treturn\n\t}\n\n\tshortcutsOfWindow.splice(shortcutIdx, 1)\n\n\t// If the window has no more shortcuts,\n\t// we remove it early from the WeakMap\n\t// and unregistering the event listener\n\tif (shortcutsOfWindow.length === 0) {\n\t\t// Remove listener from window\n\t\tshortcutsOfWindow.removeListener()\n\n\t\t// Remove window from shortcuts catalog\n\t\twindowsWithShortcuts.delete(wc)\n\t}\n}\n\n/**\n * Returns `true` or `false` depending on whether the shortcut `accelerator`\n * is registered on `window`.\n * @param  {BrowserWindow} win - BrowserWindow instance to check. This argument\n * could be omitted, in this case the function returns whether the shortcut\n * `accelerator` is registered on all app windows. If you registered the\n * shortcut on a particular window instance, it return false.\n * @param  {String} accelerator - the shortcut to check\n * @return {Boolean} - if the shortcut `accelerator` is registered on `window`.\n */\nexport function isRegistered(win: BrowserWindow, accelerator: string): boolean {\n\t_checkAccelerator(accelerator)\n\tconst wc = win.webContents\n\tconst shortcutsOfWindow: any = windowsWithShortcuts.get(wc)\n\tconst eventStamp = toKeyEvent(accelerator)\n\n\treturn _findShortcut(eventStamp, shortcutsOfWindow) !== -1\n}\n"]}