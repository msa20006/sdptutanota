{"version":3,"file":"TypeRefs.js","sourceRoot":"","sources":["../../../../../../src/common/api/entities/usage/TypeRefs.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAA4B,MAAM,mCAAmC,CAAA;AACpF,OAAO,EAAE,OAAO,EAAE,MAAM,uBAAuB,CAAA;AAC/C,OAAO,EAAE,UAAU,EAAE,MAAM,iBAAiB,CAAA;AAG5C,MAAM,CAAC,MAAM,0BAA0B,GAAiC,IAAI,OAAO,CAAC,OAAO,EAAE,qBAAqB,CAAC,CAAA;AAEnH,MAAM,UAAU,yBAAyB,CAAC,MAA2C;IACpF,OAAO,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,mBAAmB,EAAE,0BAA0B,CAAC,EAAE,MAAM,CAAC,CAAA;AACjG,CAAC;AAaD,MAAM,CAAC,MAAM,4BAA4B,GAAmC,IAAI,OAAO,CAAC,OAAO,EAAE,uBAAuB,CAAC,CAAA;AAEzH,MAAM,UAAU,2BAA2B,CAAC,MAA6C;IACxF,OAAO,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,qBAAqB,EAAE,4BAA4B,CAAC,EAAE,MAAM,CAAC,CAAA;AACrG,CAAC;AAQD,MAAM,CAAC,MAAM,6BAA6B,GAAoC,IAAI,OAAO,CAAC,OAAO,EAAE,wBAAwB,CAAC,CAAA;AAE5H,MAAM,UAAU,4BAA4B,CAAC,MAA8C;IAC1F,OAAO,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,sBAAsB,EAAE,6BAA6B,CAAC,EAAE,MAAM,CAAC,CAAA;AACvG,CAAC;AAUD,MAAM,CAAC,MAAM,4BAA4B,GAAmC,IAAI,OAAO,CAAC,OAAO,EAAE,uBAAuB,CAAC,CAAA;AAEzH,MAAM,UAAU,2BAA2B,CAAC,MAA6C;IACxF,OAAO,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,qBAAqB,EAAE,4BAA4B,CAAC,EAAE,MAAM,CAAC,CAAA;AACrG,CAAC;AAWD,MAAM,CAAC,MAAM,iCAAiC,GAAwC,IAAI,OAAO,CAAC,OAAO,EAAE,4BAA4B,CAAC,CAAA;AAExI,MAAM,UAAU,gCAAgC,CAAC,MAAkD;IAClG,OAAO,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,0BAA0B,EAAE,iCAAiC,CAAC,EAAE,MAAM,CAAC,CAAA;AAC/G,CAAC;AASD,MAAM,CAAC,MAAM,0BAA0B,GAAiC,IAAI,OAAO,CAAC,OAAO,EAAE,qBAAqB,CAAC,CAAA;AAEnH,MAAM,UAAU,yBAAyB,CAAC,MAA2C;IACpF,OAAO,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,mBAAmB,EAAE,0BAA0B,CAAC,EAAE,MAAM,CAAC,CAAA;AACjG,CAAC;AASD,MAAM,CAAC,MAAM,+BAA+B,GAAsC,IAAI,OAAO,CAAC,OAAO,EAAE,0BAA0B,CAAC,CAAA;AAElI,MAAM,UAAU,8BAA8B,CAAC,MAAgD;IAC9F,OAAO,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,wBAAwB,EAAE,+BAA+B,CAAC,EAAE,MAAM,CAAC,CAAA;AAC3G,CAAC;AAYD,MAAM,CAAC,MAAM,qBAAqB,GAA4B,IAAI,OAAO,CAAC,OAAO,EAAE,gBAAgB,CAAC,CAAA;AAEpG,MAAM,UAAU,oBAAoB,CAAC,MAAsC;IAC1E,OAAO,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,cAAc,EAAE,qBAAqB,CAAC,EAAE,MAAM,CAAC,CAAA;AACvF,CAAC","sourcesContent":["import { create, Stripped, StrippedEntity } from \"../../common/utils/EntityUtils.js\"\nimport { TypeRef } from \"@tutao/tutanota-utils\"\nimport { typeModels } from \"./TypeModels.js\"\n\n\nexport const UsageTestAssignmentTypeRef: TypeRef<UsageTestAssignment> = new TypeRef(\"usage\", \"UsageTestAssignment\")\n\nexport function createUsageTestAssignment(values: StrippedEntity<UsageTestAssignment>): UsageTestAssignment {\n\treturn Object.assign(create(typeModels.UsageTestAssignment, UsageTestAssignmentTypeRef), values)\n}\n\nexport type UsageTestAssignment = {\n\t_type: TypeRef<UsageTestAssignment>;\n\n\t_id: Id;\n\tname: string;\n\tsendPings: boolean;\n\ttestId: Id;\n\tvariant: null | NumberString;\n\n\tstages: UsageTestStage[];\n}\nexport const UsageTestAssignmentInTypeRef: TypeRef<UsageTestAssignmentIn> = new TypeRef(\"usage\", \"UsageTestAssignmentIn\")\n\nexport function createUsageTestAssignmentIn(values: StrippedEntity<UsageTestAssignmentIn>): UsageTestAssignmentIn {\n\treturn Object.assign(create(typeModels.UsageTestAssignmentIn, UsageTestAssignmentInTypeRef), values)\n}\n\nexport type UsageTestAssignmentIn = {\n\t_type: TypeRef<UsageTestAssignmentIn>;\n\n\t_format: NumberString;\n\ttestDeviceId: null | Id;\n}\nexport const UsageTestAssignmentOutTypeRef: TypeRef<UsageTestAssignmentOut> = new TypeRef(\"usage\", \"UsageTestAssignmentOut\")\n\nexport function createUsageTestAssignmentOut(values: StrippedEntity<UsageTestAssignmentOut>): UsageTestAssignmentOut {\n\treturn Object.assign(create(typeModels.UsageTestAssignmentOut, UsageTestAssignmentOutTypeRef), values)\n}\n\nexport type UsageTestAssignmentOut = {\n\t_type: TypeRef<UsageTestAssignmentOut>;\n\n\t_format: NumberString;\n\ttestDeviceId: Id;\n\n\tassignments: UsageTestAssignment[];\n}\nexport const UsageTestMetricConfigTypeRef: TypeRef<UsageTestMetricConfig> = new TypeRef(\"usage\", \"UsageTestMetricConfig\")\n\nexport function createUsageTestMetricConfig(values: StrippedEntity<UsageTestMetricConfig>): UsageTestMetricConfig {\n\treturn Object.assign(create(typeModels.UsageTestMetricConfig, UsageTestMetricConfigTypeRef), values)\n}\n\nexport type UsageTestMetricConfig = {\n\t_type: TypeRef<UsageTestMetricConfig>;\n\n\t_id: Id;\n\tname: string;\n\ttype: NumberString;\n\n\tconfigValues: UsageTestMetricConfigValue[];\n}\nexport const UsageTestMetricConfigValueTypeRef: TypeRef<UsageTestMetricConfigValue> = new TypeRef(\"usage\", \"UsageTestMetricConfigValue\")\n\nexport function createUsageTestMetricConfigValue(values: StrippedEntity<UsageTestMetricConfigValue>): UsageTestMetricConfigValue {\n\treturn Object.assign(create(typeModels.UsageTestMetricConfigValue, UsageTestMetricConfigValueTypeRef), values)\n}\n\nexport type UsageTestMetricConfigValue = {\n\t_type: TypeRef<UsageTestMetricConfigValue>;\n\n\t_id: Id;\n\tkey: string;\n\tvalue: string;\n}\nexport const UsageTestMetricDataTypeRef: TypeRef<UsageTestMetricData> = new TypeRef(\"usage\", \"UsageTestMetricData\")\n\nexport function createUsageTestMetricData(values: StrippedEntity<UsageTestMetricData>): UsageTestMetricData {\n\treturn Object.assign(create(typeModels.UsageTestMetricData, UsageTestMetricDataTypeRef), values)\n}\n\nexport type UsageTestMetricData = {\n\t_type: TypeRef<UsageTestMetricData>;\n\n\t_id: Id;\n\tname: string;\n\tvalue: string;\n}\nexport const UsageTestParticipationInTypeRef: TypeRef<UsageTestParticipationIn> = new TypeRef(\"usage\", \"UsageTestParticipationIn\")\n\nexport function createUsageTestParticipationIn(values: StrippedEntity<UsageTestParticipationIn>): UsageTestParticipationIn {\n\treturn Object.assign(create(typeModels.UsageTestParticipationIn, UsageTestParticipationInTypeRef), values)\n}\n\nexport type UsageTestParticipationIn = {\n\t_type: TypeRef<UsageTestParticipationIn>;\n\n\t_format: NumberString;\n\tstage: NumberString;\n\ttestDeviceId: Id;\n\ttestId: Id;\n\n\tmetrics: UsageTestMetricData[];\n}\nexport const UsageTestStageTypeRef: TypeRef<UsageTestStage> = new TypeRef(\"usage\", \"UsageTestStage\")\n\nexport function createUsageTestStage(values: StrippedEntity<UsageTestStage>): UsageTestStage {\n\treturn Object.assign(create(typeModels.UsageTestStage, UsageTestStageTypeRef), values)\n}\n\nexport type UsageTestStage = {\n\t_type: TypeRef<UsageTestStage>;\n\n\t_id: Id;\n\tmaxPings: NumberString;\n\tminPings: NumberString;\n\tname: string;\n\n\tmetrics: UsageTestMetricConfig[];\n}\n"]}