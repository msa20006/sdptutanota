{"version":3,"file":"ColorPickerModel.js","sourceRoot":"","sources":["../../../../../../src/common/gui/base/colorPicker/ColorPickerModel.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,iBAAiB,EAAE,MAAM,aAAa,CAAA;AAUzD,MAAM,OAAO,gBAAgB;IAKC;IAJ7B,MAAM,CAAU,YAAY,GAAG,CAAC,CAAA;IACvB,aAAa,CAAqD;IAC1D,gBAAgB,GAAwB,IAAI,GAAG,EAAE,CAAA;IAElE,YAA6B,WAAoB;QAApB,gBAAW,GAAX,WAAW,CAAS;QAChD,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,SAAS,EAAE,UAAU,EAAE,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAA;QAEzG,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,MAAM,CAAC;YAClC,QAAQ,EAAE,CAAC,UAAU,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YAC7C,UAAU,EAAE,CAAC,UAAU,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;YACrD,SAAS,EAAE,CAAC,UAAU,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;SAC1C,CAAC,CAAA;IACZ,CAAC;IAED,iBAAiB,CAAC,GAAW;QAC5B,MAAM,EAAE,UAAU,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAA;QAC3D,OAAO,QAAQ,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,CAAA;IACzD,CAAC;IAEO,kBAAkB;QACzB,OAAO;YACN,QAAQ,EAAE,CAAC;YACX,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG;YACvC,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;SACrC,CAAA;IACF,CAAC;IAED,QAAQ,CAAC,GAAW,EAAE,OAAe;QACpC,MAAM,CAAC,GAAG,iBAAiB,CAAC,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAA;QACvE,MAAM,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,OAAO,CAAC,CAAA;QAChD,MAAM,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,OAAO,CAAC,CAAA;QAE/C,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAA;IACnB,CAAC;IAED,mBAAmB,CAAC,UAAkB,EAAE,SAAiB;QACxD,IAAI,IAAI,CAAC,gBAAgB,CAAC,IAAI,KAAK,CAAC,EAAE,CAAC;YACtC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,gBAAgB,CAAC,YAAY,EAAE,CAAC,EAAE,EAAE,CAAC;gBACxD,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;YAC5G,CAAC;QACF,CAAC;QAED,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC,CAAA;IACpE,CAAC;IAEO,KAAK,CAAC,CAAS,EAAE,CAAS;QACjC,OAAO,GAAG,CAAC,IAAI,CAAC,EAAE,CAAA;IACnB,CAAC","sourcesContent":["import { hslToHex, normalizeHueAngle } from \"../Color.js\"\n\ntype NumberTuple<L extends number> = readonly number[] & { length: L }\n\ninterface PaletteSchema<L extends number> {\n\treadonly hueShift: NumberTuple<L>\n\treadonly saturation: NumberTuple<L>\n\treadonly lightness: NumberTuple<L>\n}\n\nexport class ColorPickerModel {\n\tstatic readonly PALETTE_SIZE = 8\n\treadonly paletteSchema: PaletteSchema<typeof ColorPickerModel.PALETTE_SIZE>\n\tprivate readonly variantIndexBySL: Map<string, number> = new Map()\n\n\tconstructor(private readonly isDarkTheme: boolean) {\n\t\tconst { hueShift: hueWindowH, saturation: hueWindowS, lightness: hueWindowL } = this.getHueWindowSchema()\n\n\t\tthis.paletteSchema = Object.freeze({\n\t\t\thueShift: [hueWindowH, 0, 0, -1, -1, 0, 0, 0],\n\t\t\tsaturation: [hueWindowS, 100, 54, 36, 27, 25, 28, 31],\n\t\t\tlightness: [hueWindowL, 87, 77, 66, 55, 46, 41, 36],\n\t\t} as const)\n\t}\n\n\tgetHueWindowColor(hue: number) {\n\t\tconst { saturation, lightness } = this.getHueWindowSchema()\n\t\treturn hslToHex({ h: hue, s: saturation, l: lightness })\n\t}\n\n\tprivate getHueWindowSchema() {\n\t\treturn {\n\t\t\thueShift: 0,\n\t\t\tsaturation: this.isDarkTheme ? 50 : 100,\n\t\t\tlightness: this.isDarkTheme ? 50 : 40,\n\t\t}\n\t}\n\n\tgetColor(hue: number, variant: number): { h: number; s: number; l: number } {\n\t\tconst h = normalizeHueAngle(hue + this.paletteSchema.hueShift[variant])\n\t\tconst s = this.paletteSchema.saturation[variant]\n\t\tconst l = this.paletteSchema.lightness[variant]\n\n\t\treturn { h, s, l }\n\t}\n\n\tgetVariantIndexBySL(saturation: number, lightness: number) {\n\t\tif (this.variantIndexBySL.size === 0) {\n\t\t\tfor (let i = 0; i < ColorPickerModel.PALETTE_SIZE; i++) {\n\t\t\t\tthis.variantIndexBySL.set(this.slKey(this.paletteSchema.saturation[i], this.paletteSchema.lightness[i]), i)\n\t\t\t}\n\t\t}\n\n\t\treturn this.variantIndexBySL.get(this.slKey(saturation, lightness))\n\t}\n\n\tprivate slKey(s: number, l: number) {\n\t\treturn `${s}_${l}`\n\t}\n}\n"]}