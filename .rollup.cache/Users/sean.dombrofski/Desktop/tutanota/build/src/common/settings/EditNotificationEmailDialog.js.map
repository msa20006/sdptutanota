{"version":3,"file":"EditNotificationEmailDialog.js","sourceRoot":"","sources":["../../../../src/common/settings/EditNotificationEmailDialog.ts"],"names":[],"mappings":"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","sourcesContent":["import type { Booking, CustomerInfo, CustomerProperties, NotificationMailTemplate } from \"../api/entities/sys/TypeRefs.js\"\nimport { BookingTypeRef, createNotificationMailTemplate, CustomerInfoTypeRef, CustomerPropertiesTypeRef } from \"../api/entities/sys/TypeRefs.js\"\nimport { HtmlEditor } from \"../gui/editor/HtmlEditor.js\"\nimport { InfoLink, lang, languages } from \"../misc/LanguageViewModel.js\"\nimport stream from \"mithril/stream\"\nimport Stream from \"mithril/stream\"\nimport { Dialog, DialogType } from \"../gui/base/Dialog.js\"\nimport m from \"mithril\"\nimport type { SelectorItemList } from \"../gui/base/DropDownSelector.js\"\nimport { DropDownSelector } from \"../gui/base/DropDownSelector.js\"\nimport { TextField } from \"../gui/base/TextField.js\"\nimport { showProgressDialog } from \"../gui/dialogs/ProgressDialog.js\"\nimport { assertNotNull, LazyLoaded, memoized, neverNull, ofClass } from \"@tutao/tutanota-utils\"\nimport { htmlSanitizer } from \"../misc/HtmlSanitizer.js\"\nimport { PayloadTooLargeError } from \"../api/common/error/RestError.js\"\nimport { SegmentControl } from \"../gui/base/SegmentControl.js\"\nimport { UserError } from \"../api/main/UserError.js\"\nimport { showNotAvailableForFreeDialog, showPlanUpgradeRequiredDialog } from \"../misc/SubscriptionDialogs.js\"\nimport { getAvailablePlansWithWhitelabel, isWhitelabelActive } from \"../subscription/SubscriptionUtils.js\"\nimport type { UserController } from \"../api/main/UserController.js\"\nimport { GENERATED_MAX_ID } from \"../api/common/utils/EntityUtils.js\"\nimport { locator } from \"../api/main/CommonLocator.js\"\nimport { PlanType } from \"../api/common/TutanotaConstants.js\"\nimport { getWhitelabelDomainInfo } from \"../api/common/utils/CustomerUtils.js\"\n\nimport { insertInlineImageB64ClickHandler } from \"../mailFunctionality/SharedMailUtils.js\"\n\nexport function showAddOrEditNotificationEmailDialog(userController: UserController, selectedNotificationLanguage?: string) {\n\tlet existingTemplate: NotificationMailTemplate | undefined = undefined\n\tuserController.loadCustomer().then((customer) => {\n\t\tif (customer.properties) {\n\t\t\tconst customerProperties = new LazyLoaded(() => locator.entityClient.load(CustomerPropertiesTypeRef, neverNull(customer.properties)))\n\t\t\treturn customerProperties\n\t\t\t\t.getAsync()\n\t\t\t\t.then((loadedCustomerProperties) => {\n\t\t\t\t\tif (selectedNotificationLanguage != null) {\n\t\t\t\t\t\texistingTemplate = loadedCustomerProperties.notificationMailTemplates.find(\n\t\t\t\t\t\t\t(template) => template.language === selectedNotificationLanguage,\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.then(() => {\n\t\t\t\t\treturn userController\n\t\t\t\t\t\t.loadCustomerInfo()\n\t\t\t\t\t\t.then((customerInfo) => {\n\t\t\t\t\t\t\treturn customerInfo.bookings\n\t\t\t\t\t\t\t\t? locator.entityClient\n\t\t\t\t\t\t\t\t\t\t.loadRange(BookingTypeRef, customerInfo.bookings.items, GENERATED_MAX_ID, 1, true)\n\t\t\t\t\t\t\t\t\t\t.then((bookings) => (bookings.length === 1 ? bookings[0] : null))\n\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.then((lastBooking) => {\n\t\t\t\t\t\t\tshowBuyOrSetNotificationEmailDialog(lastBooking, customerProperties, existingTemplate)\n\t\t\t\t\t\t})\n\t\t\t\t})\n\t\t}\n\t})\n}\n\nexport async function showBuyOrSetNotificationEmailDialog(\n\tlastBooking: Booking | null,\n\tcustomerProperties: LazyLoaded<CustomerProperties>,\n\texistingTemplate?: NotificationMailTemplate,\n): Promise<void> {\n\tif (locator.logins.getUserController().isFreeAccount()) {\n\t\tshowNotAvailableForFreeDialog([PlanType.Unlimited])\n\t} else {\n\t\tconst planConfiguration = await locator.logins.getUserController().getPlanConfig()\n\t\tlet whitelabel = isWhitelabelActive(lastBooking, planConfiguration)\n\t\tif (!whitelabel) {\n\t\t\tconst plansWithWhitelabel = await getAvailablePlansWithWhitelabel()\n\t\t\twhitelabel = await showPlanUpgradeRequiredDialog(plansWithWhitelabel)\n\t\t}\n\t\tif (whitelabel) {\n\t\t\tshow(existingTemplate ?? null, customerProperties)\n\t\t}\n\t}\n}\n\nexport function show(existingTemplate: NotificationMailTemplate | null, customerProperties: LazyLoaded<CustomerProperties>) {\n\tlet template: NotificationMailTemplate\n\n\tif (!existingTemplate) {\n\t\ttemplate = createNotificationMailTemplate({\n\t\t\tlanguage: \"en\",\n\t\t\tbody: getDefaultNotificationMail(),\n\t\t\tsubject: lang.get(\"externalNotificationMailSubject_msg\", {\n\t\t\t\t\"{1}\": \"{sender}\",\n\t\t\t}),\n\t\t})\n\t} else {\n\t\ttemplate = existingTemplate\n\t}\n\n\tconst editor = new HtmlEditor()\n\t\t.setMinHeight(400)\n\t\t.showBorders()\n\t\t.setModeSwitcher(\"mailBody_label\")\n\t\t.setValue(template.body)\n\t\t.enableToolbar()\n\t\t.setToolbarOptions({\n\t\t\timageButtonClickHandler: insertInlineImageB64ClickHandler,\n\t\t})\n\tconst editSegment = {\n\t\tname: lang.get(\"edit_action\"),\n\t\tvalue: \"edit\",\n\t}\n\tconst previewSegment = {\n\t\tname: lang.get(\"preview_label\"),\n\t\tvalue: \"preview\",\n\t}\n\tconst selectedTab = stream(editSegment.value)\n\tconst sortedLanguages: SelectorItemList<string> = languages\n\t\t.slice()\n\t\t.sort((a, b) => lang.get(a.textId).localeCompare(lang.get(b.textId)))\n\t\t.map((language) => {\n\t\t\treturn {\n\t\t\t\tname: lang.get(language.textId),\n\t\t\t\tvalue: language.code,\n\t\t\t}\n\t\t})\n\tconst selectedLanguage = assertNotNull(sortedLanguages.find(({ value }) => value === template.language))\n\tconst selectedLanguageStream: Stream<string> = stream(selectedLanguage.value)\n\tconst subject = stream(template.subject)\n\t// Editor resets its value on re-attach so we keep it ourselves\n\tlet savedHtml = editor.getValue()\n\tselectedTab.map((tab) => {\n\t\tif (tab === editSegment.value) {\n\t\t\teditor.setValue(savedHtml)\n\t\t} else {\n\t\t\tsavedHtml = editor.getValue()\n\t\t}\n\t})\n\n\tconst editTabContent = () => [\n\t\tm(\".small.mt-s\", lang.get(\"templateHelp_msg\")),\n\t\texistingTemplate\n\t\t\t? m(TextField, {\n\t\t\t\t\tlabel: \"notificationMailLanguage_label\",\n\t\t\t\t\tisReadOnly: true,\n\t\t\t\t\tvalue: selectedLanguage.name,\n\t\t\t  })\n\t\t\t: m(DropDownSelector, {\n\t\t\t\t\tlabel: \"notificationMailLanguage_label\",\n\t\t\t\t\titems: sortedLanguages,\n\t\t\t\t\tselectedValue: selectedLanguageStream(),\n\t\t\t\t\tselectionChangedHandler: selectedLanguageStream,\n\t\t\t\t\tdropdownWidth: 250,\n\t\t\t  }),\n\t\tm(TextField, {\n\t\t\tlabel: \"subject_label\",\n\t\t\tvalue: subject(),\n\t\t\toninput: subject,\n\t\t}),\n\t\tm(editor),\n\t]\n\n\tconst senderName = locator.logins.getUserController().userGroupInfo.name\n\tlet senderDomain = \"https://app.tuta.com\"\n\tloadCustomerInfo().then((customerInfo) => {\n\t\tconst whitelabelDomainInfo = customerInfo && getWhitelabelDomainInfo(customerInfo)\n\t\tsenderDomain = \"https://\" + ((whitelabelDomainInfo && whitelabelDomainInfo.domain) || \"app.tuta.com\")\n\t\tm.redraw()\n\t})\n\t// Even though savedHtml is always sanitized changing it might lead to mXSS\n\tconst sanitizePreview = memoized<string, string>((html) => {\n\t\treturn htmlSanitizer.sanitizeHTML(html).html\n\t})\n\n\tconst previewTabContent = () => [\n\t\tm(TextField, {\n\t\t\tlabel: \"subject_label\",\n\t\t\tvalue: subject().replace(/{sender}/g, senderName),\n\t\t\tisReadOnly: true,\n\t\t}),\n\t\tm(\".small.mt.mb\", lang.get(\"mailBody_label\")),\n\t\tm.trust(sanitizePreview(savedHtml.replace(/{sender}/g, senderName).replace(/{link}/g, senderDomain))),\n\t]\n\n\tDialog.showActionDialog({\n\t\ttype: DialogType.EditLarge,\n\t\ttitle: \"edit_action\",\n\t\tchild: () => {\n\t\t\treturn [\n\t\t\t\tm(SegmentControl, {\n\t\t\t\t\titems: [editSegment, previewSegment],\n\t\t\t\t\tselectedValue: selectedTab(),\n\t\t\t\t\tonValueSelected: selectedTab,\n\t\t\t\t}),\n\t\t\t\tselectedTab() === editSegment.value ? editTabContent() : previewTabContent(),\n\t\t\t]\n\t\t},\n\t\tokAction: (dialog: Dialog) => {\n\t\t\tif (!editor.getValue().includes(\"{link}\")) {\n\t\t\t\treturn Dialog.message(\n\t\t\t\t\tlang.getTranslation(\"templateMustContain_msg\", {\n\t\t\t\t\t\t\"{value}\": \"{link}\",\n\t\t\t\t\t}),\n\t\t\t\t)\n\t\t\t}\n\n\t\t\tlet templates: NotificationMailTemplate[]\n\t\t\tlet isExistingTemplate: boolean\n\t\t\tconst oldLanguage = template.language\n\t\t\tconst oldSubject = template.subject\n\t\t\tconst oldBody = template.body\n\t\t\treturn showProgressDialog(\n\t\t\t\t\"pleaseWait_msg\",\n\t\t\t\tcustomerProperties.getAsync().then((customerProperties) => {\n\t\t\t\t\ttemplates = customerProperties.notificationMailTemplates\n\n\t\t\t\t\tif (customerProperties.notificationMailTemplates.some((t) => t !== existingTemplate && t.language === selectedLanguageStream())) {\n\t\t\t\t\t\tthrow new UserError(\"templateLanguageExists_msg\")\n\t\t\t\t\t}\n\n\t\t\t\t\tisExistingTemplate = templates.includes(template)\n\n\t\t\t\t\tif (!isExistingTemplate) {\n\t\t\t\t\t\tcustomerProperties.notificationMailTemplates.push(template)\n\t\t\t\t\t}\n\n\t\t\t\t\ttemplate.subject = htmlSanitizer.sanitizeHTML(subject(), {\n\t\t\t\t\t\tblockExternalContent: false,\n\t\t\t\t\t}).html\n\t\t\t\t\ttemplate.body = htmlSanitizer.sanitizeHTML(editor.getValue(), {\n\t\t\t\t\t\tblockExternalContent: false,\n\t\t\t\t\t}).html\n\t\t\t\t\ttemplate.language = selectedLanguageStream()\n\t\t\t\t\treturn locator.entityClient.update(customerProperties).then(() => dialog.close())\n\t\t\t\t}),\n\t\t\t)\n\t\t\t\t.catch(\n\t\t\t\t\tofClass(UserError, (err) => {\n\t\t\t\t\t\treturn Dialog.message(lang.makeTranslation(\"error_message\", err.message))\n\t\t\t\t\t}),\n\t\t\t\t)\n\t\t\t\t.catch(\n\t\t\t\t\tofClass(PayloadTooLargeError, () => {\n\t\t\t\t\t\ttemplate.subject = oldSubject\n\t\t\t\t\t\ttemplate.body = oldBody\n\t\t\t\t\t\ttemplate.language = oldLanguage\n\n\t\t\t\t\t\tif (!isExistingTemplate) {\n\t\t\t\t\t\t\ttemplates.pop()\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn Dialog.message(\"notificationMailTemplateTooLarge_msg\")\n\t\t\t\t\t}),\n\t\t\t\t)\n\t\t},\n\t})\n}\n\nconst HTML_PTAG_START = \"<p>\"\nconst HTML_PTAG_END = \"</p>\"\n\nfunction getDefaultNotificationMail(): string {\n\treturn (\n\t\tHTML_PTAG_START +\n\t\tlang.get(\"externalNotificationMailBody1_msg\") +\n\t\tHTML_PTAG_END +\n\t\tHTML_PTAG_START +\n\t\tlang.get(\"externalNotificationMailBody2_msg\", {\n\t\t\t\"{1}\": InfoLink.HomePage,\n\t\t}) +\n\t\tHTML_PTAG_END +\n\t\tHTML_PTAG_START +\n\t\t\"<a href='{link}'>\" +\n\t\tlang.get(\"externalNotificationMailBody3_msg\") +\n\t\t\"</a>\" +\n\t\tHTML_PTAG_END +\n\t\tHTML_PTAG_START +\n\t\tlang.get(\"externalNotificationMailBody4_msg\") +\n\t\t\"<br>\" +\n\t\t\"{link}\" +\n\t\t\"<br>\" +\n\t\tHTML_PTAG_END +\n\t\tHTML_PTAG_START +\n\t\tlang.get(\"externalNotificationMailBody5_msg\") +\n\t\tHTML_PTAG_END +\n\t\tHTML_PTAG_START +\n\t\tlang.get(\"externalNotificationMailBody6_msg\") +\n\t\t\"<br>\" +\n\t\t\"{sender}\" +\n\t\tHTML_PTAG_END\n\t)\n}\n\nfunction loadCustomerInfo(): Promise<CustomerInfo | null> {\n\treturn locator.logins\n\t\t.getUserController()\n\t\t.loadCustomer()\n\t\t.then((customer) => locator.entityClient.load<CustomerInfo>(CustomerInfoTypeRef, customer.customerInfo))\n}\n"]}