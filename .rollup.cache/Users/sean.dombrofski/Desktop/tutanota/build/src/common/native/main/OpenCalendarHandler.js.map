{"version":3,"file":"OpenCalendarHandler.js","sourceRoot":"","sources":["../../../../../src/common/native/main/OpenCalendarHandler.ts"],"names":[],"mappings":"AAAA,OAAO,CAAC,MAAM,SAAS,CAAA;AAGvB;;GAEG;AACH,MAAM,OAAO,mBAAmB;IACF;IAA7B,YAA6B,MAAuB;QAAvB,WAAM,GAAN,MAAM,CAAiB;IAAG,CAAC;IAExD,KAAK,CAAC,YAAY,CAAC,MAAU;QAC5B,IAAI,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE,IAAI,IAAI,CAAC,MAAM,CAAC,iBAAiB,EAAE,CAAC,IAAI,CAAC,GAAG,KAAK,MAAM,EAAE,CAAC;YACzF,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAA;QAChC,CAAC;aAAM,CAAC;YACP,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,mCAAmC,MAAM,kBAAkB,kBAAkB,CAAC,kBAAkB,CAAC,EAAE,CAAC,CAAA;QACjH,CAAC;IACF,CAAC;CACD","sourcesContent":["import m from \"mithril\"\nimport { LoginController } from \"../../api/main/LoginController.js\"\n\n/**\n * Handles requests for opening calendar paths from native.\n */\nexport class OpenCalendarHandler {\n\tconstructor(private readonly logins: LoginController) {}\n\n\tasync openCalendar(userId: Id): Promise<void> {\n\t\tif (this.logins.isUserLoggedIn() && this.logins.getUserController().user._id === userId) {\n\t\t\tm.route.set(\"/calendar/agenda\")\n\t\t} else {\n\t\t\tm.route.set(`/login?noAutoLogin=false&userId=${userId}&requestedPath=${encodeURIComponent(\"/calendar/agenda\")}`)\n\t\t}\n\t}\n}\n"]}