{"version":3,"file":"Editor.js","sourceRoot":"","sources":["../../../../../src/common/gui/editor/Editor.ts"],"names":[],"mappings":"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","sourcesContent":["import m, { Children, Component } from \"mithril\"\nimport SquireEditor from \"squire-rte\"\nimport { defer } from \"@tutao/tutanota-utils\"\nimport { px } from \"../size\"\nimport { Dialog } from \"../base/Dialog\"\nimport { isMailAddress } from \"../../misc/FormatValidator\"\nimport { TabIndex } from \"../../api/common/TutanotaConstants\"\nimport { TextFieldType } from \"../base/TextField.js\"\nimport { HTML_EDITOR_LINE_HEIGHT } from \"./HtmlEditor.js\"\nimport type { ImageHandler } from \"../../mailFunctionality/SharedMailUtils.js\"\n\ntype SanitizerFn = (html: string, isPaste: boolean) => DocumentFragment\nexport type ImagePasteEvent = CustomEvent<{ clipboardData: DataTransfer }>\nexport type TextPasteEvent = CustomEvent<{ fragment: DocumentFragment }>\nexport type Style = \"b\" | \"i\" | \"u\" | \"c\" | \"a\"\nexport type Alignment = \"left\" | \"center\" | \"right\" | \"justify\"\nexport type Listing = \"ol\" | \"ul\"\ntype Styles = {\n\t[key in Style]: boolean\n} & {\n\talignment: Alignment\n\tlisting: Listing | null\n}\n\nexport class Editor implements ImageHandler, Component {\n\tsquire: SquireEditor | null\n\tinitialized = defer<void>()\n\tdomElement: HTMLElement | null = null\n\tprivate showOutline = false\n\tprivate enabled = true\n\tprivate readOnly = false\n\tprivate createsLists = true\n\tprivate userHasPasted = false\n\tprivate styleActions = Object.freeze({\n\t\tb: [() => this.squire.bold(), () => this.squire.removeBold(), () => this.styles.b],\n\t\ti: [() => this.squire.italic(), () => this.squire.removeItalic(), () => this.styles.i],\n\t\tu: [() => this.squire.underline(), () => this.squire.removeUnderline(), () => this.styles.u],\n\t\tc: [() => this.squire.setFontFace(\"monospace\"), () => this.squire.setFontFace(null), () => this.styles.c],\n\t\ta: [() => this.makeLink(), () => this.squire.removeLink(), () => this.styles.a],\n\t} as const)\n\n\tstyles: Styles = {\n\t\tb: false,\n\t\ti: false,\n\t\tu: false,\n\t\tc: false,\n\t\ta: false,\n\t\talignment: \"left\",\n\t\tlisting: null,\n\t}\n\n\t/**\n\t * squire 2.0 removed the isPaste argument from the sanitizeToDomFragment function.\n\t * since sanitizeToDomFragment is called before squire's willPaste event is fired, we\n\t * can't have our sanitization strategy depend on the willPaste event.\n\t *\n\t * we therefore add our own paste handler to the dom element squire uses and set a\n\t * flag once we detect a paste and reset it when squire next fires the \"input\" event.\n\t *\n\t * * user pastes\n\t * * \"paste\" event on dom sets flag\n\t * * sanitizeToDomFragment is called by squire\n\t * * \"input\" event on squire resets flag.\n\t */\n\tprivate pasteListener: (e: ClipboardEvent) => void = (_: ClipboardEvent) => (this.userHasPasted = true)\n\n\tconstructor(private minHeight: number | null, private sanitizer: SanitizerFn, private staticLineAmount: number | null) {\n\t\tthis.onremove = this.onremove.bind(this)\n\t\tthis.onbeforeupdate = this.onbeforeupdate.bind(this)\n\t\tthis.view = this.view.bind(this)\n\t}\n\n\tonbeforeupdate(): boolean {\n\t\t// do not update the dom part managed by squire\n\t\treturn this.squire == null\n\t}\n\n\tonremove() {\n\t\tthis.domElement?.removeEventListener(\"paste\", this.pasteListener)\n\t\tif (this.squire) {\n\t\t\tthis.squire.destroy()\n\n\t\t\tthis.squire = null\n\t\t\tthis.initialized = defer()\n\t\t}\n\t}\n\n\tview(): Children {\n\t\treturn m(\".selectable\", {\n\t\t\trole: \"textbox\",\n\t\t\t\"aria-multiline\": \"true\",\n\t\t\t\"data-testid\": \"text_editor\",\n\t\t\ttabindex: TabIndex.Default,\n\t\t\toncreate: (vnode) => this.initSquire(vnode.dom as HTMLElement),\n\t\t\tclass: `flex-grow ${this.showOutline ? \"\" : \"hide-outline\"}`,\n\t\t\tstyle: this.staticLineAmount\n\t\t\t\t? {\n\t\t\t\t\t\t\"max-height\": px(this.staticLineAmount * HTML_EDITOR_LINE_HEIGHT),\n\t\t\t\t\t\t\"min-height:\": px(this.staticLineAmount * HTML_EDITOR_LINE_HEIGHT),\n\t\t\t\t\t\toverflow: \"scroll\",\n\t\t\t\t  }\n\t\t\t\t: this.minHeight\n\t\t\t\t? {\n\t\t\t\t\t\t\"min-height\": px(this.minHeight),\n\t\t\t\t  }\n\t\t\t\t: {},\n\t\t})\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn !this.squire || this.squire.getHTML() === \"<div><br></div>\"\n\t}\n\n\tgetValue(): string {\n\t\treturn this.isEmpty() ? \"\" : this.squire.getHTML()\n\t}\n\n\taddChangeListener(callback: (...args: Array<any>) => any) {\n\t\tthis.squire.addEventListener(\"input\", callback)\n\t}\n\n\tsetMinHeight(minHeight: number): Editor {\n\t\tthis.minHeight = minHeight\n\t\treturn this\n\t}\n\n\tsetShowOutline(show: boolean) {\n\t\tthis.showOutline = show\n\t}\n\n\t/**\n\t * Sets a static amount 'n' of lines the Editor should always render/allow.\n\t * When using n+1 lines, the editor will instead begin to be scrollable.\n\t * Currently, this overwrites min-height.\n\t */\n\tsetStaticNumberOfLines(numberOfLines: number): Editor {\n\t\tthis.staticLineAmount = numberOfLines\n\t\treturn this\n\t}\n\n\tsetCreatesLists(createsLists: boolean): Editor {\n\t\tthis.createsLists = createsLists\n\t\treturn this\n\t}\n\n\tinitSquire(domElement: HTMLElement) {\n\t\tthis.squire = new SquireEditor(domElement, {\n\t\t\tsanitizeToDOMFragment: (html: string) => this.sanitizer(html, this.userHasPasted),\n\t\t\tblockAttributes: {\n\t\t\t\tdir: \"auto\",\n\t\t\t},\n\t\t})\n\n\t\t// Suppress paste events if pasting while disabled\n\t\tthis.squire.addEventListener(\"willPaste\", (e: TextPasteEvent) => {\n\t\t\tif (!this.isEnabled()) {\n\t\t\t\te.preventDefault()\n\t\t\t}\n\t\t})\n\n\t\tthis.squire.addEventListener(\"input\", (_: CustomEvent<void>) => (this.userHasPasted = false))\n\t\tdomElement.addEventListener(\"paste\", this.pasteListener)\n\n\t\tthis.squire.addEventListener(\"pathChange\", () => {\n\t\t\tthis.getStylesAtPath()\n\t\t\tm.redraw() // allow richtexttoolbar to redraw elements\n\t\t})\n\n\t\tthis.domElement = domElement\n\t\t// the _editor might have been disabled before the dom element was there\n\t\tthis.setEnabled(this.enabled)\n\t\tthis.initialized.resolve()\n\t}\n\n\tsetEnabled(enabled: boolean) {\n\t\tthis.enabled = enabled\n\t\tthis.updateContentEditableAttribute()\n\t}\n\n\tsetReadOnly(readOnly: boolean) {\n\t\tthis.readOnly = readOnly\n\t\tthis.updateContentEditableAttribute()\n\t}\n\n\tisReadOnly(): boolean {\n\t\treturn this.readOnly\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled\n\t}\n\n\tsetHTML(html: string | null) {\n\t\tthis.squire.setHTML(html)\n\t}\n\n\tgetHTML(): string {\n\t\treturn this.squire.getHTML()\n\t}\n\n\tsetStyle(state: boolean, style: Style) {\n\t\t;(state ? this.styleActions[style][0] : this.styleActions[style][1])()\n\t}\n\n\thasStyle: (arg0: Style) => boolean = (style) => (this.squire ? this.styleActions[style][2]() : false)\n\tgetStylesAtPath: () => void = () => {\n\t\tif (!this.squire) {\n\t\t\treturn\n\t\t}\n\n\t\tlet pathSegments: string[] = this.squire.getPath().split(\">\")\n\n\t\t// lists\n\t\tconst ulIndex = pathSegments.lastIndexOf(\"UL\")\n\t\tconst olIndex = pathSegments.lastIndexOf(\"OL\")\n\n\t\tif (ulIndex === -1) {\n\t\t\tif (olIndex > -1) {\n\t\t\t\tthis.styles.listing = \"ol\"\n\t\t\t} else {\n\t\t\t\tthis.styles.listing = null\n\t\t\t}\n\t\t} else if (olIndex === -1) {\n\t\t\tif (ulIndex > -1) {\n\t\t\t\tthis.styles.listing = \"ul\"\n\t\t\t} else {\n\t\t\t\tthis.styles.listing = null\n\t\t\t}\n\t\t} else if (olIndex > ulIndex) {\n\t\t\tthis.styles.listing = \"ol\"\n\t\t} else {\n\t\t\tthis.styles.listing = \"ul\"\n\t\t}\n\n\t\t//links\n\t\tthis.styles.a = pathSegments.includes(\"A\")\n\t\t// alignment\n\t\tlet alignment = pathSegments.find((f) => f.includes(\"align\"))\n\n\t\tif (alignment !== undefined) {\n\t\t\tswitch (alignment.split(\".\")[1].substring(6)) {\n\t\t\t\tcase \"left\":\n\t\t\t\t\tthis.styles.alignment = \"left\"\n\t\t\t\t\tbreak\n\n\t\t\t\tcase \"right\":\n\t\t\t\t\tthis.styles.alignment = \"right\"\n\t\t\t\t\tbreak\n\n\t\t\t\tcase \"center\":\n\t\t\t\t\tthis.styles.alignment = \"center\"\n\t\t\t\t\tbreak\n\n\t\t\t\tdefault:\n\t\t\t\t\tthis.styles.alignment = \"justify\"\n\t\t\t}\n\t\t} else {\n\t\t\tthis.styles.alignment = \"left\"\n\t\t}\n\n\t\t// font\n\t\tthis.styles.c = pathSegments.some((f) => f.includes(\"monospace\"))\n\t\t// decorations\n\t\tthis.styles.b = this.squire.hasFormat(\"b\")\n\t\tthis.styles.u = this.squire.hasFormat(\"u\")\n\t\tthis.styles.i = this.squire.hasFormat(\"i\")\n\t}\n\n\tmakeLink() {\n\t\tDialog.showTextInputDialog({\n\t\t\ttitle: \"makeLink_action\",\n\t\t\tlabel: \"url_label\",\n\t\t\ttextFieldType: TextFieldType.Url,\n\t\t}).then((url) => {\n\t\t\tif (isMailAddress(url, false)) {\n\t\t\t\turl = \"mailto:\" + url\n\t\t\t} else if (!url.startsWith(\"http://\") && !url.startsWith(\"https://\") && !url.startsWith(\"mailto:\") && !url.startsWith(\"{\")) {\n\t\t\t\turl = \"https://\" + url\n\t\t\t}\n\n\t\t\tthis.squire.makeLink(url)\n\t\t})\n\t}\n\n\tinsertImage(srcAttr: string, attrs?: Record<string, string>): HTMLElement {\n\t\treturn this.squire.insertImage(srcAttr, attrs)\n\t}\n\n\t/**\n\t * Inserts the given html content at the current cursor position.\n\t */\n\tinsertHTML(html: string) {\n\t\tthis.squire.insertHTML(html)\n\t}\n\n\tgetDOM(): HTMLElement {\n\t\treturn this.squire.getRoot()\n\t}\n\n\tgetCursorPosition(): ClientRect {\n\t\treturn this.squire.getCursorPosition()\n\t}\n\n\tfocus(): void {\n\t\tthis.squire.focus()\n\n\t\tthis.getStylesAtPath()\n\t}\n\n\tisAttached(): boolean {\n\t\treturn this.squire != null\n\t}\n\n\tgetSelectedText(): string {\n\t\treturn this.squire.getSelectedText()\n\t}\n\n\taddEventListener(type: string, handler: (arg0: Event) => void) {\n\t\tthis.squire.addEventListener(type, handler)\n\t}\n\n\tsetSelection(range: Range) {\n\t\tthis.squire.setSelection(range)\n\t}\n\n\t/**\n\t * Convenience function for this.isEnabled() && !this.isReadOnly()\n\t */\n\tisEditable(): boolean {\n\t\treturn this.isEnabled() && !this.isReadOnly()\n\t}\n\n\tprivate updateContentEditableAttribute() {\n\t\tif (this.domElement) {\n\t\t\tthis.domElement.setAttribute(\"contenteditable\", String(this.isEditable()))\n\t\t}\n\t}\n}\n"]}