{"version":3,"file":"BaseTopLevelView.js","sourceRoot":"","sources":["../../../../src/common/gui/BaseTopLevelView.ts"],"names":[],"mappings":"AAGA;;GAEG;AACH,MAAM,OAAgB,gBAAgB;IAC7B,QAAQ,GAAW,EAAE,CAAA;IAE7B,MAAM,CAAC,EAAE,KAAK,EAAwB;QACrC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,aAAa,CAAA;QACnC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,aAAa,CAAC,CAAA;IAC/C,CAAC;IAED,cAAc,CAAC,EAAE,KAAK,EAAwB;QAC7C,0FAA0F;QAC1F,IAAI,IAAI,CAAC,QAAQ,KAAK,KAAK,CAAC,aAAa,EAAE,CAAC;YAC3C,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,aAAa,CAAA;YACnC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,aAAa,CAAC,CAAA;QAC/C,CAAC;IACF,CAAC;CAGD","sourcesContent":["import { Vnode } from \"mithril\"\nimport { TopLevelAttrs } from \"../../TopLevelView.js\"\n\n/**\n * Base (utility) class for top-level components. Will handle URL updates for you automatically and will only call {@link onNewUrl} when necessary.\n */\nexport abstract class BaseTopLevelView {\n\tprivate lastPath: string = \"\"\n\n\toninit({ attrs }: Vnode<TopLevelAttrs>) {\n\t\tthis.lastPath = attrs.requestedPath\n\t\tthis.onNewUrl(attrs.args, attrs.requestedPath)\n\t}\n\n\tonbeforeupdate({ attrs }: Vnode<TopLevelAttrs>) {\n\t\t// onupdate() is called on every re-render but we don't want to call onNewUrl all the time\n\t\tif (this.lastPath !== attrs.requestedPath) {\n\t\t\tthis.lastPath = attrs.requestedPath\n\t\t\tthis.onNewUrl(attrs.args, attrs.requestedPath)\n\t\t}\n\t}\n\n\tprotected abstract onNewUrl(args: Record<string, any>, requestedPath: string): void\n}\n"]}