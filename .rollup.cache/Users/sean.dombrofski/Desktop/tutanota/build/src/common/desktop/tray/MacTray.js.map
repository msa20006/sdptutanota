{"version":3,"file":"MacTray.js","sourceRoot":"","sources":["../../../../../src/common/desktop/tray/MacTray.ts"],"names":[],"mappings":"AAIA,OAAO,EAAE,GAAG,EAAwB,MAAM,UAAU,CAAA;AAEpD,OAAO,EAAE,MAAM,SAAS,CAAA;AACxB,OAAO,EAAE,eAAe,EAAE,MAAM,cAAc,CAAA;AAG9C,MAAM,OAAO,OAAO;IACnB,qBAAqB;QACpB,2DAA2D;QAC3D,OAAO,MAAM,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAA;IAC7C,CAAC;IAED,gBAAgB,CAAC,CAAO,EAAE,IAAiB;QAC1C,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAA;IACpB,CAAC;IAED,oBAAoB;QACnB,OAAO,EAAE,CAAA;IACV,CAAC;IAED,OAAO,CAAC,EAAiB,EAAE,IAAiB;QAC3C,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE,CAAC;YAC3B,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,CAAA;QAChB,CAAC;QAED,OAAO,IAAI,CAAA;IACZ,CAAC;IAED,QAAQ;QACP,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,CAAA;QACjB,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAA;IACvB,CAAC;IAED,UAAU;QACT,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAA;IACtB,CAAC;IAED,sBAAsB,CAAC,QAAgB;QACtC,OAAO,eAAe,CAAC,SAAS,QAAQ,OAAO,CAAC,CAAA;IACjD,CAAC;CACD","sourcesContent":["/**\n * This file provides the functionality used by DesktopTray on mac\n */\nimport type { NativeImage } from \"electron\"\nimport { app, Menu, MenuItem, Tray } from \"electron\"\nimport type { WindowManager } from \"../DesktopWindowManager\"\nimport os from \"node:os\"\nimport { getResourcePath } from \"../resources\"\nimport type { PlatformTray } from \"./DesktopTray\"\n\nexport class MacTray implements PlatformTray {\n\tneedsWindowListInMenu(): boolean {\n\t\t//MacOs Catalina started showing the window list on its own\n\t\treturn Number(os.release().slice(0, 2)) < 19\n\t}\n\n\tattachMenuToTray(m: Menu, tray: Tray | null): void {\n\t\tapp.dock.setMenu(m)\n\t}\n\n\tgetPlatformMenuItems(): Array<MenuItem> {\n\t\treturn []\n\t}\n\n\tgetTray(wm: WindowManager, icon: NativeImage): Tray | null {\n\t\tif (!app.dock.isVisible()) {\n\t\t\tapp.dock.show()\n\t\t}\n\n\t\treturn null\n\t}\n\n\tsetBadge() {\n\t\tapp.dock.bounce()\n\t\tapp.dock.setBadge(\"‚óè\")\n\t}\n\n\tclearBadge() {\n\t\tapp.dock.setBadge(\"\")\n\t}\n\n\tgetAppIconPathFromName(iconName: string): string {\n\t\treturn getResourcePath(`icons/${iconName}.icns`)\n\t}\n}\n"]}