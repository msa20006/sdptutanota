{"version":3,"file":"ServiceWorkerClient.js","sourceRoot":"","sources":["../../../../src/common/serviceworker/ServiceWorkerClient.ts"],"names":[],"mappings":"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","sourcesContent":["import { isApp, isDesktop } from \"../api/common/Env\"\nimport { lang } from \"../misc/LanguageViewModel\"\nimport { windowFacade } from \"../misc/WindowFacade\"\nimport m, { Component } from \"mithril\"\nimport { handleUncaughtError } from \"../misc/ErrorHandler\"\nimport { isNotSupportedError, isSecurityError, objToError } from \"../api/common/utils/ErrorUtils.js\"\n\nfunction showUpdateOverlay({ showChangelogLink, onUpdate }: { showChangelogLink: boolean; onUpdate: () => void }) {\n\tconst notificationMessage: Component = {\n\t\tview: () => {\n\t\t\treturn m(\"span\", [\n\t\t\t\tlang.get(\"updateFound_label\"),\n\t\t\t\t\" \",\n\t\t\t\tshowChangelogLink\n\t\t\t\t\t? m(\n\t\t\t\t\t\t\t\"a\",\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\thref: `https://github.com/tutao/tutanota/releases/`,\n\t\t\t\t\t\t\t\ttarget: \"_blank\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tlang.get(\"releaseNotes_action\"),\n\t\t\t\t\t  )\n\t\t\t\t\t: null,\n\t\t\t])\n\t\t},\n\t}\n\tPromise.all([import(\"../gui/base/NotificationOverlay\"), import(\"../gui/base/Button.js\")]).then(([notificationOverlay, { ButtonType }]) => {\n\t\tnotificationOverlay.show(\n\t\t\tnotificationMessage,\n\t\t\t{\n\t\t\t\tlabel: \"postpone_action\",\n\t\t\t},\n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\tlabel: \"refresh_action\",\n\t\t\t\t\tclick: onUpdate,\n\t\t\t\t\ttype: ButtonType.Primary,\n\t\t\t\t},\n\t\t\t],\n\t\t)\n\t})\n}\n\nfunction showUpdateMessageIfNeeded(registration: ServiceWorkerRegistration, domainConfig: DomainConfig) {\n\tconst pending = registration.waiting || registration.installing\n\n\tif (pending && registration.active) {\n\t\tshowUpdateOverlay({\n\t\t\tshowChangelogLink: domainConfig.firstPartyDomain,\n\t\t\tonUpdate: () => {\n\t\t\t\t// user has confirmed update so we have to notify the service worker to force update of version.\n\t\t\t\tconsole.log(\"registration.waiting: \", registration.waiting)\n\t\t\t\tregistration.waiting?.postMessage(\"update\")\n\t\t\t},\n\t\t})\n\t}\n}\n\nexport function init(domainConfig: DomainConfig) {\n\tconst serviceWorker = navigator.serviceWorker\n\n\tif (serviceWorker) {\n\t\t// We don't want service worker in certain environments\n\t\tif (env.dist && !isApp() && !isDesktop() && window.nativeAppWebDialog == null) {\n\t\t\tconsole.log(\"Registering ServiceWorker\")\n\t\t\tserviceWorker\n\t\t\t\t.register(window.tutao.appState.prefixWithoutFile + \"/sw.js\")\n\t\t\t\t.then((registration) => {\n\t\t\t\t\tconsole.log(\"ServiceWorker has been installed\")\n\t\t\t\t\tshowUpdateMessageIfNeeded(registration, domainConfig)\n\t\t\t\t\tregistration.addEventListener(\"updatefound\", () => {\n\t\t\t\t\t\tconsole.log(\"updatefound\")\n\t\t\t\t\t\tshowUpdateMessageIfNeeded(registration, domainConfig)\n\t\t\t\t\t})\n\t\t\t\t\tconst active = registration.active // Upon registration, check if we had an sw.\n\n\t\t\t\t\tlet refreshing = false // Prevent infinite reloading with devtools\n\n\t\t\t\t\tserviceWorker.addEventListener(\"controllerchange\", (e: Event) => {\n\t\t\t\t\t\tconsole.log(\"controllerchange\")\n\n\t\t\t\t\t\tif (!active || refreshing) {\n\t\t\t\t\t\t\t// If we didn't have an sw, there's no need to reload, it's \"installation\" and not \"update\"\n\t\t\t\t\t\t\tconsole.log(`Skip refreshing: active: ${String(active)} refreshing: ${String(refreshing)}`)\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\twindowFacade.windowCloseConfirmation = false\n\t\t\t\t\t\trefreshing = true\n\t\t\t\t\t\twindowFacade.reload({})\n\t\t\t\t\t})\n\t\t\t\t\tserviceWorker.addEventListener(\"message\", (event: MessageEvent) => {\n\t\t\t\t\t\tif (event.data == null || typeof event.data !== \"object\") {\n\t\t\t\t\t\t\tconsole.error(\"Got strange message from sw\", event.data)\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (event.data.type === \"error\") {\n\t\t\t\t\t\t\tconst unserializedError = objToError(event.data.value)\n\t\t\t\t\t\t\thandleUncaughtError(unserializedError)\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t\t.catch((e) => {\n\t\t\t\t\tconsole.warn(\"Failed to register the service worker:\", e.message)\n\n\t\t\t\t\t// We get a rejection when trying to register the service worker in firefox with security settings like\n\t\t\t\t\t// \"Delete cookies and site data and site data when Firefox is closed\" enabled\n\t\t\t\t\t// Ignore this case but still allow other cases to show an error dialog\n\t\t\t\t\tif (!(isSecurityError(e) || isNotSupportedError(e))) {\n\t\t\t\t\t\tthrow e\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t}\n\t} else {\n\t\tconsole.log(\"ServiceWorker is not supported\")\n\t}\n}\n"]}