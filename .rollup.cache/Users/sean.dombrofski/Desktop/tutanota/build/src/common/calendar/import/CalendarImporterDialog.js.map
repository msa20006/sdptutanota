{"version":3,"file":"CalendarImporterDialog.js","sourceRoot":"","sources":["../../../../../src/common/calendar/import/CalendarImporterDialog.ts"],"names":[],"mappings":"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","sourcesContent":["import type { CalendarEvent, CalendarGroupRoot } from \"../../api/entities/tutanota/TypeRefs.js\"\nimport { CalendarEventTypeRef, createFile } from \"../../api/entities/tutanota/TypeRefs.js\"\nimport { CALENDAR_MIME_TYPE, showFileChooser, showNativeFilePicker } from \"../../file/FileController.js\"\nimport { showProgressDialog } from \"../../gui/dialogs/ProgressDialog.js\"\nimport { ParserError } from \"../../misc/parsing/ParserCombinator.js\"\nimport { Dialog } from \"../../gui/base/Dialog.js\"\nimport { lang } from \"../../misc/LanguageViewModel.js\"\nimport { serializeCalendar } from \"../../../calendar-app/calendar/export/CalendarExporter.js\"\nimport { parseCalendarFile, ParsedEvent, showEventsImportDialog } from \"./CalendarImporter.js\"\nimport { elementIdPart, isSameId, listIdPart } from \"../../api/common/utils/EntityUtils.js\"\nimport type { UserAlarmInfo } from \"../../api/entities/sys/TypeRefs.js\"\nimport { UserAlarmInfoTypeRef } from \"../../api/entities/sys/TypeRefs.js\"\nimport { convertToDataFile } from \"../../api/common/DataFile.js\"\nimport { locator } from \"../../api/main/CommonLocator.js\"\nimport { ofClass, promiseMap, stringToUtf8Uint8Array } from \"@tutao/tutanota-utils\"\nimport { CalendarType, getTimeZone, isExternalCalendarType } from \"../date/CalendarUtils.js\"\nimport { ImportError } from \"../../api/common/error/ImportError.js\"\nimport { TranslationKeyType } from \"../../misc/TranslationKey.js\"\nimport { isApp } from \"../../api/common/Env.js\"\n\nimport { EventImportRejectionReason, EventWrapper, sortOutParsedEvents } from \"./ImportExportUtils.js\"\n\n/**\n * show an error dialog detailing the reason and amount for events that failed to import\n */\nasync function partialImportConfirmation(skippedEvents: CalendarEvent[], confirmationText: TranslationKeyType, total: number): Promise<boolean> {\n\treturn (\n\t\tskippedEvents.length === 0 ||\n\t\t(await Dialog.confirm(\n\t\t\tlang.makeTranslation(\n\t\t\t\t\"confirm_msg\",\n\t\t\t\tlang.get(confirmationText, {\n\t\t\t\t\t\"{amount}\": skippedEvents.length + \"\",\n\t\t\t\t\t\"{total}\": total + \"\",\n\t\t\t\t}),\n\t\t\t),\n\t\t))\n\t)\n}\n\nexport async function handleCalendarImport(\n\tcalendarGroupRoot: CalendarGroupRoot,\n\timportedParsedEvents: ParsedEvent[] | null = null,\n\tcalendarType: CalendarType = CalendarType.NORMAL,\n): Promise<void> {\n\tconst parsedEvents: ParsedEvent[] = importedParsedEvents ?? (await showProgressDialog(\"loading_msg\", selectAndParseIcalFile()))\n\tif (parsedEvents.length === 0) return\n\tconst zone = getTimeZone()\n\tconst existingEvents = await showProgressDialog(\"loading_msg\", loadAllEvents(calendarGroupRoot))\n\tconst { rejectedEvents, eventsForCreation } = sortOutParsedEvents(parsedEvents, existingEvents, calendarGroupRoot, zone)\n\n\tconst total = parsedEvents.length\n\tif (!(await partialImportConfirmation(rejectedEvents.get(EventImportRejectionReason.Duplicate) ?? [], \"importEventExistingUid_msg\", total))) return\n\tif (!(await partialImportConfirmation(rejectedEvents.get(EventImportRejectionReason.InvalidDate) ?? [], \"importInvalidDatesInEvent_msg\", total))) return\n\tif (!(await partialImportConfirmation(rejectedEvents.get(EventImportRejectionReason.Inversed) ?? [], \"importEndNotAfterStartInEvent_msg\", total))) return\n\tif (!(await partialImportConfirmation(rejectedEvents.get(EventImportRejectionReason.Pre1970) ?? [], \"importPre1970StartInEvent_msg\", total))) return\n\n\tif (eventsForCreation.length > 0) {\n\t\tif (isExternalCalendarType(calendarType)) await importEvents(eventsForCreation)\n\t\telse\n\t\t\tshowEventsImportDialog(\n\t\t\t\teventsForCreation.map((ev) => ev.event),\n\t\t\t\tasync (dialog) => {\n\t\t\t\t\tdialog.close()\n\t\t\t\t\tawait importEvents(eventsForCreation)\n\t\t\t\t},\n\t\t\t\t\"importEvents_label\",\n\t\t\t)\n\t}\n}\n\nasync function selectAndParseIcalFile(): Promise<ParsedEvent[]> {\n\ttry {\n\t\tconst allowedExtensions = [\"ical\", \"ics\", \"ifb\", \"icalendar\"]\n\t\tconst dataFiles = isApp() ? await showNativeFilePicker(allowedExtensions, true) : await showFileChooser(true, allowedExtensions)\n\t\tconst contents = dataFiles.map((file) => parseCalendarFile(file).contents)\n\t\treturn contents.flat()\n\t} catch (e) {\n\t\tif (e instanceof ParserError) {\n\t\t\tconsole.log(\"Failed to parse file\", e)\n\t\t\tDialog.message(\n\t\t\t\tlang.makeTranslation(\n\t\t\t\t\t\"confirm_msg\",\n\t\t\t\t\tlang.get(\"importReadFileError_msg\", {\n\t\t\t\t\t\t\"{filename}\": e.filename ?? \"\",\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t)\n\t\t\treturn []\n\t\t} else {\n\t\t\tthrow e\n\t\t}\n\t}\n}\n\nasync function importEvents(eventsForCreation: Array<EventWrapper>): Promise<void> {\n\tconst operation = locator.operationProgressTracker.startNewOperation()\n\treturn showProgressDialog(\"importCalendar_label\", locator.calendarFacade.saveImportedCalendarEvents(eventsForCreation, operation.id), operation.progress)\n\t\t.catch(\n\t\t\tofClass(ImportError, (e) =>\n\t\t\t\tDialog.message(\n\t\t\t\t\tlang.makeTranslation(\n\t\t\t\t\t\t\"confirm_msg\",\n\t\t\t\t\t\tlang.get(\"importEventsError_msg\", {\n\t\t\t\t\t\t\t\"{amount}\": e.numFailed + \"\",\n\t\t\t\t\t\t\t\"{total}\": eventsForCreation.length.toString(),\n\t\t\t\t\t\t}),\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t),\n\t\t)\n\t\t.finally(() => operation.done())\n}\n\n/** export all events from a calendar, using the alarmInfos the current user has access to and ignoring the other ones that may be set on the event. */\nexport async function exportCalendar(calendarName: string, groupRoot: CalendarGroupRoot, userAlarmInfos: Id, now: Date, zone: string): Promise<void> {\n\treturn await showProgressDialog(\n\t\t\"pleaseWait_msg\",\n\t\t(async () => {\n\t\t\tconst allEvents = await loadAllEvents(groupRoot)\n\t\t\tconst eventsWithAlarms = await promiseMap(allEvents, async (event: CalendarEvent) => {\n\t\t\t\tconst thisUserAlarms = event.alarmInfos.filter((alarmInfoId) => isSameId(userAlarmInfos, listIdPart(alarmInfoId)))\n\t\t\t\tif (thisUserAlarms.length === 0) return { event, alarms: [] }\n\t\t\t\tconst alarms = await locator.entityClient.loadMultiple(UserAlarmInfoTypeRef, userAlarmInfos, thisUserAlarms.map(elementIdPart))\n\t\t\t\treturn { event, alarms }\n\t\t\t})\n\t\t\treturn await exportCalendarEvents(calendarName, eventsWithAlarms, now, zone)\n\t\t})(),\n\t)\n}\n\nfunction exportCalendarEvents(\n\tcalendarName: string,\n\tevents: Array<{\n\t\tevent: CalendarEvent\n\t\talarms: Array<UserAlarmInfo>\n\t}>,\n\tnow: Date,\n\tzone: string,\n) {\n\tconst stringValue = serializeCalendar(env.versionNumber, events, now, zone)\n\tconst data = stringToUtf8Uint8Array(stringValue)\n\tconst tmpFile = createFile({\n\t\tname: calendarName === \"\" ? \"export.ics\" : calendarName + \"-export.ics\",\n\t\tmimeType: CALENDAR_MIME_TYPE,\n\t\tsize: String(data.byteLength),\n\t\tsubFiles: null,\n\t\tparent: null,\n\t\tcid: null,\n\t\tblobs: [],\n\t})\n\treturn locator.fileController.saveDataFile(convertToDataFile(tmpFile, data))\n}\n\nfunction loadAllEvents(groupRoot: CalendarGroupRoot): Promise<Array<CalendarEvent>> {\n\treturn locator.entityClient.loadAll(CalendarEventTypeRef, groupRoot.longEvents).then((longEvents) =>\n\t\tlocator.entityClient.loadAll(CalendarEventTypeRef, groupRoot.shortEvents).then((shortEvents) => {\n\t\t\treturn shortEvents.concat(longEvents)\n\t\t}),\n\t)\n}\n"]}