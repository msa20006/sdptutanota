{"version":3,"file":"UpgradeRequiredError.js","sourceRoot":"","sources":["../../../../../src/common/api/main/UpgradeRequiredError.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAE,MAAM,uBAAuB,CAAA;AAErD,OAAO,EAAE,gBAAgB,EAAE,MAAM,eAAe,CAAA;AAGhD,gBAAgB,EAAE,CAAA;AAElB;;GAEG;AACH,MAAM,OAAO,oBAAqB,SAAQ,aAAa;IAKjC;IAAsC;IAJ3D;;;OAGG;IACH,YAAqB,OAA2B,EAAW,KAA+B;QACzF,KAAK,CAAC,sBAAsB,EAAE,OAAO,CAAC,CAAA;QADlB,YAAO,GAAP,OAAO,CAAoB;QAAW,UAAK,GAAL,KAAK,CAA0B;IAE1F,CAAC;CACD","sourcesContent":["import { TutanotaError } from \"@tutao/tutanota-error\"\nimport type { TranslationKeyType } from \"../../misc/TranslationKey\"\nimport { assertMainOrNode } from \"../common/Env\"\nimport { AvailablePlanType } from \"../common/TutanotaConstants.js\"\n\nassertMainOrNode()\n\n/**\n * Thrown when the user is trying to go over their plan limits.\n */\nexport class UpgradeRequiredError extends TutanotaError {\n\t/**\n\t * @param message TranslationKey of a message for the user.\n\t * @param plans Array of AvailablePlanTypes the user can upgrade to in order to be able to do what they are trying to do.\n\t */\n\tconstructor(readonly message: TranslationKeyType, readonly plans: Array<AvailablePlanType>) {\n\t\tsuper(\"UpgradeRequiredError\", message)\n\t}\n}\n"]}