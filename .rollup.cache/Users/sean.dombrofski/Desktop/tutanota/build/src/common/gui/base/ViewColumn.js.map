{"version":3,"file":"ViewColumn.js","sourceRoot":"","sources":["../../../../../src/common/gui/base/ViewColumn.ts"],"names":[],"mappings":"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","sourcesContent":["import m, { Component } from \"mithril\"\nimport { AriaLandmarks, landmarkAttrs } from \"../AriaUtils\"\nimport { LayerType } from \"../../../RootView\"\nimport { lazy, MaybeLazy, resolveMaybeLazy } from \"@tutao/tutanota-utils\"\nimport { assertMainOrNode } from \"../../api/common/Env\"\nimport { lang, Translation, TranslationKey, MaybeTranslation } from \"../../misc/LanguageViewModel.js\"\n\nassertMainOrNode()\n\nexport const enum ColumnType {\n\tBackground = 1,\n\tForeground = 0,\n}\n\ntype Attrs = {\n\trightBorder?: boolean\n}\n\nexport class ViewColumn implements Component<Attrs> {\n\tprivate readonly component: Component\n\treadonly columnType: ColumnType\n\treadonly minWidth: number\n\treadonly maxWidth: number\n\tprivate readonly headerCenter: MaybeLazy<MaybeTranslation>\n\tprivate readonly ariaLabel: lazy<string>\n\twidth: number\n\toffset: number // offset to the left\n\n\t// not private because used by ViewSlider\n\tdomColumn: HTMLElement | null = null\n\tisInForeground: boolean\n\tisVisible: boolean\n\tariaRole: AriaLandmarks | null = null\n\n\t/**\n\t * Create a view column.\n\t * @param component The component that is rendered as this column\n\t * @param columnType The type of the view column.\n\t * @param minWidth The minimum allowed width for the view column.\n\t * @param headerCenter returned in {@link getTitle}. Used in ARIA landmark unless overriden by {@link ariaLabel}\n\t * @param ariaLabel used in ARIA landmark\n\t * @param maxWidth The maximum allowed width for the view column.\n\t * @param headerCenter The title of the view column.\n\t * @param ariaLabel The label of the view column to be read by screen readers. Defaults to headerCenter if not specified.\n\t */\n\tconstructor(\n\t\tcomponent: Component,\n\t\tcolumnType: ColumnType,\n\t\t{\n\t\t\tminWidth,\n\t\t\tmaxWidth,\n\t\t\t// note: headerCenter is a candidate for removal, ViewColumn is not responsible for the header. This is only useful as an ARIA description which we can already\n\t\t\t// provide separately. We should always require aria description instead.\n\t\t\theaderCenter,\n\t\t\tariaLabel = () => lang.getTranslationText(this.getTitle()),\n\t\t}: {\n\t\t\tminWidth: number\n\t\t\tmaxWidth: number\n\t\t\theaderCenter?: MaybeLazy<MaybeTranslation>\n\t\t\tariaLabel?: lazy<string>\n\t\t},\n\t) {\n\t\tthis.component = component\n\t\tthis.columnType = columnType\n\t\tthis.minWidth = minWidth\n\t\tthis.maxWidth = maxWidth\n\n\t\tthis.headerCenter = headerCenter || \"emptyString_msg\"\n\n\t\tthis.ariaLabel = ariaLabel ?? null\n\t\tthis.width = minWidth\n\t\tthis.offset = 0\n\t\tthis.isInForeground = false\n\t\tthis.isVisible = false\n\t\t// fixup for old-style components\n\t\tthis.view = this.view.bind(this)\n\t}\n\n\tview() {\n\t\tconst zIndex = !this.isVisible && this.columnType === ColumnType.Foreground ? LayerType.ForegroundMenu + 1 : \"\"\n\t\tconst landmark = this.ariaRole ? landmarkAttrs(this.ariaRole, this.ariaLabel ? this.ariaLabel() : lang.getTranslationText(this.getTitle())) : {}\n\t\treturn m(\n\t\t\t\".view-column.fill-absolute\",\n\t\t\t{\n\t\t\t\t...landmark,\n\t\t\t\t\"data-testid\": lang.getTranslationText(this.getTitle()),\n\t\t\t\tinert: !this.isVisible && !this.isInForeground,\n\t\t\t\toncreate: (vnode) => {\n\t\t\t\t\tthis.domColumn = vnode.dom as HTMLElement\n\t\t\t\t\tthis.domColumn.style.transform =\n\t\t\t\t\t\tthis.columnType === ColumnType.Foreground ? \"translateX(\" + this.getOffsetForeground(this.isInForeground) + \"px)\" : \"\"\n\n\t\t\t\t\tif (this.ariaRole === AriaLandmarks.Main) {\n\t\t\t\t\t\tthis.focus()\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tstyle: {\n\t\t\t\t\tzIndex,\n\t\t\t\t\twidth: this.width + \"px\",\n\t\t\t\t\tleft: this.offset + \"px\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tm(this.component),\n\t\t)\n\t}\n\n\tgetTitle(): MaybeTranslation {\n\t\treturn resolveMaybeLazy(this.headerCenter)\n\t}\n\n\tgetOffsetForeground(foregroundState: boolean): number {\n\t\tif (this.isVisible || foregroundState) {\n\t\t\treturn 0\n\t\t} else {\n\t\t\treturn -this.width\n\t\t}\n\t}\n\n\tfocus() {\n\t\tthis.domColumn?.focus()\n\t}\n}\n"]}