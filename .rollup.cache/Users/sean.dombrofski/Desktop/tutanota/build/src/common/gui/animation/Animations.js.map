{"version":3,"file":"Animations.js","sourceRoot":"","sources":["../../../../../src/common/gui/animation/Animations.ts"],"names":[],"mappings":"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","sourcesContent":["import type { EasingFunction } from \"./Easing\"\nimport { ease } from \"./Easing\"\nimport { downcast } from \"@tutao/tutanota-utils\"\nimport { hexToRgb } from \"../base/Color\"\nimport { assertMainOrNodeBoot } from \"../../api/common/Env\"\n\nassertMainOrNodeBoot()\n\nexport interface DomMutation {\n\tupdateDom(target: HTMLElement, percent: number, easing: EasingFunction): void\n\n\twillChange(): string\n}\n\ninterface DomTransform extends DomMutation {\n\tchain(type: TransformEnum, begin: number, end: number): DomTransform\n}\n\nexport const enum AlphaEnum {\n\tBackgroundColor = \"backgroundColor\",\n\tColor = \"color\",\n}\n\nexport const enum TransformEnum {\n\t/** shift the element in left-right direction. begin and end denote the target offset from the \"natural\" position */\n\tTranslateX = \"translateX\",\n\t/** shift the element in top-bottom direction. begin and end denote the target offset from the \"natural\" position */\n\tTranslateY = \"translateY\",\n\tRotateY = \"rotateY\",\n\tRotateZ = \"rotateZ\",\n\t/** scale the element both horizontally and vertically. begin and end denote the desired scale in 0-1 range. */\n\tScale = \"scale\",\n}\n\ntype TransformValues = Record<\n\tTransformEnum,\n\t{\n\t\tbegin: number\n\t\tend: number\n\t}\n>\nexport const DefaultAnimationTime = 200 // ms\n\nconst InitializedOptions = {\n\tstagger: 0,\n\tdelay: 0,\n\teasing: ease.linear,\n\tduration: DefaultAnimationTime,\n}\nexport type AnimationPromise = {\n\tanimations?: Array<Animation>\n} & Promise<unknown>\n\nclass Animations {\n\tactiveAnimations: Animation[]\n\t_animate: (...args: Array<any>) => any\n\n\tconstructor() {\n\t\tthis.activeAnimations = []\n\n\t\tthis._animate = () => {\n\t\t\tlet finished: Animation[] = []\n\t\t\tlet now = window.performance.now()\n\n\t\t\tfor (let animation of this.activeAnimations) {\n\t\t\t\tanimation.animateFrame(now)\n\n\t\t\t\tif (animation.isFinished()) {\n\t\t\t\t\tfinished.push(animation)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (let animation of finished) {\n\t\t\t\tthis.activeAnimations.splice(this.activeAnimations.indexOf(animation), 1)\n\n\t\t\t\tif (animation.resolve) {\n\t\t\t\t\tanimation.resolve()\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.activeAnimations.length > 0) {\n\t\t\t\twindow.requestAnimationFrame(this._animate)\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Adds an animation that should be executed immediately. Returns a promise that resolves after the animation is complete.\n\t */\n\tadd(\n\t\ttargets: HTMLElement | HTMLElement[] | HTMLCollection,\n\t\tmutations: DomMutation | DomMutation[],\n\t\toptions?: {\n\t\t\tstagger?: number\n\t\t\tdelay?: number\n\t\t\teasing?: EasingFunction\n\t\t\tduration?: number\n\t\t},\n\t): AnimationPromise {\n\t\tconst targetsArray: Array<HTMLElement> = targets instanceof HTMLElement ? [targets] : (Array.from(targets) as Array<HTMLElement>)\n\n\t\tlet targetMutations: DomMutation[]\n\n\t\tif (!(mutations instanceof Array)) {\n\t\t\ttargetMutations = [mutations]\n\t\t} else {\n\t\t\ttargetMutations = mutations\n\t\t}\n\n\t\tlet verifiedOptions = Animations.verifiyOptions(options)\n\t\tconst willChange = targetMutations\n\t\t\t.map((mutation) => mutation.willChange())\n\t\t\t.filter((willChange) => willChange.length)\n\t\t\t.join(\" \")\n\t\tfor (const t of targetsArray) {\n\t\t\tt.style.willChange = willChange\n\t\t}\n\t\tconst animations: Animation[] = []\n\t\tconst promise = new Promise((resolve) => {\n\t\t\tlet start = this.activeAnimations.length ? false : true\n\n\t\t\tfor (let i = 0; i < targetsArray.length; i++) {\n\t\t\t\tlet delay = verifiedOptions.delay\n\n\t\t\t\tif (verifiedOptions.stagger) {\n\t\t\t\t\tdelay += verifiedOptions.stagger * i\n\t\t\t\t}\n\n\t\t\t\tconst animation = new Animation(\n\t\t\t\t\ttargetsArray[i],\n\t\t\t\t\ttargetMutations,\n\t\t\t\t\ti === targetsArray.length - 1 ? resolve : null,\n\t\t\t\t\tdelay,\n\t\t\t\t\tverifiedOptions.easing,\n\t\t\t\t\tverifiedOptions.duration,\n\t\t\t\t)\n\t\t\t\tanimations.push(animation)\n\t\t\t\tthis.activeAnimations.push(animation)\n\t\t\t}\n\n\t\t\tif (start) {\n\t\t\t\twindow.requestAnimationFrame(this._animate)\n\t\t\t}\n\t\t})\n\t\tconst animationPromise = downcast<AnimationPromise>(promise)\n\t\tanimationPromise.animations = animations\n\t\treturn animationPromise\n\t}\n\n\tcancel(animation: Animation) {\n\t\tthis.activeAnimations.splice(this.activeAnimations.indexOf(animation), 1)\n\n\t\tif (animation.resolve) {\n\t\t\tanimation.resolve()\n\t\t}\n\t}\n\n\tstatic verifiyOptions(\n\t\toptions:\n\t\t\t| {\n\t\t\t\t\tstagger?: number\n\t\t\t\t\tdelay?: number\n\t\t\t\t\teasing?: EasingFunction\n\t\t\t  }\n\t\t\t| null\n\t\t\t| undefined,\n\t): {\n\t\tstagger: number\n\t\tdelay: number\n\t\teasing: EasingFunction\n\t\tduration: number\n\t} {\n\t\treturn Object.assign({}, InitializedOptions, options)\n\t}\n}\n\nexport class Animation {\n\ttarget: HTMLElement\n\tmutations: DomMutation[]\n\tresolve: ((...args: Array<any>) => any) | null\n\tduration: number\n\tdelay: number\n\tanimationStart: number | null\n\trunTime: number | null\n\teasing: EasingFunction\n\n\tconstructor(\n\t\ttarget: HTMLElement,\n\t\tmutations: DomMutation[],\n\t\tresolve: ((...args: Array<any>) => any) | null,\n\t\tdelay: number,\n\t\teasing: EasingFunction,\n\t\tduration: number = DefaultAnimationTime,\n\t) {\n\t\tthis.target = target\n\t\tthis.mutations = mutations\n\t\tthis.resolve = resolve\n\t\tthis.delay = delay\n\t\tthis.duration = duration\n\t\tthis.animationStart = null\n\t\tthis.runTime = null\n\t\tthis.easing = easing\n\t}\n\n\tanimateFrame(now: number) {\n\t\tif (this.animationStart == null) this.animationStart = now\n\t\tthis.runTime = Math.min(now - this.animationStart - this.delay, this.duration)\n\n\t\tif (this.runTime >= 0) {\n\t\t\tfor (let m of this.mutations) {\n\t\t\t\tm.updateDom(this.target, this.runTime / this.duration, this.easing)\n\t\t\t}\n\t\t}\n\t}\n\n\tisFinished(): boolean {\n\t\treturn this.runTime != null && this.runTime >= this.duration\n\t}\n}\n\nexport function transform(type: TransformEnum, begin: number, end: number): DomTransform {\n\tconst values = {} as TransformValues\n\n\tvalues[type] = {\n\t\tbegin,\n\t\tend,\n\t}\n\n\tlet updateDom = function (target: HTMLElement, percent: number, easing: EasingFunction): void {\n\t\ttarget.style.transform = buildTransformString(values, percent, easing)\n\t}\n\n\tconst willChange = () => \"transform\"\n\n\tlet chain = function (type: TransformEnum, begin: number, end: number) {\n\t\tvalues[type] = {\n\t\t\tbegin,\n\t\t\tend,\n\t\t}\n\t\treturn {\n\t\t\tupdateDom,\n\t\t\tchain,\n\t\t\twillChange,\n\t\t}\n\t}\n\n\treturn {\n\t\tupdateDom,\n\t\tchain,\n\t\twillChange,\n\t}\n}\n\nexport function scroll(begin: number, end: number): DomMutation {\n\treturn {\n\t\tupdateDom: function (target: HTMLElement, percent: number, easing: EasingFunction): void {\n\t\t\ttarget.scrollTop = calculateValue(percent, begin, end, easing)\n\t\t},\n\t\twillChange: () => \"\",\n\t}\n}\n\nconst TransformUnits = {\n\t[TransformEnum.TranslateX]: \"px\",\n\t[TransformEnum.TranslateY]: \"px\",\n\t[TransformEnum.RotateY]: \"deg\",\n\t[TransformEnum.RotateZ]: \"deg\",\n\t[TransformEnum.Scale]: \"\",\n}\n\nfunction buildTransformString(values: TransformValues, percent: number, easing: EasingFunction) {\n\tlet transform: string[] = []\n\tlet types: TransformEnum[] = Object.keys(TransformUnits) as any[] // the order is important (e.g. 'rotateY(45deg) translateX(10px)' leads to other results than 'translateX(10px) rotateY(45deg)'\n\n\tfor (let type of types) {\n\t\tif (values[type]) {\n\t\t\tlet value = calculateValue(percent, values[type].begin, values[type].end, easing)\n\t\t\ttransform.push(type + \"(\" + value + TransformUnits[type] + \")\")\n\t\t}\n\t}\n\n\treturn transform.join(\" \")\n}\n\n/**\n * We use the alpha channel instead of using opacity for fading colors. Opacity changes are slow on mobile devices as they\n * effect the whole tree of the dom element with changing opacity.\n *\n * See http://stackoverflow.com/a/14677373 for a more detailed explanation.\n */\nexport function alpha(type: AlphaEnum, colorHex: string, begin: number, end: number): DomMutation {\n\tlet color = hexToRgb(colorHex)\n\treturn {\n\t\tupdateDom: function (target: HTMLElement, percent: number, easing: EasingFunction): void {\n\t\t\tlet alphaChannel = calculateValue(percent, begin, end, easing)\n\n\t\t\tif (type === AlphaEnum.BackgroundColor) {\n\t\t\t\ttarget.style.backgroundColor = `rgba(${color.r}, ${color.g}, ${color.b}, ${alphaChannel})`\n\t\t\t} else if (type === AlphaEnum.Color) {\n\t\t\t\ttarget.style.color = `rgba(${color.r}, ${color.g}, ${color.b}, ${alphaChannel})`\n\t\t\t}\n\t\t},\n\t\twillChange: () => \"alpha\",\n\t}\n}\n\n/**\n * Only use on small elements. You should use Alpha for fading large backgrounds which is way faster on mobiles.\n */\nexport function opacity(begin: number, end: number, keepValue: boolean): DomMutation {\n\tlet initialOpacity: string | null = null\n\treturn {\n\t\tupdateDom: function (target: HTMLElement, percent: number, easing: EasingFunction): void {\n\t\t\tif (percent === 0 && initialOpacity === null) {\n\t\t\t\tinitialOpacity = target.style.opacity\n\t\t\t}\n\n\t\t\tlet opacity = calculateValue(percent, begin, end, easing)\n\n\t\t\tif (percent === 1 && !keepValue) {\n\t\t\t\t// on some elements the value hast to be set to the initial value because hover using opacity won't work otherwise.\n\t\t\t\ttarget.style.opacity = initialOpacity ? initialOpacity : \"\"\n\t\t\t} else {\n\t\t\t\ttarget.style.opacity = opacity + \"\"\n\t\t\t}\n\t\t},\n\t\twillChange: () => \"opacity\",\n\t}\n}\n\nexport function height(begin: number, end: number): DomMutation {\n\treturn {\n\t\tupdateDom: function (target: HTMLElement, percent: number, easing: EasingFunction): void {\n\t\t\ttarget.style.height = calculateValue(percent, begin, end, easing) + \"px\"\n\t\t},\n\t\twillChange: () => \"height\",\n\t}\n}\n\nexport function width(begin: number, end: number): DomMutation {\n\treturn {\n\t\tupdateDom: function (target: HTMLElement, percent: number, easing: EasingFunction): void {\n\t\t\ttarget.style.width = calculateValue(percent, begin, end, easing) + \"px\"\n\t\t},\n\t\twillChange: () => \"width\",\n\t}\n}\n\nexport function fontSize(begin: number, end: number): DomMutation {\n\treturn {\n\t\tupdateDom: function (target: HTMLElement, percent: number, easing: EasingFunction): void {\n\t\t\ttarget.style.fontSize = calculateValue(percent, begin, end, easing) + \"px\"\n\t\t},\n\t\twillChange: () => \"\",\n\t}\n}\n\nfunction calculateValue(percent: number, begin: number, end: number, easing: (...args: Array<any>) => any): number {\n\treturn (end - begin) * easing(percent) + begin\n}\n\nexport const animations: Animations = new Animations()\n\nexport function get(element: HTMLElement | null): HTMLElement {\n\tif (!element) throw new Error(\"tried to update a non existing element\")\n\treturn element\n}\n"]}