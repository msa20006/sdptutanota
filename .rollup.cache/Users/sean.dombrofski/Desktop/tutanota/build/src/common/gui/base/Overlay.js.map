{"version":3,"file":"Overlay.js","sourceRoot":"","sources":["../../../../../src/common/gui/base/Overlay.ts"],"names":[],"mappings":"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","sourcesContent":["import m, { Children, Component, VnodeDOM } from \"mithril\"\nimport { LayerType } from \"../../../RootView\"\nimport { lazy, makeSingleUse } from \"@tutao/tutanota-utils\"\nimport { assertMainOrNodeBoot } from \"../../api/common/Env\"\nimport { px, size } from \"../size.js\"\nimport { styles } from \"../styles.js\"\nimport { getSafeAreaInsetBottom } from \"../HtmlUtils.js\"\n\nassertMainOrNodeBoot()\nexport type PositionRect = {\n\ttop?: string | null\n\tleft?: string | null\n\tright?: string | null\n\twidth?: string | null\n\tbottom?: string | null\n\theight?: string | null\n\tzIndex?: LayerType\n}\ntype OverlayAttrs = {\n\tcomponent: Component\n\tposition: lazy<PositionRect>\n\tcreateAnimation?: string\n\tcloseAnimation?: string\n\tshadowClass: string\n}\n\nconst overlays: Map<number, OverlayAttrs> = new Map()\nlet key = 0\n\nexport function displayOverlay(\n\tposition: lazy<PositionRect>,\n\tcomponent: Component,\n\tcreateAnimation?: string,\n\tcloseAnimation?: string,\n\tshadowClass: string = \"dropdown-shadow\",\n): () => void {\n\t// Use the inverse of the show animation as the close animation if it is not given\n\tif (createAnimation != null && closeAnimation == null) closeAnimation = `${createAnimation} animation-reverse`\n\n\tconst overlayKey = key++\n\tconst pair = {\n\t\tposition,\n\t\tcomponent,\n\t\tcreateAnimation,\n\t\tcloseAnimation,\n\t\tshadowClass,\n\t} as OverlayAttrs\n\t// Add the new overlay into the overlay container\n\toverlays.set(overlayKey, pair)\n\n\t// Make single so fast taps doesn't try to remove\n\t// the same overlay twice\n\treturn makeSingleUse(() => {\n\t\t// Remove the overlay & error if unsuccessful\n\t\tif (!overlays.delete(overlayKey)) {\n\t\t\tconsole.warn(`Missing overlay with key:${overlayKey}!`)\n\t\t}\n\t}) as () => void\n}\n\nexport const overlay: Component = {\n\tview: (): Children =>\n\t\tm(\n\t\t\t// we want the overlays to position relative to the overlay parent\n\t\t\t// the overlay parent also should fill the root\n\t\t\t\"#overlay.fill-absolute.noprint\",\n\t\t\t{\n\t\t\t\tstyle: {\n\t\t\t\t\tdisplay: overlays.size > 0 ? \"\" : \"none\",\n\t\t\t\t\t\"margin-top\": \"env(safe-area-inset-top)\", // insets for iPhone X\n\t\t\t\t\t// keep the bottom nav bar clear & inset for iOS\n\t\t\t\t\t\"margin-bottom\": styles.isUsingBottomNavigation() ? px(size.bottom_nav_bar + getSafeAreaInsetBottom()) : \"unset\",\n\t\t\t\t\t// we would need to change this if we wanted something to appear from the side\n\t\t\t\t\t\"margin-left\": \"env(safe-area-inset-left)\",\n\t\t\t\t\t\"margin-right\": \"env(safe-area-inset-right)\",\n\t\t\t\t},\n\t\t\t\t\"aria-hidden\": overlays.size === 0,\n\t\t\t},\n\t\t\tArray.from(overlays.entries()).map((overlay) => {\n\t\t\t\tconst [key, attrs] = overlay\n\t\t\t\tconst position = attrs.position()\n\n\t\t\t\tconst baseClasses = \"abs elevated-bg \" + attrs.shadowClass\n\t\t\t\tconst classes = attrs.createAnimation == null ? baseClasses : baseClasses + \" \" + attrs.createAnimation\n\n\t\t\t\treturn m(\n\t\t\t\t\t\"\",\n\t\t\t\t\t{\n\t\t\t\t\t\tkey,\n\t\t\t\t\t\tclass: classes,\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\twidth: position.width,\n\t\t\t\t\t\t\ttop: position.top,\n\t\t\t\t\t\t\tbottom: position.bottom,\n\t\t\t\t\t\t\tright: position.right,\n\t\t\t\t\t\t\tleft: position.left,\n\t\t\t\t\t\t\theight: position.height,\n\t\t\t\t\t\t\t\"z-index\": position.zIndex != null ? position.zIndex : LayerType.Overlay,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonbeforeremove: (vnode: VnodeDOM) => {\n\t\t\t\t\t\t\tif (attrs.closeAnimation != null) {\n\t\t\t\t\t\t\t\tconst dom = vnode.dom as HTMLElement\n\n\t\t\t\t\t\t\t\t// Force the environment to restart the animations via a reflow\n\t\t\t\t\t\t\t\tdom.className = baseClasses\n\t\t\t\t\t\t\t\tvoid dom.offsetWidth\n\n\t\t\t\t\t\t\t\t// Play the closing animation\n\t\t\t\t\t\t\t\tdom.className = baseClasses + \" \" + attrs.closeAnimation\n\n\t\t\t\t\t\t\t\t// Wait for the close animation to complete\n\t\t\t\t\t\t\t\treturn new Promise(function (resolve) {\n\t\t\t\t\t\t\t\t\tdom.addEventListener(\"animationend\", resolve)\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tm(attrs.component),\n\t\t\t\t)\n\t\t\t}),\n\t\t),\n}\n"]}