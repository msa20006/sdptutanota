{"version":3,"file":"ExportFacadeReceiveDispatcher.js","sourceRoot":"","sources":["../../../../../../src/common/native/common/generatedipc/ExportFacadeReceiveDispatcher.ts"],"names":[],"mappings":"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","sourcesContent":["/* generated file, don't edit. */\n\nimport { MailBundle } from \"./MailBundle.js\"\nimport { DataFile } from \"./DataFile.js\"\nimport { ExportFacade } from \"./ExportFacade.js\"\n\nexport class ExportFacadeReceiveDispatcher {\n\tconstructor(private readonly facade: ExportFacade) {}\n\tasync dispatch(method: string, arg: Array<any>): Promise<any> {\n\t\tswitch (method) {\n\t\t\tcase \"mailToMsg\": {\n\t\t\t\tconst bundle: MailBundle = arg[0]\n\t\t\t\tconst fileName: string = arg[1]\n\t\t\t\treturn this.facade.mailToMsg(bundle, fileName)\n\t\t\t}\n\t\t\tcase \"saveToExportDir\": {\n\t\t\t\tconst file: DataFile = arg[0]\n\t\t\t\treturn this.facade.saveToExportDir(file)\n\t\t\t}\n\t\t\tcase \"startNativeDrag\": {\n\t\t\t\tconst fileNames: ReadonlyArray<string> = arg[0]\n\t\t\t\treturn this.facade.startNativeDrag(fileNames)\n\t\t\t}\n\t\t\tcase \"checkFileExistsInExportDir\": {\n\t\t\t\tconst fileName: string = arg[0]\n\t\t\t\treturn this.facade.checkFileExistsInExportDir(fileName)\n\t\t\t}\n\t\t\tcase \"getMailboxExportState\": {\n\t\t\t\tconst userId: string = arg[0]\n\t\t\t\treturn this.facade.getMailboxExportState(userId)\n\t\t\t}\n\t\t\tcase \"endMailboxExport\": {\n\t\t\t\tconst userId: string = arg[0]\n\t\t\t\treturn this.facade.endMailboxExport(userId)\n\t\t\t}\n\t\t\tcase \"startMailboxExport\": {\n\t\t\t\tconst userId: string = arg[0]\n\t\t\t\tconst mailboxId: string = arg[1]\n\t\t\t\tconst mailBagId: string = arg[2]\n\t\t\t\tconst mailId: string = arg[3]\n\t\t\t\treturn this.facade.startMailboxExport(userId, mailboxId, mailBagId, mailId)\n\t\t\t}\n\t\t\tcase \"saveMailboxExport\": {\n\t\t\t\tconst bundle: MailBundle = arg[0]\n\t\t\t\tconst userId: string = arg[1]\n\t\t\t\tconst mailBagId: string = arg[2]\n\t\t\t\tconst mailId: string = arg[3]\n\t\t\t\treturn this.facade.saveMailboxExport(bundle, userId, mailBagId, mailId)\n\t\t\t}\n\t\t\tcase \"clearExportState\": {\n\t\t\t\tconst userId: string = arg[0]\n\t\t\t\treturn this.facade.clearExportState(userId)\n\t\t\t}\n\t\t\tcase \"openExportDirectory\": {\n\t\t\t\tconst userId: string = arg[0]\n\t\t\t\treturn this.facade.openExportDirectory(userId)\n\t\t\t}\n\t\t}\n\t}\n}\n"]}