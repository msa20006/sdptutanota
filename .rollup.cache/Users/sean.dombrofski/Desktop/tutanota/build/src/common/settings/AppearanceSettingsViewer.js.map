{"version":3,"file":"AppearanceSettingsViewer.js","sourceRoot":"","sources":["../../../../src/common/settings/AppearanceSettingsViewer.ts"],"names":[],"mappings":"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","sourcesContent":["import m, { Children } from \"mithril\"\nimport { getLanguage, lang, LanguageCode, languageCodeToTag, languageNative } from \"../misc/LanguageViewModel.js\"\nimport { styles } from \"../gui/styles.js\"\nimport type { DropDownSelectorAttrs } from \"../gui/base/DropDownSelector.js\"\nimport { DropDownSelector, SelectorItemList } from \"../gui/base/DropDownSelector.js\"\nimport { deviceConfig } from \"../misc/DeviceConfig.js\"\nimport { TimeFormat, WeekStart } from \"../api/common/TutanotaConstants.js\"\nimport { downcast, incrementDate, noOp, promiseMap } from \"@tutao/tutanota-utils\"\nimport { UserSettingsGroupRootTypeRef } from \"../../common/api/entities/tutanota/TypeRefs.js\"\nimport { getHourCycle } from \"../../common/misc/Formatter\"\nimport { ThemeId, themeOptions, ThemePreference } from \"../../common/gui/theme\"\nimport type { UpdatableSettingsViewer } from \"./Interfaces.js\"\nimport { isDesktop } from \"../../common/api/common/Env\"\nimport { locator } from \"../../common/api/main/CommonLocator\"\nimport { EntityUpdateData, isUpdateForTypeRef } from \"../../common/api/common/utils/EntityUpdateUtils.js\"\nimport { client } from \"../misc/ClientDetector.js\"\n\nexport class AppearanceSettingsViewer implements UpdatableSettingsViewer {\n\tprivate _customThemes: Array<ThemeId> | null = null\n\n\toncreate() {\n\t\tlocator.themeController.getCustomThemes().then((themes) => {\n\t\t\tthis._customThemes = themes\n\t\t\tm.redraw()\n\t\t})\n\t}\n\n\tview(): Children {\n\t\tconst actualLanguageItems: SelectorItemList<LanguageCode | null> = languageNative\n\t\t\t.map((language) => {\n\t\t\t\treturn {\n\t\t\t\t\tname: language.textName,\n\t\t\t\t\tvalue: language.code,\n\t\t\t\t}\n\t\t\t})\n\t\t\t.sort((l1, l2) => l1.name.localeCompare(l2.name))\n\t\tconst languageItems: SelectorItemList<LanguageCode | null> = actualLanguageItems.concat({\n\t\t\tname: lang.get(\"automatic_label\"),\n\t\t\tvalue: null,\n\t\t})\n\n\t\tconst languageDropDownAttrs: DropDownSelectorAttrs<LanguageCode | null> = {\n\t\t\tlabel: \"language_label\",\n\t\t\titems: languageItems,\n\t\t\t// DropdownSelectorN uses `===` to compare items so if the language is not set then `undefined` will not match `null`\n\t\t\tselectedValue: deviceConfig.getLanguage() || null,\n\t\t\tselectionChangedHandler: async (value) => {\n\t\t\t\tdeviceConfig.setLanguage(value)\n\t\t\t\tconst newLanguage = value\n\t\t\t\t\t? {\n\t\t\t\t\t\t\tcode: value,\n\t\t\t\t\t\t\tlanguageTag: languageCodeToTag(value),\n\t\t\t\t\t  }\n\t\t\t\t\t: getLanguage()\n\t\t\t\tawait lang.setLanguage(newLanguage)\n\n\t\t\t\tif (isDesktop()) {\n\t\t\t\t\tawait locator.desktopSettingsFacade.changeLanguage(newLanguage.code, newLanguage.languageTag)\n\t\t\t\t}\n\n\t\t\t\tstyles.updateStyle(\"main\")\n\t\t\t\tm.redraw()\n\t\t\t},\n\t\t}\n\t\tconst userSettingsGroupRoot = locator.logins.getUserController().userSettingsGroupRoot\n\t\tconst hourFormatDropDownAttrs: DropDownSelectorAttrs<TimeFormat> = {\n\t\t\tlabel: \"timeFormat_label\",\n\t\t\titems: [\n\t\t\t\t{\n\t\t\t\t\tname: lang.get(\"timeFormatTwentyFourHour_label\"),\n\t\t\t\t\tvalue: TimeFormat.TWENTY_FOUR_HOURS,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: lang.get(\"timeFormatTwelveHour_label\"),\n\t\t\t\t\tvalue: TimeFormat.TWELVE_HOURS,\n\t\t\t\t},\n\t\t\t],\n\t\t\tselectedValue: downcast(userSettingsGroupRoot.timeFormat),\n\t\t\tselectionChangedHandler: (value) => {\n\t\t\t\tuserSettingsGroupRoot.timeFormat = value\n\t\t\t\tlocator.entityClient.update(userSettingsGroupRoot)\n\t\t\t},\n\t\t}\n\t\tconst weekdayFormat = new Intl.DateTimeFormat(lang.languageTag, {\n\t\t\tweekday: \"long\",\n\t\t})\n\t\tconst calcDate = new Date()\n\t\tconst sundayName = weekdayFormat.format(incrementDate(calcDate, -calcDate.getDay())) // Sunday as reference\n\n\t\tconst mondayName = weekdayFormat.format(incrementDate(calcDate, 1)) // Monday is one day later\n\n\t\tconst saturdayName = weekdayFormat.format(incrementDate(calcDate, 5)) // Saturday is five days later\n\n\t\tconst weekStartDropDownAttrs: DropDownSelectorAttrs<WeekStart> = {\n\t\t\tlabel: \"weekStart_label\",\n\t\t\titems: [\n\t\t\t\t{\n\t\t\t\t\tname: mondayName,\n\t\t\t\t\tvalue: WeekStart.MONDAY,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: saturdayName,\n\t\t\t\t\tvalue: WeekStart.SATURDAY,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: sundayName,\n\t\t\t\t\tvalue: WeekStart.SUNDAY,\n\t\t\t\t},\n\t\t\t],\n\t\t\tselectedValue: downcast(userSettingsGroupRoot.startOfTheWeek),\n\t\t\tselectionChangedHandler: (value) => {\n\t\t\t\tuserSettingsGroupRoot.startOfTheWeek = value\n\t\t\t\tlocator.entityClient.update(userSettingsGroupRoot)\n\t\t\t},\n\t\t}\n\t\treturn m(\".fill-absolute.scroll.plr-l.pb-xl\", [\n\t\t\tm(\".h4.mt-l\", lang.get(\"settingsForDevice_label\")),\n\t\t\tm(DropDownSelector, languageDropDownAttrs),\n\t\t\tthis._renderThemeSelector(),\n\t\t\tm(\".h4.mt-l\", lang.get(\"userSettings_label\")),\n\t\t\tm(DropDownSelector, hourFormatDropDownAttrs),\n\t\t\tm(DropDownSelector, weekStartDropDownAttrs),\n\t\t])\n\t}\n\n\t_renderThemeSelector(): Children {\n\t\tif (!locator.themeController.shouldAllowChangingTheme() || this._customThemes == null) {\n\t\t\treturn null\n\t\t}\n\n\t\tconst customOptions = this._customThemes.map((themeId) => {\n\t\t\treturn {\n\t\t\t\tname: themeId,\n\t\t\t\tvalue: themeId,\n\t\t\t}\n\t\t})\n\n\t\tconst themeDropDownAttrs: DropDownSelectorAttrs<ThemePreference> = {\n\t\t\tlabel: \"switchColorTheme_action\",\n\t\t\titems: [...themeOptions(client.isCalendarApp()).map(({ name, value }) => ({ name: lang.get(name), value: value })), ...customOptions],\n\t\t\tselectedValue: locator.themeController.themePreference,\n\t\t\tselectionChangedHandler: (value) => locator.themeController.setThemePreference(value),\n\t\t\tdropdownWidth: 300,\n\t\t}\n\t\treturn m(DropDownSelector, themeDropDownAttrs)\n\t}\n\n\tentityEventsReceived(updates: ReadonlyArray<EntityUpdateData>): Promise<void> {\n\t\treturn promiseMap(updates, (update) => {\n\t\t\tif (isUpdateForTypeRef(UserSettingsGroupRootTypeRef, update)) {\n\t\t\t\treturn locator.entityClient.load(UserSettingsGroupRootTypeRef, update.instanceId).then((settings) => {\n\t\t\t\t\tlang.updateFormats({\n\t\t\t\t\t\thourCycle: getHourCycle(settings),\n\t\t\t\t\t})\n\t\t\t\t\tm.redraw()\n\t\t\t\t})\n\t\t\t}\n\t\t}).then(noOp)\n\t}\n}\n"]}