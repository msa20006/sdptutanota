{"version":3,"file":"UpgradeConfirmSubscriptionPage.js","sourceRoot":"","sources":["../../../../src/common/subscription/UpgradeConfirmSubscriptionPage.ts"],"names":[],"mappings":"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","sourcesContent":["import m, { Children, Vnode, VnodeDOM } from \"mithril\"\nimport { Dialog } from \"../gui/base/Dialog\"\nimport { lang } from \"../misc/LanguageViewModel\"\nimport { formatPriceWithInfo, getPaymentMethodName, PaymentInterval } from \"./PriceUtils\"\nimport { createSwitchAccountTypePostIn } from \"../api/entities/sys/TypeRefs.js\"\nimport { AccountType, Const, PaymentMethodType, PaymentMethodTypeToName } from \"../api/common/TutanotaConstants\"\nimport { showProgressDialog } from \"../gui/dialogs/ProgressDialog\"\nimport type { UpgradeSubscriptionData } from \"./UpgradeSubscriptionWizard\"\nimport { BadGatewayError, PreconditionFailedError } from \"../api/common/error/RestError\"\nimport { appStorePlanName, getPreconditionFailedPaymentMsg, UpgradeType } from \"./SubscriptionUtils\"\nimport type { WizardPageAttrs, WizardPageN } from \"../gui/base/WizardDialog.js\"\nimport { emitWizardEvent, WizardEventType } from \"../gui/base/WizardDialog.js\"\nimport { TextField } from \"../gui/base/TextField.js\"\nimport { base64ExtToBase64, base64ToUint8Array, neverNull, ofClass } from \"@tutao/tutanota-utils\"\nimport { locator } from \"../api/main/CommonLocator\"\nimport { SwitchAccountTypeService } from \"../api/entities/sys/Services\"\nimport { UsageTest } from \"@tutao/tutanota-usagetests\"\nimport { getDisplayNameOfPlanType, SelectedSubscriptionOptions } from \"./FeatureListProvider\"\nimport { LoginButton } from \"../gui/base/buttons/LoginButton.js\"\nimport { MobilePaymentResultType } from \"../native/common/generatedipc/MobilePaymentResultType\"\nimport { updatePaymentData } from \"./InvoiceAndPaymentDataPage\"\nimport { SessionType } from \"../api/common/SessionType\"\nimport { MobilePaymentError } from \"../api/common/error/MobilePaymentError.js\"\nimport { getRatingAllowed, RatingCheckResult } from \"../ratings/InAppRatingUtils.js\"\nimport { showAppRatingDialog } from \"../ratings/InAppRatingDialog.js\"\nimport { deviceConfig } from \"../misc/DeviceConfig.js\"\nimport { isIOSApp } from \"../api/common/Env.js\"\nimport { client } from \"../misc/ClientDetector.js\"\nimport { SubscriptionApp } from \"./SubscriptionViewer.js\"\n\nexport class UpgradeConfirmSubscriptionPage implements WizardPageN<UpgradeSubscriptionData> {\n\tprivate dom!: HTMLElement\n\tprivate __signupPaidTest?: UsageTest\n\tprivate __signupFreeTest?: UsageTest\n\n\toncreate(vnode: VnodeDOM<WizardPageAttrs<UpgradeSubscriptionData>>) {\n\t\tthis.__signupPaidTest = locator.usageTestController.getTest(\"signup.paid\")\n\t\tthis.__signupFreeTest = locator.usageTestController.getTest(\"signup.free\")\n\n\t\tthis.dom = vnode.dom as HTMLElement\n\t}\n\n\tview({ attrs }: Vnode<WizardPageAttrs<UpgradeSubscriptionData>>): Children {\n\t\treturn this.renderConfirmSubscription(attrs)\n\t}\n\n\tprivate async upgrade(data: UpgradeSubscriptionData) {\n\t\t// We return early because we do the upgrade after the user has submitted payment which is on the confirmation page\n\t\tif (data.paymentData.paymentMethod === PaymentMethodType.AppStore) {\n\t\t\tconst success = await this.handleAppStorePayment(data)\n\t\t\tif (!success) {\n\t\t\t\treturn\n\t\t\t}\n\t\t}\n\n\t\tconst serviceData = createSwitchAccountTypePostIn({\n\t\t\taccountType: AccountType.PAID,\n\t\t\tcustomer: null,\n\t\t\tplan: data.type,\n\t\t\tdate: Const.CURRENT_DATE,\n\t\t\treferralCode: data.referralCode,\n\t\t\tspecialPriceUserSingle: null,\n\t\t\tsurveyData: null,\n\t\t\tapp: client.isCalendarApp() ? SubscriptionApp.Calendar : SubscriptionApp.Mail,\n\t\t})\n\t\tshowProgressDialog(\n\t\t\t\"pleaseWait_msg\",\n\t\t\tlocator.serviceExecutor.post(SwitchAccountTypeService, serviceData).then(() => {\n\t\t\t\treturn locator.customerFacade.switchFreeToPremiumGroup()\n\t\t\t}),\n\t\t)\n\t\t\t.then(() => {\n\t\t\t\t// Order confirmation (click on Buy), send selected payment method as an enum\n\t\t\t\tconst orderConfirmationStage = this.__signupPaidTest?.getStage(5)\n\t\t\t\torderConfirmationStage?.setMetric({\n\t\t\t\t\tname: \"paymentMethod\",\n\t\t\t\t\tvalue: PaymentMethodTypeToName[data.paymentData.paymentMethod],\n\t\t\t\t})\n\t\t\t\torderConfirmationStage?.setMetric({\n\t\t\t\t\tname: \"switchedFromFree\",\n\t\t\t\t\tvalue: (this.__signupFreeTest?.isStarted() ?? false).toString(),\n\t\t\t\t})\n\t\t\t\torderConfirmationStage?.complete()\n\n\t\t\t\treturn this.close(data, this.dom)\n\t\t\t})\n\t\t\t.then(async () => {\n\t\t\t\tconst ratingCheckResult = await getRatingAllowed(new Date(), deviceConfig, isIOSApp())\n\t\t\t\tif (ratingCheckResult === RatingCheckResult.RATING_ALLOWED) {\n\t\t\t\t\tsetTimeout(async () => {\n\t\t\t\t\t\tvoid showAppRatingDialog()\n\t\t\t\t\t}, 2000)\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(\n\t\t\t\tofClass(PreconditionFailedError, (e) => {\n\t\t\t\t\tDialog.message(\n\t\t\t\t\t\tlang.makeTranslation(\n\t\t\t\t\t\t\t\"precondition_failed\",\n\t\t\t\t\t\t\tlang.get(getPreconditionFailedPaymentMsg(e.data)) +\n\t\t\t\t\t\t\t\t(data.upgradeType === UpgradeType.Signup ? \" \" + lang.get(\"accountWasStillCreated_msg\") : \"\"),\n\t\t\t\t\t\t),\n\t\t\t\t\t)\n\t\t\t\t}),\n\t\t\t)\n\t\t\t.catch(\n\t\t\t\tofClass(BadGatewayError, (e) => {\n\t\t\t\t\tDialog.message(\n\t\t\t\t\t\tlang.makeTranslation(\n\t\t\t\t\t\t\t\"payment_failed\",\n\t\t\t\t\t\t\tlang.get(\"paymentProviderNotAvailableError_msg\") +\n\t\t\t\t\t\t\t\t(data.upgradeType === UpgradeType.Signup ? \" \" + lang.get(\"accountWasStillCreated_msg\") : \"\"),\n\t\t\t\t\t\t),\n\t\t\t\t\t)\n\t\t\t\t}),\n\t\t\t)\n\t}\n\n\t/** @return whether subscribed successfully */\n\tprivate async handleAppStorePayment(data: UpgradeSubscriptionData): Promise<boolean> {\n\t\tif (!locator.logins.isUserLoggedIn()) {\n\t\t\tawait locator.logins.createSession(neverNull(data.newAccountData).mailAddress, neverNull(data.newAccountData).password, SessionType.Temporary)\n\t\t}\n\n\t\tconst customerId = locator.logins.getUserController().user.customer!\n\t\tconst customerIdBytes = base64ToUint8Array(base64ExtToBase64(customerId))\n\n\t\ttry {\n\t\t\tconst result = await showProgressDialog(\n\t\t\t\t\"pleaseWait_msg\",\n\t\t\t\tlocator.mobilePaymentsFacade.requestSubscriptionToPlan(appStorePlanName(data.type), data.options.paymentInterval(), customerIdBytes),\n\t\t\t)\n\t\t\tif (result.result !== MobilePaymentResultType.Success) {\n\t\t\t\treturn false\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tif (e instanceof MobilePaymentError) {\n\t\t\t\tconsole.error(\"AppStore subscription failed\", e)\n\t\t\t\tDialog.message(\"appStoreSubscriptionError_msg\", e.message)\n\t\t\t\treturn false\n\t\t\t} else {\n\t\t\t\tthrow e\n\t\t\t}\n\t\t}\n\n\t\treturn await updatePaymentData(\n\t\t\tdata.options.paymentInterval(),\n\t\t\tdata.invoiceData,\n\t\t\tdata.paymentData,\n\t\t\tnull,\n\t\t\tdata.newAccountData != null,\n\t\t\tnull,\n\t\t\tdata.accountingInfo!,\n\t\t)\n\t}\n\n\tprivate renderConfirmSubscription(attrs: WizardPageAttrs<UpgradeSubscriptionData>) {\n\t\tconst isYearly = attrs.data.options.paymentInterval() === PaymentInterval.Yearly\n\t\tconst subscription = isYearly ? lang.get(\"pricing.yearly_label\") : lang.get(\"pricing.monthly_label\")\n\n\t\treturn [\n\t\t\tm(\".center.h4.pt\", lang.get(\"upgradeConfirm_msg\")),\n\t\t\tm(\".pt.pb.plr-l\", [\n\t\t\t\tm(TextField, {\n\t\t\t\t\tlabel: \"subscription_label\",\n\t\t\t\t\tvalue: getDisplayNameOfPlanType(attrs.data.type),\n\t\t\t\t\tisReadOnly: true,\n\t\t\t\t}),\n\t\t\t\tm(TextField, {\n\t\t\t\t\tlabel: \"paymentInterval_label\",\n\t\t\t\t\tvalue: subscription,\n\t\t\t\t\tisReadOnly: true,\n\t\t\t\t}),\n\t\t\t\tm(TextField, {\n\t\t\t\t\tlabel: isYearly && attrs.data.nextYearPrice ? \"priceFirstYear_label\" : \"price_label\",\n\t\t\t\t\tvalue: buildPriceString(attrs.data.price?.displayPrice ?? \"0\", attrs.data.options),\n\t\t\t\t\tisReadOnly: true,\n\t\t\t\t}),\n\t\t\t\tthis.renderPriceNextYear(attrs),\n\t\t\t\tm(TextField, {\n\t\t\t\t\tlabel: \"paymentMethod_label\",\n\t\t\t\t\tvalue: getPaymentMethodName(attrs.data.paymentData.paymentMethod),\n\t\t\t\t\tisReadOnly: true,\n\t\t\t\t}),\n\t\t\t]),\n\t\t\tm(\n\t\t\t\t\".smaller.center.pt-l\",\n\t\t\t\tattrs.data.options.businessUse()\n\t\t\t\t\t? lang.get(\"pricing.subscriptionPeriodInfoBusiness_msg\")\n\t\t\t\t\t: lang.get(\"pricing.subscriptionPeriodInfoPrivate_msg\"),\n\t\t\t),\n\t\t\tm(\n\t\t\t\t\".flex-center.full-width.pt-l\",\n\t\t\t\tm(LoginButton, {\n\t\t\t\t\tlabel: \"buy_action\",\n\t\t\t\t\tclass: \"small-login-button\",\n\t\t\t\t\tonclick: () => this.upgrade(attrs.data),\n\t\t\t\t}),\n\t\t\t),\n\t\t]\n\t}\n\n\tprivate renderPriceNextYear(attrs: WizardPageAttrs<UpgradeSubscriptionData>) {\n\t\treturn attrs.data.nextYearPrice\n\t\t\t? m(TextField, {\n\t\t\t\t\tlabel: \"priceForNextYear_label\",\n\t\t\t\t\tvalue: buildPriceString(attrs.data.nextYearPrice.displayPrice, attrs.data.options),\n\t\t\t\t\tisReadOnly: true,\n\t\t\t  })\n\t\t\t: null\n\t}\n\n\tprivate close(data: UpgradeSubscriptionData, dom: HTMLElement) {\n\t\temitWizardEvent(dom, WizardEventType.SHOW_NEXT_PAGE)\n\t}\n}\n\nfunction buildPriceString(price: string, options: SelectedSubscriptionOptions): string {\n\treturn formatPriceWithInfo(price, options.paymentInterval(), !options.businessUse())\n}\n"]}