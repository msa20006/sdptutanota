{"version":3,"file":"SetupThemePage.js","sourceRoot":"","sources":["../../../../../../../src/common/native/main/wizard/setupwizardpages/SetupThemePage.ts"],"names":[],"mappings":"AAAA,OAAO,CAAe,MAAM,SAAS,CAAA;AAErC,OAAO,EAAE,IAAI,EAAkB,MAAM,uCAAuC,CAAA;AAC5E,OAAO,EAAE,aAAa,EAA2C,MAAM,uCAAuC,CAAA;AAC9G,OAAO,EAAE,YAAY,EAAmB,MAAM,0BAA0B,CAAA;AACxE,OAAO,EAAE,eAAe,EAAE,MAAM,sBAAsB,CAAA;AACtD,OAAO,EAAE,OAAO,EAAE,MAAM,uCAAuC,CAAA;AAC/D,OAAO,EAAE,MAAM,EAAE,MAAM,oCAAoC,CAAA;AAE3D,MAAM,OAAO,cAAc;IAC1B,6DAA6D;IACrD,YAAY,GAA8C,IAAI,CAAA;IAEtE,MAAM;QACL,+FAA+F;QAC/F,OAAO,CAAC,eAAe,CAAC,eAAe,EAAE,CAAC,IAAI,CAAC,CAAC,YAAY,EAAE,EAAE;YAC/D,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,EAAE;gBAChD,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,OAAO,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,CAAA;YACxE,CAAC,CAAC,CAAA;YACF,CAAC,CAAC,MAAM,EAAE,CAAA;QACX,CAAC,CAAC,CAAA;IACH,CAAC;IAED,IAAI;QACH,OAAO,CAAC,CACP,eAAe,EACf;YACC,KAAK,EAAE,OAAO;SACd,EACD,CAAC,CAAC,cAAc,EAAE,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QAC1C,kIAAkI;QAClI,IAAI,CAAC,YAAY,IAAI,IAAI;YACxB,CAAC,CAAC,IAAI;YACN,CAAC,CAAC,CAAC,CAAC,aAAa,EAAE;gBACjB,IAAI,EAAE,aAAa;gBACnB,OAAO,EAAE,CAAC,GAAG,YAAY,CAAC,MAAM,CAAC,aAAa,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC;gBACxE,KAAK,EAAE,MAAM;gBACb,cAAc,EAAE,OAAO,CAAC,eAAe,CAAC,eAAe;gBACvD,gBAAgB,EAAE,CAAC,MAAM,EAAE,EAAE;oBAC5B,OAAO,CAAC,eAAe,CAAC,kBAAkB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAA;gBACzD,CAAC;aAC8C,CAAC,CACnD,CAAA;IACF,CAAC;CACD;AAED,MAAM,OAAO,mBAAmB;IAC/B,uBAAuB,GAAG,KAAK,CAAA;IAC/B,IAAI,GAAS,IAAI,CAAA;IAEjB,WAAW;QACV,OAAO,0BAA0B,CAAA;IAClC,CAAC;IAED,UAAU,CAAC,WAAoB;QAC9B,0CAA0C;QAC1C,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAA;IAC7B,CAAC;IAED,eAAe;QACd,OAAO,KAAK,CAAA;IACb,CAAC;IAED,SAAS;QACR,OAAO,IAAI,CAAA;IACZ,CAAC;CACD","sourcesContent":["import m, { Children } from \"mithril\"\nimport { WizardPageAttrs, WizardPageN } from \"../../../../gui/base/WizardDialog.js\"\nimport { lang, TranslationKey } from \"../../../../misc/LanguageViewModel.js\"\nimport { RadioSelector, RadioSelectorAttrs, RadioSelectorOption } from \"../../../../gui/base/RadioSelector.js\"\nimport { themeOptions, ThemePreference } from \"../../../../gui/theme.js\"\nimport { SetupPageLayout } from \"./SetupPageLayout.js\"\nimport { locator } from \"../../../../api/main/CommonLocator.js\"\nimport { client } from \"../../../../misc/ClientDetector.js\"\n\nexport class SetupThemePage implements WizardPageN<SetupThemePageAttrs> {\n\t// The whitelabel themes formatted as `RadioSelectorOption`s.\n\tprivate customThemes: Array<RadioSelectorOption<string>> | null = null\n\n\toninit() {\n\t\t// Get the whitelabel themes from the theme controller and map them to `RadioSelector` options.\n\t\tlocator.themeController.getCustomThemes().then((customThemes) => {\n\t\t\tthis.customThemes = customThemes.map((themeId) => {\n\t\t\t\treturn { name: lang.makeTranslation(themeId, themeId), value: themeId }\n\t\t\t})\n\t\t\tm.redraw()\n\t\t})\n\t}\n\n\tview(): Children {\n\t\treturn m(\n\t\t\tSetupPageLayout,\n\t\t\t{\n\t\t\t\timage: \"theme\",\n\t\t\t},\n\t\t\tm(\"p.full-width\", lang.get(\"theme_title\")),\n\t\t\t// We need to await the promise from `themeController.getCustomThemes()`, so we delay rendering the `RadioSelector` until it does.\n\t\t\tthis.customThemes == null\n\t\t\t\t? null\n\t\t\t\t: m(RadioSelector, {\n\t\t\t\t\t\tname: \"theme_label\",\n\t\t\t\t\t\toptions: [...themeOptions(client.isCalendarApp()), ...this.customThemes],\n\t\t\t\t\t\tclass: \"mb-s\",\n\t\t\t\t\t\tselectedOption: locator.themeController.themePreference,\n\t\t\t\t\t\tonOptionSelected: (option) => {\n\t\t\t\t\t\t\tlocator.themeController.setThemePreference(option, true)\n\t\t\t\t\t\t},\n\t\t\t\t  } satisfies RadioSelectorAttrs<ThemePreference>),\n\t\t)\n\t}\n}\n\nexport class SetupThemePageAttrs implements WizardPageAttrs<null> {\n\thidePagingButtonForPage = false\n\tdata: null = null\n\n\theaderTitle(): TranslationKey {\n\t\treturn \"appearanceSettings_label\"\n\t}\n\n\tnextAction(showDialogs: boolean): Promise<boolean> {\n\t\t// next action not available for this page\n\t\treturn Promise.resolve(true)\n\t}\n\n\tisSkipAvailable(): boolean {\n\t\treturn false\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn true\n\t}\n}\n"]}