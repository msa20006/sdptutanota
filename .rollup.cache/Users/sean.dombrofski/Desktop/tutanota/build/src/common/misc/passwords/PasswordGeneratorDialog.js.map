{"version":3,"file":"PasswordGeneratorDialog.js","sourceRoot":"","sources":["../../../../../src/common/misc/passwords/PasswordGeneratorDialog.ts"],"names":[],"mappings":"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","sourcesContent":["import m, { Children, Component, Vnode } from \"mithril\"\nimport { Dialog } from \"../../gui/base/Dialog\"\nimport { PasswordGenerator } from \"./PasswordGenerator\"\nimport { Button, ButtonType } from \"../../gui/base/Button.js\"\nimport { locator } from \"../../api/main/CommonLocator\"\nimport { px } from \"../../gui/size\"\nimport { copyToClipboard } from \"../ClipboardUtils\"\nimport { InfoLink, lang } from \"../LanguageViewModel.js\"\nimport { LoginButton } from \"../../gui/base/buttons/LoginButton.js\"\nimport { ExternalLink } from \"../../gui/base/ExternalLink.js\"\n\nlet dictionary: string[] | null = null\n\n/**\n * Show a dialog to generate a random passphrase\n * @returns a promise containing the generated password\n */\nexport async function showPasswordGeneratorDialog(): Promise<string> {\n\tif (dictionary == null) {\n\t\tconst appState = window.tutao.appState\n\t\tconst baseUrl = location.protocol + \"//\" + location.hostname + (location.port ? \":\" + location.port : \"\") + appState.prefixWithoutFile\n\t\tdictionary = await fetch(baseUrl + \"/wordlibrary.json\").then((response) => response.json())\n\t}\n\n\tlet password = \"\"\n\tconst pwGenerator = new PasswordGenerator(locator.random, dictionary!)\n\n\treturn new Promise((resolve) => {\n\t\tconst insertPasswordOkAction = () => {\n\t\t\tresolve(password)\n\t\t\tdialog.close()\n\t\t}\n\n\t\tconst updateAction = async () => {\n\t\t\tpassword = await pwGenerator.generateRandomPassphrase()\n\t\t\tm.redraw()\n\t\t}\n\n\t\tupdateAction()\n\n\t\tconst dialog = Dialog.showActionDialog({\n\t\t\ttitle: \"passphrase_label\",\n\t\t\tchild: {\n\t\t\t\tview: () =>\n\t\t\t\t\tm(PasswordGeneratorDialog, {\n\t\t\t\t\t\tokAction: insertPasswordOkAction,\n\t\t\t\t\t\tupdateAction,\n\t\t\t\t\t\tpassword,\n\t\t\t\t\t}),\n\t\t\t},\n\t\t\tokAction: null,\n\t\t})\n\t})\n}\n\ninterface PasswordGeneratorDialogAttrs {\n\tokAction: () => void\n\tupdateAction: () => void\n\tpassword: string\n}\n\nclass PasswordGeneratorDialog implements Component<PasswordGeneratorDialogAttrs> {\n\tview(vnode: Vnode<PasswordGeneratorDialogAttrs>): Children {\n\t\tconst { updateAction, okAction, password } = vnode.attrs\n\t\treturn m(\"\", [\n\t\t\tm(\n\t\t\t\t\".editor-border.mt.flex.center-horizontally.center-vertically\",\n\t\t\t\t{\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tminHeight: px(65), // needs 65px for displaying two rows\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tm(\".center.b.monospace\", password),\n\t\t\t),\n\t\t\tm(\".small.mt-xs\", [\n\t\t\t\tlang.get(\"passphraseGeneratorHelp_msg\"),\n\t\t\t\t\" \",\n\t\t\t\tm(ExternalLink, {\n\t\t\t\t\thref: InfoLink.PasswordGenerator,\n\t\t\t\t\ttext: lang.get(\"faqEntry_label\"),\n\t\t\t\t\tisCompanySite: true,\n\t\t\t\t}),\n\t\t\t]),\n\t\t\tm(\".flex-end\", [\n\t\t\t\tm(Button, {\n\t\t\t\t\tlabel: \"regeneratePassword_action\",\n\t\t\t\t\tclick: () => updateAction(),\n\t\t\t\t\ttype: ButtonType.Secondary,\n\t\t\t\t}),\n\t\t\t\tm(Button, {\n\t\t\t\t\tclick: () => copyToClipboard(password),\n\t\t\t\t\tlabel: \"copy_action\",\n\t\t\t\t\ttype: ButtonType.Secondary,\n\t\t\t\t}),\n\t\t\t]),\n\t\t\tm(\n\t\t\t\t\".flex\",\n\t\t\t\tm(LoginButton, {\n\t\t\t\t\tlabel: \"apply_action\",\n\t\t\t\t\tonclick: () => okAction(),\n\t\t\t\t}),\n\t\t\t),\n\t\t])\n\t}\n}\n"]}