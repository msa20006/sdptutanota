{"version":3,"file":"InputButton.js","sourceRoot":"","sources":["../../../../../src/common/gui/base/InputButton.ts"],"names":[],"mappings":"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","sourcesContent":["import m, { ClassComponent, Component, Vnode } from \"mithril\"\nimport { theme } from \"../theme.js\"\nimport { SingleLineTextField } from \"./SingleLineTextField.js\"\nimport { px, size } from \"../size.js\"\nimport { TextFieldType } from \"./TextField.js\"\nimport { TabIndex } from \"../../api/common/TutanotaConstants.js\"\n\nexport enum InputButtonVariant {\n\tOUTLINE = \"outline\",\n}\n\nexport interface InputButtonAttributes extends Pick<Component, \"oncreate\"> {\n\tinputValue: string\n\tdisplay: string\n\tariaLabel: string\n\tdisabled?: boolean\n\tclasses?: Array<string>\n\tvariant?: InputButtonVariant\n\tcontainerStyle?: Partial<CSSStyleDeclaration>\n\tdisplayStyle?: Partial<CSSStyleDeclaration>\n\tonclick?: (event: MouseEvent) => unknown\n\toninput: (newValue: string) => unknown\n\tonblur?: (...args: unknown[]) => unknown\n\tonfocus?: (...args: unknown[]) => unknown\n\tonkeydown?: (...args: unknown[]) => unknown\n\ttype?: TextFieldType\n\ttabIndex?: number\n}\n\n/**\n * A button with an input that can be activated when clicked or focused\n * @see Component attributes: {InputButtonAttributes}\n * @example\n * m(InputButton, {\n *   ariaLabel: lang.get(\"dateFrom_label\")\n *   inputValue: this.value,\n * \t oninput: (newValue) => (model.value = newValue),\n * \t display: lang.get(\"placeholder\"),\n * \t variant: InputButtonVariant.OUTLINE,\n * \t onclick: console.log,\n * \t disabled: false,\n *   displayStyle: {\n *     color: \"blue\"\n *   }\n * }),\n */\nexport class InputButton implements ClassComponent<InputButtonAttributes> {\n\tprivate isFocused: boolean = false\n\tprivate inputDOM?: HTMLInputElement\n\tprivate buttonDOM?: HTMLButtonElement\n\n\tview({ attrs }: Vnode<InputButtonAttributes, this>) {\n\t\treturn m(\n\t\t\t\"button\",\n\t\t\t{\n\t\t\t\ttitle: attrs.ariaLabel,\n\t\t\t\t\"aria-live\": \"off\", // Button contents and label will be handled by the input field\n\t\t\t\tclass: this.resolveContainerClasses(attrs.variant, attrs.classes, attrs.disabled),\n\t\t\t\ttabIndex: attrs.tabIndex,\n\t\t\t\tstyle: {\n\t\t\t\t\tborderColor: theme.content_message_bg,\n\t\t\t\t\tpadding: 0,\n\t\t\t\t\t...attrs.containerStyle,\n\t\t\t\t},\n\t\t\t\toncreate: (vnode) => {\n\t\t\t\t\tthis.buttonDOM = vnode.dom as HTMLButtonElement\n\t\t\t\t},\n\t\t\t\tonclick: (event: MouseEvent) => {\n\t\t\t\t\tthis.isFocused = true\n\t\t\t\t\tif (this.inputDOM) {\n\t\t\t\t\t\tthis.inputDOM.style.display = \"block\"\n\t\t\t\t\t\tthis.inputDOM.click()\n\t\t\t\t\t}\n\n\t\t\t\t\tattrs.onclick?.(event)\n\t\t\t\t},\n\t\t\t\tonfocus: () => {\n\t\t\t\t\tthis.isFocused = true\n\t\t\t\t\tif (this.inputDOM) {\n\t\t\t\t\t\tthis.inputDOM.style.display = \"block\"\n\t\t\t\t\t\tif (this.buttonDOM) {\n\t\t\t\t\t\t\tthis.buttonDOM.tabIndex = Number(TabIndex.Programmatic)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.inputDOM.focus()\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tdisabled: attrs.disabled,\n\t\t\t},\n\t\t\t[\n\t\t\t\tm.fragment({}, [\n\t\t\t\t\tm(SingleLineTextField, {\n\t\t\t\t\t\tariaLabel: attrs.ariaLabel,\n\t\t\t\t\t\tonblur: () => {\n\t\t\t\t\t\t\tthis.isFocused = false\n\t\t\t\t\t\t\tthis.inputDOM!.style.display = \"none\"\n\t\t\t\t\t\t\tif (this.buttonDOM) {\n\t\t\t\t\t\t\t\tthis.buttonDOM.tabIndex = Number(attrs.tabIndex ?? TabIndex.Default)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tattrs.onblur?.()\n\t\t\t\t\t\t},\n\t\t\t\t\t\toncreate: (vnode) => {\n\t\t\t\t\t\t\tthis.inputDOM = vnode.dom as HTMLInputElement\n\t\t\t\t\t\t\tthis.inputDOM.style.display = \"none\"\n\n\t\t\t\t\t\t\tattrs.oncreate?.(vnode)\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdisabled: attrs.disabled,\n\t\t\t\t\t\tvalue: attrs.inputValue,\n\t\t\t\t\t\toninput: attrs.oninput,\n\t\t\t\t\t\tonkeydown: attrs.onkeydown,\n\t\t\t\t\t\tonfocus: attrs.onfocus,\n\t\t\t\t\t\tclasses: this.resolveInputClasses(attrs.variant),\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\tpadding: `${px(size.vpad_small)} 0`,\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttype: TextFieldType.Text,\n\t\t\t\t\t}),\n\t\t\t\t]),\n\t\t\t\tm(\n\t\t\t\t\t\"span.tutaui-text-field\",\n\t\t\t\t\t{\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\tdisplay: this.isFocused ? \"none\" : \"block\",\n\t\t\t\t\t\t\tpadding: `${px(size.vpad_small)} 0`,\n\t\t\t\t\t\t\t...attrs.displayStyle,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tattrs.display,\n\t\t\t\t),\n\t\t\t],\n\t\t)\n\t}\n\n\tprivate resolveInputClasses(variant?: InputButtonVariant) {\n\t\tconst resolvedClasses = [\"text-center\", \"noselect\"]\n\t\tif (variant === InputButtonVariant.OUTLINE && this.isFocused) {\n\t\t\tresolvedClasses.push(\"tutaui-button-outline\", \"border-content-message-bg\")\n\t\t}\n\n\t\treturn resolvedClasses\n\t}\n\n\tprivate resolveContainerClasses(variant: InputButtonVariant = InputButtonVariant.OUTLINE, classes: Array<string> = [], disabled: boolean = false) {\n\t\tconst resolvedClasses = [...classes, \"full-width\"]\n\n\t\tif (disabled) resolvedClasses.push(\"disabled\", \"click-disabled\")\n\t\tif (variant === InputButtonVariant.OUTLINE && !this.isFocused) {\n\t\t\tresolvedClasses.push(\"tutaui-button-outline\")\n\t\t}\n\n\t\treturn resolvedClasses.join(\" \")\n\t}\n}\n"]}