{"version":3,"file":"IconButton.js","sourceRoot":"","sources":["../../../../../src/common/gui/base/IconButton.ts"],"names":[],"mappings":"AAAA,OAAO,CAAiC,MAAM,SAAS,CAAA;AAGvD,OAAO,EAAY,IAAI,EAAE,QAAQ,EAAE,MAAM,QAAQ,CAAA;AAEjD,OAAO,EAAE,gBAAgB,EAAE,MAAM,sBAAsB,CAAA;AACvD,OAAO,EAAe,SAAS,EAAE,MAAM,aAAa,CAAA;AAEpD,OAAO,EAAE,UAAU,EAAmB,MAAM,yBAAyB,CAAA;AAErE,gBAAgB,EAAE,CAAA;AAYlB,MAAM,OAAO,UAAU;IACtB,IAAI,CAAC,EAAE,KAAK,EAA0B;QACrC,OAAO,CAAC,CAAC,UAAU,EAAE;YACpB,KAAK,EAAE,KAAK,CAAC,KAAK;YAClB,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE;gBACb,IAAI,EAAE,KAAK,CAAC,IAAI;gBAChB,SAAS,EAAE,KAAK;gBAChB,KAAK,EAAE,UAAU;gBACjB,IAAI,EAAE,KAAK,CAAC,IAAI,6BAAqB,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM;gBACrE,KAAK,EAAE;oBACN,IAAI,EAAE,SAAS,CAAC,KAAK,CAAC,MAAM,uCAAuB,CAAC,CAAC,MAAM;oBAC3D,UAAU,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS;iBACjD;aACD,CAAC;YACF,OAAO,EAAE,KAAK,CAAC,KAAK;YACpB,SAAS,EAAE,KAAK,CAAC,SAAS;YAC1B,KAAK,EAAE,wBAAwB,UAAU,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;YACpE,QAAQ,EAAE,KAAK,CAAC,QAAQ;YACxB,KAAK,EAAE;gBACN,UAAU,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS;aACjD;SACyB,CAAC,CAAA;IAC7B,CAAC;IAEO,MAAM,CAAC,YAAY,CAAC,IAA4B;QACvD,QAAQ,IAAI,EAAE,CAAC;YACd;gBACC,OAAO,SAAS,CAAA;YACjB;gBACC,OAAO,OAAO,CAAA;YACf,+BAAuB;YACvB;gBACC,OAAO,EAAE,CAAA;QACX,CAAC;IACF,CAAC;CACD","sourcesContent":["import m, { Children, Component, Vnode } from \"mithril\"\nimport type { MaybeTranslation } from \"../../misc/LanguageViewModel\"\nimport { lang } from \"../../misc/LanguageViewModel\"\nimport { AllIcons, Icon, IconSize } from \"./Icon\"\nimport type { ClickHandler } from \"./GuiUtils\"\nimport { assertMainOrNode } from \"../../api/common/Env\"\nimport { ButtonColor, getColors } from \"./Button.js\"\nimport { ButtonSize } from \"./ButtonSize.js\"\nimport { BaseButton, BaseButtonAttrs } from \"./buttons/BaseButton.js\"\n\nassertMainOrNode()\n\nexport interface IconButtonAttrs {\n\ticon: AllIcons\n\ttitle: MaybeTranslation\n\tclick: ClickHandler\n\tcolors?: ButtonColor\n\tsize?: ButtonSize\n\tonkeydown?: (event: KeyboardEvent) => unknown\n\tdisabled?: boolean\n}\n\nexport class IconButton implements Component<IconButtonAttrs> {\n\tview({ attrs }: Vnode<IconButtonAttrs>): Children {\n\t\treturn m(BaseButton, {\n\t\t\tlabel: attrs.title,\n\t\t\ticon: m(Icon, {\n\t\t\t\ticon: attrs.icon,\n\t\t\t\tcontainer: \"div\",\n\t\t\t\tclass: \"center-h\",\n\t\t\t\tsize: attrs.size === ButtonSize.Large ? IconSize.XL : IconSize.Medium,\n\t\t\t\tstyle: {\n\t\t\t\t\tfill: getColors(attrs.colors ?? ButtonColor.Content).button,\n\t\t\t\t\tvisibility: attrs.disabled ? \"hidden\" : \"visible\",\n\t\t\t\t},\n\t\t\t}),\n\t\t\tonclick: attrs.click,\n\t\t\tonkeydown: attrs.onkeydown,\n\t\t\tclass: `icon-button state-bg ${IconButton.getSizeClass(attrs.size)}`,\n\t\t\tdisabled: attrs.disabled,\n\t\t\tstyle: {\n\t\t\t\tvisibility: attrs.disabled ? \"hidden\" : \"visible\",\n\t\t\t},\n\t\t} satisfies BaseButtonAttrs)\n\t}\n\n\tprivate static getSizeClass(size: ButtonSize | undefined) {\n\t\tswitch (size) {\n\t\t\tcase ButtonSize.Compact:\n\t\t\t\treturn \"compact\"\n\t\t\tcase ButtonSize.Large:\n\t\t\t\treturn \"large\"\n\t\t\tcase ButtonSize.Normal:\n\t\t\tdefault:\n\t\t\t\treturn \"\"\n\t\t}\n\t}\n}\n"]}