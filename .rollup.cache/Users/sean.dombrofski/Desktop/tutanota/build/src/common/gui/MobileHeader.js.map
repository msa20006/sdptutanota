{"version":3,"file":"MobileHeader.js","sourceRoot":"","sources":["../../../../src/common/gui/MobileHeader.ts"],"names":[],"mappings":"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","sourcesContent":["import { pureComponent } from \"./base/PureComponent.js\"\nimport m, { Children, Component, Vnode } from \"mithril\"\nimport { NBSP } from \"@tutao/tutanota-utils\"\nimport { AppHeaderAttrs } from \"./Header.js\"\nimport { BaseMobileHeader } from \"./BaseMobileHeader.js\"\nimport { IconButton } from \"./base/IconButton.js\"\nimport { BootIcons } from \"./base/icons/BootIcons.js\"\nimport { styles } from \"./styles.js\"\nimport { OfflineIndicator } from \"./base/OfflineIndicator.js\"\nimport { ProgressBar } from \"./base/ProgressBar.js\"\nimport { CounterBadge } from \"./base/CounterBadge.js\"\nimport { px } from \"./size.js\"\nimport { theme } from \"./theme.js\"\nimport { NewsModel } from \"../misc/news/NewsModel.js\"\nimport { ClickHandler } from \"./base/GuiUtils.js\"\nimport { lang, MaybeTranslation } from \"../misc/LanguageViewModel.js\"\n\nexport interface MobileHeaderAttrs extends AppHeaderAttrs {\n\tcolumnType: \"first\" | \"other\"\n\t/** Actions that should be displayed on the opposite side of menu/back button. */\n\tactions: Children\n\t/** Like actions that are only supposed to be displayed in multi-column layout */\n\tmulticolumnActions?: () => Children\n\t/**\n\t * An action that is displayed in the corner of the screen opposite of menu/back button, will be displayed in any column in single column layout or\n\t * in the second column in two column layout.\n\t */\n\tprimaryAction: () => Children\n\ttitle?: MaybeTranslation\n\tbackAction: () => unknown\n\tuseBackButton?: boolean\n}\n\n/**\n * A component that renders a \"standard\" mobile header. It has menu/back button with offline indicator, title and online status, sync progress and some\n * actions.\n *\n * It is intended to be used in both the first (\"list\") and the second (\"viewer\") columns. It will automatically figure whether it should display menu/back\n * button, title and actions.\n */\nexport class MobileHeader implements Component<MobileHeaderAttrs> {\n\tview({ attrs }: Vnode<MobileHeaderAttrs>): Children {\n\t\tconst firstVisibleColumn = attrs.columnType === \"first\" || styles.isSingleColumnLayout()\n\t\treturn m(BaseMobileHeader, {\n\t\t\tleft: this.renderLeftAction(attrs),\n\t\t\tcenter: firstVisibleColumn\n\t\t\t\t? m(MobileHeaderTitle, {\n\t\t\t\t\t\ttitle: attrs.title ? lang.getTranslationText(attrs.title) : undefined,\n\t\t\t\t\t\tbottom: m(OfflineIndicator, attrs.offlineIndicatorModel.getCurrentAttrs()),\n\t\t\t\t  })\n\t\t\t\t: null,\n\t\t\tright: [\n\t\t\t\tstyles.isSingleColumnLayout() ? null : attrs.multicolumnActions?.(),\n\t\t\t\tattrs.actions,\n\t\t\t\tstyles.isSingleColumnLayout() || attrs.columnType === \"other\" ? attrs.primaryAction() : null,\n\t\t\t],\n\t\t\tinjections: firstVisibleColumn ? m(ProgressBar, { progress: attrs.offlineIndicatorModel.getProgress() }) : null,\n\t\t})\n\t}\n\n\tprivate renderLeftAction(attrs: MobileHeaderAttrs) {\n\t\tif (attrs.columnType === \"first\" && !attrs.useBackButton) {\n\t\t\treturn m(MobileHeaderMenuButton, { newsModel: attrs.newsModel, backAction: attrs.backAction })\n\t\t} else if (styles.isSingleColumnLayout() || attrs.useBackButton) {\n\t\t\treturn m(MobileHeaderBackButton, { backAction: attrs.backAction })\n\t\t}\n\n\t\treturn null\n\t}\n}\n\nexport const MobileHeaderBackButton = pureComponent(({ backAction }: { backAction: () => unknown }) => {\n\treturn m(IconButton, {\n\t\ttitle: \"back_action\",\n\t\ticon: BootIcons.Back,\n\t\tclick: () => {\n\t\t\tbackAction()\n\t\t},\n\t})\n})\n\nexport const MobileHeaderTitle = pureComponent(({ title, bottom, onTap }: { title?: string | Children; bottom: Children; onTap?: ClickHandler }) => {\n\t// normally min-width: is 0 but inside flex it's auto and we need to teach it how to shrink\n\t// align-self: stretch restrict the child to the parent width\n\t// text-ellipsis already sets min-width to 0\n\treturn m(\".flex.col.items-start.min-width-0\", [\n\t\tm(\n\t\t\t(onTap ? \"button\" : \"\") + \".font-weight-600.text-ellipsis.align-self-stretch\",\n\t\t\t{ onclick: (event: MouseEvent) => onTap?.(event, event.target as HTMLElement) },\n\t\t\ttitle ?? NBSP,\n\t\t),\n\t\tbottom,\n\t])\n})\n\nexport const MobileHeaderMenuButton = pureComponent(({ newsModel, backAction }: { newsModel: NewsModel; backAction: () => unknown }) => {\n\treturn m(\".rel\", [\n\t\tm(IconButton, {\n\t\t\ttitle: \"menu_label\",\n\t\t\ticon: BootIcons.MoreVertical,\n\t\t\tclick: () => {\n\t\t\t\tbackAction()\n\t\t\t},\n\t\t}),\n\t\tm(CounterBadge, {\n\t\t\tcount: newsModel.liveNewsIds.length,\n\t\t\tposition: {\n\t\t\t\ttop: px(4),\n\t\t\t\tright: px(5),\n\t\t\t},\n\t\t\tcolor: \"white\",\n\t\t\tbackground: theme.list_accent_fg,\n\t\t}),\n\t])\n})\n"]}