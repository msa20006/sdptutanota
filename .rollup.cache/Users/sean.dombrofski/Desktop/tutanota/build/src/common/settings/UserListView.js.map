{"version":3,"file":"UserListView.js","sourceRoot":"","sources":["../../../../src/common/settings/UserListView.ts"],"names":[],"mappings":"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","sourcesContent":["import m, { Children } from \"mithril\"\nimport { NotFoundError } from \"../api/common/error/RestError.js\"\nimport { size } from \"../gui/size.js\"\nimport type { GroupInfo } from \"../api/entities/sys/TypeRefs.js\"\nimport { GroupInfoTypeRef, GroupMemberTypeRef } from \"../api/entities/sys/TypeRefs.js\"\nimport { contains, LazyLoaded, noOp } from \"@tutao/tutanota-utils\"\nimport { UserViewer } from \"./UserViewer.js\"\nimport { FeatureType, GroupType } from \"../api/common/TutanotaConstants.js\"\nimport { Icon } from \"../gui/base/Icon.js\"\nimport { Icons } from \"../gui/base/icons/Icons.js\"\nimport { BootIcons } from \"../gui/base/icons/BootIcons.js\"\n\nimport { compareGroupInfos } from \"../api/common/utils/GroupUtils.js\"\nimport { elementIdPart } from \"../api/common/utils/EntityUtils.js\"\nimport { ListColumnWrapper } from \"../gui/ListColumnWrapper.js\"\nimport { assertMainOrNode } from \"../api/common/Env.js\"\nimport { locator } from \"../api/main/CommonLocator.js\"\nimport Stream from \"mithril/stream\"\nimport * as AddUserDialog from \"./AddUserDialog.js\"\nimport { SelectableRowContainer, SelectableRowSelectedSetter, setVisibility } from \"../gui/SelectableRowContainer.js\"\nimport { List, ListAttrs, MultiselectMode, RenderConfig } from \"../gui/base/List.js\"\nimport { listSelectionKeyboardShortcuts, VirtualRow } from \"../gui/base/ListUtils.js\"\nimport ColumnEmptyMessageBox from \"../gui/base/ColumnEmptyMessageBox.js\"\nimport { theme } from \"../gui/theme.js\"\nimport { BaseSearchBar, BaseSearchBarAttrs } from \"../gui/base/BaseSearchBar.js\"\nimport { IconButton } from \"../gui/base/IconButton.js\"\nimport { attachDropdown } from \"../gui/base/Dropdown.js\"\nimport { lang } from \"../misc/LanguageViewModel.js\"\nimport { keyManager } from \"../misc/KeyManager.js\"\nimport { EntityUpdateData, isUpdateFor, isUpdateForTypeRef } from \"../api/common/utils/EntityUpdateUtils.js\"\nimport { ListAutoSelectBehavior } from \"../misc/DeviceConfig.js\"\nimport { UpdatableSettingsViewer } from \"./Interfaces.js\"\nimport { ListElementListModel } from \"../misc/ListElementListModel\"\n\nassertMainOrNode()\n\n/**\n * Displays a list with users that are available to manage by the current user.\n * Global admins see all users.\n * Local admins see only their assigned users.\n */\nexport class UserListView implements UpdatableSettingsViewer {\n\tprivate searchQuery: string = \"\"\n\tprivate listModel: ListElementListModel<GroupInfo>\n\tprivate readonly renderConfig: RenderConfig<GroupInfo, UserRow> = {\n\t\tcreateElement: (dom) => {\n\t\t\tconst row = new UserRow((groupInfo) => this.isAdmin(groupInfo))\n\t\t\tm.render(dom, row.render())\n\t\t\treturn row\n\t\t},\n\t\titemHeight: size.list_row_height,\n\t\tswipe: null,\n\t\tmultiselectionAllowed: MultiselectMode.Disabled,\n\t}\n\n\tprivate readonly listId: LazyLoaded<Id>\n\tprivate adminUserGroupInfoIds: Id[] = []\n\tprivate listStateSubscription: Stream<unknown> | null = null\n\tprivate listSelectionSubscription: Stream<unknown> | null = null\n\n\tconstructor(\n\t\tprivate readonly updateDetailsViewer: (viewer: UserViewer | null) => unknown,\n\t\tprivate readonly focusDetailsViewer: () => unknown,\n\t\tprivate readonly canImportUsers: () => boolean,\n\t\tprivate readonly onImportUsers: () => unknown,\n\t\tprivate readonly onExportUsers: () => unknown,\n\t) {\n\t\t// doing it after \"onSelectionChanged\" is initialized\n\t\tthis.listModel = this.makeListModel()\n\t\tthis.listId = new LazyLoaded(async () => {\n\t\t\tconst customer = await locator.logins.getUserController().loadCustomer()\n\t\t\treturn customer.userGroups\n\t\t})\n\n\t\tthis.listModel.loadInitial()\n\n\t\tthis.oncreate = this.oncreate.bind(this)\n\t\tthis.onremove = this.onremove.bind(this)\n\t\tthis.view = this.view.bind(this)\n\t}\n\n\tprivate readonly shortcuts = listSelectionKeyboardShortcuts(MultiselectMode.Disabled, () => this.listModel)\n\n\toncreate() {\n\t\tkeyManager.registerShortcuts(this.shortcuts)\n\t}\n\n\tview(): Children {\n\t\tif (locator.logins.isEnabled(FeatureType.WhitelabelChild)) {\n\t\t\treturn null\n\t\t}\n\n\t\treturn m(\n\t\t\tListColumnWrapper,\n\t\t\t{\n\t\t\t\theaderContent: m(\n\t\t\t\t\t\".flex.flex-space-between.center-vertically.plr-l\",\n\t\t\t\t\tm(BaseSearchBar, {\n\t\t\t\t\t\ttext: this.searchQuery,\n\t\t\t\t\t\tonInput: (text) => this.updateQuery(text),\n\t\t\t\t\t\tbusy: false,\n\t\t\t\t\t\tonKeyDown: (e) => e.stopPropagation(),\n\t\t\t\t\t\tonClear: () => {\n\t\t\t\t\t\t\tthis.searchQuery = \"\"\n\t\t\t\t\t\t\tthis.listModel.reapplyFilter()\n\t\t\t\t\t\t},\n\t\t\t\t\t\tplaceholder: lang.get(\"searchUsers_placeholder\"),\n\t\t\t\t\t} satisfies BaseSearchBarAttrs),\n\t\t\t\t\tm(\n\t\t\t\t\t\t\".mr-negative-s\",\n\t\t\t\t\t\tm(IconButton, {\n\t\t\t\t\t\t\ttitle: \"addUsers_action\",\n\t\t\t\t\t\t\ticon: Icons.Add,\n\t\t\t\t\t\t\tclick: () => this.addButtonClicked(),\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tthis.renderImportButton(),\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t},\n\t\t\tthis.listModel.isEmptyAndDone()\n\t\t\t\t? m(ColumnEmptyMessageBox, {\n\t\t\t\t\t\tcolor: theme.list_message_bg,\n\t\t\t\t\t\ticon: BootIcons.Contacts,\n\t\t\t\t\t\tmessage: \"noEntries_msg\",\n\t\t\t\t  })\n\t\t\t\t: m(List, {\n\t\t\t\t\t\trenderConfig: this.renderConfig,\n\t\t\t\t\t\tstate: this.listModel.state,\n\t\t\t\t\t\tonLoadMore: () => this.listModel.loadMore(),\n\t\t\t\t\t\tonRetryLoading: () => this.listModel.retryLoading(),\n\t\t\t\t\t\tonStopLoading: () => this.listModel.stopLoading(),\n\t\t\t\t\t\tonSingleSelection: (item: GroupInfo) => {\n\t\t\t\t\t\t\tthis.listModel.onSingleSelection(item)\n\t\t\t\t\t\t\tthis.focusDetailsViewer()\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonSingleTogglingMultiselection: noOp,\n\t\t\t\t\t\tonRangeSelectionTowards: noOp,\n\t\t\t\t  } satisfies ListAttrs<GroupInfo, UserRow>),\n\t\t)\n\t}\n\n\tprivate renderImportButton() {\n\t\tif (this.canImportUsers()) {\n\t\t\treturn m(\n\t\t\t\tIconButton,\n\t\t\t\tattachDropdown({\n\t\t\t\t\tmainButtonAttrs: {\n\t\t\t\t\t\ttitle: \"more_label\",\n\t\t\t\t\t\ticon: Icons.More,\n\t\t\t\t\t},\n\t\t\t\t\tchildAttrs: () => [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: \"importUsers_action\",\n\t\t\t\t\t\t\tclick: () => {\n\t\t\t\t\t\t\t\tthis.onImportUsers()\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: \"exportUsers_action\",\n\t\t\t\t\t\t\tclick: () => {\n\t\t\t\t\t\t\t\tthis.onExportUsers()\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t}),\n\t\t\t)\n\t\t} else {\n\t\t\treturn null\n\t\t}\n\t}\n\n\tonremove() {\n\t\tkeyManager.unregisterShortcuts(this.shortcuts)\n\n\t\tthis.listStateSubscription?.end(true)\n\t\tthis.listSelectionSubscription?.end(true)\n\t}\n\n\tprivate async loadAdmins(): Promise<void> {\n\t\tconst adminGroupMembership = locator.logins.getUserController().user.memberships.find((gm) => gm.groupType === GroupType.Admin)\n\t\tif (adminGroupMembership == null) {\n\t\t\treturn\n\t\t}\n\t\tconst members = await locator.entityClient.loadAll(GroupMemberTypeRef, adminGroupMembership.groupMember[0])\n\t\tthis.adminUserGroupInfoIds = members.map((adminGroupMember) => elementIdPart(adminGroupMember.userGroupInfo))\n\t}\n\n\tprivate isAdmin(userGroupInfo: GroupInfo): boolean {\n\t\treturn contains(this.adminUserGroupInfoIds, userGroupInfo._id[1])\n\t}\n\n\tprivate addButtonClicked() {\n\t\tAddUserDialog.show()\n\t}\n\n\tasync entityEventsReceived<T>(updates: ReadonlyArray<EntityUpdateData>): Promise<void> {\n\t\tfor (const update of updates) {\n\t\t\tconst { instanceListId, instanceId, operation } = update\n\n\t\t\tif (isUpdateForTypeRef(GroupInfoTypeRef, update) && this.listId.getSync() === instanceListId) {\n\t\t\t\tawait this.listModel.entityEventReceived(instanceListId, instanceId, operation)\n\t\t\t} else if (isUpdateFor(locator.logins.getUserController().user, update)) {\n\t\t\t\tawait this.loadAdmins()\n\t\t\t\tthis.listModel.reapplyFilter()\n\t\t\t}\n\t\t\tm.redraw()\n\t\t}\n\t}\n\n\tprivate makeListModel(): ListElementListModel<GroupInfo> {\n\t\tconst listModel = new ListElementListModel<GroupInfo>({\n\t\t\tsortCompare: compareGroupInfos,\n\t\t\tfetch: async (_lastFetchedEntity) => {\n\t\t\t\tawait this.loadAdmins()\n\t\t\t\tconst listId = await this.listId.getAsync()\n\t\t\t\tconst allUserGroupInfos = await locator.entityClient.loadAll(GroupInfoTypeRef, listId)\n\n\t\t\t\treturn { items: allUserGroupInfos, complete: true }\n\t\t\t},\n\t\t\tloadSingle: async (_listId: Id, elementId: Id) => {\n\t\t\t\tconst listId = await this.listId.getAsync()\n\t\t\t\ttry {\n\t\t\t\t\treturn await locator.entityClient.load<GroupInfo>(GroupInfoTypeRef, [listId, elementId])\n\t\t\t\t} catch (e) {\n\t\t\t\t\tif (e instanceof NotFoundError) {\n\t\t\t\t\t\t// we return null if the GroupInfo does not exist\n\t\t\t\t\t\treturn null\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow e\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tautoSelectBehavior: () => ListAutoSelectBehavior.OLDER,\n\t\t})\n\n\t\tlistModel.setFilter((gi) => this.groupFilter() && this.queryFilter(gi))\n\n\t\tthis.listStateSubscription?.end(true)\n\t\tthis.listStateSubscription = listModel.stateStream.map((state) => {\n\t\t\tm.redraw()\n\t\t})\n\n\t\tthis.listSelectionSubscription?.end(true)\n\t\tthis.listSelectionSubscription = listModel.differentItemsSelected.map((newSelection) => {\n\t\t\tlet detailsViewer: UserViewer | null\n\t\t\tif (newSelection.size === 0) {\n\t\t\t\tdetailsViewer = null\n\t\t\t} else {\n\t\t\t\tconst item = newSelection.values().next().value\n\t\t\t\tdetailsViewer = new UserViewer(item, this.isAdmin(item))\n\t\t\t}\n\t\t\tthis.updateDetailsViewer(detailsViewer)\n\t\t\tm.redraw()\n\t\t})\n\t\treturn listModel\n\t}\n\n\tprivate queryFilter(gi: GroupInfo) {\n\t\tconst lowercaseSearch = this.searchQuery.toLowerCase()\n\t\treturn (\n\t\t\tgi.name.toLowerCase().includes(lowercaseSearch) ||\n\t\t\t(!!gi.mailAddress && gi.mailAddress?.toLowerCase().includes(lowercaseSearch)) ||\n\t\t\tgi.mailAddressAliases.some((mai) => mai.mailAddress.toLowerCase().includes(lowercaseSearch))\n\t\t)\n\t}\n\n\tprivate groupFilter = () => {\n\t\treturn locator.logins.getUserController().isGlobalAdmin()\n\t}\n\n\tprivate updateQuery(query: string) {\n\t\tthis.searchQuery = query\n\t\tthis.listModel.reapplyFilter()\n\t}\n}\n\nexport class UserRow implements VirtualRow<GroupInfo> {\n\ttop: number = 0\n\tdomElement: HTMLElement | null = null // set from List\n\tentity: GroupInfo | null = null\n\tprivate nameDom!: HTMLElement\n\tprivate addressDom!: HTMLElement\n\tprivate adminIconDom!: HTMLElement\n\tprivate deletedIconDom!: HTMLElement\n\tprivate selectionUpdater!: SelectableRowSelectedSetter\n\n\tconstructor(private readonly isAdmin: (groupInfo: GroupInfo) => boolean) {}\n\n\tupdate(groupInfo: GroupInfo, selected: boolean): void {\n\t\tthis.entity = groupInfo\n\n\t\tthis.selectionUpdater(selected, false)\n\n\t\tthis.nameDom.textContent = groupInfo.name\n\t\tthis.addressDom.textContent = groupInfo.mailAddress ? groupInfo.mailAddress : \"\"\n\n\t\tsetVisibility(this.adminIconDom, this.isAdmin(groupInfo))\n\t\tsetVisibility(this.deletedIconDom, groupInfo.deleted != null)\n\t}\n\n\t/**\n\t * Only the structure is managed by mithril. We set all contents on our own (see update) in order to avoid the vdom overhead (not negligible on mobiles)\n\t */\n\trender(): Children {\n\t\treturn m(\n\t\t\tSelectableRowContainer,\n\t\t\t{\n\t\t\t\tonSelectedChangeRef: (updater) => (this.selectionUpdater = updater),\n\t\t\t},\n\t\t\tm(\".flex.col.flex-grow\", [\n\t\t\t\tm(\".badge-line-height\", [\n\t\t\t\t\tm(\"\", {\n\t\t\t\t\t\toncreate: (vnode) => (this.nameDom = vnode.dom as HTMLElement),\n\t\t\t\t\t}),\n\t\t\t\t]),\n\t\t\t\tm(\".flex-space-between.mt-xxs\", [\n\t\t\t\t\tm(\".smaller\", {\n\t\t\t\t\t\toncreate: (vnode) => (this.addressDom = vnode.dom as HTMLElement),\n\t\t\t\t\t}),\n\t\t\t\t\tm(\".icons.flex\", [\n\t\t\t\t\t\tm(Icon, {\n\t\t\t\t\t\t\ticon: BootIcons.Settings,\n\t\t\t\t\t\t\toncreate: (vnode) => (this.adminIconDom = vnode.dom as HTMLElement),\n\t\t\t\t\t\t\tclass: \"svg-list-accent-fg\",\n\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\tdisplay: \"none\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tm(Icon, {\n\t\t\t\t\t\t\ticon: Icons.Trash,\n\t\t\t\t\t\t\toncreate: (vnode) => (this.deletedIconDom = vnode.dom as HTMLElement),\n\t\t\t\t\t\t\tclass: \"svg-list-accent-fg\",\n\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\tdisplay: \"none\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}),\n\t\t\t\t\t]),\n\t\t\t\t]),\n\t\t\t]),\n\t\t)\n\t}\n}\n"]}