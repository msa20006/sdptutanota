{"version":3,"file":"KeychainEncryption.js","sourceRoot":"","sources":["../../../../../src/common/desktop/credentials/KeychainEncryption.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,8BAA8B,EAAE,MAAM,0DAA0D,CAAA;AACzG,OAAO,EAAE,6BAA6B,EAA0B,MAAM,wBAAwB,CAAA;AAI9F,OAAO,EAAE,WAAW,EAAE,MAAM,iCAAiC,CAAA;AAE7D,MAAM,OAAO,kBAAkB;IAEZ;IACA;IACA;IAHlB,YACkB,cAA8B,EAC9B,MAAiC,EACjC,qBAA4C;QAF5C,mBAAc,GAAd,cAAc,CAAgB;QAC9B,WAAM,GAAN,MAAM,CAA2B;QACjC,0BAAqB,GAArB,qBAAqB,CAAuB;IAC3D,CAAC;IAEJ,KAAK,CAAC,oBAAoB,CAAC,+BAA2C,EAAE,cAAsC;QAC7G,IAAI,CAAC;YACJ,6BAA6B,CAAC,cAAc,CAAC,CAAA;YAC7C,MAAM,aAAa,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,oBAAoB,CAAC,+BAA+B,EAAE,cAAc,CAAC,CAAA;YACrH,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,qBAAqB,CAAC,cAAc,EAAE,CAAA;YACrE,OAAO,IAAI,CAAC,MAAM,CAAC,+BAA+B,CAAC,WAAW,EAAE,aAAa,CAAC,CAAA;QAC/E,CAAC;QAAC,OAAO,CAAC,EAAE,CAAC;YACZ,IAAI,CAAC,YAAY,WAAW,EAAE,CAAC;gBAC9B,0IAA0I;gBAC1I,qBAAqB;gBACrB,MAAM,IAAI,8BAA8B,CAAC,kCAAkC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,OAAO,EAAE,CAAC,CAAA;YACnG,CAAC;iBAAM,CAAC;gBACP,MAAM,CAAC,CAAA;YACR,CAAC;QACF,CAAC;IACF,CAAC;IAED,KAAK,CAAC,oBAAoB,CAAC,IAAgB,EAAE,cAAsC;QAClF,IAAI,CAAC;YACJ,6BAA6B,CAAC,cAAc,CAAC,CAAA;YAC7C,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,qBAAqB,CAAC,cAAc,EAAE,CAAA;YACrE,MAAM,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAA;YACrE,OAAO,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,aAAa,EAAE,cAAc,CAAC,CAAA;QAC5E,CAAC;QAAC,OAAO,CAAC,EAAE,CAAC;YACZ,IAAI,CAAC,YAAY,WAAW,EAAE,CAAC;gBAC9B,0IAA0I;gBAC1I,qBAAqB;gBACrB,MAAM,IAAI,8BAA8B,CAAC,kCAAkC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,OAAO,EAAE,CAAC,CAAA;YACnG,CAAC;iBAAM,CAAC;gBACP,MAAM,CAAC,CAAA;YACR,CAAC;QACF,CAAC;IACF,CAAC;CACD","sourcesContent":["import { KeyPermanentlyInvalidatedError } from \"../../api/common/error/KeyPermanentlyInvalidatedError.js\"\nimport { assertSupportedEncryptionMode, DesktopCredentialsMode } from \"./CredentialCommons.js\"\nimport { DesktopKeyStoreFacade } from \"../DesktopKeyStoreFacade.js\"\nimport { AppPassHandler } from \"./AppPassHandler.js\"\nimport { DesktopNativeCryptoFacade } from \"../DesktopNativeCryptoFacade.js\"\nimport { CryptoError } from \"@tutao/tutanota-crypto/error.js\"\n\nexport class KeychainEncryption {\n\tconstructor(\n\t\tprivate readonly appPassHandler: AppPassHandler,\n\t\tprivate readonly crypto: DesktopNativeCryptoFacade,\n\t\tprivate readonly desktopKeyStoreFacade: DesktopKeyStoreFacade,\n\t) {}\n\n\tasync decryptUsingKeychain(encryptedDataWithAppPassWrapper: Uint8Array, encryptionMode: DesktopCredentialsMode): Promise<Uint8Array> {\n\t\ttry {\n\t\t\tassertSupportedEncryptionMode(encryptionMode)\n\t\t\tconst encryptedData = await this.appPassHandler.removeAppPassWrapper(encryptedDataWithAppPassWrapper, encryptionMode)\n\t\t\tconst keyChainKey = await this.desktopKeyStoreFacade.getKeyChainKey()\n\t\t\treturn this.crypto.unauthenticatedAes256DecryptKey(keyChainKey, encryptedData)\n\t\t} catch (e) {\n\t\t\tif (e instanceof CryptoError) {\n\t\t\t\t// If the key could not be decrypted it means that something went very wrong. We will probably not be able to do anything about it so just\n\t\t\t\t// delete everything.\n\t\t\t\tthrow new KeyPermanentlyInvalidatedError(`Could not decrypt credentials: ${e.stack ?? e.message}`)\n\t\t\t} else {\n\t\t\t\tthrow e\n\t\t\t}\n\t\t}\n\t}\n\n\tasync encryptUsingKeychain(data: Uint8Array, encryptionMode: DesktopCredentialsMode): Promise<Uint8Array> {\n\t\ttry {\n\t\t\tassertSupportedEncryptionMode(encryptionMode)\n\t\t\tconst keyChainKey = await this.desktopKeyStoreFacade.getKeyChainKey()\n\t\t\tconst encryptedData = this.crypto.aes256EncryptKey(keyChainKey, data)\n\t\t\treturn this.appPassHandler.addAppPassWrapper(encryptedData, encryptionMode)\n\t\t} catch (e) {\n\t\t\tif (e instanceof CryptoError) {\n\t\t\t\t// If the key could not be decrypted it means that something went very wrong. We will probably not be able to do anything about it so just\n\t\t\t\t// delete everything.\n\t\t\t\tthrow new KeyPermanentlyInvalidatedError(`Could not encrypt credentials: ${e.stack ?? e.message}`)\n\t\t\t} else {\n\t\t\t\tthrow e\n\t\t\t}\n\t\t}\n\t}\n}\n"]}