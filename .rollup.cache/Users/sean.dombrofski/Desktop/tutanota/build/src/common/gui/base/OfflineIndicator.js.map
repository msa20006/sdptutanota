{"version":3,"file":"OfflineIndicator.js","sourceRoot":"","sources":["../../../../../src/common/gui/base/OfflineIndicator.ts"],"names":[],"mappings":"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","sourcesContent":["import m, { Children, Component, Vnode } from \"mithril\"\nimport { isSameDayOfDate, noOp } from \"@tutao/tutanota-utils\"\nimport { lang } from \"../../misc/LanguageViewModel\"\n\nexport const enum OfflineIndicatorState {\n\tOffline = 0,\n\tConnecting = 1,\n\tSynchronizing = 2,\n\tOnline = 3,\n}\n\nexport type OfflineIndicatorAttrs =\n\t| { state: OfflineIndicatorState.Online; isSingleColumn: boolean }\n\t| { state: OfflineIndicatorState.Connecting; isSingleColumn: boolean }\n\t| { state: OfflineIndicatorState.Synchronizing; progress: number; isSingleColumn: boolean }\n\t| { state: OfflineIndicatorState.Offline; lastUpdate: Date | null; reconnectAction: () => void; isSingleColumn: boolean }\n\n/**\n * the first line of the offline indicator shows if we're offline or online and\n * adds action prompts (if any)\n * it's returned as a span so the consumer can decide how to layout it.\n */\nfunction attrToFirstLine(attr: OfflineIndicatorAttrs): Children {\n\tconst { state } = attr\n\tswitch (state) {\n\t\tcase OfflineIndicatorState.Online:\n\t\tcase OfflineIndicatorState.Synchronizing:\n\t\t\treturn m(\"span\", lang.get(\"online_label\"))\n\t\tcase OfflineIndicatorState.Offline:\n\t\t\treturn m(\"span\", [lang.get(\"offline_label\"), m(\"span.b.content-accent-fg.mlr-s\", lang.get(\"reconnect_action\"))])\n\t\tcase OfflineIndicatorState.Connecting:\n\t\t\treturn m(\"span\", lang.get(\"offline_label\"))\n\t}\n}\n\n/**\n * the second line provides additional information about the current state.\n * it's returned as a span so the consumer can decide how to layout it.\n */\nfunction attrToSecondLine(a: OfflineIndicatorAttrs): Children {\n\tswitch (a.state) {\n\t\tcase OfflineIndicatorState.Online:\n\t\t\treturn m(\"span\", lang.get(\"upToDate_label\"))\n\t\tcase OfflineIndicatorState.Offline:\n\t\t\tif (a.lastUpdate) {\n\t\t\t\treturn m(\"span\", lang.get(\"lastSync_label\", { \"{date}\": formatDate(a.lastUpdate) }))\n\t\t\t} else {\n\t\t\t\t// never synced, don't show last sync label\n\t\t\t\treturn null\n\t\t\t}\n\t\tcase OfflineIndicatorState.Synchronizing:\n\t\t\treturn m(\"span\", lang.get(\"synchronizing_label\", { \"{progress}\": formatPercentage(a.progress) }))\n\t\tcase OfflineIndicatorState.Connecting:\n\t\t\treturn m(\"span\", lang.get(\"reconnecting_label\"))\n\t}\n}\n\n/**\n * format a number as a percentage string with 0 = 0% and 1 = 100%\n */\nfunction formatPercentage(percentage: number): string {\n\treturn `${Math.round(percentage * 100)}%`\n}\n\n/*\n * format a date either as a time without date (if it's today) or\n * as a date without time\n */\nfunction formatDate(date: Date): string {\n\treturn isSameDayOfDate(new Date(), date) ? lang.formats.time.format(date) : lang.formats.simpleDate.format(date)\n}\n\nexport class OfflineIndicator implements Component<OfflineIndicatorAttrs> {\n\tview(vnode: Vnode<OfflineIndicatorAttrs>): Children {\n\t\tconst a = vnode.attrs\n\t\tconst isOffline = a.state === OfflineIndicatorState.Offline\n\t\treturn m(\n\t\t\t\"button.small\",\n\t\t\t{\n\t\t\t\tclass: a.isSingleColumn ? \"center mb-xs\" : \"mlr-l flex col\",\n\t\t\t\ttype: \"button\",\n\t\t\t\thref: \"#\",\n\t\t\t\ttabindex: \"0\",\n\t\t\t\trole: \"button\",\n\t\t\t\t\"aria-disabled\": !isOffline,\n\t\t\t\tonclick: isOffline ? a.reconnectAction : noOp,\n\t\t\t},\n\t\t\ta.isSingleColumn ? attrToFirstLine(a) : [attrToFirstLine(a), attrToSecondLine(a)],\n\t\t)\n\t}\n}\n"]}