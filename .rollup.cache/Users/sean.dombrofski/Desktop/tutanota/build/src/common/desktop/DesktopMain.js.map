{"version":3,"file":"DesktopMain.js","sourceRoot":"","sources":["../../../../src/common/desktop/DesktopMain.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,EAAE,EAAE,MAAM,sBAAsB,CAAA;AACzC,OAAO,EAAE,GAAG,EAAE,MAAM,uBAAuB,CAAA;AAC3C,OAAO,EAAE,aAAa,EAAE,MAAM,wBAAwB,CAAA;AACtD,OAAO,KAAK,QAAQ,MAAM,UAAU,CAAA;AACpC,OAAO,EAAE,GAAG,EAAgB,MAAM,UAAU,CAAA;AAC5C,OAAO,EAAE,YAAY,EAAE,MAAM,gBAAgB,CAAA;AAC7C,OAAO,EAAE,kBAAkB,EAAE,aAAa,EAAE,MAAM,wBAAwB,CAAA;AAC1E,OAAO,EAAE,eAAe,EAAE,MAAM,mBAAmB,CAAA;AACnD,OAAO,EAAE,eAAe,EAAE,MAAM,sBAAsB,CAAA;AACtD,OAAO,EAAE,SAAS,EAAE,MAAM,aAAa,CAAA;AACvC,OAAO,EAAE,mBAAmB,EAAE,MAAM,2BAA2B,CAAA;AAC/D,OAAO,EAAE,qBAAqB,EAAE,MAAM,6BAA6B,CAAA;AACnE,OAAO,EAAE,IAAI,EAAE,MAAM,2BAA2B,CAAA;AAChD,OAAO,EAAE,oBAAoB,EAAE,MAAM,+BAA+B,CAAA;AACpE,OAAO,EAAE,yBAAyB,EAAE,MAAM,6BAA6B,CAAA;AACvE,OAAO,EAAE,WAAW,EAAE,MAAM,oBAAoB,CAAA;AAChD,OAAO,EAAE,GAAG,EAAE,MAAM,cAAc,CAAA;AAClC,OAAO,EAAE,cAAc,EAAE,MAAM,kBAAkB,CAAA;AACjD,OAAO,EAAE,2BAA2B,EAAE,MAAM,sBAAsB,CAAA;AAClE,OAAO,EAAE,uBAAuB,EAAE,wBAAwB,EAAE,MAAM,qBAAqB,CAAA;AACvF,OAAO,EAAE,MAAM,SAAS,CAAA;AACxB,OAAO,EAAqB,+BAA+B,EAAE,MAAM,iCAAiC,CAAA;AACpG,OAAO,GAAG,MAAM,UAAU,CAAA;AAC1B,OAAO,aAAa,MAAM,oBAAoB,CAAA;AAC9C,OAAO,EAAE,oBAAoB,EAAE,MAAM,wCAAwC,CAAA;AAC7E,OAAO,EAAE,SAAS,EAAE,MAAM,aAAa,CAAA;AACvC,OAAO,EAAE,qBAAqB,EAAE,MAAM,2CAA2C,CAAA;AACjF,OAAO,EAAE,qBAAqB,EAAE,MAAM,4BAA4B,CAAA;AAClE,OAAO,EAAE,aAAa,EAAE,MAAM,kCAAkC,CAAA;AAChE,OAAO,EAAE,kBAAkB,EAAE,MAAM,sBAAsB,CAAA;AACzD,OAAO,EAAE,cAAc,EAAE,gBAAgB,EAAE,MAAM,qBAAqB,CAAA;AACtE,OAAO,EAAE,8BAA8B,EAAE,MAAM,iDAAiD,CAAA;AAChG,OAAO,EAAE,mBAAmB,EAAE,MAAM,gBAAgB,CAAA;AACpD,OAAO,IAAI,MAAM,WAAW,CAAA;AAC5B,OAAO,EAAE,kBAAkB,EAAE,MAAM,yBAAyB,CAAA;AAC5D,OAAO,EAAE,uBAAuB,EAAE,MAAM,kCAAkC,CAAA;AAE1E,OAAO,EAAoC,YAAY,EAAiB,MAAM,uBAAuB,CAAA;AACrG,OAAO,EAAE,qBAAqB,EAAE,MAAM,mCAAmC,CAAA;AAEzE,OAAO,EAAE,yBAAyB,EAAE,MAAM,gCAAgC,CAAA;AAC1E,OAAO,EAAE,uBAAuB,EAAE,MAAM,0DAA0D,CAAA;AAClG,OAAO,EAAE,0BAA0B,EAAE,MAAM,iCAAiC,CAAA;AAC5E,OAAO,EAAE,mBAAmB,EAAE,MAAM,iCAAiC,CAAA;AACrE,OAAO,EAAE,iBAAiB,EAAE,MAAM,8BAA8B,CAAA;AAChE,OAAO,EAAE,4BAA4B,EAAE,MAAM,mCAAmC,CAAA;AAChF,OAAO,EAAE,qBAAqB,EAAE,MAAM,gCAAgC,CAAA;AACtE,OAAO,EAAE,uBAAuB,EAAE,MAAM,8BAA8B,CAAA;AACtE,OAAO,EAAE,6BAA6B,EAAE,MAAM,wCAAwC,CAAA;AACtF,OAAO,EAAoB,wBAAwB,EAAE,MAAM,kCAAkC,CAAA;AAC7F,OAAO,EAAE,YAAY,EAAE,MAAM,uBAAuB,CAAA;AACpD,OAAO,GAAG,MAAM,UAAU,CAAA;AAC1B,OAAO,EAAE,aAAa,EAAE,MAAM,wBAAwB,CAAA;AACtD,OAAO,EAAE,mBAAmB,EAAE,MAAM,6BAA6B,CAAA;AACjE,OAAO,EAAE,eAAe,EAAE,MAAM,yBAAyB,CAAA;AACzD,OAAO,EAAE,MAAM,EAAE,MAAM,mBAAmB,CAAA;AAC1C,OAAO,EAAE,UAAU,EAAE,MAAM,iBAAiB,CAAA;AAC5C,OAAO,EAAE,yBAAyB,EAAE,MAAM,mCAAmC,CAAA;AAC7E,OAAO,EAAE,cAAc,EAAE,MAAM,iCAAiC,CAAA;AAChE,OAAO,EAAE,SAAS,EAAE,MAAM,oBAAoB,CAAA;AAC9C,OAAO,EAAE,oBAAoB,EAAE,MAAM,+BAA+B,CAAA;AACpE,OAAO,EAAE,uBAAuB,EAAE,MAAM,kCAAkC,CAAA;AAC1E,OAAO,EAAE,aAAa,EAAE,MAAM,wBAAwB,CAAA;AACtD,OAAO,EAAE,UAAU,EAAE,MAAM,qBAAqB,CAAA;AAChD,OAAO,EAAE,eAAe,EAAE,MAAM,yBAAyB,CAAA;AACzD,OAAO,EAAE,kBAAkB,EAAE,MAAM,qCAAqC,CAAA;AAIxE,OAAO,EAAgB,kBAAkB,EAAE,MAAM,8BAA8B,CAAA;AAC/E,OAAO,EAAE,mBAAmB,EAAE,MAAM,mCAAmC,CAAA;AACvE,OAAO,EAAE,cAAc,EAAE,MAAM,oCAAoC,CAAA;AACnE,OAAO,EAAE,6BAA6B,EAAE,MAAM,wCAAwC,CAAA;AACtF,OAAO,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAA;AAC5C,OAAO,EAAE,uBAAuB,EAAE,MAAM,yCAAyC,CAAA;AACjF,OAAO,EAAE,wBAAwB,EAAE,MAAM,sCAAsC,CAAA;AAC/E,OAAO,EAAE,iBAAiB,EAAE,MAAM,4BAA4B,CAAA;AAE9D,EAAE,EAAE,CAAA;AAEJ,GAAG,CAAC,qBAAqB,CAAC,WAAW,CAAC,CAAA;AAEtC,kBAAkB,CAAC,QAAQ,CAAC,CAAA;AAE5B,MAAM,GAAG,GAAG,eAAe,CAAA;AAgB3B,MAAM,GAAG,GAAG,IAAI,MAAM,CAAC,EAAE,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAA;AAC/C,MAAM,YAAY,GAAG,IAAI,YAAY,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,EAAE,QAAQ,CAAC,CAAA;AAClE,gFAAgF;AAChF,MAAM,UAAU,GAAG,KAAK,IAAI,EAAE;IAC7B,MAAM,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,EAAE,EAAE,kBAAkB,CAAC,CAAA;IAC/E,MAAM,UAAU,GAAW,MAAM,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAA;IACrE,MAAM,EAAE,OAAO,EAAE,GAAG,CAAC,MAAM,WAAW,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC,QAAQ,CAAA;IACxE,OAAO,OAAqC,CAAA;AAC7C,CAAC,CAAA;AACD,MAAM,aAAa,GAAG,IAAI,yBAAyB,CAAC,EAAE,EAAE,SAAS,EAAE,GAAG,EAAE,UAAU,EAAE,CAAC,CAAA;AACrF,MAAM,IAAI,GAAG;IACZ,qBAAqB,EAAE,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,KAAK,IAAI,CAAC;IAC/D,uBAAuB,EAAE,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,KAAK,IAAI,CAAC;IACjE,eAAe,EAAE,OAAO,CAAC,QAAQ,KAAK,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,oBAAoB,EAAE,CAAC,gBAAgB;CACvI,CAAA;AAED,wIAAwI;AACxI,oIAAoI;AACpI,kGAAkG;AAClG,yHAAyH;AACzH,IAAI,IAAI,CAAC,qBAAqB,IAAI,IAAI,CAAC,uBAAuB,EAAE,CAAC;IAChE,OAAO,CAAC,GAAG,CAAC,oCAAoC,CAAC,CAAA;IACjD,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;AACZ,CAAC;KAAM,IAAI,IAAI,CAAC,qBAAqB,EAAE,CAAC;IACvC,uCAAuC;IACvC,YAAY;SACV,sCAAsC,EAAE;SACxC,IAAI,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SACvB,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE;QACZ,GAAG,CAAC,KAAK,CAAC,2DAA2D,EAAE,CAAC,CAAC,CAAA;QACzE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;IACZ,CAAC,CAAC,CAAA;AACJ,CAAC;KAAM,IAAI,IAAI,CAAC,uBAAuB,EAAE,CAAC;IACzC,yCAAyC;IACzC,YAAY;SACV,wCAAwC,EAAE;SAC1C,IAAI,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SACvB,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE;QACZ,GAAG,CAAC,KAAK,CAAC,6DAA6D,EAAE,CAAC,CAAC,CAAA;QAC3E,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;IACZ,CAAC,CAAC,CAAA;AACJ,CAAC;KAAM,CAAC;IACP,gBAAgB,EAAE,CAAC,IAAI,CAAC,eAAe,CAAC,CAAA;AACzC,CAAC;AAED,KAAK,UAAU,gBAAgB;IAC9B,MAAM,EAAE,GAAG,CAAC,MAAM,MAAM,CAAC,mCAAmC,CAAC,CAAC,CAAC,OAAO,CAAA;IACtE,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;IACb,uBAAuB,CAAC,QAAQ,CAAC,CAAA;IACjC,MAAM,aAAa,GAAG,IAAI,wBAAwB,CAAC,QAAQ,EAAE,EAAE,EAAE,IAAI,CAAC,CAAA;IACtE,MAAM,cAAc,GAAG,IAAI,qBAAqB,CAAC,aAAa,EAAE,aAAa,CAAC,CAAA;IAC9E,MAAM,cAAc,GAAG,IAAI,qBAAqB,CAAC,aAAa,EAAE,cAAc,EAAE,QAAQ,CAAC,CAAA;IACzF,MAAM,IAAI,GAAG,IAAI,aAAa,CAAC,cAAc,EAAE,cAAc,EAAE,aAAa,CAAC,CAAA;IAC7E,wCAAwC;IACxC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,UAAU,EAAE,EAAE,cAAc,EAAE,EAAE,CAAC,EAAE,aAAa,CAAC,GAAG,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,WAAW,EAAE,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE;QACnI,OAAO,CAAC,KAAK,CAAC,uBAAuB,EAAE,CAAC,CAAC,CAAA;QACzC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;IAChB,CAAC,CAAC,CAAA;IACF,MAAM,OAAO,GAAG,YAAY,CAAC,aAAa,CAAC,MAAM,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAA;IACxF,MAAM,UAAU,GAAG,IAAI,oBAAoB,EAAE,CAAA;IAC7C,MAAM,IAAI,GAAG,IAAI,SAAS,CAAC,GAAG,EAAE,GAAG,CAAC,CAAA;IACpC,MAAM,IAAI,GAAG,IAAI,WAAW,CAAC,IAAI,CAAC,CAAA;IAClC,MAAM,QAAQ,GAAG,IAAI,eAAe,CAAC,IAAI,EAAE,IAAI,2BAA2B,EAAE,CAAC,CAAA;IAC7E,MAAM,YAAY,GAAG,IAAI,mBAAmB,EAAE,CAAA;IAC9C,MAAM,YAAY,GAAG,IAAI,mBAAmB,CAAC,IAAI,EAAE,aAAa,EAAE,cAAc,CAAC,CAAA;IACjF,MAAM,OAAO,GAAG,IAAI,eAAe,CAAC,IAAI,EAAE,QAAQ,EAAE,aAAa,EAAE,GAAG,EAAE,OAAO,EAAE,IAAI,cAAc,EAAE,EAAE,EAAE,CAAC,CAAA;IAC1G,MAAM,eAAe,GAAG,IAAI,oBAAoB,EAAE,CAAA;IAClD,MAAM,aAAa,GAAG,IAAI,yBAAyB,CAAC,yBAAyB,EAAE,UAAU,CAAC,aAAa,CAAC,EAAE,GAAG,CAAC,CAAA;IAC9G,MAAM,cAAc,GAAG,IAAI,cAAc,CAAC,aAAa,EAAE,IAAI,EAAE,UAAU,EAAE,EAAE,IAAI,EAAE,KAAK,IAAI,EAAE;QAC7F,MAAM,IAAI,GAAG,MAAM,EAAE,CAAC,cAAc,CAAC,IAAI,CAAC,CAAA;QAC1C,OAAO,IAAI,CAAC,kBAAkB,CAAA;IAC/B,CAAC,CAAC,CAAA;IACF,MAAM,eAAe,GAAG,IAAI,kBAAkB,CAAC,cAAc,EAAE,aAAa,EAAE,cAAc,CAAC,CAAA;IAC7F,MAAM,uBAAuB,GAAG,IAAI,8BAA8B,CAAC,aAAa,EAAE,aAAa,EAAE,eAAe,CAAC,CAAA;IAEjH,OAAO,CAAC,2BAA2B,CAAC,GAAG,EAAE;QACxC,KAAK,IAAI,iBAAiB,IAAI,EAAE,CAAC,MAAM,EAAE,EAAE,CAAC;YAC3C,iBAAiB,CAAC,aAAa,CAAC,mBAAmB,EAAE,CAAA;QACtD,CAAC;IACF,CAAC,CAAC,CAAA;IAEF,kEAAkE;IAClE,MAAM,gBAAgB,GAAqB;QAC1C,KAAK,CAAC,MAAM,CAAC,MAAc,EAAE,GAAe,EAAE,QAAiB,IAAI;YAClE,MAAM,EAAE,GAAG,IAAI,eAAe,CAAC,yBAAyB,EAAE,UAAU,CAAC,WAAW,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC,CAAA;YAChG,IAAI,CAAC;gBACJ,MAAM,EAAE,CAAC,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC,CAAA;YAC7B,CAAC;YAAC,OAAO,CAAC,EAAE,CAAC;gBACZ,IAAI,CAAC,KAAK;oBAAE,MAAM,CAAC,CAAA;gBACnB,GAAG,CAAC,KAAK,CAAC,uBAAuB,EAAE,MAAM,CAAC,CAAA;gBAC1C,MAAM,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAA;gBACzB,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,GAAG,EAAE,KAAK,CAAC,CAAA;YACvC,CAAC;YACD,OAAO,EAAE,CAAA;QACV,CAAC;QACD,KAAK,CAAC,MAAM,CAAC,MAAc;YAC1B,GAAG,CAAC,KAAK,CAAC,iBAAiB,EAAE,MAAM,CAAC,CAAA;YACpC,MAAM,MAAM,GAAG,UAAU,CAAC,WAAW,MAAM,EAAE,CAAC,CAAA;YAC9C,mDAAmD;YACnD,iCAAiC;YACjC,MAAM,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,EAAE,EAAE,UAAU,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAA;QAC7D,CAAC;KACD,CAAA;IAED,MAAM,mBAAmB,GAAG,IAAI,mBAAmB,CAAC,gBAAgB,CAAC,CAAA;IACrE,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC,CAAA;IAC/D,MAAM,OAAO,GAAG,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,+BAA+B,CAAA;IAEvE,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,iBAAiB,EAAE,KAAK,EAAE,OAAO,EAAE,EAAE;QACpD,yBAAyB,CAAC,OAAO,EAAE,OAAO,CAAC,CAAA;IAC5C,CAAC,CAAC,CAAA;IAEF,MAAM,iBAAiB,GAAG,IAAI,iBAAiB,EAAE,CAAA;IAEjD,MAAM,EAAE,GAAG,IAAI,aAAa,CAAC,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,eAAe,EAAE,OAAO,CAAC,CAAA;IACtF,MAAM,WAAW,GAAG,IAAI,kBAAkB,CAAC,IAAI,EAAE,EAAE,EAAE,QAAQ,CAAC,WAAW,CAAC,CAAA;IAC1E,MAAM,aAAa,GAAG,IAAI,aAAa,CAAC,YAAY,EAAE,MAAM,EAAE,MAAM,CAAC,CAAA;IACrE,MAAM,cAAc,GAAG,IAAI,cAAc,CAAC,YAAY,EAAE,aAAa,CAAC,CAAA;IACtE,MAAM,qBAAqB,GAAG,IAAI,qBAAqB,CAAC,EAAE,EAAE,QAAQ,EAAE,YAAY,EAAE,aAAa,EAAE,cAAc,CAAC,CAAA;IAClH,qBAAqB,CAAC,aAAa,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE;QACjD,GAAG,CAAC,KAAK,CAAC,6BAA6B,EAAE,CAAC,CAAC,CAAA;QAC3C,OAAO,UAAU,CAAC,gBAAgB,EAAE,CAAA;IACrC,CAAC,CAAC,CAAA;IACF,MAAM,mBAAmB,GAAG,IAAI,mBAAmB,EAAE,CAAA;IAErD,4EAA4E;IAC5E,IAAI,CAAC,EAAE,CAAC,gBAAgB,CAAC,YAAY,EAAE,KAAK,EAAE,KAAc,EAAE,EAAE;QAC/D,IAAI,KAAK,EAAE,CAAC;YACX,MAAM,IAAI,CAAC,MAAM,EAAE,CAAA;YACnB,MAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAA;QAC5B,CAAC;aAAM,CAAC;YACP,IAAI,CAAC,OAAO,EAAE,CAAA;QACf,CAAC;IACF,CAAC,CAAC,CAAA;IAEF,IAAI,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAA;IAEzB,MAAM,UAAU,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,CAAA;IACvC,MAAM,mBAAmB,GAAG,IAAI,uBAAuB,CACtD,EAAE,EACF,uBAAuB,EACvB,UAAU,EACV,QAAQ,EACR,qBAAqB,EACrB,YAAY,EACZ,IAAI,EACJ,oBAAoB,EACpB,GAAG,CAAC,UAAU,EAAE,CAChB,CAAA;IACD,MAAM,SAAS,GAAG,IAAI,SAAS,CAAC,UAAU,EAAE,IAAI,eAAe,EAAE,EAAE,aAAa,CAAC,CAAA;IACjF,MAAM,GAAG,GAAG,IAAI,aAAa,CAAC,UAAU,EAAE,mBAAmB,EAAE,SAAS,EAAE,aAAa,EAAE,GAAG,CAAC,UAAU,EAAE,EAAE,oBAAoB,EAAE,YAAY,CAAC,CAAA;IAC9I,2EAA2E;IAC3E,MAAM,UAAU,GAAG,MAAM,+BAA+B,CAAC,QAAQ,EAAE,EAAE,EAAE,aAAa,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAA;IAE7G,MAAM,SAAS,GAAG;QACjB,GAAG,EAAE,YAAY,CAAC,aAAa,CAAC,SAAS,CAAC;QAC1C,GAAG,EAAE,YAAY,CAAC,aAAa,CAAC,SAAS,CAAC;KAC1C,CAAA;IACD,MAAM,UAAU,GAAG,IAAI,uBAAuB,CAAC,GAAG,EAAE,qBAAqB,EAAE,YAAY,EAAE,UAAU,CAAC,CAAA;IACpG,MAAM,cAAc,GAAG,IAAI,qBAAqB,CAAC,IAAI,EAAE,YAAY,EAAE,UAAU,EAAE,OAAO,EAAE,IAAI,CAAC,CAAA;IAC/F,MAAM,mBAAmB,GAAG,IAAI,uBAAuB,CAAC,QAAQ,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAA;IAEjF,MAAM,iBAAiB,GAAsB,CAAC,MAAyB,EAAE,EAAE;QAC1E,aAAa;QACb,MAAM,MAAM,GAAW,MAAM,CAAC,MAAM,CAAA;QACpC,MAAM,yBAAyB,GAAG,IAAI,yBAAyB,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;QAC/E,MAAM,eAAe,GAAG,IAAI,wBAAwB,CAAC,mBAAmB,CAAC,CAAA;QACzE,MAAM,wBAAwB,GAAG,IAAI,wBAAwB,CAAC,IAAI,CAAC,CAAA;QACnE,MAAM,aAAa,GAAkB;YACpC,KAAK,CAAC,SAAS,CAAC,MAAU;gBACzB,iBAAiB,CAAC,MAAM,CAAC,MAAM,CAAC,CAAA;gBAChC,GAAG,CAAC,KAAK,CAAC,GAAG,EAAE,iCAAiC,MAAM,EAAE,CAAC,CAAA;gBACzD,MAAM,eAAe,CAAC,OAAO,EAAE,CAAA;YAChC,CAAC;SACD,CAAA;QACD,MAAM,UAAU,GAAG,IAAI,uBAAuB,CAC7C,yBAAyB,EACzB,IAAI,0BAA0B,CAAC,EAAE,EAAE,MAAM,EAAE,IAAI,CAAC,EAChD,IAAI,mBAAmB,CAAC,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,wBAAwB,EAAE,EAAE,EAAE,YAAY,EAAE,iBAAiB,CAAC,EAC9H,IAAI,6BAA6B,EAAE,EACnC,IAAI,iBAAiB,CAAC,MAAM,EAAE,IAAI,EAAE,YAAY,EAAE,WAAW,EAAE,QAAQ,EAAE,GAAG,EAAE,EAAE,CAAC,EACjF,IAAI,6BAA6B,CAAC,MAAM,EAAE,EAAE,CAAC,EAC7C,uBAAuB,EACvB,aAAa,EACb,mBAAmB,EACnB,UAAU,EACV,IAAI,4BAA4B,CAAC,MAAM,CAAC,EACxC,cAAc,EACd,eAAe,EACf,WAAW,EACX,IAAI,qBAAqB,CAAC,MAAM,EAAE,mBAAmB,CAAC,CACtD,CAAA;QACD,OAAO,EAAE,yBAAyB,EAAE,aAAa,EAAE,UAAU,EAAE,CAAA;IAChE,CAAC,CAAA;IAED,MAAM,oBAAoB,GAAG,CAAC,MAAyB,EAAiB,EAAE;QACzE,OAAO,kBAAkB,CAAiD;YACzE,gBAAgB,EAAE,YAAY,CAAC,KAAK,IAAI,EAAE,CAAC,IAAI,uBAAuB,CAAC,EAAE,EAAE,GAAG,EAAE,QAAQ,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC;SACrG,CAAC,CAAA;IACH,CAAC,CAAA;IAED,MAAM,YAAY,GAAG,IAAI,YAAY,CAAC,iBAAiB,EAAE,oBAAoB,CAAC,CAAA;IAE9E,MAAM,WAAW,GAAG,IAAI,kBAAkB,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAA;IACxD,EAAE,CAAC,QAAQ,CAAC,WAAW,EAAE,WAAW,EAAE,YAAY,CAAC,CAAA;IACnD,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,CAAC,cAAc,EAAE,EAAE;QACpE,GAAG,CAAC,iBAAiB,CAAC,cAAc,CAAC,CAAA;IACtC,CAAC,CAAC,CAAA;IACF,GAAG,CAAC,KAAK,CAAC,YAAY,EAAE,GAAG,CAAC,UAAU,EAAE,CAAC,CAAA;IACzC,OAAO;QACN,EAAE;QACF,GAAG;QACH,GAAG;QACH,IAAI;QACJ,cAAc,EAAE,cAAc;QAC9B,IAAI;QACJ,QAAQ;QACR,OAAO;QACP,UAAU;QACV,IAAI;QACJ,kBAAkB,EAAE,WAAW;QAC/B,qBAAqB,EAAE,uBAAuB;KAC9C,CAAA;AACF,CAAC;AAED,KAAK,UAAU,eAAe,CAAC,UAAsB;IACpD,MAAM,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,UAAU,CAAA;IACnC,IAAI,CAAC,CAAC,MAAM,YAAY,CAAC,kBAAkB,EAAE,CAAC;QAAE,OAAM;IACtD,GAAG,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,4BAA4B,EAAE,CAAC,CAAC,CAAC,CAAA;IACrE,oHAAoH;IACpH,GAAG,CAAC,EAAE,CAAC,iBAAiB,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,YAAY,CAAC,oBAAoB,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,CAAA;IAC3F,GAAG,CAAC,EAAE,CAAC,UAAU,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE;QAC7B,wBAAwB;QACxB,CAAC,CAAC,cAAc,EAAE,CAAA;QAElB,IAAI,GAAG,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE,CAAC;YAC/B,GAAG,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,YAAY,CAAC,YAAY,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAA;QAC/D,CAAC;IACF,CAAC,CAAC,CAAA;IACF,GAAG,CAAC,EAAE,CAAC,WAAW,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAA;IACtC,MAAM,GAAG,CAAC,SAAS,EAAE,CAAA;IACrB,MAAM,UAAU,CAAC,UAAU,CAAC,CAAA;AAC7B,CAAC;AAED,KAAK,UAAU,UAAU,CAAC,UAAsB;IAC/C,MAAM,EAAE,EAAE,EAAE,cAAc,EAAE,IAAI,EAAE,GAAG,UAAU,CAAA;IAC/C,cAAc,CAAC,YAAY,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE;QACxC,QAAQ,CAAC,MAAM,CAAC,YAAY,CAAC,iCAAiC,EAAE,mDAAmD,CAAC,CAAA;IACrH,CAAC,CAAC,CAAA;IACF,GAAG,CAAC,EAAE,CAAC,mBAAmB,EAAE,KAAK,IAAI,EAAE;QACtC,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC;YACzD,GAAG,CAAC,IAAI,EAAE,CAAA;QACX,CAAC;IACF,CAAC,CAAC,CAAA;IACF,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;IACZ,kGAAkG;IAClG,iEAAiE;IACjE,MAAM,CAAC,GAAG,MAAM,EAAE,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC,IAAI,IAAI,CAAC,eAAe,CAAC,CAAC,CAAA;IAChH,GAAG,CAAC,KAAK,CAAC,yBAAyB,EAAE,GAAG,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC,CAAA;IAC3E,MAAM,IAAI,CAAC,UAAU,CAAC,CAAA;AACvB,CAAC;AAED,KAAK,UAAU,IAAI,CAAC,UAAsB;IACzC,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,kBAAkB,EAAE,GAAG,UAAU,CAAA;IACxF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAA;IAErB,kBAAkB,CAAC,IAAI,EAAE,CAAA;IAEzB,IAAI,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC;QACvC,IAAI,CAAC,WAAW,EAAE,CAAA;IACnB,CAAC;IAED,GAAG,CAAC,KAAK,CAAC,cAAc,CAAC,CAAA;IACzB,GAAG,CAAC,EAAE,CAAC,UAAU,EAAE,GAAG,EAAE;QACvB,QAAQ;QACR,2DAA2D;QAC3D,oDAAoD;QACpD,EAAE,CAAC,cAAc,CAAC,IAAI,CAAC,CAAA;QACvB,IAAI,CAAC,UAAU,EAAE,CAAA;IAClB,CAAC,CAAC,CAAA;IACF,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;IACpB,OAAO,CAAC,KAAK,EAAE,CAAA;IACf,UAAU,CAAC,cAAc,CAAC,EAAE,CAAC,CAAA;IAC7B,MAAM,YAAY,CAAC,YAAY,CAAC,UAAU,CAAC,EAAE,CAAC,CAAA;AAC/C,CAAC;AAED,SAAS,yBAAyB,CAAC,OAAgB,EAAE,OAAe;IACnE,OAAO,GAAG,OAAO,GAAG,gBAAgB,CAAA;IACpC,GAAG,CAAC,KAAK,CAAC,GAAG,EAAE,4BAA4B,EAAE,OAAO,CAAC,CAAA;IACrD,OAAO,CAAC,oCAAoC,CAAC,OAAO,CAAC,CAAA;IACrD,OAAO;SACL,kBAAkB,CAAC,wCAAwC,CAAC;SAC5D,EAAE,CAAC,mCAAmC,EAAE,CAAC,EAAE,EAAE,KAAK,EAAE,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,EAAE,mCAAmC,EAAE,KAAK,CAAC,CAAC;SAClH,EAAE,CAAC,sCAAsC,EAAE,CAAC,EAAE,EAAE,KAAK,EAAE,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,EAAE,sCAAsC,EAAE,KAAK,CAAC,CAAC;SACxH,EAAE,CAAC,wCAAwC,EAAE,CAAC,EAAE,EAAE,KAAK,EAAE,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,EAAE,wCAAwC,EAAE,KAAK,CAAC,CAAC;SAC5H,EAAE,CAAC,wCAAwC,EAAE,CAAC,EAAE,EAAE,KAAK,EAAE,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,EAAE,wCAAwC,EAAE,KAAK,CAAC,CAAC,CAAA;AAC/H,CAAC","sourcesContent":["import { mp } from \"./DesktopMonkeyPatch\"\nimport { err } from \"./DesktopErrorHandler\"\nimport { DesktopConfig } from \"./config/DesktopConfig\"\nimport * as electron from \"electron\"\nimport { app, type Session } from \"electron\"\nimport { DesktopUtils } from \"./DesktopUtils\"\nimport { setupAssetProtocol, WindowManager } from \"./DesktopWindowManager\"\nimport { DesktopNotifier } from \"./DesktopNotifier\"\nimport { ElectronUpdater } from \"./ElectronUpdater.js\"\nimport { Socketeer } from \"./Socketeer\"\nimport { DesktopAlarmStorage } from \"./sse/DesktopAlarmStorage\"\nimport { DesktopAlarmScheduler } from \"./sse/DesktopAlarmScheduler\"\nimport { lang } from \"../misc/LanguageViewModel\"\nimport { DesktopNetworkClient } from \"./net/DesktopNetworkClient.js\"\nimport { DesktopNativeCryptoFacade } from \"./DesktopNativeCryptoFacade\"\nimport { DesktopTray } from \"./tray/DesktopTray\"\nimport { log } from \"./DesktopLog\"\nimport { UpdaterWrapper } from \"./UpdaterWrapper\"\nimport { ElectronNotificationFactory } from \"./NotificatonFactory\"\nimport { preselectGnomeLibsecret, SafeStorageSecretStorage } from \"./sse/SecretStorage\"\nimport fs from \"node:fs\"\nimport { DesktopIntegrator, getDesktopIntegratorForPlatform } from \"./integration/DesktopIntegrator\"\nimport net from \"node:net\"\nimport child_process from \"node:child_process\"\nimport { LocalShortcutManager } from \"./electron-localshortcut/LocalShortcut\"\nimport { cryptoFns } from \"./CryptoFns\"\nimport { DesktopConfigMigrator } from \"./config/migrations/DesktopConfigMigrator\"\nimport { DesktopKeyStoreFacade } from \"./DesktopKeyStoreFacade.js\"\nimport { SchedulerImpl } from \"../api/common/utils/Scheduler.js\"\nimport { DesktopThemeFacade } from \"./DesktopThemeFacade\"\nimport { BuildConfigKey, DesktopConfigKey } from \"./config/ConfigKeys\"\nimport { DesktopNativeCredentialsFacade } from \"./credentials/DesktopNativeCredentialsFacade.js\"\nimport { WebDialogController } from \"./WebDialog.js\"\nimport path from \"node:path\"\nimport { DesktopContextMenu } from \"./DesktopContextMenu.js\"\nimport { DesktopNativePushFacade } from \"./sse/DesktopNativePushFacade.js\"\nimport { NativeCredentialsFacade } from \"../native/common/generatedipc/NativeCredentialsFacade.js\"\nimport { DispatcherFactory, FacadeHandler, RemoteBridge, WindowCleanup } from \"./ipc/RemoteBridge.js\"\nimport { DesktopSettingsFacade } from \"./config/DesktopSettingsFacade.js\"\nimport { ApplicationWindow } from \"./ApplicationWindow.js\"\nimport { DesktopCommonSystemFacade } from \"./DesktopCommonSystemFacade.js\"\nimport { DesktopGlobalDispatcher } from \"../native/common/generatedipc/DesktopGlobalDispatcher.js\"\nimport { DesktopDesktopSystemFacade } from \"./DesktopDesktopSystemFacade.js\"\nimport { DesktopExportFacade } from \"./export/DesktopExportFacade.js\"\nimport { DesktopFileFacade } from \"./files/DesktopFileFacade.js\"\nimport { DesktopSearchTextInAppFacade } from \"./DesktopSearchTextInAppFacade.js\"\nimport { DesktopWebauthnFacade } from \"./2fa/DesktopWebauthnFacade.js\"\nimport { DesktopPostLoginActions } from \"./DesktopPostLoginActions.js\"\nimport { DesktopInterWindowEventFacade } from \"./ipc/DesktopInterWindowEventFacade.js\"\nimport { OfflineDbFactory, PerWindowSqlCipherFacade } from \"./db/PerWindowSqlCipherFacade.js\"\nimport { lazyMemoized } from \"@tutao/tutanota-utils\"\nimport dns from \"node:dns\"\nimport { getConfigFile } from \"./config/ConfigFile.js\"\nimport { OfflineDbRefCounter } from \"./db/OfflineDbRefCounter.js\"\nimport { WorkerSqlCipher } from \"./db/WorkerSqlCipher.js\"\nimport { TempFs } from \"./files/TempFs.js\"\nimport { makeDbPath } from \"./db/DbUtils.js\"\nimport { DesktopCredentialsStorage } from \"./db/DesktopCredentialsStorage.js\"\nimport { AppPassHandler } from \"./credentials/AppPassHandler.js\"\nimport { SseClient } from \"./sse/SseClient.js\"\nimport { suspensionAwareFetch } from \"./net/SuspensionAwareFetch.js\"\nimport { TutaNotificationHandler } from \"./sse/TutaNotificationHandler.js\"\nimport { TutaSseFacade } from \"./sse/TutaSseFacade.js\"\nimport { SseStorage } from \"./sse/SseStorage.js\"\nimport { DesktopSseDelay } from \"./sse/reconnectDelay.js\"\nimport { KeychainEncryption } from \"./credentials/KeychainEncryption.js\"\nimport { Argon2IDExports } from \"@tutao/tutanota-crypto\"\nimport { SqlCipherFacade } from \"../native/common/generatedipc/SqlCipherFacade.js\"\nimport { ExposedNativeInterface } from \"../native/common/NativeInterface.js\"\nimport { DelayedImpls, exposeLocalDelayed } from \"../api/common/WorkerProxy.js\"\nimport { DefaultDateProvider } from \"../calendar/date/CalendarUtils.js\"\nimport { AlarmScheduler } from \"../calendar/date/AlarmScheduler.js\"\nimport { DesktopExternalCalendarFacade } from \"./ipc/DesktopExternalCalendarFacade.js\"\nimport { customFetch } from \"./net/NetAgent\"\nimport { DesktopMailImportFacade } from \"./mailimport/DesktopMailImportFacade.js\"\nimport { MailboxExportPersistence } from \"./export/MailboxExportPersistence.js\"\nimport { DesktopExportLock } from \"./export/DesktopExportLock\"\n\nmp()\n\ndns.setDefaultResultOrder(\"ipv4first\")\n\nsetupAssetProtocol(electron)\n\nconst TAG = \"[DesktopMain]\"\n\ntype Components = {\n\treadonly wm: WindowManager\n\treadonly tfs: TempFs\n\treadonly sse: TutaSseFacade\n\treadonly conf: DesktopConfig\n\treadonly keyStoreFacade: DesktopKeyStoreFacade\n\treadonly notifier: DesktopNotifier\n\treadonly sock: Socketeer\n\treadonly updater: ElectronUpdater\n\treadonly integrator: DesktopIntegrator\n\treadonly tray: DesktopTray\n\treadonly desktopThemeFacade: DesktopThemeFacade\n\treadonly credentialsEncryption: NativeCredentialsFacade\n}\nconst tfs = new TempFs(fs, electron, cryptoFns)\nconst desktopUtils = new DesktopUtils(process.argv, tfs, electron)\n// Argon2 is already built for the web part, we don't need to have another copy.\nconst loadArgon2 = async () => {\n\tconst wasmSourcePath = path.join(electron.app.getAppPath(), \"wasm/argon2.wasm\")\n\tconst wasmSource: Buffer = await fs.promises.readFile(wasmSourcePath)\n\tconst { exports } = (await WebAssembly.instantiate(wasmSource)).instance\n\treturn exports as unknown as Argon2IDExports\n}\nconst desktopCrypto = new DesktopNativeCryptoFacade(fs, cryptoFns, tfs, loadArgon2())\nconst opts = {\n\tregisterAsMailHandler: process.argv.some((arg) => arg === \"-r\"),\n\tunregisterAsMailHandler: process.argv.some((arg) => arg === \"-u\"),\n\twasAutoLaunched: process.platform !== \"darwin\" ? process.argv.some((arg) => arg === \"-a\") : app.getLoginItemSettings().wasOpenedAtLogin,\n}\n\n// In windows we require elevated permissions in order to be able to register/deregister as a mailto handler, since it requires registry\n// modifications. If we don't have admin rights, apparently the easiest way to get them is just to spin up a new instance of the app\n// with admin privileges, and then call DesktopUtils.[un]registerAsMailHandler from that instance.\n// Tutanota isn't a CLI app, so while this functionality is technically available to users, we don't publicise it as such\nif (opts.registerAsMailHandler && opts.unregisterAsMailHandler) {\n\tconsole.log(\"Incompatible options '-r' and '-u'\")\n\tapp.exit(1)\n} else if (opts.registerAsMailHandler) {\n\t//register as mailto handler, then quit\n\tdesktopUtils\n\t\t.doRegisterMailtoOnWin32WithCurrentUser()\n\t\t.then(() => app.exit(0))\n\t\t.catch((e) => {\n\t\t\tlog.error(\"there was a problem with registering as default mail app:\", e)\n\t\t\tapp.exit(1)\n\t\t})\n} else if (opts.unregisterAsMailHandler) {\n\t//unregister as mailto handler, then quit\n\tdesktopUtils\n\t\t.doUnregisterMailtoOnWin32WithCurrentUser()\n\t\t.then(() => app.exit(0))\n\t\t.catch((e) => {\n\t\t\tlog.error(\"there was a problem with unregistering as default mail app:\", e)\n\t\t\tapp.exit(1)\n\t\t})\n} else {\n\tcreateComponents().then(startupInstance)\n}\n\nasync function createComponents(): Promise<Components> {\n\tconst en = (await import(\"../../mail-app/translations/en.js\")).default\n\tlang.init(en)\n\tpreselectGnomeLibsecret(electron)\n\tconst secretStorage = new SafeStorageSecretStorage(electron, fs, path)\n\tconst keyStoreFacade = new DesktopKeyStoreFacade(secretStorage, desktopCrypto)\n\tconst configMigrator = new DesktopConfigMigrator(desktopCrypto, keyStoreFacade, electron)\n\tconst conf = new DesktopConfig(configMigrator, keyStoreFacade, desktopCrypto)\n\t// Fire config loading, dont wait for it\n\tconf.init(getConfigFile(app.getAppPath(), \"package.json\", fs), getConfigFile(app.getPath(\"userData\"), \"conf.json\", fs)).catch((e) => {\n\t\tconsole.error(\"Could not load config\", e)\n\t\tprocess.exit(1)\n\t})\n\tconst appIcon = desktopUtils.getIconByName(await conf.getConst(BuildConfigKey.iconName))\n\tconst desktopNet = new DesktopNetworkClient()\n\tconst sock = new Socketeer(net, app)\n\tconst tray = new DesktopTray(conf)\n\tconst notifier = new DesktopNotifier(tray, new ElectronNotificationFactory())\n\tconst dateProvider = new DefaultDateProvider()\n\tconst alarmStorage = new DesktopAlarmStorage(conf, desktopCrypto, keyStoreFacade)\n\tconst updater = new ElectronUpdater(conf, notifier, desktopCrypto, app, appIcon, new UpdaterWrapper(), fs)\n\tconst shortcutManager = new LocalShortcutManager()\n\tconst credentialsDb = new DesktopCredentialsStorage(__NODE_GYP_better_sqlite3, makeDbPath(\"credentials\"), app)\n\tconst appPassHandler = new AppPassHandler(desktopCrypto, conf, loadArgon2(), lang, async () => {\n\t\tconst last = await wm.getLastFocused(true)\n\t\treturn last.commonNativeFacade\n\t})\n\tconst keychainManager = new KeychainEncryption(appPassHandler, desktopCrypto, keyStoreFacade)\n\tconst nativeCredentialsFacade = new DesktopNativeCredentialsFacade(desktopCrypto, credentialsDb, keychainManager)\n\n\tupdater.setUpdateDownloadedListener(() => {\n\t\tfor (let applicationWindow of wm.getAll()) {\n\t\t\tapplicationWindow.desktopFacade.appUpdateDownloaded()\n\t\t}\n\t})\n\n\t/** functions to create and delete the physical db file on disk */\n\tconst offlineDbFactory: OfflineDbFactory = {\n\t\tasync create(userId: string, key: Uint8Array, retry: boolean = true): Promise<SqlCipherFacade> {\n\t\t\tconst db = new WorkerSqlCipher(__NODE_GYP_better_sqlite3, makeDbPath(`offline_${userId}`), true)\n\t\t\ttry {\n\t\t\t\tawait db.openDb(userId, key)\n\t\t\t} catch (e) {\n\t\t\t\tif (!retry) throw e\n\t\t\t\tlog.debug(\"retrying to create db\", userId)\n\t\t\t\tawait this.delete(userId)\n\t\t\t\treturn this.create(userId, key, false)\n\t\t\t}\n\t\t\treturn db\n\t\t},\n\t\tasync delete(userId: string): Promise<void> {\n\t\t\tlog.debug(\"deleting db for\", userId)\n\t\t\tconst dbPath = makeDbPath(`offline_${userId}`)\n\t\t\t// force to suppress ENOENT which is not a problem.\n\t\t\t// maxRetries should reduce EBUSY\n\t\t\tawait fs.promises.rm(dbPath, { maxRetries: 3, force: true })\n\t\t},\n\t}\n\n\tconst offlineDbRefCounter = new OfflineDbRefCounter(offlineDbFactory)\n\tconst updateUrl = await conf.getConst(BuildConfigKey.updateUrl)\n\tconst dictUrl = updateUrl ? updateUrl : \"https://app.tuta.com/desktop/\"\n\n\telectron.app.on(\"session-created\", async (session) => {\n\t\tmanageDownloadsForSession(session, dictUrl)\n\t})\n\n\tconst desktopExportLock = new DesktopExportLock()\n\n\tconst wm = new WindowManager(conf, tray, notifier, electron, shortcutManager, appIcon)\n\tconst themeFacade = new DesktopThemeFacade(conf, wm, electron.nativeTheme)\n\tconst schedulerImpl = new SchedulerImpl(dateProvider, global, global)\n\tconst alarmScheduler = new AlarmScheduler(dateProvider, schedulerImpl)\n\tconst desktopAlarmScheduler = new DesktopAlarmScheduler(wm, notifier, alarmStorage, desktopCrypto, alarmScheduler)\n\tdesktopAlarmScheduler.rescheduleAll().catch((e) => {\n\t\tlog.error(\"Could not reschedule alarms\", e)\n\t\treturn pushFacade.resetStoredState()\n\t})\n\tconst webDialogController = new WebDialogController()\n\n\t// Insert or remove the icon when the 'run in background' setting is changed\n\tconf.on(DesktopConfigKey.runAsTrayApp, async (value: boolean) => {\n\t\tif (value) {\n\t\t\tawait tray.create()\n\t\t\tawait tray.update(notifier)\n\t\t} else {\n\t\t\ttray.destroy()\n\t\t}\n\t})\n\n\ttray.setWindowManager(wm)\n\n\tconst sseStorage = new SseStorage(conf)\n\tconst notificationHandler = new TutaNotificationHandler(\n\t\twm,\n\t\tnativeCredentialsFacade,\n\t\tsseStorage,\n\t\tnotifier,\n\t\tdesktopAlarmScheduler,\n\t\talarmStorage,\n\t\tlang,\n\t\tsuspensionAwareFetch,\n\t\tapp.getVersion(),\n\t)\n\tconst sseClient = new SseClient(desktopNet, new DesktopSseDelay(), schedulerImpl)\n\tconst sse = new TutaSseFacade(sseStorage, notificationHandler, sseClient, desktopCrypto, app.getVersion(), suspensionAwareFetch, dateProvider)\n\t// It should be ok to await this, all we are waiting for is dynamic imports\n\tconst integrator = await getDesktopIntegratorForPlatform(electron, fs, child_process, () => import(\"winreg\"))\n\n\tconst dragIcons = {\n\t\teml: desktopUtils.getIconByName(\"eml.png\"),\n\t\tmsg: desktopUtils.getIconByName(\"msg.png\"),\n\t}\n\tconst pushFacade = new DesktopNativePushFacade(sse, desktopAlarmScheduler, alarmStorage, sseStorage)\n\tconst settingsFacade = new DesktopSettingsFacade(conf, desktopUtils, integrator, updater, lang)\n\tconst desktopImportFacade = new DesktopMailImportFacade(electron, notifier, lang)\n\n\tconst dispatcherFactory: DispatcherFactory = (window: ApplicationWindow) => {\n\t\t// @ts-ignore\n\t\tconst logger: Logger = global.logger\n\t\tconst desktopCommonSystemFacade = new DesktopCommonSystemFacade(window, logger)\n\t\tconst sqlCipherFacade = new PerWindowSqlCipherFacade(offlineDbRefCounter)\n\t\tconst mailboxExportPersistence = new MailboxExportPersistence(conf)\n\t\tconst windowCleanup: WindowCleanup = {\n\t\t\tasync onCleanup(userId: Id): Promise<void> {\n\t\t\t\tdesktopExportLock.unlock(userId)\n\t\t\t\tlog.debug(TAG, `closing offline db for userId ${userId}`)\n\t\t\t\tawait sqlCipherFacade.closeDb()\n\t\t\t},\n\t\t}\n\t\tconst dispatcher = new DesktopGlobalDispatcher(\n\t\t\tdesktopCommonSystemFacade,\n\t\t\tnew DesktopDesktopSystemFacade(wm, window, sock),\n\t\t\tnew DesktopExportFacade(tfs, electron, conf, window, dragIcons, mailboxExportPersistence, fs, dateProvider, desktopExportLock),\n\t\t\tnew DesktopExternalCalendarFacade(),\n\t\t\tnew DesktopFileFacade(window, conf, dateProvider, customFetch, electron, tfs, fs),\n\t\t\tnew DesktopInterWindowEventFacade(window, wm),\n\t\t\tnativeCredentialsFacade,\n\t\t\tdesktopCrypto,\n\t\t\tdesktopImportFacade,\n\t\t\tpushFacade,\n\t\t\tnew DesktopSearchTextInAppFacade(window),\n\t\t\tsettingsFacade,\n\t\t\tsqlCipherFacade,\n\t\t\tthemeFacade,\n\t\t\tnew DesktopWebauthnFacade(window, webDialogController),\n\t\t)\n\t\treturn { desktopCommonSystemFacade, windowCleanup, dispatcher }\n\t}\n\n\tconst facadeHandlerFactory = (window: ApplicationWindow): FacadeHandler => {\n\t\treturn exposeLocalDelayed<DelayedImpls<ExposedNativeInterface>, \"facade\">({\n\t\t\tpostLoginActions: lazyMemoized(async () => new DesktopPostLoginActions(wm, err, notifier, window.id)),\n\t\t})\n\t}\n\n\tconst remoteBridge = new RemoteBridge(dispatcherFactory, facadeHandlerFactory)\n\n\tconst contextMenu = new DesktopContextMenu(electron, wm)\n\twm.lateInit(contextMenu, themeFacade, remoteBridge)\n\tconf.getConst(BuildConfigKey.appUserModelId).then((appUserModelId) => {\n\t\tapp.setAppUserModelId(appUserModelId)\n\t})\n\tlog.debug(\"version:  \", app.getVersion())\n\treturn {\n\t\twm,\n\t\ttfs,\n\t\tsse,\n\t\tconf,\n\t\tkeyStoreFacade: keyStoreFacade,\n\t\tsock,\n\t\tnotifier,\n\t\tupdater,\n\t\tintegrator,\n\t\ttray,\n\t\tdesktopThemeFacade: themeFacade,\n\t\tcredentialsEncryption: nativeCredentialsFacade,\n\t}\n}\n\nasync function startupInstance(components: Components) {\n\tconst { wm, sse, tfs } = components\n\tif (!(await desktopUtils.cleanupOldInstance())) return\n\tsse.connect().catch((e) => log.warn(\"unable to start sse client\", e))\n\t// The second-instance event fires when we call app.requestSingleInstanceLock inside DesktopUtils.makeSingleInstance\n\tapp.on(\"second-instance\", async (_ev, args) => desktopUtils.handleSecondInstance(wm, args))\n\tapp.on(\"open-url\", (e, url) => {\n\t\t// MacOS mailto handling\n\t\te.preventDefault()\n\n\t\tif (url.startsWith(\"mailto:\")) {\n\t\t\tapp.whenReady().then(() => desktopUtils.handleMailto(wm, url))\n\t\t}\n\t})\n\tapp.on(\"will-quit\", () => tfs.clear())\n\tawait app.whenReady()\n\tawait onAppReady(components)\n}\n\nasync function onAppReady(components: Components) {\n\tconst { wm, keyStoreFacade, conf } = components\n\tkeyStoreFacade.getDeviceKey().catch(() => {\n\t\telectron.dialog.showErrorBox(\"Could not access secret storage\", \"Please see the FAQ at tuta.com/faq/#secretstorage\")\n\t})\n\tapp.on(\"window-all-closed\", async () => {\n\t\tif (!(await conf.getVar(DesktopConfigKey.runAsTrayApp))) {\n\t\t\tapp.quit()\n\t\t}\n\t})\n\terr.init(wm)\n\t// only create a window if there are none (may already have created one, e.g. for mailto handling)\n\t// also don't show the window when we're an autolaunched tray app\n\tconst w = await wm.getLastFocused(!((await conf.getVar(DesktopConfigKey.runAsTrayApp)) && opts.wasAutoLaunched))\n\tlog.debug(\"default mailto handler:\", app.isDefaultProtocolClient(\"mailto\"))\n\tawait main(components)\n}\n\nasync function main(components: Components) {\n\tconst { tray, notifier, sock, wm, updater, integrator, desktopThemeFacade } = components\n\ttray.update(notifier)\n\n\tdesktopThemeFacade.init()\n\n\tif (process.argv.indexOf(\"-s\") !== -1) {\n\t\tsock.startServer()\n\t}\n\n\tlog.debug(\"Webapp ready\")\n\tapp.on(\"activate\", () => {\n\t\t// MacOs\n\t\t// this is fired for almost every interaction and on launch\n\t\t// so set listener later to avoid the call on launch\n\t\twm.getLastFocused(true)\n\t\ttray.clearBadge()\n\t})\n\tnotifier.start(2000)\n\tupdater.start()\n\tintegrator.runIntegration(wm)\n\tawait desktopUtils.handleMailto(components.wm)\n}\n\nfunction manageDownloadsForSession(session: Session, dictUrl: string) {\n\tdictUrl = dictUrl + \"/dictionaries/\"\n\tlog.debug(TAG, \"getting dictionaries from:\", dictUrl)\n\tsession.setSpellCheckerDictionaryDownloadURL(dictUrl)\n\tsession\n\t\t.removeAllListeners(\"spellcheck-dictionary-download-failure\")\n\t\t.on(\"spellcheck-dictionary-initialized\", (ev, lcode) => log.debug(TAG, \"spellcheck-dictionary-initialized\", lcode))\n\t\t.on(\"spellcheck-dictionary-download-begin\", (ev, lcode) => log.debug(TAG, \"spellcheck-dictionary-download-begin\", lcode))\n\t\t.on(\"spellcheck-dictionary-download-success\", (ev, lcode) => log.debug(TAG, \"spellcheck-dictionary-download-success\", lcode))\n\t\t.on(\"spellcheck-dictionary-download-failure\", (ev, lcode) => log.debug(TAG, \"spellcheck-dictionary-download-failure\", lcode))\n}\n"]}