{"version":3,"file":"WebAuthnFacadeSendDispatcher.js","sourceRoot":"","sources":["../../../../../../src/common/native/common/generatedipc/WebAuthnFacadeSendDispatcher.ts"],"names":[],"mappings":"AAAA,iCAAiC;AAOjC,MAAM,OAAO,4BAA4B;IACX;IAA7B,YAA6B,SAA0B;QAA1B,cAAS,GAAT,SAAS,CAAiB;IAAG,CAAC;IAC3D,KAAK,CAAC,QAAQ,CAAC,GAAG,IAA4C;QAC7D,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC,gBAAgB,EAAE,UAAU,EAAE,GAAG,IAAI,CAAC,CAAC,CAAA;IACnF,CAAC;IACD,KAAK,CAAC,IAAI,CAAC,GAAG,IAAwC;QACrD,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC,gBAAgB,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,CAAC,CAAA;IAC/E,CAAC;IACD,KAAK,CAAC,qBAAqB,CAAC,GAAG,IAAyD;QACvF,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC,gBAAgB,EAAE,uBAAuB,EAAE,GAAG,IAAI,CAAC,CAAC,CAAA;IAChG,CAAC;IACD,KAAK,CAAC,WAAW,CAAC,GAAG,IAA+C;QACnE,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC,gBAAgB,EAAE,aAAa,EAAE,GAAG,IAAI,CAAC,CAAC,CAAA;IACtF,CAAC;IACD,KAAK,CAAC,0BAA0B,CAAC,GAAG,IAA8D;QACjG,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC,gBAAgB,EAAE,4BAA4B,EAAE,GAAG,IAAI,CAAC,CAAC,CAAA;IACrG,CAAC;IACD,KAAK,CAAC,8BAA8B,CAAC,GAAG,IAAkE;QACzG,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC,gBAAgB,EAAE,gCAAgC,EAAE,GAAG,IAAI,CAAC,CAAC,CAAA;IACzG,CAAC;CACD","sourcesContent":["/* generated file, don't edit. */\n\nimport { WebAuthnFacade } from \"./WebAuthnFacade.js\"\n\ninterface NativeInterface {\n\tinvokeNative(requestType: string, args: unknown[]): Promise<any>\n}\nexport class WebAuthnFacadeSendDispatcher implements WebAuthnFacade {\n\tconstructor(private readonly transport: NativeInterface) {}\n\tasync register(...args: Parameters<WebAuthnFacade[\"register\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"WebAuthnFacade\", \"register\", ...args])\n\t}\n\tasync sign(...args: Parameters<WebAuthnFacade[\"sign\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"WebAuthnFacade\", \"sign\", ...args])\n\t}\n\tasync abortCurrentOperation(...args: Parameters<WebAuthnFacade[\"abortCurrentOperation\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"WebAuthnFacade\", \"abortCurrentOperation\", ...args])\n\t}\n\tasync isSupported(...args: Parameters<WebAuthnFacade[\"isSupported\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"WebAuthnFacade\", \"isSupported\", ...args])\n\t}\n\tasync canAttemptChallengeForRpId(...args: Parameters<WebAuthnFacade[\"canAttemptChallengeForRpId\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"WebAuthnFacade\", \"canAttemptChallengeForRpId\", ...args])\n\t}\n\tasync canAttemptChallengeForU2FAppId(...args: Parameters<WebAuthnFacade[\"canAttemptChallengeForU2FAppId\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"WebAuthnFacade\", \"canAttemptChallengeForU2FAppId\", ...args])\n\t}\n}\n"]}