{"version":3,"file":"LoginForm.js","sourceRoot":"","sources":["../../../../src/common/login/LoginForm.ts"],"names":[],"mappings":"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","sourcesContent":["import m, { Children, Component, Vnode } from \"mithril\"\nimport stream from \"mithril/stream\"\nimport Stream from \"mithril/stream\"\nimport { liveDataAttrs } from \"../gui/AriaUtils\"\nimport { lang, TranslationKey } from \"../misc/LanguageViewModel.js\"\nimport { Autocomplete, TextField, TextFieldType } from \"../gui/base/TextField.js\"\nimport { Checkbox } from \"../gui/base/Checkbox.js\"\nimport { client } from \"../misc/ClientDetector.js\"\nimport { isApp, isDesktop, isOfflineStorageAvailable } from \"../api/common/Env\"\nimport { LoginButton } from \"../gui/base/buttons/LoginButton.js\"\nimport { PasswordField } from \"../misc/passwords/PasswordField.js\"\nimport { Keys } from \"../api/common/TutanotaConstants\"\nimport { useKeyHandler } from \"../misc/KeyManager.js\"\n\nexport type LoginFormAttrs = {\n\tonSubmit: (username: string, password: string) => unknown\n\tmailAddress: Stream<string>\n\tpassword: Stream<string>\n\tsavePassword?: Stream<boolean>\n\thelpText?: Vnode<any> | string\n\tinvalidCredentials?: boolean\n\tshowRecoveryOption?: boolean\n\taccessExpired?: boolean\n}\n\nexport class LoginForm implements Component<LoginFormAttrs> {\n\tmailAddressTextField!: HTMLInputElement\n\tpasswordTextField!: HTMLInputElement\n\t// When iOS does auto-filling (always in WebView as of iOS 12.2 and in older Safari)\n\t// it only sends one input/change event for all fields so we didn't know if fields\n\t// were updated. So we kindly ask our fields to update themselves with real DOM values.\n\tautofillUpdateHandler!: Stream<void>\n\n\toncreate(vnode: Vnode<LoginFormAttrs>) {\n\t\tconst a = vnode.attrs\n\t\tthis.autofillUpdateHandler = stream.combine(() => {\n\t\t\trequestAnimationFrame(() => {\n\t\t\t\tconst oldAddress = a.mailAddress()\n\t\t\t\tconst newAddress = this.mailAddressTextField.value\n\t\t\t\tconst oldPassword = a.password()\n\t\t\t\tconst newPassword = this.passwordTextField.value\n\t\t\t\t// only update values when they are different or we get stuck in an infinite loop\n\t\t\t\tif (oldAddress !== newAddress && newAddress != \"\") a.mailAddress(newAddress)\n\t\t\t\tif (oldPassword !== newPassword && newPassword != \"\") a.password(newPassword)\n\t\t\t})\n\t\t}, [a.mailAddress, a.password])\n\t}\n\n\tonremove(vnode: Vnode<LoginFormAttrs>) {\n\t\tvnode.attrs.password(\"\")\n\t\tthis.autofillUpdateHandler.end(true)\n\t\tthis.passwordTextField.value = \"\"\n\t}\n\n\tview(vnode: Vnode<LoginFormAttrs>): Children {\n\t\tconst a = vnode.attrs\n\t\tconst canSaveCredentials = client.localStorage()\n\t\tif (a.savePassword && (isApp() || isDesktop())) {\n\t\t\ta.savePassword(true)\n\t\t}\n\t\treturn m(\n\t\t\t\"form\",\n\t\t\t{\n\t\t\t\tonsubmit: (e: SubmitEvent) => {\n\t\t\t\t\t// do not post the form, the form is just here to enable browser auto-fill\n\t\t\t\t\te.preventDefault() // a.onSubmit(a.mailAddress(), a.password())\n\t\t\t\t},\n\t\t\t},\n\t\t\t[\n\t\t\t\tm(\n\t\t\t\t\t\"\",\n\t\t\t\t\tm(TextField, {\n\t\t\t\t\t\tlabel: \"mailAddress_label\" as TranslationKey,\n\t\t\t\t\t\tvalue: a.mailAddress(),\n\t\t\t\t\t\toninput: a.mailAddress,\n\t\t\t\t\t\ttype: TextFieldType.Email,\n\t\t\t\t\t\tautocompleteAs: Autocomplete.email,\n\t\t\t\t\t\tonDomInputCreated: (dom) => {\n\t\t\t\t\t\t\tthis.mailAddressTextField = dom\n\t\t\t\t\t\t\tif (!client.isMobileDevice()) {\n\t\t\t\t\t\t\t\tdom.focus() // have email address auto-focus so the user can immediately type their username (unless on mobile)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tkeyHandler: (key) => {\n\t\t\t\t\t\t\tif (key.key != null && key.key.toLowerCase() === Keys.RETURN.code) {\n\t\t\t\t\t\t\t\ta.onSubmit(a.mailAddress(), a.password())\n\t\t\t\t\t\t\t\t// this is so that when \"Return\" is pressed, the user is logged in\n\t\t\t\t\t\t\t\t// and the password reveal button is not triggered\n\t\t\t\t\t\t\t\treturn false\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn true\n\t\t\t\t\t\t},\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t\tm(\n\t\t\t\t\t\"\",\n\t\t\t\t\tm(PasswordField, {\n\t\t\t\t\t\tvalue: a.password(),\n\t\t\t\t\t\toninput: a.password,\n\t\t\t\t\t\tautocompleteAs: Autocomplete.currentPassword,\n\t\t\t\t\t\tonDomInputCreated: (dom) => (this.passwordTextField = dom),\n\t\t\t\t\t\tkeyHandler: (key) => {\n\t\t\t\t\t\t\tif (key.key != null && key.key.toLowerCase() === Keys.RETURN.code) {\n\t\t\t\t\t\t\t\ta.onSubmit(a.mailAddress(), a.password())\n\t\t\t\t\t\t\t\t// this is so that when \"Return\" is pressed, the user is logged in\n\t\t\t\t\t\t\t\t// and the password reveal button is not triggered\n\t\t\t\t\t\t\t\treturn false\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn true\n\t\t\t\t\t\t},\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t\ta.savePassword\n\t\t\t\t\t? isApp() || isDesktop()\n\t\t\t\t\t\t? m(\"small.block.content-fg\", lang.get(\"dataWillBeStored_msg\"))\n\t\t\t\t\t\t: m(\n\t\t\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tonkeydown: (e: KeyboardEvent) => {\n\t\t\t\t\t\t\t\t\t\tuseKeyHandler(e, (key) => {\n\t\t\t\t\t\t\t\t\t\t\tif (key.key != null && key.key.toLowerCase() === Keys.RETURN.code) {\n\t\t\t\t\t\t\t\t\t\t\t\ta.onSubmit(a.mailAddress(), a.password())\n\t\t\t\t\t\t\t\t\t\t\t\t// this is so that when \"Return\" is pressed, the user is logged in\n\t\t\t\t\t\t\t\t\t\t\t\t// and the password reveal button is not triggered\n\t\t\t\t\t\t\t\t\t\t\t\te.preventDefault()\n\t\t\t\t\t\t\t\t\t\t\t\treturn false\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\treturn false\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tm(Checkbox, {\n\t\t\t\t\t\t\t\t\tlabel: () => lang.get(\"storePassword_action\"),\n\t\t\t\t\t\t\t\t\tchecked: a.savePassword(),\n\t\t\t\t\t\t\t\t\tonChecked: a.savePassword,\n\t\t\t\t\t\t\t\t\thelpLabel: canSaveCredentials\n\t\t\t\t\t\t\t\t\t\t? lang.makeTranslation(\n\t\t\t\t\t\t\t\t\t\t\t\t\"onlyPrivateComputer_msg\",\n\t\t\t\t\t\t\t\t\t\t\t\tlang.get(\"onlyPrivateComputer_msg\") +\n\t\t\t\t\t\t\t\t\t\t\t\t\t(isOfflineStorageAvailable() ? \"\\n\" + lang.get(\"dataWillBeStored_msg\") : \"\"),\n\t\t\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t\t\t\t: \"functionNotSupported_msg\",\n\t\t\t\t\t\t\t\t\tdisabled: !canSaveCredentials,\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t  )\n\t\t\t\t\t: null,\n\t\t\t\tm(\n\t\t\t\t\t\".pt\",\n\t\t\t\t\tm(LoginButton, {\n\t\t\t\t\t\tlabel: isApp() || isDesktop() ? \"addAccount_action\" : \"login_action\",\n\t\t\t\t\t\tonclick: () => a.onSubmit(a.mailAddress(), a.password()),\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t\tm(\n\t\t\t\t\t\"p.center.statusTextColor.mt-s\",\n\t\t\t\t\t{\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t// browser reset\n\t\t\t\t\t\t\tmarginBottom: 0,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tm(\"small\", liveDataAttrs(), [\n\t\t\t\t\t\ta.helpText ? a.helpText : null,\n\t\t\t\t\t\t\" \",\n\t\t\t\t\t\ta.invalidCredentials && a.showRecoveryOption\n\t\t\t\t\t\t\t? m(\n\t\t\t\t\t\t\t\t\t\"a\",\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\thref: \"/recover\",\n\t\t\t\t\t\t\t\t\t\tonclick: (e: MouseEvent) => {\n\t\t\t\t\t\t\t\t\t\t\tm.route.set(\"/recover\", {\n\t\t\t\t\t\t\t\t\t\t\t\tmailAddress: a.mailAddress(),\n\t\t\t\t\t\t\t\t\t\t\t\tresetAction: \"password\",\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\te.preventDefault()\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tlang.get(\"recoverAccountAccess_action\"),\n\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t: a.accessExpired && a.accessExpired\n\t\t\t\t\t\t\t? m(\n\t\t\t\t\t\t\t\t\t\"a\",\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t// We import the dialog directly rather than redirecting to /recover here in order to not pass the password in plaintext via the URL\n\t\t\t\t\t\t\t\t\t\thref: \"#\",\n\t\t\t\t\t\t\t\t\t\tonclick: (e: MouseEvent) => {\n\t\t\t\t\t\t\t\t\t\t\timport(\"./recover/TakeOverDeletedAddressDialog.js\").then(({ showTakeOverDialog }) =>\n\t\t\t\t\t\t\t\t\t\t\t\tshowTakeOverDialog(a.mailAddress(), a.password()),\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\te.preventDefault()\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tlang.get(\"help_label\"),\n\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t: null,\n\t\t\t\t\t]),\n\t\t\t\t),\n\t\t\t],\n\t\t)\n\t}\n}\n"]}