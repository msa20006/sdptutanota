{"version":3,"file":"SetDomainCertificateDialog.js","sourceRoot":"","sources":["../../../../src/common/settings/SetDomainCertificateDialog.ts"],"names":[],"mappings":"AAAA,OAAO,CAAC,MAAM,SAAS,CAAA;AAEvB,OAAO,EAAE,MAAM,EAAE,MAAM,uBAAuB,CAAA;AAC9C,OAAO,EAAE,gBAAgB,EAAE,WAAW,EAAE,uBAAuB,EAAE,MAAM,kCAAkC,CAAA;AACzG,OAAO,EAAE,kBAAkB,EAAE,MAAM,kCAAkC,CAAA;AACrE,OAAO,EAAE,YAAY,EAAE,MAAM,4BAA4B,CAAA;AACzD,OAAO,MAAM,MAAM,gBAAgB,CAAA;AAEnC,OAAO,EAAE,SAAS,EAAE,MAAM,0BAA0B,CAAA;AACpD,OAAO,EAAE,OAAO,EAAE,MAAM,uBAAuB,CAAA;AAC/C,OAAO,EAAE,OAAO,EAAE,MAAM,8BAA8B,CAAA;AACtD,OAAO,EAAE,gBAAgB,EAAE,MAAM,sBAAsB,CAAA;AACvD,OAAO,EAAE,uBAAuB,EAAE,MAAM,sCAAsC,CAAA;AAE9E,gBAAgB,EAAE,CAAA;AAElB,SAAS,0BAA0B,CAAC,MAAc,EAAE,MAAc;IACjE,kBAAkB,CACjB,gBAAgB,EAChB,OAAO,CAAC,cAAc;SACpB,0BAA0B,CAAC,MAAM,CAAC;SAClC,IAAI,CAAC,GAAG,EAAE;QACV,MAAM,CAAC,KAAK,EAAE,CAAA;IACf,CAAC,CAAC;SACD,KAAK,CACL,OAAO,CAAC,gBAAgB,EAAE,CAAC,CAAC,EAAE,EAAE;QAC/B,MAAM,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAA;IACvC,CAAC,CAAC,CACF;SACA,KAAK,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,0BAA0B,CAAC,CAAC,CAAC;SAC9E,KAAK,CACL,OAAO,CAAC,uBAAuB,EAAE,CAAC,CAAC,EAAE,EAAE;QACtC,QAAQ,CAAC,CAAC,IAAI,EAAE,CAAC;YAChB,KAAK,aAAa;gBACjB,MAAM,CAAC,OAAO,CAAC,0BAA0B,CAAC,CAAA;gBAC1C,MAAK;YAEN,KAAK,sBAAsB;gBAC1B,MAAM,CAAC,OAAO,CAAC,wBAAwB,CAAC,CAAA;gBACxC,MAAK;YAEN,KAAK,wBAAwB;gBAC5B,MAAM,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAA;gBACnC,MAAK;YAEN,KAAK,gBAAgB,CAAC;YACtB,KAAK,eAAe;gBACnB,MAAM,CAAC,OAAO,CAAC,yCAAyC,CAAC,CAAA;gBACzD,MAAK;YAEN;gBACC,MAAM,CAAC,CAAA;QACT,CAAC;IACF,CAAC,CAAC,CACF,CACF,CAAA;AACF,CAAC;AAED,MAAM,UAAU,IAAI,CAAC,YAA0B;IAC9C,sHAAsH;IACtH,MAAM,oBAAoB,GAAG,uBAAuB,CAAC,YAAY,CAAC,CAAA;IAClE,MAAM,MAAM,GAAG,oBAAoB,CAAC,CAAC,CAAC,MAAM,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAA;IACtF,IAAI,IAAI,GAAG;QACV,IAAI,EAAE,GAAG,EAAE;YACV,OAAO,CAAC,CAAC,SAAS,EAAE;gBACnB,KAAK,EAAE,wBAAwB;gBAC/B,KAAK,EAAE,MAAM,EAAE;gBACf,OAAO,EAAE,MAAM;gBACf,UAAU,EAAE,oBAAoB,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK;aAC/C,CAAC,CAAA;QACH,CAAC;KACD,CAAA;IACD,IAAI,MAAM,GAAG,MAAM,CAAC,gBAAgB,CAAC;QACpC,KAAK,EAAE,wBAAwB;QAC/B,KAAK,EAAE,IAAI;QACX,QAAQ,EAAE,GAAG,EAAE;YACd,MAAM,kBAAkB,GAAG,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAA;YAExD,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,kBAAkB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;gBACnF,MAAM,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAA;YACpC,CAAC;iBAAM,IAAI,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,gBAAgB,IAAI,EAAE,CAAC,MAAM,KAAK,kBAAkB,CAAC,EAAE,CAAC;gBAC5G,MAAM,CAAC,OAAO,CAAC,yCAAyC,CAAC,CAAA;YAC1D,CAAC;iBAAM,CAAC;gBACP,0BAA0B,CAAC,kBAAkB,EAAE,MAAM,CAAC,CAAA;YACvD,CAAC;QACF,CAAC;KACD,CAAC,CAAA;AACH,CAAC","sourcesContent":["import m from \"mithril\"\nimport { lang } from \"../misc/LanguageViewModel.js\"\nimport { Dialog } from \"../gui/base/Dialog.js\"\nimport { InvalidDataError, LockedError, PreconditionFailedError } from \"../api/common/error/RestError.js\"\nimport { showProgressDialog } from \"../gui/dialogs/ProgressDialog.js\"\nimport { isDomainName } from \"../misc/FormatValidator.js\"\nimport stream from \"mithril/stream\"\nimport type { CustomerInfo } from \"../api/entities/sys/TypeRefs.js\"\nimport { TextField } from \"../gui/base/TextField.js\"\nimport { ofClass } from \"@tutao/tutanota-utils\"\nimport { locator } from \"../api/main/CommonLocator.js\"\nimport { assertMainOrNode } from \"../api/common/Env.js\"\nimport { getWhitelabelDomainInfo } from \"../api/common/utils/CustomerUtils.js\"\n\nassertMainOrNode()\n\nfunction orderWhitelabelCertificate(domain: string, dialog: Dialog) {\n\tshowProgressDialog(\n\t\t\"pleaseWait_msg\",\n\t\tlocator.customerFacade\n\t\t\t.orderWhitelabelCertificate(domain)\n\t\t\t.then(() => {\n\t\t\t\tdialog.close()\n\t\t\t})\n\t\t\t.catch(\n\t\t\t\tofClass(InvalidDataError, (e) => {\n\t\t\t\t\tDialog.message(\"certificateError_msg\")\n\t\t\t\t}),\n\t\t\t)\n\t\t\t.catch(ofClass(LockedError, (e) => Dialog.message(\"operationStillActive_msg\")))\n\t\t\t.catch(\n\t\t\t\tofClass(PreconditionFailedError, (e) => {\n\t\t\t\t\tswitch (e.data) {\n\t\t\t\t\t\tcase \"lock.locked\":\n\t\t\t\t\t\t\tDialog.message(\"operationStillActive_msg\")\n\t\t\t\t\t\t\tbreak\n\n\t\t\t\t\t\tcase \"domain.invalid_cname\":\n\t\t\t\t\t\t\tDialog.message(\"invalidCnameRecord_msg\")\n\t\t\t\t\t\t\tbreak\n\n\t\t\t\t\t\tcase \"domain.not_a_subdomain\":\n\t\t\t\t\t\t\tDialog.message(\"notASubdomain_msg\")\n\t\t\t\t\t\t\tbreak\n\n\t\t\t\t\t\tcase \"domain.invalid\":\n\t\t\t\t\t\tcase \"domain.exists\":\n\t\t\t\t\t\t\tDialog.message(\"customDomainErrorDomainNotAvailable_msg\")\n\t\t\t\t\t\t\tbreak\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthrow e\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t),\n\t)\n}\n\nexport function show(customerInfo: CustomerInfo): void {\n\t// only show a dropdown if a domain is already selected for tutanota login or if there is exactly one domain available\n\tconst whitelabelDomainInfo = getWhitelabelDomainInfo(customerInfo)\n\tconst domain = whitelabelDomainInfo ? stream(whitelabelDomainInfo.domain) : stream(\"\")\n\tlet form = {\n\t\tview: () => {\n\t\t\treturn m(TextField, {\n\t\t\t\tlabel: \"whitelabelDomain_label\",\n\t\t\t\tvalue: domain(),\n\t\t\t\toninput: domain,\n\t\t\t\tisReadOnly: whitelabelDomainInfo ? true : false,\n\t\t\t})\n\t\t},\n\t}\n\tlet dialog = Dialog.showActionDialog({\n\t\ttitle: \"whitelabelDomain_label\",\n\t\tchild: form,\n\t\tokAction: () => {\n\t\t\tconst domainAllLowercase = domain().trim().toLowerCase()\n\n\t\t\tif (!isDomainName(domainAllLowercase) || domainAllLowercase.split(\".\").length < 3) {\n\t\t\t\tDialog.message(\"notASubdomain_msg\")\n\t\t\t} else if (customerInfo.domainInfos.some((di) => !di.whitelabelConfig && di.domain === domainAllLowercase)) {\n\t\t\t\tDialog.message(\"customDomainErrorDomainNotAvailable_msg\")\n\t\t\t} else {\n\t\t\t\torderWhitelabelCertificate(domainAllLowercase, dialog)\n\t\t\t}\n\t\t},\n\t})\n}\n"]}