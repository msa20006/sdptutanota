{"version":3,"file":"CommonNativeFacadeReceiveDispatcher.js","sourceRoot":"","sources":["../../../../../../src/common/native/common/generatedipc/CommonNativeFacadeReceiveDispatcher.ts"],"names":[],"mappings":"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","sourcesContent":["/* generated file, don't edit. */\n\nimport { CommonNativeFacade } from \"./CommonNativeFacade.js\"\n\nexport class CommonNativeFacadeReceiveDispatcher {\n\tconstructor(private readonly facade: CommonNativeFacade) {}\n\tasync dispatch(method: string, arg: Array<any>): Promise<any> {\n\t\tswitch (method) {\n\t\t\tcase \"createMailEditor\": {\n\t\t\t\tconst filesUris: ReadonlyArray<string> = arg[0]\n\t\t\t\tconst text: string = arg[1]\n\t\t\t\tconst addresses: ReadonlyArray<string> = arg[2]\n\t\t\t\tconst subject: string = arg[3]\n\t\t\t\tconst mailToUrlString: string = arg[4]\n\t\t\t\treturn this.facade.createMailEditor(filesUris, text, addresses, subject, mailToUrlString)\n\t\t\t}\n\t\t\tcase \"openMailBox\": {\n\t\t\t\tconst userId: string = arg[0]\n\t\t\t\tconst address: string = arg[1]\n\t\t\t\tconst requestedPath: string | null = arg[2]\n\t\t\t\treturn this.facade.openMailBox(userId, address, requestedPath)\n\t\t\t}\n\t\t\tcase \"openCalendar\": {\n\t\t\t\tconst userId: string = arg[0]\n\t\t\t\treturn this.facade.openCalendar(userId)\n\t\t\t}\n\t\t\tcase \"openContactEditor\": {\n\t\t\t\tconst contactId: string = arg[0]\n\t\t\t\treturn this.facade.openContactEditor(contactId)\n\t\t\t}\n\t\t\tcase \"showAlertDialog\": {\n\t\t\t\tconst translationKey: string = arg[0]\n\t\t\t\treturn this.facade.showAlertDialog(translationKey)\n\t\t\t}\n\t\t\tcase \"invalidateAlarms\": {\n\t\t\t\treturn this.facade.invalidateAlarms()\n\t\t\t}\n\t\t\tcase \"updateTheme\": {\n\t\t\t\treturn this.facade.updateTheme()\n\t\t\t}\n\t\t\tcase \"promptForNewPassword\": {\n\t\t\t\tconst title: string = arg[0]\n\t\t\t\tconst oldPassword: string | null = arg[1]\n\t\t\t\treturn this.facade.promptForNewPassword(title, oldPassword)\n\t\t\t}\n\t\t\tcase \"promptForPassword\": {\n\t\t\t\tconst title: string = arg[0]\n\t\t\t\treturn this.facade.promptForPassword(title)\n\t\t\t}\n\t\t\tcase \"handleFileImport\": {\n\t\t\t\tconst filesUris: ReadonlyArray<string> = arg[0]\n\t\t\t\treturn this.facade.handleFileImport(filesUris)\n\t\t\t}\n\t\t\tcase \"openSettings\": {\n\t\t\t\tconst path: string = arg[0]\n\t\t\t\treturn this.facade.openSettings(path)\n\t\t\t}\n\t\t}\n\t}\n}\n"]}