{"version":3,"file":"DesktopIntegratorLinux.js","sourceRoot":"","sources":["../../../../../src/common/desktop/integration/DesktopIntegratorLinux.ts"],"names":[],"mappings":"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","sourcesContent":["import path from \"node:path\"\nimport { lang } from \"../../misc/LanguageViewModel\"\nimport type { WindowManager } from \"../DesktopWindowManager\"\nimport { log } from \"../DesktopLog\"\nimport type { DesktopIntegrator } from \"./DesktopIntegrator\"\nimport { ChildProcessExports, ElectronExports, FsExports } from \"../ElectronExportTypes\"\nimport { ExecFileException } from \"node:child_process\"\n\nexport class DesktopIntegratorLinux implements DesktopIntegrator {\n\t_electron: ElectronExports\n\t_fs: FsExports\n\t_childProcess: ChildProcessExports\n\tDATA_HOME: string\n\tCONFIG_HOME: string\n\texecutablePath: string\n\tpackagePath: string\n\tautoLaunchPath: string\n\tdesktopFilePath: string\n\ticonTargetDir64: string\n\ticonTargetDir512: string\n\ticonTargetPath64: string\n\ticonTargetPath512: string\n\ticonSourcePath64: string\n\ticonSourcePath512: string\n\tnointegrationpath: string\n\n\tconstructor(electron: ElectronExports, fs: FsExports, childProcess: ChildProcessExports) {\n\t\tthis._electron = electron\n\t\tthis._fs = fs\n\t\tthis._childProcess = childProcess\n\t\tconst { app } = electron\n\t\tthis.DATA_HOME = process.env.XDG_DATA_HOME || path.join(app.getPath(\"home\"), \".local/share\")\n\t\tthis.CONFIG_HOME = process.env.XDG_CONFIG_HOME || path.join(app.getPath(\"home\"), \".config\")\n\t\tthis.executablePath = process.execPath\n\t\tthis.packagePath = process.env.APPIMAGE ? process.env.APPIMAGE : process.execPath\n\t\tthis.autoLaunchPath = path.join(this.CONFIG_HOME, `autostart/${app.name}.desktop`)\n\t\tthis.desktopFilePath = path.join(this.DATA_HOME, `applications/${app.name}.desktop`)\n\t\tthis.iconTargetDir64 = path.join(this.DATA_HOME, `icons/hicolor/64x64/apps/`)\n\t\tthis.iconTargetDir512 = path.join(this.DATA_HOME, `icons/hicolor/512x512/apps/`)\n\t\tthis.iconTargetPath64 = path.join(this.iconTargetDir64, `${app.name}.png`)\n\t\tthis.iconTargetPath512 = path.join(this.iconTargetDir512, `${app.name}.png`)\n\t\tthis.iconSourcePath64 = path.join(path.dirname(this.executablePath), `resources/icons/logo-solo-red-small.png`)\n\t\tthis.iconSourcePath512 = path.join(path.dirname(this.executablePath), `resources/icons/logo-solo-red.png`)\n\t\tthis.nointegrationpath = path.join(this.CONFIG_HOME, \"tuta_integration/no_integration\")\n\t}\n\n\tisAutoLaunchEnabled(): Promise<boolean> {\n\t\treturn this.checkFileIsThere(this.autoLaunchPath)\n\t}\n\n\tisIntegrated(): Promise<boolean> {\n\t\treturn this.checkFileIsThere(this.desktopFilePath)\n\t}\n\n\tcheckFileIsThere(pathToCheck: string): Promise<boolean> {\n\t\treturn this._fs.promises\n\t\t\t.access(pathToCheck, this._fs.constants.F_OK | this._fs.constants.W_OK | this._fs.constants.R_OK)\n\t\t\t.then(() => true)\n\t\t\t.catch(() => false)\n\t}\n\n\tenableAutoLaunch(): Promise<void> {\n\t\treturn this.isAutoLaunchEnabled().then((enabled) => {\n\t\t\tif (enabled) return\n\t\t\tconst autoLaunchDesktopEntry = `[Desktop Entry]\n\tType=Application\n\tVersion=${this._electron.app.getVersion()}\n\tName=${this._electron.app.name}\n\tComment=${this._electron.app.name} startup script\n\tExec=${this.packagePath} -a\n\tStartupNotify=false\n\tTerminal=false`\n\n\t\t\tthis._fs.mkdirSync(path.dirname(this.autoLaunchPath), {\n\t\t\t\trecursive: true,\n\t\t\t})\n\n\t\t\tthis._fs.writeFileSync(this.autoLaunchPath, autoLaunchDesktopEntry, {\n\t\t\t\tencoding: \"utf-8\",\n\t\t\t})\n\t\t})\n\t}\n\n\tdisableAutoLaunch(): Promise<void> {\n\t\treturn this.isAutoLaunchEnabled()\n\t\t\t.then((enabled) => (enabled ? this._fs.promises.unlink(this.autoLaunchPath) : Promise.resolve()))\n\t\t\t.catch((e) => {\n\t\t\t\t// don't throw if file not found\n\t\t\t\tif (e.code !== \"ENOENT\") throw e\n\t\t\t})\n\t}\n\n\tasync runIntegration(wm: WindowManager): Promise<void> {\n\t\tif (this.executablePath.includes(\"node_modules/electron/dist/electron\")) return\n\t\tconst integrated = await this.isIntegrated()\n\n\t\tif (integrated) {\n\t\t\tlog.debug(`desktop file exists, checking version...`)\n\t\t\tconst desktopEntryVersion = this.getDesktopEntryVersion()\n\n\t\t\tif (desktopEntryVersion !== this._electron.app.getVersion()) {\n\t\t\t\tlog.debug(\"version mismatch, reintegrating...\")\n\t\t\t\treturn this.integrate()\n\t\t\t}\n\t\t} else {\n\t\t\tlog.debug(`${this.desktopFilePath} does not exist, checking for permission to ask for permission...`)\n\t\t\tconst isThere = await this.checkFileIsThere(this.nointegrationpath)\n\n\t\t\tif (isThere) {\n\t\t\t\tconst forbiddenPaths = this._fs\n\t\t\t\t\t.readFileSync(this.nointegrationpath, {\n\t\t\t\t\t\tencoding: \"utf8\",\n\t\t\t\t\t\tflag: \"r\",\n\t\t\t\t\t})\n\t\t\t\t\t.trim()\n\t\t\t\t\t.split(\"\\n\")\n\n\t\t\t\tif (!forbiddenPaths.includes(this.packagePath)) {\n\t\t\t\t\treturn this.askPermission()\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn this.askPermission()\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * returns the version number from the desktop file\n\t * @returns {*}\n\t */\n\tgetDesktopEntryVersion(): string {\n\t\tconst versionLine =\n\t\t\tthis._fs\n\t\t\t\t.readFileSync(this.desktopFilePath, \"utf8\")\n\t\t\t\t.split(\"\\n\")\n\t\t\t\t.find((s) => s.includes(\"X-Tutanota-Version\")) || \"=0.0.0\"\n\t\treturn versionLine.split(\"=\")[1]\n\t}\n\n\tintegrate(): Promise<void> {\n\t\tconst prefix = this._electron.app.name.includes(\"test\") ? \"test \" : \"\"\n\t\treturn this.copyIcons()\n\t\t\t.then(() => this.createDesktopEntry(prefix))\n\t\t\t.then(() => {\n\t\t\t\tif (process.env[\"XDG_CURRENT_DESKTOP\"] !== \"GNOME\") return\n\n\t\t\t\ttry {\n\t\t\t\t\tthis._childProcess.execFile(\n\t\t\t\t\t\t\"update-desktop-database\",\n\t\t\t\t\t\t[path.join(this._electron.app.getPath(\"home\"), \".local/share/applications\")],\n\t\t\t\t\t\tlogExecFile,\n\t\t\t\t\t)\n\t\t\t\t} catch (e) {\n\t\t\t\t\t/* empty */\n\t\t\t\t}\n\t\t\t})\n\t}\n\n\tunintegrate(): Promise<void> {\n\t\treturn Promise.all([this._fs.promises.unlink(this.iconTargetPath64), this._fs.promises.unlink(this.iconTargetPath512)])\n\t\t\t.catch((e) => {\n\t\t\t\tif (!e.message.startsWith(\"ENOENT\")) {\n\t\t\t\t\tthrow e\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(() => this._fs.promises.unlink(this.desktopFilePath))\n\t\t\t.catch((e) => {\n\t\t\t\tif (!e.message.startsWith(\"ENOENT\")) {\n\t\t\t\t\tthrow e\n\t\t\t\t}\n\t\t\t})\n\t}\n\n\tcreateDesktopEntry(prefix: string): Promise<void> {\n\t\tconst desktopEntry = `[Desktop Entry]\nName=${prefix}Tuta Mail\nComment=The desktop client for Tuta Mail, the secure e-mail service.\nGenericName=Mail Client\nKeywords=Email;E-mail\nExec=\"${this.packagePath}\" %U\nTerminal=false\nType=Application\nIcon=${this._electron.app.name}\nStartupWMClass=${this._electron.app.name}\nMimeType=x-scheme-handler/mailto;\nCategories=Network;\nX-Tutanota-Version=${this._electron.app.getVersion()}\nTryExec=${this.packagePath}`\n\t\treturn this._fs.promises\n\t\t\t.mkdir(path.dirname(this.desktopFilePath), {\n\t\t\t\trecursive: true,\n\t\t\t})\n\t\t\t.then(() =>\n\t\t\t\tthis._fs.promises.writeFile(this.desktopFilePath, desktopEntry, {\n\t\t\t\t\tencoding: \"utf-8\",\n\t\t\t\t}),\n\t\t\t)\n\t}\n\n\tcopyIcons(): Promise<void> {\n\t\treturn Promise.all([\n\t\t\tthis._fs.promises.mkdir(this.iconTargetDir64, {\n\t\t\t\trecursive: true,\n\t\t\t}),\n\t\t\tthis._fs.promises.mkdir(this.iconTargetDir512, {\n\t\t\t\trecursive: true,\n\t\t\t}),\n\t\t])\n\t\t\t.then(() => {\n\t\t\t\treturn Promise.all([\n\t\t\t\t\tthis._fs.promises.copyFile(this.iconSourcePath64, this.iconTargetPath64),\n\t\t\t\t\tthis._fs.promises.copyFile(this.iconSourcePath512, this.iconTargetPath512),\n\t\t\t\t])\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\ttry {\n\t\t\t\t\t// refresh icon cache (update last modified timestamp)\n\t\t\t\t\tthis._childProcess.execFile(\"touch\", [path.join(this._electron.app.getPath(\"home\"), \".local/share/icons/hicolor\")], logExecFile)\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// it's ok if this fails for some reason, the icons will appear after a reboot at the latest\n\t\t\t\t}\n\t\t\t})\n\t}\n\n\t/**\n\t * asks the user for permission to integrate.\n\t * also gives the option to opt-out indefinitely, which\n\t * records the current path to the appImage in\n\t * ~/.config/tuta_integration/no_integration\n\t */\n\tasync askPermission(): Promise<void> {\n\t\tconst { response, checkboxChecked } = await this._electron.dialog.showMessageBox({\n\t\t\ttitle: lang.get(\"desktopIntegration_label\"),\n\t\t\tbuttons: [lang.get(\"no_label\"), lang.get(\"yes_label\")],\n\t\t\tdefaultId: 1,\n\t\t\tmessage: lang.get(\"desktopIntegration_msg\"),\n\t\t\tcheckboxLabel: lang.get(\"doNotAskAgain_label\"),\n\t\t\tcheckboxChecked: false,\n\t\t\ttype: \"question\",\n\t\t})\n\n\t\tif (checkboxChecked) {\n\t\t\tlog.debug(\"updating no_integration blacklist...\")\n\t\t\tawait this._fs.promises.mkdir(path.dirname(this.nointegrationpath), {\n\t\t\t\trecursive: true,\n\t\t\t})\n\t\t\tawait this._fs.promises.writeFile(this.nointegrationpath, this.packagePath + \"\\n\", {\n\t\t\t\tencoding: \"utf-8\",\n\t\t\t\tflag: \"a\",\n\t\t\t})\n\t\t}\n\n\t\tif (response === 1) {\n\t\t\t// clicked yes\n\t\t\tawait this.integrate()\n\t\t}\n\t}\n}\n\nfunction logExecFile(err: ExecFileException | null, stdout: string, stderr: string) {\n\tif (stdout && stdout !== \"\") log.debug(\"stdout:\", stdout)\n\tif (err) log.error(err)\n\tif (stderr && stderr !== \"\") log.error(\"stderr:\", stderr)\n}\n"]}