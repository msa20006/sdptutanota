{"version":3,"file":"List.js","sourceRoot":"","sources":["../../../../../src/common/gui/base/List.ts"],"names":[],"mappings":"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","sourcesContent":["import m, { Children, ClassComponent, Vnode, VnodeDOM } from \"mithril\"\nimport { debounce, memoized, numberRange } from \"@tutao/tutanota-utils\"\nimport { px, size } from \"../size.js\"\nimport { isKeyPressed } from \"../../misc/KeyManager.js\"\nimport { Keys, TabIndex } from \"../../api/common/TutanotaConstants.js\"\nimport { client } from \"../../misc/ClientDetector.js\"\nimport { progressIcon } from \"./Icon.js\"\nimport { Button, ButtonType } from \"./Button.js\"\nimport { ListSwipeHandler } from \"./ListSwipeHandler.js\"\nimport { applySafeAreaInsetMarginLR } from \"../HtmlUtils.js\"\nimport { theme, ThemeId } from \"../theme.js\"\nimport { ProgrammingError } from \"../../api/common/error/ProgrammingError.js\"\nimport { Coordinate2D } from \"./SwipeHandler.js\"\nimport { styles } from \"../styles.js\"\n\nexport type ListState<T> = Readonly<{\n\titems: ReadonlyArray<T>\n\tloadingStatus: ListLoadingState\n\tloadingAll: boolean\n\tselectedItems: ReadonlySet<T>\n\tinMultiselect: boolean\n\tactiveIndex: number | null\n}>\n\nexport enum ListLoadingState {\n\t/** not loading anything */\n\tIdle,\n\tLoading,\n\t/** loading was cancelled, e.g. because of the network error or explicit user request */\n\tConnectionLost,\n\t/** finished loading */\n\tDone,\n}\n\nexport type SwipeConfiguration<T> = {\n\trenderLeftSpacer(): Children\n\trenderRightSpacer(): Children\n\tswipeLeft(element: T): Promise<ListSwipeDecision>\n\tswipeRight(element: T): Promise<ListSwipeDecision>\n}\n\nexport interface ViewHolder<T> {\n\tupdate(item: T, selected: boolean, multiselect: boolean): void\n}\n\nexport interface RenderConfig<T, R extends ViewHolder<T>> {\n\t/** Create a ViewHolder item. This function is responsible for attaching it to the {@param dom}. */\n\tcreateElement: (dom: HTMLElement) => R\n\titemHeight: number\n\tmultiselectionAllowed: MultiselectMode\n\tswipe: SwipeConfiguration<T> | null\n\n\t/**\n\t * add custom drag behaviour to the list.\n\t * @param ev dragstart event\n\t * @param entity: the row the event was started on\n\t * @param selectedElements the currently selected elements\n\t */\n\tdragStart?: (ev: DragEvent, entity: T, selectedElements: ReadonlySet<T>) => void\n}\n\nexport const enum MultiselectMode {\n\tDisabled,\n\tEnabled,\n}\n\nexport const enum ListSwipeDecision {\n\tCancel,\n\tCommit,\n}\n\nexport interface ListAttrs<T, R extends ViewHolder<T>> {\n\t/** will be compared referentially, will update the DOM on change  */\n\tstate: ListState<T>\n\t/** will be compared referentially, will completely reset DOM and state on change */\n\trenderConfig: RenderConfig<T, R>\n\n\t/** called when the end of the list is getting close to the viewport or when \"load more\" button is pressed. */\n\tonLoadMore(): void\n\n\t/** called after the loading failed/cancelled and retry button on progress item was pressed */\n\tonRetryLoading(): void\n\n\t/** A normal selection for single item. */\n\tonSingleSelection(item: T): unknown\n\n\t/** Selection that enters multiselect when triggered. Toggling the selection for the selected item in multiselect deselects it. */\n\tonSingleTogglingMultiselection(item: T): unknown\n\n\t/** called when range selection is extended */\n\tonRangeSelectionTowards(item: T): unknown\n\n\t/** called when stop button was pressed in progress item */\n\tonStopLoading(): unknown\n}\n\nexport interface ListRow<T, R extends ViewHolder<T>> {\n\tentity: T | null\n\trow: R\n\ttop: number\n\tdomElement: HTMLElement\n}\n\nconst ScrollBuffer = 15\n\n/** Displays the items in the virtual list. Can also display progress/cancelled loading state. */\nexport class List<T, VH extends ViewHolder<T>> implements ClassComponent<ListAttrs<T, VH>> {\n\tprivate innerDom: HTMLElement | null = null\n\tprivate containerDom: HTMLElement | null = null\n\tprivate rows: ListRow<T, VH>[] = []\n\tprivate state: ListState<T> | null = null\n\tprivate currentPosition: number = 0\n\tprivate lastAttrs!: ListAttrs<T, VH>\n\tprivate domSwipeSpacerLeft!: HTMLElement\n\tprivate domSwipeSpacerRight!: HTMLElement\n\tprivate loadingIndicatorChildDom!: HTMLElement\n\tprivate swipeHandler!: ListSwipeHandler<T, VH>\n\tprivate width = 0\n\tprivate height = 0\n\t// remember the last time we needed to scroll somewhere\n\tprivate activeIndex: number | null = null\n\tprivate lastThemeId: ThemeId = theme.themeId\n\n\tview({ attrs }: Vnode<ListAttrs<T, VH>>) {\n\t\tconst oldAttrs = this.lastAttrs\n\t\tthis.lastAttrs = attrs\n\t\treturn m(\n\t\t\t\".list-container.overflow-y-scroll.nofocus.overflow-x-hidden.fill-absolute\",\n\t\t\t{\n\t\t\t\t\"data-testid\": \"unordered_list\",\n\t\t\t\toncreate: ({ dom }: VnodeDOM) => {\n\t\t\t\t\tthis.containerDom = dom as HTMLElement\n\n\t\t\t\t\t// Some of the tech-savvy users like to disable *all* \"experimental features\" in their Safari devices and there's also a toggle to disable\n\t\t\t\t\t// ResizeObserver. Since the app works without it anyway we just fall back to not handling the resize events.\n\t\t\t\t\tif (typeof ResizeObserver !== \"undefined\") {\n\t\t\t\t\t\tnew ResizeObserver(() => {\n\t\t\t\t\t\t\tthis.updateSize()\n\t\t\t\t\t\t}).observe(this.containerDom)\n\t\t\t\t\t} else {\n\t\t\t\t\t\trequestAnimationFrame(() => this.updateSize())\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.swipeHandler = this.createSwipeHandler()\n\t\t\t\t},\n\t\t\t\tonscroll: () => {\n\t\t\t\t\tthis.onScroll(attrs)\n\t\t\t\t},\n\t\t\t},\n\t\t\tthis.renderSwipeItems(attrs),\n\t\t\t// we need rel for the status indicator\n\t\t\tm(\"ul.list.rel.click\", {\n\t\t\t\toncreate: ({ dom }) => {\n\t\t\t\t\tthis.innerDom = dom as HTMLElement\n\t\t\t\t\tthis.initializeDom(dom as HTMLElement, attrs)\n\t\t\t\t\tthis.updateDomElements(attrs)\n\t\t\t\t\tthis.state = attrs.state\n\t\t\t\t\tthis.lastThemeId = theme.themeId\n\t\t\t\t\tif (styles.isSingleColumnLayout()) this.innerDom.focus()\n\t\t\t\t},\n\t\t\t\tonupdate: ({ dom }) => {\n\t\t\t\t\tif (oldAttrs.renderConfig !== attrs.renderConfig) {\n\t\t\t\t\t\t// reset everything\n\t\t\t\t\t\tconsole.log(\"list renderConfig has changed, reset\")\n\t\t\t\t\t\t// m.render actually does diffing if you call it on the same dom element again which is not something that we want, we want completely\n\t\t\t\t\t\t// new dom elements (at least that's the simplest and most reliable way to reset).\n\t\t\t\t\t\t// so we trick mithril into thinking that nothing was rendered before. mithril will reset the DOM for us too.\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tdom.vnodes = null\n\t\t\t\t\t\tthis.initializeDom(dom as HTMLElement, attrs)\n\t\t\t\t\t}\n\t\t\t\t\t// if the state has changed or the theme has changed we need to update the DOM\n\t\t\t\t\tif (this.state !== attrs.state || this.lastThemeId !== theme.themeId) {\n\t\t\t\t\t\tthis.updateDomElements(attrs)\n\t\t\t\t\t\tthis.state = attrs.state\n\t\t\t\t\t}\n\t\t\t\t\tthis.lastThemeId = theme.themeId\n\t\t\t\t},\n\t\t\t\tonscroll: () => {\n\t\t\t\t\tattrs.onLoadMore()\n\t\t\t\t},\n\t\t\t}),\n\t\t)\n\t}\n\n\tprivate createSwipeHandler() {\n\t\treturn new ListSwipeHandler<T, VH>(this.containerDom!, {\n\t\t\twidth: () => this.width,\n\t\t\tdomSwipeSpacerLeft: () => this.domSwipeSpacerLeft,\n\t\t\tdomSwipeSpacerRight: () => this.domSwipeSpacerRight,\n\t\t\tgetRowForPosition: (coord) => this.getRowForPosition(coord),\n\t\t\tonSwipeLeft: async (el) => this.lastAttrs.renderConfig.swipe?.swipeLeft(el) ?? ListSwipeDecision.Cancel,\n\t\t\tonSwipeRight: async (el) => this.lastAttrs.renderConfig.swipe?.swipeRight(el) ?? ListSwipeDecision.Cancel,\n\t\t})\n\t}\n\n\tprivate getRowForPosition(clientCoordiante: Coordinate2D) {\n\t\tconst touchAreaOffset = this.containerDom!.getBoundingClientRect().top\n\t\tconst relativeYPosition = this.currentPosition + clientCoordiante.y - touchAreaOffset\n\n\t\tconst itemIndex = Math.floor(relativeYPosition / this.lastAttrs.renderConfig.itemHeight)\n\t\tconst targetElementPosition = itemIndex * this.lastAttrs.renderConfig.itemHeight\n\n\t\t// We could find the entity just by indexing into it but we would need to scan the rows to find the right one anyway\n\t\t// Assuming that the rows are used in the order of their position we could use binary search\n\t\treturn this.rows.find((ve) => ve.top === targetElementPosition) ?? null\n\t}\n\n\tprivate readonly VIRTUAL_LIST_LENGTH = 100\n\n\tprivate initializeDom(dom: HTMLElement, attrs: ListAttrs<T, VH>) {\n\t\tconst rows: ListRow<T, VH>[] = []\n\t\tm.render(\n\t\t\tdom,\n\t\t\t// hardcoded number of elements for now\n\t\t\t[numberRange(0, this.VIRTUAL_LIST_LENGTH - 1).map(() => this.createRow(attrs, rows)), this.renderStatusRow()],\n\t\t)\n\n\t\tthis.rows = rows\n\t\tif (rows.length !== this.VIRTUAL_LIST_LENGTH) {\n\t\t\tthrow new ProgrammingError(`invalid rows length, expected ${this.VIRTUAL_LIST_LENGTH} rows, got ${this.rows.length}`)\n\t\t}\n\n\t\tif (attrs.renderConfig.swipe) {\n\t\t\tthis.swipeHandler?.attach()\n\t\t} else {\n\t\t\tthis.swipeHandler.detach()\n\t\t}\n\t}\n\n\tprivate onScroll(attrs: ListAttrs<T, VH>) {\n\t\tconst visibleElementHeight = this.updateDomElements(attrs)\n\t\tthis.loadMoreIfNecessary(attrs, visibleElementHeight)\n\t}\n\n\tprivate createRow(attrs: ListAttrs<T, VH>, rows: ListRow<T, VH>[]) {\n\t\treturn m(\"li.list-row.nofocus\", {\n\t\t\tdraggable: attrs.renderConfig.dragStart ? \"true\" : undefined,\n\t\t\ttabindex: TabIndex.Default,\n\t\t\toncreate: (vnode: VnodeDOM) => {\n\t\t\t\tconst dom = vnode.dom as HTMLElement\n\t\t\t\tconst row = {\n\t\t\t\t\trow: attrs.renderConfig.createElement(dom),\n\t\t\t\t\tdomElement: dom,\n\t\t\t\t\ttop: -1,\n\t\t\t\t\tentity: null,\n\t\t\t\t}\n\t\t\t\trows.push(row)\n\t\t\t\tthis.setRowEventListeners(attrs, dom, row)\n\t\t\t},\n\t\t})\n\t}\n\n\tprivate setRowEventListeners(attrs: ListAttrs<T, VH>, domElement: HTMLElement, row: ListRow<T, VH>) {\n\t\tconst LONG_PRESS_DURATION_MS = 400\n\t\tlet touchStartTime: number | null = null\n\n\t\tdomElement.onclick = (e) => {\n\t\t\tif (!touchStartTime || Date.now() - touchStartTime < LONG_PRESS_DURATION_MS) {\n\t\t\t\tif (row.entity) this.handleEvent(row.entity, e)\n\t\t\t}\n\t\t}\n\n\t\tdomElement.onkeyup = (e) => {\n\t\t\tif (isKeyPressed(e.key, Keys.SPACE, Keys.RETURN)) {\n\t\t\t\tif (row.entity) this.handleEvent(row.entity, e)\n\t\t\t}\n\t\t}\n\n\t\t// Handle highlighting the row when tabbed onto or out of\n\t\tconst onFocus = (focusType: \"focus\" | \"blur\") => {\n\t\t\treturn (e: FocusEvent) => {\n\t\t\t\tconst dom = e.target as HTMLElement | null\n\t\t\t\t// Activate the background colour in `SelectableRowContainer`\n\t\t\t\t// TODO: Transition to `state-bg`\n\t\t\t\tif (dom && dom.firstElementChild) {\n\t\t\t\t\tdom.firstElementChild?.dispatchEvent(new FocusEvent(focusType))\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tdomElement.onfocus = onFocus(\"focus\")\n\t\tdomElement.onblur = onFocus(\"blur\")\n\n\t\tdomElement.ondragstart = (e: DragEvent) => {\n\t\t\t// The quick change of the background color is to prevent a white background appearing in dark mode\n\t\t\tif (row.domElement) row.domElement!.style.background = theme.navigation_bg\n\t\t\trequestAnimationFrame(() => {\n\t\t\t\tif (row.domElement) row.domElement!.style.background = \"\"\n\t\t\t})\n\t\t\tif (attrs.renderConfig.dragStart) {\n\t\t\t\tif (row.entity && this.state) attrs.renderConfig.dragStart(e, row.entity, this.state.selectedItems)\n\t\t\t}\n\t\t}\n\n\t\tif (attrs.renderConfig.multiselectionAllowed === MultiselectMode.Enabled) {\n\t\t\tlet timeoutId: TimeoutID | null\n\t\t\tlet touchStartCoords: { x: number; y: number } | null = null\n\t\t\tdomElement.addEventListener(\"touchstart\", (e: TouchEvent) => {\n\t\t\t\ttouchStartTime = Date.now()\n\n\t\t\t\t// Activate multi selection after pause\n\t\t\t\ttimeoutId = setTimeout(() => {\n\t\t\t\t\t// check that virtualRow.entity exists because we had error feedbacks about it\n\t\t\t\t\tif (row.entity) {\n\t\t\t\t\t\tattrs.onSingleTogglingMultiselection(row.entity)\n\t\t\t\t\t}\n\t\t\t\t\tm.redraw()\n\t\t\t\t}, LONG_PRESS_DURATION_MS)\n\t\t\t\ttouchStartCoords = {\n\t\t\t\t\tx: e.touches[0].pageX,\n\t\t\t\t\ty: e.touches[0].pageY,\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tconst touchEnd = () => {\n\t\t\t\tif (timeoutId) clearTimeout(timeoutId)\n\t\t\t}\n\t\t\tdomElement.addEventListener(\"touchend\", touchEnd)\n\t\t\tdomElement.addEventListener(\"touchcancel\", touchEnd)\n\n\t\t\tdomElement.addEventListener(\"touchmove\", (e: TouchEvent) => {\n\t\t\t\t// If the user moved the finger too much by any axis, don't count it as a long press\n\t\t\t\tconst maxDistance = 30\n\t\t\t\tconst touch = e.touches[0]\n\n\t\t\t\tif (\n\t\t\t\t\ttouchStartCoords &&\n\t\t\t\t\ttimeoutId &&\n\t\t\t\t\t(Math.abs(touch.pageX - touchStartCoords.x) > maxDistance || Math.abs(touch.pageY - touchStartCoords.y) > maxDistance)\n\t\t\t\t) {\n\t\t\t\t\tclearTimeout(timeoutId)\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Updates the given list of selected items with a click on the given clicked item. Takes ctrl and shift key events into consideration for multi selection.\n\t * If ctrl is pressed the selection status of the clickedItem is toggled.\n\t * If shift is pressed, all items beginning from the nearest selected item to the clicked item are additionally selected.\n\t * If neither ctrl nor shift are pressed only the clicked item is selected.\n\t */\n\tprivate handleEvent(clickedEntity: T, event: TouchEvent | MouseEvent | KeyboardEvent) {\n\t\t// normal click changes the selection to a single\n\t\t// ctrl click toggles the selection for an item and enables multiselect\n\t\t// shift click selects a lot of things and enabled multiselect\n\t\t// (there are also key press handlers but they are invoked from another place)\n\t\tlet changeType: Parameters<typeof this.changeSelection>[1]\n\t\tif ((client.isMobileDevice() && this.lastAttrs.state.inMultiselect) || event.ctrlKey || (client.isMacOS && event.metaKey)) {\n\t\t\tchangeType = \"togglingIncludingSingle\"\n\t\t} else if (event.shiftKey) {\n\t\t\tchangeType = \"range\"\n\t\t} else {\n\t\t\tchangeType = \"single\"\n\t\t}\n\t\tthis.changeSelection(clickedEntity, changeType)\n\t}\n\n\t/**\n\t * changeType:\n\t *  * single: one item selection (not multiselect)\n\t *  * togglingIncludingSingle: if not in multiselect, start multiselect. Turns multiselect on or off for the item. Includes the item from single selection\n\t *    when turning multiselect on.\n\t *  * togglingNewMultiselect: if not in multiselect, start multiselect. Turns multiselect on or off for the item. Only selected item will be in multiselect\n\t *    when turning multiselect on.\n\t *  * range: range selection, extends the range until the selected item\n\t */\n\tprivate changeSelection(clickedEntity: T, changeType: \"single\" | \"togglingIncludingSingle\" | \"range\") {\n\t\tswitch (changeType) {\n\t\t\tcase \"single\":\n\t\t\t\tthis.lastAttrs.onSingleSelection(clickedEntity)\n\t\t\t\tbreak\n\t\t\tcase \"togglingIncludingSingle\":\n\t\t\t\tif (this.lastAttrs.renderConfig.multiselectionAllowed === MultiselectMode.Enabled) {\n\t\t\t\t\tthis.lastAttrs.onSingleTogglingMultiselection(clickedEntity)\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\tcase \"range\":\n\t\t\t\tif (this.lastAttrs.renderConfig.multiselectionAllowed === MultiselectMode.Enabled) {\n\t\t\t\t\tthis.lastAttrs.onRangeSelectionTowards(clickedEntity)\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t}\n\t}\n\n\tprivate updateDomElements(attrs: ListAttrs<T, VH>): number {\n\t\t// if resize didn't kick in yet, measure it right away once\n\t\tif (this.height === 0) this.height = this.containerDom!.clientHeight\n\t\tconst rowHeight = attrs.renderConfig.itemHeight\n\t\t// plus loading indicator\n\t\t// should depend on whether we are completely loaded maybe?\n\t\tconst statusHeight = attrs.state.loadingStatus === ListLoadingState.Done ? 0 : size.list_row_height\n\t\tthis.innerDom!.style.height = px(attrs.state.items.length * rowHeight + statusHeight)\n\t\tif (attrs.state.activeIndex != null && attrs.state.activeIndex !== this.activeIndex) {\n\t\t\tconst index = attrs.state.activeIndex\n\t\t\tconst desiredPosition = attrs.state.activeIndex * rowHeight\n\t\t\tif (desiredPosition > this.containerDom!.scrollTop + this.height || desiredPosition < this.containerDom!.scrollTop) {\n\t\t\t\tconsole.log(\"active item out of screen, scrolling to\", index, desiredPosition)\n\t\t\t\tthis.currentPosition = this.containerDom!.scrollTop = desiredPosition\n\t\t\t} else {\n\t\t\t\tthis.currentPosition = this.containerDom!.scrollTop\n\t\t\t}\n\t\t} else {\n\t\t\tthis.currentPosition = this.containerDom!.scrollTop\n\t\t}\n\t\tthis.activeIndex = attrs.state.activeIndex\n\n\t\tconst visibleElements = 2 * Math.ceil(this.height / rowHeight / 2) // divide and multiply by two to get an even number\n\t\tconst visibleElementsHeight = visibleElements * rowHeight\n\t\tconst bufferHeight = ScrollBuffer * rowHeight\n\t\tconst maxStartPosition = rowHeight * attrs.state.items.length - bufferHeight * 2 - visibleElementsHeight\n\n\t\tlet nextPosition = this.currentPosition - (this.currentPosition % rowHeight) - bufferHeight\n\n\t\tif (nextPosition < 0) {\n\t\t\tnextPosition = 0\n\t\t} else if (nextPosition > maxStartPosition) {\n\t\t\tnextPosition = maxStartPosition\n\t\t}\n\n\t\tfor (const row of this.rows) {\n\t\t\trow.top = nextPosition\n\t\t\tnextPosition += rowHeight\n\t\t\tconst pos = row.top / rowHeight\n\t\t\tconst item = attrs.state.items[pos]\n\t\t\trow.entity = item\n\n\t\t\tif (!item) {\n\t\t\t\trow.domElement.style.display = \"none\"\n\t\t\t} else {\n\t\t\t\trow.domElement.style.display = \"\"\n\t\t\t\trow.domElement.style.transform = `translateY(${row.top}px)`\n\t\t\t\trow.row.update(item, attrs.state.selectedItems.has(item), attrs.state.inMultiselect)\n\t\t\t}\n\t\t\t// Focus the selected row so it can receive keyboard events if the user has just changed it\n\t\t\tif (attrs.state.selectedItems.has(item) && (!this.state?.selectedItems.has(item) || this.state == null)) {\n\t\t\t\trow.domElement.focus()\n\t\t\t}\n\t\t}\n\t\tthis.updateStatus(attrs.state.loadingStatus)\n\n\t\tthis.loadMoreIfNecessary(attrs, visibleElementsHeight)\n\n\t\treturn visibleElementsHeight\n\t}\n\n\tprivate readonly updateStatus = memoized((status: ListLoadingState) => {\n\t\tswitch (status) {\n\t\t\tcase ListLoadingState.Idle:\n\t\t\tcase ListLoadingState.Done:\n\t\t\t\tm.render(this.loadingIndicatorChildDom, null)\n\t\t\t\tthis.loadingIndicatorChildDom.style.display = \"none\"\n\t\t\t\tbreak\n\t\t\tcase ListLoadingState.Loading:\n\t\t\t\tm.render(this.loadingIndicatorChildDom, this.renderLoadingIndicator())\n\t\t\t\tthis.loadingIndicatorChildDom.style.display = \"\"\n\t\t\t\tbreak\n\t\t\tcase ListLoadingState.ConnectionLost:\n\t\t\t\tm.render(this.loadingIndicatorChildDom, this.renderConnectionLostIndicator())\n\t\t\t\tthis.loadingIndicatorChildDom.style.display = \"\"\n\t\t\t\tbreak\n\t\t}\n\t})\n\n\tprivate renderLoadingIndicator(): Children {\n\t\treturn m(\n\t\t\t\".flex-center.items-center\",\n\t\t\t{\n\t\t\t\tstyle: {\n\t\t\t\t\theight: px(size.list_row_height),\n\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\tgap: px(size.hpad_small),\n\t\t\t\t},\n\t\t\t},\n\t\t\tprogressIcon(),\n\t\t\tm(Button, {\n\t\t\t\tlabel: \"cancel_action\",\n\t\t\t\ttype: ButtonType.Primary,\n\t\t\t\tclick: () => this.lastAttrs.onStopLoading(),\n\t\t\t}),\n\t\t)\n\t}\n\n\tprivate renderConnectionLostIndicator(): Children {\n\t\treturn m(\n\t\t\t\".plr-l.flex-center.items-center\",\n\t\t\t{\n\t\t\t\tstyle: {\n\t\t\t\t\theight: px(size.list_row_height),\n\t\t\t\t},\n\t\t\t},\n\t\t\tm(Button, {\n\t\t\t\tlabel: \"loadMore_action\",\n\t\t\t\ttype: ButtonType.Primary,\n\t\t\t\tclick: () => this.retryLoading(),\n\t\t\t}),\n\t\t)\n\t}\n\n\tprivate retryLoading() {\n\t\tthis.lastAttrs.onRetryLoading()\n\t}\n\n\tprivate async loadMoreIfNecessary(attrs: ListAttrs<T, VH>, visibleElementsHeight: number) {\n\t\t// WARNING this is hacky:\n\t\t// lastBunchVisible depends on visibleElementsHeight which is set inside _createVirtualRows which might not have completed by the time we\n\t\t// reach here, so waiting for domDeferred guarantees that oncreate has finished running, and in turn that _createVirtualRows has completed\n\t\tconst lastBunchVisible = this.currentPosition > attrs.state.items.length * attrs.renderConfig.itemHeight - visibleElementsHeight * 2\n\n\t\tif (lastBunchVisible && attrs.state.loadingStatus == ListLoadingState.Idle) {\n\t\t\tawait attrs.onLoadMore()\n\t\t}\n\t}\n\n\tprivate renderStatusRow(): Children {\n\t\treturn m(\"li.list-row\", {\n\t\t\tstyle: {\n\t\t\t\tbottom: 0,\n\t\t\t\theight: px(size.list_row_height),\n\t\t\t\tdisplay: this.shouldDisplayStatusRow() ? \"none\" : null,\n\t\t\t},\n\t\t\toncreate: (vnode) => {\n\t\t\t\tthis.loadingIndicatorChildDom = vnode.dom as HTMLElement\n\t\t\t},\n\t\t})\n\t}\n\n\tprivate shouldDisplayStatusRow() {\n\t\treturn this.state?.loadingStatus === ListLoadingState.Done || this.state?.loadingStatus === ListLoadingState.Idle\n\t}\n\n\tprivate renderSwipeItems(attrs: ListAttrs<T, VH>): Children {\n\t\tif (attrs.renderConfig.swipe == null) {\n\t\t\treturn null\n\t\t}\n\t\treturn [\n\t\t\tm(\n\t\t\t\t\".swipe-spacer.flex.items-center.justify-end.pr-l.blue\",\n\t\t\t\t{\n\t\t\t\t\toncreate: (vnode) => (this.domSwipeSpacerLeft = vnode.dom as HTMLElement),\n\t\t\t\t\ttabindex: TabIndex.Programmatic,\n\t\t\t\t\t\"aria-hidden\": \"true\",\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\theight: px(attrs.renderConfig.itemHeight),\n\t\t\t\t\t\ttransform: `translateY(-${attrs.renderConfig.itemHeight}px)`,\n\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\t\"z-index\": 1,\n\t\t\t\t\t\t// width: px(this.width),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tattrs.renderConfig.swipe.renderLeftSpacer(),\n\t\t\t),\n\t\t\tm(\n\t\t\t\t\".swipe-spacer.flex.items-center.pl-l.red\",\n\t\t\t\t{\n\t\t\t\t\toncreate: (vnode) => (this.domSwipeSpacerRight = vnode.dom as HTMLElement),\n\t\t\t\t\ttabindex: TabIndex.Programmatic,\n\t\t\t\t\t\"aria-hidden\": \"true\",\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\theight: px(attrs.renderConfig.itemHeight),\n\t\t\t\t\t\ttransform: `translateY(-${attrs.renderConfig.itemHeight}px)`,\n\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\t\"z-index\": 1,\n\t\t\t\t\t\t// width: px(this.width),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tattrs.renderConfig.swipe.renderRightSpacer(),\n\t\t\t),\n\t\t]\n\t}\n\n\tprivate updateSize() {\n\t\tconst containerDom = this.containerDom\n\t\tif (containerDom && this.domSwipeSpacerLeft && this.domSwipeSpacerRight) {\n\t\t\tthis.domSwipeSpacerLeft.style.opacity = \"0\"\n\t\t\tthis.domSwipeSpacerRight.style.opacity = \"0\"\n\t\t\tthis.doUpdateWidth(containerDom)\n\t\t}\n\t}\n\n\tprivate readonly doUpdateWidth = debounce(60, (containerDom: HTMLElement) => {\n\t\tthis.width = containerDom.clientWidth\n\t\tthis.height = containerDom.clientHeight\n\n\t\tif (this.swipeHandler) {\n\t\t\t// with different zoom levels Blink does weird things and shows parts of elements that it shouldn't so we shift them around by a pixel\n\t\t\tconst translateX = this.width + 1\n\t\t\tthis.domSwipeSpacerLeft.style.width = px(this.width)\n\t\t\tthis.domSwipeSpacerRight.style.width = px(this.width)\n\t\t\tthis.domSwipeSpacerLeft.style.transform = `translateX(${-translateX}px) translateY(0px)`\n\t\t\tthis.domSwipeSpacerRight.style.transform = `translateX(${translateX}px) translateY(0px)`\n\n\t\t\tfor (const row of this.rows) {\n\t\t\t\tif (row.domElement) applySafeAreaInsetMarginLR(row.domElement)\n\t\t\t}\n\n\t\t\tthis.domSwipeSpacerLeft.style.opacity = \"1\"\n\t\t\tthis.domSwipeSpacerRight.style.opacity = \"1\"\n\t\t}\n\t})\n}\n"]}