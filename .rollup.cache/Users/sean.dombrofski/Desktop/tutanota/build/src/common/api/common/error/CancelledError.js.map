{"version":3,"file":"CancelledError.js","sourceRoot":"","sources":["../../../../../../src/common/api/common/error/CancelledError.ts"],"names":[],"mappings":"AAAA,wBAAwB;AAExB,OAAO,EAAE,aAAa,EAAE,MAAM,uBAAuB,CAAA;AAErD,MAAM,OAAO,cAAe,SAAQ,aAAa;IAChD;;;;OAIG;IACH,YAAY,OAAe;QAC1B,KAAK,CAAC,gBAAgB,EAAE,OAAO,CAAC,CAAA;IACjC,CAAC;CACD","sourcesContent":["//@bundleInto:common-min\n\nimport { TutanotaError } from \"@tutao/tutanota-error\"\n\nexport class CancelledError extends TutanotaError {\n\t/**\n\t * A cancelled error is thrown when a async action is aborted\n\t * @param message An information about the exception.\n\t * @param error The original error that was thrown.\n\t */\n\tconstructor(message: string) {\n\t\tsuper(\"CancelledError\", message)\n\t}\n}\n"]}