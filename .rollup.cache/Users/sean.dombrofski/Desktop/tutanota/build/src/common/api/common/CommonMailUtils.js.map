{"version":3,"file":"CommonMailUtils.js","sourceRoot":"","sources":["../../../../../src/common/api/common/CommonMailUtils.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,WAAW,EAAE,MAAM,wBAAwB,CAAA;AAEpD,MAAM,UAAU,iBAAiB,CAAC,MAAoB,EAAE,MAAkB,EAAE,IAAiB;IAC5F,MAAM,YAAY,GAAG,MAAM,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAA;IACvD,OAAO,YAAY,IAAI,IAAI,IAAI,MAAM,CAAC,sBAAsB,CAAC,MAAM,EAAE,YAAY,CAAC,GAAG,CAAC,CAAA;AACvF,CAAC;AAED;;GAEG;AACH,MAAM,UAAU,mBAAmB,CAAC,MAAoB,EAAE,MAAkB;IAC3E,6EAA6E;IAC7E,OAAO,CACN,MAAM,CAAC,UAAU,KAAK,WAAW,CAAC,KAAK;QACvC,MAAM,CAAC,UAAU,KAAK,WAAW,CAAC,IAAI;QACtC,iBAAiB,CAAC,MAAM,EAAE,MAAM,EAAE,WAAW,CAAC,KAAK,CAAC;QACpD,iBAAiB,CAAC,MAAM,EAAE,MAAM,EAAE,WAAW,CAAC,IAAI,CAAC,CACnD,CAAA;AACF,CAAC;AAED,MAAM,UAAU,OAAO,CAAC,IAAU;IACjC,OAAO,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAA;AACrC,CAAC;AAOD,MAAM,UAAU,kBAAkB,CAAC,IAAU;IAC5C,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAA;IAC9B,OAAO,EAAE,OAAO,EAAE,UAAU,CAAC,OAAO,EAAE,IAAI,EAAE,UAAU,CAAC,IAAI,EAAE,CAAA;AAC9D,CAAC;AAED,MAAM,UAAU,eAAe,CAAC,IAAU;IACzC,OAAO,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE,CAAA;AAC9C,CAAC","sourcesContent":["import type { FolderSystem } from \"./mail/FolderSystem.js\"\nimport { Body, Mail, MailFolder } from \"../entities/tutanota/TypeRefs.js\"\nimport { MailSetKind } from \"./TutanotaConstants.js\"\n\nexport function isSubfolderOfType(system: FolderSystem, folder: MailFolder, type: MailSetKind): boolean {\n\tconst systemFolder = system.getSystemFolderByType(type)\n\treturn systemFolder != null && system.checkFolderForAncestor(folder, systemFolder._id)\n}\n\n/**\n * Returns true if given folder is the {@link MailSetKind.SPAM} or {@link MailSetKind.TRASH} folder, or a descendant of those folders.\n */\nexport function isSpamOrTrashFolder(system: FolderSystem, folder: MailFolder): boolean {\n\t// not using isOfTypeOrSubfolderOf because checking the type first is cheaper\n\treturn (\n\t\tfolder.folderType === MailSetKind.TRASH ||\n\t\tfolder.folderType === MailSetKind.SPAM ||\n\t\tisSubfolderOfType(system, folder, MailSetKind.TRASH) ||\n\t\tisSubfolderOfType(system, folder, MailSetKind.SPAM)\n\t)\n}\n\nexport function isDraft(mail: Mail): boolean {\n\treturn mail.mailDetailsDraft != null\n}\n\nexport interface MailAddressAndName {\n\tname: string\n\taddress: string\n}\n\nexport function getDisplayedSender(mail: Mail): MailAddressAndName {\n\tconst realSender = mail.sender\n\treturn { address: realSender.address, name: realSender.name }\n}\n\nexport function getMailBodyText(body: Body): string {\n\treturn body.compressedText ?? body.text ?? \"\"\n}\n"]}