{"version":3,"file":"MailAddressTable.js","sourceRoot":"","sources":["../../../../../src/common/settings/mailaddress/MailAddressTable.ts"],"names":[],"mappings":"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","sourcesContent":["import m, { Children, Component, Vnode } from \"mithril\"\nimport { Dialog } from \"../../gui/base/Dialog.js\"\nimport type { TableLineAttrs } from \"../../gui/base/Table.js\"\nimport { ColumnWidth, Table } from \"../../gui/base/Table.js\"\nimport { lang, TranslationKey } from \"../../misc/LanguageViewModel.js\"\nimport { LimitReachedError } from \"../../api/common/error/RestError.js\"\nimport { ofClass } from \"@tutao/tutanota-utils\"\nimport { Icons } from \"../../gui/base/icons/Icons.js\"\nimport { showProgressDialog } from \"../../gui/dialogs/ProgressDialog.js\"\nimport { ExpanderButton, ExpanderPanel } from \"../../gui/base/Expander.js\"\nimport { attachDropdown, DropdownButtonAttrs } from \"../../gui/base/Dropdown.js\"\nimport { showNotAvailableForFreeDialog, showPlanUpgradeRequiredDialog } from \"../../misc/SubscriptionDialogs.js\"\nimport { assertMainOrNode } from \"../../api/common/Env.js\"\nimport { IconButtonAttrs } from \"../../gui/base/IconButton.js\"\nimport { ButtonSize } from \"../../gui/base/ButtonSize.js\"\nimport { AddressInfo, AddressStatus, MailAddressTableModel } from \"./MailAddressTableModel.js\"\nimport { showAddAliasDialog } from \"./AddAliasDialog.js\"\nimport { locator } from \"../../api/main/CommonLocator.js\"\nimport { UpgradeRequiredError } from \"../../api/main/UpgradeRequiredError.js\"\n\nassertMainOrNode()\n\nexport type MailAddressTableAttrs = {\n\tmodel: MailAddressTableModel\n\texpanded: boolean\n\tonExpanded: (expanded: boolean) => unknown\n}\n\n/** Shows a table with all aliases and ability to enable/disable them, add more and set names. */\nexport class MailAddressTable implements Component<MailAddressTableAttrs> {\n\tview({ attrs }: Vnode<MailAddressTableAttrs>): Children {\n\t\tconst { model } = attrs\n\t\t// If the table is expanded we need to init the model.\n\t\t// It is no-op to init multiple times so it's safe.\n\t\tif (attrs.expanded) {\n\t\t\tmodel.init()\n\t\t}\n\t\tconst addAliasButtonAttrs: IconButtonAttrs | null = model.userCanModifyAliases()\n\t\t\t? {\n\t\t\t\t\ttitle: \"addEmailAlias_label\",\n\t\t\t\t\tclick: () => this.onAddAlias(attrs),\n\t\t\t\t\ticon: Icons.Add,\n\t\t\t\t\tsize: ButtonSize.Compact,\n\t\t\t  }\n\t\t\t: null\n\t\treturn [\n\t\t\tm(\".flex-space-between.items-center.mt-l.mb-s\", [\n\t\t\t\tm(\".h4\", lang.get(\"mailAddresses_label\")),\n\t\t\t\tm(ExpanderButton, {\n\t\t\t\t\tlabel: \"show_action\",\n\t\t\t\t\texpanded: attrs.expanded,\n\t\t\t\t\tonExpandedChange: (v) => {\n\t\t\t\t\t\tattrs.onExpanded(v)\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t]),\n\t\t\tm(\n\t\t\t\tExpanderPanel,\n\t\t\t\t{\n\t\t\t\t\texpanded: attrs.expanded,\n\t\t\t\t},\n\t\t\t\tm(Table, {\n\t\t\t\t\tcolumnHeading: [\"mailAddress_label\", \"state_label\"],\n\t\t\t\t\tcolumnWidths: [ColumnWidth.Largest, ColumnWidth.Small],\n\t\t\t\t\tshowActionButtonColumn: true,\n\t\t\t\t\taddButtonAttrs: addAliasButtonAttrs,\n\t\t\t\t\tlines: getAliasLineAttrs(attrs),\n\t\t\t\t}),\n\t\t\t),\n\t\t\tmodel.aliasCount\n\t\t\t\t? [\n\t\t\t\t\t\tm(\n\t\t\t\t\t\t\t\".mt-s\",\n\t\t\t\t\t\t\tlang.get(\"amountUsedAndActivatedOf_label\", {\n\t\t\t\t\t\t\t\t\"{used}\": model.aliasCount.usedAliases,\n\t\t\t\t\t\t\t\t\"{active}\": model.aliasCount.enabledAliases,\n\t\t\t\t\t\t\t\t\"{totalAmount}\": model.aliasCount.totalAliases,\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t),\n\t\t\t\t\t\tm(\".small.mt-s\", lang.get(model.aliasLimitIncludesCustomDomains() ? \"mailAddressInfoLegacy_msg\" : \"mailAddressInfo_msg\")),\n\t\t\t\t  ]\n\t\t\t\t: null,\n\t\t]\n\t}\n\n\tprivate async onAddAlias(attrs: MailAddressTableAttrs) {\n\t\tconst userController = locator.logins.getUserController()\n\t\tif (userController.isFreeAccount()) {\n\t\t\tshowNotAvailableForFreeDialog()\n\t\t} else {\n\t\t\tconst isNewPaidPlan = await userController.isNewPaidPlan()\n\t\t\tshowAddAliasDialog(attrs.model, isNewPaidPlan)\n\t\t}\n\t}\n}\n\nfunction setNameDropdownButton(model: MailAddressTableModel, addressInfo: AddressInfo): DropdownButtonAttrs {\n\treturn {\n\t\tlabel: \"setSenderName_action\",\n\t\tclick: () => showSenderNameChangeDialog(model, addressInfo),\n\t}\n}\n\nfunction addressDropdownButtons(attrs: MailAddressTableAttrs, addressInfo: AddressInfo): DropdownButtonAttrs[] {\n\tswitch (addressInfo.status) {\n\t\tcase AddressStatus.Primary:\n\t\t\treturn [setNameDropdownButton(attrs.model, addressInfo)]\n\t\tcase AddressStatus.Alias: {\n\t\t\tconst buttons = [setNameDropdownButton(attrs.model, addressInfo)]\n\t\t\tif (attrs.model.userCanModifyAliases()) {\n\t\t\t\tbuttons.push({\n\t\t\t\t\tlabel: \"deactivate_action\",\n\t\t\t\t\tclick: () => {\n\t\t\t\t\t\tswitchAliasStatus(addressInfo, attrs)\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t}\n\t\t\treturn buttons\n\t\t}\n\t\tcase AddressStatus.DisabledAlias: {\n\t\t\treturn attrs.model.userCanModifyAliases()\n\t\t\t\t? [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: \"activate_action\",\n\t\t\t\t\t\t\tclick: () => {\n\t\t\t\t\t\t\t\tswitchAliasStatus(addressInfo, attrs)\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t  ]\n\t\t\t\t: []\n\t\t}\n\t\tcase AddressStatus.Custom: {\n\t\t\tconst buttons = [setNameDropdownButton(attrs.model, addressInfo)]\n\t\t\tif (attrs.model.userCanModifyAliases()) {\n\t\t\t\tbuttons.push({\n\t\t\t\t\tlabel: \"delete_action\",\n\t\t\t\t\tclick: () => {\n\t\t\t\t\t\tswitchAliasStatus(addressInfo, attrs)\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t}\n\t\t\treturn buttons\n\t\t}\n\t}\n}\n\nfunction statusLabel(addressInfo: AddressInfo): string {\n\tswitch (addressInfo.status) {\n\t\tcase AddressStatus.Primary:\n\t\t\treturn lang.get(\"primaryMailAddress_label\")\n\t\tcase AddressStatus.Alias:\n\t\tcase AddressStatus.Custom:\n\t\t\treturn lang.get(\"activated_label\")\n\t\tcase AddressStatus.DisabledAlias:\n\t\t\treturn lang.get(\"deactivated_label\")\n\t}\n}\n\nexport function getAliasLineAttrs(attrs: MailAddressTableAttrs): Array<TableLineAttrs> {\n\treturn attrs.model.addresses().map((addressInfo) => {\n\t\tconst dropdownButtons = addressDropdownButtons(attrs, addressInfo)\n\t\t// do not display the \"more\" button if there are no available actions\n\t\tconst actionButtonAttrs: IconButtonAttrs | null =\n\t\t\tdropdownButtons.length === 0\n\t\t\t\t? null\n\t\t\t\t: attachDropdown({\n\t\t\t\t\t\tmainButtonAttrs: {\n\t\t\t\t\t\t\ttitle: \"edit_action\",\n\t\t\t\t\t\t\ticon: Icons.More,\n\t\t\t\t\t\t\tsize: ButtonSize.Compact,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tshowDropdown: () => true,\n\t\t\t\t\t\twidth: 250,\n\t\t\t\t\t\tchildAttrs: () => dropdownButtons,\n\t\t\t\t  })\n\t\treturn {\n\t\t\tcells: () => [{ main: addressInfo.address, info: [addressInfo.name] }, { main: statusLabel(addressInfo) }],\n\t\t\tactionButtonAttrs: actionButtonAttrs,\n\t\t}\n\t})\n}\n\nasync function switchAliasStatus(alias: AddressInfo, attrs: MailAddressTableAttrs) {\n\tconst deactivateOrDeleteAlias = alias.status !== AddressStatus.DisabledAlias\n\tif (deactivateOrDeleteAlias) {\n\t\t// alias from custom domains will be deleted. Tutanota aliases will be deactivated\n\t\tconst message: TranslationKey = alias.status === AddressStatus.Custom ? \"deleteAlias_msg\" : \"deactivateAlias_msg\"\n\t\tconst confirmed = await Dialog.confirm(\n\t\t\tlang.getTranslation(message, {\n\t\t\t\t\"{1}\": alias.address,\n\t\t\t}),\n\t\t)\n\t\tif (!confirmed) {\n\t\t\treturn\n\t\t}\n\t}\n\n\tconst updateModel = attrs.model\n\t\t.setAliasStatus(alias.address, !deactivateOrDeleteAlias)\n\t\t.catch(ofClass(LimitReachedError, () => attrs.model.handleTooManyAliases()))\n\t\t.catch(ofClass(UpgradeRequiredError, (e) => showPlanUpgradeRequiredDialog(e.plans, e.message)))\n\tawait showProgressDialog(\"pleaseWait_msg\", updateModel)\n}\n\nfunction showSenderNameChangeDialog(model: MailAddressTableModel, alias: { address: string; name: string }) {\n\tDialog.showTextInputDialog({\n\t\ttitle: \"edit_action\",\n\t\tlabel: \"mailName_label\",\n\t\tinfoMsgId: lang.makeTranslation(\"alias_addr\", alias.address),\n\t\tdefaultValue: alias.name,\n\t}).then((newName) => showProgressDialog(\"pleaseWait_msg\", model.setAliasName(alias.address, newName)))\n}\n"]}