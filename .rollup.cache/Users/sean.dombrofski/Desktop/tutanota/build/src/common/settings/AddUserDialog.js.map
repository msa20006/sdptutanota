{"version":3,"file":"AddUserDialog.js","sourceRoot":"","sources":["../../../../src/common/settings/AddUserDialog.ts"],"names":[],"mappings":"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","sourcesContent":["import m from \"mithril\"\nimport { lang, TranslationKey, MaybeTranslation } from \"../misc/LanguageViewModel.js\"\nimport { BookingItemFeatureType, NewPaidPlans } from \"../api/common/TutanotaConstants.js\"\nimport { Dialog } from \"../gui/base/Dialog.js\"\nimport { PasswordForm, PasswordModel } from \"./PasswordForm.js\"\nimport { SelectMailAddressForm } from \"./SelectMailAddressForm.js\"\nimport { assertNotNull, getFirstOrThrow, ofClass } from \"@tutao/tutanota-utils\"\nimport { showProgressDialog } from \"../gui/dialogs/ProgressDialog.js\"\nimport { PreconditionFailedError } from \"../api/common/error/RestError.js\"\nimport { showBuyDialog } from \"../subscription/BuyDialog.js\"\nimport { TextField } from \"../gui/base/TextField.js\"\nimport { locator } from \"../api/main/CommonLocator.js\"\nimport { assertMainOrNode } from \"../api/common/Env.js\"\nimport { getAvailableDomains } from \"./mailaddress/MailAddressesUtils.js\"\nimport { toFeatureType } from \"../subscription/SubscriptionUtils.js\"\nimport { showUpgradeWizard } from \"../subscription/UpgradeSubscriptionWizard.js\"\n\nassertMainOrNode()\n\nexport async function show(): Promise<void> {\n\tconst availableDomains = await getAvailableDomains(locator.logins)\n\tconst onNewPaidPlan = await locator.logins.getUserController().isNewPaidPlan()\n\tlet emailAddress: string | null = null\n\tlet errorMsg: MaybeTranslation | null = \"mailAddressNeutral_msg\"\n\tlet isVerificationBusy = false\n\tlet userName = \"\"\n\tconst passwordModel = new PasswordModel(locator.usageTestController, locator.logins, {\n\t\tcheckOldPassword: false,\n\t\tenforceStrength: false,\n\t\thideConfirmation: true,\n\t})\n\tlet selectedDomain = getFirstOrThrow(availableDomains)\n\tlet form = {\n\t\tview: () => {\n\t\t\treturn [\n\t\t\t\tm(TextField, {\n\t\t\t\t\tlabel: \"name_label\",\n\t\t\t\t\thelpLabel: () => lang.get(\"loginNameInfoAdmin_msg\"),\n\t\t\t\t\tvalue: userName,\n\t\t\t\t\toninput: (value) => (userName = value),\n\t\t\t\t}),\n\t\t\t\tm(SelectMailAddressForm, {\n\t\t\t\t\tselectedDomain,\n\t\t\t\t\tavailableDomains,\n\t\t\t\t\tonDomainChanged: (domain) => {\n\t\t\t\t\t\tif (domain.isPaid && !onNewPaidPlan) {\n\t\t\t\t\t\t\tshowUpgradeWizard(\n\t\t\t\t\t\t\t\tlocator.logins,\n\t\t\t\t\t\t\t\tNewPaidPlans,\n\t\t\t\t\t\t\t\tlang.makeTranslation(\"change_to_new_plan\", `${lang.get(\"paidEmailDomainLegacy_msg\")}\\n${lang.get(\"changePaidPlan_msg\")}`),\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tselectedDomain = domain\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tonValidationResult: (email, verificationResult) => {\n\t\t\t\t\t\tif (verificationResult.isValid) {\n\t\t\t\t\t\t\temailAddress = email\n\t\t\t\t\t\t\terrorMsg = null\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\terrorMsg = verificationResult.errorId\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tonBusyStateChanged: (isBusy) => {\n\t\t\t\t\t\tisVerificationBusy = isBusy\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t\tm(PasswordForm, { model: passwordModel }),\n\t\t\t]\n\t\t},\n\t}\n\n\tlet addUserOkAction = async (dialog: Dialog) => {\n\t\tif (isVerificationBusy) return\n\t\tconst passwordFormError = passwordModel.getErrorMessageId()\n\n\t\tif (errorMsg) {\n\t\t\tDialog.message(errorMsg as TranslationKey)\n\t\t\treturn\n\t\t} else if (passwordFormError) {\n\t\t\tDialog.message(passwordFormError)\n\t\t\treturn\n\t\t}\n\n\t\tconst userController = locator.logins.getUserController()\n\t\tconst planType = await userController.getPlanType()\n\t\tconst newPlan = await userController.isNewPaidPlan()\n\n\t\tshowProgressDialog(\n\t\t\t\"pleaseWait_msg\",\n\t\t\tshowBuyDialog({\n\t\t\t\tfeatureType: newPlan ? toFeatureType(planType) : BookingItemFeatureType.LegacyUsers,\n\t\t\t\tbookingText: \"bookingItemUsers_label\",\n\t\t\t\tcount: 1,\n\t\t\t\tfreeAmount: 0,\n\t\t\t\treactivate: false,\n\t\t\t}),\n\t\t).then(async (accepted) => {\n\t\t\tif (accepted) {\n\t\t\t\tconst operation = locator.operationProgressTracker.startNewOperation()\n\t\t\t\tconst p = locator.userManagementFacade.createUser(\n\t\t\t\t\tuserName.trim(),\n\t\t\t\t\tassertNotNull(emailAddress),\n\t\t\t\t\tpasswordModel.getNewPassword(),\n\t\t\t\t\t0,\n\t\t\t\t\t1,\n\t\t\t\t\toperation.id,\n\t\t\t\t)\n\t\t\t\tshowProgressDialog(\n\t\t\t\t\tlang.getTranslation(\"createActionStatus_msg\", {\n\t\t\t\t\t\t\"{index}\": 0,\n\t\t\t\t\t\t\"{count}\": 1,\n\t\t\t\t\t}),\n\t\t\t\t\tp,\n\t\t\t\t\toperation.progress,\n\t\t\t\t)\n\t\t\t\t\t.catch(ofClass(PreconditionFailedError, (e) => Dialog.message(\"createUserFailed_msg\")))\n\t\t\t\t\t.then(() => dialog.close())\n\t\t\t\t\t.finally(() => operation.done())\n\t\t\t}\n\t\t})\n\t}\n\n\tDialog.showActionDialog({\n\t\ttitle: \"addUsers_action\",\n\t\tchild: form,\n\t\tokAction: addUserOkAction,\n\t})\n}\n"]}