{"version":3,"file":"RegistryScriptGenerator.js","sourceRoot":"","sources":["../../../../../src/common/desktop/integration/RegistryScriptGenerator.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * This file helps keep registry operations for application and removal in sync by generating\n * an application registry script and a removal script from the same template.\n *\n * Windows Registry Scripts look like this:\n *   ```\n *   Windows Registry Editor Version 5.00\n *\n *   [HKCU\\SOFTWARE\\CLIENTS\\MAIL]\n *   @=\"default_value\"\n *\n *   [-HKLM\\SOFTWARE\\CLIENTS\\MAIL\\Mozilla Thunderbird]\n *\n *   [HKCU\\SOFTWARE\\CLIENTS\\MAIL\\Section]\n *   @=\"default_value\"\n *   \"name\"=\"named_value\"\n *   \"value_to_delete\"=-\n *\n *   [HKCU\\SOFTWARE\\CLIENTS\\MAIL\\Section2]\n *   @=-\n *   ```\n *\n * * there is a header line followed by a list of sections\n * * each section starts with a path in square brackets []. if the path is prefixed with a dash (-),\n *   that path and all its subkeys will be removed.\n * * sections can contain\n *     * default value assignments of the form @=\"VALUE\"\n *     * default value nullifications of the form @=-\n *     * named value assignments of the form \"NAME\"=\"VALUE\"\n *     * named value deletions of the form \"NAME\"=-\n *\n * The script generator uses JavaScript arrays of RegistryValueTemplates as templates.\n * During application, RegistryValueTemplates will recursively written to the registry at their respective root path.\n * The removal script preserves the root keys. this means that subkeys that were created in a root key will be recursively deleted,\n * but string values that are assigned directly to a root key or a name in that subkey will only be nulled. Example:\n *\n * To generate this application script:\n * ```\n * Windows Registry Editor Version 5.00\n * [HKLM\\SOFTWARE\\CLIENTS\\MAIL]\n * \"named\"=\"val\"\n * @=\"default_value_1\"\n *\n * [HKLM\\SOFTWARE\\CLIENTS\\MAIL\\subkey]\n * @=\"default_value_2\"\n * \"DLLPath\"=\"C:\\dll\\path\\t.dll\"\n * ```\n *\n * and this removal script\n *\n * ```\n * Windows Registry Editor Version 5.00\n *\n * [HKLM\\SOFTWARE\\CLIENTS\\MAIL]\n * \"named\"=-\n * @=-\n *\n * [-HKLM\\SOFTWARE\\CLIENTS\\MAIL\\subkey]\n * ```\n *\n * We would use this template. Note the values with empty keys which get expanded to @=<value> assignments.\n *\n * ```\n * const template = [{\n * \t\t\troot: \"HKLM\\\\SOFTWARE\\\\CLIENTS\\\\MAIL\",\n *\t\t\tvalue: {\"named\": \"val\", subkey: {\"\": \"default_value_2\", \"DLLPath\": \"C:\\\\dll\\\\path\\\\t.dll\",}, \"\": \"default_value_1\"}\n * }]\n * ```\n *\n * Also note that \"HKLM\\SOFTWARE\\CLIENTS\\MAIL\\subkey\" was removed entirely while the values\n * directly assigned to \"HKLM\\SOFTWARE\\CLIENTS\\MAIL\" are only nulled, because that path was given as a root.\n *\n *  Current Limitations:\n *  * only string values are supported\n *  * application can only write, removal will only remove\n *  */\nexport type RegistryTemplateDefinition = ReadonlyArray<RegistryValueTemplate>\nexport type RegistryValueTemplate = {\n\tvalue: RegistrySubKey\n\troot: string\n}\nexport type RegistrySubKey = { [key: string]: RegistryValue }\nexport type RegistryValue = RegistrySubKey | string\ntype OperationBuffer = Record<string, Array<string>>\nconst header_line = \"Windows Registry Editor Version 5.00\"\n\nfunction quote(s: string): string {\n\treturn `\"${s}\"`\n}\n\nfunction keyLine(path: string): string {\n\treturn `[${path}]`\n}\n\nfunction valueLine(path: string, value: string | null): string {\n\treturn `${path === \"\" ? \"@\" : quote(path)}=${value == null ? \"-\" : quote(value)}`\n}\n\n/**\n * value expander for the script generators. if a value is not a string, it's another section\n * that gets expanded recursively.\n *\n * remove is used to create value/key removal lines\n */\nfunction expandValue(path: string, key: string, value: RegistryValue, buf: OperationBuffer, remove?: boolean): OperationBuffer {\n\tif (typeof value === \"string\") {\n\t\tbuf[path].push(valueLine(key, remove ? null : value))\n\t} else {\n\t\tbuf = expandSection(`${path}\\\\${key}`, value, buf, remove)\n\t}\n\n\treturn buf\n}\n\n/**\n * section expander for the script generator\n */\nfunction expandSection(path: string, value: RegistrySubKey, buf: OperationBuffer, remove?: boolean): OperationBuffer {\n\tif (buf[path] == null) buf[path] = []\n\n\tfor (const key in value) {\n\t\tif (typeof value[key] !== \"string\" && remove) {\n\t\t\tbuf[`-${path}\\\\${key}`] = []\n\t\t} else {\n\t\t\texpandValue(path, key, value[key], buf, remove)\n\t\t}\n\t}\n\n\treturn buf\n}\n\n/**\n * converts a map of registry paths to value setters into an executable registry script\n * @param {OperationBuffer} buf List of operations the need to be done\n * @returns {string} a windows registry script that can be imported by regex.exe to apply the operations\n */\nfunction bufToScript(buf: OperationBuffer): string {\n\tconst lines = [header_line]\n\n\tfor (const key in buf) {\n\t\tconst next = buf[key]\n\t\tif (next.length < 1 && !key.startsWith(\"-\")) continue\n\t\tlines.push(\"\", keyLine(key))\n\t\tlines.push(...next)\n\t}\n\n\treturn lines.join(\"\\r\\n\").trim()\n}\n\n/**\n * the application and removal script generators are very similar in structure, this function abstracts over that.\n */\nfunction scriptBuilder(remove: boolean, template: RegistryTemplateDefinition): string {\n\tconst buf = template.reduce((prev, { root, value }) => expandSection(root, value, prev, remove), {})\n\treturn bufToScript(buf)\n}\n\n/**\n * create a windows registry script that can be executed to apply the given template\n */\nexport function applyScriptBuilder(template: RegistryTemplateDefinition): string {\n\treturn scriptBuilder(false, template)\n}\n\n/**\n * create a windows registry script that can be executed to remove the values that have been\n * created by executing the script generated from the template by applyScriptBuilder\n */\nexport function removeScriptBuilder(template: RegistryTemplateDefinition): string {\n\treturn scriptBuilder(true, template)\n}\n"]}