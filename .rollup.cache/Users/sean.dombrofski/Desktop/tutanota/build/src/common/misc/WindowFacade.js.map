{"version":3,"file":"WindowFacade.js","sourceRoot":"","sources":["../../../../src/common/misc/WindowFacade.ts"],"names":[],"mappings":"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","sourcesContent":["import m, { Params } from \"mithril\"\nimport { assertMainOrNodeBoot, isApp, isElectronClient, isIOSApp, Mode } from \"../api/common/Env\"\nimport { lang } from \"./LanguageViewModel\"\nimport { client } from \"./ClientDetector\"\nimport type { Indexer } from \"../../mail-app/workerUtils/index/Indexer.js\"\nimport { noOp, remove } from \"@tutao/tutanota-utils\"\nimport { WebsocketConnectivityModel } from \"./WebsocketConnectivityModel.js\"\nimport { LoginController } from \"../api/main/LoginController.js\"\n\nassertMainOrNodeBoot()\nexport type KeyboardSizeListener = (keyboardSize: number) => unknown\nexport type windowSizeListener = (width: number, height: number) => unknown\n\nexport class WindowFacade {\n\tprivate _windowSizeListeners: windowSizeListener[]\n\tresizeTimeout: (AnimationFrameID | null) | (TimeoutID | null)\n\twindowCloseConfirmation: boolean\n\tprivate _windowCloseListeners: Set<(e: Event) => unknown>\n\tprivate _historyStateEventListeners: Array<(e: Event) => boolean> = []\n\tprivate indexerFacade: Indexer | null = null\n\t// following two properties are for the iOS\n\tprivate _keyboardSize: number = 0\n\tprivate _keyboardSizeListeners: KeyboardSizeListener[] = []\n\tprivate _ignoreNextPopstate: boolean = false\n\tprivate connectivityModel!: WebsocketConnectivityModel\n\tprivate logins: LoginController | null = null\n\tprivate appBasedVisibilityChage: (visible: boolean) => void = noOp\n\n\tconstructor() {\n\t\tthis._windowSizeListeners = []\n\t\tthis.resizeTimeout = null\n\t\tthis.windowCloseConfirmation = false\n\t\tthis._windowCloseListeners = new Set()\n\n\t\tconst onresize = () => {\n\t\t\t// see https://developer.mozilla.org/en-US/docs/Web/Events/resize\n\t\t\tif (!this.resizeTimeout) {\n\t\t\t\tconst cb = () => {\n\t\t\t\t\tthis.resizeTimeout = null\n\n\t\t\t\t\tthis._resize() // The actualResizeHandler will execute at a rate of 15fps\n\t\t\t\t}\n\n\t\t\t\t// On mobile devices there's usually no resize but when changing orientation it's to early to\n\t\t\t\t// measure the size in requestAnimationFrame (it's usually incorrect size at this point)\n\t\t\t\tthis.resizeTimeout = client.isMobileDevice() ? setTimeout(cb, 66) : requestAnimationFrame(cb)\n\t\t\t}\n\t\t}\n\t\twindow.onresize = onresize\n\t\t// specifially for iOS: rotation through the unsupported orientation (e.g, 90 degrees 3 times) will not trigger the resize and we wouldn't resize\n\t\t// some things so we react to both, it is throttled anyway\n\t\twindow.onorientationchange = onresize\n\t}\n\n\t/**\n\t * Add a window resize listener with a listenerId\n\t * @param listener Provides the new width and height of the window if the values change.\n\t */\n\taddResizeListener(listener: windowSizeListener) {\n\t\tthis._windowSizeListeners.push(listener)\n\t}\n\n\tremoveResizeListener(listener: windowSizeListener) {\n\t\tremove(this._windowSizeListeners, listener)\n\t}\n\n\taddWindowCloseListener(listener: () => unknown): (...args: Array<any>) => any {\n\t\tthis._windowCloseListeners.add(listener)\n\n\t\tthis._checkWindowClosing(this._windowCloseListeners.size > 0)\n\n\t\treturn () => {\n\t\t\tthis._windowCloseListeners.delete(listener)\n\n\t\t\tthis._checkWindowClosing(this._windowCloseListeners.size > 0)\n\t\t}\n\t}\n\n\t_notifyCloseListeners(e: Event) {\n\t\tfor (const f of this._windowCloseListeners) {\n\t\t\tf(e)\n\t\t}\n\t}\n\n\taddKeyboardSizeListener(listener: KeyboardSizeListener) {\n\t\tthis._keyboardSizeListeners.push(listener)\n\n\t\tlistener(this._keyboardSize)\n\t}\n\n\tremoveKeyboardSizeListener(listener: KeyboardSizeListener) {\n\t\tremove(this._keyboardSizeListeners, listener)\n\t}\n\n\topenLink(href: string) {\n\t\tif (env.mode === Mode.App) {\n\t\t\twindow.open(href, \"_system\")\n\t\t} else {\n\t\t\twindow.open(href, \"_blank\")\n\t\t}\n\t}\n\n\tinit(logins: LoginController, connectivityModel: WebsocketConnectivityModel, appBasedVisibilityChage: ((visible: boolean) => void) | null) {\n\t\tthis.logins = logins\n\n\t\tif (window.addEventListener && !isApp()) {\n\t\t\twindow.addEventListener(\"beforeunload\", (e) => this._beforeUnload(e))\n\t\t\twindow.addEventListener(\"popstate\", (e) => this._popState(e))\n\t\t\twindow.addEventListener(\"unload\", (e) => this._onUnload())\n\t\t}\n\n\t\tthis.appBasedVisibilityChage = appBasedVisibilityChage ?? noOp\n\t\tthis.connectivityModel = connectivityModel\n\n\t\tif (env.mode === Mode.App || env.mode === Mode.Desktop || env.mode === Mode.Admin) {\n\t\t\tthis.addPageInBackgroundListener()\n\t\t}\n\n\t\t// needed to help the MacOs desktop client to distinguish between Cmd+Arrow to navigate the history\n\t\t// and Cmd+Arrow to navigate a text editor\n\t\tif (env.mode === Mode.Desktop && client.isMacOS && window.addEventListener) {\n\t\t\twindow.addEventListener(\"keydown\", (e) => {\n\t\t\t\tif (!e.metaKey || e.key === \"Meta\") return\n\n\t\t\t\tconst target = e.target as HTMLElement | null\n\t\t\t\t// prevent history nav if the active element is an input / squire editor\n\t\t\t\tif (target?.tagName === \"INPUT\" || target?.contentEditable === \"true\") {\n\t\t\t\t\te.stopPropagation()\n\t\t\t\t} else if (e.key === \"ArrowLeft\") {\n\t\t\t\t\twindow.history.back()\n\t\t\t\t} else if (e.key === \"ArrowRight\") {\n\t\t\t\t\twindow.history.forward()\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\t// call the resize listeners once to make sure everyone\n\t\t// has the current window size once we're done initializing\n\t\tthis._resize()\n\t}\n\n\t_resize() {\n\t\ttry {\n\t\t\tfor (const listener of this._windowSizeListeners) {\n\t\t\t\tlistener(window.innerWidth, window.innerHeight)\n\t\t\t}\n\t\t} finally {\n\t\t\tm.redraw()\n\t\t}\n\t}\n\n\t_checkWindowClosing(enable: boolean) {\n\t\tthis.windowCloseConfirmation = enable\n\t}\n\n\t_beforeUnload(e: any): string | null {\n\t\t// BeforeUnloadEvent\n\t\tconsole.log(\"windowfacade._beforeUnload\")\n\n\t\tthis._notifyCloseListeners(e)\n\n\t\tif (this.windowCloseConfirmation) {\n\t\t\tlet m = lang.get(\"closeWindowConfirmation_msg\")\n\t\t\te.returnValue = m\n\t\t\treturn m\n\t\t} else {\n\t\t\tthis.logins?.logout(true)\n\t\t\treturn null\n\t\t}\n\t}\n\n\t/**\n\t * add a function to call when onpopstate event occurs\n\t * @param listener: return true if this popstate may go ahead\n\t * @returns {Function}\n\t */\n\taddHistoryEventListener(listener: (e: Event) => boolean): () => void {\n\t\tthis._historyStateEventListeners.push(listener)\n\n\t\treturn () => {\n\t\t\tconst index = this._historyStateEventListeners.indexOf(listener)\n\n\t\t\tif (index !== -1) {\n\t\t\t\tthis._historyStateEventListeners.splice(index, 1)\n\t\t\t}\n\t\t}\n\t}\n\n\tremoveHistoryEventListener(listener: (e: Event) => boolean): void {\n\t\tremove(this._historyStateEventListeners, listener)\n\t}\n\n\t/**\n\t * calls the last history event listener that was added\n\t * and reverts the state change if it returns false\n\t * TODO: this also fires for forward-events and when the user jumps around in the history\n\t * TODO: by long-clicking the back/forward buttons.\n\t * TODO: solving this requires extensive bookkeeping because the events are indistinguishable by default\n\t * @param e: popstate DOM event\n\t * @private\n\t */\n\t_popState(e: Event) {\n\t\tconst len = this._historyStateEventListeners.length\n\t\tif (len === 0) return\n\n\t\tif (this._ignoreNextPopstate) {\n\t\t\tthis._ignoreNextPopstate = false\n\t\t\treturn\n\t\t}\n\n\t\tif (!this._historyStateEventListeners[len - 1](e)) {\n\t\t\tthis._ignoreNextPopstate = true\n\t\t\t// go 1 page forward in the history\n\t\t\t// this reverts the state change (if the event was triggered by a back-button press)\n\t\t\thistory.go(1)\n\t\t}\n\t}\n\n\t_onUnload() {\n\t\tif (this.windowCloseConfirmation && this.logins) {\n\t\t\tthis.logins.logout(true)\n\t\t}\n\t}\n\n\taddOnlineListener(listener: () => void) {\n\t\twindow.addEventListener(\"online\", listener)\n\t}\n\n\taddOfflineListener(listener: () => void) {\n\t\twindow.addEventListener(\"offline\", listener)\n\t}\n\n\tasync reload(args: Params) {\n\t\tif (isApp() || isElectronClient()) {\n\t\t\tif (!Object.hasOwn(args, \"noAutoLogin\")) {\n\t\t\t\targs.noAutoLogin = true\n\t\t\t}\n\n\t\t\tconst { locator } = await import(\"../api/main/CommonLocator\")\n\n\t\t\tconst stringifiedArgs: Record<string, string> = {}\n\t\t\tfor (const [k, v] of Object.entries(args)) {\n\t\t\t\tif (v != null) {\n\t\t\t\t\tstringifiedArgs[k] = String(v)\n\t\t\t\t}\n\t\t\t}\n\t\t\tawait locator.commonSystemFacade.reload(stringifiedArgs)\n\t\t} else {\n\t\t\twindow.location.reload()\n\t\t}\n\t}\n\n\taddPageInBackgroundListener() {\n\t\t// For Android it's handled manually from native because visibilitychange listener is not called after the\n\t\t// app was inactive for some time.\n\t\t// See NativeWrapperCommands.js\n\t\tif (isIOSApp()) {\n\t\t\tdocument.addEventListener(\"visibilitychange\", () => {\n\t\t\t\tconsole.log(\"Visibility change, hidden: \", document.hidden)\n\n\t\t\t\tthis.appBasedVisibilityChage(!document.hidden)\n\n\t\t\t\tif (!document.hidden) {\n\t\t\t\t\t// On iOS devices the WebSocket close event fires when the app comes back to foreground\n\t\t\t\t\t// so we try to reconnect with a delay to receive _close event first. Otherwise\n\t\t\t\t\t// we may try to reconnect while we think that we're still connected\n\t\t\t\t\t// (e.g. first reconnect and then receive close).\n\t\t\t\t\t// We used to handle it in the EventBus and reconnect immediately but isIosApp()\n\t\t\t\t\t// check does not work in the worker currently.\n\t\t\t\t\t// Doing this for all apps just to be sure.\n\t\t\t\t\tsetTimeout(() => this.connectivityModel?.tryReconnect(false, true), 100)\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tonKeyboardSizeChanged(size: number) {\n\t\tthis._keyboardSize = size\n\n\t\tfor (let listener of this._keyboardSizeListeners) {\n\t\t\tlistener(size)\n\t\t}\n\n\t\tif (size > 0) {\n\t\t\t// reset position fixed for the body to allow scrolling in dialogs on iOS\n\t\t\t// https://github.com/scottjehl/Device-Bugs/issues/14\n\t\t\tconst body = document.body as any\n\t\t\tbody.style.position = \"unset\"\n\t\t\tsetTimeout(() => {\n\t\t\t\tbody.style.position = \"fixed\"\n\t\t\t}, 200)\n\t\t}\n\t}\n}\n\nexport const windowFacade: WindowFacade = new WindowFacade()\n"]}