{"version":3,"file":"SystemPermissionHandler.js","sourceRoot":"","sources":["../../../../../src/common/native/main/SystemPermissionHandler.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,QAAQ,EAAE,MAAM,yBAAyB,CAAA;AAElD,OAAO,EAAE,eAAe,EAAE,MAAM,2CAA2C,CAAA;AAC3E,OAAO,EAAE,MAAM,EAAE,MAAM,0BAA0B,CAAA;AAEjD,MAAM,OAAO,uBAAuB;IACN;IAA7B,YAA6B,YAAgC;QAAhC,iBAAY,GAAZ,YAAY,CAAoB;IAAG,CAAC;IAEjE,KAAK,CAAC,qBAAqB,CAAC,WAA6B;QACxD,MAAM,iBAAiB,GAAiC,IAAI,GAAG,EAAE,CAAA;QAEjE,KAAK,MAAM,UAAU,IAAI,WAAW,EAAE,CAAC;YACtC,iBAAiB,CAAC,GAAG,CAAC,UAAU,EAAE,MAAM,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC,CAAA;QACxE,CAAC;QAED,OAAO,iBAAiB,CAAA;IACzB,CAAC;IAED,KAAK,CAAC,aAAa,CAAC,UAA0B;QAC7C,IAAI,UAAU,uDAA6C,IAAI,QAAQ,EAAE,EAAE,CAAC;YAC3E,OAAO,IAAI,CAAA;QACZ,CAAC;QAED,OAAO,MAAM,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,UAAU,CAAC,CAAA;IACzD,CAAC;IAED,KAAK,CAAC,iBAAiB,CAAC,UAA0B,EAAE,aAA6B;QAChF,IAAI,CAAC;YACJ,MAAM,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAA;YACrD,OAAO,IAAI,CAAA;QACZ,CAAC;QAAC,OAAO,CAAC,EAAE,CAAC;YACZ,IAAI,CAAC,YAAY,eAAe,EAAE,CAAC;gBAClC,OAAO,CAAC,IAAI,CAAC,uBAAuB,EAAE,UAAU,CAAC,CAAA;gBACjD,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,CAAC,SAAS,EAAE,EAAE;oBAChD,IAAI,SAAS,EAAE,CAAC;wBACf,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAA;oBACjC,CAAC;gBACF,CAAC,CAAC,CAAA;gBACF,OAAO,KAAK,CAAA;YACb,CAAC;YACD,MAAM,CAAC,CAAA;QACR,CAAC;IACF,CAAC;CACD","sourcesContent":["import { MobileSystemFacade } from \"../common/generatedipc/MobileSystemFacade.js\"\nimport { PermissionType } from \"../common/generatedipc/PermissionType.js\"\nimport { isIOSApp } from \"../../api/common/Env.js\"\nimport { TranslationKey } from \"../../misc/LanguageViewModel.js\"\nimport { PermissionError } from \"../../api/common/error/PermissionError.js\"\nimport { Dialog } from \"../../gui/base/Dialog.js\"\n\nexport class SystemPermissionHandler {\n\tconstructor(private readonly systemFacade: MobileSystemFacade) {}\n\n\tasync queryPermissionsState(permissions: PermissionType[]) {\n\t\tconst permissionsStatus: Map<PermissionType, boolean> = new Map()\n\n\t\tfor (const permission of permissions) {\n\t\t\tpermissionsStatus.set(permission, await this.hasPermission(permission))\n\t\t}\n\n\t\treturn permissionsStatus\n\t}\n\n\tasync hasPermission(permission: PermissionType): Promise<boolean> {\n\t\tif (permission === PermissionType.IgnoreBatteryOptimization && isIOSApp()) {\n\t\t\treturn true\n\t\t}\n\n\t\treturn await this.systemFacade.hasPermission(permission)\n\t}\n\n\tasync requestPermission(permission: PermissionType, deniedMessage: TranslationKey): Promise<boolean> {\n\t\ttry {\n\t\t\tawait this.systemFacade.requestPermission(permission)\n\t\t\treturn true\n\t\t} catch (e) {\n\t\t\tif (e instanceof PermissionError) {\n\t\t\t\tconsole.warn(\"Permission denied for\", permission)\n\t\t\t\tDialog.confirm(deniedMessage).then((confirmed) => {\n\t\t\t\t\tif (confirmed) {\n\t\t\t\t\t\tthis.systemFacade.goToSettings()\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\treturn false\n\t\t\t}\n\t\t\tthrow e\n\t\t}\n\t}\n}\n"]}