{"version":3,"file":"GroupGuiUtils.js","sourceRoot":"","sources":["../../../../src/common/sharing/GroupGuiUtils.ts"],"names":[],"mappings":"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","sourcesContent":["import type { TranslationKey, MaybeTranslation } from \"../misc/LanguageViewModel\"\nimport { lang } from \"../misc/LanguageViewModel\"\nimport { GroupType } from \"../api/common/TutanotaConstants\"\nimport { getDefaultGroupName, ShareableGroupType } from \"./GroupUtils\"\nimport type { ReceivedGroupInvitation } from \"../api/entities/sys/TypeRefs.js\"\nimport type { lazy } from \"@tutao/tutanota-utils\"\n\nexport type GroupSharingTexts = {\n\treadonly groupNameLabel: TranslationKey\n\treadonly participantsLabel: (groupName: string) => string\n\treadonly acceptEmailSubject: string\n\treadonly acceptEmailBody: (userName: string, invitee: string, groupName: string) => string\n\treadonly declineEmailSubject: string\n\treadonly declineEmailBody: (userName: string, invitee: string, groupName: string) => string\n\treadonly shareEmailSubject: string\n\treadonly shareEmailBody: (sharer: string, groupName: string) => string\n\treadonly addMemberMessage: (groupName: string) => string\n\treadonly removeMemberMessage: (groupName: string, member: string) => string\n\treadonly alreadyGroupMemberMessage: MaybeTranslation\n\treadonly receivedGroupInvitationMessage: string\n\treadonly sharedGroupDefaultCustomName: (invitation: ReceivedGroupInvitation) => string\n\treadonly yourCustomNameLabel: (groupName: string) => string\n}\n\nconst CALENDAR_SHARING_TEXTS: lazy<GroupSharingTexts> = () => ({\n\tgroupNameLabel: \"calendarName_label\",\n\tparticipantsLabel: (groupName) =>\n\t\tlang.get(\"calendarParticipants_label\", {\n\t\t\t\"{name}\": groupName,\n\t\t}),\n\tacceptEmailSubject: lang.get(\"shareCalendarAcceptEmailSubject_msg\"),\n\tacceptEmailBody: (userName, invitee, groupName) =>\n\t\tlang.get(\"shareCalendarAcceptEmailBody_msg\", {\n\t\t\t\"{invitee}\": invitee,\n\t\t\t\"{calendarName}\": groupName,\n\t\t\t\"{recipientName}\": userName,\n\t\t}),\n\tdeclineEmailSubject: lang.get(\"shareCalendarDeclineEmailSubject_msg\"),\n\tdeclineEmailBody: (userName, invitee, groupName) =>\n\t\tlang.get(\"shareCalendarDeclineEmailBody_msg\", {\n\t\t\t\"{invitee}\": invitee,\n\t\t\t\"{calendarName}\": groupName,\n\t\t\t\"{recipientName}\": userName,\n\t\t}),\n\tshareEmailSubject: lang.get(\"shareCalendarInvitationEmailSubject_msg\"),\n\tshareEmailBody: (sender, calendarName) =>\n\t\tlang.get(\"shareCalendarInvitationEmailBody_msg\", {\n\t\t\t// Sender is displayed like Name <mail.address@tutanota.com>. Less-than and greater-than must be encoded for HTML\n\t\t\t\"{inviter}\": sender,\n\t\t\t\"{calendarName}\": calendarName,\n\t\t}),\n\taddMemberMessage: (_) => `${lang.get(\"shareCalendarWarning_msg\")} ${lang.get(\"shareWarningAliases_msg\")}`,\n\tremoveMemberMessage: (calendarName, invitee) =>\n\t\tlang.get(\"removeCalendarParticipantConfirm_msg\", {\n\t\t\t\"{participant}\": invitee,\n\t\t\t\"{calendarName}\": calendarName,\n\t\t}),\n\talreadyGroupMemberMessage: \"sharedCalendarAlreadyMember_msg\",\n\treceivedGroupInvitationMessage: `${lang.get(\"shareCalendarWarning_msg\")} ${lang.get(\"shareWarningAliases_msg\")}`,\n\tsharedGroupDefaultCustomName: (groupOwnerName) => getDefaultGroupName(GroupType.Calendar),\n\tyourCustomNameLabel: (groupName) =>\n\t\tlang.get(\"calendarCustomName_label\", {\n\t\t\t\"{customName}\": groupName,\n\t\t}),\n})\n\nconst TEMPLATE_SHARING_TEXTS: lazy<GroupSharingTexts> = () => ({\n\tgroupNameLabel: \"templateGroupName_label\",\n\tparticipantsLabel: (groupName) =>\n\t\tlang.get(\"sharedGroupParticipants_label\", {\n\t\t\t\"{groupName}\": groupName,\n\t\t}),\n\tacceptEmailSubject: lang.get(\"acceptTemplateGroupEmailSubject_msg\"),\n\tacceptEmailBody: (userName, invitee, groupName) =>\n\t\t`${lang.get(\"sharedGroupAcceptEmailBody_msg\", {\n\t\t\t\"{recipientName}\": userName,\n\t\t\t\"{invitee}\": invitee,\n\t\t\t\"{groupName}\": groupName,\n\t\t})} ${lang.get(\"automatedMessage_msg\")}`,\n\tdeclineEmailSubject: lang.get(\"declineTemplateGroupEmailSubject_msg\"),\n\tdeclineEmailBody: (userName, invitee, groupName) =>\n\t\t`${lang.get(\"sharedGroupDeclineEmailBody_msg\", {\n\t\t\t\"{recipientName}\": userName,\n\t\t\t\"{invitee}\": invitee,\n\t\t\t\"{groupName}\": groupName,\n\t\t})} ${lang.get(\"automatedMessage_msg\")}`,\n\tshareEmailSubject: lang.get(\"shareTemplateGroupEmailSubject_msg\"),\n\tshareEmailBody: (sharer: string, groupName: string) =>\n\t\tlang.get(\"shareTemplateGroupEmailBody_msg\", {\n\t\t\t\"{inviter}\": sharer,\n\t\t\t\"{groupName}\": groupName,\n\t\t}),\n\taddMemberMessage: (groupName: string) => `${lang.get(\"shareGroupWarning_msg\")} ${lang.get(\"shareWarningAliases_msg\")}`,\n\tremoveMemberMessage: (groupName: string, member: string) =>\n\t\tlang.get(\"removeSharedMemberConfirm_msg\", {\n\t\t\t\"{member}\": member,\n\t\t\t\"{groupName}\": groupName,\n\t\t}),\n\talreadyGroupMemberMessage: \"alreadySharedGroupMember_msg\",\n\treceivedGroupInvitationMessage: `${lang.get(\"shareGroupWarning_msg\")} ${lang.get(\"shareWarningAliases_msg\")}`,\n\tsharedGroupDefaultCustomName: (invitation) =>\n\t\tlang.get(\"sharedTemplateGroupDefaultName_label\", {\n\t\t\t\"{ownerName}\": invitation.inviterName || invitation.inviterMailAddress,\n\t\t}),\n\tyourCustomNameLabel: (groupName) =>\n\t\tlang.get(\"customName_label\", {\n\t\t\t\"{customName}\": groupName,\n\t\t}),\n})\n\nconst CONTACT_LIST_SHARING_TEXTS: lazy<GroupSharingTexts> = () => ({\n\tgroupNameLabel: \"contactListName_label\",\n\tparticipantsLabel: (groupName) =>\n\t\tlang.get(\"sharedGroupParticipants_label\", {\n\t\t\t\"{groupName}\": groupName,\n\t\t}),\n\tacceptEmailSubject: lang.get(\"acceptContactListEmailSubject_msg\"),\n\tacceptEmailBody: (userName, invitee, groupName) =>\n\t\t`${lang.get(\"sharedGroupAcceptEmailBody_msg\", {\n\t\t\t\"{recipientName}\": userName,\n\t\t\t\"{invitee}\": invitee,\n\t\t\t\"{groupName}\": groupName,\n\t\t})} ${lang.get(\"automatedMessage_msg\")}`,\n\tdeclineEmailSubject: lang.get(\"declineContactListEmailSubject_msg\"),\n\tdeclineEmailBody: (userName, invitee, groupName) =>\n\t\t`${lang.get(\"sharedGroupDeclineEmailBody_msg\", {\n\t\t\t\"{recipientName}\": userName,\n\t\t\t\"{invitee}\": invitee,\n\t\t\t\"{groupName}\": groupName,\n\t\t})} ${lang.get(\"automatedMessage_msg\")}`,\n\tshareEmailSubject: lang.get(\"shareContactListEmailSubject_msg\"),\n\tshareEmailBody: (sharer: string, groupName: string) =>\n\t\t`${lang.get(\"shareContactListEmailBody_msg\", {\n\t\t\t\"{inviter}\": sharer,\n\t\t\t\"{groupName}\": groupName,\n\t\t})} ${lang.get(\"automatedMessage_msg\")}`,\n\taddMemberMessage: (groupName: string) => `${lang.get(\"shareGroupWarning_msg\")} ${lang.get(\"shareWarningAliases_msg\")}`,\n\tremoveMemberMessage: (groupName: string, member: string) =>\n\t\tlang.get(\"removeSharedMemberConfirm_msg\", {\n\t\t\t\"{member}\": member,\n\t\t\t\"{groupName}\": groupName,\n\t\t}),\n\talreadyGroupMemberMessage: \"alreadySharedGroupMember_msg\",\n\treceivedGroupInvitationMessage: `${lang.get(\"shareGroupWarning_msg\")} ${lang.get(\"shareWarningAliases_msg\")}`,\n\tsharedGroupDefaultCustomName: (invitation) =>\n\t\tlang.get(\"sharedContactListDefaultName_label\", {\n\t\t\t\"{ownerName}\": invitation.inviterName || invitation.inviterMailAddress,\n\t\t}),\n\tyourCustomNameLabel: (groupName) =>\n\t\tlang.get(\"customName_label\", {\n\t\t\t\"{customName}\": groupName,\n\t\t}),\n})\n\nexport function getTextsForGroupType(groupType: ShareableGroupType): GroupSharingTexts {\n\tswitch (groupType) {\n\t\tcase GroupType.Calendar:\n\t\t\treturn CALENDAR_SHARING_TEXTS()\n\n\t\tcase GroupType.Template:\n\t\t\treturn TEMPLATE_SHARING_TEXTS()\n\n\t\tcase GroupType.ContactList:\n\t\t\treturn CONTACT_LIST_SHARING_TEXTS()\n\t}\n}\n"]}