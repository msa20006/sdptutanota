{"version":3,"file":"PasswordField.js","sourceRoot":"","sources":["../../../../../src/common/misc/passwords/PasswordField.ts"],"names":[],"mappings":"AAAA,OAAO,CAAiC,MAAM,SAAS,CAAA;AACvD,OAAO,EAAE,YAAY,EAAE,MAAM,wCAAwC,CAAA;AAGrE,OAAO,EAAgB,SAAS,EAAiC,MAAM,6BAA6B,CAAA;AACpG,OAAO,EAAE,qBAAqB,EAAE,MAAM,oCAAoC,CAAA;AAC1E,OAAO,EAAE,gBAAgB,EAAE,6BAA6B,EAAE,MAAM,oBAAoB,CAAA;AACpF,OAAO,EAAU,WAAW,EAAE,MAAM,+BAA+B,CAAA;AAYnE,MAAM,OAAO,aAAa;IACjB,kBAAkB,GAAY,KAAK,CAAA;IAE3C,IAAI,CAAC,KAAgC;QACpC,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAA;QACzB,qHAAqH;QACrH,MAAM,EAAE,gBAAgB,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,cAAc,EAAE,GAAG,KAAK,CAAA;QACpE,OAAO,CAAC,CAAC,SAAS,EAAE;YACnB,GAAG,cAAc;YACjB,KAAK,EAAE,KAAK,KAAK,SAAS,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,KAAK;YACrD,cAAc,EAAE,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,sDAA6B;YAC1F,IAAI,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC,iCAAoB,CAAC,wCAAuB;YAC3E,SAAS,EAAE,GAAG,EAAE,CAAC,aAAa,CAAC,eAAe,CAAC,cAAc,CAAC,KAAK,EAAE,gBAAgB,EAAE,MAAM,EAAE,cAAc,CAAC,SAAS,IAAI,IAAI,CAAC;YAChI,eAAe,EAAE,GAAG,EAAE;gBACrB,OAAO;oBACN,aAAa,CAAC,gBAAgB,CAAC,IAAI,CAAC,kBAAkB,EAAE,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,kBAAkB,GAAG,QAAQ,CAAC,CAAC;oBAC3G,cAAc,CAAC,eAAe,CAAC,CAAC,CAAC,cAAc,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC,IAAI;iBACxE,CAAA;YACF,CAAC;SACD,CAAC,CAAA;IACH,CAAC;IAEO,MAAM,CAAC,gBAAgB,CAAC,kBAA2B,EAAE,eAA4C;QACxG,OAAO,CAAC,CAAC,YAAY,EAAE;YACtB,KAAK,EAAE,kBAAkB,CAAC,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,uBAAuB;YAC9E,OAAO,EAAE,kBAAkB;YAC3B,SAAS,EAAE,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;gBACvB,eAAe,CAAC,KAAK,CAAC,CAAA;gBACtB,CAAC,CAAC,eAAe,EAAE,CAAA;YACpB,CAAC;YACD,IAAI,EAAE,kBAAkB,CAAC,CAAC,2BAAa,CAAC,sBAAU;YAClD,IAAI,4BAAoB;SACxB,CAAC,CAAA;IACH,CAAC;IAEO,MAAM,CAAC,eAAe,CAAC,KAAa,EAAE,QAA4B,EAAE,MAAiC,EAAE,SAAgC;QAC9I,MAAM,eAAe,GAAG,aAAa,CAAC,kBAAkB,CAAC,MAAM,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAA;QACjF,OAAO,CAAC,CAAC,QAAQ,EAAE;YAClB,CAAC,CAAC,oBAAoB,EAAE;gBACvB,QAAQ,IAAI,SAAS;oBACpB,CAAC,CAAC,CAAC,CAAC,qBAAqB,EAAE;wBACzB,KAAK,EAAE,MAAM;wBACb,mBAAmB,EAAE,6BAA6B,CAAC,QAAQ,CAAC;qBAC3D,CAAC;oBACJ,CAAC,CAAC,IAAI;gBACP,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,EAAE,MAAM,EAAE,eAAe,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI;aACpE,CAAC;YACF,SAAS,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,IAAI;SAC9B,CAAC,CAAA;IACH,CAAC;IAEO,MAAM,CAAC,kBAAkB,CAAC,MAAiC,EAAE,QAAgB,EAAE,QAA4B;QAClH,IAAI,MAAM,KAAK,MAAM,IAAI,QAAQ,IAAI,SAAS,EAAE,CAAC;YAChD,OAAO,aAAa,CAAC,iBAAiB,CAAC,QAAQ,EAAE,QAAS,CAAC,CAAA;QAC5D,CAAC;aAAM,IAAI,MAAM,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE,CAAC;YACjD,OAAO,MAAM,CAAA;QACd,CAAC;aAAM,CAAC;YACP,OAAO,IAAI,CAAA;QACZ,CAAC;IACF,CAAC;IAEO,MAAM,CAAC,iBAAiB,CAAC,QAAgB,EAAE,QAAgB;QAClE,IAAI,QAAQ,KAAK,EAAE,EAAE,CAAC;YACrB,OAAO;gBACN,IAAI,EAAE,SAAS;gBACf,IAAI,EAAE,sBAAsB;aAC5B,CAAA;QACF,CAAC;aAAM,IAAI,gBAAgB,CAAC,QAAQ,CAAC,EAAE,CAAC;YACvC,OAAO;gBACN,IAAI,EAAE,OAAO;gBACb,IAAI,EAAE,mBAAmB;aACzB,CAAA;QACF,CAAC;aAAM,CAAC;YACP,OAAO;gBACN,IAAI,EAAE,SAAS;gBACf,IAAI,EAAE,8BAA8B;aACpC,CAAA;QACF,CAAC;IACF,CAAC;CACD","sourcesContent":["import m, { Children, Component, Vnode } from \"mithril\"\nimport { ToggleButton } from \"../../gui/base/buttons/ToggleButton.js\"\nimport { Icons } from \"../../gui/base/icons/Icons.js\"\nimport { ButtonSize } from \"../../gui/base/ButtonSize.js\"\nimport { Autocomplete, TextField, TextFieldAttrs, TextFieldType } from \"../../gui/base/TextField.js\"\nimport { CompletenessIndicator } from \"../../gui/CompletenessIndicator.js\"\nimport { isSecurePassword, scaleToVisualPasswordStrength } from \"./PasswordUtils.js\"\nimport { Status, StatusField } from \"../../gui/base/StatusField.js\"\nimport type { lazy } from \"@tutao/tutanota-utils\"\nimport type { TranslationKey, MaybeTranslation } from \"../LanguageViewModel.js\"\n\ntype StatusSetting = Status | \"auto\"\n\nexport interface PasswordFieldAttrs extends Omit<TextFieldAttrs, \"label\" | \"type\"> {\n\tlabel?: MaybeTranslation\n\tpasswordStrength?: number\n\tstatus?: StatusSetting\n}\n\nexport class PasswordField implements Component<PasswordFieldAttrs> {\n\tprivate isPasswordRevealed: boolean = false\n\n\tview(vnode: Vnode<PasswordFieldAttrs>) {\n\t\tconst attrs = vnode.attrs\n\t\t// Separate and pass the generic `TextFieldAttrs` attributes so the user can still use all of `TextFields` properties\n\t\tconst { passwordStrength, status, label, ...textFieldAttrs } = attrs\n\t\treturn m(TextField, {\n\t\t\t...textFieldAttrs,\n\t\t\tlabel: label === undefined ? \"password_label\" : label,\n\t\t\tautocompleteAs: attrs.autocompleteAs ? attrs.autocompleteAs : Autocomplete.currentPassword,\n\t\t\ttype: this.isPasswordRevealed ? TextFieldType.Text : TextFieldType.Password,\n\t\t\thelpLabel: () => PasswordField.renderHelpLabel(textFieldAttrs.value, passwordStrength, status, textFieldAttrs.helpLabel ?? null),\n\t\t\tinjectionsRight: () => {\n\t\t\t\treturn [\n\t\t\t\t\tPasswordField.renderRevealIcon(this.isPasswordRevealed, (newValue) => (this.isPasswordRevealed = newValue)),\n\t\t\t\t\ttextFieldAttrs.injectionsRight ? textFieldAttrs.injectionsRight() : null,\n\t\t\t\t]\n\t\t\t},\n\t\t})\n\t}\n\n\tprivate static renderRevealIcon(isPasswordRevealed: boolean, onRevealToggled: (value: boolean) => unknown): Children {\n\t\treturn m(ToggleButton, {\n\t\t\ttitle: isPasswordRevealed ? \"concealPassword_action\" : \"revealPassword_action\",\n\t\t\ttoggled: isPasswordRevealed,\n\t\t\tonToggled: (value, e) => {\n\t\t\t\tonRevealToggled(value)\n\t\t\t\te.stopPropagation()\n\t\t\t},\n\t\t\ticon: isPasswordRevealed ? Icons.NoEye : Icons.Eye,\n\t\t\tsize: ButtonSize.Compact,\n\t\t})\n\t}\n\n\tprivate static renderHelpLabel(value: string, strength: number | undefined, status: StatusSetting | undefined, helpLabel: lazy<Children> | null): Children {\n\t\tconst displayedStatus = PasswordField.parseStatusSetting(status, value, strength)\n\t\treturn m(\".mt-xs\", [\n\t\t\tm(\".flex.items-center\", [\n\t\t\t\tstrength != undefined\n\t\t\t\t\t? m(CompletenessIndicator, {\n\t\t\t\t\t\t\tclass: \"mr-s\",\n\t\t\t\t\t\t\tpercentageCompleted: scaleToVisualPasswordStrength(strength),\n\t\t\t\t\t  })\n\t\t\t\t\t: null,\n\t\t\t\tdisplayedStatus ? m(StatusField, { status: displayedStatus }) : null,\n\t\t\t]),\n\t\t\thelpLabel ? helpLabel() : null,\n\t\t])\n\t}\n\n\tprivate static parseStatusSetting(status: StatusSetting | undefined, password: string, strength: number | undefined): Status | null {\n\t\tif (status === \"auto\" && strength != undefined) {\n\t\t\treturn PasswordField.getPasswordStatus(password, strength!)\n\t\t} else if (status && typeof status !== \"string\") {\n\t\t\treturn status\n\t\t} else {\n\t\t\treturn null\n\t\t}\n\t}\n\n\tprivate static getPasswordStatus(password: string, strength: number): Status {\n\t\tif (password === \"\") {\n\t\t\treturn {\n\t\t\t\ttype: \"neutral\",\n\t\t\t\ttext: \"password1Neutral_msg\",\n\t\t\t}\n\t\t} else if (isSecurePassword(strength)) {\n\t\t\treturn {\n\t\t\t\ttype: \"valid\",\n\t\t\t\ttext: \"passwordValid_msg\",\n\t\t\t}\n\t\t} else {\n\t\t\treturn {\n\t\t\t\ttype: \"invalid\",\n\t\t\t\ttext: \"password1InvalidUnsecure_msg\",\n\t\t\t}\n\t\t}\n\t}\n}\n"]}