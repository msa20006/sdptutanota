{"version":3,"file":"NativeMailImportFacade.js","sourceRoot":"","sources":["../../../../../../src/common/native/common/generatedipc/NativeMailImportFacade.ts"],"names":[],"mappings":"AAAA,iCAAiC","sourcesContent":["/* generated file, don't edit. */\n\nimport { UnencryptedCredentials } from \"./UnencryptedCredentials.js\"\n/**\n * Facade implemented by the native desktop client enabling mail imports, both from files, and via IMAP.\n */\nexport interface NativeMailImportFacade {\n\t/**\n\t * @returns the mail import state id of the import that might be resumed\n\t */\n\tgetResumableImport(mailboxId: string, targetOwnerGroup: string, unencryptedTutaCredentials: UnencryptedCredentials, apiUrl: string): Promise<IdTuple | null>\n\n\t/**\n\t * set up a new import state for the given parameters and return the ID of the new state entity on the server\n\t */\n\tprepareNewImport(\n\t\tmailboxId: string,\n\t\ttargetOwnerGroup: string,\n\t\ttargetMailSet: ReadonlyArray<string>,\n\t\tfilePaths: ReadonlyArray<string>,\n\t\tunencryptedTutaCredentials: UnencryptedCredentials,\n\t\tapiUrl: string,\n\t): Promise<IdTuple>\n\n\t/**\n\t * Sets progress action for next import iteration\n\t */\n\tsetProgressAction(mailboxId: string, importProgressAction: number): Promise<void>\n\n\t/**\n\t * await to receive any errors and import state changes that must be handled locally\n\t */\n\tsetAsyncErrorHook(mailboxId: string): Promise<void>\n}\n"]}