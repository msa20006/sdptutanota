{"version":3,"file":"OwnMailAddressNameChanger.js","sourceRoot":"","sources":["../../../../../src/common/settings/mailaddress/OwnMailAddressNameChanger.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,2BAA2B,EAAqB,MAAM,yCAAyC,CAAA;AAExG,OAAO,EAAE,aAAa,EAAE,MAAM,uBAAuB,CAAA;AAErD,yEAAyE;AACzE,MAAM,OAAO,yBAAyB;IACR;IAA6C;IAA1E,YAA6B,YAA0B,EAAmB,YAA0B;QAAvE,iBAAY,GAAZ,YAAY,CAAc;QAAmB,iBAAY,GAAZ,YAAY,CAAc;IAAG,CAAC;IAExG,KAAK,CAAC,cAAc;QACnB,MAAM,iBAAiB,GAAG,MAAM,IAAI,CAAC,oBAAoB,EAAE,CAAA;QAC3D,OAAO,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAA;IAC1C,CAAC;IAED,KAAK,CAAC,aAAa,CAAC,OAAe,EAAE,IAAY;QAChD,MAAM,cAAc,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,qBAAqB,EAAE,CAAA;QACtE,MAAM,iBAAiB,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAA;QACvG,IAAI,WAAW,GAAG,iBAAiB,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,WAAW,KAAK,OAAO,CAAC,CAAA;QAChG,IAAI,WAAW,IAAI,IAAI,EAAE,CAAC;YACzB,WAAW,GAAG,2BAA2B,CAAC,EAAE,WAAW,EAAE,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAA;YACrF,iBAAiB,CAAC,qBAAqB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAA;QAC1D,CAAC;aAAM,CAAC;YACP,WAAW,CAAC,UAAU,GAAG,IAAI,CAAA;QAC9B,CAAC;QACD,MAAM,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAA;QACjD,OAAO,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAA;IAC1C,CAAC;IAED,KAAK,CAAC,gBAAgB,CAAC,OAAe;QACrC,MAAM,cAAc,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,qBAAqB,EAAE,CAAA;QACtE,MAAM,iBAAiB,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAA;QACvG,aAAa,CAAC,iBAAiB,CAAC,qBAAqB,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,WAAW,KAAK,OAAO,CAAC,CAAA;QACxF,MAAM,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAA;QACjD,OAAO,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAA;IAC1C,CAAC;IAEO,UAAU,CAAC,iBAAoC;QACtD,MAAM,MAAM,GAAG,IAAI,GAAG,EAAE,CAAA;QACxB,KAAK,MAAM,UAAU,IAAI,iBAAiB,CAAC,qBAAqB,EAAE,CAAC;YAClE,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,WAAW,EAAE,UAAU,CAAC,UAAU,CAAC,CAAA;QAC1D,CAAC;QACD,OAAO,MAAM,CAAA;IACd,CAAC;IAEO,KAAK,CAAC,oBAAoB;QACjC,MAAM,cAAc,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,qBAAqB,EAAE,CAAA;QACtE,OAAO,MAAM,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAA;IACrF,CAAC;CACD","sourcesContent":["import { AddressToName, MailAddressNameChanger } from \"./MailAddressTableModel.js\"\nimport { MailboxModel } from \"../../mailFunctionality/MailboxModel.js\"\nimport { createMailAddressProperties, MailboxProperties } from \"../../api/entities/tutanota/TypeRefs.js\"\nimport { EntityClient } from \"../../api/common/EntityClient.js\"\nimport { findAndRemove } from \"@tutao/tutanota-utils\"\n\n/** Name changer for personal mailbox of the currently logged-in user. */\nexport class OwnMailAddressNameChanger implements MailAddressNameChanger {\n\tconstructor(private readonly mailboxModel: MailboxModel, private readonly entityClient: EntityClient) {}\n\n\tasync getSenderNames(): Promise<AddressToName> {\n\t\tconst mailboxProperties = await this.getMailboxProperties()\n\t\treturn this.collectMap(mailboxProperties)\n\t}\n\n\tasync setSenderName(address: string, name: string): Promise<AddressToName> {\n\t\tconst mailboxDetails = await this.mailboxModel.getUserMailboxDetails()\n\t\tconst mailboxProperties = await this.mailboxModel.getMailboxProperties(mailboxDetails.mailboxGroupRoot)\n\t\tlet aliasConfig = mailboxProperties.mailAddressProperties.find((p) => p.mailAddress === address)\n\t\tif (aliasConfig == null) {\n\t\t\taliasConfig = createMailAddressProperties({ mailAddress: address, senderName: name })\n\t\t\tmailboxProperties.mailAddressProperties.push(aliasConfig)\n\t\t} else {\n\t\t\taliasConfig.senderName = name\n\t\t}\n\t\tawait this.entityClient.update(mailboxProperties)\n\t\treturn this.collectMap(mailboxProperties)\n\t}\n\n\tasync removeSenderName(address: string): Promise<AddressToName> {\n\t\tconst mailboxDetails = await this.mailboxModel.getUserMailboxDetails()\n\t\tconst mailboxProperties = await this.mailboxModel.getMailboxProperties(mailboxDetails.mailboxGroupRoot)\n\t\tfindAndRemove(mailboxProperties.mailAddressProperties, (p) => p.mailAddress === address)\n\t\tawait this.entityClient.update(mailboxProperties)\n\t\treturn this.collectMap(mailboxProperties)\n\t}\n\n\tprivate collectMap(mailboxProperties: MailboxProperties): AddressToName {\n\t\tconst result = new Map()\n\t\tfor (const properties of mailboxProperties.mailAddressProperties) {\n\t\t\tresult.set(properties.mailAddress, properties.senderName)\n\t\t}\n\t\treturn result\n\t}\n\n\tprivate async getMailboxProperties(): Promise<MailboxProperties> {\n\t\tconst mailboxDetails = await this.mailboxModel.getUserMailboxDetails()\n\t\treturn await this.mailboxModel.getMailboxProperties(mailboxDetails.mailboxGroupRoot)\n\t}\n}\n"]}