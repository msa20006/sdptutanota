{"version":3,"file":"SuspensionError.js","sourceRoot":"","sources":["../../../../../../src/common/api/common/error/SuspensionError.ts"],"names":[],"mappings":"AAAA,wBAAwB;AAExB,OAAO,EAAE,aAAa,EAAE,MAAM,uBAAuB,CAAA;AACrD,OAAO,EAAE,SAAS,EAAE,MAAM,uBAAuB,CAAA;AAEjD,MAAM,OAAO,eAAgB,SAAQ,aAAa;IACjD,uBAAuB;IACd,IAAI,CAAe;IAC5B,YAAY,OAAe,EAAE,cAA6B;QACzD,KAAK,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAA;QAEjC,IAAI,cAAc,IAAI,IAAI,IAAI,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,EAAE,CAAC;YACvE,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC,CAAA;QACvD,CAAC;QAED,IAAI,CAAC,IAAI,GAAG,cAAc,CAAA;IAC3B,CAAC;CACD","sourcesContent":["//@bundleInto:common-min\n\nimport { TutanotaError } from \"@tutao/tutanota-error\"\nimport { filterInt } from \"@tutao/tutanota-utils\"\n\nexport class SuspensionError extends TutanotaError {\n\t// milliseconds to wait\n\treadonly data: string | null\n\tconstructor(message: string, suspensionTime: string | null) {\n\t\tsuper(\"SuspensionError\", message)\n\n\t\tif (suspensionTime != null && Number.isNaN(filterInt(suspensionTime))) {\n\t\t\tthrow new Error(\"invalid suspension time value (NaN)\")\n\t\t}\n\n\t\tthis.data = suspensionTime\n\t}\n}\n"]}