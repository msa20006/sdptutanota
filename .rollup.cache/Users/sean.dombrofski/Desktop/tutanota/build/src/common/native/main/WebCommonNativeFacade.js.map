{"version":3,"file":"WebCommonNativeFacade.js","sourceRoot":"","sources":["../../../../../src/common/native/main/WebCommonNativeFacade.ts"],"names":[],"mappings":"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","sourcesContent":["import { CommonNativeFacade } from \"../common/generatedipc/CommonNativeFacade.js\"\nimport { lang, TranslationKey, MaybeTranslation } from \"../../misc/LanguageViewModel.js\"\nimport { decodeBase64, lazyAsync, noOp, ofClass } from \"@tutao/tutanota-utils\"\nimport { CancelledError } from \"../../api/common/error/CancelledError.js\"\nimport { UserError } from \"../../api/main/UserError.js\"\nimport m from \"mithril\"\nimport { Dialog } from \"../../gui/base/Dialog.js\"\nimport { AttachmentType, getAttachmentType } from \"../../gui/AttachmentBubble.js\"\nimport { showRequestPasswordDialog } from \"../../misc/passwords/PasswordRequestDialog.js\"\nimport { LoginController } from \"../../api/main/LoginController.js\"\nimport { MailboxModel } from \"../../mailFunctionality/MailboxModel.js\"\nimport { UsageTestController } from \"@tutao/tutanota-usagetests\"\nimport { NativeFileApp } from \"../common/FileApp.js\"\nimport { NativePushServiceApp } from \"./NativePushServiceApp.js\"\nimport { locator } from \"../../api/main/CommonLocator.js\"\nimport { AppType } from \"../../misc/ClientConstants.js\"\nimport { ContactTypeRef } from \"../../api/entities/tutanota/TypeRefs.js\"\nimport { isDesktop } from \"../../api/common/Env\"\nimport { HighestTierPlans } from \"../../api/common/TutanotaConstants.js\"\n\nexport class WebCommonNativeFacade implements CommonNativeFacade {\n\tconstructor(\n\t\tprivate readonly logins: LoginController,\n\t\tprivate readonly mailboxModel: MailboxModel,\n\t\tprivate readonly usageTestController: UsageTestController,\n\t\tprivate readonly fileApp: lazyAsync<NativeFileApp>,\n\t\tprivate readonly pushService: lazyAsync<NativePushServiceApp>,\n\t\tprivate readonly fileImportHandler: (filesUris: ReadonlyArray<string>) => unknown,\n\t\treadonly openMailBox: (userId: string, address: string, requestedPath: string | null) => Promise<void>,\n\t\treadonly openCalendar: (userId: string) => Promise<void>,\n\t\tprivate readonly appType: AppType,\n\t\treadonly openSettings: (path: string) => Promise<void>,\n\t) {}\n\n\tasync openContactEditor(contactId: string): Promise<void> {\n\t\tawait this.logins.waitForFullLogin()\n\t\tconst { ContactEditor } = await import(\"../../../mail-app/contacts/ContactEditor.js\")\n\t\tconst decodedContactId = decodeBase64(\"utf-8\", contactId)\n\t\tconst idParts = decodedContactId.split(\"/\")\n\t\ttry {\n\t\t\tconst contact = await locator.entityClient.load(ContactTypeRef, [idParts[0], idParts[1]])\n\t\t\tconst editor = new ContactEditor(locator.entityClient, contact)\n\n\t\t\treturn editor.show()\n\t\t} catch (err) {\n\t\t\tconsole.error(err)\n\t\t\treturn Dialog.message(\"contactNotFound_msg\")\n\t\t}\n\t}\n\n\t/**\n\t * create a mail editor as requested from the native side, ie because a\n\t * mailto-link was clicked or the \"Send as mail\" option\n\t * in LibreOffice/Windows Explorer was used.\n\t *\n\t * if a mailtoUrl is given:\n\t *  * the other arguments will be ignored.\n\t *  * confidential will be set to false\n\t *\n\t */\n\tasync createMailEditor(\n\t\tfilesUris: ReadonlyArray<string>,\n\t\ttext: string,\n\t\taddresses: ReadonlyArray<string>,\n\t\tsubject: string,\n\t\tmailToUrlString: string,\n\t): Promise<void> {\n\t\tconst { newMailEditorFromTemplate, newMailtoUrlMailEditor } = await import(\"../../../mail-app/mail/editor/MailEditor.js\")\n\t\tconst signatureModule = await import(\"../../../mail-app/mail/signature/Signature\")\n\t\tawait this.logins.waitForPartialLogin()\n\t\tconst mailboxDetails = await this.mailboxModel.getUserMailboxDetails()\n\t\tlet editor\n\n\t\ttry {\n\t\t\tif (mailToUrlString) {\n\t\t\t\teditor = await newMailtoUrlMailEditor(mailToUrlString, false, mailboxDetails).catch(ofClass(CancelledError, noOp))\n\t\t\t\tif (!editor) return\n\n\t\t\t\teditor.show()\n\t\t\t} else {\n\t\t\t\tconst fileApp = await this.fileApp()\n\t\t\t\tconst files = await fileApp.getFilesMetaData(filesUris)\n\t\t\t\tconst allFilesAreVCards = files.length > 0 && files.every((file) => getAttachmentType(file.mimeType) === AttachmentType.CONTACT)\n\t\t\t\tconst allFilesAreICS = files.length > 0 && files.every((file) => getAttachmentType(file.mimeType) === AttachmentType.CALENDAR)\n\t\t\t\tconst allFilesAreMail = files.length > 0 && files.every((file) => getAttachmentType(file.mimeType) === AttachmentType.MAIL)\n\n\t\t\t\tif (this.appType === AppType.Calendar) {\n\t\t\t\t\tif (!allFilesAreICS) {\n\t\t\t\t\t\treturn Dialog.message(\"invalidCalendarFile_msg\")\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this.handleFileImport(filesUris)\n\t\t\t\t}\n\n\t\t\t\tlet willImport = false\n\t\t\t\tif (allFilesAreVCards) {\n\t\t\t\t\twillImport = await Dialog.choice(\"vcardInSharingFiles_msg\", [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttext: \"import_action\",\n\t\t\t\t\t\t\tvalue: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{ text: \"attachFiles_action\", value: false },\n\t\t\t\t\t])\n\t\t\t\t} else if (allFilesAreICS) {\n\t\t\t\t\twillImport = await Dialog.choice(\"icsInSharingFiles_msg\", [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttext: \"import_action\",\n\t\t\t\t\t\t\tvalue: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{ text: \"attachFiles_action\", value: false },\n\t\t\t\t\t])\n\t\t\t\t} else if (isDesktop() && allFilesAreMail) {\n\t\t\t\t\t// importing mails is currently only allowed on plan LEGEND and UNLIMITED\n\t\t\t\t\tconst currentPlanType = await locator.logins.getUserController().getPlanType()\n\t\t\t\t\tconst isHighestTierPlan = HighestTierPlans.includes(currentPlanType)\n\n\t\t\t\t\tlet importAction: { text: MaybeTranslation; value: boolean } = {\n\t\t\t\t\t\ttext: \"import_action\",\n\t\t\t\t\t\tvalue: true,\n\t\t\t\t\t}\n\t\t\t\t\tlet attachFilesAction: { text: MaybeTranslation; value: boolean } = {\n\t\t\t\t\t\ttext: \"attachFiles_action\",\n\t\t\t\t\t\tvalue: false,\n\t\t\t\t\t}\n\t\t\t\t\twillImport = isHighestTierPlan && (await Dialog.choice(\"emlOrMboxInSharingFiles_msg\", [importAction, attachFilesAction]))\n\t\t\t\t}\n\n\t\t\t\tif (willImport) {\n\t\t\t\t\tawait this.handleFileImport(filesUris)\n\t\t\t\t} else {\n\t\t\t\t\tconst address = (addresses && addresses[0]) || \"\"\n\t\t\t\t\tconst recipients = address\n\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\tto: [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tname: \"\",\n\t\t\t\t\t\t\t\t\t\taddress: address,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t: {}\n\t\t\t\t\teditor = await newMailEditorFromTemplate(\n\t\t\t\t\t\tmailboxDetails,\n\t\t\t\t\t\trecipients,\n\t\t\t\t\t\tsubject || (files.length > 0 ? files[0].name : \"\"),\n\t\t\t\t\t\tsignatureModule.appendEmailSignature(text || \"\", this.logins.getUserController().props),\n\t\t\t\t\t\tfiles,\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\ttrue, // we want emails created in this method to always default to saving changes\n\t\t\t\t\t)\n\n\t\t\t\t\teditor.show()\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tif (e instanceof UserError) {\n\t\t\t\t// noinspection ES6MissingAwait\n\t\t\t\tDialog.message(lang.makeTranslation(\"error_msg\", e.message))\n\t\t\t}\n\t\t\tthrow e\n\t\t}\n\t}\n\n\tasync invalidateAlarms(): Promise<void> {\n\t\tconst pushService = await this.pushService()\n\t\tawait pushService.reRegister()\n\t}\n\n\tasync showAlertDialog(translationKey: string): Promise<void> {\n\t\tconst { Dialog } = await import(\"../../gui/base/Dialog.js\")\n\t\treturn Dialog.message(translationKey as TranslationKey)\n\t}\n\n\tasync updateTheme(): Promise<void> {\n\t\tawait locator.themeController.reloadTheme()\n\t}\n\n\t/**\n\t * largely modeled after ChangePasswordOkAction, except that we're never changing the password with it and\n\t * don't support bcrypt for this one.\n\t */\n\tasync promptForNewPassword(title: string, oldPassword: string | null): Promise<string> {\n\t\tconst [{ Dialog }, { PasswordForm, PasswordModel }] = await Promise.all([import(\"../../gui/base/Dialog.js\"), import(\"../../settings/PasswordForm.js\")])\n\t\tconst model = new PasswordModel(this.usageTestController, this.logins, {\n\t\t\tcheckOldPassword: false,\n\t\t\tenforceStrength: false,\n\t\t})\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst changePasswordOkAction = async (dialog: Dialog) => {\n\t\t\t\tconst error = model.getErrorMessageId()\n\n\t\t\t\tif (error) {\n\t\t\t\t\tDialog.message(error)\n\t\t\t\t} else {\n\t\t\t\t\tresolve(model.getNewPassword())\n\t\t\t\t\tdialog.close()\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tDialog.showActionDialog({\n\t\t\t\ttitle: lang.makeTranslation(title, title),\n\t\t\t\tchild: () => m(PasswordForm, { model }),\n\t\t\t\tvalidator: () => model.getErrorMessageId(),\n\t\t\t\tokAction: changePasswordOkAction,\n\t\t\t\tcancelAction: () => reject(new CancelledError(\"user cancelled operation\")),\n\t\t\t\tallowCancel: true,\n\t\t\t})\n\t\t})\n\t}\n\n\tasync promptForPassword(title: string): Promise<string> {\n\t\tconst { Dialog } = await import(\"../../gui/base/Dialog.js\")\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst dialog = showRequestPasswordDialog({\n\t\t\t\ttitle: lang.makeTranslation(title, title),\n\t\t\t\taction: async (pw) => {\n\t\t\t\t\tresolve(pw)\n\t\t\t\t\tdialog.close()\n\t\t\t\t\treturn \"\"\n\t\t\t\t},\n\t\t\t\tcancel: {\n\t\t\t\t\ttextId: \"cancel_action\",\n\t\t\t\t\taction: () => reject(new CancelledError(\"user cancelled operation\")),\n\t\t\t\t},\n\t\t\t})\n\t\t})\n\t}\n\n\t/**\n\t * Parse and handle files given a list of files URI.\n\t * @param filesUris List of files URI to be parsed\n\t */\n\tasync handleFileImport(filesUris: ReadonlyArray<string>): Promise<void> {\n\t\t// Since we might be handling calendar files, we must wait for full login\n\t\tawait this.logins.waitForFullLogin()\n\t\tawait this.fileImportHandler(filesUris)\n\t}\n}\n"]}