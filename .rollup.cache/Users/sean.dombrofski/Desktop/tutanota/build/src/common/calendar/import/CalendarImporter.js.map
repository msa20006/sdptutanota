{"version":3,"file":"CalendarImporter.js","sourceRoot":"","sources":["../../../../../src/common/calendar/import/CalendarImporter.ts"],"names":[],"mappings":"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","sourcesContent":["import { DataFile } from \"../../api/common/DataFile.js\"\nimport { Require, utf8Uint8ArrayToString } from \"@tutao/tutanota-utils\"\nimport { getTimeZone } from \"../date/CalendarUtils.js\"\nimport { ParserError } from \"../../misc/parsing/ParserCombinator.js\"\nimport { CalendarEvent } from \"../../api/entities/tutanota/TypeRefs.js\"\nimport { AlarmInfoTemplate } from \"../../api/worker/facades/lazy/CalendarFacade.js\"\nimport { Dialog, DialogType } from \"../../gui/base/Dialog.js\"\nimport { lang, MaybeTranslation } from \"../../misc/LanguageViewModel.js\"\nimport { List, ListAttrs, ListLoadingState, MultiselectMode, RenderConfig } from \"../../gui/base/List.js\"\nimport { KindaCalendarRow } from \"../../../calendar-app/calendar/gui/CalendarRow.js\"\nimport { size } from \"../../gui/size.js\"\nimport { DialogHeaderBar } from \"../../gui/base/DialogHeaderBar.js\"\nimport { ButtonType } from \"../../gui/base/Button.js\"\nimport m from \"mithril\"\nimport { DropDownSelector, DropDownSelectorAttrs } from \"../../gui/base/DropDownSelector.js\"\nimport { getSharedGroupName, hasCapabilityOnGroup } from \"../../sharing/GroupUtils.js\"\nimport { BootIcons } from \"../../gui/base/icons/BootIcons.js\"\nimport { CalendarInfo, CalendarModel } from \"../../../calendar-app/calendar/model/CalendarModel.js\"\nimport { UserController } from \"../../api/main/UserController.js\"\nimport { ShareCapability } from \"../../api/common/TutanotaConstants.js\"\nimport { renderCalendarColor } from \"../../../calendar-app/calendar/gui/CalendarGuiUtils.js\"\nimport { GroupColors } from \"../../../calendar-app/calendar/view/CalendarView.js\"\nimport { handleCalendarImport } from \"./CalendarImporterDialog.js\"\nimport { parseCalendarStringData } from \"./ImportExportUtils.js\"\n\nexport type ParsedEvent = {\n\tevent: Require<\"uid\", CalendarEvent>\n\talarms: Array<AlarmInfoTemplate>\n}\nexport type ParsedCalendarData = {\n\tmethod: string\n\tcontents: Array<ParsedEvent>\n}\n\n/** given an ical datafile, get the parsed calendar events with their alarms as well as the ical method */\nexport function parseCalendarFile(file: DataFile): ParsedCalendarData {\n\ttry {\n\t\tconst stringData = utf8Uint8ArrayToString(file.data)\n\t\treturn parseCalendarStringData(stringData, getTimeZone())\n\t} catch (e) {\n\t\tif (e instanceof ParserError) {\n\t\t\tthrow new ParserError(e.message, file.name)\n\t\t} else {\n\t\t\tthrow e\n\t\t}\n\t}\n}\n\n/**\n * Shows a dialog with a preview of a given list of events\n * @param events The event list to be previewed\n * @param okAction The action to be executed when the user press the ok or continue button\n * @param title\n */\nexport function showEventsImportDialog(events: CalendarEvent[], okAction: (dialog: Dialog) => unknown, title: MaybeTranslation) {\n\tconst renderConfig: RenderConfig<CalendarEvent, KindaCalendarRow> = {\n\t\titemHeight: size.list_row_height,\n\t\tmultiselectionAllowed: MultiselectMode.Disabled,\n\t\tswipe: null,\n\t\tcreateElement: (dom) => {\n\t\t\treturn new KindaCalendarRow(dom)\n\t\t},\n\t}\n\n\tconst dialog = new Dialog(DialogType.EditSmall, {\n\t\tview: () => [\n\t\t\tm(DialogHeaderBar, {\n\t\t\t\tleft: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: ButtonType.Secondary,\n\t\t\t\t\t\tlabel: \"cancel_action\",\n\t\t\t\t\t\tclick: () => {\n\t\t\t\t\t\t\tdialog.close()\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tmiddle: title,\n\t\t\t\tright: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: ButtonType.Primary,\n\t\t\t\t\t\tlabel: \"import_action\",\n\t\t\t\t\t\tclick: () => {\n\t\t\t\t\t\t\tokAction(dialog)\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t}),\n\t\t\t/** variable-size child container that may be scrollable. */\n\t\t\tm(\".dialog-max-height.plr-s.pb.text-break.nav-bg\", [\n\t\t\t\tm(\n\t\t\t\t\t\".flex.col.rel.mt-s\",\n\t\t\t\t\t{\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\theight: \"80vh\",\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tm(List, {\n\t\t\t\t\t\trenderConfig,\n\t\t\t\t\t\tstate: {\n\t\t\t\t\t\t\titems: events,\n\t\t\t\t\t\t\tloadingStatus: ListLoadingState.Done,\n\t\t\t\t\t\t\tloadingAll: false,\n\t\t\t\t\t\t\tinMultiselect: true,\n\t\t\t\t\t\t\tactiveIndex: null,\n\t\t\t\t\t\t\tselectedItems: new Set(),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonLoadMore() {},\n\t\t\t\t\t\tonRangeSelectionTowards(item: CalendarEvent) {},\n\t\t\t\t\t\tonRetryLoading() {},\n\t\t\t\t\t\tonSingleSelection(item: CalendarEvent) {},\n\t\t\t\t\t\tonSingleTogglingMultiselection(item: CalendarEvent) {},\n\t\t\t\t\t\tonStopLoading() {},\n\t\t\t\t\t} satisfies ListAttrs<CalendarEvent, KindaCalendarRow>),\n\t\t\t\t),\n\t\t\t]),\n\t\t],\n\t}).show()\n}\n\n/**\n * Handle the import of calendar events with preview of events to be imported\n * @param calendarModel\n * @param userController\n * @param events The event list to be previewed and imported\n */\nexport async function importCalendarFile(calendarModel: CalendarModel, userController: UserController, events: ParsedEvent[]) {\n\tconst groupSettings = userController.userSettingsGroupRoot.groupSettings\n\tconst calendarInfos = await calendarModel.getCalendarInfos()\n\tconst groupColors: Map<Id, string> = groupSettings.reduce((acc, gc) => {\n\t\tacc.set(gc.group, gc.color)\n\t\treturn acc\n\t}, new Map())\n\n\tcalendarSelectionDialog(Array.from(calendarInfos.values()), userController, groupColors, (dialog, selectedCalendar) => {\n\t\tdialog.close()\n\t\thandleCalendarImport(selectedCalendar.groupRoot, events)\n\t})\n}\n\n/**\n * Shows a dialog with user's calendars that are able to receive new events\n * @param calendars List of user's calendars\n * @param userController\n * @param groupColors List of calendar's colors\n * @param okAction\n */\nexport function calendarSelectionDialog(\n\tcalendars: CalendarInfo[],\n\tuserController: UserController,\n\tgroupColors: GroupColors,\n\tokAction: (dialog: Dialog, selectedCalendar: CalendarInfo) => unknown,\n) {\n\tconst availableCalendars = calendars.filter((calendarInfo) => hasCapabilityOnGroup(userController.user, calendarInfo.group, ShareCapability.Write))\n\tlet selectedCalendar = availableCalendars[0]\n\n\tconst dialog = new Dialog(DialogType.EditSmall, {\n\t\tview: () => [\n\t\t\tm(DialogHeaderBar, {\n\t\t\t\tleft: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: ButtonType.Secondary,\n\t\t\t\t\t\tlabel: \"cancel_action\",\n\t\t\t\t\t\tclick: () => {\n\t\t\t\t\t\t\tdialog.close()\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tmiddle: \"calendar_label\",\n\t\t\t\tright: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: ButtonType.Primary,\n\t\t\t\t\t\tlabel: \"pricing.select_action\",\n\t\t\t\t\t\tclick: () => {\n\t\t\t\t\t\t\tokAction(dialog, selectedCalendar)\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t}),\n\n\t\t\tm(\".dialog-max-height.plr-l.pt.pb.text-break.scroll\", [\n\t\t\t\tm(\".text-break.selectable\", lang.get(\"calendarImportSelection_label\")),\n\t\t\t\tm(DropDownSelector, {\n\t\t\t\t\tlabel: \"calendar_label\",\n\t\t\t\t\titems: availableCalendars.map((calendarInfo) => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tname: getSharedGroupName(calendarInfo.groupInfo, userController, calendarInfo.shared),\n\t\t\t\t\t\t\tvalue: calendarInfo,\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t\tselectedValue: selectedCalendar,\n\t\t\t\t\tselectionChangedHandler: (v) => (selectedCalendar = v),\n\t\t\t\t\ticon: BootIcons.Expand,\n\t\t\t\t\tdisabled: availableCalendars.length < 2,\n\t\t\t\t\thelpLabel: () => renderCalendarColor(selectedCalendar, groupColors),\n\t\t\t\t} satisfies DropDownSelectorAttrs<CalendarInfo>),\n\t\t\t]),\n\t\t],\n\t}).show()\n}\n"]}