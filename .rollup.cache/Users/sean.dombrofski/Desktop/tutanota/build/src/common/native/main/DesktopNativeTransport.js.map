{"version":3,"file":"DesktopNativeTransport.js","sourceRoot":"","sources":["../../../../../src/common/native/main/DesktopNativeTransport.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,gBAAgB,EAAE,MAAM,yBAAyB,CAAA;AAK1D,gBAAgB,EAAE,CAAA;AAElB;;;;GAIG;AAEH,MAAM,OAAO,sBAAsB;IAGL;IAA7B,YAA6B,SAAoB;QAApB,cAAS,GAAT,SAAS,CAAW;IAAG,CAAC;IAErD,WAAW,CAAC,OAAqC;QAChD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAA;IAC/B,CAAC;IAED,iBAAiB,CAAC,OAA2D;QAC5E,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAA;IAC/B,CAAC;CACD","sourcesContent":["import { assertMainOrNode } from \"../../api/common/Env.js\"\nimport { Message } from \"../../api/common/threading/MessageDispatcher.js\"\nimport { Transport } from \"../../api/common/threading/Transport.js\"\nimport { NativeApp } from \"../../../global.js\"\n\nassertMainOrNode()\n\n/**\n * Transport for communication between electron native and webview\n * Uses window.nativeApp, which is injected by the preload script in desktop mode\n * electron can handle message passing without jsonification\n */\n\nexport class DesktopNativeTransport<OutgoingRequestType extends string = JsRequestType, IncomingRequestType extends string = NativeRequestType>\n\timplements Transport<OutgoingRequestType, IncomingRequestType>\n{\n\tconstructor(private readonly nativeApp: NativeApp) {}\n\n\tpostMessage(message: Message<OutgoingRequestType>) {\n\t\tthis.nativeApp.invoke(message)\n\t}\n\n\tsetMessageHandler(handler: (message: Message<IncomingRequestType>) => unknown): void {\n\t\tthis.nativeApp.attach(handler)\n\t}\n}\n"]}