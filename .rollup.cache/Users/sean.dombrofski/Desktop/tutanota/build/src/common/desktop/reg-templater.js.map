{"version":3,"file":"reg-templater.js","sourceRoot":"","sources":["../../../../src/common/desktop/reg-templater.ts"],"names":[],"mappings":"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","sourcesContent":["import type { RegistryTemplateDefinition } from \"./integration/RegistryScriptGenerator\"\nimport { applyScriptBuilder, removeScriptBuilder } from \"./integration/RegistryScriptGenerator\"\n\nexport enum RegistryRoot {\n\t/** Global (per-device) registry keys */\n\tLOCAL_MACHINE = \"HKEY_LOCAL_MACHINE\",\n\t/** Per-user registry keys */\n\tCURRENT_USER = \"HKEY_CURRENT_USER\",\n}\n\n/**\n * > The HKEY_CLASSES_ROOT (HKCR) key contains file name extension associations and COM class registration information such as ProgIDs, CLSIDs, and IIDs.\n * > It is primarily intended for compatibility with the registry in 16-bit Windows.\n *\n * see https://docs.microsoft.com/en-us/windows/win32/sysinfo/hkey-classes-root-key\n */\nconst HKCR = \"HKEY_CLASSES_ROOT\"\n\n/**\n * execPath: path for the dll to this executable\n * dllPath: path for other apps to the dll\n * logPath: path for the dll to log mapi activity to\n * tmpPath: path for the dll to put temporary attachment files\n */\nexport type RegistryPaths = {\n\texecPath: string\n\tdllPath: string\n\tlogPath: string\n\ttmpPath: string\n}\n\n/**\n * get a registry template specific to tutanota desktop\n * https://docs.microsoft.com/en-us/windows/win32/msi/installation-context#registry-redirection\n */\nfunction getTemplate(opts: RegistryPaths, registryRoot: RegistryRoot): RegistryTemplateDefinition {\n\tconst { execPath, dllPath, logPath, tmpPath } = opts\n\tconst client_template = {\n\t\ttutanota: {\n\t\t\t\"\": \"tutanota\",\n\t\t\tDLLPath: dllPath,\n\t\t\tEXEPath: execPath,\n\t\t\tLOGPath: logPath,\n\t\t\tTMPPath: tmpPath,\n\t\t},\n\t\t\"\": \"tutanota\",\n\t}\n\tconst mailto_template = {\n\t\t\"\": \"URL:MailTo Protocol\",\n\t\t\"URL Protocol\": \"\",\n\t\tFriendlyTypeName: \"Tutanota URL\",\n\t\tshell: {\n\t\t\topen: {\n\t\t\t\tcommand: {\n\t\t\t\t\t\"\": `\\\\\"${execPath}\\\\\" \\\\\"%1\\\\\"`,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t}\n\tconst capabilities_template = {\n\t\ttutao: {\n\t\t\ttutanota: {\n\t\t\t\tCapabilities: {\n\t\t\t\t\tApplicationName: \"Tutanota Desktop\",\n\t\t\t\t\tApplicationDescription: \"\",\n\t\t\t\t\tUrlAssociations: {\n\t\t\t\t\t\tmailto: \"tutanota.Mailto\",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t}\n\n\treturn [\n\t\t{\n\t\t\troot: `${registryRoot}\\\\SOFTWARE\\\\Clients\\\\Mail`,\n\t\t\tvalue: client_template,\n\t\t},\n\t\t{\n\t\t\troot: `${registryRoot}\\\\SOFTWARE\\\\CLASSES`,\n\t\t\tvalue: {\n\t\t\t\tmailto: mailto_template,\n\t\t\t\t\"tutanota.Mailto\": mailto_template,\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\troot: HKCR,\n\t\t\tvalue: {\n\t\t\t\tmailto: mailto_template,\n\t\t\t\t\"tutanota.Mailto\": mailto_template,\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\troot: `${registryRoot}\\\\SOFTWARE\\\\RegisteredApplications`,\n\t\t\tvalue: {\n\t\t\t\ttutanota: \"SOFTWARE\\\\\\\\tutao\\\\\\\\tutanota\\\\\\\\Capabilities\",\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\troot: `${registryRoot}\\\\SOFTWARE\\\\Wow6432Node\\\\RegisteredApplications`,\n\t\t\tvalue: {\n\t\t\t\ttutanota: \"SOFTWARE\\\\\\\\Wow6432Node\\\\\\\\tutao\\\\\\\\tutanota\\\\\\\\Capabilities\",\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\troot: `${registryRoot}\\\\SOFTWARE`,\n\t\t\tvalue: capabilities_template,\n\t\t},\n\t\t{\n\t\t\troot: `${registryRoot}\\\\SOFTWARE\\\\Wow6432Node`,\n\t\t\tvalue: capabilities_template,\n\t\t},\n\t]\n}\n\nfunction escape(s: string): string {\n\treturn s.replace(/\\\\/g, \"\\\\\\\\\")\n}\n\n/**\n * produce a tmp windows registry script to register an executable as a mailto handler\n * @param registryRoot\n * @param opts {RegistryPaths}\n * @returns {string} registry script\n */\nexport function makeRegisterKeysScript(registryRoot: RegistryRoot, opts: RegistryPaths): string {\n\tconst { execPath, dllPath, logPath, tmpPath } = opts\n\tconst template = getTemplate(\n\t\t{\n\t\t\texecPath: escape(execPath),\n\t\t\tdllPath: escape(dllPath),\n\t\t\tlogPath: escape(logPath),\n\t\t\ttmpPath: escape(tmpPath),\n\t\t},\n\t\tregistryRoot,\n\t)\n\treturn applyScriptBuilder(template)\n}\n\n/**\n * produce a tmp windows registry script to unregister tutanota as a mailto handler\n * @returns {string} registry script\n */\nexport function makeUnregisterKeysScript(registryRoot: RegistryRoot): string {\n\t// the removal script generator doesn't care about values\n\tconst template = getTemplate(\n\t\t{\n\t\t\texecPath: \"execPath\",\n\t\t\tdllPath: \"dllPath\",\n\t\t\tlogPath: \"logPath\",\n\t\t\ttmpPath: \"tmpPath\",\n\t\t},\n\t\tregistryRoot,\n\t)\n\treturn removeScriptBuilder(template)\n}\n"]}