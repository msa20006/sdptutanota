{"version":3,"file":"DesktopExportLock.js","sourceRoot":"","sources":["../../../../../src/common/desktop/export/DesktopExportLock.ts"],"names":[],"mappings":"AAKA,2EAA2E;AAC3E,MAAM,OAAO,iBAAiB;IACZ,KAAK,GAAY,IAAI,GAAG,EAAE,CAAA;IAE3C,WAAW,CAAC,MAAU;QACrB,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;YAC5B,wCAA+B;QAChC,CAAC;aAAM,CAAC;YACP,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAA;YACtB,uCAA8B;QAC/B,CAAC;IACF,CAAC;IAED,MAAM,CAAC,MAAU;QAChB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAA;IAC1B,CAAC;CACD","sourcesContent":["export const enum LockResult {\n\tLockAcquired,\n\tAlreadyLocked,\n}\n\n/** A simple lock to prevent parallel mailbox export in multiple windows */\nexport class DesktopExportLock {\n\tprivate readonly locks: Set<Id> = new Set()\n\n\tacquireLock(userId: Id): LockResult {\n\t\tif (this.locks.has(userId)) {\n\t\t\treturn LockResult.AlreadyLocked\n\t\t} else {\n\t\t\tthis.locks.add(userId)\n\t\t\treturn LockResult.LockAcquired\n\t\t}\n\t}\n\n\tunlock(userId: Id): void {\n\t\tthis.locks.delete(userId)\n\t}\n}\n"]}