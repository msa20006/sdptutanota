{"version":3,"file":"ProgressMonitorDelegate.js","sourceRoot":"","sources":["../../../../../src/common/api/worker/ProgressMonitorDelegate.ts"],"names":[],"mappings":"AAGA,uDAAuD;AACvD,MAAM,OAAO,uBAAuB;IAGN;IAAkD;IAF9D,GAAG,CAA4B;IAEhD,YAA6B,eAAuC,EAAW,SAAiB;QAAnE,oBAAe,GAAf,eAAe,CAAwB;QAAW,cAAS,GAAT,SAAS,CAAQ;QAC/F,IAAI,CAAC,GAAG,GAAG,eAAe,CAAC,eAAe,CAAC,SAAS,CAAC,CAAA;IACtD,CAAC;IAED,KAAK,CAAC,QAAQ,CAAC,MAAc;QAC5B,MAAM,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,MAAM,IAAI,CAAC,GAAG,EAAE,MAAM,CAAC,CAAA;IACtE,CAAC;IAED,KAAK,CAAC,aAAa,CAAC,WAAmB;QACtC,MAAM,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,MAAM,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC,CAAA;IAC5F,CAAC;IAED,KAAK,CAAC,SAAS;QACd,MAAM,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,MAAM,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,CAAA;IAC9E,CAAC;CACD","sourcesContent":["import type { IProgressMonitor, ProgressMonitorId } from \"../common/utils/ProgressMonitor\"\nimport { ExposedProgressTracker } from \"../main/ProgressTracker.js\"\n\n/** A wrapper that will send completed work remotely */\nexport class ProgressMonitorDelegate implements IProgressMonitor {\n\tprivate readonly ref: Promise<ProgressMonitorId>\n\n\tconstructor(private readonly progressTracker: ExposedProgressTracker, readonly totalWork: number) {\n\t\tthis.ref = progressTracker.registerMonitor(totalWork)\n\t}\n\n\tasync workDone(amount: number) {\n\t\tawait this.progressTracker.workDoneForMonitor(await this.ref, amount)\n\t}\n\n\tasync totalWorkDone(totalAmount: number) {\n\t\tawait this.progressTracker.workDoneForMonitor(await this.ref, this.totalWork - totalAmount)\n\t}\n\n\tasync completed() {\n\t\tawait this.progressTracker.workDoneForMonitor(await this.ref, this.totalWork)\n\t}\n}\n"]}