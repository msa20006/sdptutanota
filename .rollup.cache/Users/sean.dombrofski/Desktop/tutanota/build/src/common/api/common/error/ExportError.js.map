{"version":3,"file":"ExportError.js","sourceRoot":"","sources":["../../../../../../src/common/api/common/error/ExportError.ts"],"names":[],"mappings":"AAAA,wBAAwB;AAExB,OAAO,EAAE,aAAa,EAAE,MAAM,uBAAuB,CAAA;AAOrD,MAAM,OAAO,WAAY,SAAQ,aAAa;IAEX;IADlC,kFAAkF;IAClF,YAAY,GAAW,EAAW,IAAuB;QACxD,KAAK,CAAC,aAAa,EAAE,GAAG,CAAC,CAAA;QADQ,SAAI,GAAJ,IAAI,CAAmB;IAEzD,CAAC;CACD","sourcesContent":["//@bundleInto:common-min\n\nimport { TutanotaError } from \"@tutao/tutanota-error\"\n\nexport const enum ExportErrorReason {\n\tLockedForUser = \"LockedForUser\",\n\tRunningForUser = \"RunningForUser\",\n}\n\nexport class ExportError extends TutanotaError {\n\t// data field is respected by the WorkerProtocol. Other fields might not be passed\n\tconstructor(msg: string, readonly data: ExportErrorReason) {\n\t\tsuper(\"ExportError\", msg)\n\t}\n}\n"]}