{"version":3,"file":"EntropyCollector.js","sourceRoot":"","sources":["../../../../../src/common/api/main/EntropyCollector.ts"],"names":[],"mappings":"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","sourcesContent":["/// <reference lib=\"dom\" /> // fixes MouseEvent conflict with react\nimport { assertMainOrNode } from \"../common/Env\"\nimport type { EntropySource } from \"@tutao/tutanota-crypto\"\nimport type { EntropyDataChunk, EntropyFacade } from \"../worker/facades/EntropyFacade.js\"\nimport { Scheduler } from \"../common/utils/Scheduler.js\"\n\nassertMainOrNode()\n\nexport type EntropyCallback = (data: number, entropy: number, source: EntropySource) => unknown\n\n/**\n * Automatically collects entropy from various events and sends it to the randomizer in the worker regularly.\n */\nexport class EntropyCollector {\n\t// accessible from test case\n\tstatic readonly SEND_INTERVAL: number = 5000\n\n\tprivate stopped: boolean = true\n\t// the entropy is cached and transmitted to the worker in defined intervals\n\tprivate entropyCache: EntropyDataChunk[] = []\n\n\tconstructor(private readonly entropyFacade: EntropyFacade, private readonly scheduler: Scheduler, private readonly window: Window) {}\n\n\tprivate mouse = (e: MouseEvent) => {\n\t\tconst value = e.clientX ^ e.clientY\n\n\t\tthis.addEntropy(value, 2, \"mouse\")\n\t}\n\n\tprivate keyDown = (e: KeyboardEvent) => {\n\t\tconst value = e.key ? e.key.charCodeAt(0) : undefined\n\t\tthis.addEntropy(value, 2, \"key\")\n\t}\n\n\tprivate touch = (e: TouchEvent) => {\n\t\tconst value = e.touches[0].clientX ^ e.touches[0].clientY\n\n\t\tthis.addEntropy(value, 2, \"touch\")\n\t}\n\n\t/** e is a DeviceMotionEvent but it's typed in a very annoying way */\n\tprivate accelerometer = (e: any) => {\n\t\tif (e.accelerationIncludingGravity) {\n\t\t\tthis.addEntropy(e.accelerationIncludingGravity.x ^ e.accelerationIncludingGravity.y ^ e.accelerationIncludingGravity.z, 2, \"accel\")\n\t\t}\n\n\t\tthis.addEntropy(this.window.screen.orientation.angle, 0, \"accel\")\n\t}\n\n\t/**\n\t * Adds entropy to the random number generator algorithm\n\t * @param data Any number value, or undefined\n\t * @param entropy The amount of entropy in the number in bit.\n\t * @param source The source of the number. One of RandomizerInterface.ENTROPY_SRC_*.\n\t */\n\tprivate addEntropy(data: number | undefined, entropy: number, source: EntropySource) {\n\t\tif (data) {\n\t\t\tthis.entropyCache.push({\n\t\t\t\tsource: source,\n\t\t\t\tentropy: entropy,\n\t\t\t\tdata: data,\n\t\t\t})\n\t\t}\n\n\t\tif (this.window.performance && typeof window.performance.now === \"function\") {\n\t\t\tthis.entropyCache.push({\n\t\t\t\tsource: \"time\",\n\t\t\t\tentropy: 2,\n\t\t\t\tdata: this.window.performance.now(),\n\t\t\t})\n\t\t} else {\n\t\t\tthis.entropyCache.push({\n\t\t\t\tsource: \"time\",\n\t\t\t\tentropy: 2,\n\t\t\t\tdata: new Date().valueOf(),\n\t\t\t})\n\t\t}\n\t}\n\n\tstart() {\n\t\tthis.addPerformanceTimingValues()\n\n\t\tthis.window.addEventListener(\"mousemove\", this.mouse)\n\t\tthis.window.addEventListener(\"click\", this.mouse)\n\t\tthis.window.addEventListener(\"touchstart\", this.touch)\n\t\tthis.window.addEventListener(\"touchmove\", this.touch)\n\t\tthis.window.addEventListener(\"keydown\", this.keyDown)\n\t\tthis.window.addEventListener(\"devicemotion\", this.accelerometer)\n\n\t\tthis.scheduler.schedulePeriodic(() => this.sendEntropyToWorker(), EntropyCollector.SEND_INTERVAL)\n\t\tthis.stopped = false\n\t}\n\n\tprivate addPerformanceTimingValues() {\n\t\tif (!this.window.performance) return\n\t\tconst entries = this.window.performance.getEntries()\n\t\tlet added: number[] = []\n\t\tfor (const entry of entries.map((e) => e.toJSON())) {\n\t\t\tfor (let key in entry) {\n\t\t\t\tconst value = entry[key]\n\t\t\t\tif (typeof value === \"number\" && value !== 0) {\n\t\t\t\t\tif (added.indexOf(value) === -1) {\n\t\t\t\t\t\tthis.addEntropy(value, 1, \"static\")\n\t\t\t\t\t\tadded.push(value)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Add data from secure random source as entropy.\n\t */\n\tprivate addNativeRandomValues(nbrOf32BitValues: number) {\n\t\tlet valueList = new Uint32Array(nbrOf32BitValues)\n\t\tthis.window.crypto.getRandomValues(valueList)\n\n\t\tfor (let i = 0; i < valueList.length; i++) {\n\t\t\t// 32 because we have 32-bit values Uint32Array\n\t\t\tthis.addEntropy(valueList[i], 32, \"random\")\n\t\t}\n\t}\n\n\tprivate sendEntropyToWorker() {\n\t\tif (this.entropyCache.length > 0) {\n\t\t\tthis.addNativeRandomValues(1)\n\n\t\t\tthis.entropyFacade.addEntropy(this.entropyCache)\n\n\t\t\tthis.entropyCache = []\n\t\t}\n\t}\n\n\tstop() {\n\t\tthis.stopped = true\n\t\tthis.window.removeEventListener(\"mousemove\", this.mouse)\n\t\tthis.window.removeEventListener(\"mouseclick\", this.mouse)\n\t\tthis.window.removeEventListener(\"touchstart\", this.touch)\n\t\tthis.window.removeEventListener(\"touchmove\", this.touch)\n\t\tthis.window.removeEventListener(\"keydown\", this.keyDown)\n\t\tthis.window.removeEventListener(\"devicemotion\", this.accelerometer)\n\t}\n}\n"]}