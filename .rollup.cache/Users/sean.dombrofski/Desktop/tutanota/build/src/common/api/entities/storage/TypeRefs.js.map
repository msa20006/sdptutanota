{"version":3,"file":"TypeRefs.js","sourceRoot":"","sources":["../../../../../../src/common/api/entities/storage/TypeRefs.ts"],"names":[],"mappings":"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","sourcesContent":["import { create, Stripped, StrippedEntity } from \"../../common/utils/EntityUtils.js\"\nimport { TypeRef } from \"@tutao/tutanota-utils\"\nimport { typeModels } from \"./TypeModels.js\"\nimport { BlobReferenceTokenWrapper } from '../sys/TypeRefs.js'\nimport { Blob } from '../sys/TypeRefs.js'\n\nexport const BlobAccessTokenPostInTypeRef: TypeRef<BlobAccessTokenPostIn> = new TypeRef(\"storage\", \"BlobAccessTokenPostIn\")\n\nexport function createBlobAccessTokenPostIn(values: StrippedEntity<BlobAccessTokenPostIn>): BlobAccessTokenPostIn {\n\treturn Object.assign(create(typeModels.BlobAccessTokenPostIn, BlobAccessTokenPostInTypeRef), values)\n}\n\nexport type BlobAccessTokenPostIn = {\n\t_type: TypeRef<BlobAccessTokenPostIn>;\n\n\t_format: NumberString;\n\tarchiveDataType: null | NumberString;\n\n\tread: null | BlobReadData;\n\twrite: null | BlobWriteData;\n}\nexport const BlobAccessTokenPostOutTypeRef: TypeRef<BlobAccessTokenPostOut> = new TypeRef(\"storage\", \"BlobAccessTokenPostOut\")\n\nexport function createBlobAccessTokenPostOut(values: StrippedEntity<BlobAccessTokenPostOut>): BlobAccessTokenPostOut {\n\treturn Object.assign(create(typeModels.BlobAccessTokenPostOut, BlobAccessTokenPostOutTypeRef), values)\n}\n\nexport type BlobAccessTokenPostOut = {\n\t_type: TypeRef<BlobAccessTokenPostOut>;\n\n\t_format: NumberString;\n\n\tblobAccessInfo: BlobServerAccessInfo;\n}\nexport const BlobArchiveRefTypeRef: TypeRef<BlobArchiveRef> = new TypeRef(\"storage\", \"BlobArchiveRef\")\n\nexport function createBlobArchiveRef(values: StrippedEntity<BlobArchiveRef>): BlobArchiveRef {\n\treturn Object.assign(create(typeModels.BlobArchiveRef, BlobArchiveRefTypeRef), values)\n}\n\nexport type BlobArchiveRef = {\n\t_type: TypeRef<BlobArchiveRef>;\n\n\t_format: NumberString;\n\t_id: IdTuple;\n\t_ownerGroup: null | Id;\n\t_permissions: Id;\n\n\tarchive: Id;\n}\nexport const BlobGetInTypeRef: TypeRef<BlobGetIn> = new TypeRef(\"storage\", \"BlobGetIn\")\n\nexport function createBlobGetIn(values: StrippedEntity<BlobGetIn>): BlobGetIn {\n\treturn Object.assign(create(typeModels.BlobGetIn, BlobGetInTypeRef), values)\n}\n\nexport type BlobGetIn = {\n\t_type: TypeRef<BlobGetIn>;\n\n\t_format: NumberString;\n\tarchiveId: Id;\n\tblobId: null | Id;\n\n\tblobIds: BlobId[];\n}\nexport const BlobIdTypeRef: TypeRef<BlobId> = new TypeRef(\"storage\", \"BlobId\")\n\nexport function createBlobId(values: StrippedEntity<BlobId>): BlobId {\n\treturn Object.assign(create(typeModels.BlobId, BlobIdTypeRef), values)\n}\n\nexport type BlobId = {\n\t_type: TypeRef<BlobId>;\n\n\t_id: Id;\n\tblobId: Id;\n}\nexport const BlobPostOutTypeRef: TypeRef<BlobPostOut> = new TypeRef(\"storage\", \"BlobPostOut\")\n\nexport function createBlobPostOut(values: StrippedEntity<BlobPostOut>): BlobPostOut {\n\treturn Object.assign(create(typeModels.BlobPostOut, BlobPostOutTypeRef), values)\n}\n\nexport type BlobPostOut = {\n\t_type: TypeRef<BlobPostOut>;\n\n\t_format: NumberString;\n\tblobReferenceToken: null | string;\n\n\tblobReferenceTokens: BlobReferenceTokenWrapper[];\n}\nexport const BlobReadDataTypeRef: TypeRef<BlobReadData> = new TypeRef(\"storage\", \"BlobReadData\")\n\nexport function createBlobReadData(values: StrippedEntity<BlobReadData>): BlobReadData {\n\treturn Object.assign(create(typeModels.BlobReadData, BlobReadDataTypeRef), values)\n}\n\nexport type BlobReadData = {\n\t_type: TypeRef<BlobReadData>;\n\n\t_id: Id;\n\tarchiveId: Id;\n\tinstanceListId: null | Id;\n\n\tinstanceIds: InstanceId[];\n}\nexport const BlobReferenceDeleteInTypeRef: TypeRef<BlobReferenceDeleteIn> = new TypeRef(\"storage\", \"BlobReferenceDeleteIn\")\n\nexport function createBlobReferenceDeleteIn(values: StrippedEntity<BlobReferenceDeleteIn>): BlobReferenceDeleteIn {\n\treturn Object.assign(create(typeModels.BlobReferenceDeleteIn, BlobReferenceDeleteInTypeRef), values)\n}\n\nexport type BlobReferenceDeleteIn = {\n\t_type: TypeRef<BlobReferenceDeleteIn>;\n\n\t_format: NumberString;\n\tarchiveDataType: NumberString;\n\tinstanceId: Id;\n\tinstanceListId: null | Id;\n\n\tblobs: Blob[];\n}\nexport const BlobReferencePutInTypeRef: TypeRef<BlobReferencePutIn> = new TypeRef(\"storage\", \"BlobReferencePutIn\")\n\nexport function createBlobReferencePutIn(values: StrippedEntity<BlobReferencePutIn>): BlobReferencePutIn {\n\treturn Object.assign(create(typeModels.BlobReferencePutIn, BlobReferencePutInTypeRef), values)\n}\n\nexport type BlobReferencePutIn = {\n\t_type: TypeRef<BlobReferencePutIn>;\n\n\t_format: NumberString;\n\tarchiveDataType: NumberString;\n\tinstanceId: Id;\n\tinstanceListId: null | Id;\n\n\treferenceTokens: BlobReferenceTokenWrapper[];\n}\nexport const BlobServerAccessInfoTypeRef: TypeRef<BlobServerAccessInfo> = new TypeRef(\"storage\", \"BlobServerAccessInfo\")\n\nexport function createBlobServerAccessInfo(values: StrippedEntity<BlobServerAccessInfo>): BlobServerAccessInfo {\n\treturn Object.assign(create(typeModels.BlobServerAccessInfo, BlobServerAccessInfoTypeRef), values)\n}\n\nexport type BlobServerAccessInfo = {\n\t_type: TypeRef<BlobServerAccessInfo>;\n\n\t_id: Id;\n\tblobAccessToken: string;\n\texpires: Date;\n\ttokenKind: NumberString;\n\n\tservers: BlobServerUrl[];\n}\nexport const BlobServerUrlTypeRef: TypeRef<BlobServerUrl> = new TypeRef(\"storage\", \"BlobServerUrl\")\n\nexport function createBlobServerUrl(values: StrippedEntity<BlobServerUrl>): BlobServerUrl {\n\treturn Object.assign(create(typeModels.BlobServerUrl, BlobServerUrlTypeRef), values)\n}\n\nexport type BlobServerUrl = {\n\t_type: TypeRef<BlobServerUrl>;\n\n\t_id: Id;\n\turl: string;\n}\nexport const BlobWriteDataTypeRef: TypeRef<BlobWriteData> = new TypeRef(\"storage\", \"BlobWriteData\")\n\nexport function createBlobWriteData(values: StrippedEntity<BlobWriteData>): BlobWriteData {\n\treturn Object.assign(create(typeModels.BlobWriteData, BlobWriteDataTypeRef), values)\n}\n\nexport type BlobWriteData = {\n\t_type: TypeRef<BlobWriteData>;\n\n\t_id: Id;\n\tarchiveOwnerGroup: Id;\n}\nexport const InstanceIdTypeRef: TypeRef<InstanceId> = new TypeRef(\"storage\", \"InstanceId\")\n\nexport function createInstanceId(values: StrippedEntity<InstanceId>): InstanceId {\n\treturn Object.assign(create(typeModels.InstanceId, InstanceIdTypeRef), values)\n}\n\nexport type InstanceId = {\n\t_type: TypeRef<InstanceId>;\n\n\t_id: Id;\n\tinstanceId: null | Id;\n}\n"]}