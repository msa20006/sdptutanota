{"version":3,"file":"LoginSettingsViewer.js","sourceRoot":"","sources":["../../../../../src/common/settings/login/LoginSettingsViewer.ts"],"names":[],"mappings":"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","sourcesContent":["import m, { Children } from \"mithril\"\nimport stream from \"mithril/stream\"\nimport type { TextFieldAttrs } from \"../../gui/base/TextField.js\"\nimport { TextField } from \"../../gui/base/TextField.js\"\nimport { InfoLink, lang } from \"../../misc/LanguageViewModel.js\"\nimport { Icons } from \"../../gui/base/icons/Icons.js\"\nimport { CustomerPropertiesTypeRef, Session, SessionTypeRef } from \"../../api/entities/sys/TypeRefs.js\"\nimport { assertNotNull, LazyLoaded, neverNull, ofClass } from \"@tutao/tutanota-utils\"\nimport { formatDateTimeFromYesterdayOn } from \"../../misc/Formatter.js\"\nimport { SessionState } from \"../../api/common/TutanotaConstants.js\"\nimport { SecondFactorsEditForm } from \"./secondfactor/SecondFactorsEditForm.js\"\n\nimport { NotFoundError } from \"../../api/common/error/RestError.js\"\nimport * as RecoverCodeDialog from \"./RecoverCodeDialog.js\"\nimport { attachDropdown } from \"../../gui/base/Dropdown.js\"\nimport { ExpanderButton, ExpanderPanel } from \"../../gui/base/Expander.js\"\nimport { ColumnWidth, Table } from \"../../gui/base/Table.js\"\nimport { ifAllowedTutaLinks } from \"../../gui/base/GuiUtils.js\"\nimport { CredentialEncryptionMode } from \"../../misc/credentials/CredentialEncryptionMode.js\"\nimport { CredentialsProvider } from \"../../misc/credentials/CredentialsProvider.js\"\nimport { showCredentialsEncryptionModeDialog } from \"../../gui/dialogs/SelectCredentialsEncryptionModeDialog.js\"\nimport { assertMainOrNode, isDesktop } from \"../../api/common/Env.js\"\nimport { locator } from \"../../api/main/CommonLocator.js\"\nimport { elementIdPart, getElementId } from \"../../api/common/utils/EntityUtils.js\"\nimport { showChangeOwnPasswordDialog } from \"./ChangePasswordDialogs.js\"\nimport { IconButton, IconButtonAttrs } from \"../../gui/base/IconButton.js\"\nimport { ButtonSize } from \"../../gui/base/ButtonSize.js\"\nimport { DropDownSelector, DropDownSelectorAttrs } from \"../../gui/base/DropDownSelector.js\"\nimport { UsageTestModel } from \"../../misc/UsageTestModel.js\"\nimport { UserSettingsGroupRootTypeRef } from \"../../api/entities/tutanota/TypeRefs.js\"\nimport { EntityUpdateData, isUpdateForTypeRef } from \"../../api/common/utils/EntityUpdateUtils.js\"\nimport { Dialog } from \"../../gui/base/Dialog.js\"\nimport { MoreInfoLink } from \"../../misc/news/MoreInfoLink.js\"\nimport { AppLockMethod } from \"../../native/common/generatedipc/AppLockMethod.js\"\nimport { MobileSystemFacade } from \"../../native/common/generatedipc/MobileSystemFacade.js\"\nimport { UpdatableSettingsViewer } from \"../Interfaces.js\"\n\nassertMainOrNode()\n\nexport class LoginSettingsViewer implements UpdatableSettingsViewer {\n\tprivate readonly _mailAddress = stream(neverNull(locator.logins.getUserController().userGroupInfo.mailAddress))\n\tprivate readonly _stars = stream(\"***\")\n\tprivate readonly _closedSessionsExpanded = stream(false)\n\tprivate _sessions: Session[] = []\n\tprivate readonly _secondFactorsForm = new SecondFactorsEditForm(\n\t\tnew LazyLoaded(() => Promise.resolve(locator.logins.getUserController().user)),\n\t\tlocator.domainConfigProvider(),\n\t\tlocator.loginFacade,\n\t\ttrue,\n\t\tfalse,\n\t)\n\tprivate readonly _usageTestModel: UsageTestModel\n\tprivate credentialEncryptionMode: CredentialEncryptionMode | null = null\n\tprivate appLockMethod: AppLockMethod | null = null\n\n\tconstructor(private readonly credentialsProvider: CredentialsProvider, private readonly mobileSystemFacade: MobileSystemFacade | null) {\n\t\tthis._usageTestModel = locator.usageTestModel\n\n\t\tthis._updateSessions()\n\t\tthis.updateAppLockData()\n\t}\n\n\tprivate async updateAppLockData() {\n\t\tif (isDesktop()) {\n\t\t\tthis.credentialEncryptionMode = await this.credentialsProvider.getCredentialEncryptionMode()\n\t\t} else if (this.mobileSystemFacade) {\n\t\t\tthis.appLockMethod = await this.mobileSystemFacade.getAppLockMethod()\n\t\t}\n\t\tm.redraw()\n\t}\n\n\tview(): Children {\n\t\tconst mailAddressAttrs: TextFieldAttrs = {\n\t\t\tlabel: \"mailAddress_label\",\n\t\t\tvalue: this._mailAddress(),\n\t\t\toninput: this._mailAddress,\n\t\t\tisReadOnly: true,\n\t\t}\n\t\tconst changePasswordButtonAttrs: IconButtonAttrs = {\n\t\t\ttitle: \"changePassword_label\",\n\t\t\tclick: () => showChangeOwnPasswordDialog(),\n\t\t\ticon: Icons.Edit,\n\t\t\tsize: ButtonSize.Compact,\n\t\t}\n\t\tconst passwordAttrs: TextFieldAttrs = {\n\t\t\tlabel: \"password_label\",\n\t\t\tvalue: this._stars(),\n\t\t\toninput: this._stars,\n\t\t\tisReadOnly: true,\n\t\t\tinjectionsRight: () => m(IconButton, changePasswordButtonAttrs),\n\t\t}\n\t\tconst recoveryCodeDropdownButtonAttrs: IconButtonAttrs = attachDropdown({\n\t\t\tmainButtonAttrs: {\n\t\t\t\ttitle: \"edit_action\",\n\t\t\t\ticon: Icons.Edit,\n\t\t\t\tsize: ButtonSize.Compact,\n\t\t\t},\n\t\t\tchildAttrs: () => [\n\t\t\t\tlocator.logins.getUserController().user.auth?.recoverCode\n\t\t\t\t\t? {\n\t\t\t\t\t\t\tlabel: \"show_action\",\n\t\t\t\t\t\t\tclick: () => RecoverCodeDialog.showRecoverCodeDialogAfterPasswordVerification(\"get\"),\n\t\t\t\t\t  }\n\t\t\t\t\t: null,\n\t\t\t\t{\n\t\t\t\t\tlabel: neverNull(locator.logins.getUserController().user.auth).recoverCode ? \"update_action\" : \"setUp_action\",\n\t\t\t\t\tclick: () => RecoverCodeDialog.showRecoverCodeDialogAfterPasswordVerification(\"create\"),\n\t\t\t\t},\n\t\t\t],\n\t\t\tshowDropdown: () => true,\n\t\t})\n\t\tconst recoveryCodeFieldAttrs: TextFieldAttrs = {\n\t\t\tlabel: \"recoveryCode_label\",\n\t\t\thelpLabel: () => {\n\t\t\t\treturn ifAllowedTutaLinks(locator.logins, InfoLink.RecoverCode, (link) => [m(MoreInfoLink, { link: link })])\n\t\t\t},\n\t\t\tvalue: this._stars(),\n\t\t\toninput: this._stars,\n\t\t\tisReadOnly: true,\n\t\t\tinjectionsRight: () => m(IconButton, recoveryCodeDropdownButtonAttrs),\n\t\t}\n\t\tconst usageDataOptInAttrs: DropDownSelectorAttrs<boolean | null> = {\n\t\t\tlabel: \"userUsageDataOptIn_label\",\n\t\t\titems: [\n\t\t\t\t{\n\t\t\t\t\tname: lang.get(\"activated_label\"),\n\t\t\t\t\tvalue: true,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: lang.get(\"deactivated_label\"),\n\t\t\t\t\tvalue: false,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: lang.get(\"undecided_label\"),\n\t\t\t\t\tvalue: null,\n\t\t\t\t\tselectable: false,\n\t\t\t\t},\n\t\t\t],\n\t\t\tselectedValue: locator.logins.getUserController().userSettingsGroupRoot.usageDataOptedIn,\n\t\t\tselectionChangedHandler: (v) => {\n\t\t\t\tthis._usageTestModel.setOptInDecision(assertNotNull(v))\n\t\t\t},\n\t\t\thelpLabel: () => {\n\t\t\t\treturn ifAllowedTutaLinks(locator.logins, InfoLink.Usage, (link) => [\n\t\t\t\t\tm(\"span\", lang.get(\"userUsageDataOptInInfo_msg\") + \" \"),\n\t\t\t\t\tm(MoreInfoLink, { link: link }),\n\t\t\t\t])\n\t\t\t},\n\t\t\tdropdownWidth: 250,\n\t\t}\n\n\t\t// Might be not there when we are logging out\n\t\tif (locator.logins.isUserLoggedIn()) {\n\t\t\tconst user = locator.logins.getUserController()\n\t\t\treturn m(\"\", [\n\t\t\t\tm(\"#user-settings.fill-absolute.scroll.plr-l.pb-xl\", [\n\t\t\t\t\tm(\".h4.mt-l\", lang.get(\"loginCredentials_label\")),\n\t\t\t\t\tm(TextField, mailAddressAttrs),\n\t\t\t\t\tm(TextField, passwordAttrs),\n\t\t\t\t\tuser.isGlobalAdmin() ? m(TextField, recoveryCodeFieldAttrs) : null,\n\t\t\t\t\tthis.renderAppLockField(),\n\t\t\t\t\tm(this._secondFactorsForm),\n\t\t\t\t\tm(\".h4.mt-l\", lang.get(\"activeSessions_label\")),\n\t\t\t\t\tthis._renderActiveSessions(),\n\t\t\t\t\tm(\".small\", lang.get(\"sessionsInfo_msg\")),\n\t\t\t\t\tm(\".flex-space-between.items-center.mt-l.mb-s\", [\n\t\t\t\t\t\tm(\".h4\", lang.get(\"closedSessions_label\")),\n\t\t\t\t\t\tm(ExpanderButton, {\n\t\t\t\t\t\t\tlabel: \"show_action\",\n\t\t\t\t\t\t\texpanded: this._closedSessionsExpanded(),\n\t\t\t\t\t\t\tonExpandedChange: this._closedSessionsExpanded,\n\t\t\t\t\t\t\tshowWarning: false,\n\t\t\t\t\t\t}),\n\t\t\t\t\t]),\n\t\t\t\t\tm(\n\t\t\t\t\t\tExpanderPanel,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\texpanded: this._closedSessionsExpanded(),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tthis._renderClosedSessions(),\n\t\t\t\t\t),\n\t\t\t\t\tm(\".small\", lang.get(\"sessionsWillBeDeleted_msg\")),\n\t\t\t\t\tm(\".small\", lang.get(\"sessionsInfo_msg\")),\n\t\t\t\t\tthis._usageTestModel.isCustomerOptedOut()\n\t\t\t\t\t\t? null\n\t\t\t\t\t\t: m(\"\", [m(\".h4.mt-l\", lang.get(\"usageData_label\")), m(DropDownSelector, usageDataOptInAttrs)]),\n\t\t\t\t]),\n\t\t\t])\n\t\t} else {\n\t\t\treturn null\n\t\t}\n\t}\n\n\tprivate renderAppLockField(): Children {\n\t\tconst mobileSystemFacade = this.mobileSystemFacade\n\n\t\t// On mobile we display app lock dialog, on desktop credential encryption dialog. They are similar but different.\n\t\tif (mobileSystemFacade) {\n\t\t\tconst onEdit = async () => {\n\t\t\t\tconst { showAppLockMethodDialog } = await import(\"../../native/main/SelectAppLockMethodDialog.js\")\n\t\t\t\tawait showAppLockMethodDialog(mobileSystemFacade)\n\t\t\t\tawait this.updateAppLockData()\n\t\t\t}\n\t\t\treturn m(TextField, {\n\t\t\t\tlabel: \"credentialsEncryptionMode_label\",\n\t\t\t\tvalue: this.appLockMethodName(this.appLockMethod ?? AppLockMethod.None),\n\t\t\t\tisReadOnly: true,\n\t\t\t\tinjectionsRight: () =>\n\t\t\t\t\tm(IconButton, {\n\t\t\t\t\t\ttitle: \"edit_action\",\n\t\t\t\t\t\ticon: Icons.Edit,\n\t\t\t\t\t\tclick: () => onEdit(),\n\t\t\t\t\t}),\n\t\t\t})\n\t\t} else if (isDesktop()) {\n\t\t\tconst usedMode = this.credentialEncryptionMode ?? CredentialEncryptionMode.DEVICE_LOCK\n\n\t\t\treturn m(TextField, {\n\t\t\t\tlabel: \"credentialsEncryptionMode_label\",\n\t\t\t\tvalue: this.credentialsEncryptionModeName(usedMode),\n\t\t\t\tisReadOnly: true,\n\t\t\t\tinjectionsRight: () =>\n\t\t\t\t\tm(IconButton, {\n\t\t\t\t\t\ttitle: \"edit_action\",\n\t\t\t\t\t\ticon: Icons.Edit,\n\t\t\t\t\t\tclick: () => showCredentialsEncryptionModeDialog(this.credentialsProvider).then(() => this.updateAppLockData()),\n\t\t\t\t\t}),\n\t\t\t})\n\t\t}\n\t}\n\n\tasync _updateSessions(): Promise<void> {\n\t\tconst sessions = await locator.entityClient.loadAll(SessionTypeRef, neverNull(locator.logins.getUserController().user.auth).sessions)\n\t\tsessions.sort((s1, s2) => s2.lastAccessTime.getTime() - s1.lastAccessTime.getTime())\n\t\tthis._sessions = sessions\n\t\tm.redraw()\n\t}\n\n\tprivate _renderActiveSessions(): Children {\n\t\treturn m(Table, {\n\t\t\tcolumnHeading: [\"client_label\"],\n\t\t\tcolumnWidths: [ColumnWidth.Largest],\n\t\t\tshowActionButtonColumn: true,\n\t\t\tlines: this._sessions\n\t\t\t\t.filter((session) => session.state === SessionState.SESSION_STATE_ACTIVE)\n\t\t\t\t.map((session) => {\n\t\t\t\t\tconst thisSession = elementIdPart(locator.logins.getUserController().sessionId) === getElementId(session)\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tcells: () => [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tmain: thisSession ? lang.get(\"thisClient_label\") : session.clientIdentifier,\n\t\t\t\t\t\t\t\tinfo: [\n\t\t\t\t\t\t\t\t\tlang.get(\"lastAccessWithTime_label\", {\n\t\t\t\t\t\t\t\t\t\t\"{time}\": formatDateTimeFromYesterdayOn(session.lastAccessTime),\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\tsession.loginIpAddress ? session.loginIpAddress : \"\",\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tclick: () => this.showActiveSessionInfoDialog(session, thisSession),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tactionButtonAttrs: thisSession\n\t\t\t\t\t\t\t? null\n\t\t\t\t\t\t\t: ({\n\t\t\t\t\t\t\t\t\ttitle: \"closeSession_action\",\n\t\t\t\t\t\t\t\t\tclick: () => {\n\t\t\t\t\t\t\t\t\t\tthis._closeSession(session)\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\ticon: Icons.Cancel,\n\t\t\t\t\t\t\t\t\tsize: ButtonSize.Compact,\n\t\t\t\t\t\t\t  } as const),\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t})\n\t}\n\n\tprivate showActiveSessionInfoDialog(session: Session, isThisSession: boolean) {\n\t\tconst actionDialogProperties = {\n\t\t\ttitle: \"details_label\",\n\t\t\tchild: {\n\t\t\t\tview: () => {\n\t\t\t\t\treturn [\n\t\t\t\t\t\tm(TextField, {\n\t\t\t\t\t\t\tlabel: \"client_label\",\n\t\t\t\t\t\t\tvalue: isThisSession ? lang.get(\"thisClient_label\") : session.clientIdentifier,\n\t\t\t\t\t\t\tisReadOnly: true,\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tm(TextField, {\n\t\t\t\t\t\t\tlabel: \"lastAccess_label\",\n\t\t\t\t\t\t\tvalue: `${formatDateTimeFromYesterdayOn(session.lastAccessTime)}`,\n\t\t\t\t\t\t\tisReadOnly: true,\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tm(TextField, {\n\t\t\t\t\t\t\tlabel: \"IpAddress_label\",\n\t\t\t\t\t\t\tvalue: session.loginIpAddress ? session.loginIpAddress : \"\",\n\t\t\t\t\t\t\tisReadOnly: true,\n\t\t\t\t\t\t}),\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t},\n\t\t\tokAction: null,\n\t\t\tallowCancel: true,\n\t\t\tallowOkWithReturn: false,\n\t\t\tcancelActionTextId: \"close_alt\",\n\t\t} as const\n\t\tDialog.showActionDialog(actionDialogProperties)\n\t}\n\n\tprivate _closeSession(session: Session) {\n\t\tlocator.entityClient.erase(session).catch(\n\t\t\tofClass(NotFoundError, () => {\n\t\t\t\tconsole.log(`session ${JSON.stringify(session._id)} already deleted`)\n\t\t\t}),\n\t\t)\n\t}\n\n\tasync entityEventsReceived(updates: ReadonlyArray<EntityUpdateData>): Promise<void> {\n\t\tfor (const update of updates) {\n\t\t\tif (isUpdateForTypeRef(SessionTypeRef, update)) {\n\t\t\t\tawait this._updateSessions()\n\t\t\t} else if (isUpdateForTypeRef(CustomerPropertiesTypeRef, update) || isUpdateForTypeRef(UserSettingsGroupRootTypeRef, update)) {\n\t\t\t\tm.redraw()\n\t\t\t}\n\n\t\t\tawait this._secondFactorsForm.entityEventReceived(update)\n\t\t}\n\t}\n\n\tprivate credentialsEncryptionModeName(credentialsEncryptionMode: CredentialEncryptionMode): string {\n\t\tconst mapping = {\n\t\t\t[CredentialEncryptionMode.DEVICE_LOCK]: \"credentialsEncryptionModeDeviceLock_label\",\n\t\t\t[CredentialEncryptionMode.SYSTEM_PASSWORD]: \"credentialsEncryptionModeDeviceCredentials_label\",\n\t\t\t[CredentialEncryptionMode.BIOMETRICS]: \"credentialsEncryptionModeBiometrics_label\",\n\t\t\t[CredentialEncryptionMode.APP_PASSWORD]: \"credentialsEncryptionModeAppPassword_label\",\n\t\t} as const\n\t\treturn lang.get(mapping[credentialsEncryptionMode])\n\t}\n\n\tprivate appLockMethodName(appLockMethod: AppLockMethod): string {\n\t\tconst mapping = {\n\t\t\t[AppLockMethod.None]: \"credentialsEncryptionModeDeviceLock_label\",\n\t\t\t[AppLockMethod.SystemPassOrBiometrics]: \"credentialsEncryptionModeDeviceCredentials_label\",\n\t\t\t[AppLockMethod.Biometrics]: \"credentialsEncryptionModeBiometrics_label\",\n\t\t} as const\n\t\treturn lang.get(mapping[appLockMethod])\n\t}\n\n\tprivate _renderClosedSessions(): Children {\n\t\tconst lines = this._sessions\n\t\t\t.filter((session) => session.state !== SessionState.SESSION_STATE_ACTIVE)\n\t\t\t.map((session) => {\n\t\t\t\treturn {\n\t\t\t\t\tcells: [\n\t\t\t\t\t\tsession.clientIdentifier,\n\t\t\t\t\t\tformatDateTimeFromYesterdayOn(session.lastAccessTime),\n\t\t\t\t\t\tsession.loginIpAddress ? session.loginIpAddress : \"\",\n\t\t\t\t\t],\n\t\t\t\t}\n\t\t\t})\n\t\treturn m(Table, {\n\t\t\tcolumnHeading: [\"client_label\", \"lastAccess_label\", \"IpAddress_label\"],\n\t\t\tcolumnWidths: [ColumnWidth.Small, ColumnWidth.Largest, ColumnWidth.Small],\n\t\t\tshowActionButtonColumn: true,\n\t\t\tlines: lines,\n\t\t})\n\t}\n}\n"]}