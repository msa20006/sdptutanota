{"version":3,"file":"SqlCipherFacadeSendDispatcher.js","sourceRoot":"","sources":["../../../../../../src/common/native/common/generatedipc/SqlCipherFacadeSendDispatcher.ts"],"names":[],"mappings":"AAAA,iCAAiC;AAOjC,MAAM,OAAO,6BAA6B;IACZ;IAA7B,YAA6B,SAA0B;QAA1B,cAAS,GAAT,SAAS,CAAiB;IAAG,CAAC;IAC3D,KAAK,CAAC,MAAM,CAAC,GAAG,IAA2C;QAC1D,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC,iBAAiB,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC,CAAC,CAAA;IAClF,CAAC;IACD,KAAK,CAAC,OAAO,CAAC,GAAG,IAA4C;QAC5D,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC,iBAAiB,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC,CAAC,CAAA;IACnF,CAAC;IACD,KAAK,CAAC,QAAQ,CAAC,GAAG,IAA6C;QAC9D,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC,iBAAiB,EAAE,UAAU,EAAE,GAAG,IAAI,CAAC,CAAC,CAAA;IACpF,CAAC;IACD,KAAK,CAAC,GAAG,CAAC,GAAG,IAAwC;QACpD,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC,iBAAiB,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,CAAC,CAAA;IAC/E,CAAC;IACD,KAAK,CAAC,GAAG,CAAC,GAAG,IAAwC;QACpD,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC,iBAAiB,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,CAAC,CAAA;IAC/E,CAAC;IACD,KAAK,CAAC,GAAG,CAAC,GAAG,IAAwC;QACpD,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC,iBAAiB,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,CAAC,CAAA;IAC/E,CAAC;IACD,KAAK,CAAC,kBAAkB,CAAC,GAAG,IAAuD;QAClF,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC,iBAAiB,EAAE,oBAAoB,EAAE,GAAG,IAAI,CAAC,CAAC,CAAA;IAC9F,CAAC;IACD,KAAK,CAAC,oBAAoB,CAAC,GAAG,IAAyD;QACtF,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC,iBAAiB,EAAE,sBAAsB,EAAE,GAAG,IAAI,CAAC,CAAC,CAAA;IAChG,CAAC;CACD","sourcesContent":["/* generated file, don't edit. */\n\nimport { SqlCipherFacade } from \"./SqlCipherFacade.js\"\n\ninterface NativeInterface {\n\tinvokeNative(requestType: string, args: unknown[]): Promise<any>\n}\nexport class SqlCipherFacadeSendDispatcher implements SqlCipherFacade {\n\tconstructor(private readonly transport: NativeInterface) {}\n\tasync openDb(...args: Parameters<SqlCipherFacade[\"openDb\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"SqlCipherFacade\", \"openDb\", ...args])\n\t}\n\tasync closeDb(...args: Parameters<SqlCipherFacade[\"closeDb\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"SqlCipherFacade\", \"closeDb\", ...args])\n\t}\n\tasync deleteDb(...args: Parameters<SqlCipherFacade[\"deleteDb\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"SqlCipherFacade\", \"deleteDb\", ...args])\n\t}\n\tasync run(...args: Parameters<SqlCipherFacade[\"run\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"SqlCipherFacade\", \"run\", ...args])\n\t}\n\tasync get(...args: Parameters<SqlCipherFacade[\"get\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"SqlCipherFacade\", \"get\", ...args])\n\t}\n\tasync all(...args: Parameters<SqlCipherFacade[\"all\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"SqlCipherFacade\", \"all\", ...args])\n\t}\n\tasync lockRangesDbAccess(...args: Parameters<SqlCipherFacade[\"lockRangesDbAccess\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"SqlCipherFacade\", \"lockRangesDbAccess\", ...args])\n\t}\n\tasync unlockRangesDbAccess(...args: Parameters<SqlCipherFacade[\"unlockRangesDbAccess\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"SqlCipherFacade\", \"unlockRangesDbAccess\", ...args])\n\t}\n}\n"]}