{"version":3,"file":"DeleteAccountDialog.js","sourceRoot":"","sources":["../../../../src/common/subscription/DeleteAccountDialog.ts"],"names":[],"mappings":"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","sourcesContent":["import m from \"mithril\"\nimport { Dialog } from \"../gui/base/Dialog\"\nimport { lang } from \"../misc/LanguageViewModel\"\nimport { InvalidDataError, LockedError, PreconditionFailedError } from \"../api/common/error/RestError\"\nimport { Autocomplete, TextField, TextFieldType } from \"../gui/base/TextField.js\"\nimport { neverNull } from \"@tutao/tutanota-utils\"\nimport { getCleanedMailAddress } from \"../misc/parsing/MailAddressParser\"\nimport { locator } from \"../api/main/CommonLocator\"\nimport { getEtId } from \"../api/common/utils/EntityUtils\"\nimport { CloseEventBusOption } from \"../api/common/TutanotaConstants.js\"\nimport { SurveyData } from \"../api/entities/sys/TypeRefs.js\"\nimport { PasswordField } from \"../misc/passwords/PasswordField.js\"\nimport { isIOSApp } from \"../api/common/Env.js\"\nimport { client } from \"../misc/ClientDetector\"\n\nexport function showDeleteAccountDialog(surveyData: SurveyData | null = null) {\n\tlet takeover = \"\"\n\tlet password = \"\"\n\tconst userId = getEtId(locator.logins.getUserController().user)\n\n\tDialog.showActionDialog({\n\t\ttitle: \"adminDeleteAccount_action\",\n\t\tchild: {\n\t\t\tview: () =>\n\t\t\t\tm(\"#delete-account-dialog\", [\n\t\t\t\t\t!(isIOSApp() && client.isCalendarApp())\n\t\t\t\t\t\t? m(TextField, {\n\t\t\t\t\t\t\t\tlabel: \"targetAddress_label\",\n\t\t\t\t\t\t\t\tvalue: takeover,\n\t\t\t\t\t\t\t\ttype: TextFieldType.Email,\n\t\t\t\t\t\t\t\toninput: (value) => (takeover = value),\n\t\t\t\t\t\t\t\thelpLabel: () => lang.get(\"takeoverMailAddressInfo_msg\"),\n\t\t\t\t\t\t  })\n\t\t\t\t\t\t: null,\n\t\t\t\t\tm(PasswordField, {\n\t\t\t\t\t\tvalue: password,\n\t\t\t\t\t\tautocompleteAs: Autocomplete.currentPassword,\n\t\t\t\t\t\toninput: (value) => (password = value),\n\t\t\t\t\t\tstatus: {\n\t\t\t\t\t\t\ttype: \"neutral\",\n\t\t\t\t\t\t\ttext: \"passwordEnterNeutral_msg\",\n\t\t\t\t\t\t},\n\t\t\t\t\t}),\n\t\t\t\t]),\n\t\t},\n\t\tokAction: async () => {\n\t\t\tconst isDeleted = await deleteAccount(takeover, password, surveyData)\n\t\t\tif (isDeleted) {\n\t\t\t\tawait locator.credentialsProvider.deleteByUserId(userId)\n\t\t\t\tm.route.set(\"/login\", { noAutoLogin: true })\n\t\t\t}\n\t\t},\n\t\tallowCancel: true,\n\t\tokActionTextId: \"delete_action\",\n\t})\n}\n\nasync function deleteAccount(takeover: string, password: string, surveyData: SurveyData | null = null): Promise<boolean> {\n\tconst cleanedTakeover = takeover === \"\" ? \"\" : getCleanedMailAddress(takeover)\n\n\tif (cleanedTakeover === null) {\n\t\tawait Dialog.message(\"mailAddressInvalid_msg\")\n\t\treturn false\n\t} else {\n\t\tconst message = lang.makeTranslation(\n\t\t\t\"confirm_msg\",\n\t\t\tcleanedTakeover === \"\"\n\t\t\t\t? lang.get(\"deleteAccountConfirm_msg\")\n\t\t\t\t: lang.get(\"deleteAccountWithTakeoverConfirm_msg\", {\n\t\t\t\t\t\t\"{1}\": cleanedTakeover,\n\t\t\t\t  }),\n\t\t)\n\n\t\tconst ok = await Dialog.confirm(message)\n\t\tif (!ok) return false\n\t\t// this is necessary to prevent us from applying websocket events to an already deleted/closed offline DB\n\t\t// which is an immediate crash on ios\n\t\tawait locator.connectivityModel.close(CloseEventBusOption.Terminate)\n\t\ttry {\n\t\t\tawait locator.loginFacade.deleteAccount(password, neverNull(cleanedTakeover), surveyData)\n\t\t\treturn true\n\t\t} catch (e) {\n\t\t\tif (e instanceof PreconditionFailedError) await Dialog.message(\"passwordWrongInvalid_msg\")\n\t\t\tif (e instanceof InvalidDataError) await Dialog.message(\"takeoverAccountInvalid_msg\")\n\t\t\tif (e instanceof LockedError) await Dialog.message(\"operationStillActive_msg\")\n\t\t\treturn false\n\t\t}\n\t}\n}\n"]}