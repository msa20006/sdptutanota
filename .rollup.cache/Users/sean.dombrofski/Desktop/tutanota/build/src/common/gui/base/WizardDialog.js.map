{"version":3,"file":"WizardDialog.js","sourceRoot":"","sources":["../../../../../src/common/gui/base/WizardDialog.ts"],"names":[],"mappings":"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","sourcesContent":["import m, { Children, Component, Vnode, VnodeDOM } from \"mithril\"\nimport { Dialog, DialogType } from \"./Dialog\"\nimport type { ButtonAttrs } from \"./Button.js\"\nimport { ButtonType } from \"./Button.js\"\nimport { Icons } from \"./icons/Icons\"\nimport { Icon, IconSize } from \"./Icon\"\nimport { theme } from \"../theme\"\nimport { lang, MaybeTranslation, TranslationKey } from \"../../misc/LanguageViewModel\"\nimport type { DialogHeaderBarAttrs } from \"./DialogHeaderBar\"\nimport { Keys, TabIndex } from \"../../api/common/TutanotaConstants\"\nimport { assertMainOrNode } from \"../../api/common/Env\"\nimport { $Promisable } from \"@tutao/tutanota-utils\"\nimport { windowFacade } from \"../../misc/WindowFacade.js\"\n\nassertMainOrNode()\n\nexport interface WizardPageAttrs<T> {\n\t/** Title of the page that is shown in the header bar of the WizardDialog*/\n\theaderTitle(): MaybeTranslation\n\n\t/** Action that needs to be executed before switching to the next page.\n\t * @return true if the action was successful and the next page can be shown, false otherwise.\n\t **/\n\tnextAction(showErrorDialog: boolean): Promise<boolean>\n\n\t/**\n\t * Checks if the page can be skipped.\n\t */\n\tisSkipAvailable(): boolean\n\n\t/**\n\t * Checks if the page is enabled and can be displayed.\n\t */\n\tisEnabled(): boolean\n\n\t/**\n\t * The actual data, which is the same for the entire wizard needs to be also accessible to each page\n\t */\n\treadonly data: T\n\n\t/**\n\t * Indicates that it should not be possible to select any earlier stage than this one, once reached. If not set or false, it is possible to go back\n\t */\n\treadonly preventGoBack?: boolean\n\n\t/**\n\t * if set to true, all paging buttons will be hidden for this page\n\t */\n\treadonly hideAllPagingButtons?: boolean\n\n\t/**\n\t * if this is true the paging button (button with the number) is hidden for this specific wizard page\n\t */\n\treadonly hidePagingButtonForPage?: boolean\n}\n\nexport type WizardPageN<T> = Component<WizardPageAttrs<T>>\n\nexport const enum WizardEventType {\n\tSHOW_NEXT_PAGE = \"showNextWizardDialogPage\",\n\tSHOW_PREVIOUS_PAGE = \"showPreviousWizardDialogPage\",\n\tCLOSE_DIALOG = \"closeWizardDialog\",\n}\n\n// A WizardPage dispatches this event to inform the parent WizardDialogN to close the dialog\nexport function emitWizardEvent(dom: HTMLElement | null, eventType: WizardEventType) {\n\tif (dom) {\n\t\tconst event = new Event(eventType, {\n\t\t\tbubbles: true,\n\t\t\tcancelable: true,\n\t\t})\n\t\tdom.dispatchEvent(event)\n\t}\n}\n\nclass WizardDialog<T> implements Component<WizardDialogAttrs<T>> {\n\tprivate _closeWizardDialogListener!: EventListener\n\tprivate _showNextWizardDialogPageListener!: EventListener\n\tprivate _showPreviousWizardDialogPageListener!: EventListener\n\tprivate wizardContentDom: HTMLElement | null = null // we need the wizard content dom to scroll to the top when redirecting to the next page\n\n\toncreate(vnode: VnodeDOM<WizardDialogAttrs<T>>) {\n\t\t// We listen for events triggered by the child WizardPages to close the dialog or show the next page\n\t\tconst dom: HTMLElement = vnode.dom as HTMLElement\n\n\t\tthis._closeWizardDialogListener = (e: Event) => {\n\t\t\te.stopPropagation()\n\t\t\tvnode.attrs.closeAction()\n\t\t}\n\n\t\tthis._showNextWizardDialogPageListener = (e: Event) => {\n\t\t\te.stopPropagation()\n\n\t\t\tif (vnode.attrs.currentPage) {\n\t\t\t\tvnode.attrs.currentPage.attrs.nextAction(true).then((ready) => {\n\t\t\t\t\tif (ready) {\n\t\t\t\t\t\tvnode.attrs.goToNextPageOrCloseWizard()\n\t\t\t\t\t\tthis.wizardContentDom?.scrollIntoView()\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\n\t\tthis._showPreviousWizardDialogPageListener = (e: Event) => {\n\t\t\te.stopPropagation()\n\n\t\t\tif (!vnode.attrs.currentPage?.attrs.preventGoBack) {\n\t\t\t\tvnode.attrs.goToPreviousPageOrClose()\n\t\t\t\tthis.wizardContentDom?.scrollIntoView()\n\t\t\t}\n\t\t}\n\n\t\tdom.addEventListener(WizardEventType.CLOSE_DIALOG, this._closeWizardDialogListener)\n\t\tdom.addEventListener(WizardEventType.SHOW_NEXT_PAGE, this._showNextWizardDialogPageListener)\n\t\tdom.addEventListener(WizardEventType.SHOW_PREVIOUS_PAGE, this._showPreviousWizardDialogPageListener)\n\t}\n\n\tonremove(vnode: VnodeDOM<WizardDialogAttrs<T>>) {\n\t\tconst dom: HTMLElement = vnode.dom as HTMLElement\n\t\tif (this._closeWizardDialogListener) dom.removeEventListener(WizardEventType.CLOSE_DIALOG, this._closeWizardDialogListener)\n\t\tif (this._showNextWizardDialogPageListener) dom.removeEventListener(WizardEventType.SHOW_NEXT_PAGE, this._showNextWizardDialogPageListener)\n\t\tif (this._showPreviousWizardDialogPageListener) dom.removeEventListener(WizardEventType.SHOW_PREVIOUS_PAGE, this._showPreviousWizardDialogPageListener)\n\t}\n\n\tview(vnode: Vnode<WizardDialogAttrs<T>>) {\n\t\tconst a = vnode.attrs\n\t\tconst enabledPages = a._getEnabledPages()\n\t\tconst selectedIndex = a.currentPage ? enabledPages.indexOf(a.currentPage) : -1\n\t\tconst visiblePages = enabledPages.filter((page) => !page.attrs.hidePagingButtonForPage)\n\t\tconst lastIndex = visiblePages.length - 1\n\n\t\treturn m(\n\t\t\t\"#wizardDialogContent.pt\",\n\t\t\t{\n\t\t\t\toncreate: (vnode) => {\n\t\t\t\t\tthis.wizardContentDom = vnode.dom as HTMLElement\n\t\t\t\t},\n\t\t\t},\n\t\t\t[\n\t\t\t\ta.currentPage && a.currentPage.attrs.hideAllPagingButtons\n\t\t\t\t\t? null\n\t\t\t\t\t: m(\n\t\t\t\t\t\t\t\"nav#wizard-paging.flex-space-around.center-vertically.mb-s.plr-2l\",\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"aria-label\": \"Breadcrumb\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tvisiblePages.map((p, index) => [\n\t\t\t\t\t\t\t\tm(WizardPagingButton, {\n\t\t\t\t\t\t\t\t\tpageIndex: index,\n\t\t\t\t\t\t\t\t\tgetSelectedPageIndex: () => selectedIndex,\n\t\t\t\t\t\t\t\t\tisClickable: () => a.allowedToVisitPage(index, selectedIndex),\n\t\t\t\t\t\t\t\t\tnavigateBackHandler: (index) => a._goToPageAction(index),\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\tindex === lastIndex ? null : m(\".flex-grow\", { class: this.getLineClass(index < selectedIndex) }),\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t  ),\n\t\t\t\ta.currentPage ? a.currentPage.view() : null,\n\t\t\t],\n\t\t)\n\t}\n\n\tprivate getLineClass(isPreviousPage: boolean) {\n\t\tif (isPreviousPage) {\n\t\t\treturn \"wizard-breadcrumb-line-active\"\n\t\t} else {\n\t\t\treturn \"wizard-breadcrumb-line\"\n\t\t}\n\t}\n}\n\n/**\n * Pair of attrs and component for those attrs\n * We care about these properties:\n * It has WizardPageAttrs for T\n * A is consistent with the component\n *\n * When we use the wrapper we don't care about specific type of attrs or component.\n */\n\nexport interface WizardPageWrapper<T> {\n\treadonly attrs: WizardPageAttrs<T>\n\treadonly view: () => Children\n}\n\nexport function wizardPageWrapper<T, A extends WizardPageAttrs<T>>(component: Class<Component<A>>, attributes: A): WizardPageWrapper<T> {\n\treturn {\n\t\tattrs: attributes,\n\t\tview: () => m(component, attributes),\n\t}\n}\n\nclass WizardDialogAttrs<T> {\n\treadonly data: T\n\tpages: ReadonlyArray<WizardPageWrapper<T>>\n\tcurrentPage: WizardPageWrapper<T> | null\n\tcloseAction: () => Promise<void>\n\tcancelButtonText: TranslationKey\n\tprivate _headerBarAttrs: DialogHeaderBarAttrs = {}\n\n\tget headerBarAttrs(): DialogHeaderBarAttrs {\n\t\treturn this._headerBarAttrs\n\t}\n\n\t// Idea for refactoring: make optional parameters into separate object\n\tconstructor(data: T, pages: ReadonlyArray<WizardPageWrapper<T>>, cancelButtonText: TranslationKey | null = null, closeAction?: () => Promise<void>) {\n\t\tthis.data = data\n\t\tthis.pages = pages\n\t\tthis.currentPage = pages.find((p) => p.attrs.isEnabled()) ?? null\n\t\tthis.closeAction = closeAction\n\t\t\t? () => closeAction()\n\t\t\t: () => {\n\t\t\t\t\treturn Promise.resolve()\n\t\t\t  }\n\t\tthis.cancelButtonText = cancelButtonText ?? \"cancel_action\"\n\t\tthis.updateHeaderBarAttrs()\n\t}\n\n\tgoToPreviousPageOrClose(): void {\n\t\tlet currentPageIndex = this.currentPage ? this._getEnabledPages().indexOf(this.currentPage) : -1\n\n\t\tif (!this.allowedToVisitPage(currentPageIndex - 1, currentPageIndex)) return\n\n\t\tif (currentPageIndex > 0) {\n\t\t\tthis._goToPageAction(currentPageIndex - 1)\n\n\t\t\tm.redraw()\n\t\t} else {\n\t\t\tthis.closeAction()\n\t\t}\n\t}\n\n\tupdateHeaderBarAttrs<T>(): void {\n\t\tlet currentPageIndex = this.currentPage ? this._getEnabledPages().indexOf(this.currentPage) : -1\n\n\t\tconst backButtonAttrs: ButtonAttrs = {\n\t\t\tlabel: currentPageIndex === 0 ? this.cancelButtonText : \"back_action\",\n\t\t\tclick: () => this.goToPreviousPageOrClose(),\n\t\t\ttype: ButtonType.Secondary,\n\t\t}\n\t\tconst skipButtonAttrs: ButtonAttrs = {\n\t\t\tlabel: \"skip_action\",\n\t\t\tclick: () => this.goToNextPageOrCloseWizard(),\n\t\t\ttype: ButtonType.Secondary,\n\t\t}\n\n\t\t// the wizard dialog has a reference to this._headerBarAttrs -> changing this object changes the dialog\n\t\tlet source: DialogHeaderBarAttrs = {\n\t\t\tleft: currentPageIndex >= 0 && this.allowedToVisitPage(currentPageIndex - 1, currentPageIndex) ? [backButtonAttrs] : [],\n\t\t\tright: () =>\n\t\t\t\tthis.currentPage &&\n\t\t\t\tthis.currentPage.attrs.isSkipAvailable() &&\n\t\t\t\tthis._getEnabledPages().indexOf(this.currentPage) !== this._getEnabledPages().length - 1\n\t\t\t\t\t? [skipButtonAttrs]\n\t\t\t\t\t: [],\n\t\t\tmiddle: this.currentPage ? this.currentPage.attrs.headerTitle() : \"emptyString_msg\",\n\t\t}\n\t\tObject.assign(this._headerBarAttrs, source)\n\t}\n\n\t_getEnabledPages(): Array<WizardPageWrapper<T>> {\n\t\treturn this.pages.filter((p) => p.attrs.isEnabled())\n\t}\n\n\t_goToPageAction(targetIndex: number): void {\n\t\tconst pages = this._getEnabledPages()\n\n\t\tthis.currentPage = pages[targetIndex]\n\t\tthis.updateHeaderBarAttrs()\n\t}\n\n\tgoToNextPageOrCloseWizard() {\n\t\tconst pages = this._getEnabledPages()\n\n\t\tconst currentIndex = this.currentPage ? pages.indexOf(this.currentPage) : -1\n\t\tconst lastIndex = pages.length - 1\n\t\tlet finalAction = currentIndex === lastIndex\n\n\t\tif (finalAction) {\n\t\t\tthis.closeAction()\n\t\t} else {\n\t\t\tthis._goToPageAction(currentIndex < lastIndex ? currentIndex + 1 : lastIndex)\n\t\t}\n\t}\n\n\t/** returns whether it is allowed to visit the page specified by pageIndex depending on selectedPageIndex */\n\tallowedToVisitPage(pageIndex: number, selectedPageIndex: number): boolean {\n\t\tif (pageIndex < 0 || selectedPageIndex < 0) {\n\t\t\treturn true // invalid values -> should not restrict here\n\t\t}\n\t\tconst enabledPages = this._getEnabledPages()\n\t\t// page is only allowed to be visited if it was already visited and there is no later page that was already visited and does not allow to go back\n\t\treturn (\n\t\t\tpageIndex < selectedPageIndex &&\n\t\t\t!enabledPages\n\t\t\t\t.filter((page, index) => {\n\t\t\t\t\treturn index > pageIndex && index <= selectedPageIndex\n\t\t\t\t})\n\t\t\t\t.some((page) => page.attrs.preventGoBack)\n\t\t)\n\t}\n}\n\ntype WizardPagingButtonAttrs = {\n\tpageIndex: number\n\tgetSelectedPageIndex: () => number\n\tisClickable: () => boolean\n\tnavigateBackHandler: (pageIndex: number) => void\n}\n\n//exported for old-style WizardDialog.js\nexport class WizardPagingButton {\n\tview(vnode: Vnode<WizardPagingButtonAttrs>): Children {\n\t\tconst selectedPageIndex = vnode.attrs.getSelectedPageIndex()\n\t\tconst pageIndex = vnode.attrs.pageIndex\n\t\tconst isClickable = vnode.attrs.isClickable()\n\t\tconst nextIndex = (pageIndex + 1).toString()\n\t\tconst isSelectedPage = selectedPageIndex === pageIndex\n\t\tconst isPreviousPage = pageIndex < selectedPageIndex\n\n\t\treturn m(\n\t\t\t\"button.button-icon.flex-center.items-center\",\n\t\t\t{\n\t\t\t\ttabIndex: isClickable ? TabIndex.Default : TabIndex.Programmatic,\n\t\t\t\t\"aria-disabled\": isClickable.toString(),\n\t\t\t\t\"aria-label\": isClickable ? lang.get(\"previous_action\") : nextIndex,\n\t\t\t\t\"aria-current\": isSelectedPage ? \"step\" : \"false\",\n\t\t\t\t\"aria-live\": isSelectedPage ? \"polite\" : \"off\",\n\t\t\t\tclass: this.getClass(isSelectedPage, isPreviousPage),\n\t\t\t\tstyle: {\n\t\t\t\t\tcursor: isClickable ? \"pointer\" : \"auto\",\n\t\t\t\t},\n\t\t\t\tonclick: () => {\n\t\t\t\t\tif (isClickable) {\n\t\t\t\t\t\tvnode.attrs.navigateBackHandler(pageIndex)\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t},\n\t\t\tisPreviousPage\n\t\t\t\t? m(Icon, {\n\t\t\t\t\t\ticon: Icons.Checkmark,\n\t\t\t\t\t\tsize: IconSize.Medium,\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\tfill: theme.content_bg,\n\t\t\t\t\t\t},\n\t\t\t\t  })\n\t\t\t\t: nextIndex,\n\t\t)\n\t}\n\n\t// Apply the correct styling based on the current page number\n\tprivate getClass(isSelectedPage: boolean, isPreviousPage: boolean) {\n\t\tif (isSelectedPage) {\n\t\t\treturn \"wizard-breadcrumb-active\"\n\t\t} else if (isPreviousPage) {\n\t\t\treturn \"wizard-breadcrumb-previous\"\n\t\t} else {\n\t\t\treturn \"wizard-breadcrumb\"\n\t\t}\n\t}\n}\n\nexport type WizardDialogAttrsBuilder<T> = {\n\tdialog: Dialog\n\tattrs: WizardDialogAttrs<T>\n}\n\n// Use to generate a new wizard\nexport function createWizardDialog<T>(\n\tdata: T,\n\tpages: ReadonlyArray<WizardPageWrapper<T>>,\n\tcloseAction: (() => $Promisable<void>) | null = null,\n\tdialogType: DialogType.EditLarge | DialogType.EditSmall,\n\tcancelButtonText: TranslationKey | null = null,\n): WizardDialogAttrsBuilder<T> {\n\t// We need the close action of the dialog before we can create the proper attributes\n\n\tlet view: () => Children = () => null\n\n\tconst child: Component = {\n\t\tview: () => view(),\n\t}\n\tconst unregisterCloseListener = windowFacade.addWindowCloseListener(() => {})\n\tconst closeActionWrapper = async () => {\n\t\tif (closeAction) {\n\t\t\tawait closeAction()\n\t\t}\n\t\twizardDialog.close()\n\t\tunregisterCloseListener()\n\t}\n\tconst wizardDialogAttrs = new WizardDialogAttrs(data, pages, cancelButtonText, closeActionWrapper)\n\tconst wizardDialog =\n\t\tdialogType === DialogType.EditLarge\n\t\t\t? Dialog.largeDialog(wizardDialogAttrs.headerBarAttrs, child)\n\t\t\t: Dialog.editSmallDialog(wizardDialogAttrs.headerBarAttrs, () => m(child))\n\n\tview = () => m(WizardDialog, wizardDialogAttrs)\n\twizardDialog\n\t\t.addShortcut({\n\t\t\tkey: Keys.ESC,\n\t\t\texec: () => {\n\t\t\t\tconfirmThenCleanup(() => wizardDialogAttrs.closeAction())\n\t\t\t},\n\t\t\thelp: \"close_alt\",\n\t\t})\n\t\t.setCloseHandler(() => {\n\t\t\t// the dialogs popState handler will return false which prevents the wizard from being closed\n\t\t\t// we then close the wizard manually if the user confirms\n\t\t\tconfirmThenCleanup(() => wizardDialogAttrs.closeAction())\n\t\t})\n\n\treturn {\n\t\tdialog: wizardDialog,\n\t\tattrs: wizardDialogAttrs,\n\t}\n}\n\nasync function confirmThenCleanup(closeAction: () => Promise<void>) {\n\tconst confirmed = await Dialog.confirm(\"closeWindowConfirmation_msg\")\n\tif (confirmed) {\n\t\tcloseAction()\n\t}\n}\n"]}