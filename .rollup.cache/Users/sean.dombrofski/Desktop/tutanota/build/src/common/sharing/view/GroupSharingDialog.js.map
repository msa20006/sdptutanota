{"version":3,"file":"GroupSharingDialog.js","sourceRoot":"","sources":["../../../../../src/common/sharing/view/GroupSharingDialog.ts"],"names":[],"mappings":"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","sourcesContent":["import m, { Children, Component, Vnode } from \"mithril\"\nimport stream from \"mithril/stream\"\nimport { Dialog, DialogType } from \"../../gui/base/Dialog\"\nimport type { TableLineAttrs } from \"../../gui/base/Table.js\"\nimport { ColumnWidth, Table } from \"../../gui/base/Table.js\"\nimport { assert, assertNotNull, downcast, findAndRemove, neverNull, remove } from \"@tutao/tutanota-utils\"\nimport { Icons } from \"../../gui/base/icons/Icons\"\nimport { lang } from \"../../misc/LanguageViewModel\"\nimport { ButtonType } from \"../../gui/base/Button.js\"\nimport { showProgressDialog } from \"../../gui/dialogs/ProgressDialog\"\nimport { GroupType, ShareCapability } from \"../../api/common/TutanotaConstants\"\nimport { DropDownSelector } from \"../../gui/base/DropDownSelector.js\"\nimport { PreconditionFailedError, TooManyRequestsError } from \"../../api/common/error/RestError\"\nimport { TextField } from \"../../gui/base/TextField.js\"\nimport type { GroupInfo } from \"../../api/entities/sys/TypeRefs.js\"\nimport { getCapabilityText, getMemberCapability, getSharedGroupName, hasCapabilityOnGroup, isShareableGroupType, isSharedGroupOwner } from \"../GroupUtils\"\nimport { sendShareNotificationEmail } from \"../GroupSharingUtils\"\nimport { GroupSharingModel } from \"../model/GroupSharingModel\"\nimport { locator } from \"../../api/main/CommonLocator\"\nimport { UserError } from \"../../api/main/UserError\"\nimport { showUserError } from \"../../misc/ErrorHandlerImpl\"\nimport { getConfirmation } from \"../../gui/base/GuiUtils\"\nimport type { GroupSharingTexts } from \"../GroupGuiUtils\"\nimport { getTextsForGroupType } from \"../GroupGuiUtils\"\nimport { ResolvableRecipient, ResolveMode } from \"../../api/main/RecipientsModel\"\nimport { MailRecipientsTextField } from \"../../gui/MailRecipientsTextField.js\"\nimport { cleanMailAddress, findRecipientWithAddress } from \"../../api/common/utils/CommonCalendarUtils.js\"\nimport { showPlanUpgradeRequiredDialog } from \"../../misc/SubscriptionDialogs.js\"\nimport { getMailAddressDisplayText } from \"../../mailFunctionality/SharedMailUtils.js\"\nimport { IconButtonAttrs } from \"../../gui/base/IconButton.js\"\n\nexport async function showGroupSharingDialog(groupInfo: GroupInfo, allowGroupNameOverride: boolean) {\n\tconst groupType = downcast(assertNotNull(groupInfo.groupType))\n\tassert(isShareableGroupType(groupInfo.groupType as GroupType), `Group type \"${groupType}\" must be shareable`)\n\tconst texts = getTextsForGroupType(groupType)\n\tconst recipientsModel = await locator.recipientsModel()\n\tshowProgressDialog(\n\t\t\"loading_msg\",\n\t\tGroupSharingModel.newAsync(\n\t\t\tgroupInfo,\n\t\t\tlocator.eventController,\n\t\t\tlocator.entityClient,\n\t\t\tlocator.logins,\n\t\t\tlocator.mailFacade,\n\t\t\tlocator.shareFacade,\n\t\t\tlocator.groupManagementFacade,\n\t\t\trecipientsModel,\n\t\t),\n\t).then((model) => {\n\t\tmodel.onEntityUpdate.map(m.redraw.bind(m))\n\t\tlet dialog = Dialog.showActionDialog({\n\t\t\ttitle: \"sharing_label\",\n\t\t\ttype: DialogType.EditMedium,\n\t\t\tchild: () =>\n\t\t\t\tm(GroupSharingDialogContent, {\n\t\t\t\t\tmodel,\n\t\t\t\t\tallowGroupNameOverride,\n\t\t\t\t\ttexts,\n\t\t\t\t\tdialog,\n\t\t\t\t}),\n\t\t\tokAction: null,\n\t\t\tcancelAction: () => model.dispose(),\n\t\t\tcancelActionTextId: \"close_alt\",\n\t\t})\n\t})\n}\n\ntype GroupSharingDialogAttrs = {\n\tmodel: GroupSharingModel\n\tallowGroupNameOverride: boolean\n\ttexts: GroupSharingTexts\n\tdialog: Dialog\n}\n\nclass GroupSharingDialogContent implements Component<GroupSharingDialogAttrs> {\n\tview(vnode: Vnode<GroupSharingDialogAttrs>): Children {\n\t\tconst { model, allowGroupNameOverride, texts, dialog } = vnode.attrs\n\t\tconst groupName = getSharedGroupName(model.info, model.logins.getUserController(), allowGroupNameOverride)\n\t\treturn m(\".flex.col.pt-s\", [\n\t\t\tm(Table, {\n\t\t\t\tcolumnHeading: [lang.makeTranslation(\"column_heading\", texts.participantsLabel(groupName))],\n\t\t\t\tcolumnWidths: [ColumnWidth.Largest, ColumnWidth.Largest],\n\t\t\t\tlines: this._renderMemberInfos(model, texts, groupName, dialog).concat(this._renderGroupInvitations(model, texts, groupName)),\n\t\t\t\tshowActionButtonColumn: true,\n\t\t\t\taddButtonAttrs: hasCapabilityOnGroup(locator.logins.getUserController().user, model.group, ShareCapability.Invite)\n\t\t\t\t\t? {\n\t\t\t\t\t\t\ttitle: \"addParticipant_action\",\n\t\t\t\t\t\t\tclick: () => showAddParticipantDialog(model, texts),\n\t\t\t\t\t\t\ticon: Icons.Add,\n\t\t\t\t\t  }\n\t\t\t\t\t: null,\n\t\t\t}),\n\t\t])\n\t}\n\n\t_renderGroupInvitations(model: GroupSharingModel, texts: GroupSharingTexts, groupName: string): Array<TableLineAttrs> {\n\t\treturn model.sentGroupInvitations.map((sentGroupInvitation) => {\n\t\t\tlet iconBtn: IconButtonAttrs = {\n\t\t\t\ttitle: \"remove_action\",\n\t\t\t\tclick: () => {\n\t\t\t\t\tgetConfirmation(\n\t\t\t\t\t\tlang.makeTranslation(\"confirmation_msg\", texts.removeMemberMessage(groupName, sentGroupInvitation.inviteeMailAddress)),\n\t\t\t\t\t).confirmed(async () => {\n\t\t\t\t\t\tawait model.cancelInvitation(sentGroupInvitation)\n\t\t\t\t\t\tm.redraw()\n\t\t\t\t\t})\n\t\t\t\t},\n\t\t\t\ticon: Icons.Cancel,\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tcells: () => [\n\t\t\t\t\t{\n\t\t\t\t\t\tmain: sentGroupInvitation.inviteeMailAddress,\n\t\t\t\t\t\tinfo: [`${lang.get(\"invited_label\")}, ${getCapabilityText(downcast(sentGroupInvitation.capability))}`],\n\t\t\t\t\t\tmainStyle: \".i\",\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tactionButtonAttrs: model.canCancelInvitation(sentGroupInvitation) ? iconBtn : null,\n\t\t\t}\n\t\t})\n\t}\n\n\t_renderMemberInfos(model: GroupSharingModel, texts: GroupSharingTexts, groupName: string, dialog: Dialog): Array<TableLineAttrs> {\n\t\treturn model.memberInfos.map((memberInfo) => {\n\t\t\treturn {\n\t\t\t\tcells: () => [\n\t\t\t\t\t{\n\t\t\t\t\t\tmain: getMailAddressDisplayText(memberInfo.info.name, neverNull(memberInfo.info.mailAddress), false),\n\t\t\t\t\t\tinfo: [\n\t\t\t\t\t\t\t(isSharedGroupOwner(model.group, memberInfo.member.user) ? lang.get(\"owner_label\") : lang.get(\"participant_label\")) +\n\t\t\t\t\t\t\t\t\", \" +\n\t\t\t\t\t\t\t\tgetCapabilityText(getMemberCapability(memberInfo, model.group)),\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tactionButtonAttrs: model.canRemoveGroupMember(memberInfo.member)\n\t\t\t\t\t? {\n\t\t\t\t\t\t\ttitle: \"delete_action\",\n\t\t\t\t\t\t\ticon: Icons.Cancel,\n\t\t\t\t\t\t\tclick: () => {\n\t\t\t\t\t\t\t\tgetConfirmation(\n\t\t\t\t\t\t\t\t\tlang.makeTranslation(\"confirmation_msg\", texts.removeMemberMessage(groupName, downcast(memberInfo.info.mailAddress))),\n\t\t\t\t\t\t\t\t).confirmed(async () => {\n\t\t\t\t\t\t\t\t\tawait model.removeGroupMember(memberInfo.member)\n\t\t\t\t\t\t\t\t\tif (model.memberIsSelf(memberInfo.member)) {\n\t\t\t\t\t\t\t\t\t\tdialog.close()\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tm.redraw()\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t},\n\t\t\t\t\t  }\n\t\t\t\t\t: null,\n\t\t\t}\n\t\t})\n\t}\n}\n\nasync function showAddParticipantDialog(model: GroupSharingModel, texts: GroupSharingTexts) {\n\tconst recipientsText = stream(\"\")\n\tconst recipients = [] as Array<ResolvableRecipient>\n\tconst capability = stream<ShareCapability>(ShareCapability.Read)\n\tconst realGroupName = getSharedGroupName(model.info, locator.logins.getUserController(), false)\n\tconst customGroupName = getSharedGroupName(model.info, locator.logins.getUserController(), true)\n\n\tconst search = await locator.recipientsSearchModel()\n\tconst recipientsModel = await locator.recipientsModel()\n\n\tlet dialog = Dialog.showActionDialog({\n\t\ttype: DialogType.EditMedium,\n\t\ttitle: \"addParticipant_action\",\n\t\tchild: () => [\n\t\t\tm(\n\t\t\t\t\".rel\",\n\t\t\t\tm(MailRecipientsTextField, {\n\t\t\t\t\tlabel: \"shareWithEmailRecipient_label\",\n\t\t\t\t\ttext: recipientsText(),\n\t\t\t\t\trecipients: recipients,\n\t\t\t\t\tdisabled: false,\n\t\t\t\t\tgetRecipientClickedDropdownAttrs: async (address) => [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tinfo: address,\n\t\t\t\t\t\t\tcenter: false,\n\t\t\t\t\t\t\tbold: false,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: \"remove_action\",\n\t\t\t\t\t\t\ttype: ButtonType.Secondary,\n\t\t\t\t\t\t\tclick: () => {\n\t\t\t\t\t\t\t\tconst bubbleToRemove = findRecipientWithAddress(recipients, address)\n\t\t\t\t\t\t\t\tif (bubbleToRemove) {\n\t\t\t\t\t\t\t\t\tremove(recipients, bubbleToRemove)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t\tonRecipientAdded: (address, name, contact) =>\n\t\t\t\t\t\trecipients.push(recipientsModel.resolve({ address, name, contact }, ResolveMode.Eager).whenResolved(() => m.redraw())),\n\t\t\t\t\tonRecipientRemoved: (address) =>\n\t\t\t\t\t\tfindAndRemove(recipients, (recipient) => cleanMailAddress(recipient.address) === cleanMailAddress(address)),\n\t\t\t\t\tonTextChanged: recipientsText,\n\t\t\t\t\tsearch,\n\t\t\t\t\tmaxSuggestionsToShow: 3,\n\t\t\t\t}),\n\t\t\t),\n\t\t\tm(DropDownSelector, {\n\t\t\t\tlabel: \"permissions_label\",\n\t\t\t\titems: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: getCapabilityText(ShareCapability.Invite),\n\t\t\t\t\t\tvalue: ShareCapability.Invite,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: getCapabilityText(ShareCapability.Write),\n\t\t\t\t\t\tvalue: ShareCapability.Write,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: getCapabilityText(ShareCapability.Read),\n\t\t\t\t\t\tvalue: ShareCapability.Read,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tselectedValue: capability(),\n\t\t\t\tselectionChangedHandler: capability,\n\t\t\t\tdropdownWidth: 300,\n\t\t\t}),\n\t\t\tm(TextField, {\n\t\t\t\tvalue: realGroupName,\n\t\t\t\tlabel: texts.groupNameLabel,\n\t\t\t\tisReadOnly: true,\n\t\t\t\thelpLabel: () => {\n\t\t\t\t\treturn m(\"\", customGroupName === realGroupName ? null : texts.yourCustomNameLabel(customGroupName))\n\t\t\t\t},\n\t\t\t}),\n\t\t\tm(\".pt\", texts.addMemberMessage(customGroupName || realGroupName)),\n\t\t],\n\t\tokAction: async () => {\n\t\t\tif (recipients.length === 0) {\n\t\t\t\treturn Dialog.message(\"noRecipients_msg\")\n\t\t\t}\n\n\t\t\tconst { checkPaidSubscription, showPlanUpgradeRequiredDialog } = await import(\"../../misc/SubscriptionDialogs\")\n\t\t\tif (await checkPaidSubscription()) {\n\t\t\t\ttry {\n\t\t\t\t\tconst invitedMailAddresses = await showProgressDialog(\n\t\t\t\t\t\t\"calendarInvitationProgress_msg\",\n\t\t\t\t\t\tmodel.sendGroupInvitation(model.info, recipients, capability()),\n\t\t\t\t\t)\n\t\t\t\t\tdialog.close()\n\t\t\t\t\tawait sendShareNotificationEmail(model.info, invitedMailAddresses, texts)\n\t\t\t\t} catch (e) {\n\t\t\t\t\tif (e instanceof PreconditionFailedError) {\n\t\t\t\t\t\tif (locator.logins.getUserController().isGlobalAdmin()) {\n\t\t\t\t\t\t\tconst { getAvailablePlansWithSharing } = await import(\"../../subscription/SubscriptionUtils.js\")\n\t\t\t\t\t\t\tconst plans = await getAvailablePlansWithSharing()\n\t\t\t\t\t\t\tawait showPlanUpgradeRequiredDialog(plans)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tDialog.message(\"contactAdmin_msg\")\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (e instanceof UserError) {\n\t\t\t\t\t\tshowUserError(e)\n\t\t\t\t\t} else if (e instanceof TooManyRequestsError) {\n\t\t\t\t\t\tDialog.message(\"tooManyAttempts_msg\")\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow e\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tokActionTextId: \"invite_alt\",\n\t}).setCloseHandler(() => {\n\t\tdialog.close()\n\t})\n}\n"]}