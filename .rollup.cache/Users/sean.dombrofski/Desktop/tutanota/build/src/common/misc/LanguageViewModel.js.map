{"version":3,"file":"LanguageViewModel.js","sourceRoot":"","sources":["../../../../src/common/misc/LanguageViewModel.ts"],"names":[],"mappings":"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","sourcesContent":["import { downcast, lazy, typedEntries } from \"@tutao/tutanota-utils\"\nimport type { TranslationKeyType } from \"./TranslationKey\"\nimport { getWhitelabelCustomizations, WhitelabelCustomizations } from \"./WhitelabelCustomizations\"\nimport { assertMainOrNodeBoot } from \"../api/common/Env\"\n\n/**\n * A translation key is a string that maps to a translation text.\n */\nexport type TranslationKey = TranslationKeyType\n\n/**\n * Legacy type that is either a TranslationKey or a Translation.\n * New code should either use TranslationKey or Translation.\n */\nexport type MaybeTranslation = TranslationKey | Translation\n\n/**\n * A Translation is a keyed translation text.\n *\n * Encapsulates a testid and the resolved translation text.\n * The testid is the translation key in most cases, and\n * it is used as data-testid dom attribute for acceptance tests.\n */\nexport type Translation = {\n\ttestId: TranslationKey | string\n\ttext: string\n\n\t// defined to make the Translation type clash with Component.\n\t// This ensures that typscript errors out when we pass a resolved translation\n\t// to the m hyperscript function like m('div', ResolvedTranslation{tkey: \"dummy\", text: \"yeah\"})\n\toninit?: object\n}\nassertMainOrNodeBoot()\nexport type DateTimeFormatOptions = {\n\thourCycle?: \"h11\" | \"h12\" | \"h23\" | \"h24\"\n}\nconst translationImportMap: Record<LanguageCode, () => Promise<any>> = {\n\tar: () => import(\"../../mail-app/translations/ar.js\"),\n\tbe: () => import(\"../../mail-app/translations/be.js\"),\n\tbg: () => import(\"../../mail-app/translations/bg.js\"),\n\tca: () => import(\"../../mail-app/translations/ca.js\"),\n\tcs: () => import(\"../../mail-app/translations/cs.js\"),\n\tda: () => import(\"../../mail-app/translations/da.js\"),\n\tde: () => import(\"../../mail-app/translations/de.js\"),\n\tde_sie: () => import(\"../../mail-app/translations/de_sie.js\"),\n\tel: () => import(\"../../mail-app/translations/el.js\"),\n\ten: () => import(\"../../mail-app/translations/en.js\"),\n\ten_gb: () => import(\"../../mail-app/translations/en.js\"),\n\tes: () => import(\"../../mail-app/translations/es.js\"),\n\tet: () => import(\"../../mail-app/translations/et.js\"),\n\tfa_ir: () => import(\"../../mail-app/translations/fa_ir.js\"),\n\tfi: () => import(\"../../mail-app/translations/fi.js\"),\n\tfr: () => import(\"../../mail-app/translations/fr.js\"),\n\tgl: () => import(\"../../mail-app/translations/gl.js\"),\n\the: () => import(\"../../mail-app/translations/he.js\"),\n\thi: () => import(\"../../mail-app/translations/hi.js\"),\n\thr: () => import(\"../../mail-app/translations/hr.js\"),\n\thu: () => import(\"../../mail-app/translations/hu.js\"),\n\tid: () => import(\"../../mail-app/translations/id.js\"),\n\tit: () => import(\"../../mail-app/translations/it.js\"),\n\tja: () => import(\"../../mail-app/translations/ja.js\"),\n\tko: () => import(\"../../mail-app/translations/ko.js\"),\n\tlt: () => import(\"../../mail-app/translations/lt.js\"),\n\tlv: () => import(\"../../mail-app/translations/lv.js\"),\n\tnl: () => import(\"../../mail-app/translations/nl.js\"),\n\tno: () => import(\"../../mail-app/translations/no.js\"),\n\tpl: () => import(\"../../mail-app/translations/pl.js\"),\n\tpt_br: () => import(\"../../mail-app/translations/pt_br.js\"),\n\tpt_pt: () => import(\"../../mail-app/translations/pt_pt.js\"),\n\tro: () => import(\"../../mail-app/translations/ro.js\"),\n\tru: () => import(\"../../mail-app/translations/ru.js\"),\n\tsi: () => import(\"../../mail-app/translations/si.js\"),\n\tsk: () => import(\"../../mail-app/translations/sk.js\"),\n\tsl: () => import(\"../../mail-app/translations/sl.js\"),\n\tsr_cyrl: () => import(\"../../mail-app/translations/sr_cyrl.js\"),\n\tsv: () => import(\"../../mail-app/translations/sv.js\"),\n\ttr: () => import(\"../../mail-app/translations/tr.js\"),\n\tuk: () => import(\"../../mail-app/translations/uk.js\"),\n\tvi: () => import(\"../../mail-app/translations/vi.js\"),\n\tzh: () => import(\"../../mail-app/translations/zh.js\"),\n\tzh_hant: () => import(\"../../mail-app/translations/zh_hant.js\"),\n}\n\n/**\n * Language = {code, textId}\n * \"code\" is the 2 letter abbr. of the language (\"en\", \"ar\")\n * \"textId\" corresponds to a code (\"languageEnglish_label\", \"languageArabic_label\")\n *\n * lang.get(textId) will return the translated languages\n * languageByCode[code] will return the whole language Object\n * in all cases lang.get(languageByCode[code].textId) will always return the translated language from a code\n */\nexport const LanguageNames: Record<string, TranslationKey> = Object.freeze({\n\tar: \"languageArabic_label\",\n\tbe: \"languageBelarusian_label\",\n\tbg: \"languageBulgarian_label\",\n\tca: \"languageCatalan_label\",\n\tcs: \"languageCzech_label\",\n\tda: \"languageDanish_label\",\n\tde: \"languageGerman_label\",\n\tde_sie: \"languageGermanSie_label\",\n\tel: \"languageGreek_label\",\n\ten: \"languageEnglish_label\",\n\ten_gb: \"languageEnglishUk_label\",\n\tes: \"languageSpanish_label\",\n\tet: \"languageEstonian_label\",\n\tfa_ir: \"languagePersian_label\",\n\tfi: \"languageFinnish_label\",\n\tfr: \"languageFrench_label\",\n\tgl: \"languageGalician_label\",\n\the: \"languageHebrew_label\",\n\thi: \"languageHindi_label\",\n\thr: \"languageCroatian_label\",\n\thu: \"languageHungarian_label\",\n\tid: \"languageIndonesian_label\",\n\tit: \"languageItalian_label\",\n\tja: \"languageJapanese_label\",\n\tko: \"languageKorean_label\",\n\tlt: \"languageLithuanian_label\",\n\tlv: \"languageLatvian_label\",\n\tnl: \"languageDutch_label\",\n\tno: \"languageNorwegian_label\",\n\tpl: \"languagePolish_label\",\n\tpt_br: \"languagePortugeseBrazil_label\",\n\tpt_pt: \"languagePortugesePortugal_label\",\n\tro: \"languageRomanian_label\",\n\tru: \"languageRussian_label\",\n\tsi: \"languageSinhalese_label\",\n\tsk: \"languageSlovak_label\",\n\tsl: \"languageSlovenian_label\",\n\tsr_cyrl: \"languageSerbian_label\",\n\tsv: \"languageSwedish_label\",\n\ttr: \"languageTurkish_label\",\n\tuk: \"languageUkrainian_label\",\n\tvi: \"languageVietnamese_label\",\n\tzh: \"languageChineseSimplified_label\",\n\tzh_hant: \"languageChineseTraditional_label\",\n} as const)\nexport type LanguageCode = keyof typeof LanguageNames\nexport type Language = {\n\tcode: LanguageCode\n\ttextId: TranslationKey\n}\n\nexport const LanguageActualNames = Object.freeze({\n\tar: \"العربية\",\n\tbe: \"Беларуская\",\n\tbg: \"Български\",\n\tca: \"Català\",\n\tcs: \"Čeština\",\n\tda: \"Dansk\",\n\tde: \"Deutsch\",\n\tde_sie: \"Deutsch (Sie)\",\n\tel: \"Ελληνική\",\n\ten: \"English\",\n\ten_gb: \"English (UK)\",\n\tes: \"Español\",\n\tet: \"Eesti keel\",\n\tfa_ir: \"فارسی\",\n\tfi: \"suomi\",\n\tfr: \"Français\",\n\tgl: \"Galego\",\n\the: \"עברית\",\n\thi: \"हिंदी\",\n\thr: \"Hrvatski\",\n\thu: \"Magyar\",\n\tid: \"Indonesia\",\n\tit: \"Italiano\",\n\tja: \"日本語\",\n\tko: \"한국어\",\n\tlt: \"Lietuvių\",\n\tlv: \"Latviešu\",\n\tnl: \"Nederlands\",\n\tno: \"Norsk\",\n\tpl: \"polski\",\n\tpt_br: \"Português, Brasil\",\n\tpt_pt: \"Português, Portugal\",\n\tro: \"Română\",\n\tru: \"Русский\",\n\tsi: \"සිංහල\",\n\tsk: \"Slovenčina\",\n\tsl: \"slovenščina\",\n\tsr_cyrl: \"Srpski\",\n\tsv: \"Svenska\",\n\ttr: \"Türkçe\",\n\tuk: \"Українська\",\n\tvi: \"Tiếng Việt\",\n\tzh: \"简体中文\",\n\tzh_hant: \"繁體中文\",\n} as const)\nexport const languageByCode = {} as Record<LanguageCode, Language>\n\n// cannot import typedEntries here for some reason\nfor (let [code, textId] of downcast(Object.entries(LanguageNames))) {\n\tlanguageByCode[code] = {\n\t\tcode,\n\t\ttextId,\n\t}\n}\n\nexport const languages: ReadonlyArray<{\n\tcode: LanguageCode\n\ttextId: TranslationKey\n}> = typedEntries(LanguageNames).map(([code, textId]) => {\n\treturn {\n\t\tcode,\n\t\ttextId,\n\t}\n})\n\nexport const languageNative: ReadonlyArray<{\n\tcode: LanguageCode\n\ttextName: string\n}> = typedEntries(LanguageActualNames).map(([code, textName]) => {\n\treturn {\n\t\tcode,\n\t\ttextName,\n\t}\n})\n\nexport const enum InfoLink {\n\tHomePage = \"https://tuta.com\",\n\tAbout = \"https://tuta.com/imprint\",\n\t//terms\n\tTerms = \"https://tuta.com/terms\",\n\tPrivacy = \"https://tuta.com/privacy-policy\",\n\tGiftCardsTerms = \"https://tuta.com/giftCardsTerms\",\n\t//faq\n\tRecoverCode = \"https://tuta.com/faq#reset\",\n\tSecondFactor = \"https://tuta.com/faq#2fa\",\n\tSpamRules = \"https://tuta.com/faq#spam\",\n\tDomainInfo = \"https://tuta.com/faq#custom-domain\",\n\tWhitelabel = \"https://tuta.com/faq#whitelabel\",\n\tReferralLink = \"https://tuta.com/faq#refer-a-friend\",\n\tWebview = \"https://tuta.com/faq#webview\",\n\tPhishing = \"https://tuta.com/faq#phishing\",\n\tMailAuth = \"https://tuta.com/faq#mail-auth\",\n\tRunInBackground = \"https://tuta.com/faq#tray-desktop\",\n\tLoadImages = \"https://tuta.com/faq#load-images\",\n\tUsage = \"https://tuta.com/faq#usage\",\n\tDownload = \"https://tuta.com/#download\",\n\tSharedMailboxes = \"https://tuta.com/support/#shared-mailboxes\",\n\tInactiveAccounts = \"https://tuta.com/faq/#inactive-accounts\",\n\tAppStorePaymentChange = \"https://tuta.com/support/#appstore-payment-change\",\n\tAppStorePayment = \"https://tuta.com/support/#appstore-payments\",\n\tAppStoreDowngrade = \"https://tuta.com/support/#appstore-subscription-downgrade\",\n\tPasswordGenerator = \"https://tuta.com/faq#passphrase-generator\",\n\tHomePageFreeSignup = \"https://tuta.com/free-email\",\n\tDeprecatedKey = \"https://tuta.com/support#deprecated-key-warning\",\n}\n\n/**\n * Provides all localizations of strings on our gui.\n *\n * The translations are defined on JSON files. See the folder 'translations' for examples.\n * The actual identifier is camel case and the type is appended by an underscore.\n * Types: label, action, msg, title, alt, placeholder\n *\n * @constructor\n */\nexport class LanguageViewModel {\n\ttranslations: Record<string, any>\n\tfallback: Record<string, any>\n\tcode!: LanguageCode\n\tlanguageTag!: string\n\tstaticTranslations: Record<string, any>\n\tformats!: {\n\t\tsimpleDate: Intl.DateTimeFormat\n\t\tdateWithMonth: Intl.DateTimeFormat\n\t\tdateWithoutYear: Intl.DateTimeFormat\n\t\tsimpleDateWithoutYear: Intl.DateTimeFormat\n\t\tdateWithWeekday: Intl.DateTimeFormat\n\t\tdateWithWeekdayWoMonth: Intl.DateTimeFormat\n\t\tdateWithWeekdayAndYear: Intl.DateTimeFormat\n\t\tdateWithWeekdayAndYearLong: Intl.DateTimeFormat\n\t\tdateWithWeekdayAndTime: Intl.DateTimeFormat\n\t\tweekdayShort: Intl.DateTimeFormat\n\t\tweekdayNarrow: Intl.DateTimeFormat\n\t\ttime: Intl.DateTimeFormat\n\t\tshortTime: Intl.DateTimeFormat\n\t\tdateTime: Intl.DateTimeFormat\n\t\tdateTimeShort: Intl.DateTimeFormat\n\t\tpriceWithCurrency: Intl.NumberFormat\n\t\tpriceWithCurrencyWithoutFractionDigits: Intl.NumberFormat\n\t\tpriceWithoutCurrency: Intl.NumberFormat\n\t\tpriceWithoutCurrencyWithoutFractionDigits: Intl.NumberFormat\n\t\tmonthLong: Intl.DateTimeFormat\n\t\tmonthShort: Intl.DateTimeFormat\n\t\tmonthShortWithFullYear: Intl.DateTimeFormat\n\t\tmonthWithYear: Intl.DateTimeFormat\n\t\tmonthWithFullYear: Intl.DateTimeFormat\n\t\tyearNumeric: Intl.DateTimeFormat\n\t\tshortMonthYear2Digit: Intl.DateTimeFormat\n\t}\n\n\tconstructor() {\n\t\tthis.translations = {}\n\t\tthis.fallback = {}\n\t\tthis.staticTranslations = {}\n\t}\n\n\tinit(en: object): Promise<void> {\n\t\tthis.translations = en\n\t\tthis.fallback = en // always load english as fallback\n\n\t\tthis.code = \"en\"\n\t\tconst language = getLanguage()\n\t\treturn this.setLanguage(language) // Service worker currently caches only English. We don't want the whole app to fail if we cannot fetch the language.\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.warn(\"Could not set language\", language, e)\n\n\t\t\t\tthis._setLanguageTag(\"en-US\")\n\t\t\t})\n\t}\n\n\taddStaticTranslation(key: string, text: string) {\n\t\tthis.staticTranslations[key] = text\n\t}\n\n\tinitWithTranslations(code: LanguageCode, languageTag: string, fallBackTranslations: Record<string, any>, translations: Record<string, any>) {\n\t\tthis.translations = translations\n\t\tthis.fallback = fallBackTranslations\n\t\tthis.code = code\n\t}\n\n\tsetLanguage(lang: { code: LanguageCode; languageTag: string }): Promise<void> {\n\t\tthis._setLanguageTag(lang.languageTag)\n\n\t\tif (this.code === lang.code) {\n\t\t\treturn Promise.resolve()\n\t\t}\n\n\t\t// we don't support multiple language files for en so just use the one and only.\n\t\tconst code: LanguageCode = lang.code.startsWith(\"en\") ? \"en\" : lang.code\n\t\treturn translationImportMap[code]().then((translationsModule) => {\n\t\t\tthis.translations = translationsModule.default\n\t\t\tthis.code = lang.code\n\t\t})\n\t}\n\n\t/**\n\t * must be invoked at startup from LanguageViewModel to initialize all DateTimeFormats\n\t * @param tag\n\t */\n\t_setLanguageTag(tag: string) {\n\t\tthis.languageTag = tag\n\t\tthis.updateFormats({})\n\t}\n\n\tupdateFormats(options: DateTimeFormatOptions) {\n\t\tconst tag = this.languageTag\n\t\tthis.formats = {\n\t\t\tsimpleDate: new Intl.DateTimeFormat(tag, {\n\t\t\t\tday: \"numeric\",\n\t\t\t\tmonth: \"numeric\",\n\t\t\t\tyear: \"numeric\",\n\t\t\t}),\n\t\t\tdateWithMonth: new Intl.DateTimeFormat(tag, {\n\t\t\t\tday: \"numeric\",\n\t\t\t\tmonth: \"short\",\n\t\t\t\tyear: \"numeric\",\n\t\t\t}),\n\t\t\tdateWithoutYear: Intl.DateTimeFormat(tag, {\n\t\t\t\tday: \"numeric\",\n\t\t\t\tmonth: \"short\",\n\t\t\t}),\n\t\t\tsimpleDateWithoutYear: Intl.DateTimeFormat(tag, {\n\t\t\t\tday: \"numeric\",\n\t\t\t\tmonth: \"numeric\",\n\t\t\t}),\n\t\t\tdateWithWeekday: new Intl.DateTimeFormat(tag, {\n\t\t\t\tweekday: \"short\",\n\t\t\t\tday: \"numeric\",\n\t\t\t\tmonth: \"short\",\n\t\t\t}),\n\t\t\tdateWithWeekdayWoMonth: new Intl.DateTimeFormat(tag, {\n\t\t\t\tweekday: \"short\",\n\t\t\t\tday: \"numeric\",\n\t\t\t}),\n\t\t\tdateWithWeekdayAndYear: new Intl.DateTimeFormat(tag, {\n\t\t\t\tweekday: \"short\",\n\t\t\t\tday: \"numeric\",\n\t\t\t\tmonth: \"short\",\n\t\t\t\tyear: \"numeric\",\n\t\t\t}),\n\t\t\tdateWithWeekdayAndYearLong: new Intl.DateTimeFormat(tag, {\n\t\t\t\tweekday: \"long\",\n\t\t\t\tday: \"numeric\",\n\t\t\t\tmonth: \"long\",\n\t\t\t\tyear: \"numeric\",\n\t\t\t}),\n\t\t\tdateWithWeekdayAndTime: new Intl.DateTimeFormat(\n\t\t\t\ttag,\n\t\t\t\tObject.assign(\n\t\t\t\t\t{},\n\t\t\t\t\t{\n\t\t\t\t\t\tweekday: \"short\",\n\t\t\t\t\t\tday: \"numeric\",\n\t\t\t\t\t\tmonth: \"short\",\n\t\t\t\t\t\thour: \"numeric\",\n\t\t\t\t\t\tminute: \"numeric\",\n\t\t\t\t\t} as const,\n\t\t\t\t\toptions,\n\t\t\t\t),\n\t\t\t),\n\t\t\ttime: new Intl.DateTimeFormat(\n\t\t\t\ttag,\n\t\t\t\tObject.assign(\n\t\t\t\t\t{},\n\t\t\t\t\t{\n\t\t\t\t\t\thour: \"numeric\",\n\t\t\t\t\t\tminute: \"numeric\",\n\t\t\t\t\t} as const,\n\t\t\t\t\toptions,\n\t\t\t\t),\n\t\t\t),\n\t\t\tshortTime: new Intl.DateTimeFormat(\n\t\t\t\ttag,\n\t\t\t\tObject.assign(\n\t\t\t\t\t{},\n\t\t\t\t\t{\n\t\t\t\t\t\thour: \"numeric\",\n\t\t\t\t\t} as const,\n\t\t\t\t\toptions,\n\t\t\t\t),\n\t\t\t),\n\t\t\tdateTime: new Intl.DateTimeFormat(\n\t\t\t\ttag,\n\t\t\t\tObject.assign(\n\t\t\t\t\t{},\n\t\t\t\t\t{\n\t\t\t\t\t\tday: \"numeric\",\n\t\t\t\t\t\tmonth: \"short\",\n\t\t\t\t\t\tyear: \"numeric\",\n\t\t\t\t\t\thour: \"numeric\",\n\t\t\t\t\t\tminute: \"numeric\",\n\t\t\t\t\t} as const,\n\t\t\t\t\toptions,\n\t\t\t\t),\n\t\t\t),\n\t\t\tdateTimeShort: new Intl.DateTimeFormat(\n\t\t\t\ttag,\n\t\t\t\tObject.assign(\n\t\t\t\t\t{},\n\t\t\t\t\t{\n\t\t\t\t\t\tday: \"numeric\",\n\t\t\t\t\t\tmonth: \"numeric\",\n\t\t\t\t\t\tyear: \"numeric\",\n\t\t\t\t\t\thour: \"numeric\",\n\t\t\t\t\t} as const,\n\t\t\t\t\toptions,\n\t\t\t\t),\n\t\t\t),\n\t\t\tweekdayShort: new Intl.DateTimeFormat(tag, {\n\t\t\t\tweekday: \"short\",\n\t\t\t}),\n\t\t\tweekdayNarrow: new Intl.DateTimeFormat(tag, {\n\t\t\t\tweekday: \"narrow\",\n\t\t\t}),\n\t\t\tpriceWithCurrency: new Intl.NumberFormat(tag, {\n\t\t\t\tstyle: \"currency\",\n\t\t\t\tcurrency: \"EUR\",\n\t\t\t\tminimumFractionDigits: 2,\n\t\t\t}),\n\t\t\tpriceWithCurrencyWithoutFractionDigits: new Intl.NumberFormat(tag, {\n\t\t\t\tstyle: \"currency\",\n\t\t\t\tcurrency: \"EUR\",\n\t\t\t\tmaximumFractionDigits: 0,\n\t\t\t\tminimumFractionDigits: 0,\n\t\t\t}),\n\t\t\tpriceWithoutCurrency: new Intl.NumberFormat(tag, {\n\t\t\t\tstyle: \"decimal\",\n\t\t\t\tminimumFractionDigits: 2,\n\t\t\t}),\n\t\t\tpriceWithoutCurrencyWithoutFractionDigits: new Intl.NumberFormat(tag, {\n\t\t\t\tstyle: \"decimal\",\n\t\t\t\tmaximumFractionDigits: 0,\n\t\t\t\tminimumFractionDigits: 0,\n\t\t\t}),\n\t\t\tmonthLong: new Intl.DateTimeFormat(tag, {\n\t\t\t\tmonth: \"long\",\n\t\t\t}),\n\t\t\tmonthShort: new Intl.DateTimeFormat(tag, {\n\t\t\t\tmonth: \"short\",\n\t\t\t}),\n\t\t\tmonthShortWithFullYear: new Intl.DateTimeFormat(tag, {\n\t\t\t\tmonth: \"short\",\n\t\t\t\tyear: \"numeric\",\n\t\t\t}),\n\t\t\tmonthWithYear: new Intl.DateTimeFormat(tag, {\n\t\t\t\tmonth: \"long\",\n\t\t\t\tyear: \"2-digit\",\n\t\t\t}),\n\t\t\tmonthWithFullYear: new Intl.DateTimeFormat(tag, {\n\t\t\t\tmonth: \"long\",\n\t\t\t\tyear: \"numeric\",\n\t\t\t}),\n\t\t\tyearNumeric: new Intl.DateTimeFormat(tag, {\n\t\t\t\tyear: \"numeric\",\n\t\t\t}),\n\t\t\tshortMonthYear2Digit: new Intl.DateTimeFormat(tag, {\n\t\t\t\tmonth: \"2-digit\",\n\t\t\t\tyear: \"2-digit\",\n\t\t\t}),\n\t\t}\n\t}\n\n\texists(id: TranslationKey): boolean {\n\t\ttry {\n\t\t\tthis.get(id)\n\t\t\treturn true\n\t\t} catch (e) {\n\t\t\treturn false\n\t\t}\n\t}\n\n\t/**\n\t * Resolve TranslationKey to Translation.\n\t */\n\tgetTranslation(id: TranslationKey, replacements?: Record<string, string | number>): Translation {\n\t\treturn this.makeTranslation(id, this.get(id, replacements))\n\t}\n\n\t/**\n\t * Should only be used to write the text of a TranslationKey to the dom.\n\t */\n\tgetTranslationText(value: MaybeTranslation): string {\n\t\treturn typeof value === \"object\" ? (value as Translation).text : lang.get(value as TranslationKey)\n\t}\n\n\t/**\n\t * Legacy. Use getTranslation instead.\n\t *\n\t * Should only be used to write the text of a TranslationKey to the dom.\n\t */\n\tget(id: TranslationKey, replacements?: Record<string, string | number>): string {\n\t\tif (id == null) {\n\t\t\treturn \"\"\n\t\t}\n\n\t\tif (id === \"emptyString_msg\") {\n\t\t\treturn \"\\u2008\"\n\t\t}\n\n\t\tlet text = this.translations.keys[id]\n\n\t\tif (!text) {\n\t\t\t// try fallback language\n\t\t\ttext = this.fallback.keys[id]\n\n\t\t\tif (!text) {\n\t\t\t\t// try static definitions\n\t\t\t\ttext = this.staticTranslations[id]\n\n\t\t\t\tif (!text) {\n\t\t\t\t\tthrow new Error(\"no translation found for id \" + id)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (let param in replacements) {\n\t\t\ttext = text.replaceAll(param, String(replacements[param]))\n\t\t}\n\n\t\treturn text\n\t}\n\n\tgetTestId(value: MaybeTranslation): string {\n\t\treturn typeof value === \"object\" ? (value as Translation).testId : (value as TranslationKey)\n\t}\n\n\t/**\n\t * Creates a Translation. Only to be used in rare cases where we can't use a\n\t * TranslationKey (e.g. rendering the name of a folder).\n\t * @param testId\n\t * @param unresolved\n\t */\n\tmakeTranslation(testId: string, unresolved: string | lazy<string>): Translation {\n\t\tlet text = typeof unresolved === \"function\" ? unresolved() : unresolved\n\t\treturn { testId: testId, text }\n\t}\n}\n\n/**\n * Gets the default language derived from the browser language.\n * @param restrictions An array of language codes the selection should be restricted to\n */\nexport function getLanguageNoDefault(restrictions?: LanguageCode[]): { code: LanguageCode; languageTag: string } | null {\n\t// navigator.languages can be an empty array on android 5.x devices\n\tlet languageTags\n\n\tif (typeof navigator !== \"undefined\") {\n\t\tlanguageTags = navigator.languages && navigator.languages.length > 0 ? navigator.languages : [navigator.language]\n\t} else if (typeof process !== \"undefined\" && typeof process.env !== \"undefined\") {\n\t\tconst locale = process.env.LC_ALL || process.env.LC_MESSAGES || process.env.LANG || process.env.LANGUAGE || process.env.LC_NAME\n\n\t\tif (locale) {\n\t\t\tlanguageTags = [locale.split(\".\")[0].replace(\"_\", \"-\")]\n\t\t}\n\t}\n\n\tif (languageTags) {\n\t\tfor (let tag of languageTags) {\n\t\t\tlet code = getSubstitutedLanguageCode(tag, restrictions)\n\n\t\t\tif (code) {\n\t\t\t\treturn {\n\t\t\t\t\tcode: code,\n\t\t\t\t\tlanguageTag: tag,\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null\n}\n\n/**\n * Gets the default language derived from the browser language.\n * @param restrictions An array of language codes the selection should be restricted to\n */\nexport function getLanguage(restrictions?: LanguageCode[]): {\n\tcode: LanguageCode\n\tlanguageTag: string\n} {\n\tconst language = getLanguageNoDefault(restrictions)\n\tif (language) return language\n\n\tif (restrictions == null || restrictions.indexOf(\"en\") !== -1) {\n\t\treturn {\n\t\t\tcode: \"en\",\n\t\t\tlanguageTag: \"en-US\",\n\t\t}\n\t} else {\n\t\treturn {\n\t\t\tcode: restrictions[0],\n\t\t\tlanguageTag: restrictions[0].replace(\"/_/g\", \"-\"),\n\t\t}\n\t}\n}\n\nexport function getSubstitutedLanguageCode(tag: string, restrictions?: LanguageCode[]): LanguageCode | null {\n\tlet code = tag.toLowerCase().replace(\"-\", \"_\")\n\tlet language = languages.find((l) => l.code === code && (restrictions == null || restrictions.indexOf(l.code) !== -1))\n\n\tif (language == null) {\n\t\tif (code === \"zh_hk\" || code === \"zh_tw\") {\n\t\t\tlanguage = languages.find((l) => l.code === \"zh_hant\")\n\t\t} else {\n\t\t\tlet basePart = getBasePart(code)\n\t\t\tlanguage = languages.find((l) => getBasePart(l.code) === basePart && (restrictions == null || restrictions.indexOf(l.code) !== -1))\n\t\t}\n\t}\n\n\tif (language) {\n\t\tlet customizations: WhitelabelCustomizations | null = null\n\n\t\t// accessing `window` throws an error on desktop, and this file is imported by DesktopMain\n\t\tif (typeof window !== \"undefined\") {\n\t\t\tcustomizations = getWhitelabelCustomizations(window)\n\t\t}\n\n\t\tconst germanCode = customizations?.germanLanguageCode\n\n\t\tif (language.code === \"de\" && germanCode != null) {\n\t\t\treturn downcast(germanCode)\n\t\t} else {\n\t\t\treturn language.code\n\t\t}\n\t} else {\n\t\treturn null\n\t}\n}\n\nfunction getBasePart(code: string): string {\n\tconst indexOfUnderscore = code.indexOf(\"_\")\n\n\tif (indexOfUnderscore > 0) {\n\t\treturn code.substring(0, indexOfUnderscore)\n\t} else {\n\t\treturn code\n\t}\n}\n\nexport function getAvailableLanguageCode(code: string): string {\n\treturn getSubstitutedLanguageCode(code) || \"en\"\n}\n\n/**\n * pt_br -> pt-BR\n * @param code\n */\nexport function languageCodeToTag(code: string): string {\n\tif (code === \"de_sie\") {\n\t\treturn \"de\"\n\t}\n\n\tconst indexOfUnderscore = code.indexOf(\"_\")\n\n\tif (indexOfUnderscore === -1) {\n\t\treturn code\n\t} else {\n\t\tconst [before, after] = code.split(\"_\")\n\t\treturn `${before}-${after.toUpperCase()}`\n\t}\n}\n\nexport const assertTranslation: (id: string) => TranslationKey = downcast\nexport type LanguageViewModelType = LanguageViewModel\nexport const lang: LanguageViewModel = new LanguageViewModel()\n"]}