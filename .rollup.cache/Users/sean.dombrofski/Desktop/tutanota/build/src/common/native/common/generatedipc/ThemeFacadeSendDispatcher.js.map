{"version":3,"file":"ThemeFacadeSendDispatcher.js","sourceRoot":"","sources":["../../../../../../src/common/native/common/generatedipc/ThemeFacadeSendDispatcher.ts"],"names":[],"mappings":"AAAA,iCAAiC;AAOjC,MAAM,OAAO,yBAAyB;IACR;IAA7B,YAA6B,SAA0B;QAA1B,cAAS,GAAT,SAAS,CAAiB;IAAG,CAAC;IAC3D,KAAK,CAAC,SAAS,CAAC,GAAG,IAA0C;QAC5D,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC,aAAa,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC,CAAC,CAAA;IACjF,CAAC;IACD,KAAK,CAAC,SAAS,CAAC,GAAG,IAA0C;QAC5D,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC,aAAa,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC,CAAC,CAAA;IACjF,CAAC;IACD,KAAK,CAAC,kBAAkB,CAAC,GAAG,IAAmD;QAC9E,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC,aAAa,EAAE,oBAAoB,EAAE,GAAG,IAAI,CAAC,CAAC,CAAA;IAC1F,CAAC;IACD,KAAK,CAAC,kBAAkB,CAAC,GAAG,IAAmD;QAC9E,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC,aAAa,EAAE,oBAAoB,EAAE,GAAG,IAAI,CAAC,CAAC,CAAA;IAC1F,CAAC;IACD,KAAK,CAAC,WAAW,CAAC,GAAG,IAA4C;QAChE,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC,aAAa,EAAE,aAAa,EAAE,GAAG,IAAI,CAAC,CAAC,CAAA;IACnF,CAAC;CACD","sourcesContent":["/* generated file, don't edit. */\n\nimport { ThemeFacade } from \"./ThemeFacade.js\"\n\ninterface NativeInterface {\n\tinvokeNative(requestType: string, args: unknown[]): Promise<any>\n}\nexport class ThemeFacadeSendDispatcher implements ThemeFacade {\n\tconstructor(private readonly transport: NativeInterface) {}\n\tasync getThemes(...args: Parameters<ThemeFacade[\"getThemes\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"ThemeFacade\", \"getThemes\", ...args])\n\t}\n\tasync setThemes(...args: Parameters<ThemeFacade[\"setThemes\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"ThemeFacade\", \"setThemes\", ...args])\n\t}\n\tasync getThemePreference(...args: Parameters<ThemeFacade[\"getThemePreference\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"ThemeFacade\", \"getThemePreference\", ...args])\n\t}\n\tasync setThemePreference(...args: Parameters<ThemeFacade[\"setThemePreference\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"ThemeFacade\", \"setThemePreference\", ...args])\n\t}\n\tasync prefersDark(...args: Parameters<ThemeFacade[\"prefersDark\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"ThemeFacade\", \"prefersDark\", ...args])\n\t}\n}\n"]}