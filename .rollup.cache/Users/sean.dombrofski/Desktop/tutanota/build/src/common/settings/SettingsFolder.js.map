{"version":3,"file":"SettingsFolder.js","sourceRoot":"","sources":["../../../../src/common/settings/SettingsFolder.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,gBAAgB,EAAE,MAAM,0BAA0B,CAAA;AAE3D,OAAO,EAAE,gBAAgB,EAAE,MAAM,sBAAsB,CAAA;AAGvD,gBAAgB,EAAE,CAAA;AAIlB,MAAM,OAAO,cAAc;IAMhB;IACA;IACA;IACA;IACA;IATD,GAAG,CAAQ;IAEZ,iBAAiB,CAAe;IAExC,YACU,IAA4B,EAC5B,IAAc,EACd,IAAwB,EACxB,aAA4C,EAC5C,IAAO;QAJP,SAAI,GAAJ,IAAI,CAAwB;QAC5B,SAAI,GAAJ,IAAI,CAAU;QACd,SAAI,GAAJ,IAAI,CAAoB;QACxB,kBAAa,GAAb,aAAa,CAA+B;QAC5C,SAAI,GAAJ,IAAI,CAAG;QAEhB,IAAI,CAAC,GAAG;YACP,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,aAAa,kBAAkB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,aAAa,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,kBAAkB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAA;QAEnJ,IAAI,CAAC,iBAAiB,GAAG,GAAG,EAAE,CAAC,IAAI,CAAA;IACpC,CAAC;IAED,QAAQ;QACP,OAAO,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;IAClC,CAAC;IAED,SAAS;QACR,OAAO,IAAI,CAAC,iBAAiB,EAAE,CAAA;IAChC,CAAC;IAED,mBAAmB,CAAC,gBAA+B;QAClD,IAAI,CAAC,iBAAiB,GAAG,gBAAgB,CAAA;QACzC,OAAO,IAAI,CAAA;IACZ,CAAC;IAED,IAAI,MAAM;QACT,OAAO,OAAO,IAAI,CAAC,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAA;IAC/D,CAAC;IAED,IAAI,EAAE;QACL,OAAO,OAAO,IAAI,CAAC,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAA;IAC3D,CAAC;CACD","sourcesContent":["import type { lazyIcon } from \"../gui/base/Icon.js\"\nimport type { TranslationKey, MaybeTranslation } from \"../misc/LanguageViewModel.js\"\nimport { isSelectedPrefix } from \"../gui/base/NavButton.js\"\nimport type { lazy } from \"@tutao/tutanota-utils\"\nimport { assertMainOrNode } from \"../api/common/Env.js\"\nimport { UpdatableSettingsViewer } from \"./Interfaces.js\"\n\nassertMainOrNode()\n\ntype SettingsFolderPath = string | { folder: string; id: string }\n\nexport class SettingsFolder<T> {\n\treadonly url: string\n\n\tprivate _isVisibleHandler: lazy<boolean>\n\n\tconstructor(\n\t\treadonly name: () => MaybeTranslation,\n\t\treadonly icon: lazyIcon,\n\t\treadonly path: SettingsFolderPath,\n\t\treadonly viewerCreator: lazy<UpdatableSettingsViewer>,\n\t\treadonly data: T,\n\t) {\n\t\tthis.url =\n\t\t\ttypeof path === \"string\" ? `/settings/${encodeURIComponent(path)}` : `/settings/${encodeURIComponent(path.folder)}/${encodeURIComponent(path.id)}`\n\n\t\tthis._isVisibleHandler = () => true\n\t}\n\n\tisActive(): boolean {\n\t\treturn isSelectedPrefix(this.url)\n\t}\n\n\tisVisible(): boolean {\n\t\treturn this._isVisibleHandler()\n\t}\n\n\tsetIsVisibleHandler(isVisibleHandler: lazy<boolean>): this {\n\t\tthis._isVisibleHandler = isVisibleHandler\n\t\treturn this\n\t}\n\n\tget folder(): string | null {\n\t\treturn typeof this.path === \"string\" ? null : this.path.folder\n\t}\n\n\tget id(): string | null {\n\t\treturn typeof this.path === \"string\" ? null : this.path.id\n\t}\n}\n"]}