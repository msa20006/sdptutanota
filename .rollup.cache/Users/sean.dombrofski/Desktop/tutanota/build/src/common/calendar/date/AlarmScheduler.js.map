{"version":3,"file":"AlarmScheduler.js","sourceRoot":"","sources":["../../../../../src/common/calendar/date/AlarmScheduler.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,QAAQ,EAAE,MAAM,uBAAuB,CAAA;AAIhD,OAAO,EAAE,kBAAkB,EAAE,uBAAuB,EAAE,oBAAoB,EAAE,gBAAgB,EAAE,kBAAkB,EAAE,MAAM,oBAAoB,CAAA;AAU5I;;;;;GAKG;AACH,MAAM,OAAO,cAAc;IACjB,uBAAuB,CAAiC;IACxD,UAAU,CAAW;IACrB,aAAa,CAAc;IAEpC,YAAY,YAA0B,EAAE,SAAoB;QAC3D,IAAI,CAAC,aAAa,GAAG,YAAY,CAAA;QACjC,IAAI,CAAC,uBAAuB,GAAG,IAAI,GAAG,EAAE,CAAA;QACxC,IAAI,CAAC,UAAU,GAAG,SAAS,CAAA;IAC5B,CAAC;IAED,aAAa,CAAC,KAAgB,EAAE,SAAoB,EAAE,UAA6B,EAAE,kBAAsC;QAC1H,MAAM,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAA;QAE/C,IAAI,UAAU,EAAE,CAAC;YAChB,IAAI,cAAc,GAAG,gBAAgB,CAAC,UAAU,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAA;YACrE,IAAI,oBAAoB,GAAG,gBAAgB,CAAC,SAAS,CAAC,CAAA;YACtD,MAAM,cAAc,GAAG,uBAAuB,CAC7C,IAAI,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,CAAC,EAClC,cAAc,EACd,KAAK,CAAC,SAAS,EACf,KAAK,CAAC,OAAO,EACb,QAAQ,CAAC,UAAU,CAAC,SAAS,CAAC,EAC9B,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,EAC3B,QAAQ,CAAC,UAAU,CAAC,OAAO,CAAC,2BAAiB,EAC7C,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,EAC3B,UAAU,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,IAAI,CAAC,EAChD,kBAAkB,CAAC,SAAS,CAAC,OAAO,CAAC,EACrC,oBAAoB,CACpB,CAAA;YAED,IAAI,cAAc,EAAE,CAAC;gBACpB,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,eAAe,EAAE,cAAc,CAAC,SAAS,EAAE,GAAG,EAAE;oBAC9E,kBAAkB,CAAC,cAAc,CAAC,SAAS,EAAE,KAAK,CAAC,OAAO,CAAC,CAAA;oBAE3D,2BAA2B;oBAC3B,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,SAAS,EAAE,UAAU,EAAE,kBAAkB,CAAC,CAAA;gBACrE,CAAC,CAAC,CAAA;YACH,CAAC;QACF,CAAC;aAAM,CAAC;YACP,MAAM,UAAU,GAAG,oBAAoB,CAAC,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,OAAO,EAAE,SAAS,CAAC,CAAA;YAElF,IAAI,UAAU,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,EAAE,CAAC;gBACrD,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,eAAe,EAAE,kBAAkB,CAAC,UAAU,EAAE,kBAAkB,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,EAAE,GAAG,EAAE,CAC3H,kBAAkB,CAAC,UAAU,EAAE,KAAK,CAAC,OAAO,CAAC,CAC7C,CAAA;YACF,CAAC;QACF,CAAC;IACF,CAAC;IAED,WAAW,CAAC,eAAuB;QAClC,6BAA6B;QAC7B,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,CAAA;IACxC,CAAC;IAED,iBAAiB,CAAC,eAAuB;QACxC,MAAM,SAAS,GAAG,IAAI,CAAC,uBAAuB,CAAC,GAAG,CAAC,eAAe,CAAC,CAAA;QAEnE,IAAI,SAAS,IAAI,IAAI,EAAE,CAAC;YACvB,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAA;QAC7C,CAAC;IACF,CAAC;IAED,eAAe,CAAC,UAAkB,EAAE,MAAY,EAAE,MAAa;QAC9D,MAAM,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;QAE9D,IAAI,CAAC,uBAAuB,CAAC,GAAG,CAAC,UAAU,EAAE,WAAW,CAAC,CAAA;IAC1D,CAAC;CACD","sourcesContent":["import type { Thunk } from \"@tutao/tutanota-utils\"\nimport { downcast } from \"@tutao/tutanota-utils\"\nimport { EndType } from \"../../../common/api/common/TutanotaConstants.js\"\nimport type { AlarmInfo, RepeatRule } from \"../../../common/api/entities/sys/TypeRefs.js\"\nimport type { ScheduledTimeoutId, Scheduler } from \"../../../common/api/common/utils/Scheduler.js\"\nimport { calculateAlarmTime, findNextAlarmOccurrence, getEventStartByTimes, getValidTimeZone, parseAlarmInterval } from \"./CalendarUtils.js\"\nimport { DateProvider } from \"../../../common/api/common/DateProvider.js\"\n\ntype NotificationSender = (eventTime: Date, summary: string) => void\ntype EventInfo = {\n\tstartTime: Date\n\tendTime: Date\n\tsummary: string\n}\n\n/**\n * knows how to translate a given calendar event with alarms into an\n * actual function call that is executed some time later (and maybe displays a notification).\n *\n * should stay independent of the way the actual notification is sent + rendered\n */\nexport class AlarmScheduler {\n\treadonly _scheduledNotifications: Map<string, ScheduledTimeoutId>\n\treadonly _scheduler: Scheduler\n\treadonly _dateProvider: DateProvider\n\n\tconstructor(dateProvider: DateProvider, scheduler: Scheduler) {\n\t\tthis._dateProvider = dateProvider\n\t\tthis._scheduledNotifications = new Map()\n\t\tthis._scheduler = scheduler\n\t}\n\n\tscheduleAlarm(event: EventInfo, alarmInfo: AlarmInfo, repeatRule: RepeatRule | null, notificationSender: NotificationSender): void {\n\t\tconst localZone = this._dateProvider.timeZone()\n\n\t\tif (repeatRule) {\n\t\t\tlet repeatTimeZone = getValidTimeZone(repeatRule.timeZone, localZone)\n\t\t\tlet calculationLocalZone = getValidTimeZone(localZone)\n\t\t\tconst nextOccurrence = findNextAlarmOccurrence(\n\t\t\t\tnew Date(this._dateProvider.now()),\n\t\t\t\trepeatTimeZone,\n\t\t\t\tevent.startTime,\n\t\t\t\tevent.endTime,\n\t\t\t\tdowncast(repeatRule.frequency),\n\t\t\t\tNumber(repeatRule.interval),\n\t\t\t\tdowncast(repeatRule.endType) || EndType.Never,\n\t\t\t\tNumber(repeatRule.endValue),\n\t\t\t\trepeatRule.excludedDates.map(({ date }) => date),\n\t\t\t\tparseAlarmInterval(alarmInfo.trigger),\n\t\t\t\tcalculationLocalZone,\n\t\t\t)\n\n\t\t\tif (nextOccurrence) {\n\t\t\t\tthis._scheduleAction(alarmInfo.alarmIdentifier, nextOccurrence.alarmTime, () => {\n\t\t\t\t\tnotificationSender(nextOccurrence.eventTime, event.summary)\n\n\t\t\t\t\t// Schedule next occurrence\n\t\t\t\t\tthis.scheduleAlarm(event, alarmInfo, repeatRule, notificationSender)\n\t\t\t\t})\n\t\t\t}\n\t\t} else {\n\t\t\tconst eventStart = getEventStartByTimes(event.startTime, event.endTime, localZone)\n\n\t\t\tif (eventStart.getTime() > this._dateProvider.now()) {\n\t\t\t\tthis._scheduleAction(alarmInfo.alarmIdentifier, calculateAlarmTime(eventStart, parseAlarmInterval(alarmInfo.trigger)), () =>\n\t\t\t\t\tnotificationSender(eventStart, event.summary),\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t}\n\n\tcancelAlarm(alarmIdentifier: string) {\n\t\t// try to cancel single first\n\t\tthis._cancelOccurrence(alarmIdentifier)\n\t}\n\n\t_cancelOccurrence(alarmIdentifier: string) {\n\t\tconst timeoutId = this._scheduledNotifications.get(alarmIdentifier)\n\n\t\tif (timeoutId != null) {\n\t\t\tthis._scheduler.unscheduleTimeout(timeoutId)\n\t\t}\n\t}\n\n\t_scheduleAction(identifier: string, atTime: Date, action: Thunk) {\n\t\tconst scheduledId = this._scheduler.scheduleAt(action, atTime)\n\n\t\tthis._scheduledNotifications.set(identifier, scheduledId)\n\t}\n}\n"]}