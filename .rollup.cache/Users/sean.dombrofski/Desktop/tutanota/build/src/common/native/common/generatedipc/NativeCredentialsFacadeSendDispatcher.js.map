{"version":3,"file":"NativeCredentialsFacadeSendDispatcher.js","sourceRoot":"","sources":["../../../../../../src/common/native/common/generatedipc/NativeCredentialsFacadeSendDispatcher.ts"],"names":[],"mappings":"AAAA,iCAAiC;AAOjC,MAAM,OAAO,qCAAqC;IACpB;IAA7B,YAA6B,SAA0B;QAA1B,cAAS,GAAT,SAAS,CAAiB;IAAG,CAAC;IAC3D,KAAK,CAAC,2BAA2B,CAAC,GAAG,IAAwE;QAC5G,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC,yBAAyB,EAAE,6BAA6B,EAAE,GAAG,IAAI,CAAC,CAAC,CAAA;IAC/G,CAAC;IACD,KAAK,CAAC,OAAO,CAAC,GAAG,IAAoD;QACpE,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC,yBAAyB,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC,CAAC,CAAA;IAC3F,CAAC;IACD,KAAK,CAAC,KAAK,CAAC,GAAG,IAAkD;QAChE,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC,yBAAyB,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,CAAC,CAAA;IACzF,CAAC;IACD,KAAK,CAAC,cAAc,CAAC,GAAG,IAA2D;QAClF,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC,yBAAyB,EAAE,gBAAgB,EAAE,GAAG,IAAI,CAAC,CAAC,CAAA;IAClG,CAAC;IACD,KAAK,CAAC,YAAY,CAAC,GAAG,IAAyD;QAC9E,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC,yBAAyB,EAAE,cAAc,EAAE,GAAG,IAAI,CAAC,CAAC,CAAA;IAChG,CAAC;IACD,KAAK,CAAC,cAAc,CAAC,GAAG,IAA2D;QAClF,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC,yBAAyB,EAAE,gBAAgB,EAAE,GAAG,IAAI,CAAC,CAAC,CAAA;IAClG,CAAC;IACD,KAAK,CAAC,2BAA2B,CAAC,GAAG,IAAwE;QAC5G,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC,yBAAyB,EAAE,6BAA6B,EAAE,GAAG,IAAI,CAAC,CAAC,CAAA;IAC/G,CAAC;IACD,KAAK,CAAC,2BAA2B,CAAC,GAAG,IAAwE;QAC5G,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC,yBAAyB,EAAE,6BAA6B,EAAE,GAAG,IAAI,CAAC,CAAC,CAAA;IAC/G,CAAC;IACD,KAAK,CAAC,KAAK,CAAC,GAAG,IAAkD;QAChE,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC,yBAAyB,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,CAAC,CAAA;IACzF,CAAC;IACD,KAAK,CAAC,0BAA0B,CAAC,GAAG,IAAuE;QAC1G,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC,yBAAyB,EAAE,4BAA4B,EAAE,GAAG,IAAI,CAAC,CAAC,CAAA;IAC9G,CAAC;CACD","sourcesContent":["/* generated file, don't edit. */\n\nimport { NativeCredentialsFacade } from \"./NativeCredentialsFacade.js\"\n\ninterface NativeInterface {\n\tinvokeNative(requestType: string, args: unknown[]): Promise<any>\n}\nexport class NativeCredentialsFacadeSendDispatcher implements NativeCredentialsFacade {\n\tconstructor(private readonly transport: NativeInterface) {}\n\tasync getSupportedEncryptionModes(...args: Parameters<NativeCredentialsFacade[\"getSupportedEncryptionModes\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"NativeCredentialsFacade\", \"getSupportedEncryptionModes\", ...args])\n\t}\n\tasync loadAll(...args: Parameters<NativeCredentialsFacade[\"loadAll\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"NativeCredentialsFacade\", \"loadAll\", ...args])\n\t}\n\tasync store(...args: Parameters<NativeCredentialsFacade[\"store\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"NativeCredentialsFacade\", \"store\", ...args])\n\t}\n\tasync storeEncrypted(...args: Parameters<NativeCredentialsFacade[\"storeEncrypted\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"NativeCredentialsFacade\", \"storeEncrypted\", ...args])\n\t}\n\tasync loadByUserId(...args: Parameters<NativeCredentialsFacade[\"loadByUserId\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"NativeCredentialsFacade\", \"loadByUserId\", ...args])\n\t}\n\tasync deleteByUserId(...args: Parameters<NativeCredentialsFacade[\"deleteByUserId\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"NativeCredentialsFacade\", \"deleteByUserId\", ...args])\n\t}\n\tasync getCredentialEncryptionMode(...args: Parameters<NativeCredentialsFacade[\"getCredentialEncryptionMode\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"NativeCredentialsFacade\", \"getCredentialEncryptionMode\", ...args])\n\t}\n\tasync setCredentialEncryptionMode(...args: Parameters<NativeCredentialsFacade[\"setCredentialEncryptionMode\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"NativeCredentialsFacade\", \"setCredentialEncryptionMode\", ...args])\n\t}\n\tasync clear(...args: Parameters<NativeCredentialsFacade[\"clear\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"NativeCredentialsFacade\", \"clear\", ...args])\n\t}\n\tasync migrateToNativeCredentials(...args: Parameters<NativeCredentialsFacade[\"migrateToNativeCredentials\"]>) {\n\t\treturn this.transport.invokeNative(\"ipc\", [\"NativeCredentialsFacade\", \"migrateToNativeCredentials\", ...args])\n\t}\n}\n"]}