{"version":3,"file":"GroupSharingModel.js","sourceRoot":"","sources":["../../../../../src/common/sharing/model/GroupSharingModel.ts"],"names":[],"mappings":"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","sourcesContent":["import stream from \"mithril/stream\"\nimport Stream from \"mithril/stream\"\nimport { EntityEventsListener, EventController } from \"../../api/main/EventController\"\nimport { EntityClient } from \"../../api/common/EntityClient\"\nimport { getElementId, getEtId, isSameId } from \"../../api/common/utils/EntityUtils\"\nimport type { Group, GroupInfo, GroupMember, SentGroupInvitation } from \"../../api/entities/sys/TypeRefs.js\"\nimport { GroupMemberTypeRef, GroupTypeRef, SentGroupInvitationTypeRef } from \"../../api/entities/sys/TypeRefs.js\"\nimport { OperationType, ShareCapability } from \"../../api/common/TutanotaConstants\"\nimport { NotFoundError } from \"../../api/common/error/RestError\"\nimport { findAndRemove, noOp, ofClass, promiseMap } from \"@tutao/tutanota-utils\"\nimport type { GroupMemberInfo } from \"../GroupUtils\"\nimport { hasCapabilityOnGroup, isSharedGroupOwner, loadGroupInfoForMember, loadGroupMembers } from \"../GroupUtils\"\nimport type { LoginController } from \"../../api/main/LoginController\"\nimport { UserError } from \"../../api/main/UserError\"\nimport type { MailAddress } from \"../../api/entities/tutanota/TypeRefs.js\"\nimport { lang } from \"../../misc/LanguageViewModel\"\nimport { RecipientsNotFoundError } from \"../../api/common/error/RecipientsNotFoundError\"\nimport { ProgrammingError } from \"../../api/common/error/ProgrammingError\"\nimport type { MailFacade } from \"../../api/worker/facades/lazy/MailFacade.js\"\nimport type { ShareFacade } from \"../../api/worker/facades/lazy/ShareFacade.js\"\nimport type { GroupManagementFacade } from \"../../api/worker/facades/lazy/GroupManagementFacade.js\"\nimport { Recipient, RecipientType } from \"../../api/common/recipients/Recipient\"\nimport { RecipientsModel, ResolveMode } from \"../../api/main/RecipientsModel\"\nimport { EntityUpdateData, isUpdateForTypeRef } from \"../../api/common/utils/EntityUpdateUtils.js\"\n\nexport class GroupSharingModel {\n\treadonly info: GroupInfo\n\treadonly group: Group\n\treadonly memberInfos: Array<GroupMemberInfo>\n\treadonly sentGroupInvitations: Array<SentGroupInvitation>\n\teventController: EventController\n\tentityClient: EntityClient\n\tlogins: LoginController\n\t// notifier for outside to do a redraw\n\tonEntityUpdate: Stream<void>\n\t_mailFacade: MailFacade\n\t_shareFacade: ShareFacade\n\t_groupManagementFacade: GroupManagementFacade\n\n\tconstructor(\n\t\tgroupInfo: GroupInfo,\n\t\tgroup: Group,\n\t\tmemberInfos: Array<GroupMemberInfo>,\n\t\tsentGroupInvitations: Array<SentGroupInvitation>,\n\t\teventController: EventController,\n\t\tentityClient: EntityClient,\n\t\tlogins: LoginController,\n\t\tmailFacade: MailFacade,\n\t\tshareFacade: ShareFacade,\n\t\tgroupManagementFacade: GroupManagementFacade,\n\t\tprivate readonly recipientsModel: RecipientsModel,\n\t) {\n\t\tthis.info = groupInfo\n\t\tthis.group = group\n\t\tthis.memberInfos = memberInfos\n\t\tthis.sentGroupInvitations = sentGroupInvitations\n\t\tthis.eventController = eventController\n\t\tthis.entityClient = entityClient\n\t\tthis.logins = logins\n\t\tthis._mailFacade = mailFacade\n\t\tthis._shareFacade = shareFacade\n\t\tthis._groupManagementFacade = groupManagementFacade\n\t\tthis.onEntityUpdate = stream()\n\t\tthis.eventController.addEntityListener(this.onEntityEvents)\n\t}\n\n\tprivate readonly onEntityEvents: EntityEventsListener = (events, id) => this.entityEventsReceived(events, id)\n\n\tstatic newAsync(\n\t\tinfo: GroupInfo,\n\t\teventController: EventController,\n\t\tentityClient: EntityClient,\n\t\tlogins: LoginController,\n\t\tmailFacade: MailFacade,\n\t\tshareFacade: ShareFacade,\n\t\tgroupManagementFacade: GroupManagementFacade,\n\t\trecipientsModel: RecipientsModel,\n\t): Promise<GroupSharingModel> {\n\t\treturn entityClient\n\t\t\t.load(GroupTypeRef, info.group)\n\t\t\t.then((group) =>\n\t\t\t\tPromise.all([entityClient.loadAll(SentGroupInvitationTypeRef, group.invitations), loadGroupMembers(group, entityClient)]).then(\n\t\t\t\t\t([sentGroupInvitations, memberInfos]) =>\n\t\t\t\t\t\tnew GroupSharingModel(\n\t\t\t\t\t\t\tinfo,\n\t\t\t\t\t\t\tgroup,\n\t\t\t\t\t\t\tmemberInfos,\n\t\t\t\t\t\t\tsentGroupInvitations,\n\t\t\t\t\t\t\teventController,\n\t\t\t\t\t\t\tentityClient,\n\t\t\t\t\t\t\tlogins,\n\t\t\t\t\t\t\tmailFacade,\n\t\t\t\t\t\t\tshareFacade,\n\t\t\t\t\t\t\tgroupManagementFacade,\n\t\t\t\t\t\t\trecipientsModel,\n\t\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t)\n\t}\n\n\tdispose() {\n\t\tthis.eventController.removeEntityListener(this.onEntityEvents)\n\t}\n\n\t/**\n\t * Whether or not a given member can be removed from the group by the current user\n\t */\n\tcanRemoveGroupMember(member: GroupMember): boolean {\n\t\treturn (\n\t\t\t(hasCapabilityOnGroup(this.logins.getUserController().user, this.group, ShareCapability.Invite) || this.memberIsSelf(member)) &&\n\t\t\t!isSharedGroupOwner(this.group, member.user)\n\t\t)\n\t}\n\n\tremoveGroupMember(member: GroupMember): Promise<void> {\n\t\treturn this.canRemoveGroupMember(member)\n\t\t\t? this._groupManagementFacade.removeUserFromGroup(member.user, getEtId(this.group))\n\t\t\t: Promise.reject(new ProgrammingError(\"User does not have permission to remove this member from the group\"))\n\t}\n\n\t/**\n\t * Whether or not a given invitation can be cancelled by the current user\n\t * @param group\n\t * @param sentGroupInvitation\n\t * @returns {boolean}\n\t */\n\tcanCancelInvitation(sentGroupInvitation: SentGroupInvitation): boolean {\n\t\treturn (\n\t\t\thasCapabilityOnGroup(this.logins.getUserController().user, this.group, ShareCapability.Invite) ||\n\t\t\tisSharedGroupOwner(this.group, this.logins.getUserController().user._id)\n\t\t)\n\t}\n\n\tmemberIsSelf(member: GroupMember): boolean {\n\t\treturn isSameId(this.logins.getUserController().user._id, member.user)\n\t}\n\n\tcancelInvitation(invitation: SentGroupInvitation): Promise<void> {\n\t\treturn this.canCancelInvitation(invitation) && invitation.receivedInvitation\n\t\t\t? this._shareFacade.rejectOrCancelGroupInvitation(invitation.receivedInvitation)\n\t\t\t: Promise.reject(new Error(\"User does not have permission to cancel this invitation\")) // TODO error type\n\t}\n\n\tasync sendGroupInvitation(sharedGroupInfo: GroupInfo, recipients: Array<Recipient>, capability: ShareCapability): Promise<Array<MailAddress>> {\n\t\tconst externalRecipients: string[] = []\n\t\tfor (let recipient of recipients) {\n\t\t\tconst resolved = await this.recipientsModel.resolve(recipient, ResolveMode.Eager).resolved()\n\t\t\tif (resolved.type !== RecipientType.INTERNAL) {\n\t\t\t\texternalRecipients.push(resolved.address)\n\t\t\t}\n\t\t}\n\t\tif (externalRecipients.length) {\n\t\t\tthrow new UserError(\n\t\t\t\tlang.makeTranslation(\n\t\t\t\t\t\"featureTutanotaOnly_msg\",\n\t\t\t\t\tlang.get(\"featureTutanotaOnly_msg\") + \" \" + lang.get(\"invalidRecipients_msg\") + \"\\n\" + externalRecipients.join(\"\\n\"),\n\t\t\t\t),\n\t\t\t)\n\t\t}\n\n\t\tlet groupInvitationReturn\n\t\ttry {\n\t\t\tgroupInvitationReturn = await this._shareFacade.sendGroupInvitation(\n\t\t\t\tsharedGroupInfo,\n\t\t\t\trecipients.map((r) => r.address),\n\t\t\t\tcapability,\n\t\t\t)\n\t\t} catch (e) {\n\t\t\tif (e instanceof RecipientsNotFoundError) {\n\t\t\t\tthrow new UserError(\n\t\t\t\t\tlang.makeTranslation(\n\t\t\t\t\t\t\"tutanotaAddressDoesNotExist_msg\",\n\t\t\t\t\t\t`${lang.get(\"tutanotaAddressDoesNotExist_msg\")} ${lang.get(\"invalidRecipients_msg\")}\\n${e.message}`,\n\t\t\t\t\t),\n\t\t\t\t)\n\t\t\t} else {\n\t\t\t\tthrow e\n\t\t\t}\n\t\t}\n\n\t\tif (groupInvitationReturn.existingMailAddresses.length > 0 || groupInvitationReturn.invalidMailAddresses.length > 0) {\n\t\t\tconst existingMailAddresses = groupInvitationReturn.existingMailAddresses.map((ma) => ma.address).join(\"\\n\")\n\t\t\tconst invalidMailAddresses = groupInvitationReturn.invalidMailAddresses.map((ma) => ma.address).join(\"\\n\")\n\t\t\tlet msg = \"\"\n\t\t\tmsg += existingMailAddresses.length === 0 ? \"\" : lang.get(\"existingMailAddress_msg\") + \"\\n\" + existingMailAddresses\n\t\t\tmsg += existingMailAddresses.length === 0 && invalidMailAddresses.length === 0 ? \"\" : \"\\n\\n\"\n\t\t\tmsg += invalidMailAddresses.length === 0 ? \"\" : lang.get(\"invalidMailAddress_msg\") + \"\\n\" + invalidMailAddresses\n\t\t\tthrow new UserError(lang.makeTranslation(\"group_invitation_err\", msg))\n\t\t}\n\n\t\treturn groupInvitationReturn.invitedMailAddresses\n\t}\n\n\tentityEventsReceived(updates: ReadonlyArray<EntityUpdateData>, eventOwnerGroupId: Id): Promise<void> {\n\t\treturn promiseMap(updates, (update) => {\n\t\t\tif (!isSameId(eventOwnerGroupId, getEtId(this.group))) {\n\t\t\t\t// ignore events of different group here\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tif (isUpdateForTypeRef(SentGroupInvitationTypeRef, update)) {\n\t\t\t\tif (update.operation === OperationType.CREATE && isSameId(update.instanceListId, this.group.invitations)) {\n\t\t\t\t\treturn this.entityClient\n\t\t\t\t\t\t.load(SentGroupInvitationTypeRef, [update.instanceListId, update.instanceId])\n\t\t\t\t\t\t.then((instance) => {\n\t\t\t\t\t\t\tif (instance) {\n\t\t\t\t\t\t\t\tthis.sentGroupInvitations.push(instance)\n\t\t\t\t\t\t\t\tthis.onEntityUpdate()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(ofClass(NotFoundError, (e) => console.log(\"sent invitation not found\", update)))\n\t\t\t\t}\n\n\t\t\t\tif (update.operation === OperationType.DELETE) {\n\t\t\t\t\tfindAndRemove(this.sentGroupInvitations, (sentGroupInvitation) => isSameId(getElementId(sentGroupInvitation), update.instanceId))\n\t\t\t\t\tthis.onEntityUpdate()\n\t\t\t\t}\n\t\t\t} else if (isUpdateForTypeRef(GroupMemberTypeRef, update)) {\n\t\t\t\tconsole.log(\"update received in share dialog\", update)\n\n\t\t\t\tif (update.operation === OperationType.CREATE && isSameId(update.instanceListId, this.group.members)) {\n\t\t\t\t\treturn this.entityClient\n\t\t\t\t\t\t.load(GroupMemberTypeRef, [update.instanceListId, update.instanceId])\n\t\t\t\t\t\t.then((instance) => {\n\t\t\t\t\t\t\tif (instance) {\n\t\t\t\t\t\t\t\treturn loadGroupInfoForMember(instance, this.entityClient).then((groupMemberInfo) => {\n\t\t\t\t\t\t\t\t\tconsole.log(\"new member\", groupMemberInfo)\n\t\t\t\t\t\t\t\t\tthis.memberInfos.push(groupMemberInfo)\n\t\t\t\t\t\t\t\t\tthis.onEntityUpdate()\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(ofClass(NotFoundError, (e) => console.log(\"group member not found\", update)))\n\t\t\t\t}\n\n\t\t\t\tif (update.operation === OperationType.DELETE) {\n\t\t\t\t\tfindAndRemove(this.memberInfos, (memberInfo) => isSameId(getElementId(memberInfo.member), update.instanceId))\n\t\t\t\t\tthis.onEntityUpdate()\n\t\t\t\t}\n\t\t\t}\n\t\t}).then(noOp)\n\t}\n}\n"]}