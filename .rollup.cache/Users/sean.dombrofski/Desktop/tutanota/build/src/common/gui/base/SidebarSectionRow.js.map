{"version":3,"file":"SidebarSectionRow.js","sourceRoot":"","sources":["../../../../../src/common/gui/base/SidebarSectionRow.ts"],"names":[],"mappings":"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","sourcesContent":["import m, { Children, Component, Vnode } from \"mithril\"\nimport { AllIcons, Icon, IconSize } from \"./Icon\"\nimport { isNavButtonSelected, NavButton, NavButtonAttrs } from \"./NavButton\"\nimport { ClickHandler } from \"./GuiUtils\"\nimport type { TranslationKey, MaybeTranslation } from \"../../misc/LanguageViewModel\"\nimport type { lazy } from \"@tutao/tutanota-utils\"\nimport { stateBgHover } from \"../builtinThemes\"\nimport { client } from \"../../misc/ClientDetector\"\nimport { IconButton, IconButtonAttrs } from \"./IconButton\"\nimport { theme } from \"../theme\"\n\nexport interface SidebarSectionRowAttrs {\n\ticon: AllIcons\n\tlabel: MaybeTranslation\n\tpath: string\n\tonClick: ClickHandler\n\tmoreButton: IconButtonAttrs\n\ticonColor?: string\n\talwaysShowMoreButton?: boolean\n\tisSelectedPrefix?: string | boolean\n\tdisabled?: boolean\n}\n\n/**\n * Selectable navigation row, typically used in the sidebar, like contact list or labels.\n */\nexport class SidebarSectionRow implements Component<SidebarSectionRowAttrs> {\n\tprivate hovered: boolean = false\n\n\tview({ attrs }: Vnode<SidebarSectionRowAttrs>): Children {\n\t\tconst onHover = () => {\n\t\t\tthis.hovered = true\n\t\t}\n\n\t\t// because onblur is fired upon changing folder due to the route change\n\t\t// these functions can be used to handle keyboard navigation\n\t\tconst handleForwardsTab = (event: KeyboardEvent) => {\n\t\t\tif (event.key === \"Tab\" && !event.shiftKey) {\n\t\t\t\tthis.hovered = false\n\t\t\t}\n\t\t}\n\t\tconst handleBackwardsTab = (event: KeyboardEvent) => {\n\t\t\tif (event.key === \"Tab\" && event.shiftKey) this.hovered = false\n\t\t}\n\n\t\tconst navButtonAttrs: NavButtonAttrs = {\n\t\t\tlabel: attrs.label,\n\t\t\thref: () => attrs.path,\n\t\t\tdisableHoverBackground: true,\n\t\t\tclick: attrs.onClick,\n\t\t\tonfocus: onHover,\n\t\t\tonkeydown: handleBackwardsTab,\n\t\t\tisSelectedPrefix: attrs.isSelectedPrefix,\n\t\t\tdisabled: attrs.disabled,\n\t\t}\n\n\t\treturn m(\n\t\t\t\".folder-row.flex.flex-row.mlr-button.border-radius-small.state-bg.border-radius-small\",\n\t\t\t{\n\t\t\t\tstyle: { background: isNavButtonSelected(navButtonAttrs) ? stateBgHover : \"\" },\n\t\t\t\tonmouseenter: onHover,\n\t\t\t\tonmouseleave: () => {\n\t\t\t\t\tthis.hovered = false\n\t\t\t\t},\n\t\t\t},\n\t\t\t[\n\t\t\t\t// we render icon on our own to be able to override the color and to control the padding\n\t\t\t\tm(\n\t\t\t\t\t\".button-height.flex.items-center.plr-button\",\n\t\t\t\t\tm(Icon, {\n\t\t\t\t\t\ticon: attrs.icon,\n\t\t\t\t\t\tsize: IconSize.Medium,\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\tfill: attrs.iconColor ?? (isNavButtonSelected(navButtonAttrs) ? theme.navigation_button_selected : theme.navigation_button),\n\t\t\t\t\t\t},\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t\tm(NavButton, navButtonAttrs),\n\t\t\t\tattrs.alwaysShowMoreButton || (!client.isMobileDevice() && this.hovered)\n\t\t\t\t\t? m(IconButton, {\n\t\t\t\t\t\t\t...attrs.moreButton,\n\t\t\t\t\t\t\tclick: (event, dom) => {\n\t\t\t\t\t\t\t\tattrs.moreButton.click(event, dom)\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tonkeydown: handleForwardsTab,\n\t\t\t\t\t  })\n\t\t\t\t\t: null,\n\t\t\t],\n\t\t)\n\t}\n}\n"]}