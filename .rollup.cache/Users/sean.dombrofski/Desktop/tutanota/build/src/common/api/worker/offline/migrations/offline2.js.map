{"version":3,"file":"offline2.js","sourceRoot":"","sources":["../../../../../../../src/common/api/worker/offline/migrations/offline2.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,QAAQ,EAAyB,kBAAkB,EAAE,MAAM,0BAA0B,CAAA;AAC9F,OAAO,EAAE,yBAAyB,EAAE,MAAM,wCAAwC,CAAA;AAGlF;;;;;GAKG;AACH,MAAM,CAAC,MAAM,QAAQ,GAAqB;IACzC,GAAG,EAAE,SAAS;IACd,OAAO,EAAE,CAAC;IACV,KAAK,CAAC,OAAO,CAAC,OAAuB,EAAE,CAAkB;QACxD,MAAM,kBAAkB,CAAC,yBAAyB,EAAE,OAAO,EAAE,CAAC,QAAQ,CAAC,qBAAqB,EAAE,KAAK,CAAC,CAAC,CAAC,CAAA;IACvG,CAAC;CACD,CAAA","sourcesContent":["import { OfflineStorage } from \"../OfflineStorage.js\"\nimport { SqlCipherFacade } from \"../../../../native/common/generatedipc/SqlCipherFacade.js\"\nimport { addValue, deleteInstancesOfType, migrateAllElements } from \"../StandardMigrations.js\"\nimport { TutanotaPropertiesTypeRef } from \"../../../entities/tutanota/TypeRefs.js\"\nimport { OfflineMigration } from \"../OfflineStorageMigrator.js\"\n\n/**\n * Migration to patch up the broken tutanota-v77 migration.\n *\n * We write default value which might be out of sync with the server but we have an extra check for that where\n * we use this property.\n */\nexport const offline2: OfflineMigration = {\n\tapp: \"offline\",\n\tversion: 2,\n\tasync migrate(storage: OfflineStorage, _: SqlCipherFacade): Promise<void> {\n\t\tawait migrateAllElements(TutanotaPropertiesTypeRef, storage, [addValue(\"defaultLabelCreated\", false)])\n\t},\n}\n"]}