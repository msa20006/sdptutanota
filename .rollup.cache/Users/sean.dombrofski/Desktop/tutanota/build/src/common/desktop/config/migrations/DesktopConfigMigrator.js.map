{"version":3,"file":"DesktopConfigMigrator.js","sourceRoot":"","sources":["../../../../../../src/common/desktop/config/migrations/DesktopConfigMigrator.ts"],"names":[],"mappings":"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","sourcesContent":["import { log } from \"../../DesktopLog\"\n\n/**\n * Should not import them all manually but we need make the whole thing async then.\n */\nimport * as migration0000 from \"./migration-0000\"\nimport * as migration0001 from \"./migration-0001\"\nimport * as migration0002 from \"./migration-0002\"\nimport * as migration0003 from \"./migration-0003\"\nimport * as migration0004 from \"./migration-0004\"\nimport * as migration0005 from \"./migration-0005\"\nimport * as migration0006 from \"./migration-0006\"\nimport * as migration0007 from \"./migration-0007\"\nimport * as migration0008 from \"./migration-0008\"\nimport * as migration0009 from \"./migration-0009\"\n\nimport type { Config, ConfigMigration } from \"../ConfigCommon\"\nimport { DesktopNativeCryptoFacade } from \"../../DesktopNativeCryptoFacade\"\nimport type { DesktopKeyStoreFacade } from \"../../DesktopKeyStoreFacade.js\"\n\nexport type MigrationKind = \"migrateClient\" | \"migrateAdmin\"\nexport type ElectronExports = typeof Electron.CrossProcessExports\n\nexport class DesktopConfigMigrator {\n\treadonly crypto: DesktopNativeCryptoFacade\n\t_keyStoreFacade: DesktopKeyStoreFacade\n\t_electron: ElectronExports\n\n\tconstructor(crypto: DesktopNativeCryptoFacade, keyStoreFacade: DesktopKeyStoreFacade, electron: ElectronExports) {\n\t\tthis.crypto = crypto\n\t\tthis._keyStoreFacade = keyStoreFacade\n\t\tthis._electron = electron\n\t}\n\n\tasync applyMigrations(migrationFunction: MigrationKind, oldConfig: Config): Promise<Config> {\n\t\t// noinspection FallThroughInSwitchStatementJS\n\t\tswitch (oldConfig.desktopConfigVersion) {\n\t\t\tcase undefined:\n\t\t\t\tawait applyMigration(migration0000[migrationFunction], oldConfig)\n\n\t\t\t// no break, fallthrough applies all migrations in sequence\n\t\t\tcase 0:\n\t\t\t\tawait applyMigration(migration0001[migrationFunction], oldConfig)\n\t\t\t// falls through\n\n\t\t\tcase 1:\n\t\t\t\tawait applyMigration(migration0002[migrationFunction], oldConfig)\n\t\t\t// falls through\n\n\t\t\tcase 2:\n\t\t\t\tawait applyMigration((config) => migration0003[migrationFunction](config, this.crypto, this._keyStoreFacade), oldConfig)\n\t\t\t// falls through\n\n\t\t\tcase 3:\n\t\t\t\tawait applyMigration(migration0004[migrationFunction], oldConfig)\n\t\t\t// falls through\n\n\t\t\tcase 4:\n\t\t\t\tawait applyMigration((config) => migration0005[migrationFunction](config, this._electron), oldConfig)\n\t\t\t// falls through\n\n\t\t\tcase 5:\n\t\t\t\tawait applyMigration(migration0006[migrationFunction], oldConfig)\n\t\t\t// falls through\n\n\t\t\tcase 6:\n\t\t\t\tawait applyMigration(migration0007[migrationFunction], oldConfig)\n\t\t\t// falls through\n\n\t\t\tcase 7:\n\t\t\t\tawait applyMigration(migration0008[migrationFunction], oldConfig)\n\t\t\t// falls through\n\n\t\t\tcase 8:\n\t\t\t\tawait applyMigration(migration0009[migrationFunction], oldConfig)\n\t\t\t// falls through\n\t\t\tcase 9:\n\t\t\t\tlog.debug(\"config up to date\")\n\t\t\t\t/* add new migrations as needed */\n\t\t\t\tbreak\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`unknown config version ${String(oldConfig.desktopConfigVersion)}`)\n\t\t}\n\n\t\treturn oldConfig\n\t}\n}\n\n/**\n * @param migration name of the function to use for migration\n * @param config default config to use if oldConfig is invalid\n */\nasync function applyMigration(migration: ConfigMigration, config: Config) {\n\tconst oldVersion = Object.freeze(config.desktopConfigVersion)\n\tawait migration(config)\n\tconst newVersion = config.desktopConfigVersion\n\n\tif (newVersion === undefined || Number(oldVersion) >= Number(newVersion)) {\n\t\tconsole.error(\"config migration did not increment desktopConfigVersion! aborting.\")\n\t\tprocess.exit(1)\n\t}\n}\n"]}