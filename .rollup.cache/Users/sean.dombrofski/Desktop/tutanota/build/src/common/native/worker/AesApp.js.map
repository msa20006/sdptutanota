{"version":3,"file":"AesApp.js","sourceRoot":"","sources":["../../../../../src/common/native/worker/AesApp.ts"],"names":[],"mappings":"AAAA,OAAO,EAAU,cAAc,EAAE,eAAe,EAAc,MAAM,wBAAwB,CAAA;AAK5F,MAAM,OAAO,MAAM;IACW;IAAyD;IAAtF,YAA6B,kBAAsC,EAAmB,MAAkB;QAA3E,uBAAkB,GAAlB,kBAAkB,CAAoB;QAAmB,WAAM,GAAN,MAAM,CAAY;IAAG,CAAC;IAE5G;;;OAGG;IACH,cAAc,CAAC,GAAW,EAAE,OAAgB;QAC3C,MAAM,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,cAAc,CAAC,CAAA;QACzD,MAAM,UAAU,GAAG,eAAe,CAAC,GAAG,CAAC,CAAA;QACvC,OAAO,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,UAAU,EAAE,OAAO,EAAE,EAAE,CAAC,CAAA;IACvE,CAAC;IAED;;;OAGG;IACH,cAAc,CAAC,GAAW,EAAE,OAAgB;QAC3C,MAAM,UAAU,GAAG,eAAe,CAAC,GAAG,CAAC,CAAA;QACvC,OAAO,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,UAAU,EAAE,OAAO,CAAC,CAAA;IACnE,CAAC;CACD","sourcesContent":["import { AesKey, IV_BYTE_LENGTH, keyToUint8Array, Randomizer } from \"@tutao/tutanota-crypto\"\nimport { FileUri } from \"../common/FileApp\"\nimport { NativeCryptoFacade } from \"../common/generatedipc/NativeCryptoFacade\"\nimport { EncryptedFileInfo } from \"../common/generatedipc/EncryptedFileInfo\"\n\nexport class AesApp {\n\tconstructor(private readonly nativeCryptoFacade: NativeCryptoFacade, private readonly random: Randomizer) {}\n\n\t/**\n\t * Encrypts a file with the provided key\n\t * @return Returns the URI of the decrypted file. Resolves to an exception if the encryption failed.\n\t */\n\taesEncryptFile(key: AesKey, fileUrl: FileUri): Promise<EncryptedFileInfo> {\n\t\tconst iv = this.random.generateRandomData(IV_BYTE_LENGTH)\n\t\tconst encodedKey = keyToUint8Array(key)\n\t\treturn this.nativeCryptoFacade.aesEncryptFile(encodedKey, fileUrl, iv)\n\t}\n\n\t/**\n\t * Decrypt bytes with the provided key\n\t * @return Returns the URI of the decrypted file. Resolves to an exception if the encryption failed.\n\t */\n\taesDecryptFile(key: AesKey, fileUrl: FileUri): Promise<FileUri> {\n\t\tconst encodedKey = keyToUint8Array(key)\n\t\treturn this.nativeCryptoFacade.aesDecryptFile(encodedKey, fileUrl)\n\t}\n}\n"]}