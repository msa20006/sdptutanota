{"version":3,"file":"SelectAllCheckbox.js","sourceRoot":"","sources":["../../../../src/common/gui/SelectAllCheckbox.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAE,MAAM,yBAAyB,CAAA;AACvD,OAAO,CAAC,MAAM,SAAS,CAAA;AACvB,OAAO,EAAE,IAAI,EAAE,MAAM,8BAA8B,CAAA;AASnD,MAAM,CAAC,MAAM,iBAAiB,GAAG,aAAa,CAAC,CAAC,KAA6B,EAAE,EAAE;IAChF,OAAO,CAAC,CACP,2CAA2C,EAC3C,EAAE,KAAK,EAAE,KAAK,CAAC,KAAK,EAAE,EACtB,CAAC,CAAC,gBAAgB,EAAE;QACnB,IAAI,EAAE,UAAU;QAChB,aAAa,EAAE,2BAA2B;QAC1C,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,wBAAwB,CAAC;QACzC,iEAAiE;QACjE,OAAO,EAAE,KAAK,CAAC,QAAQ;QACvB,QAAQ,EAAE,CAAC,EAAE,MAAM,EAAS,EAAE,EAAE,CAAC,eAAe,CAAC,KAAK,EAAG,MAA2B,CAAC,OAAO,CAAC;KAC7F,CAAC,CACF,CAAA;AACF,CAAC,CAAC,CAAA;AAEF,SAAS,eAAe,CAAC,KAA6B,EAAE,SAAkB;IACzE,IAAI,SAAS,EAAE,CAAC;QACf,KAAK,CAAC,SAAS,EAAE,CAAA;IAClB,CAAC;SAAM,CAAC;QACP,KAAK,CAAC,UAAU,EAAE,CAAA;IACnB,CAAC;AACF,CAAC","sourcesContent":["import { pureComponent } from \"./base/PureComponent.js\"\nimport m from \"mithril\"\nimport { lang } from \"../misc/LanguageViewModel.js\"\n\nexport interface SelectAllCheckboxAttrs {\n\tstyle?: Record<string, any>\n\tselectAll: () => unknown\n\tselectNone: () => unknown\n\tselected: boolean\n}\n\nexport const SelectAllCheckbox = pureComponent((attrs: SelectAllCheckboxAttrs) => {\n\treturn m(\n\t\t\".flex.items-center.pl-s.mlr.button-height\",\n\t\t{ style: attrs.style },\n\t\tm(\"input.checkbox\", {\n\t\t\ttype: \"checkbox\",\n\t\t\t\"data-testid\": \"cb:selectAllLoaded_action\",\n\t\t\ttitle: lang.get(\"selectAllLoaded_action\"),\n\t\t\t// I'm not sure this is the best condition but it will do for now\n\t\t\tchecked: attrs.selected,\n\t\t\tonchange: ({ target }: Event) => toggleSelectAll(attrs, (target as HTMLInputElement).checked),\n\t\t}),\n\t)\n})\n\nfunction toggleSelectAll(attrs: SelectAllCheckboxAttrs, selectAll: boolean): void {\n\tif (selectAll) {\n\t\tattrs.selectAll()\n\t} else {\n\t\tattrs.selectNone()\n\t}\n}\n"]}