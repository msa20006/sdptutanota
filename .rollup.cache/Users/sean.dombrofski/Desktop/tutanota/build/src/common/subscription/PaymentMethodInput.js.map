{"version":3,"file":"PaymentMethodInput.js","sourceRoot":"","sources":["../../../../src/common/subscription/PaymentMethodInput.ts"],"names":[],"mappings":"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","sourcesContent":["import m, { Children, Vnode } from \"mithril\"\nimport type { TranslationKey } from \"../misc/LanguageViewModel\"\nimport { lang } from \"../misc/LanguageViewModel\"\nimport type { Country } from \"../api/common/CountryList\"\nimport { CountryType } from \"../api/common/CountryList\"\nimport { PaymentData, PaymentMethodType } from \"../api/common/TutanotaConstants\"\nimport { PayPalLogo } from \"../gui/base/icons/Icons\"\nimport { LazyLoaded, noOp, promiseMap } from \"@tutao/tutanota-utils\"\nimport { showProgressDialog } from \"../gui/dialogs/ProgressDialog\"\nimport type { AccountingInfo } from \"../api/entities/sys/TypeRefs.js\"\nimport { AccountingInfoTypeRef } from \"../api/entities/sys/TypeRefs.js\"\nimport { locator } from \"../api/main/CommonLocator\"\nimport { MessageBox } from \"../gui/base/MessageBox.js\"\nimport { px } from \"../gui/size\"\nimport Stream from \"mithril/stream\"\nimport { UsageTest } from \"@tutao/tutanota-usagetests\"\nimport { SelectedSubscriptionOptions } from \"./FeatureListProvider\"\nimport { CCViewModel, SimplifiedCreditCardInput } from \"./SimplifiedCreditCardInput.js\"\nimport { SimplifiedCreditCardViewModel } from \"./SimplifiedCreditCardInputModel.js\"\nimport { isUpdateForTypeRef } from \"../api/common/utils/EntityUpdateUtils.js\"\nimport { EntityEventsListener } from \"../api/main/EventController.js\"\nimport { BaseButton } from \"../gui/base/buttons/BaseButton.js\"\n\n/**\n * Component to display the input fields for a payment method. The selector to switch between payment methods is not included.\n */\nexport class PaymentMethodInput {\n\tprivate readonly ccViewModel: CCViewModel\n\t_payPalAttrs: PaypalAttrs\n\t_selectedCountry: Stream<Country | null>\n\t_selectedPaymentMethod: PaymentMethodType\n\t_subscriptionOptions: SelectedSubscriptionOptions\n\t_accountingInfo: AccountingInfo\n\t_entityEventListener: EntityEventsListener\n\tprivate __paymentPaypalTest?: UsageTest\n\n\tconstructor(\n\t\tsubscriptionOptions: SelectedSubscriptionOptions,\n\t\tselectedCountry: Stream<Country | null>,\n\t\taccountingInfo: AccountingInfo,\n\t\tpayPalRequestUrl: LazyLoaded<string>,\n\t\tdefaultPaymentMethod: PaymentMethodType,\n\t) {\n\t\tthis._selectedCountry = selectedCountry\n\t\tthis._subscriptionOptions = subscriptionOptions\n\t\tthis.ccViewModel = new SimplifiedCreditCardViewModel(lang)\n\t\tthis._accountingInfo = accountingInfo\n\t\tthis._payPalAttrs = {\n\t\t\tpayPalRequestUrl,\n\t\t\taccountingInfo: this._accountingInfo,\n\t\t}\n\t\tthis.__paymentPaypalTest = locator.usageTestController.getTest(\"payment.paypal\")\n\n\t\tthis._entityEventListener = (updates) => {\n\t\t\treturn promiseMap(updates, (update) => {\n\t\t\t\tif (isUpdateForTypeRef(AccountingInfoTypeRef, update)) {\n\t\t\t\t\treturn locator.entityClient.load(AccountingInfoTypeRef, update.instanceId).then((accountingInfo) => {\n\t\t\t\t\t\tthis.__paymentPaypalTest?.getStage(2).complete()\n\t\t\t\t\t\tthis._accountingInfo = accountingInfo\n\t\t\t\t\t\tthis._payPalAttrs.accountingInfo = accountingInfo\n\t\t\t\t\t\tm.redraw()\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}).then(noOp)\n\t\t}\n\n\t\tthis._selectedPaymentMethod = defaultPaymentMethod\n\t}\n\n\toncreate() {\n\t\tlocator.eventController.addEntityListener(this._entityEventListener)\n\t}\n\n\tonremove() {\n\t\tlocator.eventController.removeEntityListener(this._entityEventListener)\n\t}\n\n\tview(): Children {\n\t\tswitch (this._selectedPaymentMethod) {\n\t\t\tcase PaymentMethodType.Invoice:\n\t\t\t\treturn m(\n\t\t\t\t\t\".flex-center\",\n\t\t\t\t\tm(\n\t\t\t\t\t\tMessageBox,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\tmarginTop: px(16),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tthis.isOnAccountAllowed()\n\t\t\t\t\t\t\t? lang.get(\"paymentMethodOnAccount_msg\") + \" \" + lang.get(\"paymentProcessingTime_msg\")\n\t\t\t\t\t\t\t: lang.get(\"paymentMethodNotAvailable_msg\"),\n\t\t\t\t\t),\n\t\t\t\t)\n\t\t\tcase PaymentMethodType.AccountBalance:\n\t\t\t\treturn m(\n\t\t\t\t\t\".flex-center\",\n\t\t\t\t\tm(\n\t\t\t\t\t\tMessageBox,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\tmarginTop: px(16),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tlang.get(\"paymentMethodAccountBalance_msg\"),\n\t\t\t\t\t),\n\t\t\t\t)\n\t\t\tcase PaymentMethodType.Paypal:\n\t\t\t\treturn m(PaypalInput, this._payPalAttrs)\n\t\t\tdefault:\n\t\t\t\treturn m(SimplifiedCreditCardInput, { viewModel: this.ccViewModel as SimplifiedCreditCardViewModel })\n\t\t}\n\t}\n\n\tisOnAccountAllowed(): boolean {\n\t\tconst country = this._selectedCountry()\n\n\t\tif (!country) {\n\t\t\treturn false\n\t\t} else if (this._accountingInfo.paymentMethod === PaymentMethodType.Invoice) {\n\t\t\treturn true\n\t\t} else if (this._subscriptionOptions.businessUse() && country.t !== CountryType.OTHER) {\n\t\t\treturn true\n\t\t} else {\n\t\t\treturn false\n\t\t}\n\t}\n\n\tisPaypalAssigned(): boolean {\n\t\treturn isPaypalAssigned(this._accountingInfo)\n\t}\n\n\tvalidatePaymentData(): TranslationKey | null {\n\t\tif (!this._selectedPaymentMethod) {\n\t\t\treturn \"invoicePaymentMethodInfo_msg\"\n\t\t} else if (this._selectedPaymentMethod === PaymentMethodType.Invoice) {\n\t\t\tif (!this.isOnAccountAllowed()) {\n\t\t\t\treturn \"paymentMethodNotAvailable_msg\"\n\t\t\t} else {\n\t\t\t\treturn null\n\t\t\t}\n\t\t} else if (this._selectedPaymentMethod === PaymentMethodType.Paypal) {\n\t\t\treturn isPaypalAssigned(this._accountingInfo) ? null : \"paymentDataPayPalLogin_msg\"\n\t\t} else if (this._selectedPaymentMethod === PaymentMethodType.CreditCard) {\n\t\t\treturn this.ccViewModel.validateCreditCardPaymentData()\n\t\t} else {\n\t\t\treturn null\n\t\t}\n\t}\n\n\tupdatePaymentMethod(value: PaymentMethodType, paymentData?: PaymentData) {\n\t\tthis._selectedPaymentMethod = value\n\n\t\tif (value === PaymentMethodType.CreditCard) {\n\t\t\tif (paymentData) {\n\t\t\t\tthis.ccViewModel.setCreditCardData(paymentData.creditCardData)\n\t\t\t}\n\n\t\t\tif (this.__paymentPaypalTest) {\n\t\t\t\tthis.__paymentPaypalTest.active = false\n\t\t\t}\n\t\t} else if (value === PaymentMethodType.Paypal) {\n\t\t\tthis._payPalAttrs.payPalRequestUrl.getAsync().then(() => m.redraw())\n\n\t\t\tif (this.__paymentPaypalTest) {\n\t\t\t\tthis.__paymentPaypalTest.active = true\n\t\t\t}\n\n\t\t\tthis.__paymentPaypalTest?.getStage(0).complete()\n\t\t}\n\n\t\tm.redraw()\n\t}\n\n\tgetPaymentData(): PaymentData {\n\t\treturn {\n\t\t\tpaymentMethod: this._selectedPaymentMethod,\n\t\t\tcreditCardData: this._selectedPaymentMethod === PaymentMethodType.CreditCard ? this.ccViewModel.getCreditCardData() : null,\n\t\t}\n\t}\n\n\tgetVisiblePaymentMethods(): Array<{\n\t\tname: string\n\t\tvalue: PaymentMethodType\n\t}> {\n\t\tconst availablePaymentMethods = [\n\t\t\t{\n\t\t\t\tname: lang.get(\"paymentMethodCreditCard_label\"),\n\t\t\t\tvalue: PaymentMethodType.CreditCard,\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"PayPal\",\n\t\t\t\tvalue: PaymentMethodType.Paypal,\n\t\t\t},\n\t\t]\n\n\t\t// show bank transfer in case of business use, even if it is not available for the selected country\n\t\tif (this._subscriptionOptions.businessUse() || this._accountingInfo.paymentMethod === PaymentMethodType.Invoice) {\n\t\t\tavailablePaymentMethods.push({\n\t\t\t\tname: lang.get(\"paymentMethodOnAccount_label\"),\n\t\t\t\tvalue: PaymentMethodType.Invoice,\n\t\t\t})\n\t\t}\n\n\t\t// show account balance only if this is the current payment method\n\t\tif (this._accountingInfo.paymentMethod === PaymentMethodType.AccountBalance) {\n\t\t\tavailablePaymentMethods.push({\n\t\t\t\tname: lang.get(\"paymentMethodAccountBalance_label\"),\n\t\t\t\tvalue: PaymentMethodType.AccountBalance,\n\t\t\t})\n\t\t}\n\n\t\treturn availablePaymentMethods\n\t}\n}\n\ntype PaypalAttrs = {\n\tpayPalRequestUrl: LazyLoaded<string>\n\taccountingInfo: AccountingInfo\n}\n\nclass PaypalInput {\n\tprivate __paymentPaypalTest?: UsageTest\n\n\tconstructor() {\n\t\tthis.__paymentPaypalTest = locator.usageTestController.getTest(\"payment.paypal\")\n\t}\n\n\tview(vnode: Vnode<PaypalAttrs>): Children {\n\t\tlet attrs = vnode.attrs\n\t\treturn [\n\t\t\tm(\n\t\t\t\t\".flex-center\",\n\t\t\t\t{\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\"margin-top\": \"50px\",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tm(BaseButton, {\n\t\t\t\t\tlabel: lang.makeTranslation(\"PayPal\", \"PayPal\"),\n\t\t\t\t\ticon: m(\".payment-logo.flex\", m.trust(PayPalLogo)),\n\t\t\t\t\tclass: \"border border-radius bg-white button-height plr\",\n\t\t\t\t\tonclick: () => {\n\t\t\t\t\t\tthis.__paymentPaypalTest?.getStage(1).complete()\n\t\t\t\t\t\tif (attrs.payPalRequestUrl.isLoaded()) {\n\t\t\t\t\t\t\twindow.open(attrs.payPalRequestUrl.getLoaded())\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tshowProgressDialog(\"payPalRedirect_msg\", attrs.payPalRequestUrl.getAsync()).then((url) => window.open(url))\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t),\n\t\t\tm(\n\t\t\t\t\".small.pt.center\",\n\t\t\t\tisPaypalAssigned(attrs.accountingInfo)\n\t\t\t\t\t? lang.get(\"paymentDataPayPalFinished_msg\", {\n\t\t\t\t\t\t\t\"{accountAddress}\": attrs.accountingInfo.paymentMethodInfo ?? \"\",\n\t\t\t\t\t  })\n\t\t\t\t\t: lang.get(\"paymentDataPayPalLogin_msg\"),\n\t\t\t),\n\t\t]\n\t}\n}\n\nfunction isPaypalAssigned(accountingInfo: AccountingInfo): boolean {\n\treturn accountingInfo.paypalBillingAgreement != null\n}\n"]}