{"version":3,"file":"SimplifiedCreditCardInput.js","sourceRoot":"","sources":["../../../../src/common/subscription/SimplifiedCreditCardInput.ts"],"names":[],"mappings":"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","sourcesContent":["import m, { Children, Component, Vnode } from \"mithril\"\nimport { Autocomplete, TextField } from \"../gui/base/TextField.js\"\nimport { SimplifiedCreditCardViewModel } from \"./SimplifiedCreditCardInputModel.js\"\nimport { lang, TranslationKey } from \"../misc/LanguageViewModel.js\"\nimport { Stage } from \"@tutao/tutanota-usagetests\"\nimport { CreditCard } from \"../api/entities/sys/TypeRefs.js\"\n\nexport type SimplifiedCreditCardAttrs = {\n\tviewModel: SimplifiedCreditCardViewModel\n}\n\nexport interface CCViewModel {\n\tvalidateCreditCardPaymentData(): TranslationKey | null\n\n\tsetCreditCardData(data: CreditCard | null): void\n\n\tgetCreditCardData(): CreditCard\n}\n\n// changing the content (ie grouping) sets selection to the end, this restores it after the next redraw.\nfunction restoreSelection(domInput: HTMLInputElement) {\n\tconst { selectionStart, selectionEnd, selectionDirection } = domInput\n\tconst isAtEnd = domInput.value.length === selectionStart\n\tsetTimeout(() => {\n\t\tconst currentLength = domInput.value.length\n\t\t// we're adding characters, so just re-using the index fails because at the time we set the selection, the string is longer than it was.\n\t\t// this mostly works, but fails in cases where we're adding stuff in the middle of the string.\n\t\tdomInput.setSelectionRange(isAtEnd ? currentLength : selectionStart, isAtEnd ? currentLength : selectionEnd, selectionDirection ?? undefined)\n\t}, 0)\n}\n\nexport class SimplifiedCreditCardInput implements Component<SimplifiedCreditCardAttrs> {\n\tdateFieldLeft: boolean = false\n\tnumberFieldLeft: boolean = false\n\tcvvFieldLeft: boolean = false\n\tccNumberDom: HTMLInputElement | null = null\n\texpDateDom: HTMLInputElement | null = null\n\n\tview(vnode: Vnode<SimplifiedCreditCardAttrs>): Children {\n\t\tlet { viewModel } = vnode.attrs\n\n\t\treturn [\n\t\t\tm(TextField, {\n\t\t\t\tlabel: \"creditCardNumber_label\",\n\t\t\t\thelpLabel: () => this.renderCcNumberHelpLabel(viewModel),\n\t\t\t\tvalue: viewModel.creditCardNumber,\n\t\t\t\toninput: (newValue) => {\n\t\t\t\t\tviewModel.creditCardNumber = newValue\n\t\t\t\t\trestoreSelection(this.ccNumberDom!)\n\t\t\t\t},\n\t\t\t\tonblur: () => (this.numberFieldLeft = true),\n\t\t\t\tautocompleteAs: Autocomplete.ccNumber,\n\t\t\t\tonDomInputCreated: (dom) => (this.ccNumberDom = dom),\n\t\t\t}),\n\t\t\tm(TextField, {\n\t\t\t\tlabel: \"creditCardExpirationDateWithFormat_label\",\n\t\t\t\tvalue: viewModel.expirationDate,\n\t\t\t\t// we only show the hint if the field is not empty and not selected to avoid showing errors while the user is typing.\n\t\t\t\thelpLabel: () => (this.dateFieldLeft ? lang.get(viewModel.getExpirationDateErrorHint() ?? \"emptyString_msg\") : lang.get(\"emptyString_msg\")),\n\t\t\t\tonblur: () => (this.dateFieldLeft = true),\n\t\t\t\toninput: (newValue) => {\n\t\t\t\t\tviewModel.expirationDate = newValue\n\t\t\t\t\trestoreSelection(this.expDateDom!)\n\t\t\t\t},\n\t\t\t\tonDomInputCreated: (dom) => (this.expDateDom = dom),\n\t\t\t\tautocompleteAs: Autocomplete.ccExp,\n\t\t\t}),\n\t\t\tm(TextField, {\n\t\t\t\tlabel: lang.makeTranslation(\"cvv\", viewModel.getCvvLabel()),\n\t\t\t\tvalue: viewModel.cvv,\n\t\t\t\thelpLabel: () => this.renderCvvNumberHelpLabel(viewModel),\n\t\t\t\toninput: (newValue) => (viewModel.cvv = newValue),\n\t\t\t\tonblur: () => (this.cvvFieldLeft = true),\n\t\t\t\tautocompleteAs: Autocomplete.ccCsc,\n\t\t\t}),\n\t\t]\n\t}\n\n\tprivate renderCcNumberHelpLabel(model: SimplifiedCreditCardViewModel): Children {\n\t\tconst hint = model.getCreditCardNumberHint()\n\t\tconst error = model.getCreditCardNumberErrorHint()\n\t\t// we only draw the hint if the number field was entered & exited before\n\t\tif (this.numberFieldLeft) {\n\t\t\tif (hint) {\n\t\t\t\treturn error ? lang.get(\"creditCardHintWithError_msg\", { \"{hint}\": hint, \"{errorText}\": error }) : hint\n\t\t\t} else {\n\t\t\t\treturn error ? error : lang.get(\"emptyString_msg\")\n\t\t\t}\n\t\t} else {\n\t\t\treturn hint ?? lang.get(\"emptyString_msg\")\n\t\t}\n\t}\n\n\tprivate renderCvvNumberHelpLabel(model: SimplifiedCreditCardViewModel): Children {\n\t\tconst cvvHint = model.getCvvHint()\n\t\tconst cvvError = model.getCvvErrorHint()\n\t\tif (this.cvvFieldLeft) {\n\t\t\tif (cvvHint) {\n\t\t\t\treturn cvvError ? lang.get(\"creditCardHintWithError_msg\", { \"{hint}\": cvvHint, \"{errorText}\": cvvError }) : cvvHint\n\t\t\t} else {\n\t\t\t\treturn cvvError ? cvvError : lang.get(\"emptyString_msg\")\n\t\t\t}\n\t\t} else {\n\t\t\treturn cvvHint ?? lang.get(\"emptyString_msg\")\n\t\t}\n\t}\n}\n"]}