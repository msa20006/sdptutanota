{"version":3,"file":"NativePushFacade.js","sourceRoot":"","sources":["../../../../../../src/common/native/common/generatedipc/NativePushFacade.ts"],"names":[],"mappings":"AAAA,iCAAiC","sourcesContent":["/* generated file, don't edit. */\n\nimport { EncryptedAlarmNotification } from \"./EncryptedAlarmNotification.js\"\nimport { ExtendedNotificationMode } from \"./ExtendedNotificationMode.js\"\n/**\n * Push notifications and alarms operations\n */\nexport interface NativePushFacade {\n\tgetPushIdentifier(): Promise<string | null>\n\n\tstorePushIdentifierLocally(\n\t\tidentifier: string,\n\t\tuserId: string,\n\t\tsseOrigin: string,\n\t\tpushIdentifierId: string,\n\t\tpushIdentifierSessionKey: Uint8Array,\n\t): Promise<void>\n\n\tremoveUser(userId: string): Promise<void>\n\n\t/**\n\t * Called at some point after login to initialize push notifications.\n\t */\n\tinitPushNotifications(): Promise<void>\n\n\tclosePushNotifications(addressesArray: ReadonlyArray<string>): Promise<void>\n\n\tscheduleAlarms(alarms: ReadonlyArray<EncryptedAlarmNotification>): Promise<void>\n\n\t/**\n\t * Unschedule and remove alarms belonging to a specific user from the persistent storage\n\t */\n\tinvalidateAlarmsForUser(userId: string): Promise<void>\n\n\tsetExtendedNotificationConfig(userId: string, mode: ExtendedNotificationMode): Promise<void>\n\n\tgetExtendedNotificationConfig(userId: string): Promise<ExtendedNotificationMode>\n\n\t/**\n\t * Set user preference for receiving calendar notifications in the mail app using pushIdentifier since it represents the device of a user.\n\t */\n\tsetReceiveCalendarNotificationConfig(pushIdentifier: string, value: boolean): Promise<void>\n\n\tgetReceiveCalendarNotificationConfig(pushIdentifier: string): Promise<boolean>\n}\n"]}