{"version":3,"file":"SelectableRowContainer.js","sourceRoot":"","sources":["../../../../src/common/gui/SelectableRowContainer.ts"],"names":[],"mappings":"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","sourcesContent":["import m, { ClassComponent, Vnode } from \"mithril\"\nimport { stateBgActive, stateBgHover } from \"./builtinThemes.js\"\nimport { theme } from \"./theme.js\"\nimport { styles } from \"./styles.js\"\nimport { px, size } from \"./size.js\"\nimport { DefaultAnimationTime } from \"./animation/Animations.js\"\nimport { currentNavigationType, PrimaryNavigationType } from \"../../RootView.js\"\n\n/** A function that can adjust the style of the selectable row. */\nexport type SelectableRowSelectedSetter = (selected: boolean, isInMultiselect: boolean) => unknown\n\nexport interface SelectableRowContainerAttrs {\n\t/** This function will be called with a setter for the row style once it's available. */\n\tonSelectedChangeRef?: (changer: SelectableRowSelectedSetter) => unknown\n}\n\nexport class SelectableRowContainer implements ClassComponent<SelectableRowContainerAttrs> {\n\tprivate dom: HTMLElement | null = null\n\tprivate selected: boolean = false\n\tprivate isInMultiselect: boolean = false\n\n\tview({ attrs, children }: Vnode<SelectableRowContainerAttrs>) {\n\t\treturn m(\n\t\t\t\".flex.mb-xs.border-radius.pt-m.pb-m.pl.pr.ml-s\",\n\t\t\t{\n\t\t\t\tstyle: {\n\t\t\t\t\tpaddingTop: \"14px\",\n\t\t\t\t\tpaddingBottom: \"12px\",\n\t\t\t\t\t// this is an adjustment to keep tha columns aligned, space between columns is too big otherwise.\n\t\t\t\t\t// this is an obscure place to put it and ideally should not be done here or should be passed down here.\n\t\t\t\t\tmarginRight: styles.isSingleColumnLayout() ? px(size.hpad_small) : \"0\",\n\t\t\t\t\ttransition: `background 200ms`,\n\t\t\t\t},\n\t\t\t\toncreate: ({ dom }) => {\n\t\t\t\t\tthis.dom = dom as HTMLElement\n\t\t\t\t\tthis.updateDomBg()\n\t\t\t\t\tattrs.onSelectedChangeRef?.((selected, isInMultiselect) => {\n\t\t\t\t\t\tthis.selected = selected\n\t\t\t\t\t\tthis.isInMultiselect = isInMultiselect\n\t\t\t\t\t\tthis.updateDomBg()\n\t\t\t\t\t})\n\t\t\t\t},\n\t\t\t\t// Highlight the row when it is tabbed into\n\t\t\t\tonfocus: () => {\n\t\t\t\t\tif (SelectableRowContainer.isUsingKeyboard()) {\n\t\t\t\t\t\tthis.setBackground(stateBgActive)\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tonblur: () => {\n\t\t\t\t\tif (SelectableRowContainer.isUsingKeyboard()) {\n\t\t\t\t\t\tif (this.selected && !styles.isSingleColumnLayout()) {\n\t\t\t\t\t\t\tthis.setBackground(stateBgHover)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.setBackground(theme.list_bg)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tonpointerdown: () => this.setBackground(stateBgActive),\n\t\t\t\tonpointerup: this.updateDomBg,\n\t\t\t\tonpointercancel: this.updateDomBg,\n\t\t\t\tonpointerleave: this.updateDomBg,\n\t\t\t},\n\t\t\tchildren,\n\t\t)\n\t}\n\n\tprivate setBackground(color: string) {\n\t\tif (this.dom) this.dom.style.backgroundColor = color\n\t}\n\n\tprivate static isUsingKeyboard() {\n\t\treturn currentNavigationType === PrimaryNavigationType.Keyboard\n\t}\n\n\tprivate updateDomBg = () => {\n\t\tconst isUsingKeyboard = SelectableRowContainer.isUsingKeyboard()\n\t\t// In the single column view, a row may be 'selected' by the URL still linking to a specific mail\n\t\t// So do not highlight in that case but in just multiselect mode and keyboard navigation\n\t\tconst highlight = styles.isSingleColumnLayout() ? (this.isInMultiselect || isUsingKeyboard) && this.selected : this.selected\n\t\tthis.setBackground(highlight ? stateBgHover : theme.list_bg)\n\t}\n}\n\nexport function setVisibility(dom: HTMLElement, visible: boolean) {\n\tdom.style.display = visible ? \"\" : \"none\"\n}\n\nexport function checkboxOpacity(dom: HTMLInputElement, selected: boolean) {\n\tif (selected) {\n\t\tdom.classList.remove(\"list-checkbox\")\n\t} else {\n\t\tdom.classList.add(\"list-checkbox\")\n\t}\n}\n\nexport function shouldAlwaysShowMultiselectCheckbox() {\n\treturn !styles.isUsingBottomNavigation()\n}\n\n// delay by 2 frames roughly so that the browser has time to do heavy stuff with layout\nexport const selectableRowAnimParams: KeyframeAnimationOptions = { duration: DefaultAnimationTime, easing: \"ease-in-out\", fill: \"forwards\", delay: 36 }\nexport const scaleXHide = \"scaleX(0)\"\nexport const scaleXShow = \"scaleX(1)\"\n"]}