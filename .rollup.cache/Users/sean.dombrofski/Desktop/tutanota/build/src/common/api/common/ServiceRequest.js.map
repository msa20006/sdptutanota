{"version":3,"file":"ServiceRequest.js","sourceRoot":"","sources":["../../../../../src/common/api/common/ServiceRequest.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,gBAAgB,EAAE,MAAM,UAAU,CAAA;AAK3C,gBAAgB,EAAE,CAAA","sourcesContent":["import { TypeRef } from \"@tutao/tutanota-utils\"\nimport { assertMainOrNode } from \"./Env.js\"\nimport type { Entity } from \"./EntityTypes.js\"\nimport { Aes128Key, AesKey } from \"@tutao/tutanota-crypto\"\nimport { SuspensionBehavior } from \"../worker/rest/RestClient\"\n\nassertMainOrNode()\n\nexport type MethodDefinition = {\n\tdata: TypeRef<Entity> | null\n\treturn: TypeRef<Entity> | null\n}\n\nexport interface ServiceDefinition {\n\tapp: string\n\tname: string\n}\n\nexport interface GetService extends ServiceDefinition {\n\tget: MethodDefinition\n}\n\nexport interface PostService extends ServiceDefinition {\n\tpost: MethodDefinition\n}\n\nexport interface PutService extends ServiceDefinition {\n\tput: MethodDefinition\n}\n\nexport interface DeleteService extends ServiceDefinition {\n\tdelete: MethodDefinition\n}\n\nexport type ParamTypeFromRef<TR extends TypeRef<Entity> | null> = TR extends TypeRef<infer T> ? T : null\n\nexport type ReturnTypeFromRef<TR extends TypeRef<Entity> | null> = TR extends TypeRef<infer T> ? T : undefined\n\nexport interface IServiceExecutor {\n\tget<S extends GetService>(service: S, data: ParamTypeFromRef<S[\"get\"][\"data\"]>, params?: ExtraServiceParams): Promise<ReturnTypeFromRef<S[\"get\"][\"return\"]>>\n\n\tpost<S extends PostService>(\n\t\tservice: S,\n\t\tdata: ParamTypeFromRef<S[\"post\"][\"data\"]>,\n\t\tparams?: ExtraServiceParams,\n\t): Promise<ReturnTypeFromRef<S[\"post\"][\"return\"]>>\n\n\tput<S extends PutService>(service: S, data: ParamTypeFromRef<S[\"put\"][\"data\"]>, params?: ExtraServiceParams): Promise<ReturnTypeFromRef<S[\"put\"][\"return\"]>>\n\n\tdelete<S extends DeleteService>(\n\t\tservice: S,\n\t\tdata: ParamTypeFromRef<S[\"delete\"][\"data\"]>,\n\t\tparams?: ExtraServiceParams,\n\t): Promise<ReturnTypeFromRef<S[\"delete\"][\"return\"]>>\n}\n\nexport interface ExtraServiceParams {\n\tqueryParams?: Dict\n\tsessionKey?: AesKey\n\textraHeaders?: Dict\n\tsuspensionBehavior?: SuspensionBehavior\n\t/** override origin for the request */\n\tbaseUrl?: string\n}\n"]}