{"version":3,"file":"CredentialRemovalHandler.js","sourceRoot":"","sources":["../../../../src/common/login/CredentialRemovalHandler.ts"],"names":[],"mappings":"AAGA,OAAO,EAAE,6BAA6B,EAAE,MAAM,mDAAmD,CAAA;AAMjG,MAAM,OAAO,4BAA4B;IACxC,KAAK,CAAC,oBAAoB,CAAC,CAAkB,IAAkB,CAAC;CAChE;AAED,MAAM,OAAO,4BAA4B;IAEtB;IACA;IACA;IAHlB,YACkB,OAA6B,EAC7B,YAAmC,EACnC,mCAAqF;QAFrF,YAAO,GAAP,OAAO,CAAsB;QAC7B,iBAAY,GAAZ,YAAY,CAAuB;QACnC,wCAAmC,GAAnC,mCAAmC,CAAkD;IACpG,CAAC;IAEJ,KAAK,CAAC,oBAAoB,CAAC,EAAE,KAAK,EAAE,MAAM,EAAmB;QAC5D,MAAM,IAAI,CAAC,OAAO,CAAC,uBAAuB,CAAC,MAAM,CAAC,CAAA;QAClD,IAAI,CAAC;YACJ,MAAM,IAAI,CAAC,OAAO,CAAC,2BAA2B,CAAC,MAAM,CAAC,CAAA;QACvD,CAAC;QAAC,OAAO,CAAC,EAAE,CAAC;YACZ,IAAI,CAAC,YAAY,6BAA6B,EAAE,CAAC;gBAChD,OAAO,CAAC,IAAI,CAAC,6BAA6B,EAAE,CAAC,CAAC,CAAA;YAC/C,CAAC;iBAAM,CAAC;gBACP,MAAM,CAAC,CAAA;YACR,CAAC;QACF,CAAC;QACD,MAAM,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC,CAAA;QAEtC,MAAM,IAAI,CAAC,mCAAmC,CAAC,KAAK,EAAE,MAAM,CAAC,CAAA;IAC9D,CAAC;CACD","sourcesContent":["import { NativePushServiceApp } from \"../native/main/NativePushServiceApp.js\"\nimport { ConfigurationDatabase } from \"../api/worker/facades/lazy/ConfigurationDatabase.js\"\nimport { CredentialsInfo } from \"../native/common/generatedipc/CredentialsInfo.js\"\nimport { DeviceStorageUnavailableError } from \"../api/common/error/DeviceStorageUnavailableError\"\n\nexport interface CredentialRemovalHandler {\n\tonCredentialsRemoved(credentialInfo: CredentialsInfo): Promise<void>\n}\n\nexport class NoopCredentialRemovalHandler implements CredentialRemovalHandler {\n\tasync onCredentialsRemoved(_: CredentialsInfo): Promise<void> {}\n}\n\nexport class AppsCredentialRemovalHandler implements CredentialRemovalHandler {\n\tconstructor(\n\t\tprivate readonly pushApp: NativePushServiceApp,\n\t\tprivate readonly configFacade: ConfigurationDatabase,\n\t\tprivate readonly appSpecificCredentialRemovalActions: (login: string, userId: string) => Promise<void>,\n\t) {}\n\n\tasync onCredentialsRemoved({ login, userId }: CredentialsInfo) {\n\t\tawait this.pushApp.invalidateAlarmsForUser(userId)\n\t\ttry {\n\t\t\tawait this.pushApp.removeUserFromNotifications(userId)\n\t\t} catch (e) {\n\t\t\tif (e instanceof DeviceStorageUnavailableError) {\n\t\t\t\tconsole.warn(\"Could not remove SSE data: \", e)\n\t\t\t} else {\n\t\t\t\tthrow e\n\t\t\t}\n\t\t}\n\t\tawait this.configFacade.delete(userId)\n\n\t\tawait this.appSpecificCredentialRemovalActions(login, userId)\n\t}\n}\n"]}