{"version":3,"file":"ClipboardUtils.js","sourceRoot":"","sources":["../../../../src/common/misc/ClipboardUtils.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,kBAAkB,CAAA;AAEzC,SAAS,uBAAuB,CAAC,IAAY;IAC5C,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;QACtC,MAAM,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,CAAA;QACnD,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAA;QACrB,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAA;QAC1C,QAAQ,CAAC,KAAK,EAAE,CAAA;QAChB,QAAQ,CAAC,MAAM,EAAE,CAAA;QAEjB,IAAI,CAAC;YACJ,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC,CAAA;QAC7B,CAAC;QAAC,OAAO,GAAG,EAAE,CAAC;YACd,MAAM,CAAC,sBAAsB,CAAC,CAAA;QAC/B,CAAC;QAED,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAA;QAC1C,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAA;QACvC,OAAO,EAAE,CAAA;IACV,CAAC,CAAC,CAAA;AACH,CAAC;AAED,SAAS,kBAAkB,CAAC,IAAY;IACvC,MAAM,EAAE,GAAG,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,CAAA;IAC7C,EAAE,CAAC,KAAK,GAAG,IAAI,CAAA;IACf,EAAE,CAAC,eAAe,GAAG,MAAM,CAAA;IAC3B,EAAE,CAAC,QAAQ,GAAG,IAAI,CAAA;IAClB,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAA;IACpC,MAAM,KAAK,GAAG,QAAQ,CAAC,WAAW,EAAE,CAAA;IACpC,KAAK,CAAC,kBAAkB,CAAC,EAAE,CAAC,CAAA;IAC5B,MAAM,CAAC,GAAG,MAAM,CAAC,YAAY,EAAE,CAAA;IAC/B,CAAC,EAAE,eAAe,EAAE,CAAA;IACpB,CAAC,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAA;IAClB,EAAE,CAAC,iBAAiB,CAAC,CAAC,EAAE,MAAM,CAAC,CAAA,CAAC,oEAAoE;IAEpG,MAAM,CAAC,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC,CAAA;IACnC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAA;AACrC,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,eAAe,CAAC,IAAY;IACjD,IAAI,CAAC;QACJ,MAAM,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,CAAA;IAC1C,CAAC;IAAC,MAAM,CAAC;QACR,OAAO,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAA;QAE3C,IAAI,MAAM,CAAC,KAAK,EAAE,EAAE,CAAC;YACpB,OAAO,kBAAkB,CAAC,IAAI,CAAC,CAAA;QAChC,CAAC;aAAM,CAAC;YACP,OAAO,uBAAuB,CAAC,IAAI,CAAC,CAAA;QACrC,CAAC;IACF,CAAC;AACF,CAAC","sourcesContent":["import { client } from \"./ClientDetector\"\n\nfunction fallbackCopyToClipboard(text: string): Promise<void> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst textArea = document.createElement(\"textarea\")\n\t\ttextArea.value = text\n\t\twindow.document.body.appendChild(textArea)\n\t\ttextArea.focus()\n\t\ttextArea.select()\n\n\t\ttry {\n\t\t\tdocument.execCommand(\"copy\")\n\t\t} catch (err) {\n\t\t\treject(\"fallback copy failed\")\n\t\t}\n\n\t\twindow.document.body.removeChild(textArea)\n\t\tconsole.log(\"fallback copy successful\")\n\t\tresolve()\n\t})\n}\n\nfunction iosCopyToClipboard(text: string) {\n\tconst el = document.createElement(\"textarea\")\n\tel.value = text\n\tel.contentEditable = \"true\"\n\tel.readOnly = true\n\twindow.document.body.appendChild(el)\n\tconst range = document.createRange()\n\trange.selectNodeContents(el)\n\tconst s = window.getSelection()\n\ts?.removeAllRanges()\n\ts?.addRange(range)\n\tel.setSelectionRange(0, 999999) // A big number, to cover anything that could be inside the element.\n\n\twindow.document.execCommand(\"copy\")\n\twindow.document.body.removeChild(el)\n}\n\nexport async function copyToClipboard(text: string): Promise<void> {\n\ttry {\n\t\tawait navigator.clipboard.writeText(text)\n\t} catch {\n\t\tconsole.log(\"copy failed, trying fallback\")\n\n\t\tif (client.isIos()) {\n\t\t\treturn iosCopyToClipboard(text)\n\t\t} else {\n\t\t\treturn fallbackCopyToClipboard(text)\n\t\t}\n\t}\n}\n"]}