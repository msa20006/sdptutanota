{"version":3,"file":"ParserCombinator.js","sourceRoot":"","sources":["../../../../../src/common/misc/parsing/ParserCombinator.ts"],"names":[],"mappings":"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","sourcesContent":["// @bundleInto:common-min\n\nimport { downcast } from \"@tutao/tutanota-utils\"\nimport { TutanotaError } from \"@tutao/tutanota-error\"\n\nexport type Parser<T> = (arg0: StringIterator) => T\n\nexport class ParserError extends TutanotaError {\n\tfilename: string | null\n\n\tconstructor(message: string, filename?: string) {\n\t\tsuper(\"ParserError\", message)\n\t\tthis.filename = filename ?? null\n\t}\n}\n\nexport const combineParsers: (<A, B>(arg0: Parser<A>, arg1: Parser<B>) => Parser<[A, B]>) &\n\t(<A, B, C>(arg0: Parser<A>, arg1: Parser<B>, arg2: Parser<C>) => Parser<[A, B, C]>) &\n\t(<A, B, C, D>(arg0: Parser<A>, arg1: Parser<B>, arg2: Parser<C>, arg3: Parser<D>) => Parser<[A, B, C, D]>) &\n\t(<A, B, C, D, E>(arg0: Parser<A>, arg1: Parser<B>, arg2: Parser<C>, arg3: Parser<D>, arg4: Parser<E>) => Parser<[A, B, C, D, E]>) = downcast(\n\t(...parsers: any[]) =>\n\t\t(iterator: StringIterator) =>\n\t\t\tparsers.map((p) => p(iterator)),\n)\n\nexport function makeCharacterParser(character: string): Parser<string> {\n\treturn (iterator: StringIterator) => {\n\t\tlet value = iterator.peek()\n\n\t\tif (value === character) {\n\t\t\titerator.next()\n\t\t\treturn value\n\t\t}\n\n\t\tconst sliceStart = Math.max(iterator.position - 10, 0)\n\t\tconst sliceEnd = Math.min(iterator.position + 10, iterator.iteratee.length - 1)\n\t\tthrow new ParserError(`expected character \"${character}\" got \"${value}\" near ${iterator.iteratee.slice(sliceStart, sliceEnd)}`)\n\t}\n}\n\nexport function makeNotCharacterParser(character: string): Parser<string> {\n\treturn (iterator: StringIterator) => {\n\t\tlet value = iterator.peek()\n\n\t\tif (value && value !== character) {\n\t\t\titerator.next()\n\t\t\treturn value\n\t\t}\n\n\t\tconst sliceStart = Math.max(iterator.position - 10, 0)\n\t\tconst sliceEnd = Math.min(iterator.position + 10, iterator.iteratee.length - 1)\n\t\tthrow new ParserError(`expected character \"${character}\" got \"${value}\" near ${iterator.iteratee.slice(sliceStart, sliceEnd)}`)\n\t}\n}\n\nexport function makeZeroOrMoreParser<T>(anotherParser: Parser<T>): Parser<Array<T>> {\n\treturn (iterator: StringIterator) => {\n\t\tconst result: T[] = []\n\n\t\ttry {\n\t\t\tlet parseResult = anotherParser(iterator)\n\n\t\t\twhile (true) {\n\t\t\t\tresult.push(parseResult)\n\t\t\t\tparseResult = anotherParser(iterator)\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t/* empty */\n\t\t}\n\n\t\treturn result\n\t}\n}\n\nexport function mapParser<T, R>(parser: Parser<T>, mapper: (arg0: T) => R): Parser<R> {\n\treturn (iterator: StringIterator) => {\n\t\treturn mapper(parser(iterator))\n\t}\n}\n\nexport function makeOneOrMoreParser<T>(parser: Parser<T>): Parser<Array<T>> {\n\treturn mapParser(makeZeroOrMoreParser(parser), (value: Array<T>) => {\n\t\tif (value.length === 0) {\n\t\t\tthrow new ParserError(\"Expected at least one value, got none\")\n\t\t}\n\n\t\treturn value\n\t})\n}\n\nexport function maybeParse<T>(parser: Parser<T>): Parser<T | null> {\n\treturn (iterator) => {\n\t\tconst iteratorPosition = iterator.position\n\n\t\ttry {\n\t\t\treturn parser(iterator)\n\t\t} catch (e) {\n\t\t\tif (e instanceof ParserError) {\n\t\t\t\titerator.position = iteratorPosition\n\t\t\t}\n\t\t\treturn null\n\t\t}\n\t}\n}\n\nexport function makeSeparatedByParser<S, T>(separatorParser: Parser<S>, valueParser: Parser<T>): Parser<Array<T>> {\n\treturn (iterator) => {\n\t\tconst result: T[] = []\n\t\tresult.push(valueParser(iterator))\n\n\t\twhile (true) {\n\t\t\ttry {\n\t\t\t\tseparatorParser(iterator)\n\t\t\t} catch (e) {\n\t\t\t\tbreak\n\t\t\t}\n\n\t\t\tresult.push(valueParser(iterator))\n\t\t}\n\n\t\treturn result\n\t}\n}\n\nexport function makeEitherParser<A, B>(parserA: Parser<A>, parserB: Parser<B>): Parser<A | B> {\n\treturn (iterator) => {\n\t\tconst iteratorPosition = iterator.position\n\n\t\ttry {\n\t\t\treturn parserA(iterator)\n\t\t} catch (e) {\n\t\t\tif (e instanceof ParserError) {\n\t\t\t\titerator.position = iteratorPosition\n\t\t\t\treturn parserB(iterator)\n\t\t\t}\n\n\t\t\tthrow e\n\t\t}\n\t}\n}\n\nexport function makeOneOfCharactersParser(allowed: Array<string>): Parser<string> {\n\treturn (iterator: StringIterator) => {\n\t\tconst value = iterator.peek()\n\n\t\tif (value && allowed.includes(value)) {\n\t\t\titerator.next()\n\t\t\treturn value\n\t\t}\n\n\t\tthrow new ParserError(`Expected one of ${allowed.map((c) => `\"${c}\"`).join(\", \")}, but got \"${value}\\n${context(iterator, iterator.position, 10)}\"`)\n\t}\n}\n\nexport function makeNotOneOfCharactersParser(notAllowed: Array<string>): Parser<string> {\n\treturn (iterator: StringIterator) => {\n\t\tconst value = iterator.peek()\n\n\t\tif (typeof value !== \"string\") {\n\t\t\tthrow new ParserError(\"unexpected end of input\")\n\t\t}\n\n\t\tif (!notAllowed.includes(value)) {\n\t\t\titerator.next()\n\t\t\treturn value\n\t\t}\n\n\t\tthrow new ParserError(`Expected none of ${notAllowed.map((c) => `\"${c}\"`).join(\", \")}, but got \"${value}\"\\n${context(iterator, iterator.position, 10)}`)\n\t}\n}\n\nexport const numberParser: Parser<number> = mapParser(\n\tmakeOneOrMoreParser(makeOneOfCharactersParser([\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"])),\n\t(values) => parseInt(values.join(\"\"), 10),\n)\n\nexport class StringIterator {\n\titeratee: string\n\tposition: number = -1\n\n\tconstructor(iteratee: string) {\n\t\tthis.iteratee = iteratee\n\t}\n\n\tnext(): IteratorResult<string> {\n\t\tconst value = this.iteratee[++this.position]\n\t\tconst done: boolean = this.position >= this.iteratee.length\n\t\treturn done\n\t\t\t? {\n\t\t\t\t\tdone: true,\n\t\t\t\t\tvalue: undefined,\n\t\t\t  }\n\t\t\t: {\n\t\t\t\t\tdone: false,\n\t\t\t\t\tvalue,\n\t\t\t  }\n\t}\n\n\tpeek(): string | null {\n\t\treturn this.iteratee[this.position + 1] ?? null\n\t}\n}\n\nfunction context(iterator: StringIterator, contextCentre: number, contextRadius: number = 10): string {\n\tconst sliceStart = Math.max(contextCentre - contextRadius, 0)\n\tconst sliceEnd = Math.min(contextCentre + contextRadius, iterator.iteratee.length - 1)\n\tconst sliceLength = sliceEnd - sliceStart\n\tconst actualPosition = contextCentre - (2 * contextRadius - sliceLength)\n\treturn iterator.iteratee.slice(sliceStart, sliceEnd)\n}\n"]}