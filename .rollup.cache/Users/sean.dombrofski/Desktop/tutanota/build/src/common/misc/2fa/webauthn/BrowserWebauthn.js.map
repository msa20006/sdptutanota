{"version":3,"file":"BrowserWebauthn.js","sourceRoot":"","sources":["../../../../../../src/common/misc/2fa/webauthn/BrowserWebauthn.ts"],"names":[],"mappings":"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","sourcesContent":["import { COSEAlgorithmIdentifier } from \"./WebauthnTypes.js\"\nimport { ProgrammingError } from \"../../../api/common/error/ProgrammingError.js\"\nimport { isApp } from \"../../../api/common/Env.js\"\nimport { WebAuthnFacade } from \"../../../native/common/generatedipc/WebAuthnFacade.js\"\nimport { stringToUtf8Uint8Array } from \"@tutao/tutanota-utils\"\nimport { CancelledError } from \"../../../api/common/error/CancelledError.js\"\nimport { WebauthnError } from \"../../../api/common/error/WebauthnError.js\"\nimport { WebAuthnRegistrationChallenge } from \"../../../native/common/generatedipc/WebAuthnRegistrationChallenge.js\"\nimport { WebAuthnRegistrationResult } from \"../../../native/common/generatedipc/WebAuthnRegistrationResult.js\"\nimport { WebAuthnSignChallenge } from \"../../../native/common/generatedipc/WebAuthnSignChallenge.js\"\nimport { WebAuthnSignResult } from \"../../../native/common/generatedipc/WebAuthnSignResult.js\"\n\nconst WEBAUTHN_TIMEOUT_MS = 60000\n\n/** An actual webauthn implementation in browser. */\nexport class BrowserWebauthn implements WebAuthnFacade {\n\t/**\n\t * Relying Party Identifier\n\t * see https://www.w3.org/TR/webauthn-2/#public-key-credential-source-rpid\n\t */\n\tprivate readonly rpId: string\n\t/** Backward-compatible identifier for the legacy U2F API */\n\tprivate readonly appId: string\n\tprivate currentOperationSignal: AbortController | null = null\n\n\tconstructor(private readonly api: CredentialsContainer, domainConfig: DomainConfig) {\n\t\tthis.rpId = domainConfig.webauthnRpId\n\t\tthis.appId = domainConfig.u2fAppId\n\t}\n\n\tasync canAttemptChallengeForRpId(rpId: string): Promise<boolean> {\n\t\treturn rpId === this.rpId\n\t}\n\n\tasync canAttemptChallengeForU2FAppId(appId: string): Promise<boolean> {\n\t\treturn this.appId === appId\n\t}\n\n\t/**\n\t * test whether hardware key second factors are supported for this client\n\t */\n\tasync isSupported(): Promise<boolean> {\n\t\treturn (\n\t\t\t!isApp() &&\n\t\t\tthis.api != null &&\n\t\t\t// @ts-ignore see polyfill.js\n\t\t\t// We just stub BigInt in order to import cborg without issues but we can't actually use it\n\t\t\t!BigInt.polyfilled\n\t\t)\n\t}\n\n\tasync register({ challenge, userId, name, displayName }: WebAuthnRegistrationChallenge): Promise<WebAuthnRegistrationResult> {\n\t\tconst publicKeyCredentialCreationOptions: PublicKeyCredentialCreationOptions = {\n\t\t\tchallenge,\n\t\t\trp: {\n\t\t\t\tname: \"Tutanota\",\n\t\t\t\tid: this.rpId,\n\t\t\t},\n\t\t\tuser: {\n\t\t\t\tid: stringToUtf8Uint8Array(userId),\n\t\t\t\tname,\n\t\t\t\tdisplayName,\n\t\t\t},\n\t\t\tpubKeyCredParams: [\n\t\t\t\t{\n\t\t\t\t\talg: COSEAlgorithmIdentifier.ES256,\n\t\t\t\t\ttype: \"public-key\",\n\t\t\t\t},\n\t\t\t],\n\t\t\tauthenticatorSelection: {\n\t\t\t\tauthenticatorAttachment: \"cross-platform\",\n\t\t\t\tuserVerification: \"discouraged\",\n\t\t\t},\n\t\t\ttimeout: WEBAUTHN_TIMEOUT_MS,\n\t\t\tattestation: \"none\",\n\t\t}\n\t\tthis.currentOperationSignal = new AbortController()\n\t\tconst credential = (await this.api.create({\n\t\t\tpublicKey: publicKeyCredentialCreationOptions,\n\t\t\tsignal: this.currentOperationSignal.signal,\n\t\t})) as PublicKeyCredential\n\n\t\treturn {\n\t\t\trpId: this.rpId,\n\t\t\trawId: new Uint8Array(credential.rawId),\n\t\t\tattestationObject: new Uint8Array((credential.response as AuthenticatorAttestationResponse).attestationObject),\n\t\t}\n\t}\n\n\tasync sign({ challenge, keys }: WebAuthnSignChallenge): Promise<WebAuthnSignResult> {\n\t\tconst allowCredentials: PublicKeyCredentialDescriptor[] = keys.map((key) => {\n\t\t\treturn {\n\t\t\t\tid: key.id,\n\t\t\t\ttype: \"public-key\",\n\t\t\t}\n\t\t})\n\t\tconst publicKeyCredentialRequestOptions: PublicKeyCredentialRequestOptions = {\n\t\t\tchallenge: challenge,\n\t\t\trpId: this.rpId,\n\t\t\tallowCredentials,\n\t\t\textensions: {\n\t\t\t\tappid: this.appId,\n\t\t\t},\n\t\t\tuserVerification: \"discouraged\",\n\t\t\ttimeout: WEBAUTHN_TIMEOUT_MS,\n\t\t}\n\t\tlet assertion\n\n\t\tthis.currentOperationSignal = new AbortController()\n\t\ttry {\n\t\t\tassertion = await this.api.get({\n\t\t\t\tpublicKey: publicKeyCredentialRequestOptions,\n\t\t\t\tsignal: this.currentOperationSignal.signal,\n\t\t\t})\n\t\t} catch (e) {\n\t\t\tif (e.name === \"AbortError\") {\n\t\t\t\tthrow new CancelledError(e)\n\t\t\t} else {\n\t\t\t\tthrow new WebauthnError(e)\n\t\t\t}\n\t\t}\n\n\t\tconst publicKeyCredential = assertion as PublicKeyCredential | null\n\n\t\tif (publicKeyCredential == null) {\n\t\t\tthrow new ProgrammingError(\"Webauthn credential could not be unambiguously resolved\")\n\t\t}\n\t\tconst assertionResponse = publicKeyCredential.response as AuthenticatorAssertionResponse\n\t\treturn {\n\t\t\trawId: new Uint8Array(publicKeyCredential.rawId),\n\t\t\tauthenticatorData: new Uint8Array(assertionResponse.authenticatorData),\n\t\t\tsignature: new Uint8Array(assertionResponse.signature),\n\t\t\tclientDataJSON: new Uint8Array(assertionResponse.clientDataJSON),\n\t\t}\n\t}\n\n\tasync abortCurrentOperation(): Promise<void> {\n\t\tthis.currentOperationSignal?.abort()\n\t\tthis.currentOperationSignal = null\n\t}\n}\n"]}