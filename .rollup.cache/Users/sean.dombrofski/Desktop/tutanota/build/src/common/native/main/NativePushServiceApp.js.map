{"version":3,"file":"NativePushServiceApp.js","sourceRoot":"","sources":["../../../../../src/common/native/main/NativePushServiceApp.ts"],"names":[],"mappings":"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","sourcesContent":["import type { PushIdentifier } from \"../../api/entities/sys/TypeRefs.js\"\nimport { createPushIdentifier, PushIdentifierTypeRef } from \"../../api/entities/sys/TypeRefs.js\"\nimport { assertNotNull } from \"@tutao/tutanota-utils\"\nimport { PushServiceType } from \"../../api/common/TutanotaConstants\"\nimport { lang } from \"../../misc/LanguageViewModel\"\nimport { isAndroidApp, isApp, isDesktop, isIOSApp } from \"../../api/common/Env\"\nimport { LoginController } from \"../../api/main/LoginController\"\nimport { client } from \"../../misc/ClientDetector\"\nimport { DeviceConfig } from \"../../misc/DeviceConfig\"\nimport { getElementId } from \"../../api/common/utils/EntityUtils\"\nimport { locator } from \"../../api/main/CommonLocator\"\nimport { DeviceStorageUnavailableError } from \"../../api/common/error/DeviceStorageUnavailableError\"\nimport { NativePushFacade } from \"../common/generatedipc/NativePushFacade.js\"\nimport { CryptoFacade } from \"../../api/worker/crypto/CryptoFacade.js\"\nimport { EntityClient } from \"../../api/common/EntityClient.js\"\nimport { CalendarFacade } from \"../../api/worker/facades/lazy/CalendarFacade.js\"\nimport modelInfo from \"../../api/entities/sys/ModelInfo.js\"\nimport { ExtendedNotificationMode } from \"../common/generatedipc/ExtendedNotificationMode.js\"\nimport { AppType } from \"../../misc/ClientConstants.js\"\n\n// keep in sync with SYS_MODEL_VERSION in app-android/app/build.gradle\n// keep in sync with SYS_MODEL_VERSION in app-android/calendar/build.gradle.kts\n// keep in sync with app-ios/TutanotaSharedFramework/Utils/Utils.swift\nconst MOBILE_SYS_MODEL_VERSION = 99\n\nfunction effectiveModelVersion(): number {\n\t// on desktop we use generated classes\n\t// on mobile we use hand-written classes\n\treturn isDesktop() ? modelInfo.version : MOBILE_SYS_MODEL_VERSION\n}\n\ninterface CurrentPushIdentifier {\n\tidentifier: string\n\tdisabled: boolean\n}\n\nexport class NativePushServiceApp {\n\tprivate _currentIdentifier: CurrentPushIdentifier | null = null\n\n\tconstructor(\n\t\tprivate readonly nativePushFacade: NativePushFacade,\n\t\tprivate readonly logins: LoginController,\n\t\tprivate readonly cryptoFacade: CryptoFacade,\n\t\tprivate readonly entityClient: EntityClient,\n\t\tprivate readonly deviceConfig: DeviceConfig,\n\t\tprivate readonly calendarFacade: CalendarFacade,\n\t\tprivate readonly app: AppType,\n\t) {}\n\n\tasync register(): Promise<void> {\n\t\tconsole.log(\"Registering for push notifications for app\", this.app)\n\t\tif (isAndroidApp() || isDesktop()) {\n\t\t\ttry {\n\t\t\t\tconst identifier = (await this.loadPushIdentifierFromNative()) ?? (await locator.workerFacade.generateSsePushIdentifer())\n\t\t\t\tconst pushIdentifier = (await this.loadPushIdentifier(identifier)) ?? (await this.createPushIdentifierInstance(identifier, PushServiceType.SSE))\n\t\t\t\tthis._currentIdentifier = { identifier, disabled: pushIdentifier.disabled }\n\n\t\t\t\tawait this.storePushIdentifierLocally(pushIdentifier) // Also sets the extended notification mode to SENDER_AND_SUBJECT if the user is new\n\n\t\t\t\tconst userId = this.logins.getUserController().userId\n\t\t\t\tif (!(await locator.pushService.allowReceiveCalendarNotifications())) {\n\t\t\t\t\tawait this.nativePushFacade.invalidateAlarmsForUser(userId)\n\t\t\t\t} else {\n\t\t\t\t\tawait this.scheduleAlarmsIfNeeded(pushIdentifier)\n\t\t\t\t}\n\n\t\t\t\tawait this.initPushNotifications()\n\t\t\t} catch (e) {\n\t\t\t\tif (e instanceof DeviceStorageUnavailableError) {\n\t\t\t\t\tconsole.warn(\"Device storage is unavailable, cannot register for push notifications\", e)\n\t\t\t\t} else {\n\t\t\t\t\tthrow e\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isIOSApp()) {\n\t\t\tconst identifier = await this.loadPushIdentifierFromNative()\n\n\t\t\tif (identifier) {\n\t\t\t\tconst pushIdentifier = (await this.loadPushIdentifier(identifier)) ?? (await this.createPushIdentifierInstance(identifier, PushServiceType.IOS))\n\n\t\t\t\tthis._currentIdentifier = { identifier, disabled: pushIdentifier.disabled }\n\n\t\t\t\tif (pushIdentifier.language !== lang.code) {\n\t\t\t\t\tpushIdentifier.language = lang.code\n\t\t\t\t\tlocator.entityClient.update(pushIdentifier)\n\t\t\t\t}\n\n\t\t\t\tawait this.storePushIdentifierLocally(pushIdentifier)\n\t\t\t\tconst userId = this.logins.getUserController().userId\n\t\t\t\tif (!(await locator.pushService.allowReceiveCalendarNotifications())) {\n\t\t\t\t\tawait this.nativePushFacade.invalidateAlarmsForUser(userId)\n\t\t\t\t} else {\n\t\t\t\t\tawait this.scheduleAlarmsIfNeeded(pushIdentifier)\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconsole.log(\"Push notifications were rejected by user\")\n\t\t\t}\n\t\t}\n\t}\n\n\tasync reRegister(): Promise<void> {\n\t\tconsole.log(\"re-registering for push notifications, setting no alarms as scheduled\")\n\t\tthis.deviceConfig.setNoAlarmsScheduled()\n\n\t\tif (this.logins.isUserLoggedIn()) {\n\t\t\tawait this.logins.waitForFullLogin()\n\t\t\treturn this.register()\n\t\t} else {\n\t\t\treturn Promise.resolve()\n\t\t}\n\t}\n\n\tasync invalidateAlarmsForUser(userId: Id) {\n\t\treturn this.nativePushFacade.invalidateAlarmsForUser(userId)\n\t}\n\n\tremoveUserFromNotifications(userId: Id): Promise<void> {\n\t\treturn this.nativePushFacade.removeUser(userId)\n\t}\n\n\tloadPushIdentifierFromNative(): Promise<string | null> {\n\t\treturn this.nativePushFacade.getPushIdentifier()\n\t}\n\n\tprivate async storePushIdentifierLocally(pushIdentifier: PushIdentifier): Promise<void> {\n\t\tconst userId = this.logins.getUserController().user._id\n\n\t\tconst sk = assertNotNull(await this.cryptoFacade.resolveSessionKeyForInstanceBinary(pushIdentifier))\n\t\tconst origin = assertNotNull(env.staticUrl)\n\t\tawait this.nativePushFacade.storePushIdentifierLocally(pushIdentifier.identifier, userId, origin, getElementId(pushIdentifier), sk)\n\t}\n\n\tprivate async loadPushIdentifier(identifier: string): Promise<PushIdentifier | null> {\n\t\tconst list = assertNotNull(this.logins.getUserController().user.pushIdentifierList)\n\t\tconst identifiers = await this.entityClient.loadAll(PushIdentifierTypeRef, list.list)\n\t\treturn identifiers.find((i) => i.identifier === identifier) ?? null\n\t}\n\n\tprivate async createPushIdentifierInstance(identifier: string, pushServiceType: PushServiceType): Promise<PushIdentifier> {\n\t\tconst list = assertNotNull(this.logins.getUserController().user.pushIdentifierList?.list)\n\t\tconst pushIdentifier = createPushIdentifier({\n\t\t\t_area: \"0\",\n\t\t\t_owner: this.logins.getUserController().userGroupInfo.group,\n\t\t\t_ownerGroup: this.logins.getUserController().userGroupInfo.group,\n\t\t\tdisplayName: client.getIdentifier(),\n\t\t\tpushServiceType: pushServiceType,\n\t\t\tidentifier,\n\t\t\tlanguage: lang.code,\n\t\t\tdisabled: false,\n\t\t\tlastUsageTime: new Date(),\n\t\t\tlastNotificationDate: null,\n\t\t\tapp: this.app,\n\t\t})\n\t\tconst id = await this.entityClient.setup(list, pushIdentifier)\n\t\treturn this.entityClient.load(PushIdentifierTypeRef, [list, id])\n\t}\n\n\tasync closePushNotification(addresses: string[]) {\n\t\tawait this.nativePushFacade.closePushNotifications(addresses)\n\t}\n\n\tgetLoadedPushIdentifier(): CurrentPushIdentifier | null {\n\t\treturn this._currentIdentifier\n\t}\n\n\tgetExtendedNotificationMode(): Promise<ExtendedNotificationMode> {\n\t\treturn this.nativePushFacade.getExtendedNotificationConfig(this.logins.getUserController().userId)\n\t}\n\n\tasync setExtendedNotificationMode(type: ExtendedNotificationMode) {\n\t\tawait this.nativePushFacade.setExtendedNotificationConfig(this.logins.getUserController().userId, type)\n\t}\n\n\tprivate initPushNotifications(): Promise<void> {\n\t\treturn this.nativePushFacade.initPushNotifications()\n\t}\n\n\tprivate async scheduleAlarmsIfNeeded(pushIdentifier: PushIdentifier): Promise<void> {\n\t\tif (this._currentIdentifier?.disabled) {\n\t\t\treturn\n\t\t}\n\n\t\tconst userId = this.logins.getUserController().user._id\n\n\t\t// The native part might have alarms stored for the older model version and they might miss some new fields.\n\t\t// We need to remove all of them, re-download and re-schedule all of them.\n\t\tconst scheduledAlarmsModelVersion = this.deviceConfig.getScheduledAlarmsModelVersion(userId)\n\t\tif (scheduledAlarmsModelVersion == null || scheduledAlarmsModelVersion < effectiveModelVersion()) {\n\t\t\tconsole.log(`Alarms not scheduled for user ${userId} (stored v ${scheduledAlarmsModelVersion}), scheduling`)\n\t\t\tawait this.nativePushFacade.invalidateAlarmsForUser(userId)\n\t\t\tawait this.calendarFacade.scheduleAlarmsForNewDevice(pushIdentifier)\n\t\t\t// tell native to delete all alarms for the user\n\t\t\tthis.deviceConfig.setScheduledAlarmsModelVersion(userId, effectiveModelVersion())\n\t\t}\n\t}\n\n\tasync setReceiveCalendarNotificationConfig(value: boolean) {\n\t\tawait this.nativePushFacade.setReceiveCalendarNotificationConfig(this.getLoadedPushIdentifier()!.identifier, value)\n\t}\n\n\tasync getReceiveCalendarNotificationConfig() {\n\t\tconst pushIdentifier = this.getLoadedPushIdentifier()\n\t\tif (!pushIdentifier) return true\n\t\treturn await this.nativePushFacade.getReceiveCalendarNotificationConfig(pushIdentifier.identifier)\n\t}\n\n\tasync allowReceiveCalendarNotifications() {\n\t\treturn !isApp() || (await this.getReceiveCalendarNotificationConfig())\n\t}\n}\n"]}