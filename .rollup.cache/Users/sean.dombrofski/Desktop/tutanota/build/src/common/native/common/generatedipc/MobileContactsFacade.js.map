{"version":3,"file":"MobileContactsFacade.js","sourceRoot":"","sources":["../../../../../../src/common/native/common/generatedipc/MobileContactsFacade.ts"],"names":[],"mappings":"AAAA,iCAAiC","sourcesContent":["/* generated file, don't edit. */\n\nimport { ContactSuggestion } from \"./ContactSuggestion.js\"\nimport { StructuredContact } from \"./StructuredContact.js\"\nimport { ContactSyncResult } from \"./ContactSyncResult.js\"\nimport { ContactBook } from \"./ContactBook.js\"\n/**\n * Contact-related funcionality on mobile.\n */\nexport interface MobileContactsFacade {\n\t/**\n\t * Find suggestions in the OS contact provider.\n\t */\n\tfindSuggestions(query: string): Promise<ReadonlyArray<ContactSuggestion>>\n\n\t/**\n\t * Store one or more contacts in system's contact book\n\t */\n\tsaveContacts(username: string, contacts: ReadonlyArray<StructuredContact>): Promise<void>\n\n\t/**\n\t * Sync all Tuta contacts with system's contact book, this operation includes Inserts, Updates and Deletions\n\t */\n\tsyncContacts(username: string, contacts: ReadonlyArray<StructuredContact>): Promise<ContactSyncResult>\n\n\t/**\n\t * Get all contact books on the device.\n\t */\n\tgetContactBooks(): Promise<ReadonlyArray<ContactBook>>\n\n\t/**\n\t * Get all contacts in the specified contact book.\n\t */\n\tgetContactsInContactBook(bookId: string, username: string): Promise<ReadonlyArray<StructuredContact>>\n\n\t/**\n\t * Delete all or a specific Tuta contact from system's contact book\n\t */\n\tdeleteContacts(username: string, contactId: string | null): Promise<void>\n\n\t/**\n\t * Whether contacts can be persisted locally\n\t */\n\tisLocalStorageAvailable(): Promise<boolean>\n\n\t/**\n\t * Find all contacts that match the list, returning their raw IDs.\n\t */\n\tfindLocalMatches(contacts: ReadonlyArray<StructuredContact>): Promise<ReadonlyArray<string>>\n\n\t/**\n\t * Erase all native contacts with the given raw IDs.\n\t */\n\tdeleteLocalContacts(contacts: ReadonlyArray<string>): Promise<void>\n}\n"]}