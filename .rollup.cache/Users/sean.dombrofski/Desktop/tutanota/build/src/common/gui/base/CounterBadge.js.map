{"version":3,"file":"CounterBadge.js","sourceRoot":"","sources":["../../../../../src/common/gui/base/CounterBadge.ts"],"names":[],"mappings":"AAAA,OAAO,CAAiC,MAAM,SAAS,CAAA;AAevD,MAAM,OAAO,YAAY;IACxB,QAAQ,GAAY,KAAK,CAAA;IAEzB,YAAY,KAA+B;QAC1C,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAA;IACtB,CAAC;IAED,IAAI,CAAC,KAA+B;QACnC,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,UAAU,EAAE,KAAK,EAAE,aAAa,EAAE,GAAG,KAAK,CAAC,KAAK,CAAA;QACzE,OAAO,KAAK,GAAG,CAAC;YACf,CAAC,CAAC,CAAC,CACD,mBAAmB,EACnB;gBACC,KAAK,EAAE,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;gBAC5B,YAAY,EAAE,GAAG,EAAE;oBAClB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAA;gBACrB,CAAC;gBACD,YAAY,EAAE,GAAG,EAAE;oBAClB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAA;gBACtB,CAAC;gBACD,KAAK,EAAE;oBACN,KAAK,EAAE,QAAQ,EAAE,KAAK;oBACtB,GAAG,EAAE,QAAQ,EAAE,GAAG;oBAClB,MAAM,EAAE,QAAQ,EAAE,MAAM;oBACxB,KAAK,EAAE,QAAQ,EAAE,KAAK;oBACtB,IAAI,EAAE,QAAQ,EAAE,IAAI;oBACpB,MAAM,EAAE,QAAQ,EAAE,MAAM;oBACxB,SAAS,EAAE,QAAQ,EAAE,MAAM;oBAC3B,UAAU;oBACV,KAAK;iBACL;aACD,EACD,KAAK,GAAG,EAAE,IAAI,IAAI,CAAC,QAAQ,IAAI,aAAa,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAC3D;YACH,CAAC,CAAC,IAAI,CAAA;IACR,CAAC;CACD","sourcesContent":["import m, { Children, Component, Vnode } from \"mithril\"\nimport type { PositionRect } from \"./Overlay\"\n\n/**\n * Small badge symbol to display numeric values to indicate that content is available, e.g. unread mail counter.\n * It will only appear if the counter value is greater than zero.\n */\nexport type CounterBadgeAttrs = {\n\tcount: number\n\tposition?: PositionRect\n\tcolor: string\n\tbackground: string\n\tshowFullCount?: boolean\n}\n\nexport class CounterBadge implements Component<CounterBadgeAttrs> {\n\t_hovered: boolean = false\n\n\tconstructor(vnode: Vnode<CounterBadgeAttrs>) {\n\t\tthis._hovered = false\n\t}\n\n\tview(vnode: Vnode<CounterBadgeAttrs>): Children {\n\t\tconst { count, position, background, color, showFullCount } = vnode.attrs\n\t\treturn count > 0\n\t\t\t? m(\n\t\t\t\t\t\".counter-badge.z2\",\n\t\t\t\t\t{\n\t\t\t\t\t\tclass: position ? \"abs\" : \"\",\n\t\t\t\t\t\tonmouseenter: () => {\n\t\t\t\t\t\t\tthis._hovered = true\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonmouseleave: () => {\n\t\t\t\t\t\t\tthis._hovered = false\n\t\t\t\t\t\t},\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\twidth: position?.width,\n\t\t\t\t\t\t\ttop: position?.top,\n\t\t\t\t\t\t\tbottom: position?.bottom,\n\t\t\t\t\t\t\tright: position?.right,\n\t\t\t\t\t\t\tleft: position?.left,\n\t\t\t\t\t\t\theight: position?.height,\n\t\t\t\t\t\t\t\"z-index\": position?.zIndex,\n\t\t\t\t\t\t\tbackground,\n\t\t\t\t\t\t\tcolor,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tcount < 99 || this._hovered || showFullCount ? count : \"99+\",\n\t\t\t  )\n\t\t\t: null\n\t}\n}\n"]}