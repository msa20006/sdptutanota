{"version":3,"file":"RouteChange.js","sourceRoot":"","sources":["../../../../src/common/misc/RouteChange.ts"],"names":[],"mappings":"AAAA,OAAO,CAAC,MAAM,SAAS,CAAA;AACvB,OAAO,EAAE,oBAAoB,EAAE,MAAM,mBAAmB,CAAA;AACxD,OAAO,EAAE,YAAY,EAAE,MAAM,uBAAuB,CAAA;AAEpD,oBAAoB,EAAE,CAAA;AAItB;;;wCAGwC;AACxC,MAAM,CAAC,MAAM,aAAa,GAAG,YAAY,CAAC,GAAe,EAAE;IAC1D,MAAM,KAAK,GAAG,GAAG,CAAA;IACjB,IAAI,QAAQ,GAAG,CAAC,CAAA;IAChB,IAAI,OAAO,GAAkB,IAAI,CAAA;IACjC,IAAI,QAAQ,GAAwB,EAAE,CAAA;IACtC,IAAI,SAAS,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,CAAA;IAC7B,OAAO,UAAU,GAAW,EAAE,IAAyB;QACtD,0FAA0F;QAC1F,kCAAkC;QAClC,IAAI,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,SAAS,IAAI,GAAG,KAAK,OAAO,IAAI,cAAc,CAAC,QAAQ,EAAE,IAAI,CAAC;YAAE,OAAM;QAC5F,OAAO,GAAG,GAAG,CAAA;QACb,QAAQ,GAAG,IAAI,CAAA;QACf,MAAM,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAA;QAChC,IAAI,CAAC;YACJ,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,EAAE;gBACtB,OAAO,EAAE,GAAG,GAAG,QAAQ,GAAG,KAAK;aAC/B,CAAC,CAAA;YACF,SAAS,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,CAAA;QAC1B,CAAC;QAAC,OAAO,CAAC,EAAE,CAAC;YACZ,IAAI,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,0BAA0B,CAAC,EAAE,CAAC;gBACpD,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,OAAO,EAAE,CAAC,CAAA;YAC1C,CAAC;iBAAM,CAAC;gBACP,MAAM,CAAC,CAAA;YACR,CAAC;QACF,CAAC;QAED,QAAQ,GAAG,GAAG,CAAA;IACf,CAAC,CAAA;AACF,CAAC,CAAC,CAAA;AAEF,wGAAwG;AACxG,SAAS,cAAc,CAAC,CAA0B,EAAE,CAA0B;IAC7E,IAAI,CAAC,KAAK,CAAC;QAAE,OAAO,IAAI,CAAA;IACxB,MAAM,QAAQ,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAA;IAClC,MAAM,QAAQ,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAA;IAClC,OAAO,QAAQ,CAAC,MAAM,KAAK,QAAQ,CAAC,MAAM,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,KAAK,CAAC,CAAA;AACjG,CAAC;AAED,MAAM,CAAC,MAAM,WAAW,GAAG,OAAO,CAAA;AAClC,MAAM,CAAC,MAAM,eAAe,GAAG,UAAU,CAAA;AACzC,MAAM,CAAC,MAAM,kBAAkB,GAAG,cAAc,CAAA;AAChD,MAAM,CAAC,MAAM,eAAe,GAAG,WAAW,CAAA;AAC1C,MAAM,CAAC,MAAM,aAAa,GAAG,SAAS,CAAA;AACtC,MAAM,CAAC,MAAM,eAAe,GAAG,WAAW,CAAA;AAC1C,MAAM,UAAU,GAAG,yBAAyB,CAAA;AAC5C,MAAM,CAAC,MAAM,SAAS,GAAW,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,uBAAuB,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,UAAU,CAAA","sourcesContent":["import m from \"mithril\"\nimport { assertMainOrNodeBoot } from \"../api/common/Env\"\nimport { lazyMemoized } from \"@tutao/tutanota-utils\"\n\nassertMainOrNodeBoot()\n\nexport type RouteSetFn = (path: string, args: Record<string, any>) => void\n\n/** return a replacement for m.route.set that replaces the last history\n * state for reroutes that happen quickly enough instead of adding a\n * new history entry. will also latch to the route, ignoring any\n * followup calls to the same route.  */\nexport const throttleRoute = lazyMemoized((): RouteSetFn => {\n\tconst limit = 200\n\tlet lastCall = 0\n\tlet lastUrl: string | null = null\n\tlet lastArgs: Record<string, any> = {}\n\tlet lastRoute = m.route.get()\n\treturn function (url: string, args: Record<string, any>) {\n\t\t// someone might have called m.route.set() without us, so if the route changed, we need to\n\t\t// call m.route.set() in any case.\n\t\tif (m.route.get() === lastRoute && url === lastUrl && shallowCompare(lastArgs, args)) return\n\t\tlastUrl = url\n\t\tlastArgs = args\n\t\tconst now = new Date().getTime()\n\t\ttry {\n\t\t\tm.route.set(url, args, {\n\t\t\t\treplace: now - lastCall < limit,\n\t\t\t})\n\t\t\tlastRoute = m.route.get()\n\t\t} catch (e) {\n\t\t\tif (e.message.includes(\"can't access dead object\")) {\n\t\t\t\tconsole.log(`Caught error: ${e.message}`)\n\t\t\t} else {\n\t\t\t\tthrow e\n\t\t\t}\n\t\t}\n\n\t\tlastCall = now\n\t}\n})\n\n/** return true if a and b contain the same keys with values that are the same when compared with === */\nfunction shallowCompare(a: Record<string, unknown>, b: Record<string, unknown>): boolean {\n\tif (a === b) return true\n\tconst aEntries = Object.entries(a)\n\tconst bEntries = Object.entries(b)\n\treturn aEntries.length === bEntries.length && !aEntries.some(([key, value]) => b[key] !== value)\n}\n\nexport const MAIL_PREFIX = \"/mail\"\nexport const CONTACTS_PREFIX = \"/contact\"\nexport const CONTACTLIST_PREFIX = \"/contactlist\"\nexport const CALENDAR_PREFIX = \"/calendar\"\nexport const SEARCH_PREFIX = \"/search\"\nexport const SETTINGS_PREFIX = \"/settings\"\nconst LogoutPath = \"/login?noAutoLogin=true\"\nexport const LogoutUrl: string = window.location.hash.startsWith(\"#mail\") ? \"/ext?noAutoLogin=true\" + location.hash : LogoutPath\n"]}