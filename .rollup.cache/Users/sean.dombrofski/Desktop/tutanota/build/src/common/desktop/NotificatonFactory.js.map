{"version":3,"file":"NotificatonFactory.js","sourceRoot":"","sources":["../../../../src/common/desktop/NotificatonFactory.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,YAAY,EAAE,MAAM,UAAU,CAAA;AAKvC,MAAM,OAAO,2BAA2B;IACvC,WAAW;QACV,OAAO,YAAY,CAAC,WAAW,EAAE,CAAA;IAClC,CAAC;IAED;;;;;OAKG;IACH,gBAAgB,CACf,KAIC,EACD,OAA0C;QAE1C,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,MAAM,CAAC,MAAM,CAC1C,EAAE,EACF;YACC,IAAI,EAAE,EAAE;SACR,EACD,KAAK,CACL,CAAA;QACD,MAAM,YAAY,GAAG,IAAI,YAAY,CAAC;YACrC,KAAK;YACL,IAAI;YACJ,IAAI;SACJ,CAAC;aACA,EAAE,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC,OAAO,wCAA0B,CAAC;aACpD,EAAE,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC,OAAO,wCAA0B,CAAC,CAAA;QACtD,YAAY,CAAC,IAAI,EAAE,CAAA;QACnB,wEAAwE;QACxE,OAAO,GAAG,EAAE,CAAC,YAAY,CAAC,kBAAkB,EAAE,CAAC,KAAK,EAAE,CAAA;IACvD,CAAC;CACD","sourcesContent":["import type { NativeImage } from \"electron\"\nimport { Notification } from \"electron\"\nimport { NotificationResult } from \"./DesktopNotifier\"\n\ntype Dismisser = () => void\n\nexport class ElectronNotificationFactory {\n\tisSupported(): boolean {\n\t\treturn Notification.isSupported()\n\t}\n\n\t/**\n\t *\n\t * @param props\n\t * @param onClick this will get called with the result\n\t * @returns call this to dismiss the notification\n\t */\n\tmakeNotification(\n\t\tprops: {\n\t\t\ttitle: string\n\t\t\tbody?: string\n\t\t\ticon: NativeImage\n\t\t},\n\t\tonClick: (res: NotificationResult) => void,\n\t): Dismisser {\n\t\tconst { title, body, icon } = Object.assign(\n\t\t\t{},\n\t\t\t{\n\t\t\t\tbody: \"\",\n\t\t\t},\n\t\t\tprops,\n\t\t)\n\t\tconst notification = new Notification({\n\t\t\ttitle,\n\t\t\ticon,\n\t\t\tbody,\n\t\t})\n\t\t\t.on(\"click\", () => onClick(NotificationResult.Click))\n\t\t\t.on(\"close\", () => onClick(NotificationResult.Close))\n\t\tnotification.show()\n\t\t// remove listeners before closing to distinguish from dismissal by user\n\t\treturn () => notification.removeAllListeners().close()\n\t}\n}\n"]}