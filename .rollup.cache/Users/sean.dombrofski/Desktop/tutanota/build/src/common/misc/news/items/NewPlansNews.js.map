{"version":3,"file":"NewPlansNews.js","sourceRoot":"","sources":["../../../../../../src/common/misc/news/items/NewPlansNews.ts"],"names":[],"mappings":"AACA,OAAO,CAAe,MAAM,SAAS,CAAA;AAErC,OAAO,EAAY,IAAI,EAAE,MAAM,4BAA4B,CAAA;AAC3D,OAAO,EAAE,MAAM,EAA2B,MAAM,6BAA6B,CAAA;AAG7E,OAAO,EAAE,2CAA2C,EAAE,MAAM,8BAA8B,CAAA;AAE1F;;GAEG;AACH,MAAM,OAAO,YAAY;IACK;IAAuC;IAApE,YAA6B,SAAoB,EAAmB,cAA8B;QAArE,cAAS,GAAT,SAAS,CAAW;QAAmB,mBAAc,GAAd,cAAc,CAAgB;IAAG,CAAC;IAEtG,KAAK,CAAC,OAAO;QACZ,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,EAAE,CAAC;YAC1C,OAAO,KAAK,CAAA;QACb,CAAC;QAED,mEAAmE;QACnE,OAAO,CAAC,CAAC,MAAM,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC,CAAA;IACpD,CAAC;IAED,MAAM,CAAC,MAAc;QACpB,MAAM,GAAG,2DAAmB,CAAA;QAE5B,MAAM,iBAAiB,GAAG,GAAG,EAAE;YAC9B,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAA;QACjE,CAAC,CAAA;QAED,MAAM,WAAW,GAAuB;YACvC;gBACC,KAAK,EAAE,oBAAoB;gBAC3B,KAAK,EAAE,GAAG,EAAE,CAAC,iBAAiB,EAAE;gBAChC,IAAI,wCAAsB;aAC1B;YACD;gBACC,KAAK,EAAE,wBAAwB;gBAC/B,KAAK,EAAE,KAAK,IAAI,EAAE;oBACjB,MAAM,2CAA2C,CAAC,IAAI,CAAC,cAAc,CAAC,CAAA;oBACtE,IAAI,MAAM,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,EAAE,CAAC;wBAC/C,iBAAiB,EAAE,CAAA;oBACpB,CAAC;gBACF,CAAC;gBACD,IAAI,oCAAoB;aACxB;SACD,CAAA;QAED,OAAO,CAAC,CAAC,aAAa,EAAE;YACvB,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;YACxC,CAAC,CACA,KAAK,EACL,IAAI,CAAC,GAAG,CAAC,yBAAyB,EAAE;gBACnC,SAAS,EAAE,eAAe;gBAC1B,SAAS,EAAE,QAAQ;aACnB,CAAC,CACF;YACD,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAC;YAClD,CAAC,CACA,iDAAiD,EACjD,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CACpC;SACD,CAAC,CAAA;IACH,CAAC;CACD","sourcesContent":["import { NewsListItem } from \"../NewsListItem.js\"\nimport m, { Children } from \"mithril\"\nimport { NewsId } from \"../../../api/entities/tutanota/TypeRefs.js\"\nimport { InfoLink, lang } from \"../../LanguageViewModel.js\"\nimport { Button, ButtonAttrs, ButtonType } from \"../../../gui/base/Button.js\"\nimport { NewsModel } from \"../NewsModel.js\"\nimport { UserController } from \"../../../api/main/UserController.js\"\nimport { showUpgradeWizardOrSwitchSubscriptionDialog } from \"../../SubscriptionDialogs.js\"\n\n/**\n * News item that informs admin users about the new pricing model.\n */\nexport class NewPlansNews implements NewsListItem {\n\tconstructor(private readonly newsModel: NewsModel, private readonly userController: UserController) {}\n\n\tasync isShown(): Promise<boolean> {\n\t\tif (!this.userController.isGlobalAdmin()) {\n\t\t\treturn false\n\t\t}\n\n\t\t// // Do not show this for customers that are already on a new plan\n\t\treturn !(await this.userController.isNewPaidPlan())\n\t}\n\n\trender(newsId: NewsId): Children {\n\t\tconst lnk = InfoLink.Privacy\n\n\t\tconst acknowledgeAction = () => {\n\t\t\tthis.newsModel.acknowledgeNews(newsId.newsItemId).then(m.redraw)\n\t\t}\n\n\t\tconst buttonAttrs: Array<ButtonAttrs> = [\n\t\t\t{\n\t\t\t\tlabel: \"decideLater_action\",\n\t\t\t\tclick: () => acknowledgeAction(),\n\t\t\t\ttype: ButtonType.Secondary,\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: \"showMoreUpgrade_action\",\n\t\t\t\tclick: async () => {\n\t\t\t\t\tawait showUpgradeWizardOrSwitchSubscriptionDialog(this.userController)\n\t\t\t\t\tif (await this.userController.isNewPaidPlan()) {\n\t\t\t\t\t\tacknowledgeAction()\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\ttype: ButtonType.Primary,\n\t\t\t},\n\t\t]\n\n\t\treturn m(\".full-width\", [\n\t\t\tm(\".h4\", lang.get(\"newPlansNews_title\")),\n\t\t\tm(\n\t\t\t\t\".pb\",\n\t\t\t\tlang.get(\"newPlansExplanation_msg\", {\n\t\t\t\t\t\"{plan1}\": \"Revolutionary\",\n\t\t\t\t\t\"{plan2}\": \"Legend\",\n\t\t\t\t}),\n\t\t\t),\n\t\t\tm(\".pb\", lang.get(\"newPlansOfferExplanation_msg\")),\n\t\t\tm(\n\t\t\t\t\".flex-end.flex-no-grow-no-shrink-auto.flex-wrap\",\n\t\t\t\tbuttonAttrs.map((a) => m(Button, a)),\n\t\t\t),\n\t\t])\n\t}\n}\n"]}