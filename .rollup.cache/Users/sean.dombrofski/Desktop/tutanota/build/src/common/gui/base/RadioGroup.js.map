{"version":3,"file":"RadioGroup.js","sourceRoot":"","sources":["../../../../../src/common/gui/base/RadioGroup.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,IAAI,EAAE,MAAM,8BAA8B,CAAA;AACnD,OAAO,CAAwC,MAAM,SAAS,CAAA;AAC9D,OAAO,EAAE,YAAY,EAAE,MAAM,0BAA0B,CAAA;AACvD,OAAO,EAAE,IAAI,EAAE,MAAM,uCAAuC,CAAA;AAwB5D;;GAEG;AACH,MAAM,OAAO,UAAU;IACtB,IAAI,CAAC,EAAE,KAAK,EAA6B;QACxC,OAAO,CAAC,CACP,oCAAoC,EACpC;YACC,SAAS,EAAE,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,SAAS,CAAC;YACnD,IAAI,wCAAqB;SACzB,EACD,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAC5B,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,EAAE,MAAM,EAAE,KAAK,CAAC,cAAc,EAAE,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,gBAAgB,EAAE,KAAK,CAAC,YAAY,CAAC,CACjI,CACD,CAAA;IACF,CAAC;IAEO,YAAY,CACnB,SAA2B,EAC3B,MAA2B,EAC3B,cAAwB,EACxB,WAA+B,EAC/B,gBAAsC,EACtC,YAAiC;QAEjC,MAAM,IAAI,GAAG,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAA;QAC/C,MAAM,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAA;QACxC,MAAM,UAAU,GAAG,MAAM,CAAC,KAAK,KAAK,cAAc,CAAA;QAElD,+DAA+D;QAC/D,MAAM,QAAQ,GAAG,GAAG,IAAI,IAAI,WAAW,EAAE,CAAA;QAEzC,+FAA+F;QAC/F,OAAO,CAAC,CACP,kDAAkD,EAClD;YACC,KAAK,EAAE,WAAW,IAAI,EAAE;YACxB,OAAO,EAAE,GAAG,EAAE;gBACb,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAA;gBACvB,gBAAgB,CAAC,MAAM,CAAC,KAAK,CAAC,CAAA;YAC/B,CAAC;SACD,EACD;YACC,CAAC,CAAC,uDAAuD,EAAE;gBAC1D;;mBAEG;gBACH,IAAI,EAAE,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC;gBACxC,KAAK,EAAE,WAAW;gBAClB,EAAE,EAAE,QAAQ;gBACZ,8CAA8C;gBAC9C,OAAO,EAAE,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI;gBACjC,SAAS,EAAE,CAAC,KAAoB,EAAE,EAAE;oBACnC,IAAI,YAAY,CAAC,KAAK,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC;wBAC1C,gBAAgB,CAAC,MAAM,CAAC,KAAK,CAAC,CAAA;oBAC/B,CAAC;oBAED,OAAO,IAAI,CAAA;gBACZ,CAAC;aACD,CAAC;YACF,CAAC,CAAC,8BAA8B,EAAE;gBACjC,CAAC,CAAC,sBAAsB,EAAE,EAAE,GAAG,EAAE,QAAQ,EAAE,EAAE,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;gBAClF,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,YAAY,CAAC;aACrD,CAAC;SACF,CACD,CAAA;IACF,CAAC;IAEO,YAAY,CAAC,GAAW,EAAE,YAAiC;QAClE,IAAI,CAAC,YAAY,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC;YAC7C,OAAO,IAAI,CAAA;QACZ,CAAC;QAED,OAAO,YAAY,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;IAC7B,CAAC;CACD","sourcesContent":["import type { MaybeTranslation } from \"../../misc/LanguageViewModel\"\nimport { lang } from \"../../misc/LanguageViewModel\"\nimport m, { Child, Children, Component, Vnode } from \"mithril\"\nimport { isKeyPressed } from \"../../misc/KeyManager.js\"\nimport { Keys } from \"../../api/common/TutanotaConstants.js\"\nimport { AriaRole } from \"../AriaUtils.js\"\n\nexport interface SingularOrPluralLabel {\n\tsingular: MaybeTranslation\n\tplural: MaybeTranslation\n}\n\nexport type RadioGroupOption<T> = {\n\treadonly name: MaybeTranslation\n\treadonly value: T\n}\n\nexport type RadioGroupAttrs<T> = {\n\t// The unique name of the radio button group. The browser uses it to group the radio buttons together.\n\tname: MaybeTranslation\n\toptions: ReadonlyArray<RadioGroupOption<T>>\n\tariaLabel: MaybeTranslation\n\tclasses?: Array<string>\n\tselectedOption: T | null\n\tonOptionSelected: (arg0: T) => unknown\n\tinjectionMap?: Map<string, Child>\n}\n\n/**\n * Component which shows selection for a single choice.\n */\nexport class RadioGroup<T> implements Component<RadioGroupAttrs<T>> {\n\tview({ attrs }: Vnode<RadioGroupAttrs<T>>): Children {\n\t\treturn m(\n\t\t\t\"ul.unstyled-list.flex.col.gap-vpad\",\n\t\t\t{\n\t\t\t\tariaLabel: lang.getTranslationText(attrs.ariaLabel),\n\t\t\t\trole: AriaRole.RadioGroup,\n\t\t\t},\n\t\t\tattrs.options.map((option) =>\n\t\t\t\tthis.renderOption(attrs.name, option, attrs.selectedOption, attrs.classes?.join(\" \"), attrs.onOptionSelected, attrs.injectionMap),\n\t\t\t),\n\t\t)\n\t}\n\n\tprivate renderOption(\n\t\tgroupName: MaybeTranslation,\n\t\toption: RadioGroupOption<T>,\n\t\tselectedOption: T | null,\n\t\toptionClass: string | undefined,\n\t\tonOptionSelected: (arg0: T) => unknown,\n\t\tinjectionMap?: Map<string, Child>,\n\t): Children {\n\t\tconst name = lang.getTranslationText(groupName)\n\t\tconst valueString = String(option.value)\n\t\tconst isSelected = option.value === selectedOption\n\n\t\t// IDs used to link the label and description for accessibility\n\t\tconst optionId = `${name}-${valueString}`\n\n\t\t// The wrapper is needed because <input> is self-closing and will not take the label as a child\n\t\treturn m(\n\t\t\t\"li.flex.gap-vpad.cursor-pointer.full-width.flash\",\n\t\t\t{\n\t\t\t\tclass: optionClass ?? \"\",\n\t\t\t\tonclick: () => {\n\t\t\t\t\tconsole.log(\"Clicked?\")\n\t\t\t\t\tonOptionSelected(option.value)\n\t\t\t\t},\n\t\t\t},\n\t\t\t[\n\t\t\t\tm(\"input[type=radio].m-0.big-radio.content-accent-accent\", {\n\t\t\t\t\t/* The `name` attribute defines the group the radio button belongs to. Not the name/label of the radio button itself.\n\t\t\t\t\t * See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/radio#defining_a_radio_group\n\t\t\t\t\t */\n\t\t\t\t\tname: lang.getTranslationText(groupName),\n\t\t\t\t\tvalue: valueString,\n\t\t\t\t\tid: optionId,\n\t\t\t\t\t// Handle changes in value from the attributes\n\t\t\t\t\tchecked: isSelected ? true : null,\n\t\t\t\t\tonkeydown: (event: KeyboardEvent) => {\n\t\t\t\t\t\tif (isKeyPressed(event.key, Keys.RETURN)) {\n\t\t\t\t\t\t\tonOptionSelected(option.value)\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn true\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t\tm(\".flex.flex-column.full-width\", [\n\t\t\t\t\tm(\"label.cursor-pointer\", { for: optionId }, lang.getTranslationText(option.name)),\n\t\t\t\t\tthis.getInjection(String(option.value), injectionMap),\n\t\t\t\t]),\n\t\t\t],\n\t\t)\n\t}\n\n\tprivate getInjection(key: string, injectionMap?: Map<string, Child>): Child {\n\t\tif (!injectionMap || !injectionMap.has(key)) {\n\t\t\treturn null\n\t\t}\n\n\t\treturn injectionMap.get(key)\n\t}\n}\n"]}