{"version":3,"file":"UserViewer.js","sourceRoot":"","sources":["../../../../src/common/settings/UserViewer.ts"],"names":[],"mappings":"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","sourcesContent":["import m, { Children } from \"mithril\"\nimport { assertMainOrNode } from \"../api/common/Env.js\"\nimport { Dialog } from \"../gui/base/Dialog.js\"\nimport { formatDateWithMonth, formatStorageSize } from \"../misc/Formatter.js\"\nimport { lang } from \"../misc/LanguageViewModel.js\"\nimport type { Customer, GroupInfo, GroupMembership, User } from \"../api/entities/sys/TypeRefs.js\"\nimport { GroupInfoTypeRef, GroupTypeRef, UserTypeRef } from \"../api/entities/sys/TypeRefs.js\"\nimport { asyncFind, getFirstOrThrow, LazyLoaded, neverNull, ofClass, promiseMap } from \"@tutao/tutanota-utils\"\nimport { BookingItemFeatureType, GroupType, OperationType } from \"../api/common/TutanotaConstants.js\"\nimport { BadRequestError, NotAuthorizedError, PreconditionFailedError } from \"../api/common/error/RestError.js\"\nimport { ColumnWidth, Table, TableAttrs } from \"../gui/base/Table.js\"\nimport { getGroupTypeDisplayName } from \"./groups/GroupDetailsView.js\"\nimport { Icons } from \"../gui/base/icons/Icons.js\"\nimport { SecondFactorsEditForm } from \"./login/secondfactor/SecondFactorsEditForm.js\"\nimport { showProgressDialog } from \"../gui/dialogs/ProgressDialog.js\"\n\nimport { HtmlEditor as Editor, HtmlEditorMode } from \"../gui/editor/HtmlEditor.js\"\nimport { checkAndImportUserData, CSV_USER_FORMAT } from \"./ImportUsersViewer.js\"\nimport { MailAddressTable } from \"./mailaddress/MailAddressTable.js\"\nimport { compareGroupInfos, getGroupInfoDisplayName } from \"../api/common/utils/GroupUtils.js\"\nimport { isSameId } from \"../api/common/utils/EntityUtils.js\"\nimport { showBuyDialog } from \"../subscription/BuyDialog.js\"\nimport { TextField } from \"../gui/base/TextField.js\"\nimport { locator } from \"../api/main/CommonLocator.js\"\nimport { DropDownSelector } from \"../gui/base/DropDownSelector.js\"\nimport { showChangeOwnPasswordDialog, showChangeUserPasswordAsAdminDialog } from \"./login/ChangePasswordDialogs.js\"\nimport { IconButton, IconButtonAttrs } from \"../gui/base/IconButton.js\"\nimport { ButtonSize } from \"../gui/base/ButtonSize.js\"\nimport { MailAddressTableModel } from \"./mailaddress/MailAddressTableModel.js\"\nimport { progressIcon } from \"../gui/base/Icon.js\"\nimport { toFeatureType } from \"../subscription/SubscriptionUtils.js\"\nimport { EntityUpdateData, isUpdateForTypeRef } from \"../api/common/utils/EntityUpdateUtils.js\"\nimport { UpdatableSettingsDetailsViewer } from \"./Interfaces.js\"\n\nassertMainOrNode()\n\nexport class UserViewer implements UpdatableSettingsDetailsViewer {\n\tprivate readonly user: LazyLoaded<User> = new LazyLoaded(() => this.loadUser())\n\tprivate readonly customer = new LazyLoaded(() => this.loadCustomer())\n\tprivate readonly teamGroupInfos = new LazyLoaded(() => this.loadTeamGroupInfos())\n\tprivate groupsTableAttrs: TableAttrs | null = null\n\tprivate readonly secondFactorsForm: SecondFactorsEditForm\n\tprivate usedStorage: number | null = null\n\tprivate mailAddressTableModel: MailAddressTableModel | null = null\n\tprivate mailAddressTableExpanded: boolean\n\n\tconstructor(public userGroupInfo: GroupInfo, private isAdmin: boolean) {\n\t\tthis.userGroupInfo = userGroupInfo\n\n\t\tthis.mailAddressTableExpanded = false\n\n\t\tthis.secondFactorsForm = new SecondFactorsEditForm(\n\t\t\tthis.user,\n\t\t\tlocator.domainConfigProvider(),\n\t\t\tlocator.loginFacade,\n\t\t\tthis.isAdmin,\n\t\t\t!!this.userGroupInfo.deleted,\n\t\t)\n\n\t\tthis.teamGroupInfos.getAsync().then(async (availableTeamGroupInfos) => {\n\t\t\tif (availableTeamGroupInfos.length > 0) {\n\t\t\t\tthis.groupsTableAttrs = {\n\t\t\t\t\tcolumnHeading: [\"name_label\", \"groupType_label\"],\n\t\t\t\t\tcolumnWidths: [ColumnWidth.Largest, ColumnWidth.Small],\n\t\t\t\t\tshowActionButtonColumn: true,\n\t\t\t\t\taddButtonAttrs: {\n\t\t\t\t\t\ttitle: \"addGroup_label\",\n\t\t\t\t\t\ticon: Icons.Add,\n\t\t\t\t\t\tclick: () => this.showAddUserToGroupDialog(),\n\t\t\t\t\t},\n\t\t\t\t\tlines: [],\n\t\t\t\t}\n\n\t\t\t\tawait this.updateGroups()\n\t\t\t}\n\t\t})\n\n\t\tthis.user.getAsync().then(async (user) => {\n\t\t\tconst mailMembership = await asyncFind(user.memberships, async (ship) => {\n\t\t\t\treturn ship.groupType === GroupType.Mail && (await locator.entityClient.load(GroupTypeRef, ship.group)).user === user._id\n\t\t\t})\n\t\t\tif (mailMembership == null) {\n\t\t\t\tconsole.error(\"User doesn't have a mailbox?\", user._id)\n\t\t\t\treturn\n\t\t\t}\n\t\t\tthis.mailAddressTableModel = this.isItMe()\n\t\t\t\t? await locator.mailAddressTableModelForOwnMailbox()\n\t\t\t\t: await locator.mailAddressTableModelForAdmin(mailMembership.group, user._id, this.userGroupInfo)\n\t\t\tm.redraw()\n\t\t})\n\n\t\tthis.updateUsedStorageAndAdminFlag()\n\t}\n\n\trenderView(): Children {\n\t\tconst changePasswordButtonAttrs: IconButtonAttrs = {\n\t\t\ttitle: \"changePassword_label\",\n\t\t\tclick: () => this.changePassword(),\n\t\t\ticon: Icons.Edit,\n\t\t\tsize: ButtonSize.Compact,\n\t\t} as const\n\t\tconst passwordFieldAttrs = {\n\t\t\tlabel: \"password_label\",\n\t\t\tvalue: \"***\",\n\t\t\tinjectionsRight: () => [m(IconButton, changePasswordButtonAttrs)],\n\t\t\tisReadOnly: true,\n\t\t} as const\n\t\treturn m(\"#user-viewer.fill-absolute.scroll.plr-l.pb-floating\", [\n\t\t\tm(\".h4.mt-l\", lang.get(\"userSettings_label\")),\n\t\t\tm(\"\", [\n\t\t\t\tm(TextField, {\n\t\t\t\t\tlabel: \"mailAddress_label\",\n\t\t\t\t\tvalue: this.userGroupInfo.mailAddress ?? \"\",\n\t\t\t\t\tisReadOnly: true,\n\t\t\t\t}),\n\t\t\t\tm(TextField, {\n\t\t\t\t\tlabel: \"created_label\",\n\t\t\t\t\tvalue: formatDateWithMonth(this.userGroupInfo.created),\n\t\t\t\t\tisReadOnly: true,\n\t\t\t\t}),\n\t\t\t\tm(TextField, {\n\t\t\t\t\tlabel: \"storageCapacityUsed_label\",\n\t\t\t\t\tvalue: this.usedStorage ? formatStorageSize(this.usedStorage) : lang.get(\"loading_msg\"),\n\t\t\t\t\tisReadOnly: true,\n\t\t\t\t} as const),\n\t\t\t]),\n\t\t\tm(\"\", [\n\t\t\t\tthis.renderName(),\n\t\t\t\tm(TextField, passwordFieldAttrs),\n\t\t\t\tlocator.logins.getUserController().isGlobalAdmin() ? this.renderAdminStatusSelector() : null,\n\t\t\t\tthis.renderUserStatusSelector(),\n\t\t\t]),\n\t\t\tm(this.secondFactorsForm),\n\t\t\tthis.groupsTableAttrs ? m(\".h4.mt-l.mb-s\", lang.get(\"groups_label\")) : null,\n\t\t\tthis.groupsTableAttrs ? m(Table, this.groupsTableAttrs) : null,\n\t\t\tthis.mailAddressTableModel\n\t\t\t\t? m(MailAddressTable, {\n\t\t\t\t\t\tmodel: this.mailAddressTableModel,\n\t\t\t\t\t\texpanded: this.mailAddressTableExpanded,\n\t\t\t\t\t\tonExpanded: (newExpanded) => (this.mailAddressTableExpanded = newExpanded),\n\t\t\t\t  })\n\t\t\t\t: progressIcon(),\n\t\t])\n\t}\n\n\tprivate renderName(): Children {\n\t\tconst name = this.userGroupInfo.name\n\t\treturn m(TextField, {\n\t\t\tlabel: \"name_label\",\n\t\t\tvalue: name,\n\t\t\tisReadOnly: true,\n\t\t\tinjectionsRight: () =>\n\t\t\t\tm(IconButton, {\n\t\t\t\t\ttitle: \"edit_action\",\n\t\t\t\t\tclick: () => this.onChangeName(name),\n\t\t\t\t\ticon: Icons.Edit,\n\t\t\t\t\tsize: ButtonSize.Compact,\n\t\t\t\t}),\n\t\t})\n\t}\n\n\tprivate onChangeName(name: string) {\n\t\tDialog.showProcessTextInputDialog(\n\t\t\t{\n\t\t\t\ttitle: \"edit_action\",\n\t\t\t\tlabel: \"name_label\",\n\t\t\t\tdefaultValue: name,\n\t\t\t},\n\t\t\t(newName) => {\n\t\t\t\tthis.userGroupInfo.name = newName\n\t\t\t\treturn locator.entityClient.update(this.userGroupInfo)\n\t\t\t},\n\t\t)\n\t}\n\n\tprivate renderAdminStatusSelector(): Children {\n\t\treturn m(DropDownSelector, {\n\t\t\tlabel: \"globalAdmin_label\",\n\t\t\titems: [\n\t\t\t\t{\n\t\t\t\t\tname: lang.get(\"no_label\"),\n\t\t\t\t\tvalue: false,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: lang.get(\"yes_label\"),\n\t\t\t\t\tvalue: true,\n\t\t\t\t},\n\t\t\t],\n\t\t\tselectedValue: this.isAdmin,\n\t\t\tselectionChangedHandler: (value: boolean) => {\n\t\t\t\tif (this.userGroupInfo.deleted) {\n\t\t\t\t\tDialog.message(\"userAccountDeactivated_msg\")\n\t\t\t\t} else if (this.isItMe()) {\n\t\t\t\t\tDialog.message(\"removeOwnAdminFlagInfo_msg\")\n\t\t\t\t} else {\n\t\t\t\t\tshowProgressDialog(\n\t\t\t\t\t\t\"pleaseWait_msg\",\n\t\t\t\t\t\tthis.user\n\t\t\t\t\t\t\t.getAsync()\n\t\t\t\t\t\t\t.then((user) => locator.userManagementFacade.changeAdminFlag(user, value))\n\t\t\t\t\t\t\t.catch(\n\t\t\t\t\t\t\t\tofClass(PreconditionFailedError, (e) => {\n\t\t\t\t\t\t\t\t\tif (e.data && e.data === \"usergroup.pending-key-rotation\") {\n\t\t\t\t\t\t\t\t\t\tDialog.message(\"makeAdminPendingUserGroupKeyRotationError_msg\")\n\t\t\t\t\t\t\t\t\t} else if (e.data === \"multiadmingroup.pending-key-rotation\") {\n\t\t\t\t\t\t\t\t\t\t// when a multi admin key rotation is scheduled we do not want to introduce new members into the admin group\n\t\t\t\t\t\t\t\t\t\tDialog.message(\"cannotAddAdminWhenMultiAdminKeyRotationScheduled_msg\")\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tthrow e\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t},\n\t\t})\n\t}\n\n\tprivate renderUserStatusSelector(): Children {\n\t\treturn m(DropDownSelector, {\n\t\t\tlabel: \"state_label\",\n\t\t\titems: [\n\t\t\t\t{\n\t\t\t\t\tname: lang.get(\"activated_label\"),\n\t\t\t\t\tvalue: true,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: lang.get(\"deactivated_label\"),\n\t\t\t\t\tvalue: false,\n\t\t\t\t},\n\t\t\t],\n\t\t\tselectedValue: this.userGroupInfo.deleted == null,\n\t\t\tselectionChangedHandler: (activate: boolean) => {\n\t\t\t\tif (this.isAdmin) {\n\t\t\t\t\tDialog.message(\"deactivateOwnAccountInfo_msg\")\n\t\t\t\t} else if (activate) {\n\t\t\t\t\tthis.restoreUser()\n\t\t\t\t} else {\n\t\t\t\t\tthis.deleteUser()\n\t\t\t\t}\n\t\t\t},\n\t\t})\n\t}\n\n\tprivate isItMe(): boolean {\n\t\treturn isSameId(locator.logins.getUserController().userGroupInfo._id, this.userGroupInfo._id)\n\t}\n\n\tprivate changePassword(): void {\n\t\tif (this.isItMe()) {\n\t\t\tshowChangeOwnPasswordDialog()\n\t\t} else if (this.isAdmin) {\n\t\t\tDialog.message(\"changeAdminPassword_msg\")\n\t\t} else {\n\t\t\tthis.user.getAsync().then((user) => {\n\t\t\t\tshowChangeUserPasswordAsAdminDialog(user)\n\t\t\t})\n\t\t}\n\t}\n\n\tprivate async updateGroups() {\n\t\tif (this.groupsTableAttrs) {\n\t\t\tconst user = await this.user.getAsync()\n\t\t\tconst customer = await this.customer.getAsync()\n\t\t\tthis.groupsTableAttrs.lines = await promiseMap(\n\t\t\t\tthis.getTeamMemberships(user, customer),\n\t\t\t\tasync (m) => {\n\t\t\t\t\tconst groupInfo = await locator.entityClient.load(GroupInfoTypeRef, m.groupInfo)\n\t\t\t\t\treturn {\n\t\t\t\t\t\tcells: [getGroupInfoDisplayName(groupInfo), getGroupTypeDisplayName(neverNull(m.groupType))],\n\t\t\t\t\t\tactionButtonAttrs: {\n\t\t\t\t\t\t\ttitle: \"remove_action\",\n\t\t\t\t\t\t\tclick: () => {\n\t\t\t\t\t\t\t\tshowProgressDialog(\"pleaseWait_msg\", locator.groupManagementFacade.removeUserFromGroup(user._id, groupInfo.group)).catch(\n\t\t\t\t\t\t\t\t\tofClass(NotAuthorizedError, (e) => {\n\t\t\t\t\t\t\t\t\t\tDialog.message(\"removeUserFromGroupNotAdministratedUserError_msg\")\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\ticon: Icons.Cancel,\n\t\t\t\t\t\t} as const,\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tconcurrency: 5,\n\t\t\t\t},\n\t\t\t)\n\t\t}\n\t}\n\n\tprivate async showAddUserToGroupDialog(): Promise<void> {\n\t\tconst user = await this.user.getAsync()\n\t\tif (this.userGroupInfo.deleted) {\n\t\t\tDialog.message(\"userAccountDeactivated_msg\")\n\t\t} else {\n\t\t\tconst globalAdmin = locator.logins.isGlobalAdminUserLoggedIn()\n\n\t\t\tconst availableGroupInfos = this.teamGroupInfos\n\t\t\t\t.getLoaded()\n\t\t\t\t.filter(\n\t\t\t\t\t(g) =>\n\t\t\t\t\t\t// global admins may add all groups\n\t\t\t\t\t\tglobalAdmin &&\n\t\t\t\t\t\t// can't add deleted groups\n\t\t\t\t\t\t!g.deleted &&\n\t\t\t\t\t\t// can't add if the user is already in the group\n\t\t\t\t\t\t!user.memberships.some((m) => isSameId(m.groupInfo, g._id)),\n\t\t\t\t)\n\t\t\t\t.sort(compareGroupInfos)\n\n\t\t\tif (availableGroupInfos.length > 0) {\n\t\t\t\tconst dropdownItems = availableGroupInfos.map((g) => ({\n\t\t\t\t\tname: getGroupInfoDisplayName(g),\n\t\t\t\t\tvalue: g,\n\t\t\t\t}))\n\n\t\t\t\tlet selectedGroupInfo = getFirstOrThrow(availableGroupInfos)\n\t\t\t\tDialog.showActionDialog({\n\t\t\t\t\ttitle: \"addUserToGroup_label\",\n\t\t\t\t\tchild: {\n\t\t\t\t\t\tview: () =>\n\t\t\t\t\t\t\tm(DropDownSelector, {\n\t\t\t\t\t\t\t\tlabel: \"group_label\",\n\t\t\t\t\t\t\t\titems: dropdownItems,\n\t\t\t\t\t\t\t\tselectedValue: selectedGroupInfo,\n\t\t\t\t\t\t\t\tselectionChangedHandler: (selection: GroupInfo) => (selectedGroupInfo = selection),\n\t\t\t\t\t\t\t\tdropdownWidth: 250,\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t},\n\t\t\t\t\tallowOkWithReturn: true,\n\t\t\t\t\tokAction: (dialog: Dialog) => {\n\t\t\t\t\t\tshowProgressDialog(\"pleaseWait_msg\", locator.groupManagementFacade.addUserToGroup(user, selectedGroupInfo.group))\n\t\t\t\t\t\tdialog.close()\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async updateUsedStorageAndAdminFlag(): Promise<void> {\n\t\tconst user = await this.user.getAsync()\n\t\tthis.isAdmin = this.isAdminUser(user)\n\t\ttry {\n\t\t\tthis.usedStorage = await locator.userManagementFacade.readUsedUserStorage(user)\n\t\t\tm.redraw()\n\t\t} catch (e) {\n\t\t\t// may happen if the user gets the admin flag removed, so ignore it\n\t\t\tif (!(e instanceof BadRequestError)) {\n\t\t\t\tthrow e\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate getTeamMemberships(user: User, customer: Customer): GroupMembership[] {\n\t\treturn user.memberships.filter((m) => m.groupInfo[0] === customer.teamGroups)\n\t}\n\n\tprivate isAdminUser(user: User): boolean {\n\t\treturn user.memberships.some((m) => m.groupType === GroupType.Admin)\n\t}\n\n\tprivate async deleteUser() {\n\t\tconst planType = await locator.logins.getUserController().getPlanType()\n\t\tconst newPlan = await locator.logins.getUserController().isNewPaidPlan()\n\n\t\tconst confirmed = await showBuyDialog({\n\t\t\tfeatureType: newPlan ? toFeatureType(planType) : BookingItemFeatureType.LegacyUsers,\n\t\t\tbookingText: \"cancelUserAccounts_label\",\n\t\t\tcount: -1,\n\t\t\tfreeAmount: 0,\n\t\t\treactivate: false,\n\t\t})\n\t\tif (confirmed) {\n\t\t\treturn locator.userManagementFacade\n\t\t\t\t.deleteUser(await this.user.getAsync(), false)\n\t\t\t\t.catch(ofClass(PreconditionFailedError, () => Dialog.message(\"stillReferencedFromContactForm_msg\")))\n\t\t}\n\t}\n\n\tprivate async restoreUser() {\n\t\tconst planType = await locator.logins.getUserController().getPlanType()\n\t\tconst newPlan = await locator.logins.getUserController().isNewPaidPlan()\n\t\tconst confirmed = await showBuyDialog({\n\t\t\tfeatureType: newPlan ? toFeatureType(planType) : BookingItemFeatureType.LegacyUsers,\n\t\t\tbookingText: \"bookingItemUsersIncluding_label\",\n\t\t\tcount: 1,\n\t\t\tfreeAmount: 0,\n\t\t\treactivate: true,\n\t\t})\n\t\tif (confirmed) {\n\t\t\tawait locator.userManagementFacade\n\t\t\t\t.deleteUser(await this.user.getAsync(), true)\n\t\t\t\t.catch(ofClass(PreconditionFailedError, () => Dialog.message(\"emailAddressInUse_msg\")))\n\t\t}\n\t}\n\n\tasync entityEventsReceived(updates: ReadonlyArray<EntityUpdateData>) {\n\t\tfor (const update of updates) {\n\t\t\tconst { instanceListId, instanceId, operation } = update\n\t\t\tif (\n\t\t\t\tisUpdateForTypeRef(GroupInfoTypeRef, update) &&\n\t\t\t\toperation === OperationType.UPDATE &&\n\t\t\t\tisSameId(this.userGroupInfo._id, [neverNull(instanceListId), instanceId])\n\t\t\t) {\n\t\t\t\tthis.userGroupInfo = await locator.entityClient.load(GroupInfoTypeRef, this.userGroupInfo._id)\n\t\t\t\tawait this.updateUsedStorageAndAdminFlag()\n\t\t\t\tm.redraw()\n\t\t\t} else if (\n\t\t\t\tisUpdateForTypeRef(UserTypeRef, update) &&\n\t\t\t\toperation === OperationType.UPDATE &&\n\t\t\t\tthis.user.isLoaded() &&\n\t\t\t\tisSameId(this.user.getLoaded()._id, instanceId)\n\t\t\t) {\n\t\t\t\tthis.user.reset()\n\t\t\t\tawait this.updateUsedStorageAndAdminFlag()\n\t\t\t\tawait this.updateGroups()\n\t\t\t}\n\t\t\tawait this.secondFactorsForm.entityEventReceived(update)\n\t\t}\n\t\tm.redraw()\n\t}\n\n\tprivate loadUser(): Promise<User> {\n\t\treturn locator.entityClient.load(GroupTypeRef, this.userGroupInfo.group).then((userGroup) => {\n\t\t\treturn locator.entityClient.load(UserTypeRef, neverNull(userGroup.user))\n\t\t})\n\t}\n\n\tprivate loadCustomer(): Promise<Customer> {\n\t\treturn locator.logins.getUserController().loadCustomer()\n\t}\n\n\tprivate loadTeamGroupInfos(): Promise<Array<GroupInfo>> {\n\t\treturn this.customer.getAsync().then((customer) => locator.entityClient.loadAll(GroupInfoTypeRef, customer.teamGroups))\n\t}\n}\n\n/**\n * Show editor for adding the csv values of the users.\n */\nexport function showUserImportDialog(customDomains: string[]) {\n\tlet editor = new Editor(\"enterAsCSV_msg\").showBorders().setMode(HtmlEditorMode.HTML).setValue(CSV_USER_FORMAT).setMinHeight(200)\n\tlet form = {\n\t\tview: () => {\n\t\t\treturn [m(editor)]\n\t\t},\n\t}\n\tDialog.showActionDialog({\n\t\ttitle: \"importUsers_action\",\n\t\tchild: form,\n\t\tokAction: (csvDialog) => {\n\t\t\tlet closeCsvDialog = checkAndImportUserData(editor.getValue(), customDomains)\n\t\t\tif (closeCsvDialog) {\n\t\t\t\tcsvDialog.close()\n\t\t\t}\n\t\t},\n\t})\n}\n"]}