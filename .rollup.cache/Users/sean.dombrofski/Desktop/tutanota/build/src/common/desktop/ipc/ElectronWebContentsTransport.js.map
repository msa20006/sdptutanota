{"version":3,"file":"ElectronWebContentsTransport.js","sourceRoot":"","sources":["../../../../../src/common/desktop/ipc/ElectronWebContentsTransport.ts"],"names":[],"mappings":"AASA;;;GAGG;AACH,MAAM,OAAO,4BAA4B;IAMX;IAA2C;IAAxE,YAA6B,WAAwB,EAAmB,MAAqB;QAAhE,gBAAW,GAAX,WAAW,CAAa;QAAmB,WAAM,GAAN,MAAM,CAAe;IAAG,CAAC;IAEjG,WAAW,CAAC,OAAqC;QAChD,IAAI,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE;YAAE,OAAM;QAC1C,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAA;IAC9D,CAAC;IAED,iBAAiB,CAAC,OAA2D;QAC5E,IAAI,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE;YAAE,OAAM;QAC1C,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,iBAAiB,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAA;IACtF,CAAC;CACD","sourcesContent":["import type { Message } from \"../../api/common/threading/MessageDispatcher.js\"\nimport type { Transport } from \"../../api/common/threading/Transport.js\"\nimport type { WebContents } from \"electron\"\n\nexport interface IpcConfig<RenderToMainEvent extends string, MainToRenderEvent extends string> {\n\trenderToMainEvent: RenderToMainEvent\n\tmainToRenderEvent: MainToRenderEvent\n}\n\n/**\n * Implementation of Transport which delegates to CenterIpcHandler/WebContents.\n * Should be instantiated per WebContents.\n */\nexport class ElectronWebContentsTransport<\n\tIpcConfigType extends IpcConfig<string, string>,\n\tOutgoingRequestType extends string,\n\tIncomingRequestType extends string,\n> implements Transport<OutgoingRequestType, IncomingRequestType>\n{\n\tconstructor(private readonly webContents: WebContents, private readonly config: IpcConfigType) {}\n\n\tpostMessage(message: Message<OutgoingRequestType>): void {\n\t\tif (this.webContents.isDestroyed()) return\n\t\tthis.webContents.send(this.config.mainToRenderEvent, message)\n\t}\n\n\tsetMessageHandler(handler: (message: Message<IncomingRequestType>) => unknown): void {\n\t\tif (this.webContents.isDestroyed()) return\n\t\tthis.webContents.ipc.handle(this.config.renderToMainEvent, (ev, arg) => handler(arg))\n\t}\n}\n"]}