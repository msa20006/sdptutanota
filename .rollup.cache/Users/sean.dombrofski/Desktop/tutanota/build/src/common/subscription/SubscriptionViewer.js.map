{"version":3,"file":"SubscriptionViewer.js","sourceRoot":"","sources":["../../../../src/common/subscription/SubscriptionViewer.ts"],"names":[],"mappings":"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","sourcesContent":["import m, { Children } from \"mithril\"\nimport { assertMainOrNode, isIOSApp } from \"../api/common/Env\"\nimport {\n\tAccountType,\n\tAccountTypeNames,\n\tApprovalStatus,\n\tAvailablePlans,\n\tBookingItemFeatureType,\n\tConst,\n\tgetPaymentMethodType,\n\tLegacyPlans,\n\tNewPaidPlans,\n\tOperationType,\n\tPaymentMethodType,\n\tPlanType,\n} from \"../api/common/TutanotaConstants\"\nimport {\n\tAccountingInfo,\n\tAccountingInfoTypeRef,\n\tBooking,\n\tBookingTypeRef,\n\tcreateAppStoreSubscriptionGetIn,\n\tCustomer,\n\tCustomerInfo,\n\tCustomerInfoTypeRef,\n\tCustomerTypeRef,\n\tGiftCard,\n\tGiftCardTypeRef,\n\tGroupInfoTypeRef,\n\tOrderProcessingAgreement,\n\tOrderProcessingAgreementTypeRef,\n\tPlanConfiguration,\n\tUserTypeRef,\n} from \"../api/entities/sys/TypeRefs.js\"\nimport { assertNotNull, base64ExtToBase64, base64ToUint8Array, downcast, incrementDate, neverNull, promiseMap, stringToBase64 } from \"@tutao/tutanota-utils\"\nimport { InfoLink, lang, TranslationKey } from \"../misc/LanguageViewModel\"\nimport { Icons } from \"../gui/base/icons/Icons\"\nimport { asPaymentInterval, formatPrice, formatPriceDataWithInfo, PaymentInterval } from \"./PriceUtils\"\nimport { formatDate, formatStorageSize } from \"../misc/Formatter\"\nimport { showUpgradeWizard } from \"./UpgradeSubscriptionWizard\"\nimport { showSwitchDialog } from \"./SwitchSubscriptionDialog\"\nimport stream from \"mithril/stream\"\nimport Stream from \"mithril/stream\"\nimport * as SignOrderAgreementDialog from \"./SignOrderProcessingAgreementDialog\"\nimport { NotFoundError } from \"../api/common/error/RestError\"\nimport {\n\tappStorePlanName,\n\tgetCurrentCount,\n\tgetTotalStorageCapacityPerCustomer,\n\tisAutoResponderActive,\n\tisEventInvitesActive,\n\tisSharingActive,\n\tisWhitelabelActive,\n\tqueryAppStoreSubscriptionOwnership,\n} from \"./SubscriptionUtils\"\nimport { TextField } from \"../gui/base/TextField.js\"\nimport { Dialog, DialogType } from \"../gui/base/Dialog\"\nimport { ColumnWidth, Table } from \"../gui/base/Table.js\"\nimport { showPurchaseGiftCardDialog } from \"./giftcards/PurchaseGiftCardDialog\"\nimport { GiftCardStatus, loadGiftCards, showGiftCardToShare } from \"./giftcards/GiftCardUtils\"\nimport { locator } from \"../api/main/CommonLocator\"\nimport { GiftCardMessageEditorField } from \"./giftcards/GiftCardMessageEditorField\"\nimport { attachDropdown } from \"../gui/base/Dropdown.js\"\nimport { createNotAvailableForFreeClickHandler } from \"../misc/SubscriptionDialogs\"\nimport { SettingsExpander } from \"../settings/SettingsExpander.js\"\nimport { elementIdPart, GENERATED_MAX_ID, getEtId } from \"../api/common/utils/EntityUtils\"\nimport {\n\tCURRENT_GIFT_CARD_TERMS_VERSION,\n\tCURRENT_PRIVACY_VERSION,\n\tCURRENT_TERMS_VERSION,\n\trenderTermsAndConditionsButton,\n\tTermsSection,\n} from \"./TermsAndConditions\"\nimport { DropDownSelector, SelectorItemList } from \"../gui/base/DropDownSelector.js\"\nimport { IconButton, IconButtonAttrs } from \"../gui/base/IconButton.js\"\nimport { ButtonSize } from \"../gui/base/ButtonSize.js\"\nimport { getDisplayNameOfPlanType } from \"./FeatureListProvider\"\nimport { EntityUpdateData, isUpdateForTypeRef } from \"../api/common/utils/EntityUpdateUtils.js\"\nimport { showProgressDialog } from \"../gui/dialogs/ProgressDialog\"\nimport { MobilePaymentsFacade } from \"../native/common/generatedipc/MobilePaymentsFacade\"\nimport { MobilePaymentSubscriptionOwnership } from \"../native/common/generatedipc/MobilePaymentSubscriptionOwnership\"\nimport { MobilePaymentError } from \"../api/common/error/MobilePaymentError\"\nimport { showManageThroughAppStoreDialog } from \"./PaymentViewer.js\"\nimport type { UpdatableSettingsViewer } from \"../settings/Interfaces.js\"\nimport { client } from \"../misc/ClientDetector.js\"\nimport { AppStoreSubscriptionService } from \"../api/entities/sys/Services.js\"\nimport { AppType } from \"../misc/ClientConstants.js\"\nimport { ProgrammingError } from \"../api/common/error/ProgrammingError.js\"\n\nassertMainOrNode()\nconst DAY = 1000 * 60 * 60 * 24\n\n/*\n * Identifies from which app the user subscribed from\n */\nexport enum SubscriptionApp {\n\tMail = \"0\",\n\tCalendar = \"1\",\n}\n\nexport class SubscriptionViewer implements UpdatableSettingsViewer {\n\treadonly view: UpdatableSettingsViewer[\"view\"]\n\tprivate _subscriptionFieldValue: Stream<string>\n\tprivate _orderAgreementFieldValue: Stream<string>\n\tprivate _selectedSubscriptionInterval: Stream<PaymentInterval | null>\n\tprivate _currentPriceFieldValue: Stream<string>\n\tprivate _nextPriceFieldValue: Stream<string>\n\tprivate _usersFieldValue: Stream<string>\n\tprivate _storageFieldValue: Stream<string>\n\tprivate _emailAliasFieldValue: Stream<string>\n\tprivate _groupsFieldValue: Stream<string>\n\tprivate _whitelabelFieldValue: Stream<string>\n\tprivate _sharingFieldValue: Stream<string>\n\tprivate _eventInvitesFieldValue: Stream<string>\n\tprivate _autoResponderFieldValue: Stream<string>\n\tprivate _periodEndDate: Date | null = null\n\tprivate _nextPeriodPriceVisible: boolean | null = null\n\tprivate _customer: Customer | null = null\n\tprivate _customerInfo: CustomerInfo | null = null\n\tprivate _accountingInfo: AccountingInfo | null = null\n\tprivate _lastBooking: Booking | null = null\n\tprivate _orderAgreement: OrderProcessingAgreement | null = null\n\tprivate currentPlanType: PlanType\n\tprivate _isCancelled: boolean | null = null\n\tprivate _giftCards: Map<Id, GiftCard>\n\tprivate _giftCardsExpanded: Stream<boolean>\n\n\tconstructor(currentPlanType: PlanType, private readonly mobilePaymentsFacade: MobilePaymentsFacade | null) {\n\t\tthis.currentPlanType = currentPlanType\n\t\tconst isPremiumPredicate = () => locator.logins.getUserController().isPaidAccount()\n\n\t\tthis._giftCards = new Map()\n\t\tloadGiftCards(assertNotNull(locator.logins.getUserController().user.customer)).then((giftCards) => {\n\t\t\tfor (const giftCard of giftCards) {\n\t\t\t\tthis._giftCards.set(elementIdPart(giftCard._id), giftCard)\n\t\t\t}\n\t\t})\n\t\tthis._giftCardsExpanded = stream<boolean>(false)\n\n\t\tthis.view = (): Children => {\n\t\t\treturn m(\"#subscription-settings.fill-absolute.scroll.plr-l\", [\n\t\t\t\tm(\".h4.mt-l\", lang.get(\"currentlyBooked_label\")),\n\t\t\t\tm(TextField, {\n\t\t\t\t\tlabel: \"subscription_label\",\n\t\t\t\t\tvalue: this._subscriptionFieldValue(),\n\t\t\t\t\toninput: this._subscriptionFieldValue,\n\t\t\t\t\tisReadOnly: true,\n\t\t\t\t\tinjectionsRight: () =>\n\t\t\t\t\t\tlocator.logins.getUserController().isFreeAccount()\n\t\t\t\t\t\t\t? m(IconButton, {\n\t\t\t\t\t\t\t\t\ttitle: \"upgrade_action\",\n\t\t\t\t\t\t\t\t\tclick: () => showProgressDialog(\"pleaseWait_msg\", this.handleUpgradeSubscription()),\n\t\t\t\t\t\t\t\t\ticon: Icons.Edit,\n\t\t\t\t\t\t\t\t\tsize: ButtonSize.Compact,\n\t\t\t\t\t\t\t  })\n\t\t\t\t\t\t\t: !this._isCancelled\n\t\t\t\t\t\t\t? m(IconButton, {\n\t\t\t\t\t\t\t\t\ttitle: \"subscription_label\",\n\t\t\t\t\t\t\t\t\tclick: () => this.onSubscriptionClick(),\n\t\t\t\t\t\t\t\t\ticon: Icons.Edit,\n\t\t\t\t\t\t\t\t\tsize: ButtonSize.Compact,\n\t\t\t\t\t\t\t  })\n\t\t\t\t\t\t\t: null,\n\t\t\t\t}),\n\t\t\t\tthis.showOrderAgreement() ? this.renderAgreement() : null,\n\t\t\t\tthis.showPriceData() ? this.renderIntervals() : null,\n\t\t\t\tthis.showPriceData() && this._nextPeriodPriceVisible && this._periodEndDate\n\t\t\t\t\t? m(TextField, {\n\t\t\t\t\t\t\tlabel: lang.getTranslation(\"priceFrom_label\", {\n\t\t\t\t\t\t\t\t\"{date}\": formatDate(new Date(neverNull(this._periodEndDate).getTime() + DAY)),\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\thelpLabel: () => lang.get(\"nextSubscriptionPrice_msg\"),\n\t\t\t\t\t\t\tvalue: this._nextPriceFieldValue(),\n\t\t\t\t\t\t\toninput: this._nextPriceFieldValue,\n\t\t\t\t\t\t\tisReadOnly: true,\n\t\t\t\t\t  })\n\t\t\t\t\t: null,\n\t\t\t\tm(\".small.mt-s\", renderTermsAndConditionsButton(TermsSection.Terms, CURRENT_TERMS_VERSION)),\n\t\t\t\tm(\".small.mt-s\", renderTermsAndConditionsButton(TermsSection.Privacy, CURRENT_PRIVACY_VERSION)),\n\t\t\t\tm(\n\t\t\t\t\tSettingsExpander,\n\t\t\t\t\t{\n\t\t\t\t\t\ttitle: \"giftCards_label\",\n\t\t\t\t\t\tinfoMsg: \"giftCardSection_label\",\n\t\t\t\t\t\texpanded: this._giftCardsExpanded,\n\t\t\t\t\t},\n\t\t\t\t\trenderGiftCardTable(Array.from(this._giftCards.values()), isPremiumPredicate),\n\t\t\t\t),\n\t\t\t\tLegacyPlans.includes(this.currentPlanType)\n\t\t\t\t\t? [\n\t\t\t\t\t\t\tm(\".h4.mt-l\", lang.get(\"adminPremiumFeatures_action\")),\n\t\t\t\t\t\t\tm(TextField, {\n\t\t\t\t\t\t\t\tlabel: \"storageCapacity_label\",\n\t\t\t\t\t\t\t\tvalue: this._storageFieldValue(),\n\t\t\t\t\t\t\t\toninput: this._storageFieldValue,\n\t\t\t\t\t\t\t\tisReadOnly: true,\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tm(TextField, {\n\t\t\t\t\t\t\t\tlabel: \"mailAddressAliases_label\",\n\t\t\t\t\t\t\t\tvalue: this._emailAliasFieldValue(),\n\t\t\t\t\t\t\t\toninput: this._emailAliasFieldValue,\n\t\t\t\t\t\t\t\tisReadOnly: true,\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tm(TextField, {\n\t\t\t\t\t\t\t\tlabel: \"pricing.comparisonSharingCalendar_msg\",\n\t\t\t\t\t\t\t\tvalue: this._sharingFieldValue(),\n\t\t\t\t\t\t\t\toninput: this._sharingFieldValue,\n\t\t\t\t\t\t\t\tisReadOnly: true,\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tm(TextField, {\n\t\t\t\t\t\t\t\tlabel: \"pricing.comparisonEventInvites_msg\",\n\t\t\t\t\t\t\t\tvalue: this._eventInvitesFieldValue(),\n\t\t\t\t\t\t\t\toninput: this._eventInvitesFieldValue,\n\t\t\t\t\t\t\t\tisReadOnly: true,\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tm(TextField, {\n\t\t\t\t\t\t\t\tlabel: \"pricing.comparisonOutOfOffice_msg\",\n\t\t\t\t\t\t\t\tvalue: this._autoResponderFieldValue(),\n\t\t\t\t\t\t\t\toninput: this._autoResponderFieldValue,\n\t\t\t\t\t\t\t\tisReadOnly: true,\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tm(TextField, {\n\t\t\t\t\t\t\t\tlabel: \"whitelabel.login_title\",\n\t\t\t\t\t\t\t\tvalue: this._whitelabelFieldValue(),\n\t\t\t\t\t\t\t\toninput: this._whitelabelFieldValue,\n\t\t\t\t\t\t\t\tisReadOnly: true,\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tm(TextField, {\n\t\t\t\t\t\t\t\tlabel: \"whitelabel.custom_title\",\n\t\t\t\t\t\t\t\tvalue: this._whitelabelFieldValue(),\n\t\t\t\t\t\t\t\toninput: this._whitelabelFieldValue,\n\t\t\t\t\t\t\t\tisReadOnly: true,\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t  ]\n\t\t\t\t\t: [],\n\t\t\t])\n\t\t}\n\n\t\tlocator.entityClient\n\t\t\t.load(CustomerTypeRef, neverNull(locator.logins.getUserController().user.customer))\n\t\t\t.then((customer) => {\n\t\t\t\tthis.updateCustomerData(customer)\n\t\t\t\treturn locator.logins.getUserController().loadCustomerInfo()\n\t\t\t})\n\t\t\t.then((customerInfo) => {\n\t\t\t\tthis._customerInfo = customerInfo\n\t\t\t\treturn locator.entityClient.load(AccountingInfoTypeRef, customerInfo.accountingInfo)\n\t\t\t})\n\t\t\t.then((accountingInfo) => {\n\t\t\t\tthis.updateAccountInfoData(accountingInfo)\n\t\t\t\tthis.updatePriceInfo()\n\t\t\t})\n\t\tconst loadingString = lang.get(\"loading_msg\")\n\t\tthis._currentPriceFieldValue = stream(loadingString)\n\t\tthis._subscriptionFieldValue = stream(loadingString)\n\t\tthis._orderAgreementFieldValue = stream(loadingString)\n\t\tthis._nextPriceFieldValue = stream(loadingString)\n\t\tthis._usersFieldValue = stream(loadingString)\n\t\tthis._storageFieldValue = stream(loadingString)\n\t\tthis._emailAliasFieldValue = stream(loadingString)\n\t\tthis._groupsFieldValue = stream(loadingString)\n\t\tthis._whitelabelFieldValue = stream(loadingString)\n\t\tthis._sharingFieldValue = stream(loadingString)\n\t\tthis._eventInvitesFieldValue = stream(loadingString)\n\t\tthis._autoResponderFieldValue = stream(loadingString)\n\t\tthis._selectedSubscriptionInterval = stream<PaymentInterval | null>(null)\n\n\t\tthis.updateBookings()\n\t}\n\n\tprivate onSubscriptionClick() {\n\t\tconst paymentMethod = this._accountingInfo ? getPaymentMethodType(this._accountingInfo) : null\n\n\t\tif (isIOSApp() && (paymentMethod == null || paymentMethod == PaymentMethodType.AppStore)) {\n\t\t\t// case 1: we are in iOS app and we either are not paying or are already on AppStore\n\t\t\tthis.handleAppStoreSubscriptionChange()\n\t\t} else if (paymentMethod == PaymentMethodType.AppStore && this._accountingInfo?.appStoreSubscription) {\n\t\t\t// case 2: we have a running AppStore subscription but this is not an iOS app\n\n\t\t\t// If there's a running App Store subscription it must be managed through Apple.\n\t\t\t// This includes the case where renewal is already disabled, but it's not expired yet.\n\t\t\t// Running subscription cannot be changed from other client, but it can still be managed through iOS app or when subscription expires.\n\t\t\treturn showManageThroughAppStoreDialog()\n\t\t} else {\n\t\t\t// other cases (not iOS app, not app store payment method, no running AppStore subscription, iOS but another payment method)\n\t\t\tif (this._accountingInfo && this._customer && this._customerInfo && this._lastBooking) {\n\t\t\t\tshowSwitchDialog(this._customer, this._customerInfo, this._accountingInfo, this._lastBooking, AvailablePlans, null)\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async handleUpgradeSubscription() {\n\t\tif (isIOSApp()) {\n\t\t\t// We pass `null` because we expect no subscription when upgrading\n\t\t\tconst appStoreSubscriptionOwnership = await queryAppStoreSubscriptionOwnership(null)\n\n\t\t\tif (appStoreSubscriptionOwnership !== MobilePaymentSubscriptionOwnership.NoSubscription) {\n\t\t\t\treturn Dialog.message(\n\t\t\t\t\tlang.getTranslation(\"storeMultiSubscriptionError_msg\", {\n\t\t\t\t\t\t\"{AppStorePayment}\": InfoLink.AppStorePayment,\n\t\t\t\t\t}),\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\n\t\treturn showUpgradeWizard(locator.logins)\n\t}\n\n\tprivate async handleAppStoreSubscriptionChange() {\n\t\tif (!this.mobilePaymentsFacade) {\n\t\t\tthrow Error(\"Not allowed to change AppStore subscription from web client\")\n\t\t}\n\n\t\tlet customer\n\t\tlet accountingInfo\n\t\tif (this._customer && this._accountingInfo) {\n\t\t\tcustomer = this._customer\n\t\t\taccountingInfo = this._accountingInfo\n\t\t} else {\n\t\t\treturn\n\t\t}\n\n\t\tconst appStoreSubscriptionOwnership = await queryAppStoreSubscriptionOwnership(base64ToUint8Array(base64ExtToBase64(customer._id)))\n\t\tconst isAppStorePayment = getPaymentMethodType(accountingInfo) === PaymentMethodType.AppStore\n\t\tconst userStatus = customer.approvalStatus\n\t\tconst hasAnActiveSubscription = isAppStorePayment && accountingInfo.appStoreSubscription != null\n\n\t\tif (hasAnActiveSubscription && !(await this.canManageAppStoreSubscriptionInApp(accountingInfo, appStoreSubscriptionOwnership))) {\n\t\t\treturn\n\t\t}\n\n\t\t// Show a dialog only if the user's Apple account's last transaction was with this customer ID\n\t\t//\n\t\t// This prevents the user from accidentally changing a subscription that they don't own\n\t\tif (appStoreSubscriptionOwnership === MobilePaymentSubscriptionOwnership.NotOwner) {\n\t\t\t// There's a subscription with this apple account that doesn't belong to this user\n\t\t\treturn Dialog.message(\n\t\t\t\tlang.getTranslation(\"storeMultiSubscriptionError_msg\", {\n\t\t\t\t\t\"{AppStorePayment}\": InfoLink.AppStorePayment,\n\t\t\t\t}),\n\t\t\t)\n\t\t} else if (\n\t\t\tisAppStorePayment &&\n\t\t\tappStoreSubscriptionOwnership === MobilePaymentSubscriptionOwnership.NoSubscription &&\n\t\t\tuserStatus === ApprovalStatus.REGISTRATION_APPROVED\n\t\t) {\n\t\t\t// User has an ongoing subscriptions but not on the current Apple Account, so we shouldn't allow them to change their plan with this account\n\t\t\t// instead of the account owner of the subscriptions\n\t\t\treturn Dialog.message(lang.getTranslation(\"storeNoSubscription_msg\", { \"{AppStorePayment}\": InfoLink.AppStorePayment }))\n\t\t} else if (appStoreSubscriptionOwnership === MobilePaymentSubscriptionOwnership.NoSubscription) {\n\t\t\t// User has no ongoing subscription and isn't approved. We should allow them to downgrade their accounts or resubscribe and\n\t\t\t// restart an Apple Subscription flow\n\t\t\tconst isResubscribe = await Dialog.choice(\n\t\t\t\tlang.getTranslation(\"storeDowngradeOrResubscribe_msg\", { \"{AppStoreDowngrade}\": InfoLink.AppStoreDowngrade }),\n\t\t\t\t[\n\t\t\t\t\t{\n\t\t\t\t\t\ttext: \"changePlan_action\",\n\t\t\t\t\t\tvalue: false,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttext: \"resubscribe_action\",\n\t\t\t\t\t\tvalue: true,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t)\n\n\t\t\tif (isResubscribe) {\n\t\t\t\tconst planType = await locator.logins.getUserController().getPlanType()\n\t\t\t\tconst customerId = locator.logins.getUserController().user.customer!\n\t\t\t\tconst customerIdBytes = base64ToUint8Array(base64ExtToBase64(customerId))\n\t\t\t\ttry {\n\t\t\t\t\tawait this.mobilePaymentsFacade.requestSubscriptionToPlan(\n\t\t\t\t\t\tappStorePlanName(planType),\n\t\t\t\t\t\tasPaymentInterval(accountingInfo.paymentInterval),\n\t\t\t\t\t\tcustomerIdBytes,\n\t\t\t\t\t)\n\t\t\t\t} catch (e) {\n\t\t\t\t\tif (e instanceof MobilePaymentError) {\n\t\t\t\t\t\tconsole.error(\"AppStore subscription failed\", e)\n\t\t\t\t\t\tDialog.message(\"appStoreSubscriptionError_msg\", e.message)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow e\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (this._customerInfo && this._lastBooking) {\n\t\t\t\t\treturn showSwitchDialog(customer, this._customerInfo, accountingInfo, this._lastBooking, AvailablePlans, null)\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._customerInfo && this._lastBooking) {\n\t\t\t\treturn showSwitchDialog(customer, this._customerInfo, accountingInfo, this._lastBooking, AvailablePlans, null)\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async canManageAppStoreSubscriptionInApp(accountingInfo: AccountingInfo, ownership: MobilePaymentSubscriptionOwnership): Promise<boolean> {\n\t\tif (ownership === MobilePaymentSubscriptionOwnership.NotOwner) {\n\t\t\treturn true\n\t\t}\n\n\t\tconst appStoreSubscriptionData = await locator.serviceExecutor.get(\n\t\t\tAppStoreSubscriptionService,\n\t\t\tcreateAppStoreSubscriptionGetIn({ subscriptionId: elementIdPart(assertNotNull(accountingInfo.appStoreSubscription)) }),\n\t\t)\n\n\t\tif (!appStoreSubscriptionData || appStoreSubscriptionData.app == null) {\n\t\t\tthrow new ProgrammingError(\"Failed to determine subscription origin\")\n\t\t}\n\n\t\tconst isMailSubscription = appStoreSubscriptionData.app === SubscriptionApp.Mail\n\n\t\tif (client.isCalendarApp() && isMailSubscription) {\n\t\t\treturn await this.handleAppOpen(SubscriptionApp.Mail)\n\t\t} else if (!client.isCalendarApp() && !isMailSubscription) {\n\t\t\treturn await this.handleAppOpen(SubscriptionApp.Calendar)\n\t\t}\n\n\t\treturn true\n\t}\n\n\tprivate async handleAppOpen(app: SubscriptionApp) {\n\t\tconst appName = app === SubscriptionApp.Calendar ? \"Tuta Calendar\" : \"Tuta Mail\"\n\t\tconst dialogResult = await Dialog.confirm(lang.getTranslation(\"handleSubscriptionOnApp_msg\", { \"{1}\": appName }), \"yes_label\")\n\t\tconst query = stringToBase64(`settings=subscription`)\n\n\t\tif (!dialogResult) {\n\t\t\treturn false\n\t\t}\n\n\t\tif (app === SubscriptionApp.Calendar) {\n\t\t\tlocator.systemFacade.openCalendarApp(query)\n\t\t} else {\n\t\t\tlocator.systemFacade.openMailApp(query)\n\t\t}\n\n\t\treturn false\n\t}\n\n\tprivate openAppDialogCallback(open: boolean, app: AppType.Mail | AppType.Calendar) {\n\t\tif (!open) {\n\t\t\treturn\n\t\t}\n\n\t\tconst appName = app === AppType.Mail ? \"Tuta Mail\" : \"Tuta Calendar\"\n\t}\n\n\tprivate showOrderAgreement(): boolean {\n\t\treturn (\n\t\t\tlocator.logins.getUserController().isPaidAccount() &&\n\t\t\t((this._customer != null && this._customer.businessUse) ||\n\t\t\t\t(this._customer != null && (this._customer.orderProcessingAgreement != null || this._customer.orderProcessingAgreementNeeded)))\n\t\t)\n\t}\n\n\tprivate async updateCustomerData(customer: Customer): Promise<void> {\n\t\tthis._customer = customer\n\n\t\tif (customer.orderProcessingAgreement) {\n\t\t\tthis._orderAgreement = await locator.entityClient.load(OrderProcessingAgreementTypeRef, customer.orderProcessingAgreement)\n\t\t} else {\n\t\t\tthis._orderAgreement = null\n\t\t}\n\n\t\tif (customer.orderProcessingAgreementNeeded) {\n\t\t\tthis._orderAgreementFieldValue(lang.get(\"signingNeeded_msg\"))\n\t\t} else if (this._orderAgreement) {\n\t\t\tthis._orderAgreementFieldValue(\n\t\t\t\tlang.get(\"signedOn_msg\", {\n\t\t\t\t\t\"{date}\": formatDate(this._orderAgreement.signatureDate),\n\t\t\t\t}),\n\t\t\t)\n\t\t} else {\n\t\t\tthis._orderAgreementFieldValue(lang.get(\"notSigned_msg\"))\n\t\t}\n\n\t\tm.redraw()\n\t}\n\n\tprivate showPriceData(): boolean {\n\t\tconst isAppStorePayment = this._accountingInfo && getPaymentMethodType(this._accountingInfo) === PaymentMethodType.AppStore\n\t\treturn locator.logins.getUserController().isPaidAccount() && !isIOSApp() && !isAppStorePayment\n\t}\n\n\tprivate async updatePriceInfo(): Promise<void> {\n\t\tif (!this.showPriceData()) {\n\t\t\treturn\n\t\t}\n\n\t\tconst priceServiceReturn = await locator.bookingFacade.getCurrentPrice()\n\t\tif (priceServiceReturn.currentPriceThisPeriod != null && priceServiceReturn.currentPriceNextPeriod != null) {\n\t\t\tif (priceServiceReturn.currentPriceThisPeriod.price !== priceServiceReturn.currentPriceNextPeriod.price) {\n\t\t\t\tthis._currentPriceFieldValue(formatPriceDataWithInfo(priceServiceReturn.currentPriceThisPeriod))\n\n\t\t\t\tthis._nextPriceFieldValue(formatPriceDataWithInfo(neverNull(priceServiceReturn.currentPriceNextPeriod)))\n\n\t\t\t\tthis._nextPeriodPriceVisible = true\n\t\t\t} else {\n\t\t\t\tthis._currentPriceFieldValue(formatPriceDataWithInfo(priceServiceReturn.currentPriceThisPeriod))\n\n\t\t\t\tthis._nextPeriodPriceVisible = false\n\t\t\t}\n\n\t\t\tthis._periodEndDate = priceServiceReturn.periodEndDate\n\t\t\tm.redraw()\n\t\t}\n\t}\n\n\tprivate updateAccountInfoData(accountingInfo: AccountingInfo) {\n\t\tthis._accountingInfo = accountingInfo\n\n\t\tthis._selectedSubscriptionInterval(asPaymentInterval(accountingInfo.paymentInterval))\n\n\t\tm.redraw()\n\t}\n\n\tprivate async updateSubscriptionField() {\n\t\tconst userController = locator.logins.getUserController()\n\t\tconst accountType: AccountType = downcast(userController.user.accountType)\n\t\tconst planType = await userController.getPlanType()\n\n\t\tthis._subscriptionFieldValue(_getAccountTypeName(accountType, planType))\n\t}\n\n\tprivate async updateBookings(): Promise<void> {\n\t\tconst userController = locator.logins.getUserController()\n\n\t\tconst customer = await userController.loadCustomer()\n\t\tlet customerInfo: CustomerInfo\n\t\ttry {\n\t\t\tcustomerInfo = await userController.loadCustomerInfo()\n\t\t} catch (e) {\n\t\t\tif (e instanceof NotFoundError) {\n\t\t\t\tconsole.log(\"could not update bookings as customer info does not exist (moved between free/premium lists)\")\n\t\t\t\treturn\n\t\t\t} else {\n\t\t\t\tthrow e\n\t\t\t}\n\t\t}\n\n\t\tthis._customerInfo = customerInfo\n\t\tconst bookings = await locator.entityClient.loadRange(BookingTypeRef, neverNull(customerInfo.bookings).items, GENERATED_MAX_ID, 1, true)\n\t\tthis._lastBooking = bookings.length > 0 ? bookings[bookings.length - 1] : null\n\t\tthis._customer = customer\n\t\tthis.currentPlanType = await userController.getPlanType()\n\n\t\tconst planConfig = await userController.getPlanConfig()\n\t\tawait this.updateSubscriptionField()\n\n\t\tawait Promise.all([\n\t\t\tthis.updateUserField(),\n\t\t\tthis.updateStorageField(customer, customerInfo),\n\t\t\tthis.updateAliasField(),\n\t\t\tthis.updateGroupsField(),\n\t\t\tthis.updateWhitelabelField(planConfig),\n\t\t\tthis.updateSharingField(planConfig),\n\t\t\tthis.updateEventInvitesField(planConfig),\n\t\t\tthis.updateAutoResponderField(planConfig),\n\t\t])\n\t\tm.redraw()\n\t}\n\n\tprivate async updateUserField(): Promise<void> {\n\t\tthis._usersFieldValue(\"\" + Math.max(1, getCurrentCount(BookingItemFeatureType.LegacyUsers, this._lastBooking)))\n\t}\n\n\tprivate async updateStorageField(customer: Customer, customerInfo: CustomerInfo): Promise<void> {\n\t\tconst usedStorage = await locator.customerFacade.readUsedCustomerStorage(getEtId(customer))\n\t\tconst usedStorageFormatted = formatStorageSize(Number(usedStorage))\n\t\tconst totalStorageFormatted = formatStorageSize(getTotalStorageCapacityPerCustomer(customer, customerInfo, this._lastBooking) * Const.MEMORY_GB_FACTOR)\n\n\t\tthis._storageFieldValue(\n\t\t\tlang.get(\"amountUsedOf_label\", {\n\t\t\t\t\"{amount}\": usedStorageFormatted,\n\t\t\t\t\"{totalAmount}\": totalStorageFormatted,\n\t\t\t}),\n\t\t)\n\t}\n\n\tprivate async updateAliasField(): Promise<void> {\n\t\t// we pass in the user group id here even though for legacy plans the id is ignored\n\t\tconst counters = await locator.mailAddressFacade.getAliasCounters(locator.logins.getUserController().user.userGroup.group)\n\t\tthis._emailAliasFieldValue(\n\t\t\tlang.get(\"amountUsedAndActivatedOf_label\", {\n\t\t\t\t\"{used}\": counters.usedAliases,\n\t\t\t\t\"{active}\": counters.enabledAliases,\n\t\t\t\t\"{totalAmount}\": counters.totalAliases,\n\t\t\t}),\n\t\t)\n\t}\n\n\tprivate async updateGroupsField(): Promise<void> {\n\t\tconst sharedMailCount = getCurrentCount(BookingItemFeatureType.SharedMailGroup, this._lastBooking)\n\t\t// Plural forms and number placement inside the string should be handled by the translation framework, but this is what we got now.\n\t\tconst sharedMailText = sharedMailCount + \" \" + lang.get(sharedMailCount === 1 ? \"sharedMailbox_label\" : \"sharedMailboxes_label\")\n\t\tthis._groupsFieldValue(sharedMailText)\n\t}\n\n\tprivate async updateWhitelabelField(planConfig: PlanConfiguration): Promise<void> {\n\t\tif (isWhitelabelActive(this._lastBooking, planConfig)) {\n\t\t\tthis._whitelabelFieldValue(lang.get(\"active_label\"))\n\t\t} else {\n\t\t\tthis._whitelabelFieldValue(lang.get(\"deactivated_label\"))\n\t\t}\n\t}\n\n\tprivate async updateSharingField(planConfig: PlanConfiguration): Promise<void> {\n\t\tif (isSharingActive(this._lastBooking, planConfig)) {\n\t\t\tthis._sharingFieldValue(lang.get(\"active_label\"))\n\t\t} else {\n\t\t\tthis._sharingFieldValue(lang.get(\"deactivated_label\"))\n\t\t}\n\t}\n\n\tprivate async updateEventInvitesField(planConfig: PlanConfiguration): Promise<void> {\n\t\tif (!this._customer) {\n\t\t\tthis._eventInvitesFieldValue(\"\")\n\t\t} else if (isEventInvitesActive(this._lastBooking, planConfig)) {\n\t\t\tthis._eventInvitesFieldValue(lang.get(\"active_label\"))\n\t\t} else {\n\t\t\tthis._eventInvitesFieldValue(lang.get(\"deactivated_label\"))\n\t\t}\n\t}\n\n\tprivate async updateAutoResponderField(planConfig: PlanConfiguration): Promise<void> {\n\t\tif (!this._customer) {\n\t\t\tthis._autoResponderFieldValue(\"\")\n\t\t} else if (isAutoResponderActive(this._lastBooking, planConfig)) {\n\t\t\tthis._autoResponderFieldValue(lang.get(\"active_label\"))\n\t\t} else {\n\t\t\tthis._autoResponderFieldValue(lang.get(\"deactivated_label\"))\n\t\t}\n\t}\n\n\tasync entityEventsReceived(updates: ReadonlyArray<EntityUpdateData>): Promise<void> {\n\t\tawait promiseMap(updates, (update) => this.processUpdate(update))\n\t}\n\n\tasync processUpdate(update: EntityUpdateData): Promise<void> {\n\t\tconst { instanceListId, instanceId } = update\n\n\t\tif (isUpdateForTypeRef(AccountingInfoTypeRef, update)) {\n\t\t\tconst accountingInfo = await locator.entityClient.load(AccountingInfoTypeRef, instanceId)\n\t\t\tthis.updateAccountInfoData(accountingInfo)\n\t\t\treturn await this.updatePriceInfo()\n\t\t} else if (isUpdateForTypeRef(UserTypeRef, update)) {\n\t\t\tawait this.updateBookings()\n\t\t\treturn await this.updatePriceInfo()\n\t\t} else if (isUpdateForTypeRef(BookingTypeRef, update)) {\n\t\t\tawait this.updateBookings()\n\t\t\treturn await this.updatePriceInfo()\n\t\t} else if (isUpdateForTypeRef(CustomerTypeRef, update)) {\n\t\t\tconst customer = await locator.entityClient.load(CustomerTypeRef, instanceId)\n\t\t\treturn await this.updateCustomerData(customer)\n\t\t} else if (isUpdateForTypeRef(CustomerInfoTypeRef, update)) {\n\t\t\t// needed to update the displayed plan\n\t\t\tawait this.updateBookings()\n\t\t\treturn await this.updatePriceInfo()\n\t\t} else if (isUpdateForTypeRef(GiftCardTypeRef, update)) {\n\t\t\tconst giftCard = await locator.entityClient.load(GiftCardTypeRef, [instanceListId, instanceId])\n\t\t\tthis._giftCards.set(elementIdPart(giftCard._id), giftCard)\n\t\t\tif (update.operation === OperationType.CREATE) this._giftCardsExpanded(true)\n\t\t}\n\t}\n\n\tprivate renderIntervals() {\n\t\tconst isAppStorePayment = this._accountingInfo && getPaymentMethodType(this._accountingInfo) === PaymentMethodType.AppStore\n\t\tif (isIOSApp() || isAppStorePayment) {\n\t\t\treturn\n\t\t}\n\n\t\tconst subscriptionPeriods: SelectorItemList<PaymentInterval | null> = [\n\t\t\t{\n\t\t\t\tname: lang.get(\"pricing.yearly_label\"),\n\t\t\t\tvalue: PaymentInterval.Yearly,\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: lang.get(\"pricing.monthly_label\"),\n\t\t\t\tvalue: PaymentInterval.Monthly,\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: lang.get(\"loading_msg\"),\n\t\t\t\tvalue: null,\n\t\t\t\tselectable: false,\n\t\t\t},\n\t\t]\n\n\t\tconst bonusMonths = this._lastBooking ? Number(this._lastBooking.bonusMonth) : 0\n\t\treturn [\n\t\t\tm(DropDownSelector, {\n\t\t\t\tlabel: \"paymentInterval_label\",\n\t\t\t\thelpLabel: () => this.getChargeDateText(),\n\t\t\t\titems: subscriptionPeriods,\n\t\t\t\tselectedValue: this._selectedSubscriptionInterval(),\n\t\t\t\tdropdownWidth: 300,\n\t\t\t\tselectionChangedHandler: (value: number) => {\n\t\t\t\t\tif (this._accountingInfo) {\n\t\t\t\t\t\tshowChangeSubscriptionIntervalDialog(this._accountingInfo, value, this._periodEndDate)\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t}),\n\t\t\tbonusMonths === 0\n\t\t\t\t? null\n\t\t\t\t: m(TextField, {\n\t\t\t\t\t\tlabel: \"bonus_label\",\n\t\t\t\t\t\tvalue: lang.get(\"bonusMonth_msg\", { \"{months}\": bonusMonths }),\n\t\t\t\t\t\tisReadOnly: true,\n\t\t\t\t  }),\n\t\t\tm(TextField, {\n\t\t\t\tlabel:\n\t\t\t\t\tthis._nextPeriodPriceVisible && this._periodEndDate\n\t\t\t\t\t\t? lang.getTranslation(\"priceTill_label\", {\n\t\t\t\t\t\t\t\t\"{date}\": formatDate(this._periodEndDate),\n\t\t\t\t\t\t  })\n\t\t\t\t\t\t: \"price_label\",\n\t\t\t\tvalue: this._currentPriceFieldValue(),\n\t\t\t\toninput: this._currentPriceFieldValue,\n\t\t\t\tisReadOnly: true,\n\t\t\t\thelpLabel: () => (this._customer && this._customer.businessUse === true ? lang.get(\"pricing.subscriptionPeriodInfoBusiness_msg\") : null),\n\t\t\t}),\n\t\t]\n\t}\n\n\tprivate renderAgreement() {\n\t\treturn m(TextField, {\n\t\t\tlabel: \"orderProcessingAgreement_label\",\n\t\t\thelpLabel: () => lang.get(\"orderProcessingAgreementInfo_msg\"),\n\t\t\tvalue: this._orderAgreementFieldValue(),\n\t\t\toninput: this._orderAgreementFieldValue,\n\t\t\tisReadOnly: true,\n\t\t\tinjectionsRight: () => {\n\t\t\t\tif (this._orderAgreement && this._customer && this._customer.orderProcessingAgreementNeeded) {\n\t\t\t\t\treturn [this.renderSignProcessingAgreementAction(), this.renderShowProcessingAgreementAction()]\n\t\t\t\t} else if (this._orderAgreement) {\n\t\t\t\t\treturn [this.renderShowProcessingAgreementAction()]\n\t\t\t\t} else if (this._customer && this._customer.orderProcessingAgreementNeeded) {\n\t\t\t\t\treturn [this.renderSignProcessingAgreementAction()]\n\t\t\t\t} else {\n\t\t\t\t\treturn []\n\t\t\t\t}\n\t\t\t},\n\t\t})\n\t}\n\n\tprivate renderShowProcessingAgreementAction() {\n\t\treturn m(IconButton, {\n\t\t\ttitle: \"show_action\",\n\t\t\tclick: () =>\n\t\t\t\tlocator.entityClient\n\t\t\t\t\t.load(GroupInfoTypeRef, neverNull(this._orderAgreement).signerUserGroupInfo)\n\t\t\t\t\t.then((signerUserGroupInfo) => SignOrderAgreementDialog.showForViewing(neverNull(this._orderAgreement), signerUserGroupInfo)),\n\t\t\ticon: Icons.Download,\n\t\t\tsize: ButtonSize.Compact,\n\t\t})\n\t}\n\n\tprivate renderSignProcessingAgreementAction() {\n\t\treturn m(IconButton, {\n\t\t\ttitle: \"sign_action\",\n\t\t\tclick: () => SignOrderAgreementDialog.showForSigning(neverNull(this._customer), neverNull(this._accountingInfo)),\n\t\t\ticon: Icons.Edit,\n\t\t\tsize: ButtonSize.Compact,\n\t\t})\n\t}\n\n\tprivate getChargeDateText(): string {\n\t\tif (this._periodEndDate) {\n\t\t\tconst chargeDate = formatDate(incrementDate(new Date(this._periodEndDate), 1))\n\t\t\treturn lang.get(\"nextChargeOn_label\", { \"{chargeDate}\": chargeDate })\n\t\t} else {\n\t\t\treturn \"\"\n\t\t}\n\t}\n}\n\nfunction _getAccountTypeName(type: AccountType, subscription: PlanType): string {\n\tif (type === AccountType.PAID) {\n\t\treturn getDisplayNameOfPlanType(subscription)\n\t} else {\n\t\treturn AccountTypeNames[type]\n\t}\n}\n\nfunction showChangeSubscriptionIntervalDialog(accountingInfo: AccountingInfo, paymentInterval: PaymentInterval, periodEndDate: Date | null): void {\n\tif (accountingInfo && accountingInfo.invoiceCountry && asPaymentInterval(accountingInfo.paymentInterval) !== paymentInterval) {\n\t\tconst confirmationMessage = periodEndDate\n\t\t\t? lang.getTranslation(\"subscriptionChangePeriod_msg\", {\n\t\t\t\t\t\"{1}\": formatDate(periodEndDate),\n\t\t\t  })\n\t\t\t: \"subscriptionChange_msg\"\n\n\t\tDialog.confirm(confirmationMessage).then(async (confirmed) => {\n\t\t\tif (confirmed) {\n\t\t\t\tawait locator.customerFacade.changePaymentInterval(accountingInfo, paymentInterval)\n\t\t\t}\n\t\t})\n\t}\n}\n\nfunction renderGiftCardTable(giftCards: GiftCard[], isPremiumPredicate: () => boolean): Children {\n\tconst addButtonAttrs: IconButtonAttrs = {\n\t\ttitle: \"buyGiftCard_label\",\n\t\tclick: createNotAvailableForFreeClickHandler(NewPaidPlans, () => showPurchaseGiftCardDialog(), isPremiumPredicate),\n\t\ticon: Icons.Add,\n\t\tsize: ButtonSize.Compact,\n\t}\n\tconst columnHeading: [TranslationKey, TranslationKey] = [\"purchaseDate_label\", \"value_label\"]\n\tconst columnWidths = [ColumnWidth.Largest, ColumnWidth.Small, ColumnWidth.Small]\n\tconst lines = giftCards\n\t\t.filter((giftCard) => giftCard.status === GiftCardStatus.Usable)\n\t\t.map((giftCard) => {\n\t\t\treturn {\n\t\t\t\tcells: [formatDate(giftCard.orderDate), formatPrice(parseFloat(giftCard.value), true)],\n\t\t\t\tactionButtonAttrs: attachDropdown({\n\t\t\t\t\tmainButtonAttrs: {\n\t\t\t\t\t\ttitle: \"options_action\",\n\t\t\t\t\t\ticon: Icons.More,\n\t\t\t\t\t\tsize: ButtonSize.Compact,\n\t\t\t\t\t},\n\t\t\t\t\tchildAttrs: () => [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: \"view_label\",\n\t\t\t\t\t\t\tclick: () => showGiftCardToShare(giftCard),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: \"edit_action\",\n\t\t\t\t\t\t\tclick: () => {\n\t\t\t\t\t\t\t\tlet message = stream(giftCard.message)\n\t\t\t\t\t\t\t\tDialog.showActionDialog({\n\t\t\t\t\t\t\t\t\ttitle: \"editMessage_label\",\n\t\t\t\t\t\t\t\t\tchild: () =>\n\t\t\t\t\t\t\t\t\t\tm(\n\t\t\t\t\t\t\t\t\t\t\t\".flex-center\",\n\t\t\t\t\t\t\t\t\t\t\tm(GiftCardMessageEditorField, {\n\t\t\t\t\t\t\t\t\t\t\t\tmessage: message(),\n\t\t\t\t\t\t\t\t\t\t\t\tonMessageChanged: message,\n\t\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\tokAction: (dialog: Dialog) => {\n\t\t\t\t\t\t\t\t\t\tgiftCard.message = message()\n\t\t\t\t\t\t\t\t\t\tlocator.entityClient\n\t\t\t\t\t\t\t\t\t\t\t.update(giftCard)\n\t\t\t\t\t\t\t\t\t\t\t.then(() => dialog.close())\n\t\t\t\t\t\t\t\t\t\t\t.catch(() => Dialog.message(\"giftCardUpdateError_msg\"))\n\t\t\t\t\t\t\t\t\t\tshowGiftCardToShare(giftCard)\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tokActionTextId: \"save_action\",\n\t\t\t\t\t\t\t\t\ttype: DialogType.EditSmall,\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t}),\n\t\t\t}\n\t\t})\n\treturn [\n\t\tm(Table, {\n\t\t\taddButtonAttrs,\n\t\t\tcolumnHeading,\n\t\t\tcolumnWidths,\n\t\t\tlines,\n\t\t\tshowActionButtonColumn: true,\n\t\t}),\n\t\tm(\".small\", renderTermsAndConditionsButton(TermsSection.GiftCards, CURRENT_GIFT_CARD_TERMS_VERSION)),\n\t]\n}\n"]}