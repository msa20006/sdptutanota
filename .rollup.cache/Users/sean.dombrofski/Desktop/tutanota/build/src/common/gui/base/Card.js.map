{"version":3,"file":"Card.js","sourceRoot":"","sources":["../../../../../src/common/gui/base/Card.ts"],"names":[],"mappings":"AAAA,OAAO,CAAsC,MAAM,SAAS,CAAA;AAW5D;;;;;;;;;;;GAWG;AACH,MAAM,OAAO,IAAI;IAChB,IAAI,CAAC,EAAE,KAAK,EAAE,QAAQ,EAA0B;QAC/C,OAAO,CAAC,CACP,GAAG,KAAK,CAAC,eAAe,IAAI,KAAK,yBAAyB,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,+BAA+B,CAAC,CAAC,CAAC,EAAE,EAAE,EACrH;YACC,KAAK,EAAE,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,GAAG,CAAC;YAC/B,KAAK,EAAE,KAAK,CAAC,KAAK;SACa,EAChC,QAAQ,CACR,CAAA;IACF,CAAC;CACD","sourcesContent":["import m, { Children, ClassComponent, Vnode } from \"mithril\"\n\nexport interface CardAttrs {\n\trootElementType?: \"div\" | \"section\"\n\tclasses?: Array<string>\n\tstyle?: Partial<Pick<CSSStyleDeclaration, \"padding\">>\n\tshouldDivide?: boolean\n}\n\ntype HTMLElementWithAttrs = Partial<Pick<m.Attributes, \"class\"> & Omit<HTMLElement, \"style\"> & CardAttrs>\n\n/**\n * Simple card component\n * @see Component attributes: {CardAttrs}\n * @example\n * m(Card, {\n *     rootElementType: \"section\", // Changing the default root element\n *     classes: [\"mt\"], // Adding new styles\n *     style: {\n *         \"font-size\": px(size.font_size_base * 1.25) // Overriding the component style\n *     }\n * }, m(\"span\", \"Child span text\")),\n */\nexport class Card implements ClassComponent<CardAttrs> {\n\tview({ attrs, children }: Vnode<CardAttrs, this>): Children | void | null {\n\t\treturn m(\n\t\t\t`${attrs.rootElementType ?? \"div\"}.tutaui-card-container${attrs.shouldDivide ? \".tutaui-card-container-divide\" : \"\"}`,\n\t\t\t{\n\t\t\t\tclass: attrs.classes?.join(\" \"),\n\t\t\t\tstyle: attrs.style,\n\t\t\t} satisfies HTMLElementWithAttrs,\n\t\t\tchildren,\n\t\t)\n\t}\n}\n"]}