{"version":3,"file":"sys-v92.js","sourceRoot":"","sources":["../../../../../../../src/common/api/worker/offline/migrations/sys-v92.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,qBAAqB,EAAE,sBAAsB,EAAE,MAAM,0BAA0B,CAAA;AACxF,OAAO,EAA+B,uBAAuB,EAAE,YAAY,EAAE,WAAW,EAAE,MAAM,mCAAmC,CAAA;AACnI,OAAO,EAAE,qBAAqB,EAAE,MAAM,sCAAsC,CAAA;AAC5E,OAAO,EAAQ,WAAW,EAAE,MAAM,wCAAwC,CAAA;AAE1E,MAAM,CAAC,MAAM,KAAK,GAAqB;IACtC,GAAG,EAAE,KAAK;IACV,OAAO,EAAE,EAAE;IACX,KAAK,CAAC,OAAO,CAAC,OAAuB;QACpC,MAAM,sBAAsB,CAAC,uBAAuB,EAAE,OAAO,EAAE,CAAC,kBAAkB,CAAC,CAAC,CAAA;QACpF,MAAM,sBAAsB,CAAC,WAAW,EAAE,OAAO,EAAE;YAClD,CAAC,CAAO,EAAE,EAAE;gBACX,IAAI,CAAC,CAAC,SAAS,EAAE,CAAC;oBACjB,kBAAkB,CAAC,CAAC,CAAC,SAAS,CAAC,CAAA;gBAChC,CAAC;gBACD,OAAO,CAAC,CAAA;YACT,CAAC;SACD,CAAC,CAAA;QACF,sBAAsB;QACtB,MAAM,qBAAqB,CAAC,OAAO,EAAE,YAAY,CAAC,CAAA;QAClD,yIAAyI;QACzI,MAAM,qBAAqB,CAAC,OAAO,EAAE,WAAW,CAAC,CAAA;IAClD,CAAC;CACD,CAAA;AAED,SAAS,kBAAkB,CAAyC,MAAS;IAC5E,IAAI,MAAM,CAAC,eAAe,EAAE,CAAC;QAC5B,MAAM,CAAC,eAAe,GAAG,qBAAqB,CAAC,GAAG,CAAA;IACnD,CAAC;SAAM,CAAC;QACP,MAAM,CAAC,eAAe,GAAG,qBAAqB,CAAC,oBAAoB,CAAA;IACpE,CAAC;IACD,OAAO,MAAM,CAAA;AACd,CAAC","sourcesContent":["import { OfflineMigration } from \"../OfflineStorageMigrator.js\"\nimport { OfflineStorage } from \"../OfflineStorage.js\"\nimport { deleteInstancesOfType, migrateAllListElements } from \"../StandardMigrations.js\"\nimport { BucketKey, BucketPermission, BucketPermissionTypeRef, GroupTypeRef, UserTypeRef } from \"../../../entities/sys/TypeRefs.js\"\nimport { CryptoProtocolVersion } from \"../../../common/TutanotaConstants.js\"\nimport { Mail, MailTypeRef } from \"../../../entities/tutanota/TypeRefs.js\"\n\nexport const sys92: OfflineMigration = {\n\tapp: \"sys\",\n\tversion: 92,\n\tasync migrate(storage: OfflineStorage) {\n\t\tawait migrateAllListElements(BucketPermissionTypeRef, storage, [addProtocolVersion])\n\t\tawait migrateAllListElements(MailTypeRef, storage, [\n\t\t\t(e: Mail) => {\n\t\t\t\tif (e.bucketKey) {\n\t\t\t\t\taddProtocolVersion(e.bucketKey)\n\t\t\t\t}\n\t\t\t\treturn e\n\t\t\t},\n\t\t])\n\t\t// KeyPair was changed\n\t\tawait deleteInstancesOfType(storage, GroupTypeRef)\n\t\t// We also delete UserType ref to disable offline login. Otherwise, clients will see an unexpected error message with pure offline login.\n\t\tawait deleteInstancesOfType(storage, UserTypeRef)\n\t},\n}\n\nfunction addProtocolVersion<T extends BucketKey | BucketPermission>(entity: T): T {\n\tif (entity.pubEncBucketKey) {\n\t\tentity.protocolVersion = CryptoProtocolVersion.RSA\n\t} else {\n\t\tentity.protocolVersion = CryptoProtocolVersion.SYMMETRIC_ENCRYPTION\n\t}\n\treturn entity\n}\n"]}