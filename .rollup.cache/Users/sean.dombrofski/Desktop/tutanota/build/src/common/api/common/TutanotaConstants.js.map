{"version":3,"file":"TutanotaConstants.js","sourceRoot":"","sources":["../../../../../src/common/api/common/TutanotaConstants.ts"],"names":[],"mappings":"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AAE;QACJ,IAAI,EAAE,GAAG;QACT,IAAI,EAAE,GAAG;KACT;IACD,CAAC,EAAE;QACF,IAAI,EAAE,GAAG;QACT,IAAI,EAAE,GAAG;KACT;IACD,CAAC,EAAE;QACF,IAAI,EAAE,GAAG;QACT,IAAI,EAAE,GAAG;KACT;IACD,CAAC,EAAE;QACF,IAAI,EAAE,GAAG;QACT,IAAI,EAAE,GAAG;KACT;IACD,CAAC,EAAE;QACF,IAAI,EAAE,GAAG;QACT,IAAI,EAAE,GAAG;KACT;IACD,CAAC,EAAE;QACF,IAAI,EAAE,GAAG;QACT,IAAI,EAAE,GAAG;KACT;IACD,CAAC,EAAE;QACF,IAAI,EAAE,GAAG;QACT,IAAI,EAAE,GAAG;KACT;IACD,CAAC,EAAE;QACF,IAAI,EAAE,GAAG;QACT,IAAI,EAAE,GAAG;KACT;IACD,CAAC,EAAE;QACF,IAAI,EAAE,GAAG;QACT,IAAI,EAAE,GAAG;KACT;IACD,CAAC,EAAE;QACF,IAAI,EAAE,GAAG;QACT,IAAI,EAAE,GAAG;KACT;IACD,CAAC,EAAE;QACF,IAAI,EAAE,GAAG;QACT,IAAI,EAAE,GAAG;KACT;IACD,CAAC,EAAE;QACF,IAAI,EAAE,GAAG;QACT,IAAI,EAAE,GAAG;KACT;IACD,CAAC,EAAE;QACF,IAAI,EAAE,GAAG;QACT,IAAI,EAAE,GAAG;KACT;IACD,CAAC,EAAE;QACF,IAAI,EAAE,GAAG;QACT,IAAI,EAAE,GAAG;KACT;IACD,CAAC,EAAE;QACF,IAAI,EAAE,GAAG;QACT,IAAI,EAAE,GAAG;KACT;IACD,CAAC,EAAE;QACF,IAAI,EAAE,GAAG;QACT,IAAI,EAAE,GAAG;KACT;IACD,CAAC,EAAE;QACF,IAAI,EAAE,GAAG;QACT,IAAI,EAAE,GAAG;KACT;IACD,CAAC,EAAE;QACF,IAAI,EAAE,GAAG;QACT,IAAI,EAAE,GAAG;KACT;IACD,CAAC,EAAE;QACF,IAAI,EAAE,GAAG;QACT,IAAI,EAAE,GAAG;KACT;IACD,CAAC,EAAE;QACF,IAAI,EAAE,GAAG;QACT,IAAI,EAAE,GAAG;KACT;IACD,CAAC,E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","sourcesContent":["//@bundleInto:common-min\n\nimport { DAY_IN_MILLIS, downcast } from \"@tutao/tutanota-utils\"\nimport type { CertificateInfo, CreditCard, EmailSenderListElement, GroupMembership } from \"../entities/sys/TypeRefs.js\"\nimport { AccountingInfo, Customer } from \"../entities/sys/TypeRefs.js\"\nimport type { CalendarEventAttendee, ContactCustomDate, ContactRelationship, UserSettingsGroupRoot } from \"../entities/tutanota/TypeRefs.js\"\nimport { ContactSocialId, MailFolder } from \"../entities/tutanota/TypeRefs.js\"\nimport { isApp, isElectronClient, isIOSApp } from \"./Env\"\nimport type { Country } from \"./CountryList\"\nimport { ProgrammingError } from \"./error/ProgrammingError\"\nimport { TranslationKey } from \"../../misc/LanguageViewModel.js\"\n\nexport const MAX_NBR_MOVE_DELETE_MAIL_SERVICE = 50\n\n// visible for testing\nexport const MAX_BLOB_SIZE_BYTES = 1024 * 1024 * 10\nexport const REQUEST_SIZE_LIMIT_DEFAULT = 1024 * 1024\nexport const REQUEST_SIZE_LIMIT_MAP: Map<string, number> = new Map([\n\t[\"/rest/storage/blobservice\", MAX_BLOB_SIZE_BYTES + 100], // overhead for encryption\n\t[\"/rest/tutanota/filedataservice\", 1024 * 1024 * 25],\n\t[\"/rest/tutanota/draftservice\", 1024 * 1024], // should be large enough\n])\n\nexport const SYSTEM_GROUP_MAIL_ADDRESS = \"system@tutanota.de\"\n\nexport const getMailFolderType = (folder: MailFolder): MailSetKind => downcast(folder.folderType)\n\nexport function isFolder(folder: MailFolder): boolean {\n\treturn folder.folderType !== MailSetKind.ALL && folder.folderType !== MailSetKind.LABEL && folder.folderType !== MailSetKind.Imported\n}\n\nexport function isLabel(folder: MailFolder): boolean {\n\treturn folder.folderType === MailSetKind.LABEL\n}\n\ntype ObjectPropertyKey = string | number | symbol\nexport const reverse = <K extends ObjectPropertyKey, V extends ObjectPropertyKey>(objectMap: Record<K, V>): Record<V, K> =>\n\tObject.keys(objectMap).reduce((r, k) => {\n\t\t// @ts-ignore\n\t\tconst v = objectMap[downcast(k)]\n\t\treturn Object.assign(r, { [v]: k })\n\t}, {} as Record<V, K>)\n\nexport const enum OutOfOfficeNotificationMessageType {\n\tDefault = \"0\",\n\tInsideOrganization = \"1\",\n}\n\nexport const OUT_OF_OFFICE_SUBJECT_PREFIX = \"Auto-reply: \"\n\nexport enum GroupType {\n\tUser = \"0\",\n\tAdmin = \"1\",\n\tMailingList = \"2\",\n\tCustomer = \"3\",\n\tExternal = \"4\",\n\tMail = \"5\",\n\tContact = \"6\",\n\tFile = \"7\",\n\tLocalAdmin = \"8\",\n\tCalendar = \"9\",\n\tTemplate = \"10\",\n\tContactList = \"11\",\n}\n\nexport const GroupTypeNameByCode = reverse(GroupType)\n\nexport const getMembershipGroupType = (membership: GroupMembership): GroupType => downcast(membership.groupType)\n\n/**\n * Permission is a kind of a metadata instance. Primarily used for two purposes:\n *  - key sharing\n *  - reference counting in the db\n * */\nexport const enum PermissionType {\n\t/** Used in combination with bucket permission to send multiple things encrypted with the same public key. */\n\tPublic = \"0\",\n\t/** Used to encrypt an instance for another group (which we are member of). */\n\tSymmetric = \"1\",\n\t/** Used to updating public permission with symmetric key. */\n\tPublic_Symmetric = \"2\",\n\t/** Instances without ownerEncSessionKey (e.g. MailBody, FileData) after asymmetric decryption, used for reference counting. */\n\tUnencrypted = \"3\",\n\t/** Sending parts of email for external users. */\n\tExternal = \"5\",\n\t/** Used to mark the owner of the list. */\n\tOwner_List = \"8\",\n}\n\nexport const enum BucketPermissionType {\n\tPublic = \"2\",\n\tExternal = \"3\",\n}\n\nexport enum MailSetKind {\n\tCUSTOM = \"0\",\n\tINBOX = \"1\",\n\tSENT = \"2\",\n\tTRASH = \"3\",\n\tARCHIVE = \"4\",\n\tSPAM = \"5\",\n\tDRAFT = \"6\",\n\tALL = \"7\",\n\tLABEL = \"8\",\n\tImported = \"9\",\n}\n\nexport function getMailSetKind(folder: MailFolder): MailSetKind {\n\treturn folder.folderType as MailSetKind\n}\n\nexport const enum ReplyType {\n\tNONE = \"0\",\n\tREPLY = \"1\",\n\tFORWARD = \"2\",\n\tREPLY_FORWARD = \"3\",\n}\n\nexport const enum ContactAddressType {\n\tPRIVATE = \"0\",\n\tWORK = \"1\",\n\tOTHER = \"2\",\n\tCUSTOM = \"3\",\n}\n\nexport const enum ContactPhoneNumberType {\n\tPRIVATE = \"0\",\n\tWORK = \"1\",\n\tMOBILE = \"2\",\n\tFAX = \"3\",\n\tOTHER = \"4\",\n\tCUSTOM = \"5\",\n}\n\nexport const enum ContactSocialType {\n\tTWITTER = \"0\",\n\tFACEBOOK = \"1\",\n\tXING = \"2\",\n\tLINKED_IN = \"3\",\n\tOTHER = \"4\",\n\tCUSTOM = \"5\",\n}\n\nexport const enum ContactRelationshipType {\n\tPARENT = \"0\",\n\tBROTHER = \"1\",\n\tSISTER = \"2\",\n\tCHILD = \"3\",\n\tFRIEND = \"4\",\n\tRELATIVE = \"5\",\n\tSPOUSE = \"6\",\n\tPARTNER = \"7\",\n\tASSISTANT = \"8\",\n\tMANAGER = \"9\",\n\tOTHER = \"10\",\n\tCUSTOM = \"11\",\n}\n\nexport const enum ContactMessengerHandleType {\n\tSIGNAL = \"0\",\n\tWHATSAPP = \"1\",\n\tTELEGRAM = \"2\",\n\tDISCORD = \"3\",\n\tOTHER = \"4\",\n\tCUSTOM = \"5\",\n}\n\nexport const enum ContactWebsiteType {\n\tPRIVATE = \"0\",\n\tWORK = \"1\",\n\tOTHER = \"2\",\n\tCUSTOM = \"3\",\n}\n\nexport const enum ContactCustomDateType {\n\tANNIVERSARY = \"0\",\n\tOTHER = \"1\",\n\tCUSTOM = \"2\",\n}\n\nexport const getContactSocialType = (contactSocialId: ContactSocialId): ContactSocialType => downcast(contactSocialId.type)\nexport const getCustomDateType = (customDate: ContactCustomDate): ContactCustomDateType => downcast(customDate.type)\nexport const getRelationshipType = (relationship: ContactRelationship): ContactRelationshipType => downcast(relationship.type)\n\nexport const enum OperationType {\n\tCREATE = \"0\",\n\tUPDATE = \"1\",\n\tDELETE = \"2\",\n}\n\nexport enum KdfType {\n\tBcrypt = \"0\",\n\tArgon2id = \"1\",\n}\n\n// The Kdf type to use when deriving new(!) keys from passwords\nexport const DEFAULT_KDF_TYPE = KdfType.Argon2id\n\nexport enum AccountType {\n\tSYSTEM = \"0\",\n\tFREE = \"1\",\n\tSTARTER = \"2\",\n\tPAID = \"3\",\n\tEXTERNAL = \"5\",\n}\n\nexport const AccountTypeNames: Record<AccountType, string> = {\n\t[AccountType.SYSTEM]: \"System\",\n\t[AccountType.FREE]: \"Free\",\n\t[AccountType.STARTER]: \"Outlook\",\n\t[AccountType.PAID]: \"Paid\",\n\t[AccountType.EXTERNAL]: \"External\",\n}\n\nexport enum CustomDomainType {\n\tNONE = \"0\",\n\tONE = \"1\",\n\tTHREE = \"2\",\n\tTEN = \"3\",\n\tUNLIMITED = \"4\",\n}\n\nexport const CustomDomainTypeCount: Record<CustomDomainType, number> = {\n\t[CustomDomainType.NONE]: 0,\n\t[CustomDomainType.ONE]: 1,\n\t[CustomDomainType.THREE]: 3,\n\t[CustomDomainType.TEN]: 10,\n\t[CustomDomainType.UNLIMITED]: -1,\n}\n\nexport const CustomDomainTypeCountName: Record<CustomDomainType, string> = {\n\t[CustomDomainType.NONE]: \"0\",\n\t[CustomDomainType.ONE]: \"1\",\n\t[CustomDomainType.THREE]: \"3\",\n\t[CustomDomainType.TEN]: \"10\",\n\t[CustomDomainType.UNLIMITED]: \"∞\",\n}\n\nexport enum PlanType {\n\tPremium = \"0\",\n\tPro = \"2\",\n\tTeams = \"3\",\n\tPremiumBusiness = \"4\",\n\tTeamsBusiness = \"5\",\n\tRevolutionary = \"6\",\n\tLegend = \"7\",\n\tEssential = \"8\",\n\tAdvanced = \"9\",\n\tUnlimited = \"10\",\n\tFree = \"11\",\n}\n\nexport type PlanName = keyof typeof PlanType\nexport type AvailablePlanType = Exclude<PlanType, PlanType.Premium | PlanType.Pro | PlanType.Teams | PlanType.PremiumBusiness | PlanType.TeamsBusiness>\nexport const AvailablePlans: AvailablePlanType[] = [\n\tPlanType.Free,\n\tPlanType.Revolutionary,\n\tPlanType.Legend,\n\tPlanType.Essential,\n\tPlanType.Advanced,\n\tPlanType.Unlimited,\n]\nexport const NewPaidPlans: AvailablePlanType[] = [PlanType.Revolutionary, PlanType.Legend, PlanType.Essential, PlanType.Advanced, PlanType.Unlimited]\nexport const NewBusinessPlans: AvailablePlanType[] = [PlanType.Essential, PlanType.Advanced, PlanType.Unlimited]\nexport const NewPersonalPlans: AvailablePlanType[] = [PlanType.Free, PlanType.Revolutionary, PlanType.Legend]\n\nexport const LegacyPlans = [PlanType.Premium, PlanType.PremiumBusiness, PlanType.Teams, PlanType.TeamsBusiness, PlanType.Pro]\nexport const HighlightedPlans: AvailablePlanType[] = [PlanType.Revolutionary, PlanType.Advanced]\nexport const HighestTierPlans: PlanType[] = [PlanType.Legend, PlanType.Unlimited]\n\nexport const PlanTypeToName = reverse(PlanType)\n\nexport enum SubscriptionType {\n\tPersonal,\n\tBusiness,\n\tPaidPersonal,\n}\n\nexport enum BookingItemFeatureType {\n\tLegacyUsers = \"0\",\n\tStorage = \"1\",\n\tAlias = \"2\",\n\tSharedMailGroup = \"3\",\n\tWhitelabel = \"4\",\n\tContactForm = \"5\",\n\tWhitelabelChild = \"6\",\n\tLocalAdminGroup = \"7\",\n\tDiscount = \"8\",\n\tSharing = \"9\",\n\tBusiness = \"10\",\n\tRevolutionary = \"11\",\n\tLegend = \"12\",\n\tEssential = \"13\",\n\tAdvanced = \"14\",\n\tUnlimited = \"15\",\n}\n\nexport const BookingItemFeatureByCode = reverse(BookingItemFeatureType)\nexport const getPaymentMethodType = (accountingInfo: AccountingInfo): PaymentMethodType => downcast<PaymentMethodType>(accountingInfo.paymentMethod)\n\nexport enum PaymentMethodType {\n\tInvoice = \"0\",\n\tCreditCard = \"1\",\n\tSepa = \"2\",\n\tPaypal = \"3\",\n\tAccountBalance = \"4\",\n\tAppStore = \"5\",\n}\n\nexport async function getDefaultPaymentMethod(): Promise<PaymentMethodType> {\n\tif (isIOSApp()) {\n\t\treturn PaymentMethodType.AppStore\n\t}\n\n\treturn PaymentMethodType.CreditCard\n}\n\nexport const PaymentMethodTypeToName = reverse(PaymentMethodType)\n\ntype ConstType = {\n\tINITIAL_UPGRADE_REMINDER_INTERVAL_MS: number\n\tREPEATED_UPGRADE_REMINDER_INTERVAL_MS: number\n\tMEMORY_GB_FACTOR: number\n\tMEMORY_WARNING_FACTOR: number\n\tCURRENT_DATE: Date | null\n\tCURRENCY_SYMBOL_EUR: string\n\tDEFAULT_APP_DOMAIN: string\n\tLEGACY_WEBAUTHN_RP_ID: string\n\tWEBAUTHN_RP_ID: string\n\tU2f_APPID_SUFFIX: string\n\tU2F_LEGACY_APPID: string\n\tEXECUTE_KDF_MIGRATION: boolean\n}\n\nexport const Const: ConstType = {\n\tINITIAL_UPGRADE_REMINDER_INTERVAL_MS: 14 * DAY_IN_MILLIS,\n\tREPEATED_UPGRADE_REMINDER_INTERVAL_MS: 90 * DAY_IN_MILLIS,\n\tMEMORY_GB_FACTOR: 1000000000,\n\tMEMORY_WARNING_FACTOR: 0.9,\n\t// Sets the current date for testing date dependent services. Only available in test environments.\n\tCURRENT_DATE: null,\n\tCURRENCY_SYMBOL_EUR: \"€\",\n\tDEFAULT_APP_DOMAIN: \"app.tuta.com\",\n\tLEGACY_WEBAUTHN_RP_ID: \"tutanota.com\",\n\tWEBAUTHN_RP_ID: \"tuta.com\",\n\tU2f_APPID_SUFFIX: \"/u2f-appid.json\",\n\t// this is fetched from the website assets (even though the server has a hardcoded response for this)\n\t// we keep it at tutanota.com since we're matching on it in the code and old keys are saved with this\n\t// URL as appId.\n\t// we'll still get the contents\n\t// because it will be redirected to tuta.com after new domain deploy.\n\tU2F_LEGACY_APPID: \"https://tutanota.com/u2f-appid.json\",\n\tEXECUTE_KDF_MIGRATION: true,\n} as const\n\nexport const TUTA_MAIL_ADDRESS_DOMAINS: ReadonlyArray<string> = Object.freeze([\n\t\"tuta.com\",\n\t\"tutamail.com\",\n\t\"tuta.io\",\n\t\"tutanota.com\",\n\t\"tutanota.de\",\n\t\"keemail.me\",\n])\nexport const TUTA_MAIL_ADDRESS_SIGNUP_DOMAINS = TUTA_MAIL_ADDRESS_DOMAINS\nexport const DEFAULT_PAID_MAIL_ADDRESS_SIGNUP_DOMAIN = \"tuta.com\"\nexport const DEFAULT_FREE_MAIL_ADDRESS_SIGNUP_DOMAIN = \"tutamail.com\"\n\nexport const enum ConversationType {\n\tNEW = \"0\",\n\tREPLY = \"1\",\n\tFORWARD = \"2\",\n\t/**  a message for which no mail exists in Tuta (unknown external mail or deleted mail) */\n\tUNKNOWN = \"3\",\n}\n\nexport const enum MailState {\n\tDRAFT = \"0\",\n\tSENT = \"1\",\n\tRECEIVED = \"2\",\n\tSENDING = \"3\",\n}\n\n// Keep non-const for admin\nexport enum ApprovalStatus {\n\tREGISTRATION_APPROVED = \"0\",\n\tREGISTRATION_APPROVAL_NEEDED = \"1\",\n\tSEND_MAILS_APPROVED = \"2\",\n\tINVOICE_NOT_PAID = \"3\",\n\tSPAM_SENDER = \"4\",\n\tDELAYED = \"5\",\n\tDELAYED_AND_INITIALLY_ACCESSED = \"6\",\n\tREGISTRATION_APPROVAL_NEEDED_AND_INITIALLY_ACCESSED = \"7\",\n\tPAID_SUBSCRIPTION_NEEDED = \"8\",\n\tINITIAL_PAYMENT_PENDING = \"9\",\n\tNO_ACTIVITY = \"10\",\n}\n\nexport function getCustomerApprovalStatus(customer: Customer): ApprovalStatus {\n\treturn downcast(customer.approvalStatus)\n}\n\nexport const enum InboxRuleType {\n\tFROM_EQUALS = \"0\",\n\tRECIPIENT_TO_EQUALS = \"1\",\n\tRECIPIENT_CC_EQUALS = \"2\",\n\tRECIPIENT_BCC_EQUALS = \"3\",\n\tSUBJECT_CONTAINS = \"4\",\n\tMAIL_HEADER_CONTAINS = \"5\",\n}\n\nexport enum SpamRuleType {\n\tWHITELIST = \"1\",\n\tBLACKLIST = \"2\",\n\tDISCARD = \"3\",\n}\n\nexport function getSpamRuleType(spamRule: EmailSenderListElement): SpamRuleType | null {\n\treturn getAsEnumValue(SpamRuleType, spamRule.type)\n}\n\nexport const enum SpamRuleFieldType {\n\tFROM = \"0\",\n\tTO = \"1\",\n\tCC = \"2\",\n\tBCC = \"3\",\n}\n\nexport function getSpamRuleField(spamRule: EmailSenderListElement): SpamRuleFieldType {\n\treturn downcast(spamRule.field)\n}\n\nexport const enum ReportMovedMailsType {\n\tALWAYS_ASK = \"0\",\n\tAUTOMATICALLY_ONLY_SPAM = \"1\",\n\tNEVER = \"3\",\n}\n\nexport const enum EmailSignatureType {\n\tEMAIL_SIGNATURE_TYPE_DEFAULT = \"0\",\n\tEMAIL_SIGNATURE_TYPE_CUSTOM = \"1\",\n\tEMAIL_SIGNATURE_TYPE_NONE = \"2\",\n}\n\nexport enum CustomDomainValidationResult {\n\tCUSTOM_DOMAIN_VALIDATION_RESULT_OK = \"0\",\n\tCUSTOM_DOMAIN_VALIDATION_RESULT_DNS_LOOKUP_FAILED = \"1\",\n\tCUSTOM_DOMAIN_VALIDATION_RESULT_DOMAIN_NOT_FOUND = \"2\",\n\tCUSTOM_DOMAIN_VALIDATION_RESULT_NAMESERVER_NOT_FOUND = \"3\",\n\tCUSTOM_DOMAIN_VALIDATION_RESULT_DOMAIN_NOT_AVAILABLE = \"4\",\n\tCUSTOM_DOMAIN_VALIDATION_RESULT_VALIDATION_FAILED = \"5\",\n}\n\nexport enum CustomDomainCheckResult {\n\tCUSTOM_DOMAIN_CHECK_RESULT_OK = \"0\",\n\tCUSTOM_DOMAIN_CHECK_RESULT_DNS_LOOKUP_FAILED = \"1\",\n\tCUSTOM_DOMAIN_CHECK_RESULT_DOMAIN_NOT_FOUND = \"2\",\n\tCUSTOM_DOMAIN_CHECK_RESULT_NAMESERVER_NOT_FOUND = \"3\",\n}\n\nexport const enum DnsRecordType {\n\tDNS_RECORD_TYPE_MX = \"0\",\n\tDNS_RECORD_TYPE_TXT_SPF = \"1\",\n\tDNS_RECORD_TYPE_CNAME_DKIM = \"2\",\n\tDNS_RECORD_TYPE_TXT_DMARC = \"3\",\n\tDNS_RECORD_TYPE_CNAME_MTA_STS = \"4\",\n\tDNS_RECORD_TYPE_TXT_VERIFY = \"5\",\n}\n\nexport const enum SessionState {\n\tSESSION_STATE_ACTIVE = \"0\",\n\tSESSION_STATE_EXPIRED = \"1\",\n\tSESSION_STATE_DELETED = \"2\",\n\tSESSION_STATE_PENDING = \"3\",\n}\n\nexport const enum PushServiceType {\n\tANDROID = \"0\",\n\tIOS = \"1\",\n\tEMAIL = \"2\",\n\tSSE = \"3\",\n}\n\nexport const enum InputFieldType {\n\tTEXT = \"0\",\n\tNUMBER = \"1\",\n\tENUM = \"2\",\n}\n\nexport enum SecondFactorType {\n\tu2f = \"0\",\n\ttotp = \"1\",\n\twebauthn = \"2\", // actually refers to u2f in client\n}\n\nexport const MAX_ATTACHMENT_SIZE = 1024 * 1024 * 25\nexport const MAX_LOGO_SIZE = 1024 * 100\nexport const MAX_BASE64_IMAGE_SIZE = MAX_LOGO_SIZE\nexport const ALLOWED_IMAGE_FORMATS = [\"png\", \"jpg\", \"jpeg\", \"svg\"]\n\n// Keep non-const for admin\nexport enum FeatureType {\n\tDisableContacts = \"0\",\n\tDisableMailExport = \"1\",\n\tInternalCommunication = \"2\",\n\tDeleteMailsOnPasswordReset = \"3\",\n\tWhitelabelParent = \"4\",\n\tWhitelabelChild = \"5\",\n\tReplyOnly = \"6\",\n\tDisableDefaultSignature = \"7\",\n\tHideBuyDialogs = \"8\",\n\tDisableCalendar = \"9\",\n\tExternalEmailProvider = \"10\",\n\n\t/** This is required for non admin users because they are not allowed to access the bookings. */\n\tBusinessFeatureEnabled = \"11\",\n\tAffiliatePartner = \"12\",\n\tKnowledgeBase = \"13\",\n\tNewsletter = \"14\",\n\tUnused15 = \"15\",\n\tUnused16 = \"16\",\n\tMultipleUsers = \"17\", // Multi-user support for new personal plans.\n}\n\nexport const FULL_INDEXED_TIMESTAMP: number = 0\nexport const NOTHING_INDEXED_TIMESTAMP: number = Math.pow(2, 42) - 1 // maximum Timestamp is 42 bit long (see GeneratedIdData.java)\n\nexport const ENTITY_EVENT_BATCH_TTL_DAYS: number = 45 // 45 days (see InstanceDbMapperEventNotifier.java)\n\nexport const enum PaymentDataResultType {\n\tOK = \"0\",\n\tCOUNTRY_MISMATCH = \"1\",\n\tINVALID_VATID_NUMBER = \"2\",\n\tCREDIT_CARD_DECLINED = \"3\",\n\tCREDIT_CARD_CVV_INVALID = \"4\",\n\tPAYMENT_PROVIDER_NOT_AVAILABLE = \"5\",\n\tOTHER_PAYMENT_PROVIDER_ERROR = \"6\",\n\tOTHER_PAYMENT_ACCOUNT_REJECTED = \"7\",\n\tCOULD_NOT_VERIFY_VATID = \"8\",\n\tCREDIT_CARD_DATE_INVALID = \"9\",\n\tCREDIT_CARD_NUMBER_INVALID = \"10\",\n\tCREDIT_CARD_VERIFICATION_LIMIT_REACHED = \"11\",\n}\n\nexport const enum ContactComparisonResult {\n\tUnique = \"unique\",\n\tSimilar = \"similar\",\n\tEqual = \"equal\",\n}\n\nexport const enum IndifferentContactComparisonResult {\n\tOneEmpty = \"oneEmpty\",\n\tBothEmpty = \"bothEmpty\",\n}\n\nexport const enum ContactMergeAction {\n\tDeleteFirst = \"deleteFirst\",\n\tDeleteSecond = \"deleteSecond\",\n\tMerge = \"merge\",\n\tSkip = \"skip\",\n\tCancel = \"cancel\",\n}\n\nexport const enum InvoiceStatus {\n\tCREATED = \"0\",\n\tPUBLISHEDFORAUTOMATIC = \"1\",\n\tPUBLISHEDFORMANUAL = \"2\",\n\tPAID = \"3\",\n\tDEBITFAILED = \"4\",\n\tDISPUTED = \"5\",\n\tCANCELLED = \"6\",\n\tPARTNERMANAGED = \"7\",\n\tFIRSTREMINDER = \"8\",\n\tREFUNDED = \"9\",\n\tDISPUTEACCEPTED = \"10\",\n\tSECONDREMINDER = \"11\",\n}\n\nexport const enum CloseEventBusOption {\n\tTerminate = \"terminate\",\n\tReconnect = \"reconnect\",\n\tPause = \"pause\",\n}\n\nexport const enum Announcement {\n\tNone = \"0\",\n\tStorageDeletion = \"1\",\n}\n\nexport const enum CertificateState {\n\tVALID = \"0\",\n\tVALIDATING = \"1\",\n\tINVALID = \"2\",\n}\n\nexport const enum CertificateType {\n\tMANUAL = \"0\",\n\tLETS_ENCRYPT = \"1\",\n}\n\nexport function getCertificateType(certificateInfo: CertificateInfo): CertificateType {\n\treturn downcast(certificateInfo.type)\n}\n\nexport enum RepeatPeriod {\n\tDAILY = \"0\",\n\tWEEKLY = \"1\",\n\tMONTHLY = \"2\",\n\tANNUALLY = \"3\",\n}\n\nexport const enum EndType {\n\tNever = \"0\",\n\tCount = \"1\",\n\tUntilDate = \"2\",\n}\n\nexport const defaultCalendarColor = \"2196f3\"\n\nexport const enum EventTextTimeOption {\n\tSTART_TIME = \"startTime\",\n\tEND_TIME = \"endTime\",\n\tSTART_END_TIME = \"startAndEndTime\",\n}\n\nexport const enum TimeFormat {\n\tTWENTY_FOUR_HOURS = \"0\",\n\tTWELVE_HOURS = \"1\",\n}\n\nexport const enum WeekStart {\n\tMONDAY = \"0\",\n\tSUNDAY = \"1\",\n\tSATURDAY = \"2\",\n}\n\nexport function getWeekStart(userSettings: UserSettingsGroupRoot): WeekStart {\n\treturn downcast(userSettings.startOfTheWeek)\n}\n\nexport const enum ShareCapability {\n\tRead = \"0\",\n\tWrite = \"1\",\n\tInvite = \"2\",\n}\n\nexport const SECOND_MS = 1000\n\nexport const enum PostingType {\n\tGeneric = \"0\",\n\tUsageFee = \"1\",\n\tCredit = \"2\",\n\tDispute = \"3\",\n\tSuspension = \"4\",\n\tPayment = \"5\",\n\tRefund = \"6\",\n\tSuspensionCancel = \"7\",\n\tGiftCard = \"8\",\n\tSalesCommission = \"9\",\n}\n\nexport enum CounterType {\n\tDefault = \"0\",\n\tSignup = \"1\",\n\tUnreadMails = \"2\",\n\tUserStorageLegacy = \"3\",\n\tGroupStorageLegacy = \"4\",\n\tUserStorage = \"5\",\n\tGroupStorage = \"6\",\n}\n\nexport const CounterTypeToName = reverse(CounterType)\n\nexport const enum UnsubscribeFailureReason {\n\tTOO_MANY_ENABLED_USERS = \"unsubscribe.too_many_users\",\n\tCUSTOM_MAIL_ADDRESS = \"unsubscribe.custom_mail_address\",\n\tTOO_MANY_CALENDARS = \"unsubscribe.too_many_calendars\",\n\tCALENDAR_TYPE = \"unsubscirbe.invalid_calendar_type\",\n\tTOO_MANY_ALIASES = \"unsubscribe.too_many_aliases\",\n\tTOO_MUCH_STORAGE_USED = \"unsubscribe.too_much_storage\",\n\tTOO_MANY_DOMAINS = \"unsubscribe.too_many_domains\",\n\tHAS_TEMPLATE_GROUP = \"unsubscribe.has_template_group\",\n\tWHITELABEL_DOMAIN_ACTIVE = \"unsubscribe.whitelabel_domain_active\",\n\tSHARED_GROUP_ACTIVE = \"unsubscribe.shared_group_active\",\n\tHAS_CONTACT_FORM = \"unsubscribe.has_contact_form\",\n\tNOT_ENOUGH_CREDIT = \"unsubscribe.not_enough_credit\",\n\tINVOICE_NOT_PAID = \"unsubscribe.invoice_not_paid\",\n\tHAS_CONTACT_LIST_GROUP = \"unsubscribe.has_contact_list_group\",\n\tACTIVE_APPSTORE_SUBSCRIPTION = \"unsubscribe.active_appstore_subscription\",\n\tLABEL_LIMIT_EXCEEDED = \"unsubscribe.label_limit_exceeded\",\n}\n\n// legacy, should be deleted after clients older than 3.114 have been disabled.\nexport const enum BookingFailureReason {\n\tTOO_MANY_DOMAINS = \"bookingservice.too_many_domains\",\n\tTOO_MANY_ALIASES = \"bookingservice.too_many_aliases\",\n\tTOO_MUCH_STORAGE_USED = \"bookingservice.too_much_storage_used\",\n\tSHARED_GROUP_ACTIVE = \"bookingservice.shared_group_active\",\n\tWHITELABEL_DOMAIN_ACTIVE = \"bookingservice.whitelabel_domain_active\",\n\tHAS_TEMPLATE_GROUP = \"bookingservice.has_template_group\",\n}\n\n// The 'code' for the keys is KeyboardEvent.key\nexport const Keys = Object.freeze({\n\tNONE: {\n\t\tcode: \"\",\n\t\tname: \"\",\n\t},\n\tRETURN: {\n\t\tcode: \"enter\",\n\t\tname: \"⏎\",\n\t},\n\tBACKSPACE: {\n\t\tcode: \"backspace\",\n\t\tname: \"BACKSPACE\",\n\t},\n\tTAB: {\n\t\tcode: \"tab\",\n\t\tname: \"↹\",\n\t},\n\tSHIFT: {\n\t\tcode: \"shift\",\n\t\tname: \"⇧\",\n\t},\n\tCTRL: {\n\t\tcode: \"control\",\n\t\tname: \"CTRL\",\n\t},\n\tALT: {\n\t\tcode: \"alt\",\n\t\tname: \"ALT\",\n\t},\n\tMETA: {\n\t\tcode: \"meta\",\n\t\tname: \"\\u2318\",\n\t},\n\t// command key (left) (OSX)\n\tESC: {\n\t\tcode: \"escape\",\n\t\tname: \"ESC\",\n\t},\n\tSPACE: {\n\t\tcode: \" \",\n\t\tname: \"Space\",\n\t},\n\tPAGE_UP: {\n\t\tcode: \"pageup\",\n\t\tname: \"Page ↑\",\n\t},\n\tPAGE_DOWN: {\n\t\tcode: \"pagedown\",\n\t\tname: \"Page ↓\",\n\t},\n\tEND: {\n\t\tcode: \"end\",\n\t\tname: \"End\",\n\t},\n\tHOME: {\n\t\tcode: \"home\",\n\t\tname: \"Home\",\n\t},\n\tLEFT: {\n\t\tcode: \"arrowleft\",\n\t\tname: \"←\",\n\t},\n\tUP: {\n\t\tcode: \"arrowup\",\n\t\tname: \"↑\",\n\t},\n\tRIGHT: {\n\t\tcode: \"arrowright\",\n\t\tname: \"→\",\n\t},\n\tDOWN: {\n\t\tcode: \"arrowdown\",\n\t\tname: \"↓\",\n\t},\n\tDELETE: {\n\t\tcode: \"delete\",\n\t\tname: \"DEL\",\n\t},\n\t\"0\": {\n\t\tcode: \"0\",\n\t\tname: \"0\",\n\t},\n\tONE: {\n\t\tcode: \"1\",\n\t\tname: \"1\",\n\t},\n\tTWO: {\n\t\tcode: \"2\",\n\t\tname: \"2\",\n\t},\n\tTHREE: {\n\t\tcode: \"3\",\n\t\tname: \"3\",\n\t},\n\tFOUR: {\n\t\tcode: \"4\",\n\t\tname: \"4\",\n\t},\n\tFIVE: {\n\t\tcode: \"5\",\n\t\tname: \"5\",\n\t},\n\tSIX: {\n\t\tcode: \"6\",\n\t\tname: \"6\",\n\t},\n\tA: {\n\t\tcode: \"a\",\n\t\tname: \"A\",\n\t},\n\tB: {\n\t\tcode: \"b\",\n\t\tname: \"B\",\n\t},\n\tC: {\n\t\tcode: \"c\",\n\t\tname: \"C\",\n\t},\n\tD: {\n\t\tcode: \"d\",\n\t\tname: \"D\",\n\t},\n\tE: {\n\t\tcode: \"e\",\n\t\tname: \"E\",\n\t},\n\tF: {\n\t\tcode: \"f\",\n\t\tname: \"F\",\n\t},\n\tH: {\n\t\tcode: \"h\",\n\t\tname: \"H\",\n\t},\n\tI: {\n\t\tcode: \"i\",\n\t\tname: \"I\",\n\t},\n\tJ: {\n\t\tcode: \"j\",\n\t\tname: \"J\",\n\t},\n\tK: {\n\t\tcode: \"k\",\n\t\tname: \"K\",\n\t},\n\tL: {\n\t\tcode: \"l\",\n\t\tname: \"L\",\n\t},\n\tM: {\n\t\tcode: \"m\",\n\t\tname: \"M\",\n\t},\n\tN: {\n\t\tcode: \"n\",\n\t\tname: \"N\",\n\t},\n\tO: {\n\t\tcode: \"o\",\n\t\tname: \"O\",\n\t},\n\tP: {\n\t\tcode: \"p\",\n\t\tname: \"P\",\n\t},\n\tQ: {\n\t\tcode: \"q\",\n\t\tname: \"Q\",\n\t},\n\tR: {\n\t\tcode: \"r\",\n\t\tname: \"R\",\n\t},\n\tS: {\n\t\tcode: \"s\",\n\t\tname: \"S\",\n\t},\n\tT: {\n\t\tcode: \"t\",\n\t\tname: \"T\",\n\t},\n\tU: {\n\t\tcode: \"u\",\n\t\tname: \"U\",\n\t},\n\tV: {\n\t\tcode: \"v\",\n\t\tname: \"V\",\n\t},\n\tF1: {\n\t\tcode: \"f1\",\n\t\tname: \"F1\",\n\t},\n\tF5: {\n\t\tcode: \"f5\",\n\t\tname: \"F5\",\n\t},\n\tF11: {\n\t\tcode: \"f11\",\n\t\tname: \"F11\",\n\t},\n\tF12: {\n\t\tcode: \"f12\",\n\t\tname: \"F12\",\n\t},\n})\n\n// See: https://webaim.org/techniques/keyboard/tabindex#overview\n\nexport const enum TabIndex {\n\tProgrammatic = \"-1\",\n\t// focus on element can only be set programmatically\n\tDefault = \"0\", // regular tab order\n}\n\n// Keep non-const for admin\nexport enum ReportedMailFieldType {\n\t/**\n\t * From header address, authenticated.\n\t */\n\tFROM_ADDRESS = \"0\",\n\n\t/**\n\t * From header address, not authenticated with DMARC.\n\t */\n\tFROM_ADDRESS_NON_AUTH = \"1\",\n\n\t/**\n\t * From header address domain\n\t */\n\tFROM_DOMAIN = \"2\",\n\n\t/**\n\t * From header address domain, not authenticated not authenticated with DMARC.\n\t */\n\tFROM_DOMAIN_NON_AUTH = \"3\",\n\n\t/**\n\t * Email subject\n\t */\n\tSUBJECT = \"4\",\n\n\t/**\n\t * Link in the body of email\n\t */\n\tLINK = \"5\",\n\n\t/**\n\t * Domain of the link in the body\n\t */\n\tLINK_DOMAIN = \"6\",\n}\n\nexport const enum MailPhishingStatus {\n\tUNKNOWN = \"0\",\n\tSUSPICIOUS = \"1\",\n\tWHITELISTED = \"2\",\n}\n\nexport const enum PhishingMarkerStatus {\n\tACTIVE = \"0\",\n\tINACTIVE = \"1\",\n}\n\n// Keep non-const for admin\nexport enum MailAuthenticationStatus {\n\t/**\n\t * Disposition: None. All checks have passed.\n\t */\n\tAUTHENTICATED = \"0\",\n\n\t/**\n\t * Authentication has failed because of the domain policy or because of the SPF.\n\t */\n\tHARD_FAIL = \"1\",\n\n\t/**\n\t * Authentication has failed because of our own policy, most commonly authentication is \"missing\".\n\t */\n\tSOFT_FAIL = \"2\",\n\n\t/**\n\t * Authentication has failed because From header is not valid so we couldn't do authentication checks.\n\t */\n\tINVALID_MAIL_FROM = \"3\",\n\n\t/**\n\t * Authentication has failed because From header is missing. Most likely it is some technical message like bounce mail.\n\t */\n\tMISSING_MAIL_FROM = \"4\",\n}\n\n/**\n * The status of the authentication when decrypting an end-to-end encrypted message.\n * Authentication was only introduced when switching to PQ.\n */\nexport enum EncryptionAuthStatus {\n\t/** the entity was encrypted with RSA, it had no authentication*/\n\tRSA_NO_AUTHENTICATION = \"0\",\n\t/** the entity was encrypted with tuta-crypt and authentication succeeded */\n\tTUTACRYPT_AUTHENTICATION_SUCCEEDED = \"1\",\n\t/** the entity was encrypted with tuta-crypt and authentication failed */\n\tTUTACRYPT_AUTHENTICATION_FAILED = \"2\",\n\t/** the entity was encrypted symmetrically, with AES, it had no authentication, e.g. secure external mailboxes */\n\tAES_NO_AUTHENTICATION = \"3\",\n\t/** the entity was sent by us encrypted with TutaCrypt, so it is authenticated */\n\tTUTACRYPT_SENDER = \"4\",\n\t/** the entity was encrypted with RSA although TutaCrypt keys were available */\n\tRSA_DESPITE_TUTACRYPT = \"5\",\n}\n\nexport const enum MailReportType {\n\tPHISHING = \"0\",\n\tSPAM = \"1\",\n}\n\nexport const enum DnsRecordValidation {\n\tOK = \"✓\",\n\tBAD = \"✗\",\n}\n\nexport enum CalendarAttendeeStatus {\n\t/** invite is not sent yet */\n\tADDED = \"0\",\n\n\t/** already invited but did not respond */\n\tNEEDS_ACTION = \"1\",\n\tACCEPTED = \"2\",\n\tDECLINED = \"3\",\n\tTENTATIVE = \"4\",\n}\n\nexport function getAttendeeStatus(attendee: CalendarEventAttendee): CalendarAttendeeStatus {\n\treturn downcast(attendee.status)\n}\n\nexport enum CalendarMethod {\n\tPUBLISH = \"PUBLISH\",\n\tREQUEST = \"REQUEST\",\n\tREPLY = \"REPLY\",\n\tADD = \"ADD\",\n\tCANCEL = \"CANCEL\",\n\tREFRESH = \"REFRESH\",\n\tCOUNTER = \"COUNTER\",\n\tDECLINECOUNTER = \"DECLINECOUNTER\",\n}\n\nexport const enum MailMethod {\n\tNONE = \"0\",\n\tICAL_PUBLISH = \"1\",\n\tICAL_REQUEST = \"2\",\n\tICAL_REPLY = \"3\",\n\tICAL_ADD = \"4\",\n\tICAL_CANCEL = \"5\",\n\tICAL_REFRESH = \"6\",\n\tICAL_COUNTER = \"7\",\n\tICAL_DECLINECOUNTER = \"8\",\n}\n\nexport function mailMethodToCalendarMethod(mailMethod: MailMethod): CalendarMethod {\n\tswitch (mailMethod) {\n\t\tcase MailMethod.ICAL_PUBLISH:\n\t\t\treturn CalendarMethod.PUBLISH\n\t\tcase MailMethod.ICAL_REQUEST:\n\t\t\treturn CalendarMethod.REQUEST\n\t\tcase MailMethod.ICAL_REPLY:\n\t\t\treturn CalendarMethod.REPLY\n\t\tcase MailMethod.ICAL_ADD:\n\t\t\treturn CalendarMethod.ADD\n\t\tcase MailMethod.ICAL_CANCEL:\n\t\t\treturn CalendarMethod.CANCEL\n\t\tcase MailMethod.ICAL_REFRESH:\n\t\t\treturn CalendarMethod.REFRESH\n\t\tcase MailMethod.ICAL_COUNTER:\n\t\t\treturn CalendarMethod.COUNTER\n\t\tcase MailMethod.ICAL_DECLINECOUNTER:\n\t\t\treturn CalendarMethod.DECLINECOUNTER\n\t\tdefault:\n\t\t\tthrow new ProgrammingError(\"Unhandled MailMethod: \" + mailMethod)\n\t}\n}\n\nexport function getAsEnumValue<K extends keyof any, V>(enumValues: Record<K, V>, value: string): V | null {\n\tfor (const key of Object.getOwnPropertyNames(enumValues)) {\n\t\t// @ts-ignore\n\t\tconst enumValue = enumValues[key]\n\n\t\tif (enumValue === value) {\n\t\t\treturn enumValue\n\t\t}\n\t}\n\n\treturn null\n}\n\nexport function assertEnumValue<K extends keyof any, V>(enumValues: Record<K, V>, value: string): V {\n\tfor (const key of Object.getOwnPropertyNames(enumValues)) {\n\t\t// @ts-ignore\n\t\tconst enumValue = enumValues[key]\n\n\t\tif (enumValue === value) {\n\t\t\treturn enumValue\n\t\t}\n\t}\n\n\tthrow new Error(`Invalid enum value ${value} for ${JSON.stringify(enumValues)}`)\n}\n\nexport function assertEnumKey<K extends string, V>(obj: Record<K, V>, key: string): K {\n\tif (key in obj) {\n\t\treturn downcast(key)\n\t} else {\n\t\tthrow Error(\"Not valid enum value: \" + key)\n\t}\n}\n\nexport const enum ClientType {\n\tBrowser = \"0\",\n\tDesktop = \"1\",\n\tApp = \"2\",\n}\n\nexport function getClientType(): ClientType {\n\treturn isApp() ? ClientType.App : isElectronClient() ? ClientType.Desktop : ClientType.Browser\n}\n\nexport const enum ExternalImageRule {\n\tNone = \"0\",\n\tAllow = \"1\",\n\tBlock = \"2\",\n}\n\nexport type PayPalData = {\n\taccount: string\n}\n\nexport type InvoiceData = {\n\tinvoiceAddress: string\n\tcountry: Country | null\n\tvatNumber: string // only for EU countries otherwise empty\n}\n\nexport type PaymentData = {\n\tpaymentMethod: PaymentMethodType\n\tcreditCardData: CreditCard | null\n}\n\nexport enum UsageTestState {\n\tCreated = \"0\",\n\tLive = \"1\",\n\tPaused = \"2\",\n\tFinished = \"3\",\n}\n\nexport const UsageTestStateToName = reverse(UsageTestState)\n\nexport enum UsageTestMetricType {\n\tNumber = \"0\",\n\tEnum = \"1\",\n\tLikert = \"2\",\n}\n\nexport const UsageTestMetricTypeToName = reverse(UsageTestMetricType)\n\nexport const enum ArchiveDataType {\n\tAuthorityRequests = \"0\",\n\tAttachments = \"1\",\n\tMailDetails = \"2\",\n}\n\nexport const OFFLINE_STORAGE_DEFAULT_TIME_RANGE_DAYS = 31\n\nexport enum UsageTestParticipationMode {\n\tOnce = \"0\",\n\tUnlimited = \"1\",\n}\n\nexport const UsageTestParticipationModeToName = reverse(UsageTestParticipationMode)\n\nexport enum TerminationPeriodOptions {\n\tEndOfCurrentPeriod = \"0\",\n\tFutureDate = \"1\",\n}\n\n/**\n * Convert the input to KdfType.\n *\n * This actually returns the input without modifying it, as it wraps around TypeScript's 'as' operator, but\n * it also does a runtime check, guaranteeing that the input is truly a KdfType.\n *\n * @param maybe kdf type\n * @return `maybe` as KdfType\n * @throws Error if the input doesn't correspond to a KdfType\n */\nexport function asKdfType(maybe: string): KdfType {\n\tif (Object.values(KdfType).includes(maybe as KdfType)) {\n\t\treturn maybe as KdfType\n\t}\n\tthrow new Error(\"bad kdf type\")\n}\n\nexport enum CryptoProtocolVersion {\n\tRSA = \"0\",\n\tSYMMETRIC_ENCRYPTION = \"1\", // secure external\n\tTUTA_CRYPT = \"2\", // hybrid PQ protocol (Kyber + x25519)\n}\n\nexport function asCryptoProtoocolVersion(maybe: NumberString): CryptoProtocolVersion {\n\tif (Object.values(CryptoProtocolVersion).includes(maybe as CryptoProtocolVersion)) {\n\t\treturn maybe as CryptoProtocolVersion\n\t}\n\tthrow new Error(\"bad protocol version\")\n}\n\nexport enum GroupKeyRotationType {\n\tUser = \"0\",\n\tAdminGroupKeyRotationSingleUserAccount = \"1\", // scheduled for accounts that only have one user (incl. deactivated users)\n\tTeam = \"2\",\n\tUserArea = \"3\",\n\tCustomer = \"4\",\n\tAdminGroupKeyRotationMultipleUserAccount = \"5\", // scheduled for accounts that have multiple users but only a single admin user\n\tAdminGroupKeyRotationMultipleAdminAccount = \"6\", // scheduled for accounts that have multiple admin users\n}\n\nexport const GroupKeyRotationTypeNameByCode = reverse(GroupKeyRotationType)\n\nexport const EXTERNAL_CALENDAR_SYNC_INTERVAL = 60 * 30 * 1000 // 30 minutes\n\nexport const DEFAULT_ERROR = \"defaultError\"\n\nexport enum PublicKeyIdentifierType {\n\tMAIL_ADDRESS = \"0\",\n\tGROUP_ID = \"1\",\n\tKEY_ROTATION_ID = \"2\",\n}\n\nexport enum BlobAccessTokenKind {\n\tArchive = \"0\",\n\tInstances = \"1\",\n}\n\nexport function asPublicKeyIdentifier(maybe: NumberString): PublicKeyIdentifierType {\n\tif (Object.values(PublicKeyIdentifierType).includes(maybe as PublicKeyIdentifierType)) {\n\t\treturn maybe as PublicKeyIdentifierType\n\t}\n\tthrow new Error(\"bad key identifier type\")\n}\n\nexport const CLIENT_ONLY_CALENDAR_BIRTHDAYS_BASE_ID = \"clientOnly_birthdays\"\nexport const CLIENT_ONLY_CALENDARS: Map<Id, TranslationKey> = new Map([[CLIENT_ONLY_CALENDAR_BIRTHDAYS_BASE_ID, \"birthdayCalendar_label\"]])\nexport const DEFAULT_CLIENT_ONLY_CALENDAR_COLORS: Map<Id, string> = new Map([[CLIENT_ONLY_CALENDAR_BIRTHDAYS_BASE_ID, \"FF9933\"]])\n\nexport const MAX_LABELS_PER_MAIL = 5\n\nexport const enum ImportStatus {\n\tRunning = 0,\n\tPaused = 1,\n\tCanceled = 2,\n\tFinished = 3,\n}\n"]}