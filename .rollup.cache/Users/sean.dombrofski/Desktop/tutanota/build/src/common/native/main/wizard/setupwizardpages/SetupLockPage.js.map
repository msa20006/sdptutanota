{"version":3,"file":"SetupLockPage.js","sourceRoot":"","sources":["../../../../../../../src/common/native/main/wizard/setupwizardpages/SetupLockPage.ts"],"names":[],"mappings":"AAAA,OAAO,CAAiC,MAAM,SAAS,CAAA;AAGvD,OAAO,EAAE,eAAe,EAAE,MAAM,sBAAsB,CAAA;AACtD,OAAO,EAAE,uBAAuB,EAAE,MAAM,oCAAoC,CAAA;AAG5E,OAAO,EAAE,6BAA6B,EAAE,MAAM,+DAA+D,CAAA;AAC7G,OAAO,EAAE,cAAc,EAAE,MAAM,gDAAgD,CAAA;AAE/E,MAAM,OAAO,aAAa;IACzB,IAAI,CAAC,EAAE,KAAK,EAA6B;QACxC,OAAO,CAAC,CAAC,eAAe,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,WAAW,EAAE,eAAe,EAAE,EAAE;YAC1E,CAAC,CAAC,uBAAuB,EAAE;gBAC1B,KAAK,EAAE,IAAI;gBACX,KAAK,EAAE,KAAK,CAAC,KAAK;gBAClB,cAAc,EAAE,KAAK,CAAC,cAAc;gBACpC,iBAAiB,EAAE,KAAK,CAAC,WAAW;gBACpC,SAAS,EAAE,IAAI;gBACf,cAAc,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC;aACpD,CAAC;SACF,CAAC,CAAA;IACH,CAAC;CACD;AAED,MAAM,OAAO,kBAAkB;IAQF;IAP5B,uBAAuB,GAAG,KAAK,CAAA;IAC/B,IAAI,GAAS,IAAI,CAAA;IAEjB,KAAK,GAAkB,IAAI,CAAA;IAC3B,cAAc,GAAiC,EAAE,CAAA;IACjD,WAAW,gCAAoC;IAE/C,YAA4B,kBAAsC;QAAtC,uBAAkB,GAAlB,kBAAkB,CAAoB;QACjE,kBAAkB,CAAC,0BAA0B,EAAE,CAAC,IAAI,CAAC,CAAC,gBAAgB,EAAE,EAAE;YACzE,IAAI,CAAC,cAAc,GAAG,gBAAgB,CAAA;YACtC,CAAC,CAAC,MAAM,EAAE,CAAA;QACX,CAAC,CAAC,CAAA;QACF,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,EAAE,CAAC,IAAI,CAAC,CAAC,aAAa,EAAE,EAAE;YACjE,IAAI,CAAC,WAAW,GAAG,aAAa,CAAA;YAChC,CAAC,CAAC,MAAM,EAAE,CAAA;QACX,CAAC,CAAC,CAAA;IACH,CAAC;IAED,WAAW;QACV,OAAO,iCAAiC,CAAA;IACzC,CAAC;IAED,KAAK,CAAC,UAAU,CAAC,WAAoB;QACpC,IAAI,CAAC;YACJ,MAAM,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,CAAA;YAC9D,MAAM,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAA;QACjE,CAAC;QAAC,OAAO,CAAC,EAAE,CAAC;YACZ,IAAI,CAAC,YAAY,6BAA6B,EAAE,CAAC;gBAChD,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,OAAO,CAAA;gBACtB,CAAC,CAAC,MAAM,EAAE,CAAA;gBACV,OAAO,KAAK,CAAA;YACb,CAAC;iBAAM,IAAI,CAAC,YAAY,cAAc,EAAE,CAAC;gBACxC,6HAA6H;gBAC7H,uEAAuE;gBACvE,OAAO,KAAK,CAAA;YACb,CAAC;iBAAM,CAAC;gBACP,MAAM,CAAC,CAAA;YACR,CAAC;QACF,CAAC;QAED,0CAA0C;QAC1C,OAAO,IAAI,CAAA;IACZ,CAAC;IAED,eAAe;QACd,OAAO,KAAK,CAAA;IACb,CAAC;IAED,SAAS;QACR,OAAO,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,CAAA;IACtC,CAAC;CACD","sourcesContent":["import m, { Children, Component, Vnode } from \"mithril\"\nimport { WizardPageAttrs } from \"../../../../gui/base/WizardDialog.js\"\nimport { lang, type TranslationKey } from \"../../../../misc/LanguageViewModel.js\"\nimport { SetupPageLayout } from \"./SetupPageLayout.js\"\nimport { SelectAppLockMethodView } from \"../../SelectAppLockMethodDialog.js\"\nimport { AppLockMethod } from \"../../../common/generatedipc/AppLockMethod.js\"\nimport { MobileSystemFacade } from \"../../../common/generatedipc/MobileSystemFacade.js\"\nimport { CredentialAuthenticationError } from \"../../../../api/common/error/CredentialAuthenticationError.js\"\nimport { CancelledError } from \"../../../../api/common/error/CancelledError.js\"\n\nexport class SetupLockPage implements Component<SetupLockPageAttrs> {\n\tview({ attrs }: Vnode<SetupLockPageAttrs>): Children {\n\t\treturn m(SetupPageLayout, { image: \"lock\", buttonLabel: \"finish_action\" }, [\n\t\t\tm(SelectAppLockMethodView, {\n\t\t\t\tclass: \"mt\",\n\t\t\t\terror: attrs.error,\n\t\t\t\tsupportedModes: attrs.supportedModes,\n\t\t\t\tpreviousSelection: attrs.currentMode,\n\t\t\t\tonConfirm: null,\n\t\t\t\tonModeSelected: (mode) => (attrs.currentMode = mode),\n\t\t\t}),\n\t\t])\n\t}\n}\n\nexport class SetupLockPageAttrs implements WizardPageAttrs<null> {\n\thidePagingButtonForPage = false\n\tdata: null = null\n\n\terror: string | null = null\n\tsupportedModes: ReadonlyArray<AppLockMethod> = []\n\tcurrentMode: AppLockMethod = AppLockMethod.None\n\n\tconstructor(public readonly mobileSystemFacade: MobileSystemFacade) {\n\t\tmobileSystemFacade.getSupportedAppLockMethods().then((supportedMethods) => {\n\t\t\tthis.supportedModes = supportedMethods\n\t\t\tm.redraw()\n\t\t})\n\t\tthis.mobileSystemFacade.getAppLockMethod().then((appLockMethod) => {\n\t\t\tthis.currentMode = appLockMethod\n\t\t\tm.redraw()\n\t\t})\n\t}\n\n\theaderTitle(): TranslationKey {\n\t\treturn \"credentialsEncryptionMode_label\"\n\t}\n\n\tasync nextAction(showDialogs: boolean): Promise<boolean> {\n\t\ttry {\n\t\t\tawait this.mobileSystemFacade.enforceAppLock(this.currentMode)\n\t\t\tawait this.mobileSystemFacade.setAppLockMethod(this.currentMode)\n\t\t} catch (e) {\n\t\t\tif (e instanceof CredentialAuthenticationError) {\n\t\t\t\tthis.error = e.message\n\t\t\t\tm.redraw()\n\t\t\t\treturn false\n\t\t\t} else if (e instanceof CancelledError) {\n\t\t\t\t// if the user cancels, is unrecognized by Face ID, enters an incorrect device password, etc., we should not close the dialog\n\t\t\t\t// and instead let them try again or choose a different encryption mode\n\t\t\t\treturn false\n\t\t\t} else {\n\t\t\t\tthrow e\n\t\t\t}\n\t\t}\n\n\t\t// next action not available for this page\n\t\treturn true\n\t}\n\n\tisSkipAvailable(): boolean {\n\t\treturn false\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.supportedModes.length > 1\n\t}\n}\n"]}