{"version":3,"file":"BlobUtils.js","sourceRoot":"","sources":["../../../../../../src/common/api/common/utils/BlobUtils.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,aAAa,EAAE,UAAU,EAAE,MAAM,kBAAkB,CAAA;AAmB5D,MAAM,UAAU,yBAAyB,CAAC,YAA0B;IACnE,OAAO;QACN,KAAK,EAAE,YAAY,CAAC,KAAK;QACzB,SAAS,EAAE,aAAa,CAAC,YAAY,CAAC,GAAG,CAAC;QAC1C,MAAM,EAAE,UAAU,CAAC,YAAY,CAAC,GAAG,CAAC;QACpC,MAAM,EAAE,YAAY;KACpB,CAAA;AACF,CAAC","sourcesContent":["import { File as TutanotaFile } from \"../../entities/tutanota/TypeRefs.js\"\nimport { elementIdPart, listIdPart } from \"./EntityUtils.js\"\nimport { Blob } from \"../../entities/sys/TypeRefs.js\"\nimport { SomeEntity } from \"../EntityTypes.js\"\n\n/**\n * Common interface for instances that are referencing blobs. Main purpose is to have a proper way to access the attribute for the Blob aggregated type\n * because the name of the attribute can be different for each instance.\n *\n */\nexport type BlobReferencingInstance = {\n\telementId: Id\n\n\tlistId: Id | null\n\n\tblobs: Blob[]\n\n\tentity: SomeEntity\n}\n\nexport function createReferencingInstance(tutanotaFile: TutanotaFile): BlobReferencingInstance {\n\treturn {\n\t\tblobs: tutanotaFile.blobs,\n\t\telementId: elementIdPart(tutanotaFile._id),\n\t\tlistId: listIdPart(tutanotaFile._id),\n\t\tentity: tutanotaFile,\n\t}\n}\n"]}