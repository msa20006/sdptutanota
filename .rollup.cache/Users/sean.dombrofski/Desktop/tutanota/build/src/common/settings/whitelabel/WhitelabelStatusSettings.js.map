{"version":3,"file":"WhitelabelStatusSettings.js","sourceRoot":"","sources":["../../../../../src/common/settings/whitelabel/WhitelabelStatusSettings.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,6BAA6B,EAAE,MAAM,gCAAgC,CAAA;AAE9E,OAAO,EAAE,IAAI,EAAE,MAAM,8BAA8B,CAAA;AACnD,OAAO,CAAiC,MAAM,SAAS,CAAA;AACvD,OAAO,EAAE,SAAS,EAAE,MAAM,6BAA6B,CAAA;AACvD,OAAO,EAAE,UAAU,EAAE,MAAM,8BAA8B,CAAA;AAEzD,OAAO,EAAE,+BAA+B,EAAE,MAAM,yCAAyC,CAAA;AAMzF,MAAM,OAAO,wBAAwB;IACpC,IAAI,CAAC,EAAE,KAAK,EAAwC;QACnD,MAAM,EAAE,kBAAkB,EAAE,GAAG,KAAK,CAAA;QACpC,OAAO,CAAC,CAAC,SAAS,EAAE;YACnB,KAAK,EAAE,aAAa;YACpB,KAAK,EAAE,kBAAkB,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,mBAAmB,CAAC;YACpF,UAAU,EAAE,IAAI;YAChB,eAAe,EAAE,GAAG,EAAE,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;SACxE,CAAC,CAAA;IACH,CAAC;IAEO,YAAY;QACnB,OAAO,CAAC,CAAC,UAAU,EAAE;YACpB,KAAK,EAAE,wBAAwB;YAC/B,KAAK,EAAE,KAAK,IAAI,EAAE;gBACjB,MAAM,mBAAmB,GAAG,MAAM,+BAA+B,EAAE,CAAA;gBACnE,6BAA6B,CAAC,mBAAmB,CAAC,CAAA;YACnD,CAAC;YACD,IAAI,yBAAY;YAChB,IAAI,4BAAoB;SACxB,CAAC,CAAA;IACH,CAAC;CACD","sourcesContent":["import { showPlanUpgradeRequiredDialog } from \"../../misc/SubscriptionDialogs\"\nimport { Icons } from \"../../gui/base/icons/Icons\"\nimport { lang } from \"../../misc/LanguageViewModel\"\nimport m, { Children, Component, Vnode } from \"mithril\"\nimport { TextField } from \"../../gui/base/TextField.js\"\nimport { IconButton } from \"../../gui/base/IconButton.js\"\nimport { ButtonSize } from \"../../gui/base/ButtonSize.js\"\nimport { getAvailablePlansWithWhitelabel } from \"../../subscription/SubscriptionUtils.js\"\n\nexport type WhitelabelStatusSettingsAttrs = {\n\tisWhitelabelActive: boolean\n}\n\nexport class WhitelabelStatusSettings implements Component<WhitelabelStatusSettingsAttrs> {\n\tview({ attrs }: Vnode<WhitelabelStatusSettingsAttrs>): Children {\n\t\tconst { isWhitelabelActive } = attrs\n\t\treturn m(TextField, {\n\t\t\tlabel: \"state_label\",\n\t\t\tvalue: isWhitelabelActive ? lang.get(\"active_label\") : lang.get(\"deactivated_label\"),\n\t\t\tisReadOnly: true,\n\t\t\tinjectionsRight: () => (isWhitelabelActive ? null : this.renderEnable()),\n\t\t})\n\t}\n\n\tprivate renderEnable(): Children {\n\t\treturn m(IconButton, {\n\t\t\ttitle: \"whitelabelDomain_label\",\n\t\t\tclick: async () => {\n\t\t\t\tconst plansWithWhitelabel = await getAvailablePlansWithWhitelabel()\n\t\t\t\tshowPlanUpgradeRequiredDialog(plansWithWhitelabel)\n\t\t\t},\n\t\t\ticon: Icons.Edit,\n\t\t\tsize: ButtonSize.Compact,\n\t\t})\n\t}\n}\n"]}