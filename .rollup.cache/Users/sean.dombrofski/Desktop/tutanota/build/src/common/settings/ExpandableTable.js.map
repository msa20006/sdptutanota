{"version":3,"file":"ExpandableTable.js","sourceRoot":"","sources":["../../../../src/common/settings/ExpandableTable.ts"],"names":[],"mappings":"AAAA,OAAO,CAAiC,MAAM,SAAS,CAAA;AACvD,OAAO,MAAM,MAAM,gBAAgB,CAAA;AAGnC,OAAO,EAAE,KAAK,EAAE,MAAM,sBAAsB,CAAA;AAC5C,OAAO,EAAE,gBAAgB,EAAE,MAAM,uBAAuB,CAAA;AAcxD,MAAM,OAAO,eAAe;IAC3B,QAAQ,CAAiB;IAEzB;QACC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAU,KAAK,CAAC,CAAA;IACvC,CAAC;IAED,IAAI,CAAC,KAAkC;QACtC,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,UAAU,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG,KAAK,CAAC,KAAK,CAAA;QAC7E,OAAO,CAAC,CACP,gBAAgB,EAChB;YACC,KAAK;YACL,UAAU;YACV,OAAO;YACP,QAAQ;YACR,QAAQ,EAAE,QAAQ,IAAI,IAAI,CAAC,QAAQ;SACnC,EACD,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,CACf,CAAA;IACF,CAAC;CACD","sourcesContent":["import m, { Children, Component, Vnode } from \"mithril\"\nimport stream from \"mithril/stream\"\nimport type { InfoLink, TranslationKey, MaybeTranslation } from \"../misc/LanguageViewModel.js\"\nimport type { TableAttrs } from \"../gui/base/Table.js\"\nimport { Table } from \"../gui/base/Table.js\"\nimport { SettingsExpander } from \"./SettingsExpander.js\"\nimport type { lazy } from \"@tutao/tutanota-utils\"\nimport Stream from \"mithril/stream\"\n\ntype ExpandableTableAttrs = {\n\ttitle: MaybeTranslation\n\ttable: TableAttrs\n\tinfoMsg: MaybeTranslation\n\tinfoLinkId?: InfoLink\n\t// ExpandableTable uses internal state whenever this isn't passed in\n\texpanded?: Stream<boolean>\n\tonExpand?: () => void\n}\n\nexport class ExpandableTable implements Component<ExpandableTableAttrs> {\n\texpanded: Stream<boolean>\n\n\tconstructor() {\n\t\tthis.expanded = stream<boolean>(false)\n\t}\n\n\tview(vnode: Vnode<ExpandableTableAttrs>): Children {\n\t\tconst { title, table, infoLinkId, infoMsg, expanded, onExpand } = vnode.attrs\n\t\treturn m(\n\t\t\tSettingsExpander,\n\t\t\t{\n\t\t\t\ttitle,\n\t\t\t\tinfoLinkId,\n\t\t\t\tinfoMsg,\n\t\t\t\tonExpand,\n\t\t\t\texpanded: expanded || this.expanded,\n\t\t\t},\n\t\t\tm(Table, table),\n\t\t)\n\t}\n}\n"]}