{"version":3,"file":"ScrollSelectList.js","sourceRoot":"","sources":["../../../../src/common/gui/ScrollSelectList.ts"],"names":[],"mappings":"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","sourcesContent":["import m, { Children, ClassComponent, Component, CVnode, CVnodeDOM, Vnode, VnodeDOM } from \"mithril\"\nimport type { TranslationKey } from \"../misc/LanguageViewModel\"\nimport { lang } from \"../misc/LanguageViewModel\"\nimport { Icon } from \"./base/Icon\"\nimport { Icons } from \"./base/icons/Icons\"\nimport type { MaybeLazy } from \"@tutao/tutanota-utils\"\nimport { resolveMaybeLazy } from \"@tutao/tutanota-utils\"\n\nexport type ScrollSelectListAttrs<T> = {\n\titems: ReadonlyArray<T>\n\tselectedItem: T | null\n\tonItemSelected: (item: T) => unknown\n\temptyListMessage: MaybeLazy<TranslationKey>\n\twidth: number\n\trenderItem: (item: T) => Children\n\tonItemDoubleClicked: (item: T) => unknown\n}\n\nexport class ScrollSelectList<T> implements ClassComponent<ScrollSelectListAttrs<T>> {\n\tprivate selectedItem: T | null = null\n\n\tview(vnode: CVnode<ScrollSelectListAttrs<T>>): Children {\n\t\tconst a = vnode.attrs\n\t\treturn m(\n\t\t\t\".flex.flex-column.scroll-no-overlay\",\n\t\t\ta.items.length > 0\n\t\t\t\t? a.items.map((item) => this.renderRow(item, vnode))\n\t\t\t\t: m(\".row-selected.text-center.pt\", lang.get(resolveMaybeLazy(a.emptyListMessage))),\n\t\t)\n\t}\n\n\tonupdate(vnode: CVnodeDOM<ScrollSelectListAttrs<T>>) {\n\t\tconst newSelectedItem = vnode.attrs.selectedItem\n\n\t\tif (newSelectedItem !== this.selectedItem) {\n\t\t\tthis._onSelectionChanged(newSelectedItem, vnode.attrs.items, vnode.dom as HTMLElement)\n\t\t\t// Ensures that redraw happens after selected item changed this guarantess that the selected item is focused correctly.\n\t\t\t// Selecting the correct item in the list requires that the (possible filtered) list needs render first and then we\n\t\t\t// can scroll to the new selected item. Therefore we call onSelectionChange in onupdate callback.\n\t\t\tm.redraw()\n\t\t}\n\t}\n\n\trenderRow(item: T, vnode: Vnode<ScrollSelectListAttrs<T>>): Children {\n\t\tconst a = vnode.attrs\n\t\tconst isSelected = a.selectedItem === item\n\t\treturn m(\n\t\t\t\".flex.flex-column.click\",\n\t\t\t{\n\t\t\t\tstyle: {\n\t\t\t\t\tmaxWidth: a.width,\n\t\t\t\t},\n\t\t\t},\n\t\t\t[\n\t\t\t\tm(\n\t\t\t\t\t\".flex.template-list-row\" + (isSelected ? \".row-selected\" : \"\"),\n\t\t\t\t\t{\n\t\t\t\t\t\tonclick: (e: MouseEvent) => {\n\t\t\t\t\t\t\ta.onItemSelected(item)\n\t\t\t\t\t\t\te.stopPropagation()\n\t\t\t\t\t\t},\n\t\t\t\t\t\tondblclick: (e: MouseEvent) => {\n\t\t\t\t\t\t\ta.onItemSelected(item)\n\t\t\t\t\t\t\ta.onItemDoubleClicked(item)\n\t\t\t\t\t\t\te.stopPropagation()\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t[\n\t\t\t\t\t\ta.renderItem(item),\n\t\t\t\t\t\tisSelected\n\t\t\t\t\t\t\t? m(Icon, {\n\t\t\t\t\t\t\t\t\ticon: Icons.ArrowForward,\n\t\t\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\t\t\tmarginTop: \"auto\",\n\t\t\t\t\t\t\t\t\t\tmarginBottom: \"auto\",\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t  })\n\t\t\t\t\t\t\t: m(\"\", {\n\t\t\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\t\t\twidth: \"17.1px\",\n\t\t\t\t\t\t\t\t\t\theight: \"16px\",\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t  }),\n\t\t\t\t\t],\n\t\t\t\t),\n\t\t\t],\n\t\t)\n\t}\n\n\t_onSelectionChanged(selectedItem: T | null, items: ReadonlyArray<T>, scrollDom: HTMLElement) {\n\t\tthis.selectedItem = selectedItem\n\t\tif (selectedItem != null) {\n\t\t\tconst selectedIndex = items.indexOf(selectedItem)\n\n\t\t\tif (selectedIndex !== -1) {\n\t\t\t\tconst selectedDomElement = scrollDom.children.item(selectedIndex)\n\n\t\t\t\tif (selectedDomElement) {\n\t\t\t\t\tselectedDomElement.scrollIntoView({\n\t\t\t\t\t\tblock: \"nearest\",\n\t\t\t\t\t\tinline: \"nearest\",\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n"]}