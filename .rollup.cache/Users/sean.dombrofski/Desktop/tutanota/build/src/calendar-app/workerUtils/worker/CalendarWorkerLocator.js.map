{"version":3,"file":"CalendarWorkerLocator.js","sourceRoot":"","sources":["../../../../../src/calendar-app/workerUtils/worker/CalendarWorkerLocator.ts"],"names":[],"mappings":"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","sourcesContent":["import { CacheInfo, LoginFacade, LoginListener } from \"../../../common/api/worker/facades/LoginFacade.js\"\nimport type { EntityRestInterface } from \"../../../common/api/worker/rest/EntityRestClient.js\"\nimport { EntityRestClient } from \"../../../common/api/worker/rest/EntityRestClient.js\"\nimport type { UserManagementFacade } from \"../../../common/api/worker/facades/lazy/UserManagementFacade.js\"\nimport { CacheStorage, DefaultEntityRestCache, EntityRestCache } from \"../../../common/api/worker/rest/DefaultEntityRestCache.js\"\nimport type { GroupManagementFacade } from \"../../../common/api/worker/facades/lazy/GroupManagementFacade.js\"\nimport type { MailFacade } from \"../../../common/api/worker/facades/lazy/MailFacade.js\"\nimport type { MailAddressFacade } from \"../../../common/api/worker/facades/lazy/MailAddressFacade.js\"\nimport type { CustomerFacade } from \"../../../common/api/worker/facades/lazy/CustomerFacade.js\"\nimport type { CounterFacade } from \"../../../common/api/worker/facades/lazy/CounterFacade.js\"\nimport { EventBusClient } from \"../../../common/api/worker/EventBusClient.js\"\nimport { assertWorkerOrNode, getWebsocketBaseUrl, isAndroidApp, isBrowser, isIOSApp, isOfflineStorageAvailable } from \"../../../common/api/common/Env.js\"\nimport { Const } from \"../../../common/api/common/TutanotaConstants.js\"\nimport type { BrowserData } from \"../../../common/misc/ClientConstants.js\"\nimport type { CalendarFacade } from \"../../../common/api/worker/facades/lazy/CalendarFacade.js\"\nimport type { ShareFacade } from \"../../../common/api/worker/facades/lazy/ShareFacade.js\"\nimport { RestClient } from \"../../../common/api/worker/rest/RestClient.js\"\nimport { SuspensionHandler } from \"../../../common/api/worker/SuspensionHandler.js\"\nimport { EntityClient } from \"../../../common/api/common/EntityClient.js\"\nimport type { GiftCardFacade } from \"../../../common/api/worker/facades/lazy/GiftCardFacade.js\"\nimport type { ConfigurationDatabase } from \"../../../common/api/worker/facades/lazy/ConfigurationDatabase.js\"\nimport { DeviceEncryptionFacade } from \"../../../common/api/worker/facades/DeviceEncryptionFacade.js\"\nimport type { NativeInterface } from \"../../../common/native/common/NativeInterface.js\"\nimport { NativeFileApp } from \"../../../common/native/common/FileApp.js\"\nimport { AesApp } from \"../../../common/native/worker/AesApp.js\"\nimport type { RsaImplementation } from \"../../../common/api/worker/crypto/RsaImplementation.js\"\nimport { createRsaImplementation } from \"../../../common/api/worker/crypto/RsaImplementation.js\"\nimport { CryptoFacade } from \"../../../common/api/worker/crypto/CryptoFacade.js\"\nimport { InstanceMapper } from \"../../../common/api/worker/crypto/InstanceMapper.js\"\nimport { SleepDetector } from \"../../../common/api/worker/utils/SleepDetector.js\"\nimport { SchedulerImpl } from \"../../../common/api/common/utils/Scheduler.js\"\nimport { NoZoneDateProvider } from \"../../../common/api/common/utils/NoZoneDateProvider.js\"\nimport { LateInitializedCacheStorageImpl } from \"../../../common/api/worker/rest/CacheStorageProxy.js\"\nimport { IServiceExecutor } from \"../../../common/api/common/ServiceRequest.js\"\nimport { ServiceExecutor } from \"../../../common/api/worker/rest/ServiceExecutor.js\"\nimport type { BookingFacade } from \"../../../common/api/worker/facades/lazy/BookingFacade.js\"\nimport type { BlobFacade } from \"../../../common/api/worker/facades/lazy/BlobFacade.js\"\nimport { UserFacade } from \"../../../common/api/worker/facades/UserFacade.js\"\nimport { OfflineStorage } from \"../../../common/api/worker/offline/OfflineStorage.js\"\nimport { OFFLINE_STORAGE_MIGRATIONS, OfflineStorageMigrator } from \"../../../common/api/worker/offline/OfflineStorageMigrator.js\"\nimport { modelInfos } from \"../../../common/api/common/EntityFunctions.js\"\nimport { FileFacadeSendDispatcher } from \"../../../common/native/common/generatedipc/FileFacadeSendDispatcher.js\"\nimport { NativePushFacadeSendDispatcher } from \"../../../common/native/common/generatedipc/NativePushFacadeSendDispatcher.js\"\nimport { NativeCryptoFacadeSendDispatcher } from \"../../../common/native/common/generatedipc/NativeCryptoFacadeSendDispatcher.js\"\nimport { random } from \"@tutao/tutanota-crypto\"\nimport { ExportFacadeSendDispatcher } from \"../../../common/native/common/generatedipc/ExportFacadeSendDispatcher.js\"\nimport { lazyAsync, lazyMemoized, noOp } from \"@tutao/tutanota-utils\"\nimport { InterWindowEventFacadeSendDispatcher } from \"../../../common/native/common/generatedipc/InterWindowEventFacadeSendDispatcher.js\"\nimport { SqlCipherFacadeSendDispatcher } from \"../../../common/native/common/generatedipc/SqlCipherFacadeSendDispatcher.js\"\nimport { EntropyFacade } from \"../../../common/api/worker/facades/EntropyFacade.js\"\nimport { BlobAccessTokenFacade } from \"../../../common/api/worker/facades/BlobAccessTokenFacade.js\"\nimport { OwnerEncSessionKeysUpdateQueue } from \"../../../common/api/worker/crypto/OwnerEncSessionKeysUpdateQueue.js\"\nimport { EventBusEventCoordinator } from \"../../../common/api/worker/EventBusEventCoordinator.js\"\nimport { WorkerFacade } from \"../../../common/api/worker/facades/WorkerFacade.js\"\nimport { SqlCipherFacade } from \"../../../common/native/common/generatedipc/SqlCipherFacade.js\"\nimport { Challenge } from \"../../../common/api/entities/sys/TypeRefs.js\"\nimport { LoginFailReason } from \"../../../common/api/main/PageContextLoginListener.js\"\nimport { SessionType } from \"../../../common/api/common/SessionType.js\"\nimport { Argon2idFacade, NativeArgon2idFacade, WASMArgon2idFacade } from \"../../../common/api/worker/facades/Argon2idFacade.js\"\nimport { DomainConfigProvider } from \"../../../common/api/common/DomainConfigProvider.js\"\nimport { KyberFacade, NativeKyberFacade, WASMKyberFacade } from \"../../../common/api/worker/facades/KyberFacade.js\"\nimport { PQFacade } from \"../../../common/api/worker/facades/PQFacade.js\"\nimport { PdfWriter } from \"../../../common/api/worker/pdf/PdfWriter.js\"\nimport { ContactFacade } from \"../../../common/api/worker/facades/lazy/ContactFacade.js\"\nimport { KeyLoaderFacade } from \"../../../common/api/worker/facades/KeyLoaderFacade.js\"\nimport { KeyRotationFacade } from \"../../../common/api/worker/facades/KeyRotationFacade.js\"\nimport { KeyCache } from \"../../../common/api/worker/facades/KeyCache.js\"\nimport { RecoverCodeFacade } from \"../../../common/api/worker/facades/lazy/RecoverCodeFacade.js\"\nimport { CacheManagementFacade } from \"../../../common/api/worker/facades/lazy/CacheManagementFacade.js\"\nimport { CalendarWorkerImpl } from \"./CalendarWorkerImpl.js\"\nimport { CalendarOfflineCleaner } from \"../offline/CalendarOfflineCleaner.js\"\nimport type { QueuedBatch } from \"../../../common/api/worker/EventQueue.js\"\nimport { Credentials } from \"../../../common/misc/credentials/Credentials.js\"\nimport { AsymmetricCryptoFacade } from \"../../../common/api/worker/crypto/AsymmetricCryptoFacade.js\"\nimport { CryptoWrapper } from \"../../../common/api/worker/crypto/CryptoWrapper.js\"\nimport { KeyAuthenticationFacade } from \"../../../common/api/worker/facades/KeyAuthenticationFacade.js\"\nimport { PublicKeyProvider } from \"../../../common/api/worker/facades/PublicKeyProvider.js\"\n\nassertWorkerOrNode()\n\nexport type CalendarWorkerLocatorType = {\n\t// network & encryption\n\trestClient: RestClient\n\tserviceExecutor: IServiceExecutor\n\tcrypto: CryptoFacade\n\tinstanceMapper: InstanceMapper\n\tcacheStorage: CacheStorage\n\tcache: EntityRestInterface\n\tcachingEntityClient: EntityClient\n\teventBusClient: EventBusClient\n\trsa: RsaImplementation\n\tkyberFacade: KyberFacade\n\tpqFacade: PQFacade\n\tentropyFacade: EntropyFacade\n\tblobAccessToken: BlobAccessTokenFacade\n\tkeyCache: KeyCache\n\tkeyLoader: KeyLoaderFacade\n\tpublicKeyProvider: PublicKeyProvider\n\tkeyRotation: KeyRotationFacade\n\n\t// login\n\tuser: UserFacade\n\tlogin: LoginFacade\n\n\t// domains\n\tblob: lazyAsync<BlobFacade>\n\tmail: lazyAsync<MailFacade>\n\tcalendar: lazyAsync<CalendarFacade>\n\tcounters: lazyAsync<CounterFacade>\n\tConst: Record<string, any>\n\n\t// management facades\n\tgroupManagement: lazyAsync<GroupManagementFacade>\n\tuserManagement: lazyAsync<UserManagementFacade>\n\trecoverCode: lazyAsync<RecoverCodeFacade>\n\tcustomer: lazyAsync<CustomerFacade>\n\tgiftCards: lazyAsync<GiftCardFacade>\n\tmailAddress: lazyAsync<MailAddressFacade>\n\tbooking: lazyAsync<BookingFacade>\n\tshare: lazyAsync<ShareFacade>\n\tcacheManagement: lazyAsync<CacheManagementFacade>\n\n\t// misc & native\n\tconfigFacade: lazyAsync<ConfigurationDatabase>\n\tdeviceEncryptionFacade: DeviceEncryptionFacade\n\tnative: NativeInterface\n\tworkerFacade: WorkerFacade\n\tsqlCipherFacade: SqlCipherFacade\n\tpdfWriter: lazyAsync<PdfWriter>\n\n\t// used to cache between resets\n\t_worker: CalendarWorkerImpl\n\t_browserData: BrowserData\n\n\t//contact\n\tcontactFacade: lazyAsync<ContactFacade>\n}\nexport const locator: CalendarWorkerLocatorType = {} as any\n\nexport async function initLocator(worker: CalendarWorkerImpl, browserData: BrowserData) {\n\tlocator._worker = worker\n\tlocator._browserData = browserData\n\tlocator.keyCache = new KeyCache()\n\tconst cryptoWrapper = new CryptoWrapper()\n\tlocator.user = new UserFacade(locator.keyCache, cryptoWrapper)\n\tlocator.workerFacade = new WorkerFacade()\n\tconst dateProvider = new NoZoneDateProvider()\n\n\tconst mainInterface = worker.getMainInterface()\n\n\tconst suspensionHandler = new SuspensionHandler(mainInterface.infoMessageHandler, self)\n\tlocator.instanceMapper = new InstanceMapper()\n\tlocator.rsa = await createRsaImplementation(worker)\n\n\tconst domainConfig = new DomainConfigProvider().getCurrentDomainConfig()\n\n\tlocator.restClient = new RestClient(suspensionHandler, domainConfig)\n\tlocator.serviceExecutor = new ServiceExecutor(locator.restClient, locator.user, locator.instanceMapper, () => locator.crypto)\n\tlocator.entropyFacade = new EntropyFacade(locator.user, locator.serviceExecutor, random, () => locator.keyLoader)\n\tlocator.blobAccessToken = new BlobAccessTokenFacade(locator.serviceExecutor, locator.user, dateProvider)\n\tconst entityRestClient = new EntityRestClient(locator.user, locator.restClient, () => locator.crypto, locator.instanceMapper, locator.blobAccessToken)\n\n\tlocator.native = worker\n\tlocator.booking = lazyMemoized(async () => {\n\t\tconst { BookingFacade } = await import(\"../../../common/api/worker/facades/lazy/BookingFacade.js\")\n\t\treturn new BookingFacade(locator.serviceExecutor)\n\t})\n\n\tlet offlineStorageProvider\n\tif (isOfflineStorageAvailable()) {\n\t\tlocator.sqlCipherFacade = new SqlCipherFacadeSendDispatcher(locator.native)\n\t\tofflineStorageProvider = async () => {\n\t\t\treturn new OfflineStorage(\n\t\t\t\tlocator.sqlCipherFacade,\n\t\t\t\tnew InterWindowEventFacadeSendDispatcher(worker),\n\t\t\t\tdateProvider,\n\t\t\t\tnew OfflineStorageMigrator(OFFLINE_STORAGE_MIGRATIONS, modelInfos),\n\t\t\t\tnew CalendarOfflineCleaner(),\n\t\t\t)\n\t\t}\n\t} else {\n\t\tofflineStorageProvider = async () => null\n\t}\n\tlocator.pdfWriter = async () => {\n\t\tconst { PdfWriter } = await import(\"../../../common/api/worker/pdf/PdfWriter.js\")\n\t\treturn new PdfWriter(new TextEncoder(), undefined)\n\t}\n\n\tconst maybeUninitializedStorage = new LateInitializedCacheStorageImpl(async (error: Error) => {\n\t\tawait worker.sendError(error)\n\t}, offlineStorageProvider)\n\n\tlocator.cacheStorage = maybeUninitializedStorage\n\n\tconst fileApp = new NativeFileApp(new FileFacadeSendDispatcher(worker), new ExportFacadeSendDispatcher(worker))\n\n\tlocator.cache = new DefaultEntityRestCache(entityRestClient, maybeUninitializedStorage)\n\n\tlocator.cachingEntityClient = new EntityClient(locator.cache)\n\tconst nonCachingEntityClient = new EntityClient(entityRestClient)\n\n\tlocator.cacheManagement = lazyMemoized(async () => {\n\t\tconst { CacheManagementFacade } = await import(\"../../../common/api/worker/facades/lazy/CacheManagementFacade.js\")\n\t\treturn new CacheManagementFacade(locator.user, locator.cachingEntityClient, locator.cache as DefaultEntityRestCache)\n\t})\n\n\tif (isIOSApp() || isAndroidApp()) {\n\t\tlocator.kyberFacade = new NativeKyberFacade(new NativeCryptoFacadeSendDispatcher(worker))\n\t} else {\n\t\tlocator.kyberFacade = new WASMKyberFacade()\n\t}\n\n\tlocator.pqFacade = new PQFacade(locator.kyberFacade)\n\n\tlocator.publicKeyProvider = new PublicKeyProvider(locator.serviceExecutor)\n\n\tlocator.keyLoader = new KeyLoaderFacade(locator.keyCache, locator.user, locator.cachingEntityClient, locator.cacheManagement)\n\n\tconst asymmetricCrypto = new AsymmetricCryptoFacade(\n\t\tlocator.rsa,\n\t\tlocator.pqFacade,\n\t\tlocator.keyLoader,\n\t\tcryptoWrapper,\n\t\tlocator.serviceExecutor,\n\t\tlocator.publicKeyProvider,\n\t)\n\tlocator.crypto = new CryptoFacade(\n\t\tlocator.user,\n\t\tlocator.cachingEntityClient,\n\t\tlocator.restClient,\n\t\tlocator.serviceExecutor,\n\t\tlocator.instanceMapper,\n\t\tnew OwnerEncSessionKeysUpdateQueue(locator.user, locator.serviceExecutor),\n\t\tlocator.cache as DefaultEntityRestCache,\n\t\tlocator.keyLoader,\n\t\tasymmetricCrypto,\n\t\tlocator.publicKeyProvider,\n\t\tlazyMemoized(() => locator.keyRotation),\n\t)\n\n\tlocator.recoverCode = lazyMemoized(async () => {\n\t\tconst { RecoverCodeFacade } = await import(\"../../../common/api/worker/facades/lazy/RecoverCodeFacade.js\")\n\t\treturn new RecoverCodeFacade(locator.user, locator.cachingEntityClient, locator.login, locator.keyLoader)\n\t})\n\tlocator.share = lazyMemoized(async () => {\n\t\tconst { ShareFacade } = await import(\"../../../common/api/worker/facades/lazy/ShareFacade.js\")\n\t\treturn new ShareFacade(locator.user, locator.crypto, locator.serviceExecutor, locator.cachingEntityClient, locator.keyLoader)\n\t})\n\tlocator.counters = lazyMemoized(async () => {\n\t\tconst { CounterFacade } = await import(\"../../../common/api/worker/facades/lazy/CounterFacade.js\")\n\t\treturn new CounterFacade(locator.serviceExecutor)\n\t})\n\tconst keyAuthenticationFacade = new KeyAuthenticationFacade(cryptoWrapper)\n\tlocator.groupManagement = lazyMemoized(async () => {\n\t\tconst { GroupManagementFacade } = await import(\"../../../common/api/worker/facades/lazy/GroupManagementFacade.js\")\n\t\treturn new GroupManagementFacade(\n\t\t\tlocator.user,\n\t\t\tawait locator.counters(),\n\t\t\tlocator.cachingEntityClient,\n\t\t\tlocator.serviceExecutor,\n\t\t\tlocator.pqFacade,\n\t\t\tlocator.keyLoader,\n\t\t\tawait locator.cacheManagement(),\n\t\t\tasymmetricCrypto,\n\t\t\tcryptoWrapper,\n\t\t\tkeyAuthenticationFacade,\n\t\t)\n\t})\n\tlocator.keyRotation = new KeyRotationFacade(\n\t\tlocator.cachingEntityClient,\n\t\tlocator.keyLoader,\n\t\tlocator.pqFacade,\n\t\tlocator.serviceExecutor,\n\t\tcryptoWrapper,\n\t\tlocator.recoverCode,\n\t\tlocator.user,\n\t\tlocator.crypto,\n\t\tlocator.share,\n\t\tlocator.groupManagement,\n\t\tasymmetricCrypto,\n\t\tkeyAuthenticationFacade,\n\t\tlocator.publicKeyProvider,\n\t)\n\n\tconst loginListener: LoginListener = {\n\t\tonFullLoginSuccess(sessionType: SessionType, cacheInfo: CacheInfo, credentials: Credentials): Promise<void> {\n\t\t\treturn mainInterface.loginListener.onFullLoginSuccess(sessionType, cacheInfo, credentials)\n\t\t},\n\n\t\tonLoginFailure(reason: LoginFailReason): Promise<void> {\n\t\t\treturn mainInterface.loginListener.onLoginFailure(reason)\n\t\t},\n\n\t\tonSecondFactorChallenge(sessionId: IdTuple, challenges: ReadonlyArray<Challenge>, mailAddress: string | null): Promise<void> {\n\t\t\treturn mainInterface.loginListener.onSecondFactorChallenge(sessionId, challenges, mailAddress)\n\t\t},\n\t}\n\n\tlet argon2idFacade: Argon2idFacade\n\tif (!isBrowser()) {\n\t\targon2idFacade = new NativeArgon2idFacade(new NativeCryptoFacadeSendDispatcher(worker))\n\t} else {\n\t\targon2idFacade = new WASMArgon2idFacade()\n\t}\n\n\tlocator.deviceEncryptionFacade = new DeviceEncryptionFacade()\n\tconst { DatabaseKeyFactory } = await import(\"../../../common/misc/credentials/DatabaseKeyFactory.js\")\n\n\tlocator.login = new LoginFacade(\n\t\tlocator.restClient,\n\t\t/**\n\t\t * we don't want to try to use the cache in the login facade, because it may not be available (when no user is logged in)\n\t\t */\n\t\tnew EntityClient(locator.cache),\n\t\tloginListener,\n\t\tlocator.instanceMapper,\n\t\tlocator.crypto,\n\t\tlocator.keyRotation,\n\t\tmaybeUninitializedStorage,\n\t\tlocator.serviceExecutor,\n\t\tlocator.user,\n\t\tlocator.blobAccessToken,\n\t\tlocator.entropyFacade,\n\t\tnew DatabaseKeyFactory(locator.deviceEncryptionFacade),\n\t\targon2idFacade,\n\t\tnonCachingEntityClient,\n\t\tasync (error: Error) => {\n\t\t\tawait worker.sendError(error)\n\t\t},\n\t\tlocator.cacheManagement,\n\t)\n\n\tlocator.userManagement = lazyMemoized(async () => {\n\t\tconst { UserManagementFacade } = await import(\"../../../common/api/worker/facades/lazy/UserManagementFacade.js\")\n\t\treturn new UserManagementFacade(\n\t\t\tlocator.user,\n\t\t\tawait locator.groupManagement(),\n\t\t\tawait locator.counters(),\n\t\t\tlocator.cachingEntityClient,\n\t\t\tlocator.serviceExecutor,\n\t\t\tmainInterface.operationProgressTracker,\n\t\t\tlocator.login,\n\t\t\tlocator.pqFacade,\n\t\t\tlocator.keyLoader,\n\t\t\tawait locator.recoverCode(),\n\t\t)\n\t})\n\tlocator.customer = lazyMemoized(async () => {\n\t\tconst { CustomerFacade } = await import(\"../../../common/api/worker/facades/lazy/CustomerFacade.js\")\n\t\treturn new CustomerFacade(\n\t\t\tlocator.user,\n\t\t\tawait locator.groupManagement(),\n\t\t\tawait locator.userManagement(),\n\t\t\tawait locator.counters(),\n\t\t\tlocator.rsa,\n\t\t\tlocator.cachingEntityClient,\n\t\t\tlocator.serviceExecutor,\n\t\t\tawait locator.booking(),\n\t\t\tlocator.crypto,\n\t\t\tmainInterface.operationProgressTracker,\n\t\t\tlocator.pdfWriter,\n\t\t\tlocator.pqFacade,\n\t\t\tlocator.keyLoader,\n\t\t\tawait locator.recoverCode(),\n\t\t\tasymmetricCrypto,\n\t\t)\n\t})\n\tconst aesApp = new AesApp(new NativeCryptoFacadeSendDispatcher(worker), random)\n\tlocator.blob = lazyMemoized(async () => {\n\t\tconst { BlobFacade } = await import(\"../../../common/api/worker/facades/lazy/BlobFacade.js\")\n\t\treturn new BlobFacade(locator.restClient, suspensionHandler, fileApp, aesApp, locator.instanceMapper, locator.crypto, locator.blobAccessToken)\n\t})\n\tlocator.mail = lazyMemoized(async () => {\n\t\tconst { MailFacade } = await import(\"../../../common/api/worker/facades/lazy/MailFacade.js\")\n\t\treturn new MailFacade(\n\t\t\tlocator.user,\n\t\t\tlocator.cachingEntityClient,\n\t\t\tlocator.crypto,\n\t\t\tlocator.serviceExecutor,\n\t\t\tawait locator.blob(),\n\t\t\tfileApp,\n\t\t\tlocator.login,\n\t\t\tlocator.keyLoader,\n\t\t\tlocator.publicKeyProvider,\n\t\t)\n\t})\n\tconst nativePushFacade = new NativePushFacadeSendDispatcher(worker)\n\tlocator.calendar = lazyMemoized(async () => {\n\t\tconst { CalendarFacade } = await import(\"../../../common/api/worker/facades/lazy/CalendarFacade.js\")\n\t\treturn new CalendarFacade(\n\t\t\tlocator.user,\n\t\t\tawait locator.groupManagement(),\n\t\t\tlocator.cache as DefaultEntityRestCache,\n\t\t\tnonCachingEntityClient, // without cache\n\t\t\tnativePushFacade,\n\t\t\tmainInterface.operationProgressTracker,\n\t\t\tlocator.instanceMapper,\n\t\t\tlocator.serviceExecutor,\n\t\t\tlocator.crypto,\n\t\t\tmainInterface.infoMessageHandler,\n\t\t)\n\t})\n\n\tlocator.mailAddress = lazyMemoized(async () => {\n\t\tconst { MailAddressFacade } = await import(\"../../../common/api/worker/facades/lazy/MailAddressFacade.js\")\n\t\treturn new MailAddressFacade(\n\t\t\tlocator.user,\n\t\t\tawait locator.groupManagement(),\n\t\t\tlocator.serviceExecutor,\n\t\t\tnonCachingEntityClient, // without cache\n\t\t)\n\t})\n\tconst scheduler = new SchedulerImpl(dateProvider, self, self)\n\n\tlocator.configFacade = lazyMemoized(async () => {\n\t\tconst { ConfigurationDatabase } = await import(\"../../../common/api/worker/facades/lazy/ConfigurationDatabase.js\")\n\t\treturn new ConfigurationDatabase(locator.keyLoader, locator.user)\n\t})\n\n\tconst eventBusCoordinator = new EventBusEventCoordinator(\n\t\tmainInterface.wsConnectivityListener,\n\t\tlocator.mail,\n\t\tlocator.user,\n\t\tlocator.cachingEntityClient,\n\t\tmainInterface.eventController,\n\t\tlocator.configFacade,\n\t\tlocator.keyRotation,\n\t\tlocator.cacheManagement,\n\t\tasync (error: Error) => {\n\t\t\tawait worker.sendError(error)\n\t\t},\n\t\t(queuedBatch: QueuedBatch[]) => noOp,\n\t)\n\n\tlocator.eventBusClient = new EventBusClient(\n\t\teventBusCoordinator,\n\t\tlocator.cache as EntityRestCache,\n\t\tlocator.user,\n\t\tlocator.cachingEntityClient,\n\t\tlocator.instanceMapper,\n\t\t(path) => new WebSocket(getWebsocketBaseUrl(domainConfig) + path),\n\t\tnew SleepDetector(scheduler, dateProvider),\n\t\tmainInterface.progressTracker,\n\t)\n\tlocator.login.init(locator.eventBusClient)\n\tlocator.Const = Const\n\tlocator.giftCards = lazyMemoized(async () => {\n\t\tconst { GiftCardFacade } = await import(\"../../../common/api/worker/facades/lazy/GiftCardFacade.js\")\n\t\treturn new GiftCardFacade(locator.user, await locator.customer(), locator.serviceExecutor, locator.crypto, locator.keyLoader)\n\t})\n\tlocator.contactFacade = lazyMemoized(async () => {\n\t\tconst { ContactFacade } = await import(\"../../../common/api/worker/facades/lazy/ContactFacade.js\")\n\t\treturn new ContactFacade(new EntityClient(locator.cache))\n\t})\n}\n\nexport async function resetLocator(): Promise<void> {\n\tawait locator.login.resetSession()\n\tawait initLocator(locator._worker, locator._browserData)\n}\n\nif (typeof self !== \"undefined\") {\n\t;(self as unknown as WorkerGlobalScope).locator = locator // export in worker scope\n}\n\n/*\n * @returns true if webassembly is supported\n */\nexport function isWebAssemblySupported() {\n\treturn typeof WebAssembly === \"object\" && typeof WebAssembly.instantiate === \"function\"\n}\n"]}