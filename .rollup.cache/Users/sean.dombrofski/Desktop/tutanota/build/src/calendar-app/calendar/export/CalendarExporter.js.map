{"version":3,"file":"CalendarExporter.js","sourceRoot":"","sources":["../../../../../src/calendar-app/calendar/export/CalendarExporter.ts"],"names":[],"mappings":"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","sourcesContent":["import type { CalendarAttendeeStatus, CalendarMethod } from \"../../../common/api/common/TutanotaConstants\"\nimport { assertEnumValue, EndType, RepeatPeriod, SECOND_MS } from \"../../../common/api/common/TutanotaConstants\"\nimport { assertNotNull, downcast, incrementDate, mapAndFilterNull, neverNull, pad, stringToUtf8Uint8Array } from \"@tutao/tutanota-utils\"\nimport { calendarAttendeeStatusToParstat, iCalReplacements, repeatPeriodToIcalFrequency } from \"./CalendarParser\"\nimport { getAllDayDateLocal, isAllDayEvent } from \"../../../common/api/common/utils/CommonCalendarUtils\"\nimport { AlarmIntervalUnit, generateUid, getTimeZone, parseAlarmInterval } from \"../../../common/calendar/date/CalendarUtils\"\nimport type { CalendarEvent } from \"../../../common/api/entities/tutanota/TypeRefs.js\"\nimport { createFile } from \"../../../common/api/entities/tutanota/TypeRefs.js\"\nimport { convertToDataFile, DataFile } from \"../../../common/api/common/DataFile\"\nimport type { DateWrapper, RepeatRule, UserAlarmInfo } from \"../../../common/api/entities/sys/TypeRefs.js\"\nimport { DateTime } from \"luxon\"\nimport { getLetId } from \"../../../common/api/common/utils/EntityUtils\"\nimport { CALENDAR_MIME_TYPE } from \"../../../common/file/FileController.js\"\n\n/** create an ical data file that can be attached to an invitation/update/cancellation/response mail */\nexport function makeInvitationCalendarFile(event: CalendarEvent, method: CalendarMethod, now: Date, zone: string): DataFile {\n\tconst stringValue = makeInvitationCalendar(env.versionNumber, event, method, now, zone)\n\tconst data = stringToUtf8Uint8Array(stringValue)\n\tconst date = new Date()\n\tconst tmpFile = createFile({\n\t\tname: `${method.toLowerCase()}-${date.getFullYear()}${date.getMonth() + 1}${date.getDate()}.ics`,\n\t\tmimeType: CALENDAR_MIME_TYPE,\n\t\tsize: String(data.byteLength),\n\t\tcid: null,\n\t\tblobs: [],\n\t\tparent: null,\n\t\tsubFiles: null,\n\t})\n\treturn convertToDataFile(tmpFile, data)\n}\n\n/** serialize a list of events into a valid ical string using the PUBLISH method suitable to import as a calendar into any app supporting ical */\nexport function serializeCalendar(\n\tversionNumber: string,\n\tevents: Array<{\n\t\tevent: CalendarEvent\n\t\talarms: Array<UserAlarmInfo>\n\t}>,\n\tnow: Date,\n\tzone: string,\n): string {\n\treturn wrapIntoCalendar(versionNumber, \"PUBLISH\", events.map(({ event, alarms }) => serializeEvent(event, alarms, now, zone)).flat())\n}\n\n//\n// end of the public interface for calendar invites/import/export, everything below this is exported for testing.\n//\n\n/** importer internals exported for testing, should always be used through serializeCalendar */\nexport function serializeEvent(event: CalendarEvent, alarms: Array<UserAlarmInfo>, now: Date, timeZone: string): Array<string> {\n\tconst repeatRule = event.repeatRule\n\tconst isAllDay = isAllDayEvent(event)\n\tconst localZone = getTimeZone()\n\tlet dateStart, dateEnd\n\n\tif (isAllDay) {\n\t\t// We use local zone because we convert UTC time to local first so to convert it back we need to use the right one.\n\t\t// It will not affect times in case of all-day event anyway\n\t\tdateStart = `DTSTART;VALUE=DATE:${formatDate(getAllDayDateLocal(event.startTime), localZone)}`\n\t\tdateEnd = `DTEND;VALUE=DATE:${formatDate(getAllDayDateLocal(event.endTime), localZone)}`\n\t} else if (repeatRule) {\n\t\tdateStart = `DTSTART;TZID=${repeatRule.timeZone}:${formatDateTime(event.startTime, repeatRule.timeZone)}`\n\t\tdateEnd = `DTEND;TZID=${repeatRule.timeZone}:${formatDateTime(event.endTime, repeatRule.timeZone)}`\n\t} else {\n\t\tdateStart = `DTSTART:${formatDateTimeUTC(event.startTime)}`\n\t\tdateEnd = `DTEND:${formatDateTimeUTC(event.endTime)}`\n\t}\n\n\treturn [\n\t\t\"BEGIN:VEVENT\",\n\t\tdateStart,\n\t\tdateEnd,\n\t\t`DTSTAMP:${formatDateTimeUTC(now)}`,\n\t\t`UID:${event.uid ? event.uid : generateUid(assertNotNull(event._ownerGroup), now.getTime())}`, // legacy: only generate uid for older calendar events.\n\t\t`SEQUENCE:${event.sequence}`,\n\t\t`SUMMARY:${serializeIcalText(event.summary)}`,\n\t]\n\t\t.concat(\n\t\t\tevent.recurrenceId != null\n\t\t\t\t? isAllDay\n\t\t\t\t\t? `RECURRENCE-ID;VALUE=DATE:${formatDate(getAllDayDateLocal(event.recurrenceId), localZone)}`\n\t\t\t\t\t: `RECURRENCE-ID;VALUE=DATETIME:${formatDateTimeUTC(event.recurrenceId)}`\n\t\t\t\t: [],\n\t\t)\n\t\t.concat(event.description && event.description !== \"\" ? `DESCRIPTION:${serializeIcalText(event.description)}` : [])\n\t\t.concat(event.recurrenceId == null ? serializeRepeatRule(repeatRule, isAllDay, timeZone) : [])\n\t\t.concat(event.location && event.location.length > 0 ? `LOCATION:${serializeIcalText(event.location)}` : [])\n\t\t.concat(\n\t\t\t...mapAndFilterNull(alarms, (alarm) => {\n\t\t\t\ttry {\n\t\t\t\t\treturn serializeAlarm(event, alarm)\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.log(`error serializing alarm ${getLetId(alarm).toString()} for event ${getLetId(event).toString()}:`, e)\n\t\t\t\t\treturn null\n\t\t\t\t}\n\t\t\t}),\n\t\t)\n\t\t.concat(serializeParticipants(event))\n\t\t.concat(\"END:VEVENT\")\n}\n\n/** importer internals exported for testing */\nexport function serializeRepeatRule(repeatRule: RepeatRule | null, isAllDayEvent: boolean, localTimeZone: string) {\n\tif (repeatRule) {\n\t\tlet endType = \"\"\n\n\t\tif (repeatRule.endType === EndType.Count) {\n\t\t\tendType = `;COUNT=${neverNull(repeatRule.endValue)}`\n\t\t} else if (repeatRule.endType === EndType.UntilDate) {\n\t\t\t// According to the RFC 5545 section 3.3.5\n\t\t\t//  The UNTIL rule part defines a DATE or DATE-TIME value that bounds\n\t\t\t//  the recurrence rule in an inclusive manner.  If the value\n\t\t\t//  specified by UNTIL is synchronized with the specified recurrence,\n\t\t\t//  this DATE or DATE-TIME becomes the last instance of the\n\t\t\t//  recurrence.  The value of the UNTIL rule part MUST have the same\n\t\t\t//  value type as the \"DTSTART\" property.  Furthermore, if the\n\t\t\t//  \"DTSTART\" property is specified as a date with local time, then\n\t\t\t//  the UNTIL rule part MUST also be specified as a date with local\n\t\t\t//  time.  If the \"DTSTART\" property is specified as a date with UTC\n\t\t\t//  time or a date with local time and time zone reference, then the\n\t\t\t//  UNTIL rule part MUST be specified as a date with UTC time.\n\t\t\t// We have three cases (check serializeEvent()).\n\t\t\t// So our matrix wil be:\n\t\t\t//\n\t\t\t// Case       | start/end format | UNTIL format\n\t\t\t// All-day:   | date             | date\n\t\t\t// w/RR       | TZID + DateTime  | timestamp\n\t\t\t// w/o/RR     | timestamp        | N/A\n\t\t\t//\n\t\t\t// In this branch there is a repeat rule and we just check if it's all day.\n\t\t\t// We also differ in a way that we define end as exclusive (because it's so\n\t\t\t// hard to find anything in this RFC).\n\t\t\tconst date = new Date(Number(repeatRule.endValue))\n\t\t\tconst value = isAllDayEvent ? formatDate(incrementDate(date, -1), localTimeZone) : formatDateTimeUTC(new Date(date.getTime() - SECOND_MS))\n\t\t\tendType = `;UNTIL=${value}`\n\t\t}\n\n\t\tconst excludedDates = serializeExcludedDates(repeatRule.excludedDates, repeatRule.timeZone)\n\t\treturn [\n\t\t\t`RRULE:FREQ=${repeatPeriodToIcalFrequency(assertEnumValue(RepeatPeriod, repeatRule.frequency))}` + `;INTERVAL=${repeatRule.interval}` + endType,\n\t\t].concat(excludedDates)\n\t} else {\n\t\treturn []\n\t}\n}\n\n/** importer internals exported for testing */\nexport function serializeExcludedDates(excludedDates: DateWrapper[], timeZone: string): string[] {\n\tif (excludedDates.length > 0) {\n\t\tlet dates = \"\"\n\t\tfor (let i = 0; i < excludedDates.length; i++) {\n\t\t\tdates += formatDateTime(excludedDates[i].date, timeZone)\n\t\t\tif (i < excludedDates.length - 1) {\n\t\t\t\tdates += \",\"\n\t\t\t}\n\t\t}\n\t\treturn [`EXDATE;TZID=${timeZone}:${dates}`]\n\t} else {\n\t\treturn []\n\t}\n}\n\n/** importer internals exported for testing */\nexport function formatDateTimeUTC(date: Date): string {\n\treturn `${date.getUTCFullYear()}${pad2(date.getUTCMonth() + 1)}${pad2(date.getUTCDate())}T${pad2(date.getUTCHours())}${pad2(date.getUTCMinutes())}${pad2(\n\t\tdate.getUTCSeconds(),\n\t)}Z`\n}\n\nfunction formatDateTime(date: Date, timeZone: string): string {\n\tconst dateTime = DateTime.fromJSDate(date, {\n\t\tzone: timeZone,\n\t})\n\treturn `${dateTime.year}${pad2(dateTime.month)}${pad2(dateTime.day)}T${pad2(dateTime.hour)}${pad2(dateTime.minute)}${pad2(dateTime.second)}`\n}\n\nfunction formatDate(date: Date, timeZone: string): string {\n\tconst dateTime = DateTime.fromJSDate(date, {\n\t\tzone: timeZone,\n\t})\n\treturn `${dateTime.year}${pad2(dateTime.month)}${pad2(dateTime.day)}`\n}\n\nfunction makeInvitationCalendar(versionNumber: string, event: CalendarEvent, method: string, now: Date, zone: string): string {\n\tconst eventSerialized = serializeEvent(event, [], now, zone)\n\treturn wrapIntoCalendar(versionNumber, method, eventSerialized)\n}\n\nexport function serializeTrigger(dbAlarmInterval: string): string {\n\tconst alarmInterval = parseAlarmInterval(dbAlarmInterval)\n\n\tlet timeMarker = \"\"\n\n\tif (alarmInterval.unit === AlarmIntervalUnit.MINUTE || alarmInterval.unit === AlarmIntervalUnit.HOUR) {\n\t\ttimeMarker += \"T\"\n\t}\n\n\treturn \"-P\" + timeMarker + alarmInterval.value.toString() + alarmInterval.unit\n}\n\nfunction serializeParticipants(event: CalendarEvent): Array<string> {\n\tconst { organizer, attendees } = event\n\n\tif (attendees.length === 0 && organizer == null) {\n\t\treturn []\n\t}\n\n\tconst lines: string[] = []\n\n\tif (organizer) {\n\t\tconst namePart = organizer.name ? `;CN=${quotedString(organizer.name)}` : \"\"\n\t\tlines.push(`ORGANIZER${namePart};EMAIL=${organizer.address}:mailto:${organizer.address}`)\n\t}\n\n\tconst attendeesProperties = attendees.map(({ address, status }) => {\n\t\tconst namePart = address.name ? `;CN=${quotedString(address.name)}` : \"\"\n\t\tconst partstat = calendarAttendeeStatusToParstat[downcast<CalendarAttendeeStatus>(status)]\n\t\treturn (\n\t\t\t`ATTENDEE;CUTYPE=INDIVIDUAL;ROLE=REQ-PARTICIPANT;PARTSTAT=${partstat}` + `;RSVP=TRUE${namePart};EMAIL=${address.address}:mailto:${address.address}`\n\t\t)\n\t})\n\treturn lines.concat(attendeesProperties)\n}\n\n/**\n * Create an ical quoted-string param-value\n * double quotes are not allowed inside of param-value properties so they are removed\n */\nfunction quotedString(input: string): string {\n\treturn `\"${input.replace(/\"/g, \"\")}\"`\n}\n\n/**\n * Serialize text properties according to the iCal standard.\n * https://icalendar.org/iCalendar-RFC-5545/3-3-11-text.html\n */\nfunction serializeIcalText(value: string): string {\n\tlet text = value\n\tfor (const rawEscape in iCalReplacements) {\n\t\ttext = text.replaceAll(rawEscape, iCalReplacements[rawEscape as keyof typeof iCalReplacements])\n\t}\n\treturn text\n}\n\nfunction pad2(number: number) {\n\treturn pad(number, 2)\n}\n\nfunction wrapIntoCalendar(versionNumber: string, method: string, contents: Array<string>): string {\n\tlet value = [\"BEGIN:VCALENDAR\", `PRODID:-//Tutao GmbH//Tutanota ${versionNumber}//EN`, \"VERSION:2.0\", \"CALSCALE:GREGORIAN\", `METHOD:${method}`]\n\tvalue.push(...contents)\n\tvalue.push(\"END:VCALENDAR\")\n\treturn value.join(\"\\r\\n\")\n}\n\nfunction serializeAlarm(event: CalendarEvent, alarm: UserAlarmInfo): Array<string> {\n\t// prettier-ignore\n\treturn [\n\t\t\"BEGIN:VALARM\",\n\t\t\"ACTION:DISPLAY\",\n\t\t\"DESCRIPTION:This is an event reminder\",\n\t\t`TRIGGER:${serializeTrigger(alarm.alarmInfo.trigger)}`,\n\t\t\"END:VALARM\",\n\t]\n}\n"]}