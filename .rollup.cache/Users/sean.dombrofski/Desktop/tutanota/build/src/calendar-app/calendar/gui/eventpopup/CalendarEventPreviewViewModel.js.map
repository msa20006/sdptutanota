{"version":3,"file":"CalendarEventPreviewViewModel.js","sourceRoot":"","sources":["../../../../../../src/calendar-app/calendar/gui/eventpopup/CalendarEventPreviewViewModel.ts"],"names":[],"mappings":"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","sourcesContent":["import { CalendarEvent, CalendarEventAttendee } from \"../../../../common/api/entities/tutanota/TypeRefs.js\"\nimport { calendarEventHasMoreThanOneOccurrencesLeft } from \"../../../../common/calendar/date/CalendarUtils.js\"\nimport { CalendarEventModel, CalendarOperation, EventSaveResult, EventType, getNonOrganizerAttendees } from \"../eventeditor-model/CalendarEventModel.js\"\nimport { NotFoundError } from \"../../../../common/api/common/error/RestError.js\"\nimport { CalendarModel } from \"../../model/CalendarModel.js\"\nimport { ProgrammingError } from \"../../../../common/api/common/error/ProgrammingError.js\"\nimport { CalendarAttendeeStatus } from \"../../../../common/api/common/TutanotaConstants.js\"\nimport m from \"mithril\"\nimport { clone, Thunk } from \"@tutao/tutanota-utils\"\nimport { CalendarEventUidIndexEntry } from \"../../../../common/api/worker/facades/lazy/CalendarFacade.js\"\nimport { EventEditorDialog } from \"../eventeditor-view/CalendarEventEditDialog.js\"\n\n/**\n * makes decisions about which operations are available from the popup and knows how to implement them depending on the event's type.\n */\nexport class CalendarEventPreviewViewModel {\n\treadonly canEdit: boolean\n\treadonly canDelete: boolean\n\treadonly canSendUpdates: boolean\n\t/** for editing, an event that has only one non-deleted instance is still considered repeating\n\t * because we might reschedule that instance and then unexclude some deleted instances.\n\t *\n\t * the ability to edit a single instance also depends on the event type:\n\t *    * OWN -> I can do what I want\n\t *    * SHARED_RW -> can edit single instance as if it was my own (since single instance editing locks attendees anyway)\n\t *    * SHARED_RO, LOCKED, EXTERNAL -> cannot edit at all\n\t *    * INVITE -> we're not the organizer, we can only set our own attendance globally and send it back to the organizer.\n\t *          probably the best reason to make single-instance attendee editing possible asap.\n\t */\n\treadonly isRepeatingForEditing: boolean\n\n\tprivate sanitizedDescription: string | null = null\n\n\tprivate processing: boolean = false\n\tprivate readonly _ownAttendee: CalendarEventAttendee | null\n\n\t/**\n\t *\n\t * @param calendarEvent the event to display in the popup\n\t * @param calendarModel the calendar model where the event can be updated/deleted\n\t * @param eventType\n\t * @param hasBusinessFeature if the current user is allowed to do certain operations.\n\t * @param ownAttendee will be cloned to have a copy that's not influencing the actual event but can be changed to quickly update the UI\n\t * @param lazyIndexEntry async function to resolve the progenitor of the shown event\n\t * @param eventModelFactory\n\t * @param uiUpdateCallback\n\t */\n\tconstructor(\n\t\treadonly calendarEvent: Readonly<CalendarEvent>,\n\t\tprivate readonly calendarModel: CalendarModel,\n\t\treadonly eventType: EventType,\n\t\tprivate readonly hasBusinessFeature: boolean,\n\t\townAttendee: CalendarEventAttendee | null,\n\t\tprivate readonly lazyIndexEntry: () => Promise<CalendarEventUidIndexEntry | null>,\n\t\tprivate readonly eventModelFactory: (mode: CalendarOperation) => Promise<CalendarEventModel | null>,\n\t\tprivate readonly uiUpdateCallback: () => void = m.redraw,\n\t) {\n\t\tthis._ownAttendee = clone(ownAttendee)\n\t\tif (this.calendarEvent._ownerGroup == null) {\n\t\t\tthis.canEdit = false\n\t\t\tthis.canDelete = false\n\t\t\tthis.canSendUpdates = false\n\t\t} else {\n\t\t\t// partially editable (adding alarms) counts as editable.\n\t\t\tthis.canEdit =\n\t\t\t\tthis.eventType === EventType.OWN ||\n\t\t\t\tthis.eventType === EventType.SHARED_RW ||\n\t\t\t\tthis.eventType === EventType.LOCKED ||\n\t\t\t\tthis.eventType === EventType.INVITE\n\t\t\tthis.canDelete = this.canEdit || this.eventType === EventType.INVITE\n\t\t\tthis.canSendUpdates = hasBusinessFeature && this.eventType === EventType.OWN && getNonOrganizerAttendees(calendarEvent).length > 0\n\t\t}\n\n\t\tthis.isRepeatingForEditing =\n\t\t\t(calendarEvent.repeatRule != null || calendarEvent.recurrenceId != null) && (eventType === EventType.OWN || eventType === EventType.SHARED_RW)\n\t}\n\n\t/** for deleting, an event that has only one non-deleted instance behaves as if it wasn't repeating\n\t * because deleting the last instance is the same as deleting the whole event from the pov of the user.\n\t */\n\tasync isRepeatingForDeleting(): Promise<boolean> {\n\t\tconst index = await this.lazyIndexEntry()\n\t\tif (index == null) return false\n\t\treturn calendarEventHasMoreThanOneOccurrencesLeft(index)\n\t}\n\n\tget ownAttendee(): CalendarEventAttendee | null {\n\t\treturn this._ownAttendee\n\t}\n\n\t/** return an object enabling us to set and display the participation correctly if this is an event we're invited to, null otherwise.\n\t * note that the Promise<unknown> type on setParticipation prevents us from leaking errors when consumers call it and try to catch errors without\n\t * awaiting it (they get an async call without await warning) */\n\tgetParticipationSetterAndThen(action: Thunk): null | {\n\t\townAttendee: CalendarEventAttendee\n\t\tsetParticipation: (status: CalendarAttendeeStatus) => Promise<unknown>\n\t} {\n\t\tif (this.ownAttendee == null || this.eventType !== EventType.INVITE) return null\n\t\treturn {\n\t\t\townAttendee: this.ownAttendee,\n\t\t\tsetParticipation: async (status) => {\n\t\t\t\tawait this.setOwnAttendance(status)\n\t\t\t\taction()\n\t\t\t},\n\t\t}\n\t}\n\n\tprivate async setOwnAttendance(status: CalendarAttendeeStatus): Promise<void> {\n\t\tif (this.calendarEvent.organizer == null || this.ownAttendee == null || this.processing || this._ownAttendee?.status === status) return\n\t\tconst oldStatus = this.ownAttendee.status\n\t\tthis.processing = true\n\t\ttry {\n\t\t\tthis.ownAttendee.status = status\n\t\t\tthis.uiUpdateCallback()\n\t\t\t// no per-instance attendees yet.\n\t\t\tconst model = await this.eventModelFactory(CalendarOperation.EditAll)\n\t\t\tif (model) {\n\t\t\t\tmodel.editModels.whoModel.setOwnAttendance(status)\n\t\t\t\tmodel.editModels.whoModel.isConfidential = this.calendarEvent.invitedConfidentially ?? false\n\t\t\t\tawait model.apply()\n\t\t\t} else {\n\t\t\t\tthis.ownAttendee.status = oldStatus\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tthis.ownAttendee.status = oldStatus\n\t\t\tthrow e\n\t\t} finally {\n\t\t\tthis.processing = false\n\t\t}\n\t}\n\n\t/** add an exclusion for this event instances start time on the original event.\n\t * if this is a rescheduled instance, we will just delete the event because the progenitor already\n\t * has an exclusion for this time.\n\t * */\n\tasync deleteSingle() {\n\t\ttry {\n\t\t\tconst model = await this.eventModelFactory(CalendarOperation.DeleteThis)\n\t\t\tawait model?.apply()\n\t\t} catch (e) {\n\t\t\tif (!(e instanceof NotFoundError)) {\n\t\t\t\tthrow e\n\t\t\t}\n\t\t}\n\t}\n\n\tasync deleteAll(): Promise<void> {\n\t\ttry {\n\t\t\tconst model = await this.eventModelFactory(CalendarOperation.DeleteAll)\n\t\t\tawait model?.apply()\n\t\t} catch (e) {\n\t\t\tif (!(e instanceof NotFoundError)) {\n\t\t\t\tthrow e\n\t\t\t}\n\t\t}\n\t}\n\n\tasync editSingle() {\n\t\tconst model = await this.eventModelFactory(CalendarOperation.EditThis)\n\t\tif (model == null) {\n\t\t\treturn\n\t\t}\n\t\ttry {\n\t\t\tconst eventEditor = new EventEditorDialog()\n\t\t\treturn await eventEditor.showExistingCalendarEventEditDialog(model, {\n\t\t\t\tuid: this.calendarEvent.uid,\n\t\t\t\tsequence: this.calendarEvent.sequence,\n\t\t\t\trecurrenceId: this.calendarEvent.startTime,\n\t\t\t})\n\t\t} catch (err) {\n\t\t\tif (err instanceof NotFoundError) {\n\t\t\t\tconsole.log(\"occurrence not found when clicking on the event\")\n\t\t\t} else {\n\t\t\t\tthrow err\n\t\t\t}\n\t\t}\n\n\t\tthrow new ProgrammingError(\"not implemented\")\n\t}\n\n\tasync editAll() {\n\t\tconst model = await this.eventModelFactory(CalendarOperation.EditAll)\n\t\tif (model == null) {\n\t\t\treturn\n\t\t}\n\t\ttry {\n\t\t\tconst eventEditor = new EventEditorDialog()\n\t\t\treturn await eventEditor.showExistingCalendarEventEditDialog(model, {\n\t\t\t\tuid: this.calendarEvent.uid,\n\t\t\t\tsequence: this.calendarEvent.sequence,\n\t\t\t\trecurrenceId: null,\n\t\t\t})\n\t\t} catch (err) {\n\t\t\tif (err instanceof NotFoundError) {\n\t\t\t\tconsole.log(\"calendar event not found when clicking on the event\")\n\t\t\t} else {\n\t\t\t\tthrow err\n\t\t\t}\n\t\t}\n\t}\n\n\tasync sendUpdates(): Promise<EventSaveResult> {\n\t\tconst model = await this.eventModelFactory(CalendarOperation.EditAll)\n\t\tif (model == null) {\n\t\t\treturn EventSaveResult.Failed\n\t\t}\n\t\ttry {\n\t\t\tmodel.editModels.whoModel.shouldSendUpdates = true\n\t\t\tawait model.apply()\n\t\t\treturn EventSaveResult.Saved\n\t\t} finally {\n\t\t\tmodel.editModels.whoModel.shouldSendUpdates = false\n\t\t}\n\t}\n\n\tasync sanitizeDescription(): Promise<void> {\n\t\tconst { htmlSanitizer } = await import(\"../../../../common/misc/HtmlSanitizer.js\")\n\t\tthis.sanitizedDescription = htmlSanitizer.sanitizeHTML(this.calendarEvent.description, {\n\t\t\tblockExternalContent: true,\n\t\t}).html\n\t}\n\n\tgetSanitizedDescription() {\n\t\treturn this.sanitizedDescription\n\t}\n}\n"]}