{"version":3,"file":"NotificationSettingsViewer.js","sourceRoot":"","sources":["../../../../../src/calendar-app/calendar/settings/NotificationSettingsViewer.ts"],"names":[],"mappings":"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","sourcesContent":["import m, { Children } from \"mithril\"\nimport Stream from \"mithril/stream\"\nimport stream from \"mithril/stream\"\nimport { UpdatableSettingsViewer } from \"../../../common/settings/Interfaces.js\"\nimport { PushIdentifier, PushIdentifierTypeRef, User } from \"../../../common/api/entities/sys/TypeRefs.js\"\nimport { isApp, isBrowser, isDesktop } from \"../../../common/api/common/Env.js\"\nimport { lang } from \"../../../common/misc/LanguageViewModel.js\"\nimport { IdentifierRow } from \"../../../common/settings/IdentifierRow.js\"\nimport { noOp, ofClass } from \"@tutao/tutanota-utils\"\nimport { NotFoundError } from \"../../../common/api/common/error/RestError.js\"\nimport { PushServiceType } from \"../../../common/api/common/TutanotaConstants.js\"\nimport { NotificationTargetsList, NotificationTargetsListAttrs } from \"../../../common/settings/NotificationTargetsList.js\"\nimport { EntityUpdateData, isUpdateForTypeRef } from \"../../../common/api/common/utils/EntityUpdateUtils.js\"\nimport { calendarLocator } from \"../../calendarLocator.js\"\nimport { AppType } from \"../../../common/misc/ClientConstants.js\"\nimport { locator } from \"../../../common/api/main/CommonLocator.js\"\n\nexport class NotificationSettingsViewer implements UpdatableSettingsViewer {\n\tprivate currentIdentifier: string | null = null\n\tprivate readonly expanded: Stream<boolean>\n\tprivate readonly user: User\n\tprivate identifiers: PushIdentifier[]\n\n\tconstructor() {\n\t\tthis.expanded = stream<boolean>(false)\n\t\tthis.identifiers = []\n\t\tthis.user = calendarLocator.logins.getUserController().user\n\t\tthis.loadPushIdentifiers()\n\t}\n\n\tprivate togglePushIdentifier(identifier: PushIdentifier) {\n\t\tidentifier.disabled = !identifier.disabled\n\t\tlocator.entityClient.update(identifier).then(() => m.redraw)\n\n\t\tif (!isBrowser() && identifier.identifier === this.currentIdentifier) {\n\t\t\tif (identifier.disabled) {\n\t\t\t\tlocator.pushService.invalidateAlarmsForUser(this.user._id)\n\t\t\t} else {\n\t\t\t\tlocator.pushService.reRegister()\n\t\t\t}\n\t\t}\n\t}\n\n\tview(): Children {\n\t\tconst rows = this.identifiers\n\t\t\t.map((identifier) => {\n\t\t\t\tconst isCurrentDevice = (isApp() || isDesktop()) && identifier.identifier === this.currentIdentifier\n\n\t\t\t\treturn m(IdentifierRow, {\n\t\t\t\t\tname: this.identifierDisplayName(isCurrentDevice, identifier.pushServiceType, identifier.displayName),\n\t\t\t\t\tdisabled: identifier.disabled,\n\t\t\t\t\tidentifier: identifier.identifier,\n\t\t\t\t\tcurrent: isCurrentDevice,\n\t\t\t\t\tremoveClicked: () => {\n\t\t\t\t\t\tcalendarLocator.entityClient.erase(identifier).catch(ofClass(NotFoundError, noOp))\n\t\t\t\t\t},\n\t\t\t\t\tformatIdentifier: identifier.pushServiceType !== PushServiceType.EMAIL,\n\t\t\t\t\tdisableClicked: () => this.togglePushIdentifier(identifier),\n\t\t\t\t})\n\t\t\t})\n\t\t\t.sort((l, r) => +r.attrs.current - +l.attrs.current)\n\n\t\treturn m(\".fill-absolute.scroll.plr-l.pb-xl\", [\n\t\t\tm(\".flex.col\", [\n\t\t\t\tm(\".flex-space-between.items-center.mt-l.mb-s\", [m(\".h4\", lang.get(\"notificationSettings_action\"))]),\n\t\t\t\tm(NotificationTargetsList, { rowAdd: null, rows, onExpandedChange: this.expanded } satisfies NotificationTargetsListAttrs),\n\t\t\t]),\n\t\t])\n\t}\n\n\tprivate identifierDisplayName(current: boolean, type: NumberString, displayName: string): string {\n\t\tif (current) {\n\t\t\treturn lang.get(\"pushIdentifierCurrentDevice_label\")\n\t\t} else if (displayName) {\n\t\t\treturn displayName\n\t\t} else {\n\t\t\treturn [\"Android FCM\", \"iOS\", lang.get(\"adminEmailSettings_action\"), \"Android Tutanota\"][Number(type)]\n\t\t}\n\t}\n\n\tprivate async loadPushIdentifiers() {\n\t\tthis.currentIdentifier = this.getCurrentIdentifier()\n\t\tconst list = this.user.pushIdentifierList\n\n\t\tif (list) {\n\t\t\tthis.identifiers = (await calendarLocator.entityClient.loadAll(PushIdentifierTypeRef, list.list)).filter(\n\t\t\t\t(identifier) => identifier.app === AppType.Calendar,\n\t\t\t) // Filter out mail targets\n\n\t\t\tm.redraw()\n\t\t}\n\t}\n\n\tprivate getCurrentIdentifier(): string | null {\n\t\tconst identifier = calendarLocator.pushService.getLoadedPushIdentifier()?.identifier\n\t\treturn (isApp() || isDesktop()) && identifier ? identifier : null\n\t}\n\n\tasync entityEventsReceived(updates: readonly EntityUpdateData[]): Promise<void> {\n\t\tfor (let update of updates) {\n\t\t\tif (isUpdateForTypeRef(PushIdentifierTypeRef, update)) {\n\t\t\t\tawait this.loadPushIdentifiers()\n\t\t\t}\n\t\t}\n\t}\n}\n"]}