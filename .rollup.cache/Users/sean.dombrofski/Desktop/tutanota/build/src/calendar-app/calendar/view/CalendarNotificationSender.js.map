{"version":3,"file":"CalendarNotificationSender.js","sourceRoot":"","sources":["../../../../../src/calendar-app/calendar/view/CalendarNotificationSender.ts"],"names":[],"mappings":"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","sourcesContent":["import { lang } from \"../../../common/misc/LanguageViewModel.js\"\nimport { makeInvitationCalendarFile } from \"../export/CalendarExporter.js\"\nimport { getAttendeeStatus, MailMethod, mailMethodToCalendarMethod } from \"../../../common/api/common/TutanotaConstants.js\"\nimport { getTimeZone } from \"../../../common/calendar/date/CalendarUtils.js\"\nimport type { CalendarEvent, CalendarEventAttendee, EncryptedMailAddress } from \"../../../common/api/entities/tutanota/TypeRefs.js\"\nimport { createCalendarEventAttendee } from \"../../../common/api/entities/tutanota/TypeRefs.js\"\nimport { assertNotNull, noOp, ofClass } from \"@tutao/tutanota-utils\"\nimport type { SendMailModel } from \"../../../common/mailFunctionality/SendMailModel.js\"\nimport { windowFacade } from \"../../../common/misc/WindowFacade.js\"\nimport { RecipientsNotFoundError } from \"../../../common/api/common/error/RecipientsNotFoundError.js\"\nimport { cleanMailAddress, findAttendeeInAddresses, findRecipientWithAddress } from \"../../../common/api/common/utils/CommonCalendarUtils.js\"\nimport { ProgrammingError } from \"../../../common/api/common/error/ProgrammingError.js\"\n\nimport { calendarAttendeeStatusSymbol, formatEventDuration } from \"../gui/CalendarGuiUtils.js\"\nimport { RecipientField } from \"../../../common/mailFunctionality/SharedMailUtils.js\"\n\nexport class CalendarNotificationSender {\n\t/** Used for knowing how many emails are in the process of being sent. */\n\tprivate countDownLatch: number\n\n\tconstructor() {\n\t\tthis.countDownLatch = 0\n\t}\n\n\tsendInvite(event: CalendarEvent, sendMailModel: SendMailModel): Promise<void> {\n\t\tconst message = lang.get(\"eventInviteMail_msg\", {\n\t\t\t\"{event}\": event.summary,\n\t\t})\n\t\tconst sender = assertOrganizer(event).address\n\t\treturn this.sendCalendarFile({\n\t\t\tsendMailModel,\n\t\t\tmethod: MailMethod.ICAL_REQUEST,\n\t\t\tsubject: message,\n\t\t\tbody: makeInviteEmailBody(sender, event, message),\n\t\t\tevent,\n\t\t\tsender,\n\t\t})\n\t}\n\n\tsendUpdate(event: CalendarEvent, sendMailModel: SendMailModel): Promise<void> {\n\t\tconst message = lang.get(\"eventUpdated_msg\", {\n\t\t\t\"{event}\": event.summary,\n\t\t})\n\t\tconst sender = assertOrganizer(event).address\n\t\treturn this.sendCalendarFile({\n\t\t\tsendMailModel,\n\t\t\tmethod: MailMethod.ICAL_REQUEST,\n\t\t\tsubject: message,\n\t\t\tbody: makeInviteEmailBody(sender, event, message),\n\t\t\tevent,\n\t\t\tsender,\n\t\t})\n\t}\n\n\tsendCancellation(event: CalendarEvent, sendMailModel: SendMailModel): Promise<void> {\n\t\tconst message = lang.get(\"eventCancelled_msg\", {\n\t\t\t\"{event}\": event.summary,\n\t\t})\n\t\tconst sender = assertOrganizer(event).address\n\t\treturn this.sendCalendarFile({\n\t\t\tsendMailModel,\n\t\t\tmethod: MailMethod.ICAL_CANCEL,\n\t\t\tsubject: message,\n\t\t\tbody: makeInviteEmailBody(sender, event, message),\n\t\t\tevent,\n\t\t\tsender,\n\t\t}).catch(\n\t\t\tofClass(RecipientsNotFoundError, (e) => {\n\t\t\t\t// we want to delete the event even if the recipient is not an existing tutanota address\n\t\t\t\t// and just exclude them from sending out updates but leave the event untouched for other recipients\n\t\t\t\tconst invalidRecipients = e.message.split(\"\\n\")\n\t\t\t\tlet hasRemovedRecipient = false\n\t\t\t\tfor (const invalidRecipient of invalidRecipients) {\n\t\t\t\t\tconst recipientInfo = findRecipientWithAddress(sendMailModel.bccRecipients(), invalidRecipient)\n\n\t\t\t\t\tif (recipientInfo) {\n\t\t\t\t\t\thasRemovedRecipient = sendMailModel.removeRecipient(recipientInfo, RecipientField.BCC, false) || hasRemovedRecipient\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// only try sending again if we successfully removed a recipient and there are still other recipients\n\t\t\t\tif (hasRemovedRecipient && sendMailModel.allRecipients().length) {\n\t\t\t\t\treturn this.sendCancellation(event, sendMailModel)\n\t\t\t\t}\n\t\t\t}),\n\t\t)\n\t}\n\n\t/**\n\t * send a response mail to the organizer of an event\n\t * @param event the event to respond to (included as a .ics file attachment)\n\t * @param sendMailModel used to actually send the mail\n\t */\n\tasync sendResponse(event: CalendarEvent, sendMailModel: SendMailModel): Promise<void> {\n\t\tconst sendAs = sendMailModel.getSender()\n\t\tconst message = lang.get(\"repliedToEventInvite_msg\", {\n\t\t\t\"{event}\": event.summary,\n\t\t})\n\t\tconst organizer = assertOrganizer(event)\n\t\tconst body = makeInviteEmailBody(organizer.address, event, message)\n\t\treturn this.sendCalendarFile({\n\t\t\tevent,\n\t\t\tsendMailModel,\n\t\t\tmethod: MailMethod.ICAL_REPLY,\n\t\t\tsubject: message,\n\t\t\tbody: body,\n\t\t\tsender: sendAs,\n\t\t})\n\t}\n\n\tprivate async sendCalendarFile({\n\t\tsendMailModel,\n\t\tmethod,\n\t\tsubject,\n\t\tevent,\n\t\tbody,\n\t\tsender,\n\t}: {\n\t\tsendMailModel: SendMailModel\n\t\tmethod: MailMethod\n\t\tsubject: string\n\t\tevent: CalendarEvent\n\t\tbody: string\n\t\tsender: string\n\t}): Promise<void> {\n\t\tconst inviteFile = makeInvitationCalendarFile(event, mailMethodToCalendarMethod(method), new Date(), getTimeZone())\n\t\tsendMailModel.setSender(sender)\n\t\tsendMailModel.attachFiles([inviteFile])\n\t\tsendMailModel.setSubject(subject)\n\t\tsendMailModel.setBody(body)\n\n\t\tthis.sendStart()\n\n\t\tawait sendMailModel.send(method).finally(() => this.sendEnd())\n\t}\n\n\tprivate _windowUnsubscribe: (() => void) | null = null\n\n\tprivate sendStart() {\n\t\tthis.countDownLatch++\n\n\t\tif (this.countDownLatch === 1) {\n\t\t\tthis._windowUnsubscribe = windowFacade.addWindowCloseListener(noOp)\n\t\t}\n\t}\n\n\tprivate sendEnd() {\n\t\tthis.countDownLatch--\n\n\t\tif (this.countDownLatch === 0 && this._windowUnsubscribe) {\n\t\t\tthis._windowUnsubscribe()\n\n\t\t\tthis._windowUnsubscribe = null\n\t\t}\n\t}\n}\n\nfunction summaryLine(event: CalendarEvent): string {\n\treturn newLine(lang.get(\"name_label\"), event.summary)\n}\n\nfunction whenLine(event: CalendarEvent): string {\n\tconst duration = formatEventDuration(event, getTimeZone(), true)\n\treturn newLine(lang.get(\"when_label\"), duration)\n}\n\nfunction organizerLabel(organizer: EncryptedMailAddress, a: CalendarEventAttendee) {\n\treturn cleanMailAddress(organizer.address) === cleanMailAddress(a.address.address) ? `(${lang.get(\"organizer_label\")})` : \"\"\n}\n\nfunction newLine(label: string, content: string): string {\n\treturn `<div style=\"display: flex; margin-top: 8px\"><div style=\"min-width: 120px\"><b style=\"float:right; margin-right:16px\">${label}:</b></div>${content}</div>`\n}\n\nfunction attendeesLine(event: CalendarEvent): string {\n\tconst { organizer } = event\n\tlet attendees = \"\"\n\n\t// If organizer is already in the attendees, we don't have to add them separately.\n\tif (organizer && !findAttendeeInAddresses(event.attendees, [organizer.address])) {\n\t\tattendees = makeAttendee(\n\t\t\torganizer,\n\t\t\tcreateCalendarEventAttendee({\n\t\t\t\taddress: organizer,\n\t\t\t\tstatus: \"0\",\n\t\t\t}),\n\t\t)\n\t}\n\n\tattendees += event.attendees.map((a) => makeAttendee(assertNotNull(organizer), a)).join(\"\\n\")\n\treturn newLine(lang.get(\"who_label\"), `<div>${attendees}</div>`)\n}\n\nfunction makeAttendee(organizer: EncryptedMailAddress, attendee: CalendarEventAttendee): string {\n\treturn `<div>\n${attendee.address.name || \"\"} ${attendee.address.address}\n${organizerLabel(organizer, attendee)}\n${calendarAttendeeStatusSymbol(getAttendeeStatus(attendee))}</div>`\n}\n\nfunction locationLine(event: CalendarEvent): string {\n\treturn event.location ? newLine(lang.get(\"location_label\"), event.location) : \"\"\n}\n\nfunction descriptionLine(event: CalendarEvent): string {\n\treturn event.description ? newLine(lang.get(\"description_label\"), `<div>${event.description}</div>`) : \"\"\n}\n\nfunction makeInviteEmailBody(sender: string, event: CalendarEvent, message: string) {\n\treturn `\n\t<div style=\"max-width: 685px; margin: 0 auto\">\n\t  \t<h2 style=\"text-align: center\">${message}</h2>\n  \t\t<div style=\"margin: 0 auto\">\n  \t\t\t${summaryLine(event)}\n    \t\t${whenLine(event)}\n    \t\t${locationLine(event)}\n    \t\t${attendeesLine(event)}\n    \t\t${descriptionLine(event)}\n  \t\t</div>\n\t</div>`\n}\n\nfunction assertOrganizer(event: CalendarEvent): EncryptedMailAddress {\n\tif (event.organizer == null) {\n\t\tthrow new ProgrammingError(\"Cannot send event update without organizer\")\n\t}\n\n\treturn event.organizer\n}\n\nexport const calendarNotificationSender: CalendarNotificationSender = new CalendarNotificationSender()\n"]}