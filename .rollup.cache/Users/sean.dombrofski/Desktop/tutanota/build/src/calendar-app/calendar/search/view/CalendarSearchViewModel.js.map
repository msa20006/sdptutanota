{"version":3,"file":"CalendarSearchViewModel.js","sourceRoot":"","sources":["../../../../../../src/calendar-app/calendar/search/view/CalendarSearchViewModel.ts"],"names":[],"mappings":"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","sourcesContent":["import { CalendarSearchResultListEntry } from \"./CalendarSearchListView.js\"\nimport { SearchRestriction, SearchResult } from \"../../../../common/api/worker/search/SearchTypes.js\"\nimport { EntityEventsListener, EventController } from \"../../../../common/api/main/EventController.js\"\nimport { CalendarEvent, CalendarEventTypeRef, ContactTypeRef, MailTypeRef } from \"../../../../common/api/entities/tutanota/TypeRefs.js\"\nimport { SomeEntity } from \"../../../../common/api/common/EntityTypes.js\"\nimport { CLIENT_ONLY_CALENDARS, OperationType } from \"../../../../common/api/common/TutanotaConstants.js\"\nimport { assertIsEntity2, elementIdPart, GENERATED_MAX_ID, getElementId, isSameId, ListElement } from \"../../../../common/api/common/utils/EntityUtils.js\"\nimport { ListLoadingState, ListState } from \"../../../../common/gui/base/List.js\"\nimport {\n\tassertNotNull,\n\tdeepEqual,\n\tdowncast,\n\tgetEndOfDay,\n\tgetStartOfDay,\n\tincrementMonth,\n\tisSameDayOfDate,\n\tisSameTypeRef,\n\tLazyLoaded,\n\tlazyMemoized,\n\tneverNull,\n\tofClass,\n\tstringToBase64,\n\tTypeRef,\n\tYEAR_IN_MILLIS,\n} from \"@tutao/tutanota-utils\"\nimport { areResultsForTheSameQuery, CalendarSearchModel, hasMoreResults, isSameSearchRestriction } from \"../model/CalendarSearchModel.js\"\nimport { NotFoundError } from \"../../../../common/api/common/error/RestError.js\"\nimport { createRestriction, decodeCalendarSearchKey, encodeCalendarSearchKey, getRestriction } from \"../model/SearchUtils.js\"\nimport Stream from \"mithril/stream\"\nimport stream from \"mithril/stream\"\nimport {\n\tgenerateCalendarInstancesInRange,\n\tgetStartOfTheWeekOffsetForUser,\n\tretrieveClientOnlyEventsForUser,\n} from \"../../../../common/calendar/date/CalendarUtils.js\"\nimport { LoginController } from \"../../../../common/api/main/LoginController.js\"\nimport { EntityClient } from \"../../../../common/api/common/EntityClient.js\"\nimport { containsEventOfType, EntityUpdateData, getEventOfType, isUpdateForTypeRef } from \"../../../../common/api/common/utils/EntityUpdateUtils.js\"\nimport { CalendarInfo } from \"../../model/CalendarModel.js\"\nimport m from \"mithril\"\nimport { CalendarFacade } from \"../../../../common/api/worker/facades/lazy/CalendarFacade.js\"\nimport { ProgressTracker } from \"../../../../common/api/main/ProgressTracker.js\"\nimport { ClientOnlyCalendarsInfo, ListAutoSelectBehavior } from \"../../../../common/misc/DeviceConfig.js\"\nimport { ProgrammingError } from \"../../../../common/api/common/error/ProgrammingError.js\"\nimport { SearchRouter } from \"../../../../common/search/view/SearchRouter.js\"\nimport { locator } from \"../../../../common/api/main/CommonLocator.js\"\nimport { CalendarEventsRepository } from \"../../../../common/calendar/date/CalendarEventsRepository\"\nimport { getClientOnlyCalendars } from \"../../gui/CalendarGuiUtils\"\nimport { ListElementListModel } from \"../../../../common/misc/ListElementListModel\"\n\nconst SEARCH_PAGE_SIZE = 100\n\nexport enum PaidFunctionResult {\n\tSuccess,\n\tPaidSubscriptionNeeded,\n}\n\nexport class CalendarSearchViewModel {\n\tprivate _listModel: ListElementListModel<CalendarSearchResultListEntry>\n\tget listModel(): ListElementListModel<CalendarSearchResultListEntry> {\n\t\treturn this._listModel\n\t}\n\n\tprivate _includeRepeatingEvents: boolean = true\n\tget includeRepeatingEvents(): boolean {\n\t\treturn this._includeRepeatingEvents\n\t}\n\n\tget warning(): \"long\" | \"startafterend\" | null {\n\t\tif (this.startDate && this.startDate.getTime() > this.endDate.getTime()) {\n\t\t\treturn \"startafterend\"\n\t\t} else if (this.startDate && this.endDate.getTime() - this.startDate.getTime() > YEAR_IN_MILLIS) {\n\t\t\treturn \"long\"\n\t\t} else {\n\t\t\treturn null\n\t\t}\n\t}\n\n\tprivate _startDate: Date | null = null // null = the beginning of the current month\n\tget startDate(): Date | null {\n\t\tlet returnDate = this._startDate\n\t\tif (!returnDate) {\n\t\t\treturnDate = new Date()\n\t\t\treturnDate.setDate(1)\n\t\t}\n\t\treturn returnDate\n\t}\n\n\tprivate _endDate: Date | null = null // null = end of 2 months in the future\n\tget endDate(): Date {\n\t\tlet returnDate = this._endDate\n\t\tif (!returnDate) {\n\t\t\treturnDate = incrementMonth(new Date(), 3)\n\t\t\treturnDate.setDate(0)\n\t\t}\n\t\treturn returnDate\n\t}\n\n\t// isn't an IdTuple because it is two list ids\n\tprivate _selectedCalendar: readonly [Id, Id] | string | null = null\n\tget selectedCalendar(): readonly [Id, Id] | string | null {\n\t\treturn this._selectedCalendar\n\t}\n\n\t// Contains load more results even when searchModel doesn't.\n\t// Load more should probably be moved to the model to update it's result stream.\n\tprivate searchResult: SearchResult | null = null\n\tprivate latestCalendarRestriction: SearchRestriction | null = null\n\tprivate resultSubscription: Stream<void> | null = null\n\tprivate listStateSubscription: Stream<unknown> | null = null\n\tloadingAllForSearchResult: SearchResult | null = null\n\n\tprivate readonly lazyCalendarInfos: LazyLoaded<ReadonlyMap<string, CalendarInfo>> = new LazyLoaded(async () => {\n\t\tconst calendarModel = await locator.calendarModel()\n\t\tconst calendarInfos = await calendarModel.getCalendarInfos()\n\t\tm.redraw()\n\t\treturn calendarInfos\n\t})\n\n\tprivate readonly userHasNewPaidPlan: LazyLoaded<boolean> = new LazyLoaded<boolean>(async () => {\n\t\treturn await this.logins.getUserController().isNewPaidPlan()\n\t})\n\n\tcurrentQuery: string = \"\"\n\n\tconstructor(\n\t\treadonly router: SearchRouter,\n\t\tprivate readonly search: CalendarSearchModel,\n\t\tprivate readonly logins: LoginController,\n\t\tprivate readonly entityClient: EntityClient,\n\t\tprivate readonly eventController: EventController,\n\t\tprivate readonly calendarFacade: CalendarFacade,\n\t\tprivate readonly progressTracker: ProgressTracker,\n\t\tprivate readonly eventsRepository: CalendarEventsRepository,\n\t\tprivate readonly updateUi: () => unknown,\n\t\tprivate readonly localCalendars: Map<Id, ClientOnlyCalendarsInfo>,\n\t) {\n\t\tthis.currentQuery = this.search.result()?.query ?? \"\"\n\t\tthis._listModel = this.createList()\n\t}\n\n\tgetLazyCalendarInfos() {\n\t\treturn this.lazyCalendarInfos\n\t}\n\n\tgetUserHasNewPaidPlan() {\n\t\treturn this.userHasNewPaidPlan\n\t}\n\n\treadonly init = lazyMemoized(() => {\n\t\tthis.resultSubscription = this.search.result.map((result) => {\n\t\t\tif (this.searchResult == null || result == null || !areResultsForTheSameQuery(result, this.searchResult)) {\n\t\t\t\tthis.listModel.cancelLoadAll()\n\n\t\t\t\tthis.searchResult = result\n\n\t\t\t\tthis._listModel = this.createList()\n\t\t\t\tthis.listModel.loadInitial()\n\t\t\t\tthis.listStateSubscription?.end(true)\n\t\t\t\tthis.listStateSubscription = this.listModel.stateStream.map((state) => this.onListStateChange(state))\n\t\t\t}\n\t\t})\n\n\t\tthis.eventController.addEntityListener(this.entityEventsListener)\n\t})\n\n\tprivate readonly entityEventsListener: EntityEventsListener = async (updates) => {\n\t\tfor (const update of updates) {\n\t\t\tconst mergedUpdate = this.mergeOperationsIfNeeded(update, updates)\n\n\t\t\tif (mergedUpdate == null) continue\n\n\t\t\tawait this.entityEventReceived(mergedUpdate)\n\t\t}\n\t}\n\n\tprivate mergeOperationsIfNeeded(update: EntityUpdateData, updates: readonly EntityUpdateData[]): EntityUpdateData | null {\n\t\t// We are trying to keep the mails that are moved and would match the search criteria displayed.\n\t\t// This is a bit hacky as we reimplement part of the filtering by list.\n\t\t// Ideally search result would update by itself and we would only need to reconcile the changes.\n\t\tif (!isUpdateForTypeRef(MailTypeRef, update) || this.searchResult == null) {\n\t\t\treturn update\n\t\t}\n\t\tif (update.operation === OperationType.CREATE && containsEventOfType(updates, OperationType.DELETE, update.instanceId)) {\n\t\t\t// This is a move operation, is destination list included in the restrictions?\n\t\t\tif (this.listIdMatchesRestriction(update.instanceListId, this.searchResult.restriction)) {\n\t\t\t\t// If it's included, we want to keep showing the item but we will simulate the UPDATE\n\t\t\t\treturn { ...update, operation: OperationType.UPDATE }\n\t\t\t} else {\n\t\t\t\t// If it's not going to be included we might as well skip the create operation\n\t\t\t\treturn null\n\t\t\t}\n\t\t} else if (update.operation === OperationType.DELETE && containsEventOfType(updates, OperationType.CREATE, update.instanceId)) {\n\t\t\t// This is a move operation and we are in the delete part of it.\n\t\t\t// Grab the other part to check the move destination.\n\t\t\tconst createOperation = assertNotNull(getEventOfType(updates, OperationType.CREATE, update.instanceId))\n\t\t\t// Is destination included in the search?\n\t\t\tif (this.listIdMatchesRestriction(createOperation.instanceListId, this.searchResult.restriction)) {\n\t\t\t\t// If so, skip the delete.\n\t\t\t\treturn null\n\t\t\t} else {\n\t\t\t\t// Otherwise delete\n\t\t\t\treturn update\n\t\t\t}\n\t\t} else {\n\t\t\treturn update\n\t\t}\n\t}\n\n\tprivate listIdMatchesRestriction(listId: string, restriction: SearchRestriction): boolean {\n\t\treturn restriction.folderIds.length === 0 || restriction.folderIds.includes(listId)\n\t}\n\n\tonNewUrl(args: Record<string, any>, requestedPath: string) {\n\t\tlet restriction\n\t\ttry {\n\t\t\trestriction = getRestriction(requestedPath)\n\t\t} catch (e) {\n\t\t\t// if restriction is broken replace it with non-broken version\n\t\t\tthis.router.routeTo(args.query, createRestriction(null, null, [], false))\n\t\t\treturn\n\t\t}\n\n\t\tthis.currentQuery = args.query\n\t\tconst lastQuery = this.search.lastQueryString()\n\t\tconst maxResults = isSameTypeRef(MailTypeRef, restriction.type) ? SEARCH_PAGE_SIZE : null\n\t\tconst listModel = this.listModel\n\t\t// using hasOwnProperty to distinguish case when url is like '/search/mail/query='\n\t\tif (Object.hasOwn(args, \"query\") && this.search.isNewSearch(args.query, restriction)) {\n\t\t\tthis.searchResult = null\n\t\t\tlistModel.updateLoadingStatus(ListLoadingState.Loading)\n\t\t\tthis.search\n\t\t\t\t.search(\n\t\t\t\t\t{\n\t\t\t\t\t\tquery: args.query,\n\t\t\t\t\t\trestriction,\n\t\t\t\t\t\tminSuggestionCount: 0,\n\t\t\t\t\t\tmaxResults,\n\t\t\t\t\t},\n\t\t\t\t\tthis.progressTracker,\n\t\t\t\t)\n\t\t\t\t.then(() => listModel.updateLoadingStatus(ListLoadingState.Done))\n\t\t\t\t.catch(() => listModel.updateLoadingStatus(ListLoadingState.ConnectionLost))\n\t\t} else if (lastQuery && this.search.isNewSearch(lastQuery, restriction)) {\n\t\t\tthis.searchResult = null\n\n\t\t\t// If query is not set for some reason (e.g. switching search type), use the last query value\n\t\t\tlistModel.selectNone()\n\t\t\tlistModel.updateLoadingStatus(ListLoadingState.Loading)\n\t\t\tthis.search\n\t\t\t\t.search(\n\t\t\t\t\t{\n\t\t\t\t\t\tquery: lastQuery,\n\t\t\t\t\t\trestriction,\n\t\t\t\t\t\tminSuggestionCount: 0,\n\t\t\t\t\t\tmaxResults,\n\t\t\t\t\t},\n\t\t\t\t\tthis.progressTracker,\n\t\t\t\t)\n\t\t\t\t.then(() => listModel.updateLoadingStatus(ListLoadingState.Done))\n\t\t\t\t.catch(() => listModel.updateLoadingStatus(ListLoadingState.ConnectionLost))\n\t\t} else if (!Object.hasOwn(args, \"query\") && !lastQuery) {\n\t\t\t// no query at all yet\n\t\t\tlistModel.updateLoadingStatus(ListLoadingState.Done)\n\t\t}\n\n\t\tthis._startDate = restriction.start ? new Date(restriction.start) : null\n\t\tthis._endDate = restriction.end ? new Date(restriction.end) : null\n\n\t\t// Check if user is trying to search in a client only calendar while using a free account\n\t\tconst selectedCalendar = this.extractCalendarListIds(restriction.folderIds)\n\t\tif (!selectedCalendar || Array.isArray(selectedCalendar)) {\n\t\t\tthis._selectedCalendar = selectedCalendar\n\t\t} else if (CLIENT_ONLY_CALENDARS.has(selectedCalendar.toString())) {\n\t\t\tthis.getUserHasNewPaidPlan()\n\t\t\t\t.getAsync()\n\t\t\t\t.then((isNewPaidPlan) => {\n\t\t\t\t\tif (!isNewPaidPlan) {\n\t\t\t\t\t\treturn (this._selectedCalendar = null)\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._selectedCalendar = selectedCalendar\n\t\t\t\t})\n\t\t}\n\n\t\tthis._includeRepeatingEvents = restriction.eventSeries ?? true\n\t\tthis.lazyCalendarInfos.load()\n\t\tthis.userHasNewPaidPlan.load()\n\t\tthis.latestCalendarRestriction = restriction\n\n\t\tif (args.id != null) {\n\t\t\ttry {\n\t\t\t\tconst { start, id } = decodeCalendarSearchKey(args.id)\n\t\t\t\tthis.loadAndSelectIfNeeded(id, ({ entry }: CalendarSearchResultListEntry) => {\n\t\t\t\t\tentry = entry as CalendarEvent\n\t\t\t\t\treturn id === getElementId(entry) && start === entry.startTime.getTime()\n\t\t\t\t})\n\t\t\t} catch (err) {\n\t\t\t\tconsole.log(\"Invalid ID, selecting none\")\n\t\t\t\tthis.listModel.selectNone()\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate extractCalendarListIds(listIds: string[]): readonly [string, string] | string | null {\n\t\tif (listIds.length < 1) return null\n\t\telse if (listIds.length === 1) return listIds[0]\n\n\t\treturn [listIds[0], listIds[1]]\n\t}\n\n\tprivate loadAndSelectIfNeeded(id: string | null, finder?: (a: ListElement) => boolean) {\n\t\t// nothing to select\n\t\tif (id == null) {\n\t\t\treturn\n\t\t}\n\n\t\tif (!this.listModel.isItemSelected(id)) {\n\t\t\tthis.handleLoadAndSelection(id, finder)\n\t\t}\n\t}\n\n\tprivate handleLoadAndSelection(id: string, finder: ((a: ListElement) => boolean) | undefined) {\n\t\tif (this.listModel.isLoadedCompletely()) {\n\t\t\treturn this.selectItem(id, finder)\n\t\t}\n\n\t\tconst listStateStream = stream.combine((a) => a(), [this.listModel.stateStream])\n\t\tlistStateStream.map((state) => {\n\t\t\tif (state.loadingStatus === ListLoadingState.Done) {\n\t\t\t\tthis.selectItem(id, finder)\n\t\t\t\tlistStateStream.end(true)\n\t\t\t}\n\t\t})\n\t}\n\n\tprivate selectItem(id: string, finder: ((a: ListElement) => boolean) | undefined) {\n\t\tconst listModel = this.listModel\n\t\tthis.listModel.loadAndSelect(id, () => !deepEqual(this.listModel, listModel), finder)\n\t}\n\n\tasync loadAll() {\n\t\tif (this.loadingAllForSearchResult != null) return\n\t\tthis.loadingAllForSearchResult = this.searchResult ?? null\n\t\tthis.listModel.selectAll()\n\t\ttry {\n\t\t\twhile (\n\t\t\t\tthis.searchResult?.restriction &&\n\t\t\t\tthis.loadingAllForSearchResult &&\n\t\t\t\tisSameSearchRestriction(this.searchResult?.restriction, this.loadingAllForSearchResult.restriction) &&\n\t\t\t\t!this.listModel.isLoadedCompletely()\n\t\t\t) {\n\t\t\t\tawait this.listModel.loadMore()\n\t\t\t\tif (\n\t\t\t\t\tthis.searchResult.restriction &&\n\t\t\t\t\tthis.loadingAllForSearchResult.restriction &&\n\t\t\t\t\tisSameSearchRestriction(this.searchResult.restriction, this.loadingAllForSearchResult.restriction)\n\t\t\t\t) {\n\t\t\t\t\tthis.listModel.selectAll()\n\t\t\t\t}\n\t\t\t}\n\t\t} finally {\n\t\t\tthis.loadingAllForSearchResult = null\n\t\t}\n\t}\n\n\tstopLoadAll() {\n\t\tthis.listModel.cancelLoadAll()\n\t}\n\n\tcanSelectTimePeriod(): boolean {\n\t\treturn !this.logins.getUserController().isFreeAccount()\n\t}\n\n\tgetStartOfTheWeekOffset(): number {\n\t\treturn getStartOfTheWeekOffsetForUser(this.logins.getUserController().userSettingsGroupRoot)\n\t}\n\n\tselectCalendar(calendarInfo: CalendarInfo | string | null) {\n\t\tif (typeof calendarInfo === \"string\" || calendarInfo == null) {\n\t\t\tthis._selectedCalendar = calendarInfo\n\t\t} else {\n\t\t\tthis._selectedCalendar = [calendarInfo.groupRoot.longEvents, calendarInfo.groupRoot.shortEvents]\n\t\t}\n\t\tthis.searchAgain()\n\t}\n\n\tselectStartDate(startDate: Date | null): PaidFunctionResult {\n\t\tif (isSameDayOfDate(this.startDate, startDate)) {\n\t\t\treturn PaidFunctionResult.Success\n\t\t}\n\n\t\tif (!this.canSelectTimePeriod()) {\n\t\t\treturn PaidFunctionResult.PaidSubscriptionNeeded\n\t\t}\n\n\t\tthis._startDate = startDate\n\n\t\tthis.searchAgain()\n\n\t\treturn PaidFunctionResult.Success\n\t}\n\n\tselectEndDate(endDate: Date): PaidFunctionResult {\n\t\tif (isSameDayOfDate(this.endDate, endDate)) {\n\t\t\treturn PaidFunctionResult.Success\n\t\t}\n\n\t\tif (!this.canSelectTimePeriod()) {\n\t\t\treturn PaidFunctionResult.PaidSubscriptionNeeded\n\t\t}\n\n\t\tthis._endDate = endDate\n\n\t\tthis.searchAgain()\n\n\t\treturn PaidFunctionResult.Success\n\t}\n\n\tselectIncludeRepeatingEvents(include: boolean) {\n\t\tthis._includeRepeatingEvents = include\n\t\tthis.searchAgain()\n\t}\n\n\tprivate searchAgain(): void {\n\t\tthis.updateSearchUrl()\n\t\tthis.updateUi()\n\t}\n\n\tprivate updateSearchUrl() {\n\t\tconst selectedElement = this.listModel.state.selectedItems.size === 1 ? this.listModel.getSelectedAsArray().at(0) : null\n\t\tthis.routeCalendar(\n\t\t\t(selectedElement?.entry as CalendarEvent) ?? null,\n\t\t\tcreateRestriction(\n\t\t\t\tthis._startDate ? getStartOfDay(this._startDate).getTime() : null,\n\t\t\t\tthis._endDate ? getEndOfDay(this._endDate).getTime() : null,\n\t\t\t\tthis.getFolderIds(),\n\t\t\t\tthis._includeRepeatingEvents,\n\t\t\t),\n\t\t)\n\t}\n\n\tprivate getFolderIds() {\n\t\tif (typeof this.selectedCalendar === \"string\") {\n\t\t\treturn [this.selectedCalendar]\n\t\t} else if (this.selectedCalendar != null) {\n\t\t\treturn [...this.selectedCalendar]\n\t\t}\n\n\t\treturn []\n\t}\n\n\tprivate routeCalendar(element: CalendarEvent | null, restriction: SearchRestriction) {\n\t\tconst selectionKey = this.generateSelectionKey(element)\n\t\tthis.router.routeTo(this.currentQuery, restriction, selectionKey)\n\t}\n\n\tprivate generateSelectionKey(element: CalendarEvent | null): string | null {\n\t\tif (element == null) return null\n\t\treturn encodeCalendarSearchKey(element)\n\t}\n\n\tprivate isPossibleABirthdayContactUpdate(update: EntityUpdateData): boolean {\n\t\tif (isUpdateForTypeRef(ContactTypeRef, update)) {\n\t\t\tconst { instanceListId, instanceId } = update\n\t\t\tconst encodedContactId = stringToBase64(`${instanceListId}/${instanceId}`)\n\n\t\t\treturn this.listModel.stateStream().items.some((searchEntry) => searchEntry._id[1].endsWith(encodedContactId))\n\t\t}\n\n\t\treturn false\n\t}\n\n\tprivate isSelectedEventAnUpdatedBirthday(update: EntityUpdateData): boolean {\n\t\tif (isUpdateForTypeRef(ContactTypeRef, update)) {\n\t\t\tconst { instanceListId, instanceId } = update\n\t\t\tconst encodedContactId = stringToBase64(`${instanceListId}/${instanceId}`)\n\n\t\t\tconst selectedItem = this.listModel.getSelectedAsArray().at(0)\n\t\t\tif (!selectedItem) {\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\treturn selectedItem._id[1].endsWith(encodedContactId)\n\t\t}\n\n\t\treturn false\n\t}\n\n\tprivate async entityEventReceived(update: EntityUpdateData): Promise<void> {\n\t\tconst isPossibleABirthdayContactUpdate = this.isPossibleABirthdayContactUpdate(update)\n\n\t\tif (!isUpdateForTypeRef(CalendarEventTypeRef, update) && !isPossibleABirthdayContactUpdate) {\n\t\t\treturn\n\t\t}\n\n\t\tconst { instanceListId, instanceId, operation } = update\n\t\tconst id = [neverNull(instanceListId), instanceId] as const\n\t\tconst typeRef = new TypeRef<SomeEntity>(update.application, update.type)\n\t\tif (!this.isInSearchResult(typeRef, id) && isPossibleABirthdayContactUpdate) {\n\t\t\treturn\n\t\t}\n\n\t\t// due to the way calendar event changes are sort of non-local, we throw away the whole list and re-render it if\n\t\t// the contents are edited. we do the calculation on a new list and then swap the old list out once the new one is\n\t\t// ready\n\t\tconst selectedItem = this.listModel.getSelectedAsArray().at(0)\n\t\tconst listModel = this.createList()\n\n\t\tif (isPossibleABirthdayContactUpdate && (await this.eventsRepository.canLoadBirthdaysCalendar())) {\n\t\t\tawait this.eventsRepository.loadContactsBirthdays(true)\n\t\t}\n\n\t\tawait listModel.loadInitial()\n\t\tif (selectedItem != null) {\n\t\t\tif (isPossibleABirthdayContactUpdate && this.isSelectedEventAnUpdatedBirthday(update)) {\n\t\t\t\t// We must invalidate the selected item to refresh the contact preview\n\t\t\t\tthis.listModel.selectNone()\n\t\t\t}\n\n\t\t\tawait listModel.loadAndSelect(elementIdPart(selectedItem._id), () => false)\n\t\t}\n\t\tthis._listModel = listModel\n\t\tthis.listStateSubscription?.end(true)\n\t\tthis.listStateSubscription = this.listModel.stateStream.map((state) => this.onListStateChange(state))\n\t\tthis.updateSearchUrl()\n\t\tthis.updateUi()\n\t}\n\n\tgetSelectedEvents(): CalendarEvent[] {\n\t\treturn this.listModel\n\t\t\t.getSelectedAsArray()\n\t\t\t.map((e) => e.entry)\n\t\t\t.filter(assertIsEntity2(CalendarEventTypeRef))\n\t}\n\n\tprivate onListStateChange(newState: ListState<CalendarSearchResultListEntry>) {\n\t\tthis.updateSearchUrl()\n\t\tthis.updateUi()\n\t}\n\n\tprivate createList(): ListElementListModel<CalendarSearchResultListEntry> {\n\t\t// since we recreate the list every time we set a new result object,\n\t\t// we bind the value of result for the lifetime of this list model\n\t\t// at this point\n\t\t// note in case of refactor: the fact that the list updates the URL every time it changes\n\t\t// its state is a major source of complexity and makes everything very order-dependent\n\t\treturn new ListElementListModel<CalendarSearchResultListEntry>({\n\t\t\tfetch: async (lastFetchedEntity: CalendarSearchResultListEntry, count: number) => {\n\t\t\t\tconst startId = lastFetchedEntity == null ? GENERATED_MAX_ID : getElementId(lastFetchedEntity)\n\t\t\t\tconst lastResult = this.searchResult\n\t\t\t\tif (lastResult !== this.searchResult) {\n\t\t\t\t\tconsole.warn(\"got a fetch request for outdated results object, ignoring\")\n\t\t\t\t\t// this.searchResults was reassigned, we'll create a new ListElementListModel soon\n\t\t\t\t\treturn { items: [], complete: true }\n\t\t\t\t}\n\n\t\t\t\tif (!lastResult || (lastResult.results.length === 0 && !hasMoreResults(lastResult))) {\n\t\t\t\t\treturn { items: [], complete: true }\n\t\t\t\t}\n\n\t\t\t\tconst { items, newSearchResult } = await this.loadSearchResults(lastResult, startId, count)\n\t\t\t\tconst entries = items.map((instance) => new CalendarSearchResultListEntry(instance))\n\t\t\t\tconst complete = !hasMoreResults(newSearchResult)\n\n\t\t\t\treturn { items: entries, complete }\n\t\t\t},\n\t\t\tloadSingle: async (_listId: Id, elementId: Id) => {\n\t\t\t\tconst lastResult = this.searchResult\n\t\t\t\tif (!lastResult) {\n\t\t\t\t\treturn null\n\t\t\t\t}\n\t\t\t\tconst id = lastResult.results.find((resultId) => elementIdPart(resultId) === elementId)\n\t\t\t\tif (id) {\n\t\t\t\t\treturn this.entityClient\n\t\t\t\t\t\t.load(lastResult.restriction.type, id)\n\t\t\t\t\t\t.then((entity) => new CalendarSearchResultListEntry(entity))\n\t\t\t\t\t\t.catch(\n\t\t\t\t\t\t\tofClass(NotFoundError, (_) => {\n\t\t\t\t\t\t\t\treturn null\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\treturn null\n\t\t\t\t}\n\t\t\t},\n\t\t\tsortCompare: (o1: CalendarSearchResultListEntry, o2: CalendarSearchResultListEntry) =>\n\t\t\t\tdowncast(o1.entry).startTime.getTime() - downcast(o2.entry).startTime.getTime(),\n\t\t\tautoSelectBehavior: () => ListAutoSelectBehavior.OLDER,\n\t\t})\n\t}\n\n\tisInSearchResult(typeRef: TypeRef<unknown>, id: IdTuple): boolean {\n\t\tconst result = this.searchResult\n\n\t\tif (result && isSameTypeRef(typeRef, result.restriction.type)) {\n\t\t\t// The list id must be null/empty, otherwise the user is filtering by list, and it shouldn't be ignored\n\n\t\t\tconst ignoreList = isSameTypeRef(typeRef, MailTypeRef) && result.restriction.folderIds.length === 0\n\n\t\t\treturn result.results.some((r) => this.compareItemId(r, id, ignoreList))\n\t\t}\n\n\t\treturn false\n\t}\n\n\tprivate compareItemId(id1: IdTuple, id2: IdTuple, ignoreList: boolean) {\n\t\treturn ignoreList ? isSameId(elementIdPart(id1), elementIdPart(id2)) : isSameId(id1, id2)\n\t}\n\n\tprivate async loadSearchResults(\n\t\tcurrentResult: SearchResult,\n\t\tstartId: Id,\n\t\tcount: number,\n\t): Promise<{ items: CalendarEvent[]; newSearchResult: SearchResult }> {\n\t\tconst updatedResult = currentResult\n\t\t// we need to override global reference for other functions\n\t\tthis.searchResult = updatedResult\n\n\t\tlet items: CalendarEvent[]\n\t\tif (isSameTypeRef(currentResult.restriction.type, CalendarEventTypeRef)) {\n\t\t\ttry {\n\t\t\t\tconst { start, end } = currentResult.restriction\n\t\t\t\tif (start == null || end == null) {\n\t\t\t\t\tthrow new ProgrammingError(\"invalid search time range for calendar\")\n\t\t\t\t}\n\t\t\t\titems = [\n\t\t\t\t\t...(await this.calendarFacade.reifyCalendarSearchResult(start, end, updatedResult.results)),\n\t\t\t\t\t...(await this.getClientOnlyEventsSeries(start, end, updatedResult.results)),\n\t\t\t\t]\n\t\t\t} finally {\n\t\t\t\tthis.updateUi()\n\t\t\t}\n\t\t} else {\n\t\t\t// this type is not shown in the search view, e.g. group info\n\t\t\titems = []\n\t\t}\n\n\t\treturn { items: items, newSearchResult: updatedResult }\n\t}\n\n\tprivate async getClientOnlyEventsSeries(start: number, end: number, events: IdTuple[]) {\n\t\tconst eventList = await retrieveClientOnlyEventsForUser(this.logins, events, this.eventsRepository.getBirthdayEvents())\n\t\treturn generateCalendarInstancesInRange(eventList, { start, end })\n\t}\n\n\tsendStopLoadingSignal() {\n\t\tthis.search.sendCancelSignal()\n\t}\n\n\tgetLocalCalendars() {\n\t\treturn getClientOnlyCalendars(this.logins.getUserController().userId, this.localCalendars)\n\t}\n\n\tdispose() {\n\t\tthis.stopLoadAll()\n\t\tthis.resultSubscription?.end(true)\n\t\tthis.resultSubscription = null\n\t\tthis.listStateSubscription?.end(true)\n\t\tthis.listStateSubscription = null\n\t\tthis.search.sendCancelSignal()\n\t\tthis.eventController.removeEntityListener(this.entityEventsListener)\n\t}\n}\n"]}