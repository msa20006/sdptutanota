{"version":3,"file":"TopLevelView.js","sourceRoot":"","sources":["../../src/TopLevelView.ts"],"names":[],"mappings":"","sourcesContent":["import { Component } from \"mithril\"\nimport { ViewSlider } from \"./common/gui/nav/ViewSlider.js\"\n\nexport interface TopLevelAttrs {\n\trequestedPath: string\n\targs: Record<string, any>\n}\n\n/**\n * An interface that all top-levels views must conform to.\n */\nexport interface TopLevelView<Attrs extends TopLevelAttrs = TopLevelAttrs> extends Component<Attrs> {\n\t/** Called when URL is updated. Optional as is only needed for old-style components (the ones we instantiate manually) */\n\tupdateUrl?(args: Record<string, any>, requestedPath: string): void\n\n\treadonly getViewSlider?: () => ViewSlider | null\n\n\t/** @return true if view handled press itself */\n\treadonly handleBackButton?: () => boolean\n}\n"]}