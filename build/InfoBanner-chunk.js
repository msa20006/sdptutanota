import { mithril_default } from "./mithril-chunk.js";
import { isNotNull } from "./dist2-chunk.js";
import { lang } from "./LanguageViewModel-chunk.js";
import { theme } from "./theme-chunk.js";
import { px, size } from "./size-chunk.js";
import { Button, ButtonType } from "./Button-chunk.js";
import { Icons } from "./Icons-chunk.js";
import { Icon } from "./Icon-chunk.js";
import { NavButton } from "./NavButton-chunk.js";

//#region src/common/gui/base/InfoBanner.ts
const WARNING_RED = "#ca0606";
let BannerType = function(BannerType$1) {
	BannerType$1["Info"] = "info";
	BannerType$1["Warning"] = "warning";
	return BannerType$1;
}({});
var InfoBanner = class {
	view(vnode) {
		const { message, icon, helpLink, buttons, type } = vnode.attrs;
		const buttonContainerStyle = helpLink != null || buttons.length > 0 ? {
			marginTop: "-10px",
			marginBottom: "-6px"
		} : undefined;
		return mithril_default(".center-vertically.border-bottom.pr-s.pl.border-radius.mt-xs", { style: {
			border: `solid 2px ${type === BannerType.Warning ? WARNING_RED : theme.content_border}`,
			minHeight: buttons.length > 0 ? undefined : px(37)
		} }, [mithril_default(".mt-s.mr-s.abs", this.renderIcon(icon, type ?? null)), mithril_default("", { style: { "margin-left": px(size.icon_size_large + 1) } }, [mithril_default(".mr.pt-s.pb-s", typeof message === "function" ? message() : mithril_default(".small.text-break", lang.get(message))), mithril_default(".flex.ml-negative-s", { style: buttonContainerStyle }, [this.renderButtons(buttons), this.renderHelpLink(helpLink)])])]);
	}
	renderIcon(icon, type) {
		return mithril_default(Icon, {
			icon,
			style: {
				fill: type === BannerType.Warning ? WARNING_RED : theme.content_button,
				display: "block"
			}
		});
	}
	renderButtons(buttons) {
		if (buttons.length === 0) return null;
		return mithril_default(".small.flex.row", buttons.filter(isNotNull).map((attrs) => mithril_default(Button, {
			...attrs,
			type: ButtonType.Secondary
		})));
	}
	renderHelpLink(helpLink) {
		if (helpLink == null) return null;
		return [mithril_default(".flex-grow"), mithril_default(".button-content", { style: { marginRight: "-10px" } }, mithril_default(NavButton, {
			icon: () => Icons.QuestionMark,
			href: helpLink,
			small: true,
			hideLabel: true,
			centred: true,
			label: "help_label"
		}))];
	}
};

//#endregion
export { BannerType, InfoBanner };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSW5mb0Jhbm5lci1jaHVuay5qcyIsIm5hbWVzIjpbInZub2RlOiBWbm9kZTxJbmZvQmFubmVyQXR0cnM+IiwiaWNvbjogQWxsSWNvbnMiLCJ0eXBlOiBCYW5uZXJUeXBlIHwgbnVsbCIsImJ1dHRvbnM6IFJlYWRvbmx5QXJyYXk8QmFubmVyQnV0dG9uQXR0cnMgfCBudWxsPiIsImhlbHBMaW5rPzogSW5mb0xpbmsgfCBudWxsIl0sInNvdXJjZXMiOlsiLi4vc3JjL2NvbW1vbi9ndWkvYmFzZS9JbmZvQmFubmVyLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFsbEljb25zLCBJY29uIH0gZnJvbSBcIi4vSWNvbi5qc1wiXG5pbXBvcnQgbSwgeyBDaGlsZHJlbiwgQ29tcG9uZW50LCBWbm9kZSB9IGZyb20gXCJtaXRocmlsXCJcbmltcG9ydCB7IHRoZW1lIH0gZnJvbSBcIi4uL3RoZW1lLmpzXCJcbmltcG9ydCB0eXBlIHsgSW5mb0xpbmssIFRyYW5zbGF0aW9uS2V5IH0gZnJvbSBcIi4uLy4uL21pc2MvTGFuZ3VhZ2VWaWV3TW9kZWwuanNcIlxuaW1wb3J0IHsgbGFuZyB9IGZyb20gXCIuLi8uLi9taXNjL0xhbmd1YWdlVmlld01vZGVsLmpzXCJcbmltcG9ydCB0eXBlIHsgQnV0dG9uQXR0cnMgfSBmcm9tIFwiLi9CdXR0b24uanNcIlxuaW1wb3J0IHsgQnV0dG9uLCBCdXR0b25UeXBlIH0gZnJvbSBcIi4vQnV0dG9uLmpzXCJcbmltcG9ydCB7IE5hdkJ1dHRvbiB9IGZyb20gXCIuL05hdkJ1dHRvbi5qc1wiXG5pbXBvcnQgdHlwZSB7IGxhenkgfSBmcm9tIFwiQHR1dGFvL3R1dGFub3RhLXV0aWxzXCJcbmltcG9ydCB7IGlzTm90TnVsbCB9IGZyb20gXCJAdHV0YW8vdHV0YW5vdGEtdXRpbHNcIlxuaW1wb3J0IHsgSWNvbnMgfSBmcm9tIFwiLi9pY29ucy9JY29ucy5qc1wiXG5pbXBvcnQgeyBweCwgc2l6ZSB9IGZyb20gXCIuLi9zaXplLmpzXCJcblxuY29uc3QgV0FSTklOR19SRUQgPSBcIiNjYTA2MDZcIlxuXG5leHBvcnQgY29uc3QgZW51bSBCYW5uZXJUeXBlIHtcblx0SW5mbyA9IFwiaW5mb1wiLFxuXHRXYXJuaW5nID0gXCJ3YXJuaW5nXCIsXG59XG5cbmV4cG9ydCB0eXBlIEJhbm5lckJ1dHRvbkF0dHJzID0gT21pdDxCdXR0b25BdHRycywgXCJ0eXBlXCI+XG5cbmV4cG9ydCBpbnRlcmZhY2UgSW5mb0Jhbm5lckF0dHJzIHtcblx0bWVzc2FnZTogVHJhbnNsYXRpb25LZXkgfCBsYXp5PENoaWxkcmVuPlxuXHRpY29uOiBBbGxJY29uc1xuXHRoZWxwTGluaz86IEluZm9MaW5rIHwgbnVsbFxuXHRidXR0b25zOiBSZWFkb25seUFycmF5PEJhbm5lckJ1dHRvbkF0dHJzIHwgbnVsbD5cblx0dHlwZT86IEJhbm5lclR5cGVcbn1cblxuLyoqXG4gKiBBIGxvdyBwcm9maWxlIGJhbm5lciB3aXRoIGEgbWVzc2FnZSBhbmQgMCBvciBtb3JlIGJ1dHRvbnNcbiAqL1xuZXhwb3J0IGNsYXNzIEluZm9CYW5uZXIgaW1wbGVtZW50cyBDb21wb25lbnQ8SW5mb0Jhbm5lckF0dHJzPiB7XG5cdHZpZXcodm5vZGU6IFZub2RlPEluZm9CYW5uZXJBdHRycz4pOiBDaGlsZHJlbiB7XG5cdFx0Y29uc3QgeyBtZXNzYWdlLCBpY29uLCBoZWxwTGluaywgYnV0dG9ucywgdHlwZSB9ID0gdm5vZGUuYXR0cnNcblx0XHQvLyBBZGp1c3QgdGhlIHRvcCBhbmQgYm90dG9tIHNwYWNpbmcgYmVjYXVzZSB0aGUgYnV0dG9ucyBoYXZlIGEgbWluaW11bSBoZWlnaHQgb2YgNDRweC5cblx0XHQvLyBUaGlzIHdheSB0aGUgY2xpY2thYmxlIGFyZWEgb2YgdGhlIGJ1dHRvbiBvdmVybGFwcyB3aXRoIHRoZSB0ZXh0IGFuZCB0aGUgYm9yZGVyIGEgYml0IHdpdGhvdXQgaGF2aW5nXG5cdFx0Ly8gdG9vIG11Y2ggZW1wdHkgc3BhY2Vcblx0XHRjb25zdCBidXR0b25Db250YWluZXJTdHlsZSA9XG5cdFx0XHRoZWxwTGluayAhPSBudWxsIHx8IGJ1dHRvbnMubGVuZ3RoID4gMFxuXHRcdFx0XHQ/IHtcblx0XHRcdFx0XHRcdG1hcmdpblRvcDogXCItMTBweFwiLFxuXHRcdFx0XHRcdFx0bWFyZ2luQm90dG9tOiBcIi02cHhcIixcblx0XHRcdFx0ICB9XG5cdFx0XHRcdDogdW5kZWZpbmVkXG5cdFx0cmV0dXJuIG0oXG5cdFx0XHRcIi5jZW50ZXItdmVydGljYWxseS5ib3JkZXItYm90dG9tLnByLXMucGwuYm9yZGVyLXJhZGl1cy5tdC14c1wiLFxuXHRcdFx0e1xuXHRcdFx0XHRzdHlsZToge1xuXHRcdFx0XHRcdGJvcmRlcjogYHNvbGlkIDJweCAke3R5cGUgPT09IEJhbm5lclR5cGUuV2FybmluZyA/IFdBUk5JTkdfUkVEIDogdGhlbWUuY29udGVudF9ib3JkZXJ9YCxcblx0XHRcdFx0XHQvLyBrZWVwIHRoZSBkaXN0YW5jZSB0byB0aGUgYm90dG9tIG9mIHRoZSBiYW5uZXIgdGhlIHNhbWUgaW4gdGhlIGNhc2UgdGhhdCBidXR0b25zIGFyZW4ndCBwcmVzZW50XG5cdFx0XHRcdFx0bWluSGVpZ2h0OiBidXR0b25zLmxlbmd0aCA+IDAgPyB1bmRlZmluZWQgOiBweCgzNyksXG5cdFx0XHRcdH0sXG5cdFx0XHR9LFxuXHRcdFx0W1xuXHRcdFx0XHRtKFwiLm10LXMubXItcy5hYnNcIiwgdGhpcy5yZW5kZXJJY29uKGljb24sIHR5cGUgPz8gbnVsbCkpLCAvLyBhYnNvbHV0ZSBwb3NpdGlvbiBtYWtlcyB0aGUgaWNvbiBmaXhlZCB0byB0aGUgdG9wIGxlZnQgY29ybmVyIG9mIHRoZSBiYW5uZXJcblx0XHRcdFx0bShcblx0XHRcdFx0XHRcIlwiLFxuXHRcdFx0XHRcdHsgc3R5bGU6IHsgXCJtYXJnaW4tbGVmdFwiOiBweChzaXplLmljb25fc2l6ZV9sYXJnZSArIDEpIH0gfSwgLy8gYWxsb3cgcm9vbSBmb3IgdGhlIGljb25cblx0XHRcdFx0XHRbXG5cdFx0XHRcdFx0XHRtKFwiLm1yLnB0LXMucGItc1wiLCB0eXBlb2YgbWVzc2FnZSA9PT0gXCJmdW5jdGlvblwiID8gbWVzc2FnZSgpIDogbShcIi5zbWFsbC50ZXh0LWJyZWFrXCIsIGxhbmcuZ2V0KG1lc3NhZ2UpKSksXG5cdFx0XHRcdFx0XHRtKFwiLmZsZXgubWwtbmVnYXRpdmUtc1wiLCB7IHN0eWxlOiBidXR0b25Db250YWluZXJTdHlsZSB9LCBbdGhpcy5yZW5kZXJCdXR0b25zKGJ1dHRvbnMpLCB0aGlzLnJlbmRlckhlbHBMaW5rKGhlbHBMaW5rKV0pLFxuXHRcdFx0XHRcdF0sXG5cdFx0XHRcdCksXG5cdFx0XHRdLFxuXHRcdClcblx0fVxuXG5cdHJlbmRlckljb24oaWNvbjogQWxsSWNvbnMsIHR5cGU6IEJhbm5lclR5cGUgfCBudWxsKTogQ2hpbGRyZW4ge1xuXHRcdHJldHVybiBtKEljb24sIHtcblx0XHRcdGljb24sXG5cdFx0XHRzdHlsZToge1xuXHRcdFx0XHRmaWxsOiB0eXBlID09PSBCYW5uZXJUeXBlLldhcm5pbmcgPyBXQVJOSU5HX1JFRCA6IHRoZW1lLmNvbnRlbnRfYnV0dG9uLFxuXHRcdFx0XHRkaXNwbGF5OiBcImJsb2NrXCIsXG5cdFx0XHR9LFxuXHRcdH0pXG5cdH1cblxuXHRyZW5kZXJCdXR0b25zKGJ1dHRvbnM6IFJlYWRvbmx5QXJyYXk8QmFubmVyQnV0dG9uQXR0cnMgfCBudWxsPik6IENoaWxkcmVuIHtcblx0XHRpZiAoYnV0dG9ucy5sZW5ndGggPT09IDApIHJldHVybiBudWxsXG5cdFx0cmV0dXJuIG0oXG5cdFx0XHRcIi5zbWFsbC5mbGV4LnJvd1wiLFxuXHRcdFx0YnV0dG9ucy5maWx0ZXIoaXNOb3ROdWxsKS5tYXAoKGF0dHJzKSA9PiBtKEJ1dHRvbiwgeyAuLi5hdHRycywgdHlwZTogQnV0dG9uVHlwZS5TZWNvbmRhcnkgfSkpLFxuXHRcdClcblx0fVxuXG5cdHJlbmRlckhlbHBMaW5rKGhlbHBMaW5rPzogSW5mb0xpbmsgfCBudWxsKTogQ2hpbGRyZW4gfCBudWxsIHtcblx0XHRpZiAoaGVscExpbmsgPT0gbnVsbCkgcmV0dXJuIG51bGxcblxuXHRcdHJldHVybiBbXG5cdFx0XHQvLyBQdXNoIHRoZSBoZWxwIGJ1dHRvbiBhbGwgdGhlIHdheSB0byB0aGUgcmlnaHRcblx0XHRcdG0oXCIuZmxleC1ncm93XCIpLFxuXHRcdFx0bShcblx0XHRcdFx0XCIuYnV0dG9uLWNvbnRlbnRcIixcblx0XHRcdFx0e1xuXHRcdFx0XHRcdHN0eWxlOiB7XG5cdFx0XHRcdFx0XHRtYXJnaW5SaWdodDogXCItMTBweFwiLFxuXHRcdFx0XHRcdH0sXG5cdFx0XHRcdH0sXG5cdFx0XHRcdG0oTmF2QnV0dG9uLCB7XG5cdFx0XHRcdFx0aWNvbjogKCkgPT4gSWNvbnMuUXVlc3Rpb25NYXJrLFxuXHRcdFx0XHRcdGhyZWY6IGhlbHBMaW5rLFxuXHRcdFx0XHRcdHNtYWxsOiB0cnVlLFxuXHRcdFx0XHRcdGhpZGVMYWJlbDogdHJ1ZSxcblx0XHRcdFx0XHRjZW50cmVkOiB0cnVlLFxuXHRcdFx0XHRcdGxhYmVsOiBcImhlbHBfbGFiZWxcIixcblx0XHRcdFx0fSksXG5cdFx0XHQpLFxuXHRcdF1cblx0fVxufVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQWFBLE1BQU0sY0FBYztJQUVGLG9DQUFYO0FBQ047QUFDQTs7QUFDQTtJQWVZLGFBQU4sTUFBdUQ7Q0FDN0QsS0FBS0EsT0FBeUM7RUFDN0MsTUFBTSxFQUFFLFNBQVMsTUFBTSxVQUFVLFNBQVMsTUFBTSxHQUFHLE1BQU07RUFJekQsTUFBTSx1QkFDTCxZQUFZLFFBQVEsUUFBUSxTQUFTLElBQ2xDO0dBQ0EsV0FBVztHQUNYLGNBQWM7RUFDYixJQUNEO0FBQ0osU0FBTyxnQkFDTixnRUFDQSxFQUNDLE9BQU87R0FDTixTQUFTLFlBQVksU0FBUyxXQUFXLFVBQVUsY0FBYyxNQUFNLGVBQWU7R0FFdEYsV0FBVyxRQUFRLFNBQVMsSUFBSSxZQUFZLEdBQUcsR0FBRztFQUNsRCxFQUNELEdBQ0QsQ0FDQyxnQkFBRSxrQkFBa0IsS0FBSyxXQUFXLE1BQU0sUUFBUSxLQUFLLENBQUMsRUFDeEQsZ0JBQ0MsSUFDQSxFQUFFLE9BQU8sRUFBRSxlQUFlLEdBQUcsS0FBSyxrQkFBa0IsRUFBRSxDQUFFLEVBQUUsR0FDMUQsQ0FDQyxnQkFBRSx3QkFBd0IsWUFBWSxhQUFhLFNBQVMsR0FBRyxnQkFBRSxxQkFBcUIsS0FBSyxJQUFJLFFBQVEsQ0FBQyxDQUFDLEVBQ3pHLGdCQUFFLHVCQUF1QixFQUFFLE9BQU8scUJBQXNCLEdBQUUsQ0FBQyxLQUFLLGNBQWMsUUFBUSxFQUFFLEtBQUssZUFBZSxTQUFTLEFBQUMsRUFBQyxBQUN2SCxFQUNELEFBQ0QsRUFDRDtDQUNEO0NBRUQsV0FBV0MsTUFBZ0JDLE1BQW1DO0FBQzdELFNBQU8sZ0JBQUUsTUFBTTtHQUNkO0dBQ0EsT0FBTztJQUNOLE1BQU0sU0FBUyxXQUFXLFVBQVUsY0FBYyxNQUFNO0lBQ3hELFNBQVM7R0FDVDtFQUNELEVBQUM7Q0FDRjtDQUVELGNBQWNDLFNBQTREO0FBQ3pFLE1BQUksUUFBUSxXQUFXLEVBQUcsUUFBTztBQUNqQyxTQUFPLGdCQUNOLG1CQUNBLFFBQVEsT0FBTyxVQUFVLENBQUMsSUFBSSxDQUFDLFVBQVUsZ0JBQUUsUUFBUTtHQUFFLEdBQUc7R0FBTyxNQUFNLFdBQVc7RUFBVyxFQUFDLENBQUMsQ0FDN0Y7Q0FDRDtDQUVELGVBQWVDLFVBQTZDO0FBQzNELE1BQUksWUFBWSxLQUFNLFFBQU87QUFFN0IsU0FBTyxDQUVOLGdCQUFFLGFBQWEsRUFDZixnQkFDQyxtQkFDQSxFQUNDLE9BQU8sRUFDTixhQUFhLFFBQ2IsRUFDRCxHQUNELGdCQUFFLFdBQVc7R0FDWixNQUFNLE1BQU0sTUFBTTtHQUNsQixNQUFNO0dBQ04sT0FBTztHQUNQLFdBQVc7R0FDWCxTQUFTO0dBQ1QsT0FBTztFQUNQLEVBQUMsQ0FDRixBQUNEO0NBQ0Q7QUFDRCJ9