import "./dist-chunk.js";
import "./ProgrammingError-chunk.js";
import { assertWorkerOrNode } from "./Env-chunk.js";
import "./dist2-chunk.js";
import "./EntityUtils-chunk.js";
import "./TypeModels3-chunk.js";
import { CounterService, createReadCounterData } from "./Services4-chunk.js";

//#region src/common/api/worker/facades/lazy/CounterFacade.ts
assertWorkerOrNode();
var CounterFacade = class {
	constructor(serviceExecutor) {
		this.serviceExecutor = serviceExecutor;
	}
	async readCounterValue(counterType, rowName, columnName) {
		const counterData = createReadCounterData({
			counterType,
			rowName,
			columnName
		});
		const counterReturn = await this.serviceExecutor.get(CounterService, counterData);
		return Number(counterReturn.counterValues[0].value);
	}
	async readAllCustomerCounterValues(counterType, customerId) {
		const counterData = createReadCounterData({
			counterType,
			rowName: customerId,
			columnName: null
		});
		const counterReturn = await this.serviceExecutor.get(CounterService, counterData);
		return counterReturn.counterValues;
	}
};

//#endregion
export { CounterFacade };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ291bnRlckZhY2FkZS1jaHVuay5qcyIsIm5hbWVzIjpbInNlcnZpY2VFeGVjdXRvcjogSVNlcnZpY2VFeGVjdXRvciIsImNvdW50ZXJUeXBlOiBDb3VudGVyVHlwZSIsInJvd05hbWU6IHN0cmluZyIsImNvbHVtbk5hbWU6IElkIiwiY3VzdG9tZXJJZDogSWQiXSwic291cmNlcyI6WyIuLi9zcmMvY29tbW9uL2FwaS93b3JrZXIvZmFjYWRlcy9sYXp5L0NvdW50ZXJGYWNhZGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ291bnRlclZhbHVlLCBjcmVhdGVSZWFkQ291bnRlckRhdGEgfSBmcm9tIFwiLi4vLi4vLi4vZW50aXRpZXMvbW9uaXRvci9UeXBlUmVmcy5qc1wiXG5pbXBvcnQgeyBhc3NlcnRXb3JrZXJPck5vZGUgfSBmcm9tIFwiLi4vLi4vLi4vY29tbW9uL0Vudi5qc1wiXG5pbXBvcnQgeyBJU2VydmljZUV4ZWN1dG9yIH0gZnJvbSBcIi4uLy4uLy4uL2NvbW1vbi9TZXJ2aWNlUmVxdWVzdC5qc1wiXG5pbXBvcnQgeyBDb3VudGVyU2VydmljZSB9IGZyb20gXCIuLi8uLi8uLi9lbnRpdGllcy9tb25pdG9yL1NlcnZpY2VzLmpzXCJcbmltcG9ydCB7IENvdW50ZXJUeXBlIH0gZnJvbSBcIi4uLy4uLy4uL2NvbW1vbi9UdXRhbm90YUNvbnN0YW50cy5qc1wiXG5cbmFzc2VydFdvcmtlck9yTm9kZSgpXG5cbmV4cG9ydCBjbGFzcyBDb3VudGVyRmFjYWRlIHtcblx0Y29uc3RydWN0b3IocHJpdmF0ZSByZWFkb25seSBzZXJ2aWNlRXhlY3V0b3I6IElTZXJ2aWNlRXhlY3V0b3IpIHt9XG5cblx0YXN5bmMgcmVhZENvdW50ZXJWYWx1ZShjb3VudGVyVHlwZTogQ291bnRlclR5cGUsIHJvd05hbWU6IHN0cmluZywgY29sdW1uTmFtZTogSWQpOiBQcm9taXNlPG51bWJlcj4ge1xuXHRcdGNvbnN0IGNvdW50ZXJEYXRhID0gY3JlYXRlUmVhZENvdW50ZXJEYXRhKHtcblx0XHRcdGNvdW50ZXJUeXBlLFxuXHRcdFx0cm93TmFtZSxcblx0XHRcdGNvbHVtbk5hbWUsXG5cdFx0fSlcblx0XHRjb25zdCBjb3VudGVyUmV0dXJuID0gYXdhaXQgdGhpcy5zZXJ2aWNlRXhlY3V0b3IuZ2V0KENvdW50ZXJTZXJ2aWNlLCBjb3VudGVyRGF0YSlcblx0XHRyZXR1cm4gTnVtYmVyKGNvdW50ZXJSZXR1cm4uY291bnRlclZhbHVlc1swXS52YWx1ZSlcblx0fVxuXG5cdGFzeW5jIHJlYWRBbGxDdXN0b21lckNvdW50ZXJWYWx1ZXMoY291bnRlclR5cGU6IENvdW50ZXJUeXBlLCBjdXN0b21lcklkOiBJZCk6IFByb21pc2U8Q291bnRlclZhbHVlW10+IHtcblx0XHRjb25zdCBjb3VudGVyRGF0YSA9IGNyZWF0ZVJlYWRDb3VudGVyRGF0YSh7XG5cdFx0XHRjb3VudGVyVHlwZSxcblx0XHRcdHJvd05hbWU6IGN1c3RvbWVySWQsXG5cdFx0XHRjb2x1bW5OYW1lOiBudWxsLFxuXHRcdH0pXG5cdFx0Y29uc3QgY291bnRlclJldHVybiA9IGF3YWl0IHRoaXMuc2VydmljZUV4ZWN1dG9yLmdldChDb3VudGVyU2VydmljZSwgY291bnRlckRhdGEpXG5cdFx0cmV0dXJuIGNvdW50ZXJSZXR1cm4uY291bnRlclZhbHVlc1xuXHR9XG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQU1BLG9CQUFvQjtJQUVQLGdCQUFOLE1BQW9CO0NBQzFCLFlBQTZCQSxpQkFBbUM7RUFzQmhFLEtBdEI2QjtDQUFxQztDQUVsRSxNQUFNLGlCQUFpQkMsYUFBMEJDLFNBQWlCQyxZQUFpQztFQUNsRyxNQUFNLGNBQWMsc0JBQXNCO0dBQ3pDO0dBQ0E7R0FDQTtFQUNBLEVBQUM7RUFDRixNQUFNLGdCQUFnQixNQUFNLEtBQUssZ0JBQWdCLElBQUksZ0JBQWdCLFlBQVk7QUFDakYsU0FBTyxPQUFPLGNBQWMsY0FBYyxHQUFHLE1BQU07Q0FDbkQ7Q0FFRCxNQUFNLDZCQUE2QkYsYUFBMEJHLFlBQXlDO0VBQ3JHLE1BQU0sY0FBYyxzQkFBc0I7R0FDekM7R0FDQSxTQUFTO0dBQ1QsWUFBWTtFQUNaLEVBQUM7RUFDRixNQUFNLGdCQUFnQixNQUFNLEtBQUssZ0JBQWdCLElBQUksZ0JBQWdCLFlBQVk7QUFDakYsU0FBTyxjQUFjO0NBQ3JCO0FBQ0QifQ==