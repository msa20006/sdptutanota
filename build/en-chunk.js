
//#region src/mail-app/translations/en.ts
var en_default = {
	"id": "fcd7471b347c8e517663e194dcddf237",
	"name": "en",
	"code": "en",
	"default": true,
	"main": true,
	"rtl": false,
	"plural_forms": [
		"zero",
		"one",
		"other"
	],
	"created_at": "2015-01-13T20:10:13Z",
	"updated_at": "2025-01-30T11:39:45Z",
	"source_locale": null,
	"fallback_locale": null,
	"keys": {
		"about_label": "About",
		"accentColor_label": "Accent color",
		"acceptContactListEmailSubject_msg": "Contact list invitation accepted",
		"acceptInvitation_action": "Accept invitation",
		"acceptPrivacyPolicyReminder_msg": "Please accept the privacy policy by selecting the checkbox.",
		"acceptPrivacyPolicy_msg": "I have read and agree to the {privacyPolicy}.",
		"acceptTemplateGroupEmailSubject_msg": "Template list invitation accepted",
		"accept_action": "Accept",
		"accountCongratulations_msg": "Congratulations",
		"accountCreationCongratulation_msg": "Your account has been created! Welcome to the encrypted side. ðŸ”’",
		"accountSwitchAliases_msg": "Please delete all email addresses of your user.",
		"accountSwitchCustomMailAddress_msg": "Please disable all custom domain email addresses.",
		"accountSwitchMultipleCalendars_msg": "Please delete all additional calendars.",
		"accountSwitchNotPossible_msg": "Downgrading is currently not possible. {detailMsg}",
		"accountSwitchSharedCalendar_msg": "Please remove all calendars shared with you.",
		"accountSwitchTooManyActiveUsers_msg": "Please deactivate all additional users before switching the plan.",
		"accountWasStillCreated_msg": "Your account has already been created as a Free account. You may also cancel the payment now, login into your account and upgrade there later.",
		"accountWillBeDeactivatedIn6Month_label": "Your account will be deleted if you don't login for 6 months",
		"accountWillHaveLessStorage_label": "Your account will only have 1GB of storage",
		"account_label": "User",
		"action_label": "Action",
		"activated_label": "Activated",
		"activate_action": "Activate",
		"activeSessions_label": "Active sessions",
		"active_label": "Active",
		"actor_label": "Actor",
		"addAccount_action": "Add account",
		"addAliasUserDisabled_msg": "The email address could not be added to the user or group because the user is currently deactivated.",
		"addCalendarFromURL_action": "From URL",
		"addCalendar_action": "Add calendar",
		"addContactList_action": "Add contact list",
		"addCustomDomainAddAdresses_msg": "The domain was assigned to your account, you can now create a new email address.",
		"addCustomDomainAddresses_title": "Add email addresses for your custom domain",
		"addCustomDomain_action": "Add custom domain",
		"addDNSValue_label": "Add value",
		"addEmailAlias_label": "Add email address",
		"addEntries_action": "Add entries",
		"addEntry_label": "Add entry",
		"addFolder_action": "Add folder",
		"addGroup_label": "Add group",
		"addGuest_label": "Add a guest",
		"addInboxRule_action": "Add inbox rule",
		"addLabel_action": "Add label",
		"addLanguage_action": "Add language",
		"addNext_action": "Add next item to selection",
		"addOpenOTPApp_action": "Add to authenticator app",
		"addParticipant_action": "Add participant",
		"addPrevious_action": "Add previous item to selection",
		"addReminder_label": "Add reminder",
		"addResponsiblePerson_label": "Add responsible person",
		"addressAlreadyExistsOnList_msg": "This address is already on this list\n",
		"addressesAlreadyInUse_msg": "The following email addresses are already in use:",
		"address_label": "Address",
		"addSecondFactor_action": "Add second factor",
		"addSpamRule_action": "Add spam rule",
		"addTemplate_label": "New template",
		"addToDict_action": "Add \"{word}\" to dictionary",
		"addUsers_action": "Add user",
		"addUserToGroup_label": "Add member",
		"add_action": "Add",
		"adminCustomDomain_label": "Custom domain",
		"adminDeleteAccount_action": "Delete account",
		"adminEmailSettings_action": "Email",
		"administratedBy_label": "Administrated by",
		"administratedGroups_label": "Administrated groups",
		"adminMaxNbrOfAliasesReached_msg": "The maximum number of email addresses has been reached.",
		"adminPayment_action": "Payment",
		"adminPremiumFeatures_action": "Extensions",
		"adminSettings_label": "Admin settings",
		"adminSpamRuleInfo_msg": "Details for configuring spam rules: ",
		"adminSpam_action": "Spam rules",
		"adminSubscription_action": "Plan",
		"adminUserList_action": "User management",
		"advanced_label": "Advanced",
		"affiliateSettingsAccumulated_label": "Accumulated commission",
		"affiliateSettingsAccumulated_msg": "Summed up monthly net commission up to now.",
		"affiliateSettingsCommission_label": "Commission",
		"affiliateSettingsCommission_msg": "The generated net commission this month.",
		"affiliateSettingsCredited_label": "Credited commission",
		"affiliateSettingsCredited_msg": "Summed up credited net commission up to now. See invoices and credit statements in the payment section.",
		"affiliateSettingsHideKpis_label": "Hide KPIs",
		"affiliateSettingsNewFree_label": "New free",
		"affiliateSettingsNewFree_msg": "Amount of new referred customers that chose the free plan this month.",
		"affiliateSettingsNewPaid_label": "New paid",
		"affiliateSettingsNewPaid_msg": "Amount of new referred customers that chose any paid plan this month.",
		"affiliateSettingsShowKpis_label": "Show KPIs",
		"affiliateSettingsTotalFree_label": "Total free",
		"affiliateSettingsTotalFree_msg": "The overall amount of referred free plan customers up until this month. Canceled plans are already deducted here.",
		"affiliateSettingsTotalPaid_label": "Total paid",
		"affiliateSettingsTotalPaid_msg": "The overall amount of referred paid plan customers up until this month. Canceled plans are already deducted here.",
		"affiliateSettings_label": "Affiliate program",
		"ageConfirmation_msg": "I am at least 16 years old.",
		"agenda_label": "Agenda",
		"allDay_label": "All Day",
		"allowBatteryPermission_msg": "We need your permission to remain in the background to notify you reliably.",
		"allowContactReadWrite_msg": "In order to synchronize your contacts, the Tuta app needs the permission to read and write to your address book. You can change this anytime in the system settings.",
		"allowContactSynchronization": "We need permission to synchronize the contacts on your device to Tuta contacts.",
		"allowExternalContentSender_action": "Always trust sender",
		"allowNotifications_msg": "We need your permission to display push notifications.",
		"allowOperation_msg": "Do you want to allow this?",
		"allowPushNotification_msg": "To receive push notifications for new emails reliably, please agree to disable battery optimizations for Tuta and grant the permission to post notifications. You can change this later in the system settings.",
		"all_contacts_label": "All contacts",
		"all_label": "All",
		"alreadyReplied_msg": "You replied to this invite.",
		"alreadySharedGroupMember_msg": "You are already a member of this group. Please remove yourself from the group before you can accept this invitation.",
		"alwaysAsk_action": "Always ask",
		"alwaysReport_action": "Always report",
		"amountUsedAndActivatedOf_label": "{used} used, {active} activated of {totalAmount}",
		"amountUsedOf_label": "{amount} used of {totalAmount}",
		"amount_label": "Amount",
		"anniversary_label": "Anniversary",
		"appearanceSettings_label": "Appearance",
		"appInfoAndroidImageAlt_alt": "Android app on Google Play",
		"appInfoFDroidImageAlt_alt": "Android app on F-Droid",
		"appInfoIosImageAlt_alt": "iOS app on App Store",
		"apply_action": "Apply",
		"appStoreNotAvailable_msg": "App Store subscriptions are not available at the moment.",
		"appStoreRenewProblemBody_msg": "Hello,\n      \nYour subscription was due to renew on {expirationDate}.\n       \nUnfortunately, we were unable to receive any payment from the App Store for your subscription, which may be due to a billing failure. Please check that your payment settings on the App Store are correct.\n\nIf we do not receive any payment, your account will be disabled on {finalExpirationDate} for nonpayment. Alternatively, you may choose to cancel your subscription or switch to another payment method.\n   \nStay secure,\nYour Tuta Team",
		"appStoreRenewProblemSubject_msg": "App Store billing failure",
		"appStoreSubscriptionEndedBody_msg": "Hello,\n       \nYour subscription ended on {expirationDate}. Please pay the subscription fee or change to the Free plan, otherwise your account will be suspended for non-payment.\n   \nStay secure,\nYour Tuta Team",
		"appStoreSubscriptionEndedSubject_msg": "Your subscription has expired",
		"appStoreSubscriptionError_msg": "Sorry, the payment transaction failed. Please try again later or contact support.",
		"archive_action": "Archive",
		"archive_label": "Archive",
		"assignLabel_action": "Assign labels",
		"assistant_label": "Assistant",
		"attachFiles_action": "Attach files",
		"attachmentAmount_label": "{amount} attachments",
		"attachmentName_label": "Attachment name",
		"attachmentWarning_msg": "Another Application wants to attach the following files to a new email:",
		"attachment_label": "Attachment",
		"attendeeNotFound_msg": "You are not attending this event.",
		"attending_label": "Attending",
		"auditLogInfo_msg": "The audit log contains important administrative actions.",
		"auditLog_title": "Audit log",
		"automatedMessage_msg": "<br/><br/>This is an automated message.",
		"automatic_label": "Automatic",
		"autoUpdate_label": "Automatic Updates",
		"available_label": "Available",
		"back_action": "Back",
		"baseTheme_label": "Base theme",
		"bcc_label": "Bcc",
		"behaviorAfterMovingEmail_label": "Behavior after moving an email",
		"birthdayCalendar_label": "Birthdays",
		"birthdayEventAge_title": "{age} years old",
		"birthdayEvent_title": "{name}'s birthday",
		"birthday_alt": "Birthday",
		"blockExternalContentSender_action": "Always block sender",
		"blue_label": "Blue",
		"bonusMonth_msg": "You have been granted {months} bonus months.",
		"bonus_label": "Bonus",
		"bookingItemUsersIncluding_label": "Users including:",
		"bookingItemUsers_label": "Users",
		"bookingOrder_label": "Booking",
		"bookingSummary_label": "Booking summary",
		"boughtGiftCardPosting_label": "Purchase gift card",
		"breakLink_action": "Remove hyperlink",
		"brother_label": "Brother",
		"buyGiftCard_label": "Buy a gift card",
		"buy_action": "Buy",
		"by_label": "by",
		"calendarAlarmsTooBigError_msg": "New reminders could not be set up. This is caused by having too many devices with notifications enabled. Please go to Settings -> Notifications to delete old devices from the notification list.",
		"calendarCustomName_label": "Your custom name for this calendar: {customName}",
		"calendarDefaultReminder_label": "Default reminder before event",
		"calendarImportSelection_label": "Select a calendar to import your events into",
		"calendarInvitationProgress_msg": "Sending invitation.",
		"calendarInvitations_label": "Calendar invitations",
		"calendarName_label": "Calendar name",
		"calendarParticipants_label": "Participants of calendar \"{name}\"",
		"calendarReminderIntervalAtEventStart_label": "At event start",
		"calendarReminderIntervalCustomDialog_title": "Custom reminder interval",
		"calendarReminderIntervalDropdownCustomItem_label": "Customâ€¦",
		"calendarReminderIntervalFiveMinutes_label": "5 minutes",
		"calendarReminderIntervalOneDay_label": "1 day",
		"calendarReminderIntervalOneHour_label": "1 hour",
		"calendarReminderIntervalOneWeek_label": "1 week",
		"calendarReminderIntervalTenMinutes_label": "10 minutes",
		"calendarReminderIntervalThirtyMinutes_label": "30 minutes",
		"calendarReminderIntervalThreeDays_label": "3 days",
		"calendarReminderIntervalTwoDays_label": "2 days",
		"calendarReminderIntervalUnitDays_label": "days",
		"calendarReminderIntervalUnitHours_label": "hours",
		"calendarReminderIntervalUnitMinutes_label": "minutes",
		"calendarReminderIntervalUnitWeeks_label": "weeks",
		"calendarReminderIntervalValue_label": "Period",
		"calendarRepeating_label": "Repeating",
		"calendarRepeatIntervalAnnually_label": "Annually",
		"calendarRepeatIntervalDaily_label": "Daily",
		"calendarRepeatIntervalMonthly_label": "Monthly",
		"calendarRepeatIntervalNoRepeat_label": "Do not repeat",
		"calendarRepeatIntervalWeekly_label": "Weekly",
		"calendarRepeatStopConditionDate_label": "On date",
		"calendarRepeatStopConditionNever_label": "Never",
		"calendarRepeatStopConditionOccurrences_label": "After occurrences",
		"calendarRepeatStopCondition_label": "Ends",
		"calendarShared_label": "Shared",
		"calendarSubscriptions_label": "Subscriptions",
		"calendarView_action": "Switch to the calendar view",
		"calendar_label": "Calendar",
		"callNumber_alt": "Call this number",
		"callNumber_label": "Call number",
		"cameraUsageDescription_msg": "Take a picture or video for adding it as attachment.",
		"cancelContactForm_label": "Cancel contact form",
		"cancellationConfirmation_msg": "Your answer is stored anonymized together with your Tuta account age and your plan. Thanks for participating!",
		"cancellationInfo_msg": "We always strive to improve our service and we would greatly appreciate if you can let us know what we can improve on!",
		"cancellationReasonImap_label": "I can't use other mail clients (IMAP)",
		"cancellationReasonImport_label": "Email import is missing",
		"cancellationReasonLabels_label": "Email labels are missing",
		"cancellationReasonNoNeed_label": "I do not need this service",
		"cancellationReasonOtherFeature_label": "Other feature is missing",
		"cancellationReasonOther_label": "Other reason",
		"cancellationReasonPrice_label": "The service is too expensive",
		"cancellationReasonSearch_label": "The email search takes too long",
		"cancellationReasonSpam_label": "I receive too many spam emails",
		"cancellationReasonUI_label": "I don't like how Tuta looks",
		"cancellationReasonUsability_label": "Tuta is too hard to use",
		"cancelledBy_label": "(cancelled by {endOfSubscriptionPeriod})",
		"cancelledReferralCreditPosting_label": "Cancelled referral credit",
		"cancelMailImport_action": "Cancel import",
		"cancelSharedMailbox_label": "Cancel shared mailbox",
		"cancelUserAccounts_label": "Cancel {1} user(s)",
		"cancel_action": "Cancel",
		"cannotEditEvent_msg": "You can only edit parts of this event.",
		"cannotEditFullEvent_msg": "You can only edit parts of this event because it was not created in your calendar.",
		"cannotEditNotOrganizer_msg": "You cannot edit this event because you are not its organizer.",
		"cannotEditSingleInstance_msg": "You can only edit parts of this event because it is part of an event series.",
		"canNotOpenFileOnDevice_msg": "This file can not be opened on this device.",
		"captchaDisplay_label": "Captcha",
		"captchaEnter_msg": "Please enter the time in hours and minutes.",
		"captchaInfo_msg": "Please enter the displayed time to prove you are not a computer.",
		"captchaInput_label": "Time",
		"catchAllMailbox_label": "Catch all mailbox",
		"cc_label": "Cc",
		"certificateError_msg": "The certificate chain or the private key have a bad format or do not match your domain.",
		"certificateExpiryDate_label": "Certificate expiry date: {date}",
		"certificateStateInvalid_label": "Failed to order certificate",
		"certificateStateProcessing_label": "Processing",
		"certificateTypeAutomatic_label": "Automatic (Let's Encrypt)",
		"certificateTypeManual_label": "Manual",
		"changeAdminPassword_msg": "Sorry, you are not allowed to change other admin's passwords.",
		"changeMailSettings_msg": "You may later change your decision in the email settings.",
		"changePaidPlan_msg": "Would you like to switch your plan now?",
		"changePassword_label": "Change password",
		"changePermissions_msg": "To grant access you have to modify the permissions for this device.",
		"changePlan_action": "Change plan",
		"changeSpellCheckLang_action": "Change spellcheck languageâ€¦",
		"changeTimeFrame_msg": "Upgrade now and adjust your search period!",
		"checkAgain_action": "Check again",
		"checkDnsRecords_action": "Check DNS records",
		"checkingForUpdate_action": "Checking for Updateâ€¦",
		"checkSpelling_action": "Check spelling",
		"child_label": "Child",
		"chooseDirectory_action": "Choose directory",
		"chooseLanguage_action": "Choose language",
		"choosePhotos_action": "Photos",
		"chooseYearlyForOffer_msg": "Book yearly & you'll get the second year for free!",
		"choose_label": "Chooseâ€¯...",
		"clearFolder_action": "Clear folder",
		"clickToUpdate_msg": "Click here to update.",
		"clientSuspensionWait_label": "The server is processing your request, please be patient.",
		"client_label": "Client",
		"closedSessions_label": "Closed sessions",
		"closeSession_action": "Close session",
		"closeTemplate_action": "Close the templates popup",
		"closeWindowConfirmation_msg": "Do you really want to close this window without saving your changes?",
		"close_alt": "Close",
		"color_label": "Color",
		"comboBoxSelectionNone_msg": "None",
		"comment_label": "Comment",
		"company_label": "Company",
		"concealPassword_action": "Conceal the password",
		"confidentialStatus_msg": "This message will be sent end-to-end encrypted.",
		"confidential_action": "Confidential",
		"confidential_label": "Confidential",
		"configureCustomDomainAfterSignup_msg": "Custom domains with unlimited email addresses can be configured once the account is created:\n",
		"confirmCountry_msg": "To calculate the value added tax we need you to confirm your country: {1}.",
		"confirmCustomDomainDeletion_msg": "Are you sure you want to remove the custom email domain \"{domain}\"?",
		"confirmDeactivateCustomColors_msg": "Would you really like to deactivate your custom colors?",
		"confirmDeactivateCustomLogo_msg": "Would you really like to deactivate your custom logo?",
		"confirmDeactivateWhitelabelDomain_msg": "Would you really like to deactivate the Tuta login for your domain and delete the SSL certificate, custom logo and custom colors?",
		"confirmDeleteContactForm_msg": "Would you really like to delete this contact form?",
		"confirmDeleteContactList_msg": "Are you sure you want to delete this contact list? All its entries will be lost and can't be restored.",
		"confirmDeleteCustomFolder_msg": "Do you really want to move the folder '{1}' with all of its content (e.g. emails, subfolders) to trash?\n\nFolders containing no emails will be permanently deleted.",
		"confirmDeleteFinallyCustomFolder_msg": "Do you really want to permanently delete the folder '{1}' and all of its emails? Depending on the number of emails this operation may take a long time and will be executed in the background.",
		"confirmDeleteFinallySystemFolder_msg": "Do you really want to permanently delete all emails from the system folder '{1}'? Depending on the number of emails this operation may take a long time and will be executed in the background.",
		"confirmDeleteLabel_msg": "Are you sure that you want to delete the label \"{1}\"?",
		"confirmDeleteSecondFactor_msg": "Would you really like to delete this second factor?",
		"confirmDeleteTemplateGroup_msg": "Are you sure you want to delete this template list? All included templates will be lost and can't be restored.",
		"confirmFreeAccount_label": "Free account confirmation",
		"confirmLeaveSharedGroup_msg": "Are you sure you want to stop using \"{groupName}\"? The owner of the contact list would then have to re-invite you, if necessary.",
		"confirmNoOtherFreeAccount_msg": "I do not own any other Free account.",
		"confirmPrivateUse_msg": "I will not use this account for business.",
		"confirmSpamCustomFolder_msg": "Do you really want to move the folder '{1}' with all of its content (e.g. emails, subfolders) to spam?\n\nAll contained emails will be reported as spam.\n\nFolders containing no emails will be permanently deleted.",
		"connectionLostLong_msg": "The connection to the server was lost. Please try again.",
		"contactAdmin_msg": "Please contact your administrator.",
		"contactFormEnterPasswordInfo_msg": "Please enter a password, so you can later log in and read your personal answer.",
		"contactFormLegacy_msg": "A contact form is activated. This feature is no longer supported. Please delete all contact forms before switching plans.",
		"contactFormMailAddressInfo_msg": "As soon as we have answered your request you will get a notification email. This is optional.",
		"contactFormPasswordNotSecure_msg": "The password is not secure enough. Send the request anyway?",
		"contactFormPlaceholder_label": "Your messageâ€¯...",
		"contactFormSubmitConfirm_action": "I have written down the email address and my password!",
		"contactFormSubmitConfirm_msg": "Your request has been successfully submitted. Please note down the following email address and your password to read the answer to your request.",
		"contactFormSubmitError_msg": "Sorry, your request could not be completed. Please try again later.",
		"contactForms_label": "Contact forms",
		"contactForm_label": "Contact form",
		"contactListExisting_msg": "A contact list still exists. Please remove the contact list.",
		"contactListInvitations_label": "Contact list invitations",
		"contactListName_label": "Contact list name",
		"contactLists_label": "Contact lists",
		"contactNotFound_msg": "Contact not found",
		"contactsManagement_label": "Contacts Management",
		"contactsSynchronizationWarning_msg": "Enabling contact synchronization will share your Tuta contacts to other applications that you allow to access your phonebook. Your Tuta contacts will synchronize automatically.",
		"contactsSynchronization_label": "Contacts Synchronization",
		"contactSupport_action": "Contact support",
		"contactsUsageDescription_msg": "1. Find recipient email address in contacts.\\n2. Optionally synchronize Tuta contacts to your device.",
		"contacts_label": "Contacts",
		"contactView_action": "Switch to the contact view",
		"contentBlocked_msg": "Known sender?",
		"content_label": "Content",
		"continueSearchMailbox_msg": "To execute this search we have to download more emails from the server which may take some time.",
		"contractorInfo_msg": "Please fill in the contractor's name (company) and address.",
		"contractor_label": "Contractor",
		"conversationViewPref_label": "Conversation thread",
		"copyLinkError_msg": "Failed to copy link",
		"copyLink_action": "Copy link address",
		"copyToClipboard_action": "Copy to clipboard",
		"copy_action": "Copy",
		"correctDNSValue_label": "OK",
		"correctValues_msg": "Please correct the values with an invalid format.",
		"corruptedValue_msg": "The value cannot be displayed.",
		"corrupted_msg": "This element cannot be displayed correctly.\n\nIf possible, please ask the sender to re-send this message.",
		"couldNotAttachFile_msg": "The file could not be loaded.",
		"couldNotAuthU2f_msg": "Could not authenticate with security key.",
		"couldNotOpenLink_msg": "Unable to find application to open link:\n{link}",
		"couldNotUnlockCredentials_msg": "Could not unlock credentials: {reason}",
		"createAccountAccessDeactivated_msg": "Registration is temporarily blocked for your IP address to avoid abuse. Please try again later or use a different internet connection.",
		"createAccountInvalidCaptcha_msg": "Unfortunately, the answer is wrong. Please try again.",
		"createAccountRunning_msg": "Preparing accountâ€¯...",
		"createActionStatus_msg": "Creating users. Finished {index} of {count} accountsâ€¯...",
		"createContactForm_label": "Create contact form",
		"createContactList_action": "Create contact list",
		"createContactRequest_action": "Write message",
		"createContactsForRecipients_action": "Create contacts for all recipients when sending email",
		"createContacts_label": "Create contacts",
		"createContact_action": "Create contact",
		"createdUsersCount_msg": "{1} user(s) created.",
		"created_label": "Created",
		"createEntry_action": "Create entry",
		"createEvent_label": "Event",
		"createSharedMailbox_label": "Create shared mailbox",
		"createTemplate_action": "Create template",
		"createUserFailed_msg": "Could not create the user. Please contact support.",
		"credentialsEncryptionModeAppPasswordHelp_msg": "Protect your stored credentials with a separate password.",
		"credentialsEncryptionModeAppPassword_label": "App password",
		"credentialsEncryptionModeBiometricsHelp_msg": "The most secure option. Stored credentials are cleared when biometrics are added or removed.",
		"credentialsEncryptionModeBiometrics_label": "Biometrics only",
		"credentialsEncryptionModeDeviceCredentialsHelp_msg": "Use the system pin, password or biometrics.",
		"credentialsEncryptionModeDeviceCredentials_label": "System password or biometrics",
		"credentialsEncryptionModeDeviceLockHelp_msg": "Credentials are unlocked automatically when the device is turned on.",
		"credentialsEncryptionModeDeviceLock_label": "Automatic unlock",
		"credentialsEncryptionModeSelection_msg": "The credentials are stored encrypted on your device. How would you like to unlock them in the future?",
		"credentialsEncryptionMode_label": "Unlock method",
		"credentialsKeyInvalidated_msg": "The system keychain has been invalidated. Deleting stored credentials.",
		"creditCardCardHolderName_label": "Name of the cardholder",
		"creditCardCardHolderName_msg": "Please enter the name of the cardholder.",
		"creditCardCVVFormat_label": "Please enter the 3 or 4 digit security code (CVV).",
		"creditCardCvvHint_msg": "{currentDigits}/{totalDigits} digits",
		"creditCardCVVInvalid_msg": "Security code (CVV) is invalid.",
		"creditCardCvvLabelLong_label": "Card security code ({cvvName})",
		"creditCardCVV_label": "Security code (CVV)",
		"creditCardDeclined_msg": "Unfortunately, your credit card was declined. Please verify that all entered information is correct, get in contact with your bank or select a different payment method.",
		"creditCardExpirationDateFormat_msg": "Format: MM/YYYY",
		"creditCardExpirationDateWithFormat_label": "Expiration date (MM/YY or MM/YYYY)",
		"creditCardExpirationDate_label": "Expiration date",
		"creditCardExpired_msg": "This credit card is expired",
		"creditCardExprationDateInvalid_msg": "Expiration date is invalid.",
		"creditCardHintWithError_msg": "{hint} - {errorText}",
		"creditCardNumberFormat_msg": "Please enter your credit card number.",
		"creditCardNumberInvalid_msg": "Credit card number is invalid.",
		"creditCardNumber_label": "Credit card number",
		"creditCardPaymentErrorVerificationNeeded_msg": "Please update your payment details. This will trigger a verification of the credit card which is required by your bank.",
		"creditCardPendingVerification_msg": "The verification of your credit card has not been completed yet. Please try to verify your card at a later time if this problem persists.",
		"creditCardSpecificCVVInvalid_msg": "{securityCode} is invalid.",
		"creditCardVerificationFailed_msg": "Sorry, your credit card verification failed. You may try again or select a different payment method.",
		"creditCardVerificationLimitReached_msg": "You have reached the credit card verification limit. Please try again in a few hours and make sure that the entered data is valid. Please contact your bank if further verifications fail.",
		"creditCardVerificationNeededPopup_msg": "Your credit card needs to be verified with your bank. A new window will be opened for this purpose.",
		"creditCardVerification_msg": "Your credit card will be verified now...",
		"creditUsageOptions_msg": "Credit can be used to switch plans (go to 'Settings' â‡¨ 'Plan'), or can be held onto until the next subscription period to pay for a renewal. Credit created from gift cards does not expire!",
		"credit_label": "Credit",
		"currentBalance_label": "Current Account Balance",
		"currentlyBooked_label": "Booking overview",
		"currentPlanDiscontinued_msg": "Your current plan is no longer available. Please choose between the plans displayed below.",
		"customColorsInfo_msg": "If you leave a blank field the color from the default light theme is used instead.",
		"customColors_label": "Custom colors",
		"customColor_label": "Custom color",
		"customDomainDeletePreconditionFailed_msg": "Please deactivate all users and email addresses containing the domain: {domainName}.",
		"customDomainDeletePreconditionWhitelabelFailed_msg": "Please deactivate all users and email addresses containing the domain: {domainName} and remove the domain as registration email domain.\n",
		"customDomainErrorDnsLookupFailure_msg": "DNS lookup failed.",
		"customDomainErrorDomainNotAvailable_msg": "Domain is not available.",
		"customDomainErrorDomainNotFound_msg": "We could not find this domain in the DNS. Please check the spelling.",
		"customDomainErrorNameserverNotFound_msg": "We could not find the nameserver for this domain. Please make sure your NS and SOA records in the DNS are valid.",
		"customDomainErrorOtherTxtRecords_msg": "However, we found these other TXT records:",
		"customDomainErrorValidationFailed_msg": "The validation of your domain failed. Please check that the TXT record for validation is correct.",
		"customDomainInvalid_msg": "The custom email domain you have entered is invalid.",
		"customDomainNeutral_msg": "Please enter your custom email domain.",
		"customDomain_label": "Custom email domain",
		"customEmailDomains_label": "Custom email domains",
		"customerUsageDataGloballyDeactivated_label": "Deactivated for all users",
		"customerUsageDataGloballyPossible_label": "Let users decide",
		"customerUsageDataOptOut_label": "Usage data for all users",
		"customLabel_label": "Custom label",
		"customLogoInfo_msg": "Allowed file types: svg, png, jpg. Max. file size: 100â€¯KB. Display height: 38â€¯px, max. display width: 280â€¯px.",
		"customLogo_label": "Custom logo",
		"customMetaTags_label": "Custom meta tags",
		"customName_label": "Your custom name: {customName}",
		"customNotificationEmailsHelp_msg": "Notification emails are sent to recipients of confidential emails whose mailboxes are hosted on other email providers. You can customize this message by adding templates for multiple languages. Once you have added a template the default template will not be used anymore. These templates will be applied to all users of your account.",
		"customNotificationEmails_label": "Custom notification emails",
		"custom_label": "Custom",
		"cut_action": "Cut",
		"dark_blue_label": "Dark Blue",
		"dark_label": "Dark",
		"dark_red_label": "Dark Red",
		"dataExpiredOfflineDb_msg": "Your local data is out of sync with the data on the Tuta servers. You will be logged out and your locally stored data will be cleared and re-downloaded as needed.",
		"dataExpired_msg": "Your loaded data is expired and out of sync with the data on the Tuta servers. Please logout and login again to refresh your data.",
		"dataWillBeStored_msg": "Data will be stored on your device.",
		"dateFrom_label": "From",
		"dates_label": "Dates",
		"dateTo_label": "To",
		"date_label": "Date",
		"days_label": "days",
		"day_label": "Day",
		"deactivateAlias_msg": "The email address '{1}' will be deactivated now. The address can be activated again or re-used for another user.",
		"deactivated_label": "Deactivated",
		"deactivateOwnAccountInfo_msg": "You can not delete admins. Please remove the admin flag first.",
		"deactivatePremiumWithCustomDomainError_msg": "Cannot switch to a Tuta Free account when logged in with a custom domain user.",
		"deactivate_action": "Deactivate",
		"decideLater_action": "Decide later",
		"declineContactListEmailSubject_msg": "Contact list invitation declined",
		"declineTemplateGroupEmailSubject_msg": "Template group invitation declined",
		"decline_action": "Decline",
		"defaultColor_label": "Default color: {1}",
		"defaultDownloadPath_label": "Default download path",
		"defaultEmailSignature_msg": "--\n<br>\nSecured with Tuta Mail:\n<br>\n{1}",
		"defaultExternalDeliveryInfo_msg": "The default setting for sending a new email to an external recipient: confidential (end-to-end encrypted) or not confidential (not end-to-end encrypted).",
		"defaultExternalDelivery_label": "Default delivery",
		"defaultGiftCardMessage_msg": "I hope you enjoy the security & privacy you get with Tuta!",
		"defaultMailHandler_label": "Default email handler",
		"defaultMailHandler_msg": "Register Tuta Desktop as the default email handler, e.g. to open email address links. This operation may require administrator permissions.",
		"defaultSenderMailAddressInfo_msg": "The default sender mail address and name for new emails. You can set the sender name in the mail address table below.",
		"defaultSenderMailAddress_label": "Default sender",
		"defaultShareGiftCardBody_msg": "Hi,\n\nI bought you a gift card for Tuta, use this link to redeem it!\n\n{link}\n\nIf you do not have an account yet, you can use the link to sign up and reclaim your privacy.\n\nHappy Holidays,\n{username}",
		"deleteAccountConfirm_msg": "Do you really want to delete your account? The account can't be restored and the email address can't be registered again.",
		"deleteAccountReasonInfo_msg": "Optional: We would appreciate it if you gave us a reason why you want to delete the account so that we can improve Tuta further.",
		"deleteAccountReason_label": "Why?",
		"deleteAccountWithAppStoreSubscription_msg": "You cannot delete your account while there is an App Store subscription. You will need to cancel it from the App Store first. See {AppStorePayment}",
		"deleteAccountWithTakeoverConfirm_msg": "Do you really want to delete your account? Your email addresses can be taken over by the account {1}.",
		"deleteAlias_msg": "The email alias address '{1}' will be deleted now. You can use the address as email alias address again or use it for a new user.",
		"deleteAllEventRecurrence_action": "Delete all recurring events",
		"deleteCalendarConfirm_msg": "Are you sure that you want to delete the calendar \"{calendar}\" and all events in it?",
		"deleteContacts_action": "Delete the selected contact(s)",
		"deleteContacts_msg": "Are you sure you want to delete the selected contact(s)?",
		"deleteContact_msg": "Are you sure you want to delete this contact?",
		"deleteCredentialOffline_msg": "Offline: Failed to close the session",
		"deleteCredentials_action": "Delete credentials",
		"deletedFolder_label": "Deleted Folder",
		"deleteEmails_action": "Delete the selected emails",
		"deleteEntryConfirm_msg": "Are you sure you want to delete this entry?",
		"deleteEventConfirmation_msg": "Are you sure you want to delete this event?",
		"deleteLanguageConfirmation_msg": "Are you sure you want to delete the entry for \"{language}\"?",
		"deleteSharedCalendarConfirm_msg": "The calendar \"{calendar}\" is shared with other users.",
		"deleteSingleEventRecurrence_action": "Delete only this event",
		"deleteTemplateGroups_msg": "There are still template lists active which will need to be deleted before you can downgrade. This may include shared template lists or template lists belonging to your users.",
		"deleteTemplate_msg": "Are you sure you want to delete this template?",
		"delete_action": "Delete",
		"department_placeholder": "Department",
		"describeProblem_msg": "Please enter your question",
		"description_label": "Description",
		"desktopIntegration_label": "Desktop integration",
		"desktopIntegration_msg": "Do you want to integrate the Tuta client into your Desktop Environment?",
		"desktopSettings_label": "Desktop settings",
		"desktop_label": "Desktop",
		"details_label": "Details",
		"deviceEncryptionSaveCredentialsHelpText_msg": "To activate device encryption (pin/biometric unlock), you need to store your credentials to the device. You can do this the next time you log in.",
		"differentSecurityKeyDomain_msg": "Your security key is not registered for this domain. Please login in another tab at {domain}.\n\nThen login here again and accept the login from the other tab.",
		"disallowExternalContent_action": "Block external content",
		"discord_label": "Discord",
		"display_action": "Display",
		"dnsRecordHostOrName_label": "Host/Name",
		"dnsRecordValueOrPointsTo_label": "Value/Points to",
		"domainSetup_title": "Custom domain setup",
		"domainStillHasContactForms_msg": "{domain} can't be deactivated because there are still active contact forms on the whitelabel domain. Please delete the contact forms before deactivating {domain}.",
		"domain_label": "Domain",
		"done_action": "Done",
		"doNotAskAgain_label": "Don't ask again for this file",
		"dontAskAgain_label": "Don't ask again",
		"downloadCompleted_msg": "Download completed",
		"downloadDesktopClient_label": "Download desktop client",
		"downloadInvoicePdf_action": "PDF (PDF/A)",
		"downloadInvoiceXml_action": "XML (XRechnung)",
		"download_action": "Download",
		"draftNotSavedConnectionLost_msg": "Draft not saved (offline).",
		"draftNotSaved_msg": "Draft not saved.",
		"draftSaved_msg": "Draft saved.",
		"draft_action": "Drafts",
		"draft_label": "Draft",
		"dragAndDrop_action": "Drag selected mails to the file system or other applications.",
		"duplicatedMailAddressInUserList_msg": "The email address is included more than once in your input data.",
		"duplicatesNotification_msg": "{1} duplicate contacts were found and will be deleted.",
		"dynamicLoginCyclingToWork_msg": "Cycling to workâ€¯â€¦",
		"dynamicLoginDecryptingMails_msg": "Decrypting mailsâ€¯â€¦",
		"dynamicLoginOrganizingCalendarEvents_msg": "Organizing calendar eventsâ€¯â€¦",
		"dynamicLoginPreparingRocketLaunch_msg": "Preparing rocket launchâ€¯â€¦",
		"dynamicLoginRestockingTutaFridge_msg": "Restocking Tuta fridgeâ€¯â€¦",
		"dynamicLoginSortingContacts_msg": "Sorting contactsâ€¯â€¦",
		"dynamicLoginSwitchingOnPrivacy_msg": "Turning on privacyâ€¯â€¦",
		"dynamicLoginUpdatingOfflineDatabase_msg": "Updating offline databaseâ€¯â€¦",
		"Edit contact form": "Edit contact form",
		"editContactForm_label": "Edit contact form",
		"editContactList_action": "Edit contact list",
		"editContact_label": "Edit contact",
		"editEntry_label": "Edit entry",
		"editFolder_action": "Edit folder",
		"editInboxRule_action": "Edit inbox rule",
		"editLabel_action": "Edit label",
		"editMail_action": "Edit the selected email",
		"editMessage_label": "Edit message",
		"editTemplate_action": "Edit template",
		"edit_action": "Edit",
		"emailAddressInUse_msg": "The email address is still used by another user. Please deactivate it there first.",
		"emailProcessing_label": "Email processing",
		"emailPushNotification_action": "Add notification email address",
		"emailPushNotification_msg": "A notification email is sent to this address if you receive a new email.",
		"emailRecipient_label": "Email recipient",
		"emailSenderBlacklist_action": "Always spam",
		"emailSenderDiscardlist_action": "Discard",
		"emailSenderExistingRule_msg": "A rule for this email sender already exists.",
		"emailSenderInvalidRule_msg": "The rule for this email sender is not allowed.",
		"emailSenderPlaceholder_label": "Email address or domain name",
		"emailSenderRule_label": "Rule",
		"emailSenderWhitelist_action": "Not spam",
		"emailSender_label": "Email sender",
		"emailSending_label": "Sending emails",
		"emailSignatureTypeCustom_msg": "Custom",
		"emailSignatureTypeDefault_msg": "Default",
		"emailSourceCode_title": "Email Source Code",
		"emails_label": "Emails",
		"email_label": "Email",
		"emlOrMboxInSharingFiles_msg": "One or more email files were detected. Would you like to import or attach them?",
		"emptyShortcut_msg": "Please provide a shortcut for the template",
		"emptyTitle_msg": "The title is missing.",
		"enableAnyway_action": "Enable anyway",
		"enableSearchMailbox_msg": "Enabling the search for your mailbox consumes memory on your device and might consume additional traffic.",
		"endDate_label": "End date",
		"endOfCurrentSubscriptionPeriod": "End of current payment interval",
		"endsWith_label": "ends with",
		"endTime_label": "End time",
		"enforceAliasSetup_msg": "You have to set up an email address or a user for the custom domain before proceeding.",
		"enforcePasswordUpdate_msg": "Force users to update their password after it has been reset by an administrator.",
		"enforcePasswordUpdate_title": "Enforce password update",
		"enterAsCSV_msg": "Please enter your user details as CSV.",
		"enterCustomDomain_title": "Enter your custom domain",
		"enterDetails_msg": "Optional: Enter details here",
		"enterDomainFieldHelp_label": "With this custom email domain you can create email addresses like hello@{domain}.",
		"enterDomainGetReady_msg": "You will need to make changes to your DNS configuration. Please open a new browser window and log in to the administration panel of your domain provider to apply changes when necessary. This setup wizard will show you which DNS records are required for each step.",
		"enterDomainIntroduction_msg": "With Tuta you can use your custom email domain in just a few steps.",
		"enterMissingPassword_msg": "No password detected. Please enter a password.",
		"enterName_msg": "Please enter a name.",
		"enterPaymentDataFirst_msg": "Please first enter your payment data before ordering additional packages.",
		"enterPresharedPassword_msg": "Please enter the password which you have agreed upon with the sender.",
		"envelopeSenderInfo_msg": "The technical sender is different than the email address in 'From'. As 'From' can be faked, the technical sender is also displayed to understand who actually sent this email.",
		"errorAtLine_msg": "Error at line {index}: {error}",
		"errorDuringFileOpen_msg": "Failed to open attachment.",
		"errorDuringUpdate_msg": "Something went wrong during the update process, we'll try again later.",
		"errorReport_label": "Oh no!",
		"eventCancelled_msg": "Cancelled: {event}",
		"eventInviteMail_msg": "Invitation: {event}",
		"eventNoLongerExists_msg": "The edited event no longer exists and could not be updated.",
		"eventNotificationUpdated_msg": "The event was updated in your calendar.",
		"eventUpdated_msg": "Updated: {event}",
		"everyone_label": "Everyone",
		"executableOpen_label": "Executable Attachment",
		"executableOpen_msg": "This file looks like a program. Are you sure you want to execute it now?",
		"existingAccount_label": "Use existing account",
		"existingMailAddress_msg": "The following email addresses could not be invited because they have already received an invitation:",
		"experienceSamplingAnswer_label": "Please select an answer",
		"experienceSamplingHeader_label": "Questionnaire",
		"experienceSamplingSelectAnswer_msg": "Please select an answer for all questions.",
		"experienceSamplingThankYou_msg": "Thank you for your participation!",
		"expiredLink_msg": "Sorry, this link is not valid anymore. You should have received a new notification email with the currently valid link. Previous links are deactivated for security reasons.",
		"exportErrorServiceUnavailable_label": "Exporting is temporarily unavailable; please try again later.",
		"exportErrorTooManyRequests_label": "Too many exports were requested recently",
		"exportFinished_label": "Export completed",
		"exportingEmails_label": "Exporting emails: {count}",
		"exportMailbox_label": "Export Mailbox",
		"exportRunningElsewhere_label": "Export may be running in another window.",
		"exportUsers_action": "Export users",
		"exportVCard_action": "Export vCard",
		"export_action": "Export",
		"externalCalendarInfo_msg": "To subscribe to an external or public calendar, simply enter its URL and we will ensure that it gets synchronized. This calendar is read-only, but you can trigger a synchronization operation at any time.",
		"externalContactSyncDetectedWarning_msg": "Contact synchronization is enabled for iCloud or another contact app on your device. Please disable any other apps that synchronize contacts to avoid issues with syncing Tuta contacts.",
		"externalFormattingInfo_msg": "Configure if all messages should be sent including formattings (HTML) or converted to plain text.",
		"externalFormatting_label": "Formatting",
		"externalNotificationMailBody1_msg": "Hello,",
		"externalNotificationMailBody2_msg": "You have just received a confidential email via Tuta ({1}). Tuta encrypts emails automatically end-to-end, including all attachments. You can reach your encrypted mailbox and also reply with an encrypted email with the following link:",
		"externalNotificationMailBody3_msg": "Show encrypted email",
		"externalNotificationMailBody4_msg": "Or paste this link into your browser:",
		"externalNotificationMailBody5_msg": "This email was automatically generated for sending the link. The link stays valid until you receive a new confidential email from me.",
		"externalNotificationMailBody6_msg": "Kind regards,",
		"externalNotificationMailSubject_msg": "Confidential email from {1}",
		"facebook_label": "Facebook",
		"failedDebitAttempt_msg": "If our debit attempt failed, we will try again in a few days. Please make sure that your account is covered.",
		"failedToExport_label": "{0} failures",
		"failedToExport_msg": "Some emails failed to export. You can check the list below.",
		"failedToExport_title": "Export finished with errors",
		"faqEntry_label": "FAQ entry",
		"fax_label": "Fax",
		"featureTutanotaOnly_msg": "You may only use this feature with other Tuta users.",
		"feedbackOnErrorInfo_msg": "Please tell us which steps have led to this error in English or German so we can fix it. Your message, error details and your browser identifier are sent encrypted to the Tuta team. Thank you!",
		"fetchingExternalCalendar_error": "Something went wrong. Error while fetching external calendar. Please check that the calendar is publicly accessible and try again later.",
		"field_label": "Field",
		"fileAccessDeniedMobile_msg": "Access to external storage is denied. You can enable it in the settings of your mobile device.",
		"filterAllMails_label": "All emails",
		"filterRead_label": "Read",
		"filterUnread_label": "Unread",
		"filterWithAttachments_label": "With attachments",
		"filter_label": "Filter",
		"finallyDeleteEmails_msg": "Are you sure you want to permanently delete the selected email(s)?",
		"finallyDeleteSelectedEmails_msg": "You have selected emails from the trash folder, they will be permanently deleted.",
		"finish_action": "Finish",
		"firstMergeContact_label": "Contact 1",
		"firstName_placeholder": "First name",
		"folderDepth_label": "{folderName}, {depth} layers deep.",
		"folderNameInvalidExisting_msg": "A folder with this name already exists.",
		"folderNameNeutral_msg": "Please enter folder name.",
		"folderName_label": "Name",
		"folderTitle_label": "Folders",
		"footer_label": "Footer",
		"formatTextAlignment_msg": "Alignment",
		"formatTextBold_msg": "Make selected text bold.",
		"formatTextCenter_msg": "Center",
		"formatTextFontSize_msg": "Font size",
		"formatTextItalic_msg": "Make selected text italic.",
		"formatTextJustify_msg": "Justified",
		"formatTextLeft_msg": "Left",
		"formatTextMonospace_msg": "Monospace",
		"formatTextOl_msg": "Ordered list",
		"formatTextRight_msg": "Right",
		"formatTextUl_msg": "Unordered list",
		"formatTextUnderline_msg": "Make selected text underlined.",
		"forward_action": "Forward",
		"freeAccountInfo_msg": "Only one Free account is allowed per person. Free accounts may only be used for private communication. If you want to use Tuta for your business or as a freelancer, please order a paid plan. Please also note that Free accounts get deleted if you do not log in for six months.",
		"friend_label": "Friend",
		"from_label": "From",
		"functionNotSupported_msg": "This function is not supported by your device or browser.",
		"futureDate": "Future date",
		"general_label": "General",
		"generatePassphrase_action": "Optional: Generate password",
		"germanLanguageFile_label": "German language file",
		"getLogs_action": "Get logs",
		"giftCardCopied_msg": "Gift card link copied to clipboard!",
		"giftCardCreditNotify_msg": "Your account will receive {credit} credit.",
		"giftCardLoginError_msg": "Your new account was created but we had trouble logging you in and your gift card was not redeemed. Please try logging in later with the same gift card link to redeem the card.",
		"giftCardOptionTextC_msg": "For {fullCredit} credit or prepayment for a Revolutionary plan.",
		"giftCardOptionTextD_msg": "For {fullCredit} credit or a Revolutionary plan.",
		"giftCardOptionTextE_msg": "For {fullCredit} credit or a Revolutionary plan with {remainingCredit} credit.",
		"giftCardSection_label": "Purchase and manage gift cards",
		"giftCards_label": "Gift cards",
		"giftCardTerms_label": "Gift card terms and conditions",
		"giftCardUpdateError_msg": "Unable to update gift card.",
		"giftCardUpgradeNotifyCredit_msg": "The cost of the first year ({price}) will be paid for with your gift card and the remaining value ({amount}) will be credited to your account.",
		"giftCardUpgradeNotifyDebit_msg": "The cost of the first year ({price}) will be partially paid for with your gift card. Please go to 'Settings' â‡¨ 'Payment' to pay the remaining value ({amount}).",
		"giftCardUpgradeNotifyRevolutionary_msg": "You will be automatically upgraded to a Revolutionary account with a yearly subscription.",
		"giftCard_label": "Gift card",
		"globalAdmin_label": "Global admin",
		"globalSettings_label": "Global settings",
		"goPremium_msg": "As a paid user you can adjust your search filters in the menu to the left.",
		"grantContactPermissionAction": "Grant permission to access contacts",
		"granted_msg": "Granted",
		"grant_battery_permission_action": "Turn off battery optimization",
		"grant_notification_permission_action": "Grant Notification Permission",
		"gross_label": "incl. taxes",
		"groupCapabilityInvite_label": "Write and manage sharing",
		"groupCapabilityRead_label": "Read only",
		"groupCapabilityWrite_label": "Read and write",
		"groupMembers_label": "Group members",
		"groupNotEmpty_msg": "Non-empty groups can not be deactivated.",
		"groups_label": "Groups",
		"groupType_label": "Group type",
		"group_label": "Group",
		"guests_label": "Guests",
		"guest_label": "Guest",
		"handleSubscriptionOnApp_msg": "Your subscription must be managed on {1}. Do you want to open {1}?",
		"header_label": "Header",
		"helpPage_label": "Help page",
		"help_label": "Help",
		"hexCode_label": "Hex code",
		"hideText_action": "Hide text",
		"hideWindows_action": "Hide windows",
		"hide_action": "Hide",
		"howCanWeHelp_title": "How can we help you?",
		"htmlSourceCode_label": "HTML source code",
		"html_action": "HTML",
		"hue_label": "Hue",
		"iCalNotSync_msg": "Not synced.",
		"iCalSync_error": "Error during synchronization, one or more calendars were invalid.",
		"icsInSharingFiles_msg": "One or more calendar files were detected. Would you like to import or attach them?",
		"importantLabel_label": "Important",
		"importCalendar_label": "Importing calendar",
		"importComplete_msg": "All selected emails were imported to your mailbox.",
		"importComplete_title": "Import complete",
		"importContactRemoveDuplicatesConfirm_msg": "Found {count} duplicate contact(s) on your device while syncing. Do you want to delete them from your device? Please note that this cannot be undone.",
		"importContactRemoveImportedContactsConfirm_msg": "Do you want to delete the imported contacts from your device? Please note that this cannot be undone.",
		"importContactsError_msg": "{amount} of {total} contacts could not be imported.",
		"importContacts_label": "Import contacts",
		"importContacts_msg": "Import contacts from your phone book to make them available across your devices.",
		"importedMailsWillBeDeleted_label": "All imported emails will be deleted",
		"importEndNotAfterStartInEvent_msg": "{amount} of {total} events don't have their start date before their end date and will not be imported.",
		"importEventExistingUid_msg": "{amount} of {total} events already exist and are not overwritten. Will continue with the remaining events...",
		"importEventsError_msg": "{amount} of {total} events could not be imported.",
		"importEvents_label": "Import events",
		"importFromContactBook_label": "Import contacts from your device",
		"importIncomplete_msg": "Import finished, but some mails failed to import.",
		"importIncomplete_title": "Import incomplete",
		"importInvalidDatesInEvent_msg": "{amount} of {total} events contain invalid dates and will not be imported.",
		"importPre1970StartInEvent_msg": "{amount} of {total} events start or end before 1970 and will not be imported.",
		"importReadFileError_msg": "Sorry, the file {filename} is not readable.",
		"importUsers_action": "Import users",
		"importVCardError_msg": "Can not read vCard file.",
		"importVCardSuccess_msg": "{1} contact(s) successfully imported!",
		"importVCard_action": "Import vCard",
		"import_action": "Import",
		"imprintUrl_label": "Link to legal notice",
		"imprint_label": "Legal notice",
		"inactiveAccount_msg": "Sorry, your account has been deleted because you have not logged in within the last six months.",
		"inboxRuleAlreadyExists_msg": "This rule already exists.",
		"inboxRuleBCCRecipientEquals_action": "Bcc recipient",
		"inboxRuleCCRecipientEquals_action": "Cc recipient",
		"inboxRuleEnterValue_msg": "Please enter a value.",
		"inboxRuleField_label": "Field",
		"inboxRuleInvalidEmailAddress_msg": "Email address or domain is not valid.",
		"inboxRuleMailHeaderContains_action": "Header contains",
		"inboxRuleSenderEquals_action": "From/Sender",
		"inboxRulesSettings_action": "Inbox rules",
		"inboxRuleSubjectContains_action": "Subject contains",
		"inboxRuleTargetFolder_label": "Target folder",
		"inboxRuleToRecipientEquals_action": "To recipient",
		"inboxRuleValue_label": "Value",
		"includeRepeatingEvents_action": "Show event series",
		"includesFuture_msg": "This search range includes dates that are in the future.",
		"indexedMails_label": "Searchable emails: {count}",
		"indexingFailedConnection_error": "Creating the search index failed because the connection was lost.",
		"indexing_error": "Creating the search index was aborted due to an error",
		"insertImage_action": "Insert image",
		"insertTemplate_action": "Insert selected template",
		"insideOnly_label": "Inside only",
		"insideOutside_label": "Inside/outside",
		"installNow_action": "Install now.",
		"insufficientBalanceError_msg": "Could not complete transaction due to insufficient account balance. Please provide another payment method.",
		"insufficientStorageAdmin_msg": "Your storage limit has been exceeded. You can no longer receive or send emails. Please free some storage by deleting content from your mailbox or upgrade to a larger plan.",
		"insufficientStorageUser_msg": "Your storage limit has been exceeded. You can no longer receive or send emails.",
		"insufficientStorageWarning_msg": "Your mailbox has nearly reached the storage limit. Please free some storage by deleting content from your mailbox or upgrade to a larger plan.",
		"intervalFrequency_label": "Interval frequency",
		"interval_title": "Interval",
		"invalidBirthday_msg": "Invalid birthday. Please update the value of the birthday field.",
		"invalidCalendarFile_msg": "One or more files aren't valid calendar files.",
		"invalidCnameRecord_msg": "The CNAME record for this domain is not set correctly.",
		"invalidDateFormat_msg": "Invalid format. Valid: {1}. Year is optional.",
		"invalidDate_msg": "Invalid Date",
		"invalidGiftCardPaymentMethod_msg": "Your payment method does not support the purchasing of gift cards.",
		"invalidGiftCard_msg": "This gift card cannot be used",
		"invalidICal_error": "Invalid iCal.",
		"invalidInputFormat_msg": "Invalid format.",
		"invalidLink_msg": "Sorry, this link is not valid.",
		"invalidMailAddress_msg": "The following email addresses could not be invited because they are invalid:",
		"invalidPassword_msg": "Invalid password. Please check it again.",
		"invalidPastedRecipients_msg": "The following email addresses are invalid:",
		"invalidRecipients_msg": "Please correct or remove the invalid email addresses:",
		"invalidRegexSyntax_msg": "Invalid regex syntax",
		"invalidRegistrationCode_msg": "This registration code is invalid.",
		"invalidTimePeriod_msg": "The entered time period is invalid.",
		"invalidURLProtocol_msg": "Invalid protocol. Please provide an URL that uses https.",
		"invalidURL_msg": "Invalid URL format. Please check and modify the URL.",
		"invalidVatIdNumber_msg": "The value added tax identification number (VAT-ID) is invalid.",
		"invalidVatIdValidationFailed_msg": "Failed to validate the value added tax identification number. Please try again later.",
		"invitationMailBody_msg": "Hi!<br><br>I have switched to Tuta, the world's most secure email service, easy to use, open-source and private by design. It's ad-free and powered by 100% renewable electricity.<br><br>Now, I would like to invite you to Tuta as well! If you sign up with my personal invite link, you will get an additional free month on any yearly subscription:<br>{registrationLink}<br><br><br>Best regards,<br>{username}<br><br>PS: You can also get a Free membership and upgrade later.",
		"invitation_label": "Invitation",
		"invitedToEvent_msg": "You have been invited to take part in this event. Do you want to attend?",
		"invited_label": "Invited",
		"invite_alt": "Invite",
		"invoiceAddressInfoBusiness_msg": "Please enter your name/company and invoice address (max. 5 rows).",
		"invoiceAddressInfoPrivate_msg": "This information is optional (max. 5 rows).",
		"invoiceAddress_label": "Invoice name and address",
		"invoiceCountryInfoBusiness_msg": "Please choose your country of residence.",
		"invoiceCountryInfoConsumer_msg": "This is needed to calculate value-added tax (VAT).",
		"invoiceCountry_label": "Country",
		"invoiceData_msg": "Invoice data",
		"invoiceFailedBrowser_msg": "Can not generate invoice PDF due to outdated browser. Please update your browser or export the invoice from another device.",
		"invoiceFailedIOS_msg": "Can not generate invoice PDF due to outdated iOS version. Exporting invoices is supported from iOS 16.4 on. Please update your iOS or export the invoice from another device.",
		"invoiceFailedWebview_msg": "Can not generate invoice PDF due to outdated system WebView. More information:",
		"invoiceNotPaidSwitch_msg": "Sorry, you are currently not allowed to switch to a different plan because at least one of your invoices is not paid.",
		"invoiceNotPaidUser_msg": "Sorry, you are currently not allowed to send emails.",
		"invoiceNotPaid_msg": "Sorry, you are currently not allowed to send or receive emails because at least one of your invoices is not paid. Please update your payment data in 'Settings' â‡¨ 'Payment data' and trigger the payment there afterwards.",
		"invoicePayConfirm_msg": "We will now debit the following amount:",
		"invoicePaymentMethodInfo_msg": "Please choose a payment method. More options will be added in the future.",
		"invoicePay_action": "Pay",
		"invoiceSettingDescription_msg": "List of all your existing invoices and payments.",
		"invoiceVatIdNoInfoBusiness_msg": "Optional. If not provided, VAT is added to your invoices. Must start with the two digit country prefix.",
		"invoiceVatIdNo_label": "VAT identification number",
		"invoice_label": "Invoice",
		"IpAddress_label": "IP address",
		"keyboardShortcuts_title": "Keyboard shortcuts",
		"keywords_label": "Keywords",
		"knowledgebase_label": "Knowledgebase",
		"knownCredentials_label": "Saved accounts",
		"labelLimitExceeded_msg": "Only 3 labels are included in the free plan. Please delete labels to downgrade.",
		"labels_label": "Labels",
		"languageAfrikaans_label": "Afrikaans",
		"languageAlbanianref_label": "Albanian reformed",
		"languageAlbanian_label": "Albanian",
		"languageArabic_label": "Arabic",
		"languageArmenian_label": "Armenian",
		"languageBelarusian_label": "Belarusian",
		"languageBosnian_label": "Bosnian",
		"languageBulgarian_label": "Bulgarian",
		"languageCatalan_label": "Catalan",
		"languageChineseSimplified_label": "Chinese, Simplified",
		"languageChineseTraditional_label": "Chinese, Traditional",
		"languageCroatian_label": "Croatian",
		"languageCzech_label": "Czech",
		"languageDanish_label": "Danish",
		"languageDutch_label": "Dutch",
		"languageEnglishUk_label": "English (UK)",
		"languageEnglish_label": "English",
		"languageEstonian_label": "Estonian",
		"languageFaroese_label": "Faroese",
		"languageFilipino_label": "Filipino",
		"languageFinnish_label": "Finnish",
		"languageFrench_label": "French",
		"languageGalician_label": "Galician",
		"languageGeorgian_label": "Georgian",
		"languageGermanSie_label": "German (formal)",
		"languageGerman_label": "German",
		"languageGreek_label": "Greek",
		"languageHebrew_label": "Hebrew",
		"languageHindi_label": "Hindi",
		"languageHungarian_label": "Hungarian",
		"languageIndonesian_label": "Indonesian",
		"languageItalian_label": "Italian",
		"languageJapanese_label": "Japanese",
		"languageKorean_label": "Korean",
		"languageLatvian_label": "Latvian",
		"languageLithuanian_label": "Lithuanian",
		"languageMalay_label": "Malay",
		"languageNorwegianBokmal_label": "Norwegian BokmÃ¥l",
		"languageNorwegian_label": "Norwegian",
		"languagePersian_label": "Persian",
		"languagePolish_label": "Polish",
		"languagePortugeseBrazil_label": "Portuguese, Brazil",
		"languagePortugesePortugal_label": "Portuguese, Portugal",
		"languagePortugese_label": "Portuguese",
		"languageRomanian_label": "Romanian",
		"languageRussian_label": "Russian",
		"languageSerbian_label": "Serbian",
		"languageSerboCroatian_label": "Serbo-Croatian",
		"languageSinhalese_label": "Sinhalese",
		"languageSlovak_label": "Slovak",
		"languageSlovenian_label": "Slovenian",
		"languageSpanish_label": "Spanish",
		"languageSwahili_label": "Swahili",
		"languageSwedish_label": "Swedish",
		"languages_label": "Languages",
		"languageTajik_label": "Tajik",
		"languageTamil_label": "Tamil",
		"languageTurkish_label": "Turkish",
		"languageUkrainian_label": "Ukrainian",
		"languageUrdu_label": "Urdu",
		"languageVietnamese_label": "Vietnamese",
		"languageWelsh_label": "Welsh",
		"language_label": "Language",
		"largeSignature_msg": "The signature you defined is over {1}kB in size. It will be appended to every email by default. Do you want to use it anyway?",
		"lastAccessWithTime_label": "Last access: {time}",
		"lastAccess_label": "Last access",
		"lastExportTime_Label": "Last export: {date}",
		"lastName_placeholder": "Last name",
		"lastSync_label": "Last synchronization: {date}",
		"laterInvoicingInfo_msg": "Info: Additionally ordered features will not be invoiced directly, but at the beginning of your next subscription month.",
		"leaveGroup_action": "Leave group",
		"light_blue_label": "Light Blue",
		"light_label": "Light",
		"light_red_label": "Light Red",
		"linkCopied_msg": "Copied link to clipboard",
		"linkedin_label": "LinkedIn",
		"linkTemplate_label": "Link template",
		"loadAll_action": "Load All",
		"loadingDNSRecords_msg": "Loading DNS records...",
		"loadingTemplates_label": "Loading templates...",
		"loading_msg": "Loadingâ€¯...",
		"loadMore_action": "Load more",
		"localDataSection_label": "Local data",
		"location_label": "Location",
		"lockdownModeNotSupported1_msg": "Your device has Lockdown Mode enabled which will prevent future versions of Tuta from running.",
		"lockdownModeNotSupported2_msg": "Please exclude Tuta or disable Lockdown Mode.",
		"loggingOut_msg": "Logging outâ€¯...",
		"loginAbuseDetected_msg": "Your account can not be used any more because the Tuta terms and conditions were violated, e.g. by sending spam emails.",
		"loginCredentials_label": "Login credentials",
		"loginFailedOften_msg": "Too many failed login attempts. Please try again in an hour.",
		"loginFailed_msg": "Invalid login credentials. Please try again.",
		"loginNameInfoAdmin_msg": "Optional: the user's name.",
		"loginOtherAccount_action": "Different account",
		"login_action": "Log in",
		"login_label": "Login",
		"login_msg": "Logging inâ€¯â€¦",
		"logout_label": "Logout",
		"longSearchRange_msg": "This time range is very long. Search might take a while to generate a result.",
		"mailAddressAliases_label": "Email addresses",
		"mailAddressAvailable_msg": "Email address is available.",
		"mailAddressBusy_msg": "Verifying email addressâ€¯...",
		"mailAddressDelay_msg": "Too many requests, please try again later.",
		"mailAddresses_label": "Email addresses",
		"mailAddressInfoLegacy_msg": "Disabled email addresses can be reassigned to another user or mailbox within your account.",
		"mailAddressInfo_msg": "Custom domain addresses do not count towards the limit. Disabled email addresses can be reassigned to another user or mailbox within your account.",
		"mailAddressInvalid_msg": "Mail address is not valid.",
		"mailAddressNANudge_msg": "Email address is not available. Try another domain from the dropdown.",
		"mailAddressNA_msg": "Email address is not available.",
		"mailAddressNeutral_msg": "Enter preferred email address",
		"mailAddress_label": "Email address",
		"mailAuthFailed_msg": "Be careful when trusting this message! The verification of the sender or contents has failed, so this message might be forged!",
		"mailAuthMissingWithTechnicalSender_msg": "We could not prove that the content or sender of this message is valid. The technical sender is: {sender}.",
		"mailAuthMissing_label": "We could not prove that the content or sender of this message is valid.",
		"mailBodyTooLarge_msg": "Your email couldn't be sent to the server, because the body text exceeds the maximum size limit of 1MB.",
		"mailBody_label": "Email body",
		"mailboxToExport_label": "Mailbox to Export",
		"mailbox_label": "Mailbox",
		"mailExportHistory_label": "Export history",
		"mailExportInfoText_label": "You can export EML files.",
		"mailExportModeHelp_msg": "Email file format to use when exporting or drag & dropping",
		"mailExportMode_label": "Email export file format",
		"mailExportOnlyOnDesktop_label": "Email export is currently only available in our desktop client.",
		"mailExportProgress_msg": "Preparing {current} of {total} emails for export...",
		"mailExportSettings_label": "Email export",
		"mailExport_label": "E-Mail export",
		"mailFolder_label": "Email folder",
		"mailHeaders_title": "Email headers",
		"mailImportDownloadDesktopClient_label": "Download desktop client",
		"mailImportErrorServiceUnavailable_msg": "Importing is temporarily unavailable; please try again later.",
		"mailImportHistoryTableHeading_label": "Completed imports",
		"mailImportHistoryTableRowFolderDeleted_label": "folder deleted",
		"mailImportHistoryTableRowSubtitle_label": "Date: {date}, Imported: {successfulMails}, Failed: {failedMails}",
		"mailImportHistoryTableRowTitle_label": "{status}, {folder}",
		"mailImportHistory_label": "Import history",
		"mailImportInfoText_label": "You can import EML and MBOX files.",
		"mailImportNoImportOnWeb_label": "Email import is currently only available in our desktop client.",
		"mailImportSelection_label": "Import or attach?",
		"mailImportSettings_label": "Email import",
		"mailImportStateImportedPercentage": "{importedPercentage} %",
		"mailImportStateProcessedMailsTotalMails_label": "{processedMails} / {totalMails}",
		"mailImportStatusCanceled_label": "Canceled",
		"mailImportStatusCancelling_label": "Cancelling ...",
		"mailImportStatusError_label": "An error occurred",
		"mailImportStatusFinished_label": "Finished",
		"mailImportStatusIdle_label": "Idle",
		"mailImportStatusPaused_label": "Paused",
		"mailImportStatusPausing_label": "Pausing ...",
		"mailImportStatusResuming_label": "Resuming ...",
		"mailImportStatusRunning_label": "Importing emails ...",
		"mailImportStatusStarting_label": "Starting ...",
		"mailImportTargetFolder_label": "Import into folder",
		"mailMoved_msg": "This email has been moved to another folder.",
		"mailName_label": "Sender name",
		"mailPartsNotLoaded_msg": "Some parts of the email failed to load due to a lost connection.",
		"mailServer_label": "Mail server",
		"mailsExported_label": "Emails exported: {numbers}",
		"mailViewerRecipients_label": "to:",
		"mailView_action": "Switch to the email view",
		"makeAdminPendingUserGroupKeyRotationError_msg": "The user currently cannot become admin. Please ask the user to logout with all their devices and then login again. Afterwards try again.",
		"makeLink_action": "Create hyperlink",
		"manager_label": "Manager",
		"manyRecipients_msg": "This email has a lot of recipients who will be visible to each other. Send anyway?",
		"markAsNotPhishing_action": "Mark as not phishing",
		"markRead_action": "Mark read",
		"markUnread_action": "Mark unread",
		"matchCase_alt": "Match case",
		"matchingKeywords_label": "Matching keywords:",
		"maximumLabelsPerMailReached_msg": "Maximum allowed labels per email reached.",
		"maybeAttending_label": "Maybe attending",
		"maybe_label": "Maybe",
		"menu_label": "Menu",
		"mergeAllSelectedContacts_msg": "Are you sure you want to merge the selected contacts?",
		"mergeContacts_action": "Merge contacts",
		"merge_action": "Merge",
		"message_label": "Message",
		"messenger_handles_label": "Instant Messengers",
		"microphoneUsageDescription_msg": "Used when recording a video as attachment.",
		"middleName_placeholder": "Middle Name",
		"mobile_label": "Mobile",
		"modified_label": "Modified",
		"months_label": "Months",
		"month_label": "Month",
		"moreAliasesRequired_msg": "To add more email alias addresses, please switch to one of the following plans.",
		"moreCustomDomainsRequired_msg": "To add more custom domains, please switch to one of the following plans.",
		"moreInformation_action": "More information",
		"moreInfo_msg": "More Info:",
		"moreResultsFound_msg": "{1} more results found.",
		"more_label": "More",
		"moveDown_action": "Move down",
		"moveToBottom_action": "Move to the bottom",
		"moveToInbox_action": "Move to Inbox",
		"moveToTop_action": "Move to the top",
		"moveUp_action": "Move up",
		"move_action": "Move",
		"nameSuffix_placeholder": "Name Suffix",
		"name_label": "Name",
		"nativeShareGiftCard_label": "Share a Tuta gift card",
		"nativeShareGiftCard_msg": "Hey, I got you a gift card for Tuta, the secure encrypted email service! Follow this link to redeem it! {link}",
		"nbrOfContactsSelected_msg": "{1} contacts selected",
		"nbrOfEntriesSelected_msg": "{nbr} entries selected",
		"nbrOfInboxRules_msg": "You have defined {1} inbox rule(s).",
		"nbrOfMailsSelected_msg": "{1} emails selected",
		"nbrOrEmails_label": "{number} emails",
		"needSavedCredentials_msg": "You need to store your credentials during login by checking the \"{storePasswordAction}\" checkbox.",
		"net_label": "net",
		"neverReport_action": "Never report",
		"newCalendarSubscriptionsDialog_title": "New Subscription",
		"newContact_action": "New contact",
		"newEvent_action": "New event",
		"newMails_msg": "New Tuta email received.",
		"newMail_action": "New email",
		"newPaidPlanRequired_msg": "To use this feature, please switch to one of the following plans.",
		"newPassword_label": "Set password",
		"newPlansExplanationPast_msg": "We have introduced new packages to Tuta: {plan1} with 20 GB storage & 15 alias email addresses and {plan2} with 500 GB & 30 email alias addresses! ðŸ’ª",
		"newPlansExplanation_msg": "We are introducing new packages to Tuta: {plan1} with 20 GB storage & 15 alias email addresses and {plan2} with 500 GB & 30 email alias addresses! ðŸ’ª",
		"newPlansNews_title": "Ready for more?!",
		"newPlansOfferEndingNews_title": "Last chance! ðŸ¥³",
		"newPlansOfferEnding_msg": "Switch now, and get two years for the price of one! But you better be quick: This one-time offer expires in a few days.\n",
		"newPlansOfferExplanation_msg": "Switch now, and benefit from our exclusive introduction deal: Book yearly, and you'll get the second year for free. With this one-time offer you can save 50% on all brand-new Tuta plans!!! ðŸ¥³",
		"news_label": "News",
		"nextChargeOn_label": "Next charge on {chargeDate}",
		"nextDay_label": "Next day",
		"nextMonth_label": "Next month",
		"nextSubscriptionPrice_msg": "This price is valid for the next subscription period after the current one.",
		"nextWeek_label": "Next week",
		"next_action": "Next",
		"nickname_placeholder": "Nickname",
		"noAppAvailable_msg": "Thereâ€™s no app installed which can handle this action.",
		"noCalendar_msg": "Please select a calendar for the event.",
		"noContactFound_msg": "No contacts found with this email",
		"noContacts_msg": "There are no contacts in this list.",
		"noContact_msg": "No contacts selected",
		"noEntries_msg": "No entries",
		"noEntryFound_label": "No entries found",
		"noEventSelect_msg": "No event selected",
		"noInputWasMade_msg": "Input field is empty!",
		"noKeysForThisDomain_msg": "You do not have any security keys configured for this domain. Please add one in login settings.",
		"noMails_msg": "No messages.",
		"noMail_msg": "No email selected.",
		"noMoreSimilarContacts_msg": "No more similar contacts found.",
		"nonConfidentialStatus_msg": "This message will not be sent end-to-end encrypted.",
		"nonConfidential_action": "Not confidential",
		"noNews_msg": "No new updates.",
		"noPermission_title": "No Permission",
		"noPreSharedPassword_msg": "Please provide an agreed password for each external recipient.",
		"noReceivingMailbox_label": "Please select a receiving mailbox.",
		"noRecipients_msg": "Please enter the email address of your recipient.",
		"noSelection_msg": "Nothing selected",
		"noSimilarContacts_msg": "No similar contacts found.",
		"noSolution_msg": "Have not found a solution to your problem?",
		"noSubject_msg": "The subject is missing. Send email anyway?",
		"notASubdomain_msg": "This domain is not a subdomain.",
		"notAttending_label": "Not attending",
		"notAvailableInApp_msg": "This function is not available in the mobile app.",
		"notFound404_msg": "Sorry, but the page you are looking for has not been found. Try checking the URL for errors and hit the refresh button of your browser.",
		"notFullyLoggedIn_msg": "User not fully logged in.",
		"noThanks_action": "No thanks",
		"nothingFound_label": "No templates found",
		"notificationContent_label": "Notification content",
		"notificationMailLanguage_label": "Language of notification email",
		"notificationMailTemplateTooLarge_msg": "The notification mail template is too large.",
		"notificationPreferenceNoSenderOrSubject_action": "No sender or subject",
		"notificationPreferenceOnlySender_action": "Only sender",
		"notificationPreferenceSenderAndSubject_action": "Sender and subject",
		"notificationsDisabled_label": "Disabled",
		"notificationSettings_action": "Notifications",
		"notificationSync_msg": "Synchronizing notifications",
		"notificationTargets_label": "Notification targets",
		"noTitle_label": "<No title>",
		"notNow_label": "Not now",
		"notSigned_msg": "Not signed.",
		"noUpdateAvailable_msg": "No Update found.",
		"noValidMembersToAdd_msg": "You are not administrating any users that are not already a member of this group.",
		"no_label": "No",
		"npo50PercentDiscount_msg": "Special Offer: 50% discount!",
		"occurrencesCount_label": "Occurrences count",
		"offlineLoginPremiumOnly_msg": "You are offline. Upgrade to a paid plan to enable offline login.",
		"offline_label": "Offline",
		"ok_action": "Ok",
		"oldPasswordInvalid_msg": "Incorrect old password.",
		"oldPasswordNeutral_msg": "Please enter your old password.",
		"oldPassword_label": "Old password",
		"onboarding_text": "Please take a few moments to customize the app to your liking.",
		"oneEmail_label": "1 email",
		"oneMailSelected_msg": "1 email selected",
		"online_label": "Online",
		"onlyAccountAdminFeature_msg": "Only the account administrator may do that",
		"onlyPrivateAccountFeature_msg": "Gift cards may only be redeemed by personal accounts.",
		"onlyPrivateComputer_msg": "Only choose this option if you are using a private device.",
		"openCamera_action": "Camera",
		"openKnowledgebase_action": "Open the knowledge base window",
		"openMailApp_msg": "This action will open Tuta Mail App, do you want to continue?",
		"openNewWindow_action": "New Window",
		"openTemplatePopup_msg": "Open templates pop-up",
		"open_action": "Open",
		"operationStillActive_msg": "This operation can not be executed at the moment because another operation is still running. Please try again later.",
		"options_action": "Options",
		"orderProcessingAgreementInfo_msg": "According to the EU GDPR business customers are obliged to conclude an order processing agreement with us.",
		"orderProcessingAgreement_label": "Order processing agreement",
		"order_action": "Order",
		"organizer_label": "Organizer",
		"otherCalendars_label": "Other calendars",
		"otherPaymentProviderError_msg": "The payment provider returned an error. Please try again later.",
		"other_label": "Other",
		"outdatedClient_msg": "Please update Tuta. The currently installed version is too old and not supported any longer.",
		"outOfOfficeDefaultSubject_msg": "I am out of the office",
		"outOfOfficeDefault_msg": "Hello,\n<br>\n<br>thanks for your email. I am out of the office and will be back soon. Until then I will have limited access to my email.\n<br>\n<br>Kind Regards",
		"outOfOfficeEveryone_msg": "To everyone",
		"outOfOfficeExternal_msg": "Outside your organization",
		"outOfOfficeInternal_msg": "Inside your organization",
		"outOfOfficeMessageInvalid_msg": "The subject and/or message is invalid.\nEmpty subjects or messages are not allowed.\nMaximum subject size: 128 characters.\nMaximum message size: 20kB.",
		"outOfOfficeNotification_title": "Autoresponder",
		"outOfOfficeRecipientsEveryoneHelp_label": "Notifications are sent to everyone.",
		"outOfOfficeRecipientsInternalExternalHelp_label": "Distinct notifications are sent to recipients inside and outside your organization.",
		"outOfOfficeRecipientsInternalOnlyHelp_label": "Notifications are only sent inside your organization.",
		"outOfOfficeRecipients_label": "Notification recipients",
		"outOfOfficeReminder_label": "Autoresponder has been activated.",
		"outOfOfficeTimeRangeHelp_msg": "Check to pick dates.",
		"outOfOfficeTimeRange_msg": "Only send during this time range:",
		"outOfOfficeUnencrypted_msg": "Please note that automatic replies (autoresponses) are sent in plaintext.",
		"outOfSync_label": "Data expired",
		"owner_label": "Owner",
		"pageBackward_label": "Page backward",
		"pageForward_label": "Page forward",
		"pageTitle_label": "Page title",
		"paidEmailDomainLegacy_msg": "In order to use the tuta.com domain, one of the new subscriptions is needed.",
		"paidEmailDomainSignup_msg": "In order to register an address with the tuta.com domain, a subscription is needed.",
		"parentConfirmation_msg": "According to the EU General Data Protection Regulation (GDPR) children below 16 years need the confirmation of their parents to allow processing of their personal data. So please get hold of one of your parents or legal guardians and let them confirm the following:\n\n\"I am the parent or legal guardian of my child and allow it to use Tuta which includes processing of its personal data.\"",
		"parentFolder_label": "Parent folder",
		"parent_label": "Parent",
		"participant_label": "Participant",
		"partner_label": "Partner",
		"passphraseGeneratorHelp_msg": "This is a secure and easy to remember passphrase generated from a large dictionary.",
		"passphrase_label": "Passphrase",
		"password1InvalidSame_msg": "The new password is the same as the old one.",
		"password1InvalidUnsecure_msg": "Password is not secure enough.",
		"password1Neutral_msg": "Please enter a new password.",
		"password2Invalid_msg": "Confirmed password is different.",
		"password2Neutral_msg": "Please confirm your password.",
		"passwordEnterNeutral_msg": "Please enter your password for confirmation.",
		"passwordFor_label": "Password for {1}",
		"passwordImportance_msg": "Please store this password in a secure place. We are not able to restore your password or to reset your account because all of your data is end-to-end encrypted.",
		"passwordResetFailed_msg": "An error occurred. The password was not changed.",
		"passwordValid_msg": "Password ok.",
		"passwordWrongInvalid_msg": "Your password is wrong.",
		"password_label": "Password",
		"pasteWithoutFormatting_action": "Paste without formatting",
		"paste_action": "Paste",
		"pathAlreadyExists_msg": "This path already exists.",
		"pauseMailImport_action": "Pause import",
		"payCardContactBankError_msg": "Sorry, the payment transaction was rejected by your bank. Please make sure that your credit card details are correct or contact your bank.",
		"payCardExpiredError_msg": "Sorry, the credit card has expired. Please update your payment details.",
		"payCardInsufficientFundsError_msg": "Sorry, the payment transaction was rejected due to insufficient funds.",
		"payChangeError_msg": "Sorry, the payment transaction failed. Paying with the provided payment data is not possible. Please change your payment data.",
		"payContactUsError_msg": "Sorry, the payment transaction failed. Please contact us.",
		"paymentAccountRejected_msg": "Your credit card or PayPal account was already used for a different Tuta payment. For security reasons we have to activate this first. We will send you an email as soon as your payment data is activated. You may then enter it again.",
		"paymentDataPayPalFinished_msg": "Assigned PayPal account: {accountAddress}",
		"paymentDataPayPalLogin_msg": "Please click on the PayPal button to log in. You will be redirected to the PayPal website.",
		"paymentDataValidation_action": "Confirm",
		"paymentInterval_label": "Payment interval",
		"paymentMethodAccountBalance_label": "Account balance",
		"paymentMethodAccountBalance_msg": "You are paying for your account using account credit. You can top up your credit by using gift cards.",
		"paymentMethodCreditCard_label": "Credit card",
		"paymentMethodNotAvailable_msg": "This payment method is not available in your country.",
		"paymentMethodOnAccount_label": "Purchase on account",
		"paymentMethodOnAccount_msg": "You have to pay the invoices by bank transfer and you have to take care about the payment yourself. The invoice amount will not be debited automatically.",
		"paymentMethod_label": "Payment method",
		"paymentProcessingTime_msg": "It may take up to one week until payments via bank transfer will be shown in your account.",
		"paymentProviderNotAvailableError_msg": "Sorry, the payment provider is currently not available. Please try again later.",
		"payPalRedirect_msg": "You will be redirected to the PayPal website",
		"payPaypalChangeSourceError_msg": "Sorry, the payment transaction failed. Please choose a different way to pay in PayPal.",
		"payPaypalConfirmAgainError_msg": "Sorry, the payment transaction failed. Please update and confirm your payment details.",
		"pending_label": "Pending",
		"periodOfTime_label": "Period of time",
		"permanentAliasWarning_msg": "This is a Tuta domain email address, which in contrast to custom domain email addresses, can only be deactivated, not deleted. It will permanently count towards your email address limit.",
		"permissions_label": "Permission",
		"phishingMessageBody_msg": "This email is similar to other emails that were reported for phishing.",
		"phishingReport_msg": "Contents of this message will be transmitted to the server in unencrypted form so that we can improve phishing & spam protection. Are you sure you want to report this message?",
		"phoneticFirst_placeholder": "Phonetic First Name",
		"phoneticLast_placeholder": "Phonetic Last Name",
		"phoneticMiddle_placeholder": "Phonetic Middle Name",
		"phone_label": "Phone",
		"photoLibraryUsageDescription_msg": "Add a picture from your library as attachment.",
		"pinBiometrics1_msg": "Tuta focuses on security and privacy. So here is a little reminder that you can secure your login with PIN or biometrics like fingerprint or Face ID. Just store the password in the app and then configure your unlock method in the login settings or below with \"{secureNowAction}\".",
		"pinBiometrics2_msg": "Do you love the security and privacy you get with Tuta? Then rate our app now:",
		"pinBiometrics3_msg": "By rating our app, you help us fight Big Tech dominance. Thank you very much!",
		"pinBiometrics_action": "Secure your app!",
		"plaintext_action": "Plain text",
		"pleaseEnterValidPath_msg": "Please enter a valid path. Allowed characters are a-z, A-Z, '-' and '_'.",
		"pleaseWait_msg": "Please waitâ€¯...",
		"postings_label": "Invoices & payments",
		"postpone_action": "Postpone",
		"pre1970Start_msg": "Dates earlier than 1970 are outside the valid range.",
		"premiumOffer_msg": "Your support will enable us to offer privacy to everyone. Upgrade now and enjoy the many benefits you get with Revolutionary and Legend!",
		"presharedPasswordNotStrongEnough_msg": "At least one of the entered passwords is not secure enough. Send email anyway?",
		"presharedPasswordsUnequal_msg": "The selected contacts have different agreed passwords. They can not be merged!",
		"presharedPassword_label": "Agreed password",
		"prevDay_label": "Previous day",
		"preview_label": "Preview",
		"previous_action": "Previous",
		"prevMonth_label": "Previous month",
		"prevWeek_label": "Previous week",
		"priceChangeValidFrom_label": "Price change will take effect on {1}.",
		"priceFirstYear_label": "Price for first year",
		"priceForCurrentAccountingPeriod_label": "Pro rata price for current subscription period is {1}.",
		"priceForNextYear_label": "Price from next year",
		"priceFrom_label": "Price from {date}",
		"priceTill_label": "Price till {date}",
		"price_label": "Price",
		"pricing.2fa_label": "2FA",
		"pricing.2fa_tooltip": "Secure your login credentials with two-factor authentication (2FA) via TOTP or U2F on all our clients.",
		"pricing.addUsers_label": "Manage and add users",
		"pricing.addUsers_tooltip": "Administrate your team, reset passwords and second factors, define admin roles and manage all bookings and invoices centrally.",
		"pricing.admin_label": "Administration console",
		"pricing.admin_tooltip": "Admin console that lets you manage your Team, reset passwords and second factors, define multiple admin roles, centralized billing.",
		"pricing.attachmentSize_label": "25 MB attachments size",
		"pricing.billing_label": "Centralized billing",
		"pricing.billing_tooltip": "All global admins have access to the admin console where the billing is managed centrally for the whole account.",
		"pricing.businessShareTemplates_msg": "Share email templates",
		"pricing.businessShareTemplates_tooltip": "Create and manage email templates for consistent replies to similar requests. Create one or several template lists that you can share with other team members for consistent communication throughout your organization.",
		"pricing.businessSLA_label": "99.95% SLA",
		"pricing.businessSLA_tooltip": "Our strong infrastructure guarantees an uptime of 99.95%.",
		"pricing.businessTemplates_msg": "Add email templates",
		"pricing.businessTemplates_tooltip": "Create and manage email templates for consistent replies to similar requests.",
		"pricing.businessUse_label": "Business",
		"pricing.business_label": "Business features",
		"pricing.calendarsPremium_label": "Unlimited number of calendars",
		"pricing.catchall_label": "Catch-all email",
		"pricing.catchall_tooltip": "Make sure that all emails sent to your custom domain reach your mailbox even if the sender has mistyped your email address.",
		"pricing.comparison10Domains_msg": "10 custom domains",
		"pricing.comparison3Domains_msg": "3 custom domains",
		"pricing.comparisonAddUser_msg": "Add user ({1})",
		"pricing.comparisonContactFormPro_msg": "Contact forms ({price})",
		"pricing.comparisonCustomDomainAddresses_msg": "Unlimited email addresses for custom domains",
		"pricing.comparisonCustomDomains_msg": "{amount} custom domains",
		"pricing.comparisonDomainBusiness_msg": "Multiple custom domains",
		"pricing.comparisonDomainBusiness_tooltip_markdown": "<p>Use your own custom email domain addresses (you@yourbusiness.com).</p>\n",
		"pricing.comparisonDomainPremium_msg": "1 custom domain",
		"pricing.comparisonDomainPremium_tooltip_markdown": "<p>Use your own custom email domain addresses (you@ yourname.com)</p>\n",
		"pricing.comparisonEventInvites_msg": "Event invites",
		"pricing.comparisonEventInvites_tooltip": "Send and receive calendar invitations. Optionally send the invitations encrypted to external users with the help of a shared password.",
		"pricing.comparisonInboxRulesPremium_msg": "Unlimited inbox rules",
		"pricing.comparisonInboxRules_tooltip": "Define inbox rules to automatically sort incoming emails into specific folders for a fast organization of your mailbox.",
		"pricing.comparisonLabel_msg": "{amount} labels",
		"pricing.comparisonOneCalendar_msg": "One calendar",
		"pricing.comparisonOutOfOffice_msg": "Autoresponder",
		"pricing.comparisonOutOfOffice_tooltip": "Set up personalized out-of-office notifications when you are on holidays.",
		"pricing.comparisonSharingCalendar_msg": "Calendar sharing",
		"pricing.comparisonSharingCalendar_tooltip": "Share entire Tuta calendars with other Tuta users securely encrypted and with different access rights (Read only, Read and write, Write and manage sharing).",
		"pricing.comparisonStorage_msg": "{amount} GB storage",
		"pricing.comparisonSupportBusiness_tooltip": "Receive support via email on business days within 24 hours.",
		"pricing.comparisonSupportFree_msg": "No direct support",
		"pricing.comparisonSupportFree_tooltip_markdown": "<p>Access our smart help section from within your Tuta client or get help on our community support <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.reddit.com/r/tutanota/\">forum</a>. No email support.</p>\n",
		"pricing.comparisonSupportPremium_msg": "Support via email",
		"pricing.comparisonSupportPremium_tooltip_markdown": "<p>Access our smart help section from within your Tuta client with an option to directly email our support team. We reply within one working day.</p>\n",
		"pricing.comparisonSupportPro_msg": "Priority support",
		"pricing.comparisonThemePro_msg": "Custom logo and colors",
		"pricing.comparisonThemePro_tooltip": "Whitelabel Tuta with your own branding by defining the logos and colors of the Tuta web, mobile and desktop clients",
		"pricing.comparisonUnlimitedDomains_msg": "Unlimited custom domains",
		"pricing.comparisonUnlimitedLabel_msg": "Unlimited number of labels",
		"pricing.comparisonUsersFree_msg": "One user",
		"pricing.contactLists_label": "Contact lists",
		"pricing.contactLists_tooltip": "Create and share contact groups to send emails to groups easily. ",
		"pricing.currentPlan_label": "Current plan",
		"pricing.custom_title": "Custom branding",
		"pricing.custom_tooltip": "Whitelabel Tuta with your own branding by defining the logos and colors of the Tuta web, mobile and desktop clients.",
		"pricing.cyberMonday_label": "Save 62%",
		"pricing.cyber_monday_msg": "Get the top-tier plan for the first year for less!",
		"pricing.cyber_monday_select_action": "Get The Deal!",
		"pricing.encryptedCalendar_label": "Fully encrypted calendar",
		"pricing.encryptedCalendar_tooltip": "All data in your Tuta Calendars are encrypted, even notifications are sent encrypted to your device.",
		"pricing.encryptedContacts_label": "Encrypted address book",
		"pricing.encryptedContacts_tooltip": "All data in your Tuta address book is encrypted, even your contacts' email addresses.",
		"pricing.encryptedNoTracking_label": "Fully encrypted, no tracking",
		"pricing.encryption_label": "End-to-end encryption",
		"pricing.encryption_tooltip": "All data in Tuta is encrypted. Tuta has zero access to your mailbox so that only the sender and recipient can read your encrypted emails.",
		"pricing.excludesTaxes_msg": "Excludes taxes.",
		"pricing.extEmailProtection_label": "Password-protected emails",
		"pricing.extEmailProtection_tooltip": "All emails between Tuta users are automatically encrypted. You can exchange encrypted emails with anybody in the world via a shared password.",
		"pricing.familyLegend_tooltip": "After choosing Legend, contact our support via the question mark to the left of your mailbox so that we can activate multi-user support. Each member will get a mailbox with 500 GB & 30 alias email addresses (â‚¬8 per user/mth). A shared mailbox (â‚¬8 per mth) also gets 500 GB.",
		"pricing.familyRevolutionary_tooltip": "After choosing Revolutionary, contact our support via the question mark to the left of your mailbox so that we can activate multi-user support. Each member will get a mailbox with 20 GB & 15 alias email addresses (â‚¬3 per user/mth). A shared mailbox (â‚¬3 per mth) also gets 20 GB.",
		"pricing.family_label": "Family option",
		"pricing.folders_label": "Unlimited folders",
		"pricing.gdprDataProcessing_label": "GDPR data processing agreement",
		"pricing.gdpr_label": "GDPR-compliant",
		"pricing.gdpr_tooltip": "All data is stored in compliance with strict European data protection regulations according to the GDPR.",
		"pricing.getStarted_label": "Get started",
		"pricing.includesTaxes_msg": "Includes taxes.",
		"pricing.legendAsterisk_msg": "Legend discount only applies for the first year. Following price will be 96â‚¬ per year.",
		"pricing.login_title": "Login on own website",
		"pricing.login_tooltip": "Place the Tuta login on your own website for your employees and externals.",
		"pricing.mailAddressAliasesShort_label": "{amount} extra email addresses",
		"pricing.mailAddressAliases_tooltip_markdown": "<p>Extra email addresses per user. Email alias addresses can reduce spam and help speed up sorting of incoming emails. Read more tips <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://tuta.com/blog/secure-email-alias\">on our blog</a>.</p>\n",
		"pricing.mailAddressFree_label": "1 free Tuta email address",
		"pricing.management_label": "User management",
		"pricing.management_tooltip": "Reset passwords and second factors of users, create email addresses for users, deactivate users and more.",
		"pricing.monthly_label": "Monthly",
		"pricing.months_label": "months",
		"pricing.noAds_label": "No ads, no tracking",
		"pricing.notifications_label": "Customized notification email",
		"pricing.notifications_tooltip": "Compose your own notification email to external recipients when sending encrypted emails with password exchange.",
		"pricing.notSupportedByPersonalPlan_msg": "The requested feature is not supported with a personal plan. Please pick a business plan.",
		"pricing.offline_label": "Offline support",
		"pricing.offline_tooltip": "Login and view your emails, calendars and contacts whenever and wherever you are - even if you do not have an internet connection - with all our apps (desktop, Android & iOS).",
		"pricing.paidYearly_label": "Paid yearly",
		"pricing.perMonthPaidYearly_label": "per month - paid yearly",
		"pricing.perMonth_label": "per month",
		"pricing.perUserMonthPaidYearly_label": "per user/month - paid yearly",
		"pricing.perUserMonth_label": "per user/month",
		"pricing.perYear_label": "per year",
		"pricing.platforms_label": "Web, mobile & desktop apps",
		"pricing.privateUse_label": "Personal",
		"pricing.roles_label": "Multiple admin roles",
		"pricing.roles_tooltip": "Define global administrators who have access to everything.",
		"pricing.saveAmount_label": "Save {amount}",
		"pricing.search_msg": "Unlimited search",
		"pricing.search_tooltip": "Search your entire mailbox confidentially via our encrypted search index.",
		"pricing.security_label": "Security",
		"pricing.select_action": "Select",
		"pricing.servers_label": "Servers based in Germany",
		"pricing.servers_tooltip": "All data is stored on our own servers in ISO 27001 certified data centers based in Germany.",
		"pricing.sharedMailboxes_label": "Shared mailboxes",
		"pricing.sharedMailboxes_tooltip": "Add shared mailboxes so that multiple users can handle certain company email addresses simultaneously without logging in as a different user. Shared mailboxes are available at the same price as an additional user and get the same amount of storage.",
		"pricing.showAllFeatures": "Show all features",
		"pricing.signature_label": "HTML signatures",
		"pricing.signature_tooltip": "Customize your signatures with pictures, logos, links, and more.",
		"pricing.signIn_label": "Sign in as user",
		"pricing.signIn_tooltip": "Admins can login as the user if they know the user's password. Admins can reset the password anytime.",
		"pricing.slashPerMonth_label": "/month",
		"pricing.subscriptionPeriodInfoBusiness_msg": "The subscription period is one month when paying monthly and one year when paying yearly. The plan will be renewed automatically at the end of the subscription period.",
		"pricing.subscriptionPeriodInfoPrivate_msg": "The subscription period is one month when paying monthly and one year when paying yearly. After the initial period, the plan will turn into a non-fixed term contract and may be cancelled at any time.",
		"pricing.table_unlimitedDomain": "Unlimited",
		"pricing.team_label": "Team management",
		"pricing.unlimitedAddresses_label": "Unlimited custom domain addresses",
		"pricing.upgradeLater_msg": "Use Tuta free of charge and upgrade later. Only for personal use.",
		"pricing.usability_label": "Usability",
		"pricing.yearly_label": "Yearly",
		"primaryMailAddress_label": "Primary",
		"print_action": "Print",
		"privacyLink_label": "Privacy policy",
		"privacyPolicyUrl_label": "Link to privacy policy",
		"privateCalendar_label": "Private",
		"private_label": "Private",
		"progressDeleting_msg": "Deletingâ€¯...",
		"promotion.ctAdventCalendarDiscount_msg": "c't advent calendar: Use Tuta 12 months for free",
		"promotion.oneYear_msg": "Special Offer: Private & Secure Email One Year For Free",
		"pronouns_label": "Pronouns",
		"providePaymentDetails_msg": "Please provide payment details",
		"purchaseDate_label": "Purchase date",
		"pushIdentifierCurrentDevice_label": "This device",
		"pushIdentifierInfoMessage_msg": "List of all recipients receiving notifications for this user. You can deactivate entries if you do not wish to receive notifications or delete them for devices you don't use anymore.",
		"pushNewMail_msg": "New email received.",
		"pwChangeValid_msg": "Password was changed.",
		"quitDNSSetup_msg": "Please set up all DNS records as indicated. Otherwise you will not be able to use your custom domain with Tuta.",
		"quitSetup_title": "Quit setup?",
		"quit_action": "Quit",
		"ratingExplanation_msg": "Whether you love Tuta or feel we could improve, let us know!",
		"ratingHowAreWeDoing_title": "How do you like Tuta?",
		"ratingLoveIt_label": "Love it!",
		"ratingNeedsWork_label": "Needs work",
		"readResponse_action": "Read response",
		"reallySubmitContent_msg": "Do you really want to send the entered data to an external site?",
		"receiveCalendarNotifications_label": "Receive calendar event notifications",
		"received_action": "Inbox",
		"receivingMailboxAlreadyUsed_msg": "The selected receiving mailbox is already used for a different contact form.",
		"receivingMailbox_label": "Receiving mailbox",
		"recipients_label": "Recipients",
		"recommendedDNSValue_label": "Recommended value",
		"reconnecting_label": "Reconnecting...",
		"reconnect_action": "Reconnect",
		"recoverAccountAccess_action": "Lost account access",
		"recoverResetFactors_action": "Reset second factor",
		"recoverSetNewPassword_action": "Set a new password",
		"recoveryCodeConfirmation_msg": "Please make sure you have written down your recovery code. ",
		"recoveryCodeDisplay_action": "Display recovery code",
		"recoveryCodeEmpty_msg": "Please enter a recovery code",
		"recoveryCodeReminder_msg": "Did you already write down your recovery code? The recovery code is the only option to reset your password or second factor in case you lose either.",
		"recoveryCode_label": "Recovery code",
		"recoveryCode_msg": "Please take a minute to write down your recovery code. The recovery code is the only option to reset your password or second factor in case you lose either.",
		"recover_label": "Recover",
		"redeemedGiftCardPosting_label": "Redeemed gift card",
		"redeemGiftCardWithAppStoreSubscription_msg": "You cannot redeem a gift card while there is an App Store subscription.",
		"redeem_label": "Redeem",
		"redo_action": "Redo",
		"referralCreditPosting_label": "Referral credit",
		"referralLinkLong_msg": "Refer your friends to Tuta: If they sign up for a yearly membership with your personal referral link, you will receive 25% of their first payment in credit on your account, and they will get an additional free month.",
		"referralLinkShare_msg": "Join Tuta now at: {referralLink}",
		"referralLink_label": "Referral link",
		"referralSettings_label": "Refer a friend",
		"referralSignupCampaignError_msg": "Not possible to sign up with campaign code and referral code at the same time.",
		"referralSignupInvalid_msg": "You have tried signing up with an invalid referral link. You can continue registering, but the referral promotion will not apply.",
		"referralSignup_msg": "You are invited to Tuta! Choose a yearly subscription of any paid plan & you will get an additional free month.",
		"refresh_action": "Refresh",
		"refund_label": "Refund",
		"regeneratePassword_action": "Regenerate",
		"registeredU2fDevice_msg": "Your security key has been recognized. You can save it now.",
		"registered_label": "Registered",
		"register_label": "Sign up",
		"rejectedEmails_label": "Rejected emails",
		"rejectedSenderListInfo_msg": "List of emails that have been rejected by Tuta mail servers. You can add a spam rule for whitelisting an email sender.",
		"rejectReason_label": "Reject reason",
		"relationships_label": "Relationships",
		"relative_label": "Relative",
		"releaseNotes_action": "Release notes",
		"reloadPage_action": "Reload page",
		"rememberDecision_msg": "Remember decision",
		"reminderBeforeEvent_label": "Reminder before event",
		"remindersUsageDescription_msg": "Shows notification when new email arrives.",
		"reminder_label": "Reminder",
		"removeAccount_action": "Remove account",
		"removeCalendarParticipantConfirm_msg": "Are you sure you want to remove {participant} from the calendar \"{calendarName}\"?",
		"removeDNSValue_label": "Remove value",
		"removeFormatting_action": "Remove formatting from selection",
		"removeGroup_action": "Remove group",
		"removeLanguage_action": "Remove language",
		"removeOwnAdminFlagInfo_msg": "Your own admin flag can only be removed by another admin but not by yourself.",
		"removeSharedMemberConfirm_msg": "Are you sure you want to remove {member} from \"{groupName}\"?",
		"removeUserFromGroupNotAdministratedError_msg": "You cannot remove a user you do not administrate from a group.",
		"removeUserFromGroupNotAdministratedUserError_msg": "You cannot remove a user from a group you do not administrate.",
		"remove_action": "Remove",
		"renameTemplateList_label": "Rename template list",
		"rename_action": "Rename",
		"repeatedPassword_label": "Repeat password",
		"repeatsEvery_label": "Repeats every",
		"repetition_msg": "Every {interval} {timeUnit}",
		"repliedToEventInvite_msg": "Replied: {event}",
		"replyAll_action": "Reply all",
		"replyTo_label": "Reply to",
		"reply_action": "Reply",
		"reportEmail_action": "Report this email",
		"reportPhishing_action": "Report phishing",
		"reportSpam_action": "Report spam",
		"requestApproval_msg": "Sorry, you are currently not allowed to send or receive emails (except to Tuta support) because your account was marked for approval to avoid abuse like spam emails. Please contact us at approval@tutao.de directly from your Tuta account and describe what you would like to use this email account for. Please write in English or German, so we can understand you. Thanks!",
		"requestTimeout_msg": "An operation took too long due to a slow internet connection. Please try again at a later time.",
		"requestTooLarge_msg": "The amount of data is too large. Please shorten the text.",
		"requiresNewWindow_msg": "Will take effect in any new window.",
		"resetZoomFactor_action": "Reset Zoom Factor",
		"responsiblePersonsInfo_msg": "Limit the users that the message from the receiving mailbox can be forwarded to. There are no restrictions if the list is empty.",
		"responsiblePersons_label": "Responsible persons",
		"restartBefore_action": "Restart Tuta before sending",
		"restoreExcludedRecurrences_action": "Restore events",
		"resubscribe_action": "Resubscribe",
		"resumeMailImport_action": "Resume import",
		"resumeSetup_label": "Resume setup",
		"retry_action": "Try again",
		"revealPassword_action": "Reveal the password",
		"richNotificationsNewsItem_msg": "Your favorite email app can now display subject & sender in notifications! Enable this feature now:",
		"richNotifications_title": "Enable Rich Notifications",
		"richText_label": "Rich text",
		"role_placeholder": "Role",
		"runInBackground_action": "Run in background",
		"runInBackground_msg": "Receive Notifications while logged out and manage windows from the tray.",
		"runOnStartup_action": "Run on startup",
		"saveAll_action": "Save all",
		"saveDownloadNotPossibleIos_msg": "This browser does not support saving attachments to disk. Some file types can be displayed in the browser by clicking the link above.",
		"saveEncryptedIpAddress_label": "Enable saving of IP addresses in sessions and audit log. IP addresses are stored encrypted.",
		"saveEncryptedIpAddress_title": "Save IP addresses in logs",
		"save_action": "Save",
		"save_msg": "Saving dataâ€¯...",
		"scheduleAlarmError_msg": "Could not set up an alarm. Please update the application.",
		"scrollDown_action": "Scroll down",
		"scrollToBottom_action": "Scroll to bottom",
		"scrollToNextScreen_action": "Scroll to next screen",
		"scrollToPreviousScreen_action": "Scroll to previous screen",
		"scrollToTop_action": "Scroll to top",
		"scrollUp_action": "Scroll up",
		"searchCalendar_placeholder": "Search events",
		"searchContacts_placeholder": "Search contacts",
		"searchDisabledApp_msg": "Search has been disabled due to a system error, and will be re-enabled if you restart the app.",
		"searchDisabled_msg": "Search has been disabled because your browser doesn't support data storage.",
		"searchedUntil_msg": "Searched until",
		"searchEmails_placeholder": "Search emails",
		"searchGroups_placeholder": "Search for groups",
		"searchKnowledgebase_placeholder": "Search knowledgebase",
		"searchMailboxes_placeholder": "Search for mailboxes",
		"searchMailbox_label": "Search mailbox",
		"searchNoResults_msg": "No results",
		"searchPage_action": "Search page...",
		"searchPage_label": "Search page",
		"searchResult_label": "Results",
		"searchTemplates_placeholder": "Search templates",
		"searchUsers_placeholder": "Search for users",
		"search_label": "Search",
		"secondFactorAuthentication_label": "Second factor authentication",
		"secondFactorConfirmLoginNoIp_msg": "Would you like to allow the login from the client \"{clientIdentifier}\"?",
		"secondFactorConfirmLogin_label": "Confirm login",
		"secondFactorConfirmLogin_msg": "Would you like to allow the login from the client \"{clientIdentifier}\" with the IP address {ipAddress}?",
		"secondFactorNameInfo_msg": "Name for identification.",
		"secondFactorPendingOtherClientOnly_msg": "Please accept this login from another tab or via the app.\n",
		"secondFactorPending_msg": "Please authenticate with your second factor or accept this login from another tab or via the app.",
		"secondMergeContact_label": "Contact 2",
		"secureNow_action": "Secure now",
		"securityKeyForThisDomainMissing_msg": "You do not have any security keys configured for this domain, please add one in Login Settings.",
		"security_title": "Security",
		"selectAllLoaded_action": "Select all loaded items",
		"selectionNotAvailable_msg": "No selection available.",
		"selectMultiple_action": "Select multiple",
		"selectNextTemplate_action": "Select the next template in the list",
		"selectNext_action": "Select next",
		"selectPeriodOfTime_label": "Select period of time",
		"selectPreviousTemplate_action": "Select the previous template in the list",
		"selectPrevious_action": "Select previous",
		"selectTemplate_action": "Select",
		"sendErrorReport_action": "Send error report",
		"sender_label": "Sender",
		"sendingUnencrypted_msg": "Your message is being sent.",
		"sending_msg": "Your message is being encrypted and sent.",
		"sendLogsInfo_msg": "Attach the log files to the error report. Click below to display the contents.",
		"sendLogs_action": "Send Logs",
		"sendMail_alt": "Send email to this address",
		"sendMail_label": "Send an email",
		"sendReport_label": "Send report",
		"sendUpdates_label": "Send updates to invitees",
		"sendUpdates_msg": "Send update notification to invitees?",
		"send_action": "Send",
		"sent_action": "Sent",
		"serverNotReachable_msg": "Could not reach server, looks like you are offline. Please try again later.",
		"serviceUnavailable_msg": "A temporary error occurred on the server. Please try again at a later time.",
		"sessionsInfo_msg": "Client and IP address are only stored encrypted.",
		"sessionsWillBeDeleted_msg": "These will be deleted 2 weeks after closing.",
		"setCatchAllMailbox_action": "Set catch all mailbox",
		"setDnsRecords_msg": "Please set the following DNS records:",
		"setSenderName_action": "Set sender name",
		"settingsForDevice_label": "Settings for this device",
		"settingsView_action": "Switch to the settings view",
		"settings_label": "Settings",
		"setUp_action": "Set up",
		"shareCalendarAcceptEmailBody_msg": "Hello {recipientName}, <br/>{invitee} has accepted your invitation to participate in the calendar \"{calendarName}\".<br/><br/>This is an automated message.",
		"shareCalendarAcceptEmailSubject_msg": "Calendar invitation accepted",
		"shareCalendarDeclineEmailBody_msg": "Hello {recipientName}, <br/>{invitee} has not accepted your invitation to participate in the calendar \"{calendarName}\".<br/><br/>This is an automated message.",
		"shareCalendarDeclineEmailSubject_msg": "Calendar invitation declined",
		"shareCalendarInvitationEmailBody_msg": "Hello, <br/>{inviter} has invited you to participate in the calendar \"{calendarName}\". You can check the details of this invitation in the calendar view to accept or decline it.<br/><br/>This is an automated message.",
		"shareCalendarInvitationEmailSubject_msg": "Invitation to participate in calendar",
		"shareCalendarWarning_msg": "All participants of the calendar will be able to see your name and main email address of your mailbox.",
		"shareContactListEmailBody_msg": "Hello, <br/>{inviter} has invited you to use the contact list \"{groupName}\". You can check the details of this invitation in contacts, and choose to accept or decline it.",
		"shareContactListEmailSubject_msg": "Invitation to use a contact list",
		"sharedCalendarAlreadyMember_msg": "You are already a participant of this calendar. If you wish to accept this new invitation, you must remove your participation first.",
		"sharedContactListDefaultName_label": "Contact list of {ownerName}",
		"sharedContactLists_label": "Shared contact lists",
		"sharedGroupAcceptEmailBody_msg": "Hello {recipientName}, <br/>{invitee} has accepted your invitation to use \"{groupName}\".",
		"sharedGroupDeclineEmailBody_msg": "Hello {recipientName}, <br/>{invitee} has not accepted your invitation to use \"{groupName}\".",
		"sharedGroupParticipants_label": "Users with access to \"{groupName}\"",
		"sharedMailboxCanNotSendConfidentialExternal_msg": "Sorry, it is not yet possible to send end-to-end encrypted emails to external recipients from a shared mailbox.",
		"sharedMailboxesMultiUser_msg": "For private plans (Legend and Revolutionary) please get in contact with our support and ask for enabling multi user support for your account so that you can make use of shared mailboxes.",
		"sharedMailboxes_label": "Shared mailboxes",
		"sharedMailbox_label": "Shared mailbox",
		"sharedTemplateGroupDefaultName_label": "{ownerName}'s Templates",
		"shareGroupWarning_msg": "All users in this shared group will be able to see your name and your main email address.",
		"shareTemplateGroupEmailBody_msg": "Hello, <br/>{inviter} has invited you to use their template list \"{groupName}\". You can check the details of this invitation in settings, and choose to accept or decline it.<br/><br/>This is an automated message.",
		"shareTemplateGroupEmailSubject_msg": "Invitation to use a template list",
		"shareViaEmail_action": "Share via email",
		"shareWarningAliases_msg": "They will also be able to see the email aliases associated with your mailbox.",
		"shareWithEmailRecipient_label": "Share with email recipient",
		"share_action": "Share",
		"sharing_label": "Sharing",
		"shortcut_label": "Shortcut",
		"showAddress_alt": "Show this address in OpenStreetMap",
		"showAllMailsInThread_label": "Show all emails together in thread",
		"showBlockedContent_action": "Show",
		"showContact_action": "Show contact",
		"showHeaders_action": "Show email headers",
		"showHelp_action": "Show help",
		"showImages_action": "Show images",
		"showInboxRules_action": "Show inbox rules",
		"showingEventsUntil_msg": "Showing events until {untilDay}.",
		"showMail_action": "Show encrypted mailbox",
		"showMoreUpgrade_action": "Choose plan",
		"showMore_action": "SHOW MORE",
		"showNewer_label": "Show next newer mail",
		"showNone_label": "Show None",
		"showOlder_label": "Show next older mail",
		"showOnlySelectedMail_label": "Show selected email only",
		"showRejectReason_action": "Show reject reason",
		"showRichTextToolbar_action": "Show formatting tools",
		"showSource_action": "Show email source code",
		"showText_action": "Show text",
		"showURL_alt": "Open link",
		"showWelcomeDialog_action": "Show welcome dialog",
		"show_action": "Show",
		"signal_label": "Signal",
		"signedOn_msg": "Signed on {date}.",
		"signingNeeded_msg": "Signing needed!",
		"sign_action": "Sign",
		"sister_label": "Sister",
		"skip_action": "Skip",
		"social_label": "Social networks",
		"someMailFailedImport_msg": "Some mails failed to import.",
		"someRepetitionsDeleted_msg": "Some repetitions have been deleted",
		"sortBy_label": "Sort by",
		"spamReports_label": "Report spam",
		"spamRuleEnterValue_msg": "Please enter a value.",
		"spam_action": "Spam",
		"spelling_label": "Spelling",
		"spouse_label": "Spouse",
		"startAfterEnd_label": "The start date must not be after the end date.",
		"startTime_label": "Start time",
		"state_label": "Status",
		"stillReferencedFromContactForm_msg": "This item can not be deactivated because it is still referenced from a contact form.",
		"storageCapacityTooManyUsedForBooking_msg": "There is too much storage used to process this order. Please free some memory to continue.",
		"storageCapacityUsed_label": "Used storage",
		"storageCapacity_label": "Storage capacity",
		"storageDeletion_msg": "Emails in this folder will automatically be deleted after 30 days.",
		"storageQuotaExceeded_msg": "There's not enough storage on the device to create the search index. Therefore the  search results cannot be shown completely.",
		"storedDataTimeRangeHelpText_msg": "Stored emails that are older than what you configure here will be automatically removed from your device.",
		"storedDataTimeRange_label": "Keep emails from the last {numDays} days",
		"storeDowngradeOrResubscribe_msg": "Your current App Store subscription is expired. Would you like to downgrade your account or resubscribe to keep the paid features?\nSee {AppStoreDowngrade}",
		"storeMultiSubscriptionError_msg": "It's not possible to manage multiple subscriptions with the same Apple ID.\nSee {AppStorePayment}",
		"storeNoSubscription_msg": "There is an existing subscription for your account through another Apple ID.\nSee {AppStorePayment}",
		"storePassword_action": "Store password",
		"storePaymentMethodChange_msg": "It's not possible to change your payment method while subscribed through the App Store.\nSee {AppStorePaymentChange}",
		"storeSubscription_msg": "Please manage subscriptions made in the App Store directly in there.\nSee {AppStorePayment}",
		"subject_label": "Subject",
		"submit_action": "Submit",
		"subscribe_action": "Subscribe",
		"subscriptionCancelledMessage_msg": "Your subscription has been cancelled. Please contact support to reactivate your subscription.",
		"subscriptionChangePeriod_msg": "Your plan will be changed after the end of the current subscription period ({1}).",
		"subscriptionChange_msg": "Your plan will be changed after the end of the current subscription period.",
		"subscriptionSettings_label": "Subscription Settings",
		"subscription_label": "Plan",
		"supportBackLostRequest_msg": "Are you sure you want to go back? Your request will be lost.",
		"supportForm_msg": "Please provide more details, so we can assist you better.",
		"supportForm_title": "Let's get to the bottom of this",
		"supportMenu_label": "Support",
		"supportNoDirectSupport_msg": "You can still get further help through our official FAQ page. Alternatively, you can upgrade to get direct email support.",
		"supportNoDirectSupport_title": "Sorry, your Free plan doesn't offer direct email support",
		"supportRequestReceived_msg": "Our team is reviewing your issue and will be in touch soon.",
		"supportRequestReceived_title": "We've received your request!",
		"supportSocialsInfo_msg": "For more tips and updates follow us on our blog and social media channels.",
		"supportStartPage_msg": "Please select an option below to get started.",
		"supportStartPage_title": "We're here to help",
		"supportSuccess_msg": "Glad we could help!",
		"surveyAccountProblems_label": "Problems with my account",
		"surveyAccountReasonAccountApproval_label": "The account approval takes too long",
		"surveyAccountReasonAccountBlocked_label": "My account has been blocked for no reason",
		"surveyAccountReasonCantAddUsers_label": "I can't add more users",
		"surveyAccountReasonForgotPassword_label": "I forgot my password",
		"surveyAccountReasonForgotRecoveryCode_label": "I forgot my recovery code",
		"surveyAccountReasonServicesBlocked_label": "Can't use email address at other service",
		"surveyAccountReasonSupportNoHelp_label": "Support couldn't solve my problem",
		"surveyChooseReason_label": "Choose a reason",
		"surveyFeatureDesignProblems_label": "Problems with features or design",
		"surveyFeatureReasonAutoForward_label": "No auto forward for emails",
		"surveyFeatureReasonCloudStorage_label": "No cloud storage / Drive",
		"surveyFeatureReasonEmailTranslations_label": "No email translations",
		"surveyFeatureReasonMoreFormattingOptions_label": "Missing text formatting options",
		"surveyFeatureReasonNoAdjustableColumns_label": "No adjustable columns",
		"surveyFeatureReasonNoEmailImport_label": "No email import",
		"surveyFeatureReasonNoEmailLabels_label": "No labels for emails",
		"surveyFeatureReasonNoIMAP_label": "No IMAP",
		"surveyFeatureReasonOther_label": "Other feature (please specify below)",
		"surveyMainMessageDelete_label": "We're sad to see you go!",
		"surveyMissingFeature_label": "Missing Feature",
		"surveyOtherReasonMergeAccounts_label": "I want to merge accounts",
		"surveyOtherReasonProvideDetails_label": "Other reason (please specify below)",
		"surveyOtherReasonWrongEmailAddress_label": "I picked the wrong email address",
		"surveyOtherReason_label": "Other reason",
		"surveyParticipate_action": "Participate in survey",
		"surveyPriceReasonAutoRenewal_label": "The auto-renewal is annoying",
		"surveyPriceReasonFamilyDiscount_label": "I can only afford a family plan",
		"surveyPriceReasonPaidFeatures_label": "I don't need the paid features",
		"surveyPriceReasonPaymentNotWorking_label": "My payment is not working",
		"surveyPriceReasonPricesTooHigh_label": "The new prices are too high",
		"surveyPriceReasonStudentDiscount_label": "I can only afford a student plan",
		"surveyPriceReasonTooExpensive_label": "Too expensive, but I want to support the Tuta Team",
		"surveyPrice_label": "Price",
		"surveyProblemReasonAppAppearance_label": "I don't like how Tuta looks",
		"surveyProblemReasonCalendar_label": "Problems with calendar",
		"surveyProblemReasonSearch_label": "Problems with search",
		"surveyProblemReasonSpamProtection_label": "Insufficient spam protection",
		"surveyProblemReasonThemeCustomization_label": "No theme customization",
		"surveyProblemReasonTooHardToUse_label": "Too hard to use (please specify below)",
		"surveyReasonSecondaryMessage_label": "We always strive to improve Tuta. Could you please provide more details?",
		"surveySecondaryMessageDelete_label": "We would greatly appreciate it if you could let us know why you decided to delete your Tuta account.",
		"surveySecondaryMessageDowngrade_label": "We would greatly appreciate it if you could let us know why you don't need the paid plan anymore.",
		"surveySkip_action": "Skip survey",
		"surveyUnhappy_label": "What are you unhappy with?",
		"survey_label": "Survey",
		"suspiciousLink_msg": "Are you sure you want to open \"{url}\"? The link might run programs on your device. Only open links from trusted sources.",
		"suspiciousLink_title": "Suspicious link",
		"switchAccount_action": "Switch account",
		"switchAgendaView_action": "Switch to agenda view",
		"switchArchive_action": "Switch to archive folder",
		"switchColorTheme_action": "Switch color theme",
		"switchDrafts_action": "Switch to drafts folder",
		"switchInbox_action": "Switch to inbox folder",
		"switchMonthView_action": "Switch to month view",
		"switchSearchInMenu_label": "You can switch search type in the menu",
		"switchSentFolder_action": "Switch to sent folder",
		"switchSpam_action": "Switch to spam folder",
		"switchSubscriptionInfo_msg": "A new subscription period is started when you switch plans. You will receive credit for the remaining months of your old subscription.",
		"switchTrash_action": "Switch to trash folder",
		"switchWeekView_action": "Switch to week view",
		"synchronizing_label": "Synchronizing: {progress}",
		"systemThemePref_label": "System",
		"takeoverAccountInvalid_msg": "The email address specified as the take over target account does not belong to a paid account.",
		"takeoverMailAddressInfo_msg": "Optional: Enter the email address of the administrator of your paid account in order to re-use your email addresses in the target account.",
		"takeoverSuccess_msg": "You may now re-use your old address in the specified account as alias email address or additional user.",
		"takeOverUnusedAddress_msg": "You may take over the email address of your deleted account into another paid account and re-use it there. In order to do so please specify the target paid account admin email address. Please note: In case you had configured a second factor for authentication, please provide your recovery code instead because 2FA can not be used for a deleted account.",
		"targetAddress_label": "Target account address",
		"telegram_label": "Telegram",
		"templateGroupDefaultName_label": "My Templates",
		"templateGroupInvitations_label": "Template list invitations",
		"templateGroupName_label": "Template list name",
		"templateGroup_label": "Template",
		"templateHelp_msg": "In the form below you can configure a custom template for the notification emails containing the link to the encrypted mailbox. The template body must contain a \"{link}\" placeholder which will be replaced with the actual link to the encrypted email. You can also include a \"{sender}\" placeholder in the mail body or in the subject which will be replaced with the sender name.",
		"templateLanguageExists_msg": "Template for the selected language already exists.",
		"templateMustContain_msg": "Template must contain placeholder {value}",
		"templateNotExists_msg": "This template no longer exists.",
		"templateShortcutExists_msg": "Template with this shortcut already exists!",
		"terminationAlreadyCancelled_msg": "A termination request for this account has been made already.",
		"terminationDateRequest_msg": "Specify a date when the account should be terminated.",
		"terminationDateRequest_title": "Termination date",
		"terminationForm_title": "Termination form",
		"terminationInvalidDate_msg": "The termination date must not be today or in the past.",
		"terminationNoActiveSubscription_msg": "There is no active subscription for this account.",
		"terminationOptionEndOfSubscriptionInfo_msg": "Your account will be terminated after the end of your current payment interval. The plan will not be renewed.",
		"terminationOptionFutureDateInfo_msg": "Your account will be terminated at the provided date. Depending on your payment interval you might still be charged until that date.",
		"terminationSuccessful_msg": "Your termination request for the account {accountName} was received on {receivedDate} and your account will be deleted on {deletionDate}.",
		"terminationUseAccountUntilTermination_msg": "You can use the account until it is terminated.",
		"termination_action": "Terminate subscription",
		"termination_text": "Please provide the credentials for the account that you want to terminate.",
		"termsAcceptedNeutral_msg": "Please accept the terms & conditions.",
		"termsAndConditionsLink_label": "General terms and conditions",
		"termsAndConditions_label": "I have read and agree to the following documents:",
		"textTooLong_msg": "The entered text is too long",
		"theme_label": "Theme",
		"theme_title": "Which theme would you like to use?",
		"thisClient_label": "<This client>",
		"timeFormatTwelveHour_label": "12 hour",
		"timeFormatTwentyFourHour_label": "24 hour",
		"timeFormat_label": "Time format",
		"timeSection_label": "Time selection",
		"times_msg": "{amount} times",
		"time_label": "Time",
		"title_placeholder": "Title",
		"today_label": "Today",
		"toggleDevTools_action": "Toggle console",
		"toggleFullScreen_action": "Toggle fullscreen",
		"toggleUnread_action": "Toggle unread",
		"tomorrow_label": "Tomorrow",
		"tooBigAttachment_msg": "The following files could not be attached because the overall size exceeds 25 MB: ",
		"tooBigInlineImages_msg": "Only files up to {size} KB are allowed.",
		"tooManyAttempts_msg": "Number of allowed attempts exceeded. Please try again later.",
		"tooManyCustomDomains_msg": "You have too many custom domains.",
		"tooManyGiftCards_msg": "You have reached the purchase limit of {amount} gift cards in the last {period}.",
		"tooManyMailsAuto_msg": "Failed to send an automatic notification email because the number of allowed emails has been exceeded. The notification email is stored in the draft folder and you can try to send it later.",
		"tooManyMails_msg": "It looks like you exceeded the number of allowed emails. Please try again later.",
		"totpAuthenticator_label": "Authenticator (TOTP)",
		"totpCodeConfirmed_msg": "The TOTP code is valid. You can save now to finish setup.",
		"totpCodeEnter_msg": "Please enter the six digit code from your authenticator to finish setup.",
		"totpCodeWrong_msg": "The TOTP code you entered is invalid. Please correct it.",
		"totpCode_label": "Authenticator code",
		"totpSecret_label": "Secret",
		"totpTransferSecretApp_msg": "Please update your authenticator app by pressing the button below or by entering the secret key manually.",
		"totpTransferSecret_msg": "Please update your authenticator app by scanning the QR code (below) or by entering the secret key manually.",
		"to_label": "To",
		"trash_action": "Trash",
		"tutanotaAddressDoesNotExist_msg": "The following Tuta email addresses do not exist.",
		"tutaoInfo_msg": "Tutao GmbH is the company providing Tuta to you.",
		"twitter_label": "Twitter",
		"typeToFilter_label": "Type to filter ...",
		"type_label": "Type",
		"u2fSecurityKey_label": "Security Key (U2F)",
		"unavailable_label": "Unavailable",
		"undecided_label": "Undecided",
		"undoMailReport_msg": "The email(s) will be reported in unencrypted form.",
		"undo_action": "Undo",
		"unencryptedTransmission_msg": "The email(s) moved to the spam folder will be transmitted to the server in unencrypted form to improve spam protection.",
		"unknownError_msg": "An unexpected error occurred. Please try again later.",
		"unknownRepetition_msg": "The event is part of a series.",
		"unlimited_label": "Unlimited",
		"unlockCredentials_action": "Unlock credentials",
		"unprocessedBookings_msg": "You have some unprocessed orders with a total value of {amount}. This amount will be deducted from your balance and/or chosen payment method upon the next invoice.",
		"unrecognizedU2fDevice_msg": "Your security key has not been recognized.",
		"unregistered_label": "Not registered",
		"unsubscribeConfirm_msg": "Do you really want to stop your subscription? Your account will be reset to Free now and you will immediately lose your paid features. Please also note that Free accounts are deleted if they have not been used for more than six months.",
		"unsubscribeFailed_msg": "Could not cancel newsletter or mailing list.",
		"unsubscribeSuccessful_msg": "The newsletter or mailing list has been cancelled successfully!",
		"unsubscribe_action": "Unsubscribe",
		"unsuccessfulDrop_msg": "The drag & drop was unsuccessful because the data had not finished downloading. You may try again once the progress bar is finished.",
		"until_label": "until",
		"updateAdminshipGlobalAdmin_msg": "You can't change the adminship of a global administrator.",
		"updateAllCalendarEvents_action": "Update all events",
		"updateAvailable_label": "Update for Tuta Desktop available ({version})",
		"updateFound_label": "New version is available.",
		"updateOneCalendarEvent_action": "Update this event only",
		"updateOwnAdminship_msg": "You can't change the adminship of your own user.",
		"updatePaymentDataBusy_msg": "Verifying payment data. Please be patient, this can take up to one minute.",
		"update_action": "Update",
		"upgradeConfirm_msg": "Confirm your order!",
		"upgradeNeeded_msg": "Sorry, you are not allowed to send or receive emails (except to the Tuta sales support at sales@tutao.de) because you first need to finish ordering a paid plan.",
		"upgradePlan_msg": "Your plan will be upgraded to {plan}.",
		"upgradePremium_label": "Premium",
		"upgradeReminderCancel_action": "Later",
		"upgradeReminderTitle_msg": " Get the best of Tuta!",
		"upgradeRequired_msg": "This feature is not available on your plan, please upgrade to one of the following plans:",
		"upgrade_action": "Upgrade",
		"upToDate_label": "All up to date",
		"urlPath_label": "Path",
		"url_label": "URL",
		"usageData_label": "Usage data",
		"userAccountDeactivated_msg": "This user is deactivated.",
		"userColumn_label": "User",
		"userEmailSignature_label": "Email signature",
		"userSettings_label": "User settings",
		"userUsageDataOptInExplanation_msg": "Share anonymous usage data and help us test new features as well as find issues with existing functionality. We will generate and store a random identifier on your device that is shared across all logged-in accounts.",
		"userUsageDataOptInInfo_msg": "Whether your client sends usage data to us to improve Tuta.",
		"userUsageDataOptInStatement1_msg": "We don't collect any personally identifiable information",
		"userUsageDataOptInStatement2_msg": "We don't share your usage data with anyone",
		"userUsageDataOptInStatement3_msg": "Your usage data may be used for research purposes",
		"userUsageDataOptInStatement4_msg": "You can turn this off anytime in settings",
		"userUsageDataOptInThankYouOptedIn_msg": "Thanks for opting in and sending us your usage data. You can turn this off anytime in settings.",
		"userUsageDataOptInThankYouOptedOut_msg": "Your decision not to send us your usage data has been stored. You can enable it anytime in settings should you change your mind.",
		"userUsageDataOptIn_label": "Usage data decision",
		"userUsageDataOptIn_title": "Help us improve Tuta",
		"useSecurityKey_action": "Click to use security key",
		"validInputFormat_msg": "Format ok.",
		"value_label": "Value",
		"variant_label": "Variant",
		"vcardInSharingFiles_msg": "One or more contact files were detected. Would you like to import or attach them?",
		"verifyDNSRecords_msg": "Finally, you have to configure the DNS records listed below to enable mail delivery to and from the Tuta mail server.",
		"verifyDNSRecords_title": "Setup DNS records",
		"verifyDomainOwnershipExplanation_msg": "We need to verify that you are the owner of the domain: {domain}",
		"verifyDomainOwnership_title": "Authorization check",
		"verifyOwnershipTXTrecord_msg": "Please configure a new DNS record of type TXT with the value shown below.",
		"viewEvent_action": "View event",
		"viewNextPeriod_action": "View next period",
		"viewPrevPeriod_action": "View previous period",
		"viewToday_action": "View current period",
		"view_label": "View",
		"vitor_alt": "Black-and white high-contrast image of a man sipping from a cup of coffee, knowing his data is secure.",
		"waitingForApproval_msg": "Sorry, you are currently not allowed to send or receive emails because your account was marked for approval. This process is necessary to offer a privacy-friendly registration and prevent mass registrations at the same time. Your account will normally be automatically approved after 48 hours. Thank you for your patience!",
		"waitingForU2f_msg": "Waiting for security keyâ€¦",
		"wantToSendReport_msg": "Something unexpected went wrong. Do you want to send an error report?  You can add a message to help us fix this error.",
		"wasThisHelpful_msg": "Was this helpful?",
		"webAssemblyNotSupported1_msg": "Your browser does not support WebAssembly and will not be supported in future versions of Tuta.",
		"webAssemblyNotSupported2_msg": "Please upgrade your browser or download our app.",
		"websites_label": "Websites",
		"weekNumber_label": "Week {week}",
		"weekStart_label": "Week start",
		"weeks_label": "weeks",
		"week_label": "Week",
		"welcome_label": "Welcome!",
		"welcome_text": "Welcome to Tuta!",
		"whatIsPhishing_msg": "What is phishing?",
		"whatsapp_label": "WhatsApp",
		"when_label": "When",
		"whitelabel.custom_title": "Custom branding",
		"whitelabel.custom_tooltip": "Whitelabel Tuta with your own branding by defining the logos and colors of the Tuta web, mobile and desktop clients.",
		"whitelabel.login_title": "Login on own website",
		"whitelabel.login_tooltip": "Place the Tuta login on your own website for your employees.",
		"whitelabelDomainExisting_msg": "A whitelabel domain is still existing. Please remove the whitelabel domain.",
		"whitelabelDomainLinkInfo_msg": "With the Unlimited plan, you can whitelabel Tuta according to your own branding. It allows you to activate the Tuta login on your own website (a subdomain), change the look of Tuta according to your corporate identity (e.g. logo & colors). Please see",
		"whitelabelDomainNeeded_msg": "Please first configure your whitelabel domain.",
		"whitelabelDomain_label": "Whitelabel domain",
		"whitelabelRegistrationCode_label": "Registration code",
		"whitelabelRegistrationEmailDomain_label": "Registration email domain",
		"whitelabelThemeDetected_msg": "A custom theme has been detected for this account. Do you want to apply it now?",
		"whitelabel_label": "Whitelabel",
		"who_label": "Who",
		"whyLeave_msg": "We're sorry to see you go! Where can we improve?",
		"work_label": "Work",
		"wrongUserCsvFormat_msg": "Please correct the CSV format of your data to:\n{format}",
		"xing_label": "XING",
		"years_label": "years",
		"year_label": "Year",
		"yesterday_label": "yesterday",
		"yes_label": "Yes",
		"yourCalendars_label": "Your calendars",
		"yourFolders_action": "YOUR FOLDERS",
		"yourMessage_label": "Your message",
		"you_label": "You",
		"localAdminGroup_label": "Local admin group",
		"assignAdminRightsToLocallyAdministratedUserError_msg": "You can't assign global admin rights to a locally administrated user.",
		"localAdminGroups_label": "Local admin groups"
	}
};

//#endregion
export { en_default as default };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
