import { isApp } from "./Env-chunk.js";
import { mithril_default } from "./mithril-chunk.js";
import { InfoLink, lang } from "./LanguageViewModel-chunk.js";
import { createReferralCodePostIn } from "./TypeRefs2-chunk.js";
import { ReferralCodeService } from "./Services-chunk.js";
import { Icons } from "./Icons-chunk.js";
import { TextField, ifAllowedTutaLinks } from "./Dialog-chunk.js";
import { BootIcons } from "./Icon-chunk.js";
import { ButtonSize, IconButton } from "./IconButton-chunk.js";
import { locator } from "./CommonLocator-chunk.js";
import { showSnackBar } from "./SnackBar-chunk.js";
import { copyToClipboard } from "./ClipboardUtils-chunk.js";
import { MoreInfoLink } from "./MoreInfoLink-chunk.js";

//#region src/common/misc/news/items/ReferralLinkViewer.ts
var ReferralLinkViewer = class {
	view(vnode) {
		return mithril_default(".scroll", [
			mithril_default(".h4", lang.get("referralSettings_label")),
			mithril_default("", lang.get("referralLinkLong_msg")),
			mithril_default(TextField, this.getReferralLinkTextFieldAttrs(vnode.attrs.referralLink))
		]);
	}
	getReferralLinkTextFieldAttrs(referralLink) {
		return {
			isReadOnly: true,
			label: "referralLink_label",
			value: referralLink,
			injectionsRight: () => this.renderButtons(referralLink),
			helpLabel: () => ifAllowedTutaLinks(locator.logins, InfoLink.ReferralLink, (link) => [mithril_default(MoreInfoLink, { link })])
		};
	}
	renderButtons(referralLink) {
		if (referralLink === "") return [];
		return [mithril_default(IconButton, {
			title: "copy_action",
			click: () => this.copyAction(referralLink),
			icon: Icons.Copy,
			size: ButtonSize.Compact
		}), mithril_default(IconButton, {
			title: "share_action",
			click: () => this.shareAction(referralLink),
			icon: BootIcons.Share,
			size: ButtonSize.Compact
		})];
	}
	async copyAction(referralLink) {
		await copyToClipboard(referralLink);
		await showSnackBar({
			message: "linkCopied_msg",
			button: {
				label: "close_alt",
				click: () => {}
			}
		});
	}
	async shareAction(referralLink) {
		if (isApp()) {
			const shareMessage = this.getReferralLinkMessage(referralLink);
			return locator.systemFacade.shareText(shareMessage, lang.get("referralSettings_label")).then();
		} else import("./MailEditor2-chunk.js").then((mailEditorModule) => mailEditorModule.writeInviteMail(referralLink));
	}
	getReferralLinkMessage(referralLink) {
		return lang.get("referralLinkShare_msg", { "{referralLink}": referralLink });
	}
};
async function getReferralLink(userController) {
	const customer = await userController.loadCustomer();
	const referralCode = customer.referralCode ? customer.referralCode : await requestNewReferralCode();
	const referralBaseUrl = locator.domainConfigProvider().getCurrentDomainConfig().referralBaseUrl;
	const referralUrl = new URL(referralBaseUrl);
	referralUrl.searchParams.set("ref", referralCode);
	return referralUrl.href;
}
async function requestNewReferralCode() {
	const { referralCode } = await locator.serviceExecutor.post(ReferralCodeService, createReferralCodePostIn({}));
	return referralCode;
}

//#endregion
export { ReferralLinkViewer, getReferralLink };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmVmZXJyYWxMaW5rVmlld2VyLWNodW5rLmpzIiwibmFtZXMiOlsidm5vZGU6IFZub2RlPFJlZmVycmFsTGlua0F0dHJzPiIsInJlZmVycmFsTGluazogc3RyaW5nIiwidXNlckNvbnRyb2xsZXI6IFVzZXJDb250cm9sbGVyIl0sInNvdXJjZXMiOlsiLi4vc3JjL2NvbW1vbi9taXNjL25ld3MvaXRlbXMvUmVmZXJyYWxMaW5rVmlld2VyLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluZm9MaW5rLCBsYW5nIH0gZnJvbSBcIi4uLy4uL0xhbmd1YWdlVmlld01vZGVsLmpzXCJcbmltcG9ydCB7IGlzQXBwIH0gZnJvbSBcIi4uLy4uLy4uL2FwaS9jb21tb24vRW52LmpzXCJcbmltcG9ydCB7IGxvY2F0b3IgfSBmcm9tIFwiLi4vLi4vLi4vYXBpL21haW4vQ29tbW9uTG9jYXRvci5qc1wiXG5pbXBvcnQgeyBjb3B5VG9DbGlwYm9hcmQgfSBmcm9tIFwiLi4vLi4vQ2xpcGJvYXJkVXRpbHMuanNcIlxuaW1wb3J0IHsgc2hvd1NuYWNrQmFyIH0gZnJvbSBcIi4uLy4uLy4uL2d1aS9iYXNlL1NuYWNrQmFyLmpzXCJcbmltcG9ydCB7IGNyZWF0ZVJlZmVycmFsQ29kZVBvc3RJbiB9IGZyb20gXCIuLi8uLi8uLi9hcGkvZW50aXRpZXMvc3lzL1R5cGVSZWZzLmpzXCJcbmltcG9ydCB7IFJlZmVycmFsQ29kZVNlcnZpY2UgfSBmcm9tIFwiLi4vLi4vLi4vYXBpL2VudGl0aWVzL3N5cy9TZXJ2aWNlcy5qc1wiXG5pbXBvcnQgeyBUZXh0RmllbGQsIFRleHRGaWVsZEF0dHJzIH0gZnJvbSBcIi4uLy4uLy4uL2d1aS9iYXNlL1RleHRGaWVsZC5qc1wiXG5pbXBvcnQgbSwgeyBDaGlsZHJlbiwgQ29tcG9uZW50LCBWbm9kZSB9IGZyb20gXCJtaXRocmlsXCJcbmltcG9ydCB7IEljb25CdXR0b24gfSBmcm9tIFwiLi4vLi4vLi4vZ3VpL2Jhc2UvSWNvbkJ1dHRvbi5qc1wiXG5pbXBvcnQgeyBCb290SWNvbnMgfSBmcm9tIFwiLi4vLi4vLi4vZ3VpL2Jhc2UvaWNvbnMvQm9vdEljb25zLmpzXCJcbmltcG9ydCB7IEJ1dHRvblNpemUgfSBmcm9tIFwiLi4vLi4vLi4vZ3VpL2Jhc2UvQnV0dG9uU2l6ZS5qc1wiXG5pbXBvcnQgeyBJY29ucyB9IGZyb20gXCIuLi8uLi8uLi9ndWkvYmFzZS9pY29ucy9JY29ucy5qc1wiXG5pbXBvcnQgeyBpZkFsbG93ZWRUdXRhTGlua3MgfSBmcm9tIFwiLi4vLi4vLi4vZ3VpL2Jhc2UvR3VpVXRpbHMuanNcIlxuaW1wb3J0IHsgVXNlckNvbnRyb2xsZXIgfSBmcm9tIFwiLi4vLi4vLi4vYXBpL21haW4vVXNlckNvbnRyb2xsZXIuanNcIlxuaW1wb3J0IHsgTW9yZUluZm9MaW5rIH0gZnJvbSBcIi4uL01vcmVJbmZvTGluay5qc1wiXG5cbmV4cG9ydCB0eXBlIFJlZmVycmFsTGlua0F0dHJzID0ge1xuXHRyZWZlcnJhbExpbms6IHN0cmluZ1xufVxuXG4vKipcbiAqIENvbXBvbmVudCB0byBkaXNwbGF5IHRoZSBzaGFyYWJsZSByZWZlcnJhbCBsaW5rLlxuICovXG5leHBvcnQgY2xhc3MgUmVmZXJyYWxMaW5rVmlld2VyIGltcGxlbWVudHMgQ29tcG9uZW50PFJlZmVycmFsTGlua0F0dHJzPiB7XG5cdHZpZXcodm5vZGU6IFZub2RlPFJlZmVycmFsTGlua0F0dHJzPik6IENoaWxkcmVuIHtcblx0XHRyZXR1cm4gbShcIi5zY3JvbGxcIiwgW1xuXHRcdFx0bShcIi5oNFwiLCBsYW5nLmdldChcInJlZmVycmFsU2V0dGluZ3NfbGFiZWxcIikpLFxuXHRcdFx0bShcIlwiLCBsYW5nLmdldChcInJlZmVycmFsTGlua0xvbmdfbXNnXCIpKSxcblx0XHRcdG0oVGV4dEZpZWxkLCB0aGlzLmdldFJlZmVycmFsTGlua1RleHRGaWVsZEF0dHJzKHZub2RlLmF0dHJzLnJlZmVycmFsTGluaykpLFxuXHRcdF0pXG5cdH1cblxuXHRnZXRSZWZlcnJhbExpbmtUZXh0RmllbGRBdHRycyhyZWZlcnJhbExpbms6IHN0cmluZyk6IFRleHRGaWVsZEF0dHJzIHtcblx0XHRyZXR1cm4ge1xuXHRcdFx0aXNSZWFkT25seTogdHJ1ZSxcblx0XHRcdGxhYmVsOiBcInJlZmVycmFsTGlua19sYWJlbFwiLFxuXHRcdFx0dmFsdWU6IHJlZmVycmFsTGluayxcblx0XHRcdGluamVjdGlvbnNSaWdodDogKCkgPT4gdGhpcy5yZW5kZXJCdXR0b25zKHJlZmVycmFsTGluayksXG5cdFx0XHRoZWxwTGFiZWw6ICgpID0+IGlmQWxsb3dlZFR1dGFMaW5rcyhsb2NhdG9yLmxvZ2lucywgSW5mb0xpbmsuUmVmZXJyYWxMaW5rLCAobGluaykgPT4gW20oTW9yZUluZm9MaW5rLCB7IGxpbms6IGxpbmsgfSldKSxcblx0XHR9XG5cdH1cblxuXHRwcml2YXRlIHJlbmRlckJ1dHRvbnMocmVmZXJyYWxMaW5rOiBzdHJpbmcpOiBDaGlsZHJlbiB7XG5cdFx0aWYgKHJlZmVycmFsTGluayA9PT0gXCJcIikge1xuXHRcdFx0cmV0dXJuIFtdIC8vIHJlZmVycmFsIGxpbmsgbm90IGF2YWlsYWJsZSB5ZXRcblx0XHR9XG5cblx0XHRyZXR1cm4gW1xuXHRcdFx0bShJY29uQnV0dG9uLCB7XG5cdFx0XHRcdHRpdGxlOiBcImNvcHlfYWN0aW9uXCIsXG5cdFx0XHRcdGNsaWNrOiAoKSA9PiB0aGlzLmNvcHlBY3Rpb24ocmVmZXJyYWxMaW5rKSxcblx0XHRcdFx0aWNvbjogSWNvbnMuQ29weSxcblx0XHRcdFx0c2l6ZTogQnV0dG9uU2l6ZS5Db21wYWN0LFxuXHRcdFx0fSksXG5cdFx0XHRtKEljb25CdXR0b24sIHtcblx0XHRcdFx0dGl0bGU6IFwic2hhcmVfYWN0aW9uXCIsXG5cdFx0XHRcdGNsaWNrOiAoKSA9PiB0aGlzLnNoYXJlQWN0aW9uKHJlZmVycmFsTGluayksXG5cdFx0XHRcdGljb246IEJvb3RJY29ucy5TaGFyZSxcblx0XHRcdFx0c2l6ZTogQnV0dG9uU2l6ZS5Db21wYWN0LFxuXHRcdFx0fSksXG5cdFx0XVxuXHR9XG5cblx0cHJpdmF0ZSBhc3luYyBjb3B5QWN0aW9uKHJlZmVycmFsTGluazogc3RyaW5nKTogUHJvbWlzZTx2b2lkPiB7XG5cdFx0YXdhaXQgY29weVRvQ2xpcGJvYXJkKHJlZmVycmFsTGluaylcblx0XHRhd2FpdCBzaG93U25hY2tCYXIoe1xuXHRcdFx0bWVzc2FnZTogXCJsaW5rQ29waWVkX21zZ1wiLFxuXHRcdFx0YnV0dG9uOiB7XG5cdFx0XHRcdGxhYmVsOiBcImNsb3NlX2FsdFwiLFxuXHRcdFx0XHRjbGljazogKCkgPT4ge30sXG5cdFx0XHR9LFxuXHRcdH0pXG5cdH1cblxuXHRwcml2YXRlIGFzeW5jIHNoYXJlQWN0aW9uKHJlZmVycmFsTGluazogc3RyaW5nKTogUHJvbWlzZTx2b2lkPiB7XG5cdFx0aWYgKGlzQXBwKCkpIHtcblx0XHRcdC8vIG9wZW4gbmF0aXZlIHNoYXJlIGRpYWxvZyBvbiBtb2JpbGVcblx0XHRcdGNvbnN0IHNoYXJlTWVzc2FnZSA9IHRoaXMuZ2V0UmVmZXJyYWxMaW5rTWVzc2FnZShyZWZlcnJhbExpbmspXG5cdFx0XHRyZXR1cm4gbG9jYXRvci5zeXN0ZW1GYWNhZGUuc2hhcmVUZXh0KHNoYXJlTWVzc2FnZSwgbGFuZy5nZXQoXCJyZWZlcnJhbFNldHRpbmdzX2xhYmVsXCIpKS50aGVuKClcblx0XHR9IGVsc2Uge1xuXHRcdFx0Ly8gb3RoZXJ3aXNlIHNoYXJlIHZpYSBNYWlsRWRpdG9yXG5cdFx0XHRpbXBvcnQoXCIuLi8uLi8uLi8uLi9tYWlsLWFwcC9tYWlsL2VkaXRvci9NYWlsRWRpdG9yLmpzXCIpLnRoZW4oKG1haWxFZGl0b3JNb2R1bGUpID0+IG1haWxFZGl0b3JNb2R1bGUud3JpdGVJbnZpdGVNYWlsKHJlZmVycmFsTGluaykpXG5cdFx0fVxuXHR9XG5cblx0cHJpdmF0ZSBnZXRSZWZlcnJhbExpbmtNZXNzYWdlKHJlZmVycmFsTGluazogc3RyaW5nKTogc3RyaW5nIHtcblx0XHRyZXR1cm4gbGFuZy5nZXQoXCJyZWZlcnJhbExpbmtTaGFyZV9tc2dcIiwge1xuXHRcdFx0XCJ7cmVmZXJyYWxMaW5rfVwiOiByZWZlcnJhbExpbmssXG5cdFx0fSlcblx0fVxufVxuXG4vKipcbiAqIEdldCB0aGUgcmVmZXJyYWwgbGluayBmb3IgdGhlIGxvZ2dlZC1pbiB1c2VyXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRSZWZlcnJhbExpbmsodXNlckNvbnRyb2xsZXI6IFVzZXJDb250cm9sbGVyKTogUHJvbWlzZTxzdHJpbmc+IHtcblx0Y29uc3QgY3VzdG9tZXIgPSBhd2FpdCB1c2VyQ29udHJvbGxlci5sb2FkQ3VzdG9tZXIoKVxuXHRjb25zdCByZWZlcnJhbENvZGUgPSBjdXN0b21lci5yZWZlcnJhbENvZGUgPyBjdXN0b21lci5yZWZlcnJhbENvZGUgOiBhd2FpdCByZXF1ZXN0TmV3UmVmZXJyYWxDb2RlKClcblx0Y29uc3QgcmVmZXJyYWxCYXNlVXJsID0gbG9jYXRvci5kb21haW5Db25maWdQcm92aWRlcigpLmdldEN1cnJlbnREb21haW5Db25maWcoKS5yZWZlcnJhbEJhc2VVcmxcblx0Y29uc3QgcmVmZXJyYWxVcmwgPSBuZXcgVVJMKHJlZmVycmFsQmFzZVVybClcblx0cmVmZXJyYWxVcmwuc2VhcmNoUGFyYW1zLnNldChcInJlZlwiLCByZWZlcnJhbENvZGUpXG5cdHJldHVybiByZWZlcnJhbFVybC5ocmVmXG59XG5cbmFzeW5jIGZ1bmN0aW9uIHJlcXVlc3ROZXdSZWZlcnJhbENvZGUoKTogUHJvbWlzZTxzdHJpbmc+IHtcblx0Y29uc3QgeyByZWZlcnJhbENvZGUgfSA9IGF3YWl0IGxvY2F0b3Iuc2VydmljZUV4ZWN1dG9yLnBvc3QoUmVmZXJyYWxDb2RlU2VydmljZSwgY3JlYXRlUmVmZXJyYWxDb2RlUG9zdEluKHt9KSlcblx0cmV0dXJuIHJlZmVycmFsQ29kZVxufVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7SUF3QmEscUJBQU4sTUFBaUU7Q0FDdkUsS0FBS0EsT0FBMkM7QUFDL0MsU0FBTyxnQkFBRSxXQUFXO0dBQ25CLGdCQUFFLE9BQU8sS0FBSyxJQUFJLHlCQUF5QixDQUFDO0dBQzVDLGdCQUFFLElBQUksS0FBSyxJQUFJLHVCQUF1QixDQUFDO0dBQ3ZDLGdCQUFFLFdBQVcsS0FBSyw4QkFBOEIsTUFBTSxNQUFNLGFBQWEsQ0FBQztFQUMxRSxFQUFDO0NBQ0Y7Q0FFRCw4QkFBOEJDLGNBQXNDO0FBQ25FLFNBQU87R0FDTixZQUFZO0dBQ1osT0FBTztHQUNQLE9BQU87R0FDUCxpQkFBaUIsTUFBTSxLQUFLLGNBQWMsYUFBYTtHQUN2RCxXQUFXLE1BQU0sbUJBQW1CLFFBQVEsUUFBUSxTQUFTLGNBQWMsQ0FBQyxTQUFTLENBQUMsZ0JBQUUsY0FBYyxFQUFRLEtBQU0sRUFBQyxBQUFDLEVBQUM7RUFDdkg7Q0FDRDtDQUVELEFBQVEsY0FBY0EsY0FBZ0M7QUFDckQsTUFBSSxpQkFBaUIsR0FDcEIsUUFBTyxDQUFFO0FBR1YsU0FBTyxDQUNOLGdCQUFFLFlBQVk7R0FDYixPQUFPO0dBQ1AsT0FBTyxNQUFNLEtBQUssV0FBVyxhQUFhO0dBQzFDLE1BQU0sTUFBTTtHQUNaLE1BQU0sV0FBVztFQUNqQixFQUFDLEVBQ0YsZ0JBQUUsWUFBWTtHQUNiLE9BQU87R0FDUCxPQUFPLE1BQU0sS0FBSyxZQUFZLGFBQWE7R0FDM0MsTUFBTSxVQUFVO0dBQ2hCLE1BQU0sV0FBVztFQUNqQixFQUFDLEFBQ0Y7Q0FDRDtDQUVELE1BQWMsV0FBV0EsY0FBcUM7QUFDN0QsUUFBTSxnQkFBZ0IsYUFBYTtBQUNuQyxRQUFNLGFBQWE7R0FDbEIsU0FBUztHQUNULFFBQVE7SUFDUCxPQUFPO0lBQ1AsT0FBTyxNQUFNLENBQUU7R0FDZjtFQUNELEVBQUM7Q0FDRjtDQUVELE1BQWMsWUFBWUEsY0FBcUM7QUFDOUQsTUFBSSxPQUFPLEVBQUU7R0FFWixNQUFNLGVBQWUsS0FBSyx1QkFBdUIsYUFBYTtBQUM5RCxVQUFPLFFBQVEsYUFBYSxVQUFVLGNBQWMsS0FBSyxJQUFJLHlCQUF5QixDQUFDLENBQUMsTUFBTTtFQUM5RixNQUVBLFFBQU8sMEJBQWtELEtBQUssQ0FBQyxxQkFBcUIsaUJBQWlCLGdCQUFnQixhQUFhLENBQUM7Q0FFcEk7Q0FFRCxBQUFRLHVCQUF1QkEsY0FBOEI7QUFDNUQsU0FBTyxLQUFLLElBQUkseUJBQXlCLEVBQ3hDLGtCQUFrQixhQUNsQixFQUFDO0NBQ0Y7QUFDRDtBQUtNLGVBQWUsZ0JBQWdCQyxnQkFBaUQ7Q0FDdEYsTUFBTSxXQUFXLE1BQU0sZUFBZSxjQUFjO0NBQ3BELE1BQU0sZUFBZSxTQUFTLGVBQWUsU0FBUyxlQUFlLE1BQU0sd0JBQXdCO0NBQ25HLE1BQU0sa0JBQWtCLFFBQVEsc0JBQXNCLENBQUMsd0JBQXdCLENBQUM7Q0FDaEYsTUFBTSxjQUFjLElBQUksSUFBSTtBQUM1QixhQUFZLGFBQWEsSUFBSSxPQUFPLGFBQWE7QUFDakQsUUFBTyxZQUFZO0FBQ25CO0FBRUQsZUFBZSx5QkFBMEM7Q0FDeEQsTUFBTSxFQUFFLGNBQWMsR0FBRyxNQUFNLFFBQVEsZ0JBQWdCLEtBQUsscUJBQXFCLHlCQUF5QixDQUFFLEVBQUMsQ0FBQztBQUM5RyxRQUFPO0FBQ1AifQ==