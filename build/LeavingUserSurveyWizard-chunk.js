import { mithril_default } from "./mithril-chunk.js";
import { defer } from "./dist2-chunk.js";
import { lang } from "./LanguageViewModel-chunk.js";
import { styles } from "./styles-chunk.js";
import { theme } from "./theme-chunk.js";
import { DialogType, DropDownSelector } from "./Dialog-chunk.js";
import { LoginButton } from "./LoginButton-chunk.js";
import { HtmlEditor, HtmlEditorMode } from "./HtmlEditor-chunk.js";
import { WizardEventType, createWizardDialog, emitWizardEvent, wizardPageWrapper } from "./WizardDialog-chunk.js";

//#region src/common/subscription/SetupLeavingUserSurveyPage.ts
var SetupLeavingUserSurveyPage = class {
	view(vnode) {
		return mithril_default("#leaving-user-survey-dialog.pt.flex-center", [mithril_default(".flex.flex-column.max-width-m.pt.pb.plr-l", { style: {
			minHeight: styles.isDesktopLayout() ? "850px" : "",
			minWidth: styles.isDesktopLayout() ? "450px" : "360px"
		} }, [
			mithril_default(".mb", { style: {
				height: styles.isDesktopLayout() ? "360px" : "",
				...vnode.attrs.imageStyle
			} }, mithril_default("img.pb.block.full-width.height-100p", {
				src: `${window.tutao.appState.prefixWithoutFile}/images/leaving-wizard/${vnode.attrs.image}.png`,
				alt: "",
				rel: "noreferrer",
				loading: "lazy",
				decoding: "async"
			})),
			mithril_default("h3.center.b", lang.get(vnode.attrs.mainMessage)),
			mithril_default("p.center", { style: { height: styles.isDesktopLayout() ? "45px" : "77.5px" } }, lang.get(vnode.attrs.secondaryMessage)),
			vnode.children,
			mithril_default(".full-width", { style: { margin: styles.isDesktopLayout() ? "auto 0 0 0" : "16px 0 0 0" } }, mithril_default(LoginButton, {
				label: vnode.attrs.nextButtonLabel,
				onclick: () => vnode.attrs.closeAction(),
				class: vnode.attrs.nextButtonEnabled ? "no-hover button-bg" : "",
				disabled: vnode.attrs.nextButtonEnabled
			}))
		])]);
	}
};

//#endregion
//#region src/common/subscription/LeavingUserSurveyCategoryPage.ts
var LeavingUserSurveyCategoryPage = class {
	_dom = null;
	oncreate(vnode) {
		this._dom = vnode.dom;
	}
	view(vnode) {
		return mithril_default(SetupLeavingUserSurveyPage, {
			closeAction: () => this.showNextPage(),
			nextButtonLabel: "next_action",
			nextButtonEnabled: !vnode.attrs.data.category,
			image: "main",
			mainMessage: "surveyMainMessageDelete_label",
			secondaryMessage: vnode.attrs.data.showDowngradeMessage ? "surveySecondaryMessageDowngrade_label" : "surveySecondaryMessageDelete_label"
		}, [mithril_default(DropDownSelector, {
			style: {
				border: `2px solid ${theme.content_border}`,
				borderRadius: "6px",
				padding: "4px 8px"
			},
			doShowBorder: false,
			label: "surveyUnhappy_label",
			items: this.getCategoryDropdownItems(vnode.attrs.data.showPriceCategory),
			selectedValue: vnode.attrs.data.category,
			selectionChangedHandler: (category) => {
				vnode.attrs.data.category = category;
			},
			dropdownWidth: 350
		}), mithril_default(".mlr-s.mt-xs", mithril_default("small", lang.get("cancellationConfirmation_msg")))]);
	}
	getCategoryDropdownItems(showPriceCategory) {
		const items = [
			{
				name: lang.get("experienceSamplingAnswer_label"),
				value: null
			},
			{
				name: lang.get("surveyPrice_label"),
				value: "0"
			},
			{
				name: lang.get("surveyAccountProblems_label"),
				value: "1"
			},
			{
				name: lang.get("surveyMissingFeature_label"),
				value: "2"
			},
			{
				name: lang.get("surveyFeatureDesignProblems_label"),
				value: "3"
			},
			{
				name: lang.get("surveyOtherReason_label"),
				value: "4"
			}
		];
		if (!showPriceCategory) items.splice(1, 1);
		return items;
	}
	showNextPage() {
		if (this._dom) emitWizardEvent(this._dom, WizardEventType.SHOW_NEXT_PAGE);
	}
};
var LeavingUserSurveyPageAttrs = class {
	data;
	constructor(leavingUserSurveyData) {
		this.data = leavingUserSurveyData;
	}
	headerTitle() {
		return "survey_label";
	}
	nextAction(showErrorDialog) {
		return Promise.resolve(this.data.category != null);
	}
	isSkipAvailable() {
		return false;
	}
	isEnabled() {
		return true;
	}
};

//#endregion
//#region src/common/subscription/LeavingUserSurveyConstants.ts
const SURVEY_VERSION_NUMBER = "0";
let CategoryType = function(CategoryType$1) {
	CategoryType$1["Price"] = "0";
	CategoryType$1["Account"] = "1";
	CategoryType$1["Feature"] = "2";
	CategoryType$1["Problem"] = "3";
	CategoryType$1["Other"] = "4";
	return CategoryType$1;
}({});
function getCategoryType(category) {
	return category;
}
const CATEGORY_TO_IMAGE = new Map([
	[CategoryType.Price, {
		image: "price",
		translationKey: "surveyPrice_label"
	}],
	[CategoryType.Account, {
		image: "account",
		translationKey: "surveyAccountProblems_label"
	}],
	[CategoryType.Feature, {
		image: "feature",
		translationKey: "surveyMissingFeature_label"
	}],
	[CategoryType.Problem, {
		image: "problem",
		translationKey: "surveyFeatureDesignProblems_label"
	}],
	[CategoryType.Other, {
		image: "other",
		translationKey: "surveyOtherReason_label"
	}]
]);
const CATEGORY_TO_REASON = new Map([
	[CategoryType.Price, [
		{
			value: "0",
			translationKey: "surveyPriceReasonPaidFeatures_label"
		},
		{
			value: "1",
			translationKey: "surveyPriceReasonTooExpensive_label"
		},
		{
			value: "2",
			translationKey: "surveyPriceReasonPricesTooHigh_label"
		},
		{
			value: "3",
			translationKey: "surveyPriceReasonStudentDiscount_label"
		},
		{
			value: "4",
			translationKey: "surveyPriceReasonFamilyDiscount_label"
		},
		{
			value: "5",
			translationKey: "surveyPriceReasonAutoRenewal_label"
		},
		{
			value: "6",
			translationKey: "surveyPriceReasonPaymentNotWorking_label"
		},
		{
			value: "7",
			translationKey: "surveyOtherReasonProvideDetails_label"
		}
	]],
	[CategoryType.Account, [
		{
			value: "8",
			translationKey: "surveyAccountReasonAccountApproval_label"
		},
		{
			value: "9",
			translationKey: "surveyAccountReasonSupportNoHelp_label"
		},
		{
			value: "10",
			translationKey: "surveyAccountReasonForgotPassword_label"
		},
		{
			value: "11",
			translationKey: "surveyAccountReasonForgotRecoveryCode_label"
		},
		{
			value: "12",
			translationKey: "surveyAccountReasonCantAddUsers_label"
		},
		{
			value: "13",
			translationKey: "surveyAccountReasonServicesBlocked_label"
		},
		{
			value: "14",
			translationKey: "surveyAccountReasonAccountBlocked_label"
		},
		{
			value: "15",
			translationKey: "surveyOtherReasonProvideDetails_label"
		}
	]],
	[CategoryType.Feature, [
		{
			value: "16",
			translationKey: "surveyFeatureReasonNoIMAP_label"
		},
		{
			value: "17",
			translationKey: "surveyFeatureReasonNoEmailImport_label"
		},
		{
			value: "18",
			translationKey: "surveyFeatureReasonNoAdjustableColumns_label"
		},
		{
			value: "19",
			translationKey: "surveyFeatureReasonNoEmailLabels_label"
		},
		{
			value: "20",
			translationKey: "surveyFeatureReasonMoreFormattingOptions_label"
		},
		{
			value: "21",
			translationKey: "surveyFeatureReasonAutoForward_label"
		},
		{
			value: "22",
			translationKey: "surveyFeatureReasonCloudStorage_label"
		},
		{
			value: "23",
			translationKey: "surveyFeatureReasonEmailTranslations_label"
		},
		{
			value: "24",
			translationKey: "surveyFeatureReasonOther_label"
		}
	]],
	[CategoryType.Problem, [
		{
			value: "25",
			translationKey: "surveyProblemReasonSearch_label"
		},
		{
			value: "26",
			translationKey: "surveyProblemReasonCalendar_label"
		},
		{
			value: "27",
			translationKey: "surveyProblemReasonThemeCustomization_label"
		},
		{
			value: "28",
			translationKey: "surveyProblemReasonSpamProtection_label"
		},
		{
			value: "29",
			translationKey: "surveyProblemReasonAppAppearance_label"
		},
		{
			value: "30",
			translationKey: "surveyProblemReasonTooHardToUse_label"
		}
	]],
	[CategoryType.Other, [
		{
			value: "31",
			translationKey: "surveyOtherReasonWrongEmailAddress_label"
		},
		{
			value: "32",
			translationKey: "surveyOtherReasonMergeAccounts_label"
		},
		{
			value: "33",
			translationKey: "surveyOtherReasonProvideDetails_label"
		}
	]]
]);

//#endregion
//#region src/common/subscription/LeavingUserSurveyReasonPage.ts
var LeavingUserSurveyReasonPage = class {
	_dom = null;
	dropdownItemsFromCategory = [];
	customReasonEditor;
	constructor() {
		let NUMBER_OF_EDITOR_LINES = styles.isDesktopLayout() ? 5 : 1;
		this.customReasonEditor = new HtmlEditor().setStaticNumberOfLines(NUMBER_OF_EDITOR_LINES).showBorders().setPlaceholderId("enterDetails_msg").setMode(HtmlEditorMode.HTML).setHtmlMonospace(false).setValue("");
	}
	oncreate(vnode) {
		this._dom = vnode.dom;
	}
	oninit(vnode) {
		this.dropdownItemsFromCategory = this.getDropdownItemsFromCategory(vnode.attrs.data.category);
		vnode.attrs.data.reason = null;
	}
	view(vnode) {
		return mithril_default(SetupLeavingUserSurveyPage, {
			closeAction: () => {
				vnode.attrs.data.details = this.customReasonEditor.getValue();
				vnode.attrs.data.submitted = true;
				this.closeDialog();
			},
			nextButtonLabel: "submit_action",
			nextButtonEnabled: !vnode.attrs.data.reason,
			image: CATEGORY_TO_IMAGE.get(getCategoryType(vnode.attrs.data.category))?.image,
			imageStyle: { paddingBottom: "60px" },
			mainMessage: CATEGORY_TO_IMAGE.get(getCategoryType(vnode.attrs.data.category))?.translationKey,
			secondaryMessage: "surveyReasonSecondaryMessage_label"
		}, [mithril_default(DropDownSelector, {
			style: {
				border: `2px solid ${theme.content_border}`,
				borderRadius: "6px",
				padding: "4px 8px"
			},
			doShowBorder: false,
			label: "surveyChooseReason_label",
			items: this.dropdownItemsFromCategory,
			selectedValue: vnode.attrs.data.reason,
			selectionChangedHandler: (reason) => {
				vnode.attrs.data.reason = reason;
			},
			dropdownWidth: 350
		}), mithril_default(".pt", mithril_default(this.customReasonEditor))]);
	}
	closeDialog() {
		if (this._dom) emitWizardEvent(this._dom, WizardEventType.CLOSE_DIALOG);
	}
	getDropdownItemsFromCategory(category) {
		const categoryType = getCategoryType(category);
		const reasonList = CATEGORY_TO_REASON.get(categoryType);
		const unselected = [{
			name: lang.get("experienceSamplingAnswer_label"),
			value: null
		}];
		if (!reasonList) return [];
		return unselected.concat(reasonList.map((r) => ({
			name: lang.get(r.translationKey),
			value: r.value
		})));
	}
};

//#endregion
//#region src/common/subscription/LeavingUserSurveyWizard.ts
async function showLeavingUserSurveyWizard(showPriceCategory, showDowngradeMessage) {
	let category = null;
	let reason = null;
	let details = null;
	let submitted = false;
	const leavingUserSurveyData = {
		category,
		reason,
		details,
		submitted,
		showPriceCategory,
		showDowngradeMessage
	};
	const wizardPages = [wizardPageWrapper(LeavingUserSurveyCategoryPage, new LeavingUserSurveyPageAttrs(leavingUserSurveyData)), wizardPageWrapper(LeavingUserSurveyReasonPage, new LeavingUserSurveyPageAttrs(leavingUserSurveyData))];
	const deferred = defer();
	const wizardBuilder = createWizardDialog(leavingUserSurveyData, wizardPages, async () => {
		deferred.resolve(leavingUserSurveyData);
	}, DialogType.EditLarge, "surveySkip_action");
	wizardBuilder.dialog.show();
	return deferred.promise;
}

//#endregion
export { SURVEY_VERSION_NUMBER, showLeavingUserSurveyWizard };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,