
//#region src/common/native/worker/RsaApp.ts
var RsaApp = class {
	constructor(nativeCryptoFacade, rng) {
		this.nativeCryptoFacade = nativeCryptoFacade;
		this.rng = rng;
	}
	/**
	* Encrypt bytes with the provided publicKey
	*/
	async encrypt(publicKey, bytes) {
		const seed = this.rng.generateRandomData(32);
		return await this.nativeCryptoFacade.rsaEncrypt(publicKey, bytes, seed);
	}
	/**
	* Decrypt bytes with the provided privateKey
	*/
	async decrypt(privateKey, bytes) {
		return await this.nativeCryptoFacade.rsaDecrypt(privateKey, bytes);
	}
};

//#endregion
export { RsaApp };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUnNhQXBwLWNodW5rLmpzIiwibmFtZXMiOlsibmF0aXZlQ3J5cHRvRmFjYWRlOiBOYXRpdmVDcnlwdG9GYWNhZGUiLCJybmc6IFJhbmRvbWl6ZXIiLCJwdWJsaWNLZXk6IFJzYVB1YmxpY0tleSIsImJ5dGVzOiBVaW50OEFycmF5IiwicHJpdmF0ZUtleTogUnNhUHJpdmF0ZUtleSJdLCJzb3VyY2VzIjpbIi4uL3NyYy9jb21tb24vbmF0aXZlL3dvcmtlci9Sc2FBcHAudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgeyBSYW5kb21pemVyLCBSc2FQcml2YXRlS2V5LCBSc2FQdWJsaWNLZXkgfSBmcm9tIFwiQHR1dGFvL3R1dGFub3RhLWNyeXB0b1wiXG5pbXBvcnQgdHlwZSB7IFJzYUltcGxlbWVudGF0aW9uIH0gZnJvbSBcIi4uLy4uL2FwaS93b3JrZXIvY3J5cHRvL1JzYUltcGxlbWVudGF0aW9uXCJcbmltcG9ydCB7IE5hdGl2ZUNyeXB0b0ZhY2FkZSB9IGZyb20gXCIuLi9jb21tb24vZ2VuZXJhdGVkaXBjL05hdGl2ZUNyeXB0b0ZhY2FkZVwiXG5cbmV4cG9ydCBjbGFzcyBSc2FBcHAgaW1wbGVtZW50cyBSc2FJbXBsZW1lbnRhdGlvbiB7XG5cdGNvbnN0cnVjdG9yKHByaXZhdGUgcmVhZG9ubHkgbmF0aXZlQ3J5cHRvRmFjYWRlOiBOYXRpdmVDcnlwdG9GYWNhZGUsIHByaXZhdGUgcmVhZG9ubHkgcm5nOiBSYW5kb21pemVyKSB7fVxuXG5cdC8qKlxuXHQgKiBFbmNyeXB0IGJ5dGVzIHdpdGggdGhlIHByb3ZpZGVkIHB1YmxpY0tleVxuXHQgKi9cblx0YXN5bmMgZW5jcnlwdChwdWJsaWNLZXk6IFJzYVB1YmxpY0tleSwgYnl0ZXM6IFVpbnQ4QXJyYXkpOiBQcm9taXNlPFVpbnQ4QXJyYXk+IHtcblx0XHRjb25zdCBzZWVkID0gdGhpcy5ybmcuZ2VuZXJhdGVSYW5kb21EYXRhKDMyKVxuXG5cdFx0cmV0dXJuIGF3YWl0IHRoaXMubmF0aXZlQ3J5cHRvRmFjYWRlLnJzYUVuY3J5cHQocHVibGljS2V5LCBieXRlcywgc2VlZClcblx0fVxuXG5cdC8qKlxuXHQgKiBEZWNyeXB0IGJ5dGVzIHdpdGggdGhlIHByb3ZpZGVkIHByaXZhdGVLZXlcblx0ICovXG5cdGFzeW5jIGRlY3J5cHQocHJpdmF0ZUtleTogUnNhUHJpdmF0ZUtleSwgYnl0ZXM6IFVpbnQ4QXJyYXkpOiBQcm9taXNlPFVpbnQ4QXJyYXk+IHtcblx0XHRyZXR1cm4gYXdhaXQgdGhpcy5uYXRpdmVDcnlwdG9GYWNhZGUucnNhRGVjcnlwdChwcml2YXRlS2V5LCBieXRlcylcblx0fVxufVxuIl0sIm1hcHBpbmdzIjoiOztJQUlhLFNBQU4sTUFBMEM7Q0FDaEQsWUFBNkJBLG9CQUF5REMsS0FBaUI7RUFrQnZHLEtBbEI2QjtFQWtCNUIsS0FsQnFGO0NBQW1COzs7O0NBS3pHLE1BQU0sUUFBUUMsV0FBeUJDLE9BQXdDO0VBQzlFLE1BQU0sT0FBTyxLQUFLLElBQUksbUJBQW1CLEdBQUc7QUFFNUMsU0FBTyxNQUFNLEtBQUssbUJBQW1CLFdBQVcsV0FBVyxPQUFPLEtBQUs7Q0FDdkU7Ozs7Q0FLRCxNQUFNLFFBQVFDLFlBQTJCRCxPQUF3QztBQUNoRixTQUFPLE1BQU0sS0FBSyxtQkFBbUIsV0FBVyxZQUFZLE1BQU07Q0FDbEU7QUFDRCJ9