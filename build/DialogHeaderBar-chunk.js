import { mithril_default } from "./mithril-chunk.js";
import { resolveMaybeLazy } from "./dist2-chunk.js";
import { lang } from "./LanguageViewModel-chunk.js";
import { Button } from "./Button-chunk.js";

//#region src/common/gui/base/DialogHeaderBar.ts
var DialogHeaderBar = class {
	view(vnode) {
		const a = Object.assign({}, {
			left: [],
			right: []
		}, vnode.attrs);
		let columnClass = a.middle ? ".flex-third.overflow-hidden" : ".flex-half.overflow-hidden";
		return mithril_default(".dialog-header.plr-l.flex-space-between.dialog-header-line-height", {
			oncreate: ({ dom }) => {
				if (a.create) a.create(dom);
			},
			onremove: () => {
				if (a.remove) a.remove();
			},
			class: vnode.attrs.class
		}, [
			mithril_default(columnClass + ".ml-negative-s", resolveMaybeLazy(a.left).map((a$1) => mithril_default(Button, a$1))),
			a.middle ? mithril_default("#dialog-title.flex-third-middle.overflow-hidden.flex.justify-center.items-center.b", { "data-testid": `dialog:${lang.getTestId(a.middle)}` }, [mithril_default(".text-ellipsis", lang.getTranslationText(a.middle))]) : null,
			mithril_default(columnClass + ".mr-negative-s.flex.justify-end", resolveMaybeLazy(a.right).map((a$1) => mithril_default(Button, a$1)))
		]);
	}
};

//#endregion
export { DialogHeaderBar };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRGlhbG9nSGVhZGVyQmFyLWNodW5rLmpzIiwibmFtZXMiOlsidm5vZGU6IFZub2RlPERpYWxvZ0hlYWRlckJhckF0dHJzPiIsImEiXSwic291cmNlcyI6WyIuLi9zcmMvY29tbW9uL2d1aS9iYXNlL0RpYWxvZ0hlYWRlckJhci50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbSwgeyBDaGlsZHJlbiwgQ29tcG9uZW50LCBWbm9kZSB9IGZyb20gXCJtaXRocmlsXCJcbmltcG9ydCB0eXBlIHsgQnV0dG9uQXR0cnMgfSBmcm9tIFwiLi9CdXR0b24uanNcIlxuaW1wb3J0IHsgQnV0dG9uIH0gZnJvbSBcIi4vQnV0dG9uLmpzXCJcbmltcG9ydCB0eXBlIHsgbGF6eSwgTWF5YmVMYXp5IH0gZnJvbSBcIkB0dXRhby90dXRhbm90YS11dGlsc1wiXG5pbXBvcnQgeyByZXNvbHZlTWF5YmVMYXp5IH0gZnJvbSBcIkB0dXRhby90dXRhbm90YS11dGlsc1wiXG5pbXBvcnQgeyBsYW5nLCBNYXliZVRyYW5zbGF0aW9uIH0gZnJvbSBcIi4uLy4uL21pc2MvTGFuZ3VhZ2VWaWV3TW9kZWwuanNcIlxuXG5leHBvcnQgdHlwZSBEaWFsb2dIZWFkZXJCYXJBdHRycyA9IHtcblx0bGVmdD86IE1heWJlTGF6eTxBcnJheTxCdXR0b25BdHRycz4+XG5cdHJpZ2h0PzogTWF5YmVMYXp5PEFycmF5PEJ1dHRvbkF0dHJzPj5cblx0bWlkZGxlPzogTWF5YmVUcmFuc2xhdGlvblxuXHRjcmVhdGU/OiAoZG9tOiBIVE1MRWxlbWVudCkgPT4gdm9pZFxuXHRyZW1vdmU/OiAoKSA9PiB2b2lkXG5cdG5vSGVhZGVyPzogYm9vbGVhblxuXHRjbGFzcz86IHN0cmluZ1xufVxuXG4vKipcbiAqIEFuIGFjdGlvbiBiYXIgaXMgYSBiYXIgdGhhdCBjb250YWlucyBidXR0b25zIChlaXRoZXIgb24gdGhlIGxlZnQgb3Igb24gdGhlIHJpZ2h0KS5cbiAqL1xuZXhwb3J0IGNsYXNzIERpYWxvZ0hlYWRlckJhciBpbXBsZW1lbnRzIENvbXBvbmVudDxEaWFsb2dIZWFkZXJCYXJBdHRycz4ge1xuXHR2aWV3KHZub2RlOiBWbm9kZTxEaWFsb2dIZWFkZXJCYXJBdHRycz4pOiBDaGlsZHJlbiB7XG5cdFx0Y29uc3QgYSA9IE9iamVjdC5hc3NpZ24oXG5cdFx0XHR7fSxcblx0XHRcdHtcblx0XHRcdFx0bGVmdDogW10sXG5cdFx0XHRcdHJpZ2h0OiBbXSxcblx0XHRcdH0sXG5cdFx0XHR2bm9kZS5hdHRycyxcblx0XHQpXG5cdFx0bGV0IGNvbHVtbkNsYXNzID0gYS5taWRkbGUgPyBcIi5mbGV4LXRoaXJkLm92ZXJmbG93LWhpZGRlblwiIDogXCIuZmxleC1oYWxmLm92ZXJmbG93LWhpZGRlblwiXG5cdFx0cmV0dXJuIG0oXG5cdFx0XHRcIi5kaWFsb2ctaGVhZGVyLnBsci1sLmZsZXgtc3BhY2UtYmV0d2Vlbi5kaWFsb2ctaGVhZGVyLWxpbmUtaGVpZ2h0XCIsXG5cdFx0XHR7XG5cdFx0XHRcdG9uY3JlYXRlOiAoeyBkb20gfSkgPT4ge1xuXHRcdFx0XHRcdGlmIChhLmNyZWF0ZSkgYS5jcmVhdGUoZG9tIGFzIEhUTUxFbGVtZW50KVxuXHRcdFx0XHR9LFxuXHRcdFx0XHRvbnJlbW92ZTogKCkgPT4ge1xuXHRcdFx0XHRcdGlmIChhLnJlbW92ZSkgYS5yZW1vdmUoKVxuXHRcdFx0XHR9LFxuXHRcdFx0XHRjbGFzczogdm5vZGUuYXR0cnMuY2xhc3MsXG5cdFx0XHR9LFxuXHRcdFx0W1xuXHRcdFx0XHRtKFxuXHRcdFx0XHRcdGNvbHVtbkNsYXNzICsgXCIubWwtbmVnYXRpdmUtc1wiLFxuXHRcdFx0XHRcdHJlc29sdmVNYXliZUxhenkoYS5sZWZ0KS5tYXAoKGEpID0+IG0oQnV0dG9uLCBhKSksXG5cdFx0XHRcdCksIC8vIGVsbGlwc2lzIGlzIG5vdCB3b3JraW5nIGlmIHRoZSB0ZXh0IGlzIGRpcmVjdGx5IGluIHRoZSBmbGV4IGVsZW1lbnQsIHNvIGNyZWF0ZSBhIGNoaWxkIGRpdiBmb3IgaXRcblx0XHRcdFx0YS5taWRkbGVcblx0XHRcdFx0XHQ/IG0oXG5cdFx0XHRcdFx0XHRcdFwiI2RpYWxvZy10aXRsZS5mbGV4LXRoaXJkLW1pZGRsZS5vdmVyZmxvdy1oaWRkZW4uZmxleC5qdXN0aWZ5LWNlbnRlci5pdGVtcy1jZW50ZXIuYlwiLFxuXHRcdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdFx0XCJkYXRhLXRlc3RpZFwiOiBgZGlhbG9nOiR7bGFuZy5nZXRUZXN0SWQoYS5taWRkbGUpfWAsXG5cdFx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XHRcdFttKFwiLnRleHQtZWxsaXBzaXNcIiwgbGFuZy5nZXRUcmFuc2xhdGlvblRleHQoYS5taWRkbGUpKV0sXG5cdFx0XHRcdFx0ICApXG5cdFx0XHRcdFx0OiBudWxsLFxuXHRcdFx0XHRtKFxuXHRcdFx0XHRcdGNvbHVtbkNsYXNzICsgXCIubXItbmVnYXRpdmUtcy5mbGV4Lmp1c3RpZnktZW5kXCIsXG5cdFx0XHRcdFx0cmVzb2x2ZU1heWJlTGF6eShhLnJpZ2h0KS5tYXAoKGEpID0+IG0oQnV0dG9uLCBhKSksXG5cdFx0XHRcdCksXG5cdFx0XHRdLFxuXHRcdClcblx0fVxufVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7SUFvQmEsa0JBQU4sTUFBaUU7Q0FDdkUsS0FBS0EsT0FBOEM7RUFDbEQsTUFBTSxJQUFJLE9BQU8sT0FDaEIsQ0FBRSxHQUNGO0dBQ0MsTUFBTSxDQUFFO0dBQ1IsT0FBTyxDQUFFO0VBQ1QsR0FDRCxNQUFNLE1BQ047RUFDRCxJQUFJLGNBQWMsRUFBRSxTQUFTLGdDQUFnQztBQUM3RCxTQUFPLGdCQUNOLHFFQUNBO0dBQ0MsVUFBVSxDQUFDLEVBQUUsS0FBSyxLQUFLO0FBQ3RCLFFBQUksRUFBRSxPQUFRLEdBQUUsT0FBTyxJQUFtQjtHQUMxQztHQUNELFVBQVUsTUFBTTtBQUNmLFFBQUksRUFBRSxPQUFRLEdBQUUsUUFBUTtHQUN4QjtHQUNELE9BQU8sTUFBTSxNQUFNO0VBQ25CLEdBQ0Q7R0FDQyxnQkFDQyxjQUFjLGtCQUNkLGlCQUFpQixFQUFFLEtBQUssQ0FBQyxJQUFJLENBQUNDLFFBQU0sZ0JBQUUsUUFBUUEsSUFBRSxDQUFDLENBQ2pEO0dBQ0QsRUFBRSxTQUNDLGdCQUNBLHNGQUNBLEVBQ0MsZ0JBQWdCLFNBQVMsS0FBSyxVQUFVLEVBQUUsT0FBTyxDQUFDLEVBQ2xELEdBQ0QsQ0FBQyxnQkFBRSxrQkFBa0IsS0FBSyxtQkFBbUIsRUFBRSxPQUFPLENBQUMsQUFBQyxFQUN2RCxHQUNEO0dBQ0gsZ0JBQ0MsY0FBYyxtQ0FDZCxpQkFBaUIsRUFBRSxNQUFNLENBQUMsSUFBSSxDQUFDQSxRQUFNLGdCQUFFLFFBQVFBLElBQUUsQ0FBQyxDQUNsRDtFQUNELEVBQ0Q7Q0FDRDtBQUNEIn0=