import { MailSetKind } from "./TutanotaConstants-chunk.js";

//#region src/mail-app/mail/model/MailChecks.ts
function isSubfolderOfType(system, folder, type) {
	const systemFolder = system.getSystemFolderByType(type);
	return systemFolder != null && system.checkFolderForAncestor(folder, systemFolder._id);
}
function isDraft(mail) {
	return mail.mailDetailsDraft != null;
}
async function isMailInSpamOrTrash(mail, mailModel) {
	const folders = await mailModel.getMailboxFoldersForMail(mail);
	const mailFolder = folders?.getFolderByMail(mail);
	if (folders && mailFolder) return isSpamOrTrashFolder(folders, mailFolder);
else return false;
}
function isSpamOrTrashFolder(system, folder) {
	return folder.folderType === MailSetKind.TRASH || folder.folderType === MailSetKind.SPAM || isSubfolderOfType(system, folder, MailSetKind.TRASH) || isSubfolderOfType(system, folder, MailSetKind.SPAM);
}
function isOfTypeOrSubfolderOf(system, folder, type) {
	return folder.folderType === type || isSubfolderOfType(system, folder, type);
}

//#endregion
export { isDraft, isMailInSpamOrTrash, isOfTypeOrSubfolderOf, isSpamOrTrashFolder, isSubfolderOfType };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWFpbENoZWNrcy1jaHVuay5qcyIsIm5hbWVzIjpbInN5c3RlbTogRm9sZGVyU3lzdGVtIiwiZm9sZGVyOiBNYWlsRm9sZGVyIiwidHlwZTogTWFpbFNldEtpbmQiLCJtYWlsOiBNYWlsIiwibWFpbE1vZGVsOiBNYWlsTW9kZWwiXSwic291cmNlcyI6WyIuLi9zcmMvbWFpbC1hcHAvbWFpbC9tb2RlbC9NYWlsQ2hlY2tzLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vQGJ1bmRsZUludG86Y29tbW9uXG5cbmltcG9ydCB7IE1haWwsIE1haWxGb2xkZXIgfSBmcm9tIFwiLi4vLi4vLi4vY29tbW9uL2FwaS9lbnRpdGllcy90dXRhbm90YS9UeXBlUmVmcy5qc1wiXG5pbXBvcnQgeyBNYWlsTW9kZWwgfSBmcm9tIFwiLi9NYWlsTW9kZWwuanNcIlxuaW1wb3J0IHsgRm9sZGVyU3lzdGVtIH0gZnJvbSBcIi4uLy4uLy4uL2NvbW1vbi9hcGkvY29tbW9uL21haWwvRm9sZGVyU3lzdGVtLmpzXCJcbmltcG9ydCB7IE1haWxTZXRLaW5kIH0gZnJvbSBcIi4uLy4uLy4uL2NvbW1vbi9hcGkvY29tbW9uL1R1dGFub3RhQ29uc3RhbnRzLmpzXCJcblxuZXhwb3J0IGZ1bmN0aW9uIGlzU3ViZm9sZGVyT2ZUeXBlKHN5c3RlbTogRm9sZGVyU3lzdGVtLCBmb2xkZXI6IE1haWxGb2xkZXIsIHR5cGU6IE1haWxTZXRLaW5kKTogYm9vbGVhbiB7XG5cdGNvbnN0IHN5c3RlbUZvbGRlciA9IHN5c3RlbS5nZXRTeXN0ZW1Gb2xkZXJCeVR5cGUodHlwZSlcblx0cmV0dXJuIHN5c3RlbUZvbGRlciAhPSBudWxsICYmIHN5c3RlbS5jaGVja0ZvbGRlckZvckFuY2VzdG9yKGZvbGRlciwgc3lzdGVtRm9sZGVyLl9pZClcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzRHJhZnQobWFpbDogTWFpbCk6IGJvb2xlYW4ge1xuXHRyZXR1cm4gbWFpbC5tYWlsRGV0YWlsc0RyYWZ0ICE9IG51bGxcbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGlzTWFpbEluU3BhbU9yVHJhc2gobWFpbDogTWFpbCwgbWFpbE1vZGVsOiBNYWlsTW9kZWwpOiBQcm9taXNlPGJvb2xlYW4+IHtcblx0Y29uc3QgZm9sZGVycyA9IGF3YWl0IG1haWxNb2RlbC5nZXRNYWlsYm94Rm9sZGVyc0Zvck1haWwobWFpbClcblx0Y29uc3QgbWFpbEZvbGRlciA9IGZvbGRlcnM/LmdldEZvbGRlckJ5TWFpbChtYWlsKVxuXHRpZiAoZm9sZGVycyAmJiBtYWlsRm9sZGVyKSB7XG5cdFx0cmV0dXJuIGlzU3BhbU9yVHJhc2hGb2xkZXIoZm9sZGVycywgbWFpbEZvbGRlcilcblx0fSBlbHNlIHtcblx0XHRyZXR1cm4gZmFsc2Vcblx0fVxufVxuXG4vKipcbiAqIFJldHVybnMgdHJ1ZSBpZiBnaXZlbiBmb2xkZXIgaXMgdGhlIHtAbGluayBNYWlsRm9sZGVyVHlwZS5TUEFNfSBvciB7QGxpbmsgTWFpbEZvbGRlclR5cGUuVFJBU0h9IGZvbGRlciwgb3IgYSBkZXNjZW5kYW50IG9mIHRob3NlIGZvbGRlcnMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc1NwYW1PclRyYXNoRm9sZGVyKHN5c3RlbTogRm9sZGVyU3lzdGVtLCBmb2xkZXI6IE1haWxGb2xkZXIpOiBib29sZWFuIHtcblx0Ly8gbm90IHVzaW5nIGlzT2ZUeXBlT3JTdWJmb2xkZXJPZiBiZWNhdXNlIGNoZWNraW5nIHRoZSB0eXBlIGZpcnN0IGlzIGNoZWFwZXJcblx0cmV0dXJuIChcblx0XHRmb2xkZXIuZm9sZGVyVHlwZSA9PT0gTWFpbFNldEtpbmQuVFJBU0ggfHxcblx0XHRmb2xkZXIuZm9sZGVyVHlwZSA9PT0gTWFpbFNldEtpbmQuU1BBTSB8fFxuXHRcdGlzU3ViZm9sZGVyT2ZUeXBlKHN5c3RlbSwgZm9sZGVyLCBNYWlsU2V0S2luZC5UUkFTSCkgfHxcblx0XHRpc1N1YmZvbGRlck9mVHlwZShzeXN0ZW0sIGZvbGRlciwgTWFpbFNldEtpbmQuU1BBTSlcblx0KVxufVxuXG5leHBvcnQgZnVuY3Rpb24gaXNPZlR5cGVPclN1YmZvbGRlck9mKHN5c3RlbTogRm9sZGVyU3lzdGVtLCBmb2xkZXI6IE1haWxGb2xkZXIsIHR5cGU6IE1haWxTZXRLaW5kKTogYm9vbGVhbiB7XG5cdHJldHVybiBmb2xkZXIuZm9sZGVyVHlwZSA9PT0gdHlwZSB8fCBpc1N1YmZvbGRlck9mVHlwZShzeXN0ZW0sIGZvbGRlciwgdHlwZSlcbn1cbiJdLCJtYXBwaW5ncyI6Ijs7O0FBT08sU0FBUyxrQkFBa0JBLFFBQXNCQyxRQUFvQkMsTUFBNEI7Q0FDdkcsTUFBTSxlQUFlLE9BQU8sc0JBQXNCLEtBQUs7QUFDdkQsUUFBTyxnQkFBZ0IsUUFBUSxPQUFPLHVCQUF1QixRQUFRLGFBQWEsSUFBSTtBQUN0RjtBQUVNLFNBQVMsUUFBUUMsTUFBcUI7QUFDNUMsUUFBTyxLQUFLLG9CQUFvQjtBQUNoQztBQUVNLGVBQWUsb0JBQW9CQSxNQUFZQyxXQUF3QztDQUM3RixNQUFNLFVBQVUsTUFBTSxVQUFVLHlCQUF5QixLQUFLO0NBQzlELE1BQU0sYUFBYSxTQUFTLGdCQUFnQixLQUFLO0FBQ2pELEtBQUksV0FBVyxXQUNkLFFBQU8sb0JBQW9CLFNBQVMsV0FBVztJQUUvQyxRQUFPO0FBRVI7QUFLTSxTQUFTLG9CQUFvQkosUUFBc0JDLFFBQTZCO0FBRXRGLFFBQ0MsT0FBTyxlQUFlLFlBQVksU0FDbEMsT0FBTyxlQUFlLFlBQVksUUFDbEMsa0JBQWtCLFFBQVEsUUFBUSxZQUFZLE1BQU0sSUFDcEQsa0JBQWtCLFFBQVEsUUFBUSxZQUFZLEtBQUs7QUFFcEQ7QUFFTSxTQUFTLHNCQUFzQkQsUUFBc0JDLFFBQW9CQyxNQUE0QjtBQUMzRyxRQUFPLE9BQU8sZUFBZSxRQUFRLGtCQUFrQixRQUFRLFFBQVEsS0FBSztBQUM1RSJ9