import { mithril_default } from "./mithril-chunk.js";
import { lang } from "./LanguageViewModel-chunk.js";
import { theme } from "./theme-chunk.js";

//#region src/common/gui/base/RadioSelector.ts
var RadioSelector = class {
	view({ attrs }) {
		return attrs.options.map((option) => this.renderOption(attrs.name, option, attrs.selectedOption, attrs.class, attrs.onOptionSelected));
	}
	renderOption(groupName, option, selectedOption, optionClass, onOptionSelected) {
		const name = lang.getTranslationText(groupName);
		const valueString = String(option.value);
		const isSelected = option.value === selectedOption;
		const optionId = name + valueString;
		const attrClasses = optionClass != null ? " " + optionClass : "";
		return mithril_default(".state-bg.border.border-radius.flex.items-center.mb.pl-l.pr", {
			class: "button-min-width button-min-height" + attrClasses,
			style: {
				borderColor: isSelected ? theme.content_accent : theme.content_border,
				borderWidth: "2px",
				height: "fit-content"
			},
			onclick: () => {
				onOptionSelected(option.value);
			}
		}, [mithril_default("input[type=radio].m-0.mr-button.content-accent-accent", {
			name: lang.getTranslationText(groupName),
			value: valueString,
			id: optionId,
			checked: isSelected ? true : null
		}), mithril_default("label.b.left.pt-xs.pb-xs", { for: optionId }, lang.getTranslationText(option.name))]);
	}
};

//#endregion
export { RadioSelector };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmFkaW9TZWxlY3Rvci1jaHVuay5qcyIsIm5hbWVzIjpbImdyb3VwTmFtZTogTWF5YmVUcmFuc2xhdGlvbiIsIm9wdGlvbjogUmFkaW9TZWxlY3Rvck9wdGlvbjxUPiIsInNlbGVjdGVkT3B0aW9uOiBUIiwib3B0aW9uQ2xhc3M6IHN0cmluZyB8IHVuZGVmaW5lZCIsIm9uT3B0aW9uU2VsZWN0ZWQ6IChhcmcwOiBUKSA9PiB1bmtub3duIl0sInNvdXJjZXMiOlsiLi4vc3JjL2NvbW1vbi9ndWkvYmFzZS9SYWRpb1NlbGVjdG9yLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHsgTWF5YmVUcmFuc2xhdGlvbiB9IGZyb20gXCIuLi8uLi9taXNjL0xhbmd1YWdlVmlld01vZGVsXCJcbmltcG9ydCB7IGxhbmcgfSBmcm9tIFwiLi4vLi4vbWlzYy9MYW5ndWFnZVZpZXdNb2RlbFwiXG5pbXBvcnQgbSwgeyBDaGlsZHJlbiwgQ29tcG9uZW50LCBWbm9kZSB9IGZyb20gXCJtaXRocmlsXCJcbmltcG9ydCB7IHRoZW1lIH0gZnJvbSBcIi4uL3RoZW1lXCJcblxuZXhwb3J0IHR5cGUgUmFkaW9TZWxlY3Rvck9wdGlvbjxUPiA9IHtcblx0cmVhZG9ubHkgbmFtZTogTWF5YmVUcmFuc2xhdGlvblxuXHRyZWFkb25seSB2YWx1ZTogVFxufVxuZXhwb3J0IHR5cGUgUmFkaW9TZWxlY3RvckF0dHJzPFQ+ID0ge1xuXHQvLyBUaGUgdW5pcXVlIG5hbWUgb2YgdGhlIHJhZGlvIGJ1dHRvbiBncm91cC4gVGhlIGJyb3dzZXIgdXNlcyBpdCB0byBncm91cCB0aGUgcmFkaW8gYnV0dG9ucyB0b2dldGhlci5cblx0bmFtZTogTWF5YmVUcmFuc2xhdGlvblxuXHRvcHRpb25zOiBSZWFkb25seUFycmF5PFJhZGlvU2VsZWN0b3JPcHRpb248VD4+XG5cdGNsYXNzPzogc3RyaW5nXG5cdHNlbGVjdGVkT3B0aW9uOiBUXG5cdG9uT3B0aW9uU2VsZWN0ZWQ6IChhcmcwOiBUKSA9PiB1bmtub3duXG59XG5cbi8qKlxuICogQ29tcG9uZW50IHdoaWNoIHNob3dzIHNlbGVjdGlvbiBmb3IgYSBzaW5nbGUgY2hvaWNlLlxuICovXG5leHBvcnQgY2xhc3MgUmFkaW9TZWxlY3RvcjxUPiBpbXBsZW1lbnRzIENvbXBvbmVudDxSYWRpb1NlbGVjdG9yQXR0cnM8VD4+IHtcblx0dmlldyh7IGF0dHJzIH06IFZub2RlPFJhZGlvU2VsZWN0b3JBdHRyczxUPj4pOiBDaGlsZHJlbiB7XG5cdFx0cmV0dXJuIGF0dHJzLm9wdGlvbnMubWFwKChvcHRpb24pID0+IHRoaXMucmVuZGVyT3B0aW9uKGF0dHJzLm5hbWUsIG9wdGlvbiwgYXR0cnMuc2VsZWN0ZWRPcHRpb24sIGF0dHJzLmNsYXNzLCBhdHRycy5vbk9wdGlvblNlbGVjdGVkKSlcblx0fVxuXG5cdHByaXZhdGUgcmVuZGVyT3B0aW9uKFxuXHRcdGdyb3VwTmFtZTogTWF5YmVUcmFuc2xhdGlvbixcblx0XHRvcHRpb246IFJhZGlvU2VsZWN0b3JPcHRpb248VD4sXG5cdFx0c2VsZWN0ZWRPcHRpb246IFQsXG5cdFx0b3B0aW9uQ2xhc3M6IHN0cmluZyB8IHVuZGVmaW5lZCxcblx0XHRvbk9wdGlvblNlbGVjdGVkOiAoYXJnMDogVCkgPT4gdW5rbm93bixcblx0KTogQ2hpbGRyZW4ge1xuXHRcdGNvbnN0IG5hbWUgPSBsYW5nLmdldFRyYW5zbGF0aW9uVGV4dChncm91cE5hbWUpXG5cdFx0Y29uc3QgdmFsdWVTdHJpbmcgPSBTdHJpbmcob3B0aW9uLnZhbHVlKVxuXHRcdGNvbnN0IGlzU2VsZWN0ZWQgPSBvcHRpb24udmFsdWUgPT09IHNlbGVjdGVkT3B0aW9uXG5cblx0XHQvLyBJRHMgdXNlZCB0byBsaW5rIHRoZSBsYWJlbCBhbmQgZGVzY3JpcHRpb24gZm9yIGFjY2Vzc2liaWxpdHlcblx0XHRjb25zdCBvcHRpb25JZCA9IG5hbWUgKyB2YWx1ZVN0cmluZ1xuXG5cdFx0Y29uc3QgYXR0ckNsYXNzZXMgPSBvcHRpb25DbGFzcyAhPSBudWxsID8gXCIgXCIgKyBvcHRpb25DbGFzcyA6IFwiXCJcblxuXHRcdC8vIFRoZSB3cmFwcGVyIGlzIG5lZWRlZCBiZWNhdXNlIDxpbnB1dD4gaXMgc2VsZi1jbG9zaW5nIGFuZCB3aWxsIG5vdCB0YWtlIHRoZSBsYWJlbCBhcyBhIGNoaWxkXG5cdFx0cmV0dXJuIG0oXG5cdFx0XHRcIi5zdGF0ZS1iZy5ib3JkZXIuYm9yZGVyLXJhZGl1cy5mbGV4Lml0ZW1zLWNlbnRlci5tYi5wbC1sLnByXCIsXG5cdFx0XHR7XG5cdFx0XHRcdC8vIE1ha2UgdGhlIG9wdGlvbiB0aGUgc2FtZSBzaXplIGFzIGEgYnV0dG9uIGlmIGEgZGVzY3JpcHRpb24gaXMgbm90IGdpdmVuXG5cdFx0XHRcdGNsYXNzOiBcImJ1dHRvbi1taW4td2lkdGggYnV0dG9uLW1pbi1oZWlnaHRcIiArIGF0dHJDbGFzc2VzLFxuXHRcdFx0XHRzdHlsZToge1xuXHRcdFx0XHRcdGJvcmRlckNvbG9yOiBpc1NlbGVjdGVkID8gdGhlbWUuY29udGVudF9hY2NlbnQgOiB0aGVtZS5jb250ZW50X2JvcmRlcixcblx0XHRcdFx0XHRib3JkZXJXaWR0aDogXCIycHhcIixcblx0XHRcdFx0XHRoZWlnaHQ6IFwiZml0LWNvbnRlbnRcIixcblx0XHRcdFx0fSxcblx0XHRcdFx0b25jbGljazogKCkgPT4ge1xuXHRcdFx0XHRcdG9uT3B0aW9uU2VsZWN0ZWQob3B0aW9uLnZhbHVlKVxuXHRcdFx0XHR9LFxuXHRcdFx0fSxcblx0XHRcdFtcblx0XHRcdFx0bShcImlucHV0W3R5cGU9cmFkaW9dLm0tMC5tci1idXR0b24uY29udGVudC1hY2NlbnQtYWNjZW50XCIsIHtcblx0XHRcdFx0XHQvKiBUaGUgYG5hbWVgIGF0dHJpYnV0ZSBkZWZpbmVzIHRoZSBncm91cCB0aGUgcmFkaW8gYnV0dG9uIGJlbG9uZ3MgdG8uIE5vdCB0aGUgbmFtZS9sYWJlbCBvZiB0aGUgcmFkaW8gYnV0dG9uIGl0c2VsZi5cblx0XHRcdFx0XHQgKiBTZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSFRNTC9FbGVtZW50L2lucHV0L3JhZGlvI2RlZmluaW5nX2FfcmFkaW9fZ3JvdXBcblx0XHRcdFx0XHQgKi9cblx0XHRcdFx0XHRuYW1lOiBsYW5nLmdldFRyYW5zbGF0aW9uVGV4dChncm91cE5hbWUpLFxuXHRcdFx0XHRcdHZhbHVlOiB2YWx1ZVN0cmluZyxcblx0XHRcdFx0XHRpZDogb3B0aW9uSWQsXG5cdFx0XHRcdFx0Ly8gSGFuZGxlIGNoYW5nZXMgaW4gdmFsdWUgZnJvbSB0aGUgYXR0cmlidXRlc1xuXHRcdFx0XHRcdGNoZWNrZWQ6IGlzU2VsZWN0ZWQgPyB0cnVlIDogbnVsbCxcblx0XHRcdFx0fSksXG5cdFx0XHRcdG0oXCJsYWJlbC5iLmxlZnQucHQteHMucGIteHNcIiwgeyBmb3I6IG9wdGlvbklkIH0sIGxhbmcuZ2V0VHJhbnNsYXRpb25UZXh0KG9wdGlvbi5uYW1lKSksXG5cdFx0XHRdLFxuXHRcdClcblx0fVxufVxuIl0sIm1hcHBpbmdzIjoiOzs7OztJQXFCYSxnQkFBTixNQUFtRTtDQUN6RSxLQUFLLEVBQUUsT0FBcUMsRUFBWTtBQUN2RCxTQUFPLE1BQU0sUUFBUSxJQUFJLENBQUMsV0FBVyxLQUFLLGFBQWEsTUFBTSxNQUFNLFFBQVEsTUFBTSxnQkFBZ0IsTUFBTSxPQUFPLE1BQU0saUJBQWlCLENBQUM7Q0FDdEk7Q0FFRCxBQUFRLGFBQ1BBLFdBQ0FDLFFBQ0FDLGdCQUNBQyxhQUNBQyxrQkFDVztFQUNYLE1BQU0sT0FBTyxLQUFLLG1CQUFtQixVQUFVO0VBQy9DLE1BQU0sY0FBYyxPQUFPLE9BQU8sTUFBTTtFQUN4QyxNQUFNLGFBQWEsT0FBTyxVQUFVO0VBR3BDLE1BQU0sV0FBVyxPQUFPO0VBRXhCLE1BQU0sY0FBYyxlQUFlLE9BQU8sTUFBTSxjQUFjO0FBRzlELFNBQU8sZ0JBQ04sK0RBQ0E7R0FFQyxPQUFPLHVDQUF1QztHQUM5QyxPQUFPO0lBQ04sYUFBYSxhQUFhLE1BQU0saUJBQWlCLE1BQU07SUFDdkQsYUFBYTtJQUNiLFFBQVE7R0FDUjtHQUNELFNBQVMsTUFBTTtBQUNkLHFCQUFpQixPQUFPLE1BQU07R0FDOUI7RUFDRCxHQUNELENBQ0MsZ0JBQUUseURBQXlEO0dBSTFELE1BQU0sS0FBSyxtQkFBbUIsVUFBVTtHQUN4QyxPQUFPO0dBQ1AsSUFBSTtHQUVKLFNBQVMsYUFBYSxPQUFPO0VBQzdCLEVBQUMsRUFDRixnQkFBRSw0QkFBNEIsRUFBRSxLQUFLLFNBQVUsR0FBRSxLQUFLLG1CQUFtQixPQUFPLEtBQUssQ0FBQyxBQUN0RixFQUNEO0NBQ0Q7QUFDRCJ9