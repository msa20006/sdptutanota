import { AdminGroupKeyRotationPostInTypeRef, AffiliatePartnerKpiServiceGetOutTypeRef, AlarmServicePostTypeRef, AppStoreSubscriptionGetInTypeRef, AppStoreSubscriptionGetOutTypeRef, AutoLoginDataDeleteTypeRef, AutoLoginDataGetTypeRef, AutoLoginDataReturnTypeRef, AutoLoginPostReturnTypeRef, BrandingDomainDataTypeRef, BrandingDomainDeleteDataTypeRef, BrandingDomainGetReturnTypeRef, ChangeKdfPostInTypeRef, ChangePasswordPostInTypeRef, CloseSessionServicePostTypeRef, CreateCustomerServerPropertiesDataTypeRef, CreateCustomerServerPropertiesReturnTypeRef, CreateSessionDataTypeRef, CreateSessionReturnTypeRef, CustomDomainCheckGetInTypeRef, CustomDomainCheckGetOutTypeRef, CustomDomainDataTypeRef, CustomDomainReturnTypeRef, CustomerAccountTerminationPostInTypeRef, CustomerAccountTerminationPostOutTypeRef, DebitServicePutDataTypeRef, DeleteCustomerDataTypeRef, DomainMailAddressAvailabilityDataTypeRef, DomainMailAddressAvailabilityReturnTypeRef, ExternalPropertiesReturnTypeRef, GiftCardCreateDataTypeRef, GiftCardCreateReturnTypeRef, GiftCardDeleteDataTypeRef, GiftCardGetReturnTypeRef, GiftCardRedeemDataTypeRef, GiftCardRedeemGetReturnTypeRef, GroupKeyRotationInfoGetOutTypeRef, GroupKeyRotationPostInTypeRef, InvoiceDataGetInTypeRef, InvoiceDataGetOutTypeRef, LocalAdminRemovalPostInTypeRef, LocationServiceGetReturnTypeRef, MailAddressAliasGetInTypeRef, MailAddressAliasServiceDataDeleteTypeRef, MailAddressAliasServiceDataTypeRef, MailAddressAliasServiceReturnTypeRef, MembershipAddDataTypeRef, MembershipPutInTypeRef, MembershipRemoveDataTypeRef, MultipleMailAddressAvailabilityDataTypeRef, MultipleMailAddressAvailabilityReturnTypeRef, PaymentDataServiceGetDataTypeRef, PaymentDataServiceGetReturnTypeRef, PaymentDataServicePostDataTypeRef, PaymentDataServicePutDataTypeRef, PaymentDataServicePutReturnTypeRef, PlanServiceGetOutTypeRef, PriceServiceDataTypeRef, PriceServiceReturnTypeRef, PublicKeyGetInTypeRef, PublicKeyGetOutTypeRef, PublicKeyPutInTypeRef, ReferralCodeGetInTypeRef, ReferralCodePostInTypeRef, ReferralCodePostOutTypeRef, RegistrationCaptchaServiceDataTypeRef, RegistrationCaptchaServiceGetDataTypeRef, RegistrationCaptchaServiceReturnTypeRef, RegistrationReturnTypeRef, RegistrationServiceDataTypeRef, ResetFactorsDeleteDataTypeRef, ResetPasswordPostInTypeRef, SaltDataTypeRef, SaltReturnTypeRef, SecondFactorAuthAllowedReturnTypeRef, SecondFactorAuthDataTypeRef, SecondFactorAuthDeleteDataTypeRef, SecondFactorAuthGetDataTypeRef, SecondFactorAuthGetReturnTypeRef, SignOrderProcessingAgreementDataTypeRef, SwitchAccountTypePostInTypeRef, SystemKeysReturnTypeRef, TakeOverDeletedAddressDataTypeRef, UpdatePermissionKeyDataTypeRef, UpdateSessionKeysPostInTypeRef, UpgradePriceServiceDataTypeRef, UpgradePriceServiceReturnTypeRef, UserDataDeleteTypeRef, UserGroupKeyRotationPostInTypeRef, VerifierTokenServiceInTypeRef, VerifierTokenServiceOutTypeRef, VersionDataTypeRef, VersionReturnTypeRef } from "./TypeRefs2-chunk.js";

//#region src/common/api/entities/sys/Services.ts
const AdminGroupKeyRotationService = Object.freeze({
	app: "sys",
	name: "AdminGroupKeyRotationService",
	get: null,
	post: {
		data: AdminGroupKeyRotationPostInTypeRef,
		return: null
	},
	put: null,
	delete: null
});
const AffiliatePartnerKpiService = Object.freeze({
	app: "sys",
	name: "AffiliatePartnerKpiService",
	get: {
		data: null,
		return: AffiliatePartnerKpiServiceGetOutTypeRef
	},
	post: null,
	put: null,
	delete: null
});
const AlarmService = Object.freeze({
	app: "sys",
	name: "AlarmService",
	get: null,
	post: {
		data: AlarmServicePostTypeRef,
		return: null
	},
	put: null,
	delete: null
});
const AppStoreSubscriptionService = Object.freeze({
	app: "sys",
	name: "AppStoreSubscriptionService",
	get: {
		data: AppStoreSubscriptionGetInTypeRef,
		return: AppStoreSubscriptionGetOutTypeRef
	},
	post: null,
	put: null,
	delete: null
});
const AutoLoginService = Object.freeze({
	app: "sys",
	name: "AutoLoginService",
	get: {
		data: AutoLoginDataGetTypeRef,
		return: AutoLoginDataReturnTypeRef
	},
	post: {
		data: AutoLoginDataReturnTypeRef,
		return: AutoLoginPostReturnTypeRef
	},
	put: null,
	delete: {
		data: AutoLoginDataDeleteTypeRef,
		return: null
	}
});
const BrandingDomainService = Object.freeze({
	app: "sys",
	name: "BrandingDomainService",
	get: {
		data: null,
		return: BrandingDomainGetReturnTypeRef
	},
	post: {
		data: BrandingDomainDataTypeRef,
		return: null
	},
	put: {
		data: BrandingDomainDataTypeRef,
		return: null
	},
	delete: {
		data: BrandingDomainDeleteDataTypeRef,
		return: null
	}
});
const ChangeKdfService = Object.freeze({
	app: "sys",
	name: "ChangeKdfService",
	get: null,
	post: {
		data: ChangeKdfPostInTypeRef,
		return: null
	},
	put: null,
	delete: null
});
const ChangePasswordService = Object.freeze({
	app: "sys",
	name: "ChangePasswordService",
	get: null,
	post: {
		data: ChangePasswordPostInTypeRef,
		return: null
	},
	put: null,
	delete: null
});
const CloseSessionService = Object.freeze({
	app: "sys",
	name: "CloseSessionService",
	get: null,
	post: {
		data: CloseSessionServicePostTypeRef,
		return: null
	},
	put: null,
	delete: null
});
const CreateCustomerServerProperties = Object.freeze({
	app: "sys",
	name: "CreateCustomerServerProperties",
	get: null,
	post: {
		data: CreateCustomerServerPropertiesDataTypeRef,
		return: CreateCustomerServerPropertiesReturnTypeRef
	},
	put: null,
	delete: null
});
const CustomDomainCheckService = Object.freeze({
	app: "sys",
	name: "CustomDomainCheckService",
	get: {
		data: CustomDomainCheckGetInTypeRef,
		return: CustomDomainCheckGetOutTypeRef
	},
	post: null,
	put: null,
	delete: null
});
const CustomDomainService = Object.freeze({
	app: "sys",
	name: "CustomDomainService",
	get: null,
	post: {
		data: CustomDomainDataTypeRef,
		return: CustomDomainReturnTypeRef
	},
	put: {
		data: CustomDomainDataTypeRef,
		return: null
	},
	delete: {
		data: CustomDomainDataTypeRef,
		return: null
	}
});
const CustomerAccountTerminationService = Object.freeze({
	app: "sys",
	name: "CustomerAccountTerminationService",
	get: null,
	post: {
		data: CustomerAccountTerminationPostInTypeRef,
		return: CustomerAccountTerminationPostOutTypeRef
	},
	put: null,
	delete: null
});
const CustomerPublicKeyService = Object.freeze({
	app: "sys",
	name: "CustomerPublicKeyService",
	get: {
		data: null,
		return: PublicKeyGetOutTypeRef
	},
	post: null,
	put: null,
	delete: null
});
const CustomerService = Object.freeze({
	app: "sys",
	name: "CustomerService",
	get: null,
	post: null,
	put: null,
	delete: {
		data: DeleteCustomerDataTypeRef,
		return: null
	}
});
const DebitService = Object.freeze({
	app: "sys",
	name: "DebitService",
	get: null,
	post: null,
	put: {
		data: DebitServicePutDataTypeRef,
		return: null
	},
	delete: null
});
const DomainMailAddressAvailabilityService = Object.freeze({
	app: "sys",
	name: "DomainMailAddressAvailabilityService",
	get: {
		data: DomainMailAddressAvailabilityDataTypeRef,
		return: DomainMailAddressAvailabilityReturnTypeRef
	},
	post: null,
	put: null,
	delete: null
});
const ExternalPropertiesService = Object.freeze({
	app: "sys",
	name: "ExternalPropertiesService",
	get: {
		data: null,
		return: ExternalPropertiesReturnTypeRef
	},
	post: null,
	put: null,
	delete: null
});
const GiftCardRedeemService = Object.freeze({
	app: "sys",
	name: "GiftCardRedeemService",
	get: {
		data: GiftCardRedeemDataTypeRef,
		return: GiftCardRedeemGetReturnTypeRef
	},
	post: {
		data: GiftCardRedeemDataTypeRef,
		return: null
	},
	put: null,
	delete: null
});
const GiftCardService = Object.freeze({
	app: "sys",
	name: "GiftCardService",
	get: {
		data: null,
		return: GiftCardGetReturnTypeRef
	},
	post: {
		data: GiftCardCreateDataTypeRef,
		return: GiftCardCreateReturnTypeRef
	},
	put: null,
	delete: {
		data: GiftCardDeleteDataTypeRef,
		return: null
	}
});
const GroupKeyRotationInfoService = Object.freeze({
	app: "sys",
	name: "GroupKeyRotationInfoService",
	get: {
		data: null,
		return: GroupKeyRotationInfoGetOutTypeRef
	},
	post: null,
	put: null,
	delete: null
});
const GroupKeyRotationService = Object.freeze({
	app: "sys",
	name: "GroupKeyRotationService",
	get: null,
	post: {
		data: GroupKeyRotationPostInTypeRef,
		return: null
	},
	put: null,
	delete: null
});
const InvoiceDataService = Object.freeze({
	app: "sys",
	name: "InvoiceDataService",
	get: {
		data: InvoiceDataGetInTypeRef,
		return: InvoiceDataGetOutTypeRef
	},
	post: null,
	put: null,
	delete: null
});
const LocalAdminRemovalService = Object.freeze({
	app: "sys",
	name: "LocalAdminRemovalService",
	get: null,
	post: {
		data: LocalAdminRemovalPostInTypeRef,
		return: null
	},
	put: null,
	delete: null
});
const LocationService = Object.freeze({
	app: "sys",
	name: "LocationService",
	get: {
		data: null,
		return: LocationServiceGetReturnTypeRef
	},
	post: null,
	put: null,
	delete: null
});
const MailAddressAliasService = Object.freeze({
	app: "sys",
	name: "MailAddressAliasService",
	get: {
		data: MailAddressAliasGetInTypeRef,
		return: MailAddressAliasServiceReturnTypeRef
	},
	post: {
		data: MailAddressAliasServiceDataTypeRef,
		return: null
	},
	put: null,
	delete: {
		data: MailAddressAliasServiceDataDeleteTypeRef,
		return: null
	}
});
const MembershipService = Object.freeze({
	app: "sys",
	name: "MembershipService",
	get: null,
	post: {
		data: MembershipAddDataTypeRef,
		return: null
	},
	put: {
		data: MembershipPutInTypeRef,
		return: null
	},
	delete: {
		data: MembershipRemoveDataTypeRef,
		return: null
	}
});
const MultipleMailAddressAvailabilityService = Object.freeze({
	app: "sys",
	name: "MultipleMailAddressAvailabilityService",
	get: {
		data: MultipleMailAddressAvailabilityDataTypeRef,
		return: MultipleMailAddressAvailabilityReturnTypeRef
	},
	post: null,
	put: null,
	delete: null
});
const PaymentDataService = Object.freeze({
	app: "sys",
	name: "PaymentDataService",
	get: {
		data: PaymentDataServiceGetDataTypeRef,
		return: PaymentDataServiceGetReturnTypeRef
	},
	post: {
		data: PaymentDataServicePostDataTypeRef,
		return: null
	},
	put: {
		data: PaymentDataServicePutDataTypeRef,
		return: PaymentDataServicePutReturnTypeRef
	},
	delete: null
});
const PlanService = Object.freeze({
	app: "sys",
	name: "PlanService",
	get: {
		data: null,
		return: PlanServiceGetOutTypeRef
	},
	post: null,
	put: null,
	delete: null
});
const PriceService = Object.freeze({
	app: "sys",
	name: "PriceService",
	get: {
		data: PriceServiceDataTypeRef,
		return: PriceServiceReturnTypeRef
	},
	post: null,
	put: null,
	delete: null
});
const PublicKeyService = Object.freeze({
	app: "sys",
	name: "PublicKeyService",
	get: {
		data: PublicKeyGetInTypeRef,
		return: PublicKeyGetOutTypeRef
	},
	post: null,
	put: {
		data: PublicKeyPutInTypeRef,
		return: null
	},
	delete: null
});
const ReferralCodeService = Object.freeze({
	app: "sys",
	name: "ReferralCodeService",
	get: {
		data: ReferralCodeGetInTypeRef,
		return: null
	},
	post: {
		data: ReferralCodePostInTypeRef,
		return: ReferralCodePostOutTypeRef
	},
	put: null,
	delete: null
});
const RegistrationCaptchaService = Object.freeze({
	app: "sys",
	name: "RegistrationCaptchaService",
	get: {
		data: RegistrationCaptchaServiceGetDataTypeRef,
		return: RegistrationCaptchaServiceReturnTypeRef
	},
	post: {
		data: RegistrationCaptchaServiceDataTypeRef,
		return: null
	},
	put: null,
	delete: null
});
const RegistrationService = Object.freeze({
	app: "sys",
	name: "RegistrationService",
	get: {
		data: null,
		return: RegistrationServiceDataTypeRef
	},
	post: {
		data: RegistrationServiceDataTypeRef,
		return: RegistrationReturnTypeRef
	},
	put: null,
	delete: null
});
const ResetFactorsService = Object.freeze({
	app: "sys",
	name: "ResetFactorsService",
	get: null,
	post: null,
	put: null,
	delete: {
		data: ResetFactorsDeleteDataTypeRef,
		return: null
	}
});
const ResetPasswordService = Object.freeze({
	app: "sys",
	name: "ResetPasswordService",
	get: null,
	post: {
		data: ResetPasswordPostInTypeRef,
		return: null
	},
	put: null,
	delete: null
});
const SaltService = Object.freeze({
	app: "sys",
	name: "SaltService",
	get: {
		data: SaltDataTypeRef,
		return: SaltReturnTypeRef
	},
	post: null,
	put: null,
	delete: null
});
const SecondFactorAuthAllowedService = Object.freeze({
	app: "sys",
	name: "SecondFactorAuthAllowedService",
	get: {
		data: null,
		return: SecondFactorAuthAllowedReturnTypeRef
	},
	post: null,
	put: null,
	delete: null
});
const SecondFactorAuthService = Object.freeze({
	app: "sys",
	name: "SecondFactorAuthService",
	get: {
		data: SecondFactorAuthGetDataTypeRef,
		return: SecondFactorAuthGetReturnTypeRef
	},
	post: {
		data: SecondFactorAuthDataTypeRef,
		return: null
	},
	put: null,
	delete: {
		data: SecondFactorAuthDeleteDataTypeRef,
		return: null
	}
});
const SessionService = Object.freeze({
	app: "sys",
	name: "SessionService",
	get: null,
	post: {
		data: CreateSessionDataTypeRef,
		return: CreateSessionReturnTypeRef
	},
	put: null,
	delete: null
});
const SignOrderProcessingAgreementService = Object.freeze({
	app: "sys",
	name: "SignOrderProcessingAgreementService",
	get: null,
	post: {
		data: SignOrderProcessingAgreementDataTypeRef,
		return: null
	},
	put: null,
	delete: null
});
const SwitchAccountTypeService = Object.freeze({
	app: "sys",
	name: "SwitchAccountTypeService",
	get: null,
	post: {
		data: SwitchAccountTypePostInTypeRef,
		return: null
	},
	put: null,
	delete: null
});
const SystemKeysService = Object.freeze({
	app: "sys",
	name: "SystemKeysService",
	get: {
		data: null,
		return: SystemKeysReturnTypeRef
	},
	post: null,
	put: null,
	delete: null
});
const TakeOverDeletedAddressService = Object.freeze({
	app: "sys",
	name: "TakeOverDeletedAddressService",
	get: null,
	post: {
		data: TakeOverDeletedAddressDataTypeRef,
		return: null
	},
	put: null,
	delete: null
});
const UpdatePermissionKeyService = Object.freeze({
	app: "sys",
	name: "UpdatePermissionKeyService",
	get: null,
	post: {
		data: UpdatePermissionKeyDataTypeRef,
		return: null
	},
	put: null,
	delete: null
});
const UpdateSessionKeysService = Object.freeze({
	app: "sys",
	name: "UpdateSessionKeysService",
	get: null,
	post: {
		data: UpdateSessionKeysPostInTypeRef,
		return: null
	},
	put: null,
	delete: null
});
const UpgradePriceService = Object.freeze({
	app: "sys",
	name: "UpgradePriceService",
	get: {
		data: UpgradePriceServiceDataTypeRef,
		return: UpgradePriceServiceReturnTypeRef
	},
	post: null,
	put: null,
	delete: null
});
const UserGroupKeyRotationService = Object.freeze({
	app: "sys",
	name: "UserGroupKeyRotationService",
	get: null,
	post: {
		data: UserGroupKeyRotationPostInTypeRef,
		return: null
	},
	put: null,
	delete: null
});
const UserService = Object.freeze({
	app: "sys",
	name: "UserService",
	get: null,
	post: null,
	put: null,
	delete: {
		data: UserDataDeleteTypeRef,
		return: null
	}
});
const VerifierTokenService = Object.freeze({
	app: "sys",
	name: "VerifierTokenService",
	get: null,
	post: {
		data: VerifierTokenServiceInTypeRef,
		return: VerifierTokenServiceOutTypeRef
	},
	put: null,
	delete: null
});
const VersionService = Object.freeze({
	app: "sys",
	name: "VersionService",
	get: {
		data: VersionDataTypeRef,
		return: VersionReturnTypeRef
	},
	post: null,
	put: null,
	delete: null
});

//#endregion
export { AdminGroupKeyRotationService, AffiliatePartnerKpiService, AlarmService, AppStoreSubscriptionService, BrandingDomainService, ChangeKdfService, ChangePasswordService, CloseSessionService, CreateCustomerServerProperties, CustomDomainCheckService, CustomDomainService, CustomerAccountTerminationService, CustomerService, DebitService, DomainMailAddressAvailabilityService, GiftCardRedeemService, GiftCardService, GroupKeyRotationInfoService, GroupKeyRotationService, InvoiceDataService, LocalAdminRemovalService, LocationService, MailAddressAliasService, MembershipService, MultipleMailAddressAvailabilityService, PaymentDataService, PlanService, PriceService, PublicKeyService, ReferralCodeService, RegistrationCaptchaService, ResetFactorsService, ResetPasswordService, SaltService, SecondFactorAuthService, SessionService, SignOrderProcessingAgreementService, SwitchAccountTypeService, SystemKeysService, TakeOverDeletedAddressService, UpdatePermissionKeyService, UpdateSessionKeysService, UpgradePriceService, UserGroupKeyRotationService, UserService, VerifierTokenService };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,