import { GroupType } from "./TutanotaConstants-chunk.js";

//#region src/common/api/common/utils/GroupUtils.ts
function getEnabledMailAddressesForGroupInfo(groupInfo) {
	let aliases = groupInfo.mailAddressAliases.filter((alias) => alias.enabled).map((alias) => alias.mailAddress);
	if (groupInfo.mailAddress) aliases.unshift(groupInfo.mailAddress);
	return aliases;
}
function getUserGroupMemberships(user, groupType) {
	if (groupType === GroupType.User) return [user.userGroup];
else return user.memberships.filter((m) => m.groupType === groupType);
}
function getGroupInfoDisplayName(groupInfo) {
	if (groupInfo.name) return groupInfo.name;
else if (groupInfo.mailAddress) return groupInfo.mailAddress;
else return "";
}
function compareGroupInfos(a, b) {
	return getGroupInfoDisplayName(a).localeCompare(getGroupInfoDisplayName(b));
}

//#endregion
export { compareGroupInfos, getEnabledMailAddressesForGroupInfo, getGroupInfoDisplayName, getUserGroupMemberships };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiR3JvdXBVdGlscy1jaHVuay5qcyIsIm5hbWVzIjpbImdyb3VwSW5mbzogR3JvdXBJbmZvIiwidXNlcjogVXNlciIsImdyb3VwVHlwZTogR3JvdXBUeXBlIiwiYTogR3JvdXBJbmZvIiwiYjogR3JvdXBJbmZvIl0sInNvdXJjZXMiOlsiLi4vc3JjL2NvbW1vbi9hcGkvY29tbW9uL3V0aWxzL0dyb3VwVXRpbHMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgeyBHcm91cEluZm8sIEdyb3VwTWVtYmVyc2hpcCwgVXNlciB9IGZyb20gXCIuLi8uLi9lbnRpdGllcy9zeXMvVHlwZVJlZnMuanNcIlxuaW1wb3J0IHsgR3JvdXBUeXBlIH0gZnJvbSBcIi4uL1R1dGFub3RhQ29uc3RhbnRzXCJcbmltcG9ydCB7IGxhbmcsIFRyYW5zbGF0aW9uIH0gZnJvbSBcIi4uLy4uLy4uL21pc2MvTGFuZ3VhZ2VWaWV3TW9kZWwuanNcIlxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0RW5hYmxlZE1haWxBZGRyZXNzZXNGb3JHcm91cEluZm8oZ3JvdXBJbmZvOiBHcm91cEluZm8pOiBzdHJpbmdbXSB7XG5cdGxldCBhbGlhc2VzID0gZ3JvdXBJbmZvLm1haWxBZGRyZXNzQWxpYXNlcy5maWx0ZXIoKGFsaWFzKSA9PiBhbGlhcy5lbmFibGVkKS5tYXAoKGFsaWFzKSA9PiBhbGlhcy5tYWlsQWRkcmVzcylcblx0aWYgKGdyb3VwSW5mby5tYWlsQWRkcmVzcykgYWxpYXNlcy51bnNoaWZ0KGdyb3VwSW5mby5tYWlsQWRkcmVzcylcblx0cmV0dXJuIGFsaWFzZXNcbn1cblxuLyoqXG4gKiBQcm92aWRlcyB0aGUgbWVtYmVyc2hpcHMgb2YgdGhlIHVzZXIgd2l0aCB0aGUgZ2l2ZW4gdHlwZS4gSW4gY2FzZSBvZiBhcmVhIGdyb3VwcyBhbGwgZ3JvdXBzIGFyZSByZXR1cm5lZC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldFVzZXJHcm91cE1lbWJlcnNoaXBzKHVzZXI6IFVzZXIsIGdyb3VwVHlwZTogR3JvdXBUeXBlKTogR3JvdXBNZW1iZXJzaGlwW10ge1xuXHRpZiAoZ3JvdXBUeXBlID09PSBHcm91cFR5cGUuVXNlcikge1xuXHRcdHJldHVybiBbdXNlci51c2VyR3JvdXBdXG5cdH0gZWxzZSB7XG5cdFx0cmV0dXJuIHVzZXIubWVtYmVyc2hpcHMuZmlsdGVyKChtKSA9PiBtLmdyb3VwVHlwZSA9PT0gZ3JvdXBUeXBlKVxuXHR9XG59XG5cbi8qKlxuICogUHJvdmlkZXMgdGhlIG5hbWUgaWYgYXZhaWxhYmxlLCBvdGhlcndpc2UgdGhlIGVtYWlsIGFkZHJlc3MgaWYgYXZhaWxhYmxlLCBvdGhlcndpc2UgYW4gZW1wdHkgc3RyaW5nLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0R3JvdXBJbmZvRGlzcGxheU5hbWUoZ3JvdXBJbmZvOiBHcm91cEluZm8pOiBzdHJpbmcge1xuXHRpZiAoZ3JvdXBJbmZvLm5hbWUpIHtcblx0XHRyZXR1cm4gZ3JvdXBJbmZvLm5hbWVcblx0fSBlbHNlIGlmIChncm91cEluZm8ubWFpbEFkZHJlc3MpIHtcblx0XHRyZXR1cm4gZ3JvdXBJbmZvLm1haWxBZGRyZXNzXG5cdH0gZWxzZSB7XG5cdFx0cmV0dXJuIFwiXCJcblx0fVxufVxuXG5leHBvcnQgZnVuY3Rpb24gY29tcGFyZUdyb3VwSW5mb3MoYTogR3JvdXBJbmZvLCBiOiBHcm91cEluZm8pOiBudW1iZXIge1xuXHRyZXR1cm4gZ2V0R3JvdXBJbmZvRGlzcGxheU5hbWUoYSkubG9jYWxlQ29tcGFyZShnZXRHcm91cEluZm9EaXNwbGF5TmFtZShiKSlcbn1cbiJdLCJtYXBwaW5ncyI6Ijs7O0FBSU8sU0FBUyxvQ0FBb0NBLFdBQWdDO0NBQ25GLElBQUksVUFBVSxVQUFVLG1CQUFtQixPQUFPLENBQUMsVUFBVSxNQUFNLFFBQVEsQ0FBQyxJQUFJLENBQUMsVUFBVSxNQUFNLFlBQVk7QUFDN0csS0FBSSxVQUFVLFlBQWEsU0FBUSxRQUFRLFVBQVUsWUFBWTtBQUNqRSxRQUFPO0FBQ1A7QUFLTSxTQUFTLHdCQUF3QkMsTUFBWUMsV0FBeUM7QUFDNUYsS0FBSSxjQUFjLFVBQVUsS0FDM0IsUUFBTyxDQUFDLEtBQUssU0FBVTtJQUV2QixRQUFPLEtBQUssWUFBWSxPQUFPLENBQUMsTUFBTSxFQUFFLGNBQWMsVUFBVTtBQUVqRTtBQUtNLFNBQVMsd0JBQXdCRixXQUE4QjtBQUNyRSxLQUFJLFVBQVUsS0FDYixRQUFPLFVBQVU7U0FDUCxVQUFVLFlBQ3BCLFFBQU8sVUFBVTtJQUVqQixRQUFPO0FBRVI7QUFFTSxTQUFTLGtCQUFrQkcsR0FBY0MsR0FBc0I7QUFDckUsUUFBTyx3QkFBd0IsRUFBRSxDQUFDLGNBQWMsd0JBQXdCLEVBQUUsQ0FBQztBQUMzRSJ9